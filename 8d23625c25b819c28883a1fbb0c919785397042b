{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "65c4b375_77fd4240",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2022-08-26T08:20:21Z",
      "side": 1,
      "message": "I see crash in online, added some comment - what I think is the reason (tested on non debug build)",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7336633_995a8d49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2022-08-26T08:22:02Z",
      "side": 1,
      "message": "or in case if pSet is owned and cleared by SfxSingleTabDialogController - then we don\u0027t need shared_ptr",
      "parentUuid": "65c4b375_77fd4240",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49228844_01fd598a",
        "filename": "sw/source/ui/config/optload.cxx",
        "patchSetId": 3
      },
      "lineNbr": 364,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2022-08-26T08:20:21Z",
      "side": 1,
      "message": "in this class we should keep shared_ptr as member to keep it alive",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0692d442_6d3b7d7c",
        "filename": "sw/source/ui/frmdlg/cption.cxx",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2022-08-26T08:20:21Z",
      "side": 1,
      "message": "pSet has to be a member of some class, later inside SfxSingleTabDialogController it is used only by inner pointer (pSet.get()) so shared ptr is destroyed after this block",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e377b3ed_b47f0afe",
        "filename": "sw/source/ui/frmdlg/cption.cxx",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 1003648
      },
      "writtenOn": "2022-08-26T08:24:06Z",
      "side": 1,
      "message": "Doesn\u0027t saving it in the runAsync solve this problem? I previously got a crash due to this, but I put it in the runAsync lambda to fix this",
      "parentUuid": "0692d442_6d3b7d7c",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44021280_928cb54b",
        "filename": "sw/source/ui/frmdlg/cption.cxx",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 1003648
      },
      "writtenOn": "2022-08-26T08:35:07Z",
      "side": 1,
      "message": "Update from call: No, it works in debug builds but not in production builds as production builds optimize out the pSet capture",
      "parentUuid": "e377b3ed_b47f0afe",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07f7fc5_f7503f2c",
        "filename": "sw/source/ui/frmdlg/cption.cxx",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2022-08-26T09:33:01Z",
      "side": 1,
      "message": "tested on debug build, also crashes, it\u0027s not because of pSet:\n\nlibswuilo.so!rtl::OUString::isEmpty(const rtl::OUString * this) (\u003cLOPATH\u003e/include/rtl/ustring.hxx:804)\nlibswuilo.so!SwCaptionOptPage::UpdateEntry(SwCaptionOptPage * this, int nSelEntry) (\u003cLOPATH\u003e/sw/source/ui/config/optload.cxx:694)\nlibswuilo.so!SwCaptionOptPage::ToggleEntryHdl(SwCaptionOptPage * this, const weld::TreeView::iter_col \u0026 rRowCol) (\u003cLOPATH\u003e/sw/source/ui/config/optload.cxx:768)\nlibswuilo.so!SwCaptionOptPage::LinkStubToggleEntryHdl(void * instance, const weld::TreeView::iter_col \u0026 data) (\u003cLOPATH\u003e/sw/source/ui/config/optload.cxx:766)\nlibvcllo.so!Link\u003cstd::pair\u003cweld::TreeIter const\u0026, int\u003e const\u0026, void\u003e::Call(const Link\u003cstd::pair\u003cweld::TreeIter const\u0026, int\u003e const\u0026, void\u003e * this, const std::pair\u003cweld::TreeIter const\u0026, int\u003e \u0026 data) (\u003cLOPATH\u003e/include/tools/link.hxx:111)\nlibvcllo.so!weld::TreeView::signal_toggled(weld::TreeView * this, const weld::TreeView::iter_col \u0026 rIterCol) (\u003cLOPATH\u003e/include/vcl/weld.hxx:907)\nlibvcllo.so!JSTreeView::set_toggle(JSTreeView * this, int pos, TriState eState, int col) (\u003cLOPATH\u003e/vcl/jsdialog/jsdialogbuilder.cxx:1595)\nlibswuilo.so!SwCaptionOptPage::Reset(SwCaptionOptPage * this, const SfxItemSet * rSet) (\u003cLOPATH\u003e/sw/source/ui/config/optload.cxx:580)\nlibsfxlo.so!SfxSingleTabDialogController::SetTabPage(SfxSingleTabDialogController * this, std::unique_ptr\u003cSfxTabPage, std::default_delete\u003cSfxTabPage\u003e \u003e xTabPage) (\u003cLOPATH\u003e/sfx2/source/dialog/basedlgs.cxx:259)\nlibswuilo.so!SwCaptionOptDlg::SwCaptionOptDlg(SwCaptionOptDlg * this, weld::Window * pParent, const std::shared_ptr\u003cSfxItemSet\u003e pSet) (\u003cLOPATH\u003e/sw/source/ui/config/optload.cxx:369)\nlibswuilo.so!__gnu_cxx::new_allocator\u003cSwCaptionOptDlg\u003e::construct\u003cSwCaptionOptDlg, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(__gnu_cxx::new_allocator\u003cSwCaptionOptDlg\u003e * this, SwCaptionOptDlg * __p, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/ext/new_allocator.h:136)\nlibswuilo.so!std::allocator_traits\u003cstd::allocator\u003cSwCaptionOptDlg\u003e \u003e::construct\u003cSwCaptionOptDlg, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(std::allocator_traits\u003cstd::allocator\u003cSwCaptionOptDlg\u003e \u003e::allocator_type \u0026 __a, SwCaptionOptDlg * __p, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/alloc_traits.h:475)\nlibswuilo.so!std::_Sp_counted_ptr_inplace\u003cSwCaptionOptDlg, std::allocator\u003cSwCaptionOptDlg\u003e, (__gnu_cxx::_Lock_policy)2\u003e::_Sp_counted_ptr_inplace\u003cweld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(std::_Sp_counted_ptr_inplace\u003cSwCaptionOptDlg, std::allocator\u003cSwCaptionOptDlg\u003e, __gnu_cxx::_S_atomic\u003e * this, std::allocator\u003cSwCaptionOptDlg\u003e __a, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/shared_ptr_base.h:526)\nlibswuilo.so!std::__shared_count\u003c(__gnu_cxx::_Lock_policy)2\u003e::__shared_count\u003cSwCaptionOptDlg, std::allocator\u003cSwCaptionOptDlg\u003e, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(std::__shared_count\u003c__gnu_cxx::_S_atomic\u003e * this, const std::allocator\u003cSwCaptionOptDlg\u003e \u0026 __a, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/shared_ptr_base.h:637)\nlibswuilo.so!std::__shared_ptr\u003cSwCaptionOptDlg, (__gnu_cxx::_Lock_policy)2\u003e::__shared_ptr\u003cstd::allocator\u003cSwCaptionOptDlg\u003e, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(std::__shared_ptr\u003cSwCaptionOptDlg, __gnu_cxx::_S_atomic\u003e * this, std::_Sp_make_shared_tag __tag, const std::allocator\u003cSwCaptionOptDlg\u003e \u0026 __a, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/shared_ptr_base.h:1294)\nlibswuilo.so!std::shared_ptr\u003cSwCaptionOptDlg\u003e::shared_ptr\u003cstd::allocator\u003cSwCaptionOptDlg\u003e, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(std::shared_ptr\u003cSwCaptionOptDlg\u003e * this, std::_Sp_make_shared_tag __tag, const std::allocator\u003cSwCaptionOptDlg\u003e \u0026 __a, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/shared_ptr.h:344)\nlibswuilo.so!std::allocate_shared\u003cSwCaptionOptDlg, std::allocator\u003cSwCaptionOptDlg\u003e, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(const std::allocator\u003cSwCaptionOptDlg\u003e \u0026 __a, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/shared_ptr.h:690)\nlibswuilo.so!std::make_shared\u003cSwCaptionOptDlg, weld::Dialog*, std::shared_ptr\u003cSfxItemSet\u003e\u0026\u003e(std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args, std::shared_ptr\u003cSfxItemSet\u003e \u0026 __args) (/usr/include/c++/7/bits/shared_ptr.h:706)\nlibswuilo.so!SwCaptionDialog::CaptionHdl(SwCaptionDialog * this) (\u003cLOPATH\u003e/sw/source/ui/frmdlg/cption.cxx:382)\nlibswuilo.so!SwCaptionDialog::LinkStubCaptionHdl(void * instance, weld::Button \u0026 data) (\u003cLOPATH\u003e/sw/source/ui/frmdlg/cption.cxx:379)",
      "parentUuid": "44021280_928cb54b",
      "revId": "8d23625c25b819c28883a1fbb0c919785397042b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}