{
  "comments": [
    {
      "key": {
        "uuid": "bf659307_2004124a",
        "filename": "shell/source/win32/SysShExec.cxx",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-08-01T09:38:28Z",
      "side": 1,
      "message": "wouldn\u0027t it be better to fix getSystemPathFromFileURL then?",
      "range": {
        "startLine": 318,
        "startChar": 37,
        "endLine": 318,
        "endChar": 90
      },
      "revId": "0934fb54f5c33345a8d00f151514d8f3aa6470bc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_c379a093",
        "filename": "shell/source/win32/SysShExec.cxx",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-01T11:22:51Z",
      "side": 1,
      "message": "Someone had made https://git.libreoffice.org/core/+/d3248d1fd83cca67a11dd593c124694382bf5f34 - and the commit message is not particularly telling ;-) - so I don\u0027t know what to expect and which consequences that might have.\n\nAnyway: getSystemPathFromFileURL not handling fragment looks rather correct to me; the fragment isn\u0027t a part of a filesystem path, while it is for URIs. And just dropping it would be ~dataloss. Actually, in this case, the URL with fragment is kept until the final call to ShellExecuteExW, because line 432 fails. And if ShellExecuteExW didn\u0027t itself convert file URLs to system filepath, the URL would reach LibreOffice, allowing to navigate to the fragment ...\n\nBy the way, the conversion to the system filepath in our code seems redundant then (but the conversion in ShellExecuteExW isn\u0027t documented, and I also don\u0027t know since when it happens...) If we could drop it, the fix to i#4789 would be redundant.",
      "parentUuid": "bf659307_2004124a",
      "range": {
        "startLine": 318,
        "startChar": 37,
        "endLine": 318,
        "endChar": 90
      },
      "revId": "0934fb54f5c33345a8d00f151514d8f3aa6470bc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_a3058cc4",
        "filename": "shell/source/win32/SysShExec.cxx",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-08-01T12:07:20Z",
      "side": 1,
      "message": "\u003e Someone had made https://git.libreoffice.org/core/+/d3248d1fd83cca67a11dd593c124694382bf5f34\n \u003e - and the commit message is not particularly telling ;-) - so I\n \u003e don\u0027t know what to expect and which consequences that might have.\n\nIndeed, that change is poorly documented, with \"handle\" apparently meaning \"reject as invalid\" in \"Handle URLs with query or fragment (or containing NUL chars)\".  (And at least technically file URLs don\u0027t support a query or fragment part, see \u003chttps://mailarchive.ietf.org/arch/msg/art/VnL3SxwPwFtWWoATm7cab02HFu0\u003e \"[art] Question regarding RFC 8089\".)  So while I wouldn\u0027t consider ignoring a fragment in getSystemPathFromFileURL as dataloss (as it would be ignored because it is just not relevant for extracting a system path from the URL), probably better indeed to keep the status quo and instead apply this change you came up with here.\n\n[...]\n\n \u003e By the way, the conversion to the system filepath in our code seems\n \u003e redundant then (but the conversion in ShellExecuteExW isn\u0027t\n \u003e documented, and I also don\u0027t know since when it happens...) If we\n \u003e could drop it, the fix to i#4789 would be redundant.\n\nI don\u0027t understand the above paragraph at all.",
      "parentUuid": "bf659307_c379a093",
      "range": {
        "startLine": 318,
        "startChar": 37,
        "endLine": 318,
        "endChar": 90
      },
      "revId": "0934fb54f5c33345a8d00f151514d8f3aa6470bc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_43cb5071",
        "filename": "shell/source/win32/SysShExec.cxx",
        "patchSetId": 2
      },
      "lineNbr": 318,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-01T12:49:13Z",
      "side": 1,
      "message": "\u003e\u003e By the way, the conversion to the system filepath in our code seems\n\u003e\u003e redundant then (but the conversion in ShellExecuteExW isn\u0027t\n\u003e\u003e documented, and I also don\u0027t know since when it happens...) If we\n\u003e\u003e could drop it, the fix to i#4789 would be redundant.\n\u003e I don\u0027t understand the above paragraph at all.\n\nWell - I meant that since ShellExecuteExW converts file URLs to system paths, then why do we try doing that? why not remove lines 429-434.\n\nWrt \"the fix to i#4789 would be redundant\" - that was a thinko. That fix (https://bz.apache.org/ooo/show_bug.cgi?id\u003d4789) wasn\u0027t about URLs, but about system paths passed to the function, so my idea is wrong wrt that.",
      "parentUuid": "bf659307_a3058cc4",
      "range": {
        "startLine": 318,
        "startChar": 37,
        "endLine": 318,
        "endChar": 90
      },
      "revId": "0934fb54f5c33345a8d00f151514d8f3aa6470bc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}