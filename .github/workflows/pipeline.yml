name: Run command in Docker and save artifact

on:
  push:
    branches:
      - master
      - user/grigorii/add-pipeline
  pull_request:
    branches:
      - master
      - user/grigorii/add-pipeline
  workflow_dispatch:

jobs:
  run-in-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run command in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace ubuntu:24.04 bash -c \
          "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
          git \
          build-essential \
          g++ \
          python3 \
          python3-pip \
          python3-dev \
          python3-setuptools \
          openjdk-17-jdk \
          autoconf \
          automake \
          libtool \
          pkg-config \
          libnss3-dev \
          libnspr4-dev \
          libxml2-utils \
          gperf \
          xsltproc \
          uuid-runtime \
          bison \
          flex \
          zip \
          libxrender-dev \
          libxt-dev \
          libcups2-dev \
          libxrandr-dev \
          libglu1-mesa-dev \
          libcairo2-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libpng-dev \
          libjpeg-dev \
          libtiff-dev \
          libgif-dev \
          libexpat1-dev \
          libssl-dev \
          libkrb5-dev \
          libldap2-dev \
          libdbus-1-dev \
          libharfbuzz-dev \
          libcurl4-openssl-dev \
          libxslt1-dev \
          ninja-build \
          meson \
          wget \
          curl && \
          "

#      - name: Upload result as artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: result
#          path: result.txt