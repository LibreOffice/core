{
  "comments": [
    {
      "key": {
        "uuid": "3fa0c359_7c750e98",
        "filename": "sd/source/ui/slideshow/slideshow.cxx",
        "patchSetId": 3
      },
      "lineNbr": 224,
      "author": {
        "id": 1002063
      },
      "writtenOn": "2019-04-27T04:25:57Z",
      "side": 1,
      "message": "it is just a debugging msg, that \"mxController is not clear before creating the new\", used by us(programmers) to restrict us from doing unexpected changes\n\n*No need to warn*, as mxController is over-written by a new controller whether or not it is cleared.\nassert - not required (above reason) as it is no such big deal.",
      "range": {
        "startLine": 224,
        "startChar": 3,
        "endLine": 224,
        "endChar": 15
      },
      "revId": "ae56599a589cc0248a703c95bfcdd7c23f50b1ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_9c7a5a86",
        "filename": "sd/source/ui/slideshow/slideshow.cxx",
        "patchSetId": 3
      },
      "lineNbr": 650,
      "author": {
        "id": 1002063
      },
      "writtenOn": "2019-04-27T04:25:57Z",
      "side": 1,
      "message": "mbIsInStartup is used to prevent multiple instances of the slideshow for a document.\nand assert should stop the program if some undesirable flag change happens.",
      "range": {
        "startLine": 650,
        "startChar": 4,
        "endLine": 650,
        "endChar": 10
      },
      "revId": "ae56599a589cc0248a703c95bfcdd7c23f50b1ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_6de1dafe",
        "filename": "sd/source/ui/slideshow/slideshow.cxx",
        "patchSetId": 3
      },
      "lineNbr": 650,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-04-29T08:11:47Z",
      "side": 1,
      "message": "The combination of\n\n  assert(!mbIsInStartup);\n  mbIsInStartup \u003d false;\n\ndoesn\u0027t make sense.  Either there is a guarantee that mbIsInStartup cannot be true here (so we can assert it), but then the second line is not needed.  Or there is no such guarantee, in which case we must not assert it.",
      "parentUuid": "3fa0c359_9c7a5a86",
      "range": {
        "startLine": 650,
        "startChar": 4,
        "endLine": 650,
        "endChar": 10
      },
      "revId": "ae56599a589cc0248a703c95bfcdd7c23f50b1ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_cdc4ae43",
        "filename": "sd/source/ui/slideshow/slideshow.cxx",
        "patchSetId": 3
      },
      "lineNbr": 650,
      "author": {
        "id": 1000006
      },
      "writtenOn": "2019-04-29T09:36:03Z",
      "side": 1,
      "message": "yeah. so let\u0027s kill the mbIsInStartup \u003d false line \u0026 see what\u0027s the fallout.",
      "parentUuid": "3fa0c359_6de1dafe",
      "range": {
        "startLine": 650,
        "startChar": 4,
        "endLine": 650,
        "endChar": 10
      },
      "revId": "ae56599a589cc0248a703c95bfcdd7c23f50b1ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}