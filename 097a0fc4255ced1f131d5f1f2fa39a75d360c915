{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "375a5d46_a53c6156",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-16T06:48:17Z",
      "side": 1,
      "message": "I can reproduce the failure somewhat reliably locally when I run UITest_writer_tests2 in an ASan+UBSan build when the machine is under heavy load (i.e., when I run that test as part of a parallelizing `make check`).  What appears to help is to stick an\n\n  xToolkit.processEventsToIdle()\n\ninto two strategic places.  I\u0027ll report back once I have robust data.",
      "revId": "097a0fc4255ced1f131d5f1f2fa39a75d360c915",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80913ede_ac09e089",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2021-12-16T08:50:22Z",
      "side": 1,
      "message": "Thank you for the advice! I have replaced the sleeps with that, and simplified the test. However i did not try the Asan+Ubsan build with parallel testing, so i do not know it will pass that or not. (I have windows and Linux is only available on a virtual machine, and the build time can be so long... :( )",
      "parentUuid": "375a5d46_a53c6156",
      "revId": "097a0fc4255ced1f131d5f1f2fa39a75d360c915",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2741bbc5_978da1ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-16T09:01:23Z",
      "side": 1,
      "message": "what I meant with my \"I\u0027ll report back once I have robust data\" is that I\u0027ll provide a patch that contains those\n\n  xToolkit.processEventsToIdle()\n\ncalls in exactly the two strategic places that appear to need them, according to my findings with my local test build",
      "parentUuid": "80913ede_ac09e089",
      "revId": "097a0fc4255ced1f131d5f1f2fa39a75d360c915",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e96c6b54_4c4804d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2021-12-16T09:06:03Z",
      "side": 1,
      "message": "oh i see. okay i\u0027ll wait for that.",
      "parentUuid": "2741bbc5_978da1ab",
      "revId": "097a0fc4255ced1f131d5f1f2fa39a75d360c915",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1472663a_387797fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-16T09:47:34Z",
      "side": 1,
      "message": "but my assumption was wrong, my local patch attempt\n\n  diff --git a/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py\n  b/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py index\n  7e219d8d7976..4e07b3eced57 100644 ---\n  a/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py +++\n  b/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py @@ -92,6 +92,9\n  @@ class ComplexGroupShapeTest(UITestCase):\n  self.ui_test.wait_until_child_is_available(\u0027metricfield\u0027)\n  xWriterEdit.executeAction(\"TYPE\", mkPropertyValues({\"KEYCODE\":\n  \"TAB\"}))\n   \n  + xToolkit \u003d\n  self.xContext.ServiceManager.createInstance(\u0027com.sun.star.awt.Toolkit\u0027)\n  + xToolkit.processEventsToIdle() + # check if it is a textbox\n  self.assertEqual(True,document.getCurrentSelection().getByIndex(0).TextBox)\n   \n  @@ -116,6 +119,8 @@ class ComplexGroupShapeTest(UITestCase):\n               xWriterEdit.executeAction(\"TYPE\",\n               mkPropertyValues({\"KEYCODE\": \"TAB\"}))\n               xWriterEdit.executeAction(\"TYPE\",\n               mkPropertyValues({\"KEYCODE\": \"TAB\"}))\n   \n  + xToolkit.processEventsToIdle() + # check if it is a textbox\n  self.assertEqual(True,document.getCurrentSelection().getByIndex(0).TextBox)\n   \n\nstill causes\n\n  ERROR: test_ComplexGroupShape (ComplexGroupShapeTest.ComplexGroupShapeTest)\n  ----------------------------------------------------------------------\n  Traceback (most recent call last):\n    File \"/home/sbergman/lo/core/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py\", line 125, in test_ComplexGroupShape\n      self.assertEqual(True,document.getCurrentSelection().getByIndex(0).TextBox)\n  AttributeError: TextBox",
      "parentUuid": "e96c6b54_4c4804d6",
      "revId": "097a0fc4255ced1f131d5f1f2fa39a75d360c915",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dea60996_3dfea067",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-16T09:50:40Z",
      "side": 1,
      "message": "[that last comment\u0027s formatting got garbled; lets try again:]\n\nbut my assumption was wrong, my local patch attempt\n\n  diff --git a/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py b/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py\n  index 7e219d8d7976..4e07b3eced57 100644\n  --- a/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py\n  +++ b/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py\n  @@ -92,6 +92,9 @@ class ComplexGroupShapeTest(UITestCase):\n               self.ui_test.wait_until_child_is_available(\u0027metricfield\u0027)\n               xWriterEdit.executeAction(\"TYPE\", mkPropertyValues({\"KEYCODE\": \"TAB\"}))\n   \n  +            xToolkit \u003d self.xContext.ServiceManager.createInstance(\u0027com.sun.star.awt.Toolkit\u0027)\n  +            xToolkit.processEventsToIdle()\n  +\n               # check if it is a textbox\n               self.assertEqual(True,document.getCurrentSelection().getByIndex(0).TextBox)\n   \n  @@ -116,6 +119,8 @@ class ComplexGroupShapeTest(UITestCase):\n               xWriterEdit.executeAction(\"TYPE\", mkPropertyValues({\"KEYCODE\": \"TAB\"}))\n               xWriterEdit.executeAction(\"TYPE\", mkPropertyValues({\"KEYCODE\": \"TAB\"}))\n   \n  +            xToolkit.processEventsToIdle()\n  +\n               # check if it is a textbox\n               self.assertEqual(True,document.getCurrentSelection().getByIndex(0).TextBox)\n   \n\nstill causes\n\n  ERROR: test_ComplexGroupShape (ComplexGroupShapeTest.ComplexGroupShapeTest)\n  ----------------------------------------------------------------------\n  Traceback (most recent call last):\n    File \"/home/sbergman/lo/core/sw/qa/uitest/writer_tests2/ComplexGroupShapeTest.py\", line 125, in test_ComplexGroupShape\n      self.assertEqual(True,document.getCurrentSelection().getByIndex(0).TextBox)\n  AttributeError: TextBox",
      "parentUuid": "1472663a_387797fe",
      "revId": "097a0fc4255ced1f131d5f1f2fa39a75d360c915",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}