{
  "comments": [
    {
      "key": {
        "uuid": "fa31d9ce_e7d64726",
        "filename": "external/python3/ExternalPackage_python3.mk",
        "patchSetId": 10
      },
      "lineNbr": 873,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-02-23T13:54:52Z",
      "side": 1,
      "message": "These two files (Makefile and pyconfig.h) don\u0027t look suitable to be included in installation sets (and, in extension, in instdir; instdir shall not contain anything that will not go into installation sets).  For example, for my local Linux build, instdir/program/python-core-3.5.4/lib/python3.5/config-3.5m/Makefile contains problematic lines like\n\n...\n\u003e abs_srcdir\u003d\t/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/python3\n\u003e abs_builddir\u003d\t/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/python3\n...\n\u003e CC\u003d\t\t/data/sbergman/llvm/inst/bin/clang -fcolor-diagnostics -fno-sanitize-recover\u003dall -I/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/openssl/include -I/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/openssl/include -I/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/expat/lib -pthread\n\u003e CXX\u003d\t\t/data/sbergman/llvm/inst/bin/clang++ -fcolor-diagnostics -fno-sanitize-recover\u003dall -fsized-deallocation -pthread\n...\n\u003e CONFIGURE_CFLAGS\u003d\t -I/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/zlib  \n...\n\u003e CONFIGURE_LDFLAGS\u003d\t-L/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/openssl -L/data/sbergman/lo-clang2/core/workdir/LinkTarget/StaticLibrary -L/data/sbergman/lo-clang2/core/workdir/LinkTarget/StaticLibrary\n...\n\u003e RUNSHARED\u003d       LD_LIBRARY_PATH\u003d/data/sbergman/lo-clang2/core/workdir/UnpackedTarball/python3\n...\n\nmentioning the position of my local build tree (instead of the position where the end user will install LO), and details of my CC/CXX compiler settings.  Likewise, instdir/program/python-core-3.5.4/include/python3.5m/pyconfig.h contains various HAVE_* information about my local system, when the installed version should presumably contain information about the end-user\u0027s system.",
      "revId": "215effc6de0e9523d605b95a400f3f17ad9b64f9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa31d9ce_47e8f3e2",
        "filename": "external/python3/ExternalPackage_python3.mk",
        "patchSetId": 10
      },
      "lineNbr": 873,
      "author": {
        "id": 1001814
      },
      "writtenOn": "2018-02-23T14:15:45Z",
      "side": 1,
      "message": "Well, that is what upstream python installs (and what we have in Linux distributions for instance), yes, it\u0027s unfortunate that they put all of that. I guess we can filter the content to only keep what is actually needed for setup.py (installation paths).",
      "parentUuid": "fa31d9ce_e7d64726",
      "revId": "215effc6de0e9523d605b95a400f3f17ad9b64f9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa31d9ce_07b51bed",
        "filename": "external/python3/ExternalPackage_python3.mk",
        "patchSetId": 10
      },
      "lineNbr": 873,
      "author": {
        "id": 1001814
      },
      "writtenOn": "2018-02-23T14:31:10Z",
      "side": 1,
      "message": "No, better yet, setting _PYTHON_PROJECT_BASE makes python understand that we are building an extension with an uninstalled python.",
      "parentUuid": "fa31d9ce_47e8f3e2",
      "revId": "215effc6de0e9523d605b95a400f3f17ad9b64f9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa31d9ce_4796334d",
        "filename": "external/python3/ExternalPackage_python3.mk",
        "patchSetId": 10
      },
      "lineNbr": 873,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2018-02-23T14:36:08Z",
      "side": 1,
      "message": "What kind of \"installation paths\"?  Doesn\u0027t that mean we\u0027ll end up installing for the end user files that mention paths specific to the original build machine?\n\nAnd would such stripped down files be useful in the installation set?  If there is a convention that a Python installation includes those Makefile and setup.py files, but we cannot at build-time generate such files with content that would be useful in the end-user\u0027s installation set, I think we better not include such files at all (rather than including stripped-down, broken versions that happened to be useful during the build).",
      "parentUuid": "fa31d9ce_47e8f3e2",
      "revId": "215effc6de0e9523d605b95a400f3f17ad9b64f9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}