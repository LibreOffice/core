{
  "comments": [
    {
      "key": {
        "uuid": "960adcb0_5ed348ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T08:54:10Z",
      "side": 1,
      "message": "If this is a real cut\u0027n\u0027paste, the common code should presumably rather be reused?  (But I assume that we will end up with no (substantial) cut\u0027n\u0027paste code.)",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f21e102d_c809be07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-04-23T09:48:59Z",
      "side": 1,
      "message": "given the need to change names, and drop one overload, I don\u0027t see it being practical",
      "parentUuid": "960adcb0_5ed348ab",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec8d398f_08b9d9bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T14:20:40Z",
      "side": 1,
      "message": "Then if it is not actually cut\u0027n\u0027paste, why claim so?",
      "parentUuid": "f21e102d_c809be07",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 40
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba00c0ce_2ebb159e",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T08:54:10Z",
      "side": 1,
      "message": "what is this needed for?",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b65335_1e49fffe",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-04-23T09:48:59Z",
      "side": 1,
      "message": "forward decl of the Reference class, used in detail.",
      "parentUuid": "ba00c0ce_2ebb159e",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116af0a0_4b62009d",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T14:20:40Z",
      "side": 1,
      "message": "but it is not used in detail?",
      "parentUuid": "62b65335_1e49fffe",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3803f914_8a2e4f40",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T08:54:10Z",
      "side": 1,
      "message": "make all this LIBO_INTERNAL_ONLY? (which also removes the need for the _MSC_VER\u003c1800 code below, and might even enable the \"could ultimately be based on C++11 std::is_base_of\" part)",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ede6527_9fdf6419",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-04-23T09:48:59Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "3803f914_8a2e4f40",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71f6c765_38450fa8",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T15:36:41Z",
      "side": 1,
      "message": "Re \"might even enable the \u0027could ultimately be based on C++11 std::is_base_of\u0027 part\":  At least with the uses in \u003chttps://gerrit.libreoffice.org/c/core/+/92694/3\u003e \"convert excel filter in calc from shared_ptr to rtl::Reference\" it should work to use\n\n  std::enable_if_t\u003cstd::is_base_of_v\u003creference_type, derived_type\u003e, int\u003e \u003d 0\n\ninstead of\n\n  typename detail::UpCast\u003c reference_type, derived_type \u003e::t \u003d 0\n\nin the definition of the new rtl::Reference ctor below.  (But where std::is_base_of requires the derived type to be complete in most scenarios, something that the UpCast variant appears to avoid.)",
      "parentUuid": "3ede6527_9fdf6419",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e66258fe_c2c6368e",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-24T09:33:44Z",
      "side": 1,
      "message": "(And FYI, I plan to replace the UpCast code with std::is_base_of for css::uno::Reference, even if that needs fixing lots of .cxx to make types complete (where the amount of required work is the reason I haven\u0027t finished it yet).  I came to the conclusion that relying on (in-)completeness of types in template instantiations is at best brittle and at worst an ODR violation.)",
      "parentUuid": "71f6c765_38450fa8",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff492ab0_01a651f7",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-26T20:39:29Z",
      "side": 1,
      "message": "(see \u003chttps://gerrit.libreoffice.org/c/core/+/92950\u003e \"Make upcasting css::uno::Reference ctor require complete types\")",
      "parentUuid": "e66258fe_c2c6368e",
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7883587c_69981bed",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T08:54:10Z",
      "side": 1,
      "message": "does that make sense for rtl::Reference?",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 42,
        "endChar": 29
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "213342f6_49c6880c",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-04-23T09:48:59Z",
      "side": 1,
      "message": "no, but I\u0027d have no idea how to fix that, this whole thing is magic to me",
      "parentUuid": "7883587c_69981bed",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 42,
        "endChar": 29
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f82eb26_ac406738",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T14:20:40Z",
      "side": 1,
      "message": "It\u0027s a matter of just not copy\u0027n\u0027paste\u0027ing the UpCast\u003cXInterface, T2\u003e specialization, as you already did.  So just update the documentation?",
      "parentUuid": "213342f6_49c6880c",
      "range": {
        "startLine": 40,
        "startChar": 3,
        "endLine": 42,
        "endChar": 29
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a53dfcb_f00f1fde",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T08:54:10Z",
      "side": 1,
      "message": "see above",
      "range": {
        "startLine": 140,
        "startChar": 56,
        "endLine": 142,
        "endChar": 17
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef6fe6d_ab2961f6",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-04-23T09:48:59Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "6a53dfcb_f00f1fde",
      "range": {
        "startLine": 140,
        "startChar": 56,
        "endLine": 142,
        "endChar": 17
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cacd23b_0af36621",
        "filename": "include/rtl/ref.hxx",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-04-23T14:20:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ef6fe6d_ab2961f6",
      "range": {
        "startLine": 140,
        "startChar": 56,
        "endLine": 142,
        "endChar": 17
      },
      "revId": "e0cd77bc64735b150402d213a8e1fb8aa75cbc7c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}