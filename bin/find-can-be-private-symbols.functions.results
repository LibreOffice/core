ATOB_AsciiToData@@NSS_3.2
ATOB_AsciiToData_Util@@NSSUTIL_3.12
ATOB_ConvertAsciiToItem@@NSS_3.2
ATOB_ConvertAsciiToItem_Util@@NSSUTIL_3.12
AddTokenFontName(rtl::OUString&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
AllSettings::AllSettings()
AllSettings::CopyData()
AllSettings::GetChangeFlags(AllSettings const&) const
AllSettings::GetHelpSettings() const
AllSettings::GetNeutralLocaleDataWrapper() const
AllSettings::GetSysLocale()
AllSettings::LocaleSettingsChanged(ConfigurationHints)
AllSettings::SetHelpSettings(HelpSettings const&)
AllSettings::Update(AllSettingsFlags, AllSettings const&)
AllSettings::operator!=(AllSettings const&) const
AllSettings::operator==(AllSettings const&) const
AlphaMask::AlphaMask()
AlphaMask::AlphaMask(AlphaMask const&)
AlphaMask::AlphaMask(AlphaMask&&)
AlphaMask::AlphaMask(Bitmap const&)
AlphaMask::AlphaMask(Size const&, unsigned char const*)
AlphaMask::GetBitmap() const
AlphaMask::operator=(Bitmap const&)
AlphaMask::~AlphaMask()
Animation::Adjust(short, short, short, short, short, double, bool)
Animation::Animation()
Animation::Animation(Animation const&)
Animation::Clear()
Animation::Convert(BmpConversion)
Animation::Draw(OutputDevice&, Point const&) const
Animation::Draw(OutputDevice&, Point const&, Size const&) const
Animation::GetChecksum() const
Animation::GetSizeBytes() const
Animation::IsTransparent() const
Animation::Mirror(BmpMirrorFlags)
Animation::ResetLoopCount()
Animation::Start(OutputDevice&, Point const&, Size const&, long, OutputDevice*)
Animation::Stop(OutputDevice const*, long)
Animation::operator=(Animation const&)
Animation::operator==(Animation const&) const
Animation::~Animation()
Application::AddKeyListener(Link<VclWindowEvent&, bool> const&)
Application::Application()
Application::DeInit()
Application::EnableBitmapRendering()
Application::EndAllDialogs()
Application::EndAllPopups()
Application::GetAppLocaleDataWrapper()
Application::GetDialogCancelMode()
Application::GetDispatchLevel()
Application::GetLastInputInterval()
Application::GetTopWindow(long)
Application::GetTopWindowCount()
Application::GetVCLToolkit()
Application::HandleKey(VclEventId, vcl::Window*, KeyEvent*)
Application::ImplCallEventListeners(VclSimpleEvent&)
Application::ImplCallEventListenersApplicationDataChanged(void*)
Application::InsertAccel(Accelerator*)
Application::IsBitmapRendering()
Application::IsInMain()
Application::IsInModalMode()
Application::LoadBrandBitmap(char const*, BitmapEx&)
Application::Main()
Application::RemoveAccel(Accelerator const*)
Application::RemoveKeyListener(Link<VclWindowEvent&, bool> const&)
Application::RemoveMouseAndKeyEvents(vcl::Window*)
Application::SetHelp(Help*)
Application::createFilePicker(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
Application::createFolderPicker(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
Application::setDeInitHook(Link<LinkParamNone*, void> const&)
Application::~Application()
AsWinding(SkPath const&, SkPath*)
Assistent::Assistent(int)
AsyncQuitHandler::AsyncQuitHandler()
AsyncQuitHandler::OnAsyncQuit(AsyncQuitHandler*, void*)
AsyncQuitHandler::QuitApplication()
AuthorCharAttr::AuthorCharAttr()
AutoFormatBase::AutoFormatBase()
AutoFormatBase::AutoFormatBase(AutoFormatBase const&)
AutoFormatBase::~AutoFormatBase()
AutoFormatVersions::AutoFormatVersions()
AutoIdle::AutoIdle(char const*)
B3dCamera::B3dCamera(basegfx::B3DPoint const&, basegfx::B3DVector const&, double, double)
B3dCamera::CalcFocalLength()
B3dCamera::CalcNewViewportValues()
B3dCamera::DeviceRectangleChange()
B3dCamera::~B3dCamera()
B3dTransformationSet::B3dTransformationSet()
B3dTransformationSet::CalcViewport()
B3dTransformationSet::DeviceRectangleChange()
B3dTransformationSet::EyeToWorldCoor(basegfx::B3DPoint const&)
B3dTransformationSet::Frustum(basegfx::B3DHomMatrix&, double, double, double, double, double, double)
B3dTransformationSet::GetProjection()
B3dTransformationSet::Orientation(basegfx::B3DHomMatrix&, basegfx::B3DPoint const&, basegfx::B3DVector, basegfx::B3DVector)
B3dTransformationSet::Ortho(basegfx::B3DHomMatrix&, double, double, double, double, double, double)
B3dTransformationSet::PostSetObjectTrans()
B3dTransformationSet::PostSetOrientation()
B3dTransformationSet::PostSetProjection()
B3dTransformationSet::Reset()
B3dTransformationSet::SetOrientation(basegfx::B3DPoint const&, basegfx::B3DVector const&, basegfx::B3DVector const&)
B3dTransformationSet::SetProjection(basegfx::B3DHomMatrix const&)
B3dTransformationSet::WorldToEyeCoor(basegfx::B3DPoint const&)
B3dTransformationSet::~B3dTransformationSet()
B3dViewport::B3dViewport()
B3dViewport::CalcOrientation()
B3dViewport::SetVUV(basegfx::B3DVector const&)
B3dViewport::~B3dViewport()
BTOA_ConvertItemToAscii@@NSS_3.2
BTOA_ConvertItemToAscii_Util@@NSSUTIL_3.12
BTOA_DataToAscii@@NSS_3.2
BTOA_DataToAscii_Util@@NSSUTIL_3.12
BasResLocale()
BasePrimitive2DImplBase::~BasePrimitive2DImplBase()
BasicDLL::BasicBreak()
BasicDLL::BasicDLL()
BasicDLL::EnableBreak(bool)
BasicDLL::SetDebugMode(bool)
BasicDLL::~BasicDLL()
BigInt::BigInt(BigInt const&)
BigInt::BigInt(double)
BigInt::BigInt(long)
BigInt::BigInt(rtl::OUString const&)
BigInt::BigInt(unsigned int)
BigInt::operator double() const
BigInt::operator%=(BigInt const&)
BigInt::operator-=(BigInt const&)
BigInt::operator=(BigInt const&)
BigPtrArray::BigPtrArray()
BigPtrArray::BlockDel(unsigned short)
BigPtrArray::Compress()
BigPtrArray::Index2Block(int) const
BigPtrArray::InsBlock(unsigned short)
BigPtrArray::Insert(BigPtrEntry*, int)
BigPtrArray::Move(int, int)
BigPtrArray::Remove(int, int)
BigPtrArray::Replace(int, BigPtrEntry*)
BigPtrArray::UpdIndex(unsigned short)
BigPtrArray::~BigPtrArray()
BinaryDataContainer::BinaryDataContainer()
BinaryDataContainer::BinaryDataContainer(std::unique_ptr<std::vector<unsigned char, std::allocator<unsigned char> >, std::default_delete<std::vector<unsigned char, std::allocator<unsigned char> > > >)
BinaryDataContainer::BinaryDataContainer(unsigned char const*, unsigned long)
BinaryDataContainer::calculateHash() const
Bitmap::AcquireInfoAccess()
Bitmap::AdaptBitCount(Bitmap&) const
Bitmap::Adjust(short, short, short, short, short, double, bool, bool)
Bitmap::Bitmap()
Bitmap::Bitmap(Bitmap const&)
Bitmap::Bitmap(Size const&, vcl::PixelFormat, BitmapPalette const*)
Bitmap::Bitmap(std::shared_ptr<SalBitmap> const&)
Bitmap::Blend(AlphaMask const&, Color const&)
Bitmap::CombineOr(Bitmap const&)
Bitmap::CopyPixel(tools::Rectangle const&, tools::Rectangle const&, Bitmap const*)
Bitmap::CopyPixel_AlphaOptimized(tools::Rectangle const&, tools::Rectangle const&, Bitmap const*)
Bitmap::CreateDisplayBitmap(OutputDevice*) const
Bitmap::CreateMask(Color const&, unsigned char) const
Bitmap::CreateRegion(Color const&, tools::Rectangle const&) const
Bitmap::Expand(int, int, Color const*)
Bitmap::Replace(AlphaMask const&, Color const&)
Bitmap::Replace(Bitmap const&, Color const&)
Bitmap::Replace(Color const&, Color const&, unsigned char)
Bitmap::Replace(Color const*, Color const*, unsigned long, unsigned char const*)
Bitmap::Rotate(o3tl::strong_int<short, FractionTag<10> >, Color const&)
Bitmap::operator==(Bitmap const&) const
Bitmap::~Bitmap()
BitmapAlphaClampFilter::execute(BitmapEx const&) const
BitmapBasicMorphologyFilter::BitmapBasicMorphologyFilter(BasicMorphologyOp, int)
BitmapBasicMorphologyFilter::BitmapBasicMorphologyFilter(BasicMorphologyOp, int, unsigned char)
BitmapBasicMorphologyFilter::filter(Bitmap const&) const
BitmapBasicMorphologyFilter::~BitmapBasicMorphologyFilter()
BitmapColorQuantizationFilter::execute(BitmapEx const&) const
BitmapConvolutionMatrixFilter::execute(BitmapEx const&) const
BitmapEmbossGreyFilter::execute(BitmapEx const&) const
BitmapEx::AdjustTransparency(unsigned char)
BitmapEx::BitmapEx()
BitmapEx::BitmapEx(Bitmap const&)
BitmapEx::BitmapEx(Bitmap const&, AlphaMask const&)
BitmapEx::BitmapEx(Bitmap const&, Bitmap const&)
BitmapEx::BitmapEx(Bitmap const&, Color const&)
BitmapEx::BitmapEx(BitmapEx const&)
BitmapEx::BitmapEx(BitmapEx const&, Point, Size)
BitmapEx::BitmapEx(Size, vcl::PixelFormat)
BitmapEx::BitmapEx(rtl::OUString const&)
BitmapEx::Clear()
BitmapEx::CombineMaskOr(Color, unsigned char)
BitmapEx::Draw(OutputDevice*, Point const&) const
BitmapEx::GetColorModel(com::sun::star::uno::Sequence<int>&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned char&)
BitmapEx::GetContour(bool, tools::Rectangle const*)
BitmapEx::ModifyBitmapEx(basegfx::BColorModifierStack const&) const
BitmapEx::Replace(Color const&, Color const&, unsigned char)
BitmapEx::Replace(Color const*, Color const*, unsigned long)
BitmapEx::Replace(Color const*, Color const*, unsigned long, unsigned char const*)
BitmapEx::ReplaceTransparency(Color const&)
BitmapEx::SetSizePixel(Size const&)
BitmapEx::getTransformed(basegfx::B2DHomMatrix const&, basegfx::B2DRange const&, double) const
BitmapEx::loadFromIconTheme(rtl::OUString const&)
BitmapEx::setAlphaFrom(unsigned char, signed char)
BitmapFilter::BitmapFilter()
BitmapFilter::~BitmapFilter()
BitmapFilterStackBlur::BitmapFilterStackBlur(int)
BitmapFilterStackBlur::execute(BitmapEx const&) const
BitmapFilterStackBlur::~BitmapFilterStackBlur()
BitmapInfoAccess::BitmapInfoAccess(Bitmap&, BitmapAccessMode)
BitmapInfoAccess::~BitmapInfoAccess()
BitmapMedianFilter::execute(BitmapEx const&) const
BitmapMonochromeFilter::execute(BitmapEx const&) const
BitmapMosaicFilter::execute(BitmapEx const&) const
BitmapPalette::BitmapPalette()
BitmapPalette::BitmapPalette(BitmapPalette const&)
BitmapPalette::BitmapPalette(BitmapPalette&&)
BitmapPalette::BitmapPalette(std::initializer_list<BitmapColor>)
BitmapPalette::BitmapPalette(unsigned short)
BitmapPalette::GetChecksum() const
BitmapPalette::IsGreyPalette8Bit() const
BitmapPalette::IsGreyPaletteAny() const
BitmapPalette::operator=(BitmapPalette&&)
BitmapPalette::operator==(BitmapPalette const&) const
BitmapPalette::~BitmapPalette()
BitmapPopArtFilter::execute(BitmapEx const&) const
BitmapReadAccess::BitmapReadAccess(Bitmap&, BitmapAccessMode)
BitmapReadAccess::~BitmapReadAccess()
BitmapSepiaFilter::execute(BitmapEx const&) const
BitmapShadowFilter::execute(BitmapEx const&) const
BitmapSharpenFilter::BitmapSharpenFilter()
BitmapSimpleColorQuantizationFilter::execute(BitmapEx const&) const
BitmapSmoothenFilter::execute(BitmapEx const&) const
BitmapSobelGreyFilter::execute(BitmapEx const&) const
BitmapSolarizeFilter::execute(BitmapEx const&) const
BitmapSymmetryCheck::BitmapSymmetryCheck()
BitmapSymmetryCheck::checkImpl(BitmapReadAccess const*)
BitmapSymmetryCheck::~BitmapSymmetryCheck()
BitmapWriteAccess::BitmapWriteAccess(Bitmap&)
BitmapWriteAccess::CopyScanline(long, BitmapReadAccess const&)
BitmapWriteAccess::CopyScanline(long, unsigned char const*, ScanlineFormat, unsigned int)
BitmapWriteAccess::DrawLine(Point const&, Point const&)
BitmapWriteAccess::SetFillColor()
BitmapWriteAccess::~BitmapWriteAccess()
BmpWriter(SvStream&, Graphic const&, FilterConfigItem*)
BorderWidthImpl::BorderWidthImpl(BorderWidthImplFlags, double, double, double)
BrowseBox::BrowseBox(vcl::Window*, long, BrowserMode)
BrowseBox::Clear()
BrowseBox::CreateAccessibleControl(int)
BrowseBox::Dispatch(unsigned short)
BrowseBox::DoHideCursor()
BrowseBox::DoShowCursor()
BrowseBox::DrawCursor()
BrowseBox::GetAccessibleControlCount() const
BrowseBox::GetCursorHideCount() const
BrowseBox::GoToColumnId(unsigned short, bool, bool)
BrowseBox::GoToRow(int, bool, bool)
BrowseBox::GrabTableFocus()
BrowseBox::ImplPaintData(OutputDevice&, tools::Rectangle const&, bool)
BrowseBox::IsFieldVisible(int, unsigned short, bool) const
BrowseBox::IsFrozen(unsigned short) const
BrowseBox::PaintData(vcl::Window const&, OutputDevice&, tools::Rectangle const&)
BrowseBox::ScrollColumns(int)
BrowseBox::ScrollRows(int)
BrowseBox::SetToggledSelectedColumn(unsigned short)
BrowseBox::StartScroll()
BrowseBox::ToggleSelectedColumn()
BrowseBox::commitBrowseBoxEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
BrowseBox::commitHeaderBarEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&, bool)
BrowseBox::commitTableEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
BrowseBox::getAccessibleFactory()
BrowseBox::isAccessibleAlive() const
BrowseBox::~BrowseBox()
BrowserHeader::BrowserHeader(BrowseBox*, long)
BrowserHeader::~BrowserHeader()
BuilderPage::BuilderPage(weld::Widget*, weld::DialogController*, rtl::OUString const&, rtl::OString const&, bool)
BuilderPage::~BuilderPage()
BuilderUtils::convertMnemonicMarkup(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
BuilderUtils::ensureDefaultWidthChars(std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
BuilderUtils::extractCustomProperty(std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
BuilderUtils::extractDropdown(std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
BuilderUtils::getRoleFromName(rtl::OString const&)
BuilderUtils::reorderWithinParent(std::vector<vcl::Window*, std::allocator<vcl::Window*> >&, bool)
BuilderUtils::reorderWithinParent(vcl::Window&, unsigned short)
BuilderUtils::set_properties(vcl::Window*, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
Button::Button(WindowType)
Button::GetButtonState()
Button::GetButtonState() const
Button::GetCustomButtonImage() const
Button::GetImageAlign() const
Button::GetModeImage() const
Button::HasImage() const
Button::IsSmallSymbol() const
Button::SetCommandHandler(rtl::OUString const&)
Button::SetCustomButtonImage(Image const&)
Button::SetImageAlign(ImageAlign)
Button::SetModeImage(Image const&)
Button::SetSmallSymbol()
Button::~Button()
ButtonSet::ButtonSet()
ButtonSet::exportButton(int, rtl::OUString const&, rtl::OUString const&)
ButtonSet::~ButtonSet()
CLuceneError::CLuceneError()
CLuceneError::CLuceneError(CLuceneError const&)
CLuceneError::CLuceneError(int, char const*, bool)
CLuceneError::CLuceneError(int, wchar_t const*, bool)
CLuceneError::set(int, char const*, bool)
CLuceneError::set(int, wchar_t const*, bool)
CLuceneError::twhat()
CLuceneError::~CLuceneError()
C_GetFunctionList@@NSS_3.1
C_GetFunctionList@@NSS_3.4
C_GetInterface@@NSS_3.52
C_GetInterfaceList@@NSS_3.52
CalendarField::CalendarField(vcl::Window*, long)
CalendarField::ShowDropDown(bool)
CalendarField::StateChanged(StateChangedType)
CalendarField::dispose()
CalendarField::~CalendarField()
CalendarWrapper::getAllCalendars(com::sun::star::lang::Locale const&) const
CalendarWrapper::getDateTime() const
CalendarWrapper::getDisplayString(int, short) const
CalendarWrapper::getFirstDayOfWeek() const
CalendarWrapper::getGenitiveMonths() const
CalendarWrapper::getLoadedCalendar() const
CalendarWrapper::getNumberOfDaysInWeek() const
CalendarWrapper::getPartitiveMonths() const
CalendarWrapper::getUniqueID() const
CalendarWrapper::getValue(short) const
CalendarWrapper::loadCalendar(rtl::OUString const&, com::sun::star::lang::Locale const&, bool)
CalendarWrapper::setDateTime(double)
CalendarWrapper::setLocalDateTime(double)
Camera3D::Camera3D()
Camera3D::Camera3D(basegfx::B3DPoint const&, basegfx::B3DPoint const&, double)
Camera3D::SetBankAngle(double)
Camera3D::SetLookAt(basegfx::B3DPoint const&)
CancelButton::CancelButton(vcl::Window*, long)
CancelButton::Click()
CharClass::CharClass(LanguageTag const&)
CharClass::CharClass(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, LanguageTag const&)
CharClass::getMyLocale() const
CharClass::~CharClass()
CheckBox::CalcMinimumSize(long) const
CheckBox::EnableTriState(bool)
CheckBox::GetCheckImage(AllSettings const&, DrawButtonFlags)
CheckBox::SetState(TriState)
CheckBox::Toggle()
CmapResult::CmapResult(bool, unsigned int const*, int)
CntByteItem::Clone(SfxItemPool*) const
CntByteItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
CntInt32Item::Clone(SfxItemPool*) const
CntUInt16Item::Clone(SfxItemPool*) const
CntUInt32Item::Clone(SfxItemPool*) const
CntUnencodedStringItem::Clone(SfxItemPool*) const
CodeCompleteOptions::CodeCompleteOptions()
CodeCompleteOptions::IsAutoCloseParenthesisOn()
CodeCompleteOptions::IsAutoCloseQuotesOn()
CodeCompleteOptions::IsAutoCorrectOn()
CodeCompleteOptions::IsCodeCompleteOn()
CodeCompleteOptions::IsExtendedTypeDeclaration()
CodeCompleteOptions::IsProcedureAutoCompleteOn()
CollatorResource::CollatorResource()
CollatorWrapper::CollatorWrapper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ColorListBox::ColorListBox(std::unique_ptr<weld::MenuButton, std::default_delete<weld::MenuButton> >, std::function<weld::Window* ()> const&)
ColorListBox::EnsurePaletteManager()
ColorListBox::LockWidthRequest()
ColorListBox::Selected(std::pair<Color, rtl::OUString> const&)
ColorListBox::ShowPreview(std::pair<Color, rtl::OUString> const&)
ColorListBox::createColorWindow()
ColorListBox::~ColorListBox()
ColorStatus::ColorStatus()
ColorStatus::GetColor()
ColorStatus::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
ColorStatus::~ColorStatus()
ColorWindow::ColorWindow(rtl::OUString const&, std::shared_ptr<PaletteManager> const&, ColorStatus&, unsigned short, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, MenuOrToolMenuButton const&, std::function<weld::Window* ()> const&, std::function<void (rtl::OUString const&, std::pair<Color, rtl::OUString> const&)> const&)
ColorWindow::GetAutoColor() const
ColorWindow::GetSelectEntryColor() const
ColorWindow::GetSelectEntryColor(ValueSet const*)
ColorWindow::GrabFocus()
ColorWindow::SelectEntry(Color const&)
ColorWindow::SelectEntry(std::pair<Color, rtl::OUString> const&)
ColorWindow::SelectValueSetEntry(SvxColorValueSet*, Color const&)
ColorWindow::ShowNoneButton()
ColorWindow::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
ColorWindow::~ColorWindow()
ComboBox::AdaptDropDownLineCountToMaximum()
ComboBox::AddSeparator(int)
ComboBox::CalcAdjustedSize(Size const&) const
ComboBox::CalcBlockSize(unsigned short, unsigned short) const
ComboBox::Clear()
ComboBox::DoubleClick()
ComboBox::DrawEntry(UserDrawEvent const&)
ComboBox::EnableAutoSize(bool)
ComboBox::EnableAutocomplete(bool, bool)
ComboBox::EnableUserDraw(bool)
ComboBox::GetDropDownEntryHeight() const
ComboBox::GetDropDownLineCount() const
ComboBox::GetEntryData(int) const
ComboBox::GetEntryImage(int) const
ComboBox::GetMRUEntries() const
ComboBox::GetMainWindow() const
ComboBox::GetMaxMRUCount() const
ComboBox::InsertEntry(rtl::OUString const&, int)
ComboBox::InsertEntryWithImage(rtl::OUString const&, Image const&, int)
ComboBox::IsAutoSizeEnabled() const
ComboBox::IsAutocompleteEnabled() const
ComboBox::IsDropDownBox() const
ComboBox::IsModifyByKeyboard() const
ComboBox::IsSyntheticModify() const
ComboBox::IsTravelSelect() const
ComboBox::IsUserDrawEnabled() const
ComboBox::RemoveEntryAt(int)
ComboBox::SetBorderStyle(WindowBorderStyle)
ComboBox::SetDropDownLineCount(unsigned short)
ComboBox::SetEntryActivateHdl(Link<Edit&, bool> const&)
ComboBox::SetEntryData(int, void*)
ComboBox::SetMRUEntries(rtl::OUString const&)
ComboBox::SetMaxMRUCount(int)
ComboBox::SetSelectHdl(Link<ComboBox&, void> const&)
ComboBox::SetUserDrawHdl(Link<UserDrawEvent*, void> const&)
ComboBox::SetUserItemSize(Size const&)
ComboBox::SetWidthInChars(int)
ComboBox::setMaxWidthChars(int)
ComboBox::~ComboBox()
CommandEvent::CommandEvent()
CommandEvent::CommandEvent(Point const&, CommandEventId, bool, void const*)
CommandEvent::GetAutoScrollData() const
CommandEvent::GetDialogData() const
CommandEvent::GetGestureData() const
CommandExtTextInputData::CommandExtTextInputData(CommandExtTextInputData const&)
CommandExtTextInputData::CommandExtTextInputData(rtl::OUString const&, ExtTextInputAttr const*, int, unsigned short, bool)
CommandExtTextInputData::~CommandExtTextInputData()
CommandWheelData::CommandWheelData()
CommandWheelData::CommandWheelData(long, long, double, CommandWheelMode, unsigned short, bool, bool)
CompressGraphicsDialog::Compress(SvStream&)
CompressGraphicsDialog::CompressGraphicsDialog(weld::Window*, Graphic const&, Size, tools::Rectangle const&, SfxBindings&)
CompressGraphicsDialog::CompressGraphicsDialog(weld::Window*, SdrGrafObj*, SfxBindings&)
CompressGraphicsDialog::GetSelectedInterpolationType() const
CompressGraphicsDialog::GetViewHeightInch() const
CompressGraphicsDialog::GetViewWidthInch() const
CompressGraphicsDialog::Initialize()
CompressGraphicsDialog::Update()
CompressGraphicsDialog::UpdateNewHeightMF()
CompressGraphicsDialog::UpdateNewWidthMF()
CompressGraphicsDialog::UpdateResolutionLB()
CompressGraphicsDialog::~CompressGraphicsDialog()
ConditionEdit::ConditionEdit(std::unique_ptr<weld::Entry, std::default_delete<weld::Entry> >)
ConditionEditDropTarget::ConditionEditDropTarget(ConditionEdit&)
Config::Config(rtl::OUString const&)
Config::~Config()
ContextChangeEventMultiplexer::GetModuleName(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
Control::AppendLayoutData(Control const&) const
Control::CallEventListeners(VclEventId, void*)
Control::Control(WindowType)
Control::Control(vcl::Window*, long)
Control::CreateLayoutData() const
Control::DrawControlText(OutputDevice&, tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >*, rtl::OUString*, Size const*) const
Control::GetControlTextRect(OutputDevice&, tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, Size*) const
Control::GetReferenceDevice() const
Control::GetUnzoomedControlPointFont() const
Control::HasLayoutData() const
Control::ImplCallEventListenersAndHandler(VclEventId, std::function<void ()> const&)
Control::SetLayoutDataParent(Control const*) const
Control::SetReferenceDevice(OutputDevice*)
Control::SetShowAccelerator(bool)
Control::ToRelativeLineIndex(long) const
Control::~Control()
CreateMainLoopThread(void (*)(void*), void*)
CreateSVHelpData()
CreateSVWinData()
CreateStarSymbolToMSMultiFont()
CurtisReidMeasure
CurtisReidScales
CustomToolBarImportHelper::CustomToolBarImportHelper(SfxObjectShell&, com::sun::star::uno::Reference<com::sun::star::ui::XUIConfigurationManager> const&)
CustomToolBarImportHelper::MSOTCIDToOOCommand(short)
CustomToolBarImportHelper::ScaleImage(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic>&, long)
CustomToolBarImportHelper::addIcon(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString const&)
CustomToolBarImportHelper::createCommandFromMacro(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
DSAU_DecodeDerSig@@NSS_3.2
DSAU_DecodeDerSigToLen@@NSS_3.9
DSAU_EncodeDerSig@@NSS_3.2
DSAU_EncodeDerSigWithLen@@NSS_3.9
DTLS_GetHandshakeTimeout@@NSS_3.14
DTLS_ImportFD@@NSS_3.14
Date::Date(Date::DateInitSystem)
Date::Date(com::sun::star::util::DateTime const&)
Date::GetAsNormalizedDays() const
Date::IsEndOfMonth(unsigned short, unsigned short, short)
Date::IsValidDate(unsigned short, unsigned short, short)
Date::Normalize(unsigned short&, unsigned short&, short&)
DateTime::CreateFromWin32FileDateTime(unsigned int, unsigned int)
DateTime::DateTime(DateTime::DateTimeInitSystem)
DateTime::DateTime(com::sun::star::util::DateTime const&)
DateTime::GetSecFromDateTime(Date const&) const
DateTime::GetWin32FileDateTime(unsigned int&, unsigned int&) const
DateTime::IsBetween(DateTime const&, DateTime const&) const
DbGridControl::AdjustDataSource(bool)
DbGridControl::AdjustRows()
DbGridControl::AlignSeekCursor()
DbGridControl::AppendNew()
DbGridControl::ConnectToFields()
DbGridControl::CreateColumn(unsigned short)
DbGridControl::DataSourcePropertyChanged(com::sun::star::beans::PropertyChangeEvent const&)
DbGridControl::DbGridControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, vcl::Window*, long)
DbGridControl::DisconnectFromFields()
DbGridControl::EnableHandle(bool)
DbGridControl::EnableNavigationBar(bool)
DbGridControl::EnablePermanentCursor(bool)
DbGridControl::FieldListenerDisposing(unsigned short)
DbGridControl::FieldValueChanged(unsigned short)
DbGridControl::GetCurrentRowCellText(DbGridColumn const*, tools::SvRef<DbGridRow> const&) const
DbGridControl::ImplInitWindow(InitWindowFacet)
DbGridControl::InsertHandleColumn()
DbGridControl::IsInsertionRow(int) const
DbGridControl::IsPermanentCursorEnabled() const
DbGridControl::MoveToFirst()
DbGridControl::MoveToLast()
DbGridControl::MoveToNext()
DbGridControl::MoveToPosition(unsigned int)
DbGridControl::MoveToPrev()
DbGridControl::RecalcRows(int, unsigned short, bool)
DbGridControl::RemoveColumn(unsigned short)
DbGridControl::RemoveColumns()
DbGridControl::RemoveRows(bool)
DbGridControl::RowInserted(int, int, bool)
DbGridControl::RowModified(int)
DbGridControl::RowRemoved(int, int, bool)
DbGridControl::SeekCursor(int, bool)
DbGridControl::SetCurrent(int)
DbGridControl::SetFilterMode(bool)
DbGridControl::StartDrag(signed char, Point const&)
DbGridControl::Undo()
DbGridControl::disposing(unsigned short)
DbGridControl::executeRowContextMenu(Point const&)
DbGridControl::implAdjustInSolarThread(bool)
DbGridControl::refreshController(unsigned short, DbGridControl::GrantControlAccess)
DbGridControl::resetCurrentRow()
DbGridControl::setDisplaySynchron(bool)
DbGridControl::~DbGridControl()
DbgSetTestSolarMutex(void (*)())
DbgTestSolarMutex()
DdeConnection::DdeConnection(rtl::OUString const&, rtl::OUString const&)
DdeConnection::GetServiceName() const
DdeConnection::GetTopicName() const
DdeConnection::~DdeConnection()
DdeData::DdeData()
DdeData::DdeData(DdeData const&)
DdeData::DdeData(DdeData&&)
DdeData::DdeData(rtl::OUString const&)
DdeData::DdeData(void const*, long, SotClipboardFormatId)
DdeData::GetFormat() const
DdeData::SetFormat(SotClipboardFormatId)
DdeData::getSize() const
DdeData::operator=(DdeData const&)
DdeData::operator=(DdeData&&)
DdeData::~DdeData()
DdeExecute::DdeExecute(DdeConnection&, rtl::OUString const&, long)
DdeGetPutItem::AdviseLoop(bool)
DdeGetPutItem::DdeGetPutItem(DdeItem const&)
DdeGetPutItem::DdeGetPutItem(rtl::OUString const&)
DdeGetPutItem::Get(SotClipboardFormatId)
DdeGetPutItem::Put(DdeData const*)
DdeHotLink::DdeHotLink(DdeConnection&, rtl::OUString const&)
DdeItem::DdeItem(DdeItem const&)
DdeItem::DdeItem(rtl::OUString const&)
DdeItem::NotifyClient()
DdeItem::~DdeItem()
DdeLink::DdeLink(DdeConnection&, rtl::OUString const&, long)
DdeLink::Notify()
DdeLink::~DdeLink()
DdePoke::DdePoke(DdeConnection&, rtl::OUString const&, DdeData const&, long)
DdeRequest::DdeRequest(DdeConnection&, rtl::OUString const&, long)
DdeService::AddFormat(SotClipboardFormatId)
DdeService::AddTopic(DdeTopic const&)
DdeService::DdeService(rtl::OUString const&)
DdeService::Formats()
DdeService::GetName() const
DdeService::GetServices()
DdeService::RemoveTopic(DdeTopic const&)
DdeService::Status()
DdeService::SysItems()
DdeService::Topics()
DdeService::~DdeService()
DdeTopic::AddItem(DdeItem const&)
DdeTopic::DdeTopic(rtl::OUString const&)
DdeTopic::Execute(rtl::OUString const*)
DdeTopic::Get(SotClipboardFormatId)
DdeTopic::GetName() const
DdeTopic::InsertItem(DdeItem*)
DdeTopic::MakeItem(rtl::OUString const&)
DdeTopic::Put(DdeData const*)
DdeTopic::RemoveItem(DdeItem const&)
DdeTopic::StartAdviseLoop()
DdeTopic::~DdeTopic()
DdeTransaction::Data(DdeData const*)
DdeTransaction::DdeTransaction(DdeConnection&, rtl::OUString const&, long)
DdeTransaction::Done(bool)
DdeTransaction::~DdeTransaction()
DecorationView::DecorationView(OutputDevice*)
DecorationView::DrawFrame(tools::Rectangle const&, Color const&, Color const&)
DecorationView::DrawHandle(tools::Rectangle const&)
DecorationView::DrawHighlightFrame(tools::Rectangle const&, DrawHighlightFrameStyle)
DecorationView::DrawSeparator(Point const&, Point const&, bool)
DestroySVHelpData(ImplSVHelpData*)
DestroySVWinData(ImplSVWinData*)
DevelopmentToolChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
DevelopmentToolChildWindow::DevelopmentToolChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
DevelopmentToolChildWindow::GetInfo() const
DevelopmentToolDockingWindow::DevelopmentToolDockingWindow(SfxBindings*, SfxChildWindow*, vcl::Window*)
DevelopmentToolDockingWindow::ToggleFloatingMode()
DevelopmentToolDockingWindow::changeToCurrentSelection()
DevelopmentToolDockingWindow::dispose()
DevelopmentToolDockingWindow::selectionChanged(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
DevelopmentToolDockingWindow::updateSelection()
DevelopmentToolDockingWindow::~DevelopmentToolDockingWindow()
DffPropSet::DffPropSet()
DffPropSet::InitializePropSet(unsigned short) const
DffPropSet::ReadPropSet(SvStream&, bool)
DffPropSet::~DffPropSet()
DffPropertyReader::ApplyCustomShapeGeometryAttributes(SvStream&, SfxItemSet&, DffObjData const&) const
DffPropertyReader::ApplyCustomShapeTextAttributes(SfxItemSet&) const
DffPropertyReader::ApplyFillAttributes(SvStream&, SfxItemSet&, DffObjData const&) const
DffPropertyReader::ApplyLineAttributes(SfxItemSet&, MSO_SPT) const
DffPropertyReader::CheckAndCorrectExcelTextRotation(SvStream&, SfxItemSet&, DffObjData const&) const
DffPropertyReader::DffPropertyReader(SvxMSDffManager const&)
DffPropertyReader::Fix16ToAngle(int)
DffPropertyReader::ImportGradientColor(SfxItemSet&, unsigned int, double, double) const
DffPropertyReader::SetDefaultPropSet(SvStream&, unsigned int) const
DffPropertyReader::~DffPropertyReader()
DffRecordManager::Clear()
DffRecordManager::Consume(SvStream&, unsigned int)
DffRecordManager::DffRecordManager()
DffRecordManager::DffRecordManager(SvStream&)
DffRecordManager::First()
DffRecordManager::Last()
DffRecordManager::Next()
DffRecordManager::Prev()
Dialog::Dialog(WindowType)
Dialog::Dialog(vcl::Window*, long, Dialog::InitFlag)
Dialog::Dialog(vcl::Window*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
Dialog::EndDialog(long)
Dialog::Execute()
Dialog::GetDrawWindowBorder(int&, int&, int&, int&) const
Dialog::GrabFocusToFirstControl()
Dialog::ImplEndExecuteModal()
Dialog::ImplInitDialog(vcl::Window*, long, Dialog::InitFlag)
Dialog::ImplLOKNotifier(vcl::Window*)
Dialog::ImplSetModalInputMode(bool)
Dialog::ImplStartExecute()
Dialog::SetInstallLOKNotifierHdl(Link<void*, vcl::ILibreOfficeKitNotifier*> const&)
Dialog::SetLOKTunnelingState(bool)
Dialog::SetModalInputMode(bool)
Dialog::SetPopupMenuHdl(Link<CommandEvent const&, bool> const&)
Dialog::StartExecuteAsync(VclAbstractDialog::AsyncContext&)
Dialog::add_button(PushButton*, int, bool)
Dialog::get_default_response() const
Dialog::get_widget_for_response(int)
Dialog::set_action_area(VclButtonBox*)
Dialog::set_content_area(VclBox*)
Dialog::set_default_response(int)
Dialog::~Dialog()
DialogGalleryPreview::DialogGalleryPreview()
DialogGalleryPreview::SetDrawingArea(weld::DrawingArea*)
DockingManager::AddWindow(vcl::Window const*)
DockingManager::DockingManager()
DockingManager::EndPopupMode(vcl::Window const*)
DockingManager::GetDockingWindowWrapper(vcl::Window const*)
DockingManager::GetFloatingWindow(vcl::Window const*)
DockingManager::GetPosSizePixel(vcl::Window const*)
DockingManager::IsDockable(vcl::Window const*)
DockingManager::IsFloating(vcl::Window const*)
DockingManager::IsInPopupMode(vcl::Window const*)
DockingManager::IsLocked(vcl::Window const*)
DockingManager::Lock(vcl::Window const*)
DockingManager::RemoveWindow(vcl::Window const*)
DockingManager::SetFloatingMode(vcl::Window const*, bool)
DockingManager::SetPopupModeEndHdl(vcl::Window const*, Link<FloatingWindow*, void> const&)
DockingManager::SetPosSizePixel(vcl::Window const*, long, long, long, long, PosSizeFlags)
DockingManager::StartPopupMode(ToolBox*, vcl::Window const*)
DockingManager::StartPopupMode(ToolBox*, vcl::Window const*, FloatWinPopupFlags)
DockingManager::StartPopupMode(vcl::Window const*, tools::Rectangle const&, FloatWinPopupFlags)
DockingManager::Unlock(vcl::Window const*)
DockingManager::~DockingManager()
DockingWindow::DockingWindow(WindowType, char const*)
DockingWindow::DockingWindow(vcl::Window*, long, char const*)
DockingWindow::DockingWindow(vcl::Window*, rtl::OString const&, rtl::OUString const&, char const*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
DockingWindow::GetFloatStyle() const
DockingWindow::GetFloatingPos() const
DockingWindow::ImplStartDocking(Point const&)
DockingWindow::SetFloatStyle(long)
DockingWindow::SetFloatingMode(bool)
DockingWindow::SetFloatingPos(Point const&)
DockingWindow::SetMaxOutputSizePixel(Size const&)
DockingWindow::SetMinOutputSizePixel(Size const&)
DockingWindow::isLayoutEnabled() const
DockingWindow::loadUI(vcl::Window*, rtl::OString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
DockingWindow::setOptimalLayoutSize()
DockingWindow::~DockingWindow()
DocumentSignatureManager::DocumentSignatureManager(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, DocumentSignatureMode)
DocumentSignatureManager::ImplOpenSignatureStream(int, bool)
DocumentSignatureManager::getGpgSecurityContext() const
DocumentSignatureManager::getGpgSecurityEnvironment()
DocumentSignatureManager::getSecurityContext() const
DocumentSignatureManager::isXML(rtl::OUString const&)
DocumentSignatureManager::readManifest()
DocumentSignatureManager::setModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
DocumentSignatureManager::~DocumentSignatureManager()
DocumentToGraphicRenderer::DocumentToGraphicRenderer(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&, bool)
DocumentToGraphicRenderer::getCurrentPageWriter()
DocumentToGraphicRenderer::getPageCount()
DocumentToGraphicRenderer::getSelection() const
DocumentToGraphicRenderer::hasSelection() const
DocumentToGraphicRenderer::isCalc() const
DocumentToGraphicRenderer::isImpress() const
DocumentToGraphicRenderer::isWriter() const
DocumentToGraphicRenderer::~DocumentToGraphicRenderer()
DragSourceHelper::DragSourceHelper(vcl::Window*)
DragSourceHelper::StartDrag(signed char, Point const&)
DragSourceHelper::~DragSourceHelper()
DrawingAreaUIObject::DrawingAreaUIObject(VclPtr<vcl::Window> const&)
DrawingAreaUIObject::create(vcl::Window*)
DrawingAreaUIObject::~DrawingAreaUIObject()
DriverBlocklist::GetVendorNameFromId(unsigned int)
DriverBlocklist::IsDeviceBlocked(rtl::OUString const&, DriverBlocklist::VersionType, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
DriverBlocklist::Parser::Parser(rtl::OUString const&, std::vector<DriverBlocklist::DriverInfo, std::allocator<DriverBlocklist::DriverInfo> >&, DriverBlocklist::VersionType)
DriverBlocklist::Parser::getVersion(std::basic_string_view<char, std::char_traits<char> >)
DriverBlocklist::Parser::handleContent(xmlreader::XmlReader&)
DriverBlocklist::Parser::handleDevices(DriverBlocklist::DriverInfo&, xmlreader::XmlReader&)
DriverBlocklist::Parser::handleEntry(DriverBlocklist::DriverInfo&, xmlreader::XmlReader&)
DriverBlocklist::Parser::handleList(xmlreader::XmlReader&)
DropTargetHelper::AcceptDrop(AcceptDropEvent const&)
DropTargetHelper::DropTargetHelper(com::sun::star::uno::Reference<com::sun::star::datatransfer::dnd::XDropTarget> const&)
DropTargetHelper::DropTargetHelper(vcl::Window*)
DropTargetHelper::ExecuteDrop(ExecuteDropEvent const&)
DropTargetHelper::ImplBeginDrag(com::sun::star::uno::Sequence<com::sun::star::datatransfer::DataFlavor> const&)
DropTargetHelper::ImplConstruct()
DropTargetHelper::ImplEndDrag()
DropTargetHelper::~DropTargetHelper()
DropdownDockingWindow::DropdownDockingWindow(vcl::Window*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, bool)
DropdownDockingWindow::dispose()
DropdownDockingWindow::~DropdownDockingWindow()
DynamicErrorInfo::DynamicErrorInfo(ErrCode, DialogMask)
DynamicErrorInfo::GetDialogMask() const
DynamicErrorInfo::~DynamicErrorInfo()
E3DModifySceneSnapRectUpdater::E3DModifySceneSnapRectUpdater(SdrObject const*)
E3DModifySceneSnapRectUpdater::~E3DModifySceneSnapRectUpdater()
E3dAttributesUndoAction::CanRepeat(SfxRepeatTarget&) const
E3dAttributesUndoAction::E3dAttributesUndoAction(E3dObject&, SfxItemSet const&, SfxItemSet const&)
E3dAttributesUndoAction::Redo()
E3dAttributesUndoAction::Undo()
E3dAttributesUndoAction::~E3dAttributesUndoAction()
E3dCompoundObject::AddToHdlList(SdrHdlList&) const
E3dCompoundObject::CloneSdrObject(SdrModel&) const
E3dCompoundObject::CreateObjectSpecificProperties()
E3dCompoundObject::E3dCompoundObject(SdrModel&)
E3dCompoundObject::E3dCompoundObject(SdrModel&, E3dCompoundObject const&)
E3dCompoundObject::GetHdlCount() const
E3dCompoundObject::GetObjIdentifier() const
E3dCompoundObject::RecalcSnapRect()
E3dCompoundObject::TakeXorPoly() const
E3dCompoundObject::TransformToScreenCoor(basegfx::B3DPolyPolygon const&) const
E3dCompoundObject::~E3dCompoundObject()
E3dCubeObj::CloneSdrObject(SdrModel&) const
E3dCubeObj::CreateObjectSpecificViewContact()
E3dCubeObj::DoConvertToPolyObj(bool, bool) const
E3dCubeObj::E3dCubeObj(SdrModel&)
E3dCubeObj::E3dCubeObj(SdrModel&, E3dCubeObj const&)
E3dCubeObj::E3dCubeObj(SdrModel&, E3dDefaultAttributes const&, basegfx::B3DPoint const&, basegfx::B3DVector const&)
E3dCubeObj::GetObjIdentifier() const
E3dCubeObj::SetCubePos(basegfx::B3DPoint const&)
E3dCubeObj::SetCubeSize(basegfx::B3DVector const&)
E3dCubeObj::SetDefaultAttributes(E3dDefaultAttributes const&)
E3dCubeObj::SetPosIsCenter(bool)
E3dCubeObj::TakeObjNamePlural() const
E3dCubeObj::TakeObjNameSingul() const
E3dCubeObj::~E3dCubeObj()
E3dLatheObj::CloneSdrObject(SdrModel&) const
E3dLatheObj::CreateObjectSpecificProperties()
E3dLatheObj::CreateObjectSpecificViewContact()
E3dLatheObj::DoConvertToPolyObj(bool, bool) const
E3dLatheObj::E3dLatheObj(SdrModel&)
E3dLatheObj::E3dLatheObj(SdrModel&, E3dDefaultAttributes const&, basegfx::B2DPolyPolygon const&)
E3dLatheObj::E3dLatheObj(SdrModel&, E3dLatheObj const&)
E3dLatheObj::GetBreakObj()
E3dLatheObj::GetObjIdentifier() const
E3dLatheObj::IsBreakObjPossible()
E3dLatheObj::SetDefaultAttributes(E3dDefaultAttributes const&)
E3dLatheObj::SetPolyPoly2D(basegfx::B2DPolyPolygon const&)
E3dLatheObj::TakeObjNamePlural() const
E3dLatheObj::TakeObjNameSingul() const
E3dLatheObj::~E3dLatheObj()
E3dObjFactory::E3dObjFactory()
E3dObjFactory::~E3dObjFactory()
E3dObject::CloneSdrObject(SdrModel&) const
E3dObject::CreateObjectSpecificProperties()
E3dObject::E3dObject(SdrModel&)
E3dObject::E3dObject(SdrModel&, E3dObject const&)
E3dObject::GetBreakObj()
E3dObject::GetFullTransform() const
E3dObject::GetObjIdentifier() const
E3dObject::GetObjInventor() const
E3dObject::InvalidateBoundVolume()
E3dObject::IsBreakObjPossible()
E3dObject::NbcMove(Size const&)
E3dObject::NbcResize(Point const&, Fraction const&, Fraction const&)
E3dObject::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
E3dObject::NbcSetTransform(basegfx::B3DHomMatrix const&)
E3dObject::NewGeoData() const
E3dObject::RecalcBoundVolume() const
E3dObject::RecalcSnapRect()
E3dObject::RestoreGeoData(SdrObjGeoData const&)
E3dObject::SaveGeoData(SdrObjGeoData&) const
E3dObject::SetSelected(bool)
E3dObject::SetTransform(basegfx::B3DHomMatrix const&)
E3dObject::SetTransformChanged()
E3dObject::StructureChanged()
E3dObject::TakeObjInfo(SdrObjTransformInfoRec&) const
E3dObject::TakeObjNamePlural() const
E3dObject::TakeObjNameSingul() const
E3dObject::getParentE3dSceneFromE3dObject() const
E3dObject::getRootE3dSceneFromE3dObject() const
E3dObject::~E3dObject()
E3dScene::BckCreate(SdrDragStat&)
E3dScene::BegCreate(SdrDragStat&)
E3dScene::BrkCreate(SdrDragStat&)
E3dScene::CloneSdrObject(SdrModel&) const
E3dScene::CreateObjectSpecificProperties()
E3dScene::CreateObjectSpecificViewContact()
E3dScene::E3dScene(SdrModel&)
E3dScene::E3dScene(SdrModel&, E3dScene const&)
E3dScene::EndCreate(SdrDragStat&, SdrCreateCmd)
E3dScene::GetObjIdentifier() const
E3dScene::GetSubList() const
E3dScene::ImpCleanup3DDepthMapper()
E3dScene::InsertObject(SdrObject*, unsigned long)
E3dScene::IsBreakObjPossible()
E3dScene::MovCreate(SdrDragStat&)
E3dScene::NbcInsertObject(SdrObject*, unsigned long)
E3dScene::NbcMove(Size const&)
E3dScene::NbcRemoveObject(unsigned long)
E3dScene::NbcResize(Point const&, Fraction const&, Fraction const&)
E3dScene::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
E3dScene::NbcSetLayer(o3tl::strong_int<unsigned char, SdrLayerIDTag>)
E3dScene::NbcSetTransform(basegfx::B3DHomMatrix const&)
E3dScene::NewGeoData() const
E3dScene::Notify(SfxBroadcaster&, SfxHint const&)
E3dScene::RebuildLists()
E3dScene::RecalcBoundVolume() const
E3dScene::RecalcSnapRect()
E3dScene::RemapOrdNum(unsigned int) const
E3dScene::RemoveObject(unsigned long)
E3dScene::RestoreGeoData(SdrObjGeoData const&)
E3dScene::RotateScene(Point const&, double, double)
E3dScene::SaveGeoData(SdrObjGeoData&) const
E3dScene::SetBoundRectDirty()
E3dScene::SetDefaultAttributes()
E3dScene::SetSelected(bool)
E3dScene::SetTransformChanged()
E3dScene::StructureChanged()
E3dScene::TakeCreatePoly(SdrDragStat const&) const
E3dScene::TakeObjNamePlural() const
E3dScene::TakeObjNameSingul() const
E3dScene::TakeXorPoly() const
E3dScene::getChildrenOfSdrObject() const
E3dScene::getSdrObjectFromSdrObjList() const
E3dScene::getSdrPageFromSdrObjList() const
E3dScene::handlePageChange(SdrPage*, SdrPage*)
E3dScene::removeAllNonSelectedObjects()
E3dScene::~E3dScene()
E3dSphereObj::CloneSdrObject(SdrModel&) const
E3dSphereObj::CreateObjectSpecificProperties()
E3dSphereObj::CreateObjectSpecificViewContact()
E3dSphereObj::DoConvertToPolyObj(bool, bool) const
E3dSphereObj::E3dSphereObj(SdrModel&)
E3dSphereObj::E3dSphereObj(SdrModel&, E3dDefaultAttributes const&, basegfx::B3DPoint const&, basegfx::B3DVector const&)
E3dSphereObj::E3dSphereObj(SdrModel&, E3dSphereObj const&)
E3dSphereObj::GetObjIdentifier() const
E3dSphereObj::SetCenter(basegfx::B3DPoint const&)
E3dSphereObj::SetDefaultAttributes(E3dDefaultAttributes const&)
E3dSphereObj::SetSize(basegfx::B3DVector const&)
E3dSphereObj::TakeObjNamePlural() const
E3dSphereObj::TakeObjNameSingul() const
E3dSphereObj::~E3dSphereObj()
E3dView::BreakSingle3DObj(E3dObject*)
E3dView::DoDepthArrange(E3dScene const*, double)
E3dView::E3dView(SdrModel&, OutputDevice*)
E3dView::ImpChangeSomeAttributesFor3DConversion(SdrObject*)
E3dView::ImpChangeSomeAttributesFor3DConversion2(SdrObject*)
E3dView::ImpCloneAll3DObjectsToDestScene(E3dScene const*, E3dScene*, Point)
E3dView::ImpCreate3DObject(E3dScene*, SdrObject*, bool, double, basegfx::B2DHomMatrix const&)
E3dView::ImpCreateSingle3DObjectFlat(E3dScene*, SdrObject*, bool, double, basegfx::B2DHomMatrix const&)
E3dView::ImpIsConvertTo3DPossible(SdrObject const*, bool&, bool&) const
E3dView::InitScene(E3dScene*, double, double, double)
E3dView::InitView()
E3dView::~E3dView()
EFieldInfo::EFieldInfo()
EFieldInfo::EFieldInfo(EFieldInfo const&)
EFieldInfo::EFieldInfo(SvxFieldItem const&, int, int)
EFieldInfo::operator=(EFieldInfo const&)
EFieldInfo::~EFieldInfo()
Edit::CreatePopupMenu()
Edit::Edit(WindowType)
Edit::GetMaxVisChars() const
Edit::IsCharInput(KeyEvent const&)
Edit::IsInsertMode() const
Edit::SetCursorAtLast()
Edit::SetEchoChar(char16_t)
Edit::SetInsertMode(bool)
Edit::SetPlaceholderText(rtl::OUString const&)
Edit::SetSubEdit(Edit*)
Edit::SetWidthInChars(int)
Edit::ShowTruncationWarning(weld::Widget*)
Edit::Undo()
Edit::setMaxWidthChars(int)
Edit::~Edit()
EditAbstractDialogFactory::Create()
EditAbstractDialogFactory::~EditAbstractDialogFactory()
EditEngine::AppendDeletedNodeInfo(DeletedNodeInfo*)
EditEngine::CallHtmlImportHandler(HtmlImportInfo&)
EditEngine::CallRtfImportHandler(RtfImportInfo&)
EditEngine::ClearOverflowingParaNum()
EditEngine::ClearPolygon()
EditEngine::ConnectContents(int, bool)
EditEngine::ConnectParagraphs(ContentNode*, ContentNode*, bool)
EditEngine::CreateESelection(EditSelection const&) const
EditEngine::CreateEditPaM(EPaM const&)
EditEngine::CreateFontFromItemSet(SfxItemSet const&, SvtScriptType)
EditEngine::CreateSelection(ESelection const&)
EditEngine::CreateSvxFontFromItemSet(SfxItemSet const&)
EditEngine::CursorLeft(EditPaM const&, unsigned short)
EditEngine::CursorRight(EditPaM const&, unsigned short)
EditEngine::DeleteSelected(EditSelection const&)
EditEngine::DeleteSelection(EditSelection const&)
EditEngine::Draw(OutputDevice&, tools::Rectangle const&)
EditEngine::FindParagraph(long)
EditEngine::GetActiveView() const
EditEngine::GetAutoColor() const
EditEngine::GetBackgroundColor() const
EditEngine::GetBaseParaAttribs(int) const
EditEngine::GetBeginDropHdl() const
EditEngine::GetCharacterBounds(EPosition const&) const
EditEngine::GetDefaultHorizontalTextDirection() const
EditEngine::GetDocPos(Point const&) const
EditEngine::GetDocPosTopLeft(int)
EditEngine::GetEditDoc()
EditEngine::GetEditDoc() const
EditEngine::GetEditViews()
EditEngine::GetEditViews() const
EditEngine::GetEmptyTextObject() const
EditEngine::GetEndDropHdl() const
EditEngine::GetFirstLineStartX(int)
EditEngine::GetGlobalCharStretching(unsigned short&, unsigned short&) const
EditEngine::GetLanguage(EditPaM const&) const
EditEngine::GetLanguage(int, int) const
EditEngine::GetLineBoundaries(int&, int&, int, int) const
EditEngine::GetLineLen(int, int) const
EditEngine::GetLineNumberAtIndex(int, int) const
EditEngine::GetMaxAutoPaperSize() const
EditEngine::GetMinAutoPaperSize() const
EditEngine::GetModifyHdl() const
EditEngine::GetOverflowingLineNum() const
EditEngine::GetOverflowingParaNum() const
EditEngine::GetParaAttrib(int, unsigned short) const
EditEngine::GetParaBounds(int)
EditEngine::GetParaPortions()
EditEngine::GetParaPortions() const
EditEngine::GetParagraphInfos(int)
EditEngine::GetRotation() const
EditEngine::GetScriptType(ESelection const&) const
EditEngine::GetScriptType(EditSelection const&) const
EditEngine::GetSelected(EditSelection const&) const
EditEngine::GetSpeller()
EditEngine::GetStandardSvxFont(int)
EditEngine::GetStatusEventHdl() const
EditEngine::GetStyleSheet(int)
EditEngine::GetStyleSheet(int) const
EditEngine::GetStyleSheetPool()
EditEngine::GetTextHeight(int) const
EditEngine::GetTextHeightNTP() const
EditEngine::GetVertical() const
EditEngine::HasParaAttrib(int, unsigned short) const
EditEngine::HasText(SvxSearchItem const&)
EditEngine::InsertContent(ContentNode*, int)
EditEngine::InsertFeature(EditSelection const&, SfxPoolItem const&)
EditEngine::InsertField(EditSelection const&, SvxFieldItem const&)
EditEngine::InsertLineBreak(EditSelection const&)
EditEngine::InsertParaBreak(EditSelection const&)
EditEngine::InsertParagraph(int, EditTextObject const&, bool)
EditEngine::InsertText(EditSelection const&, rtl::OUString const&)
EditEngine::InsertText(EditTextObject const&, EditSelection const&)
EditEngine::InsertText(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&, rtl::OUString const&, EditPaM const&, bool)
EditEngine::IsCallParaInsertedOrDeleted() const
EditEngine::IsForceAutoColor() const
EditEngine::IsFormatted() const
EditEngine::IsHtmlImportHandlerSet() const
EditEngine::IsImportRTFStyleSheetsSet() const
EditEngine::IsInSelectionMode() const
EditEngine::IsInUndo() const
EditEngine::IsPageOverflow()
EditEngine::IsRtfImportHandlerSet() const
EditEngine::IsTextPos(Point const&, unsigned short)
EditEngine::IsTopToBottom() const
EditEngine::MoveParagraphs(Range const&, int)
EditEngine::ParaAttribsToCharAttribs(ContentNode*)
EditEngine::ParagraphHeightChanged(int)
EditEngine::PutSpellingToSentenceStart(EditView const&)
EditEngine::QuickInsertLineBreak(ESelection const&)
EditEngine::QuickMarkInvalid(ESelection const&)
EditEngine::QuickMarkToBeRepainted(int)
EditEngine::Redo(EditView*)
EditEngine::RemoveCharAttribs(EditSelection const&, EERemoveParaAttribsMode, unsigned short)
EditEngine::RemoveCharAttribs(EditSelection const&, bool, unsigned short)
EditEngine::RemoveParaPortion(int)
EditEngine::RemoveParagraph(int)
EditEngine::RemoveView(unsigned long)
EditEngine::SeekCursor(ContentNode*, int, SvxFont&)
EditEngine::SetActiveView(EditView*)
EditEngine::SetAttribs(EditSelection const&, SfxItemSet const&, SetAttribsMode)
EditEngine::SetBeginDropHdl(Link<EditView*, void> const&)
EditEngine::SetBeginMovingParagraphsHdl(Link<MoveParagraphsInfo&, void> const&)
EditEngine::SetBeginPasteOrDropHdl(Link<PasteOrDropInfos&, void> const&)
EditEngine::SetCallParaInsertedOrDeleted(bool)
EditEngine::SetCharAttribs(int, SfxItemSet const&)
EditEngine::SetEndDropHdl(Link<EditView*, void> const&)
EditEngine::SetEndMovingParagraphsHdl(Link<MoveParagraphsInfo&, void> const&)
EditEngine::SetEndPasteOrDropHdl(Link<PasteOrDropInfos&, void> const&)
EditEngine::SetFixedCellHeight(bool)
EditEngine::SetFlatMode(bool)
EditEngine::SetFontInfoInItemSet(SfxItemSet&, SvxFont const&)
EditEngine::SetGlobalCharStretching(unsigned short, unsigned short)
EditEngine::SetMaxAutoPaperSize(Size const&)
EditEngine::SetMinAutoPaperSize(Size const&)
EditEngine::SetMinColumnWrapHeight(long)
EditEngine::SetParaAttribsOnly(int, SfxItemSet const&)
EditEngine::SetPolygon(basegfx::B2DPolyPolygon const&)
EditEngine::SetPolygon(basegfx::B2DPolyPolygon const&, basegfx::B2DPolyPolygon const*)
EditEngine::SetRotation(TextRotation)
EditEngine::SetStyleSheet(EditSelection const&, SfxStyleSheet*)
EditEngine::SetStyleSheet(int, SfxStyleSheet*)
EditEngine::SetStyleSheetPool(SfxStyleSheetPool*)
EditEngine::SetTextColumns(short, int)
EditEngine::SetUndoManager(SfxUndoManager*)
EditEngine::SetUndoMode(bool)
EditEngine::ShouldCreateBigTextObject() const
EditEngine::ShowParagraph(int, bool)
EditEngine::SplitContent(int, int)
EditEngine::StripPortions()
EditEngine::TransliterateText(EditSelection const&, TransliterationFlags)
EditEngine::Undo(EditView*)
EditEngine::UndoActionStart(unsigned short, ESelection const&)
EditEngine::UpdateFieldsOnly()
EditEngine::UpdateSelections()
EditEngine::~EditEngine()
EditTextObject::~EditTextObject()
EditUndo::CanRepeat(SfxRepeatTarget&) const
EditUndo::EditUndo(unsigned short, EditEngine*)
EditUndo::GetComment() const
EditUndo::GetId() const
EditUndo::GetViewShellId() const
EditUndo::~EditUndo()
EditUndoManager::EditUndoManager(unsigned short)
EditUndoManager::SetEditEngine(EditEngine*)
EditView::EditView(EditEngine*, vcl::Window*)
EditView::ForceLayoutCalculation()
EditView::GetAnchorMode() const
EditView::GetFieldAtSelection() const
EditView::GetFieldUnderMousePointer(int&, int&) const
EditView::GetImpEditEngine() const
EditView::GetInvalidateMore() const
EditView::GetPointer() const
EditView::GetSelectionRectangles(std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >&) const
EditView::GetStyleSheet()
EditView::GetStyleSheet() const
EditView::HasOtherViewWindow(vcl::Window*)
EditView::InsertParaBreak()
EditView::InvalidateWindow(tools::Rectangle const&)
EditView::IsCursorAtWrongSpelledWord()
EditView::MoveParagraphs(Range, int)
EditView::MoveParagraphs(long)
EditView::Read(SvStream&, EETextFormat, SvKeyValueIterator*)
EditView::ReleaseMouse()
EditView::RemoveAttribs(EERemoveParaAttribsMode, unsigned short)
EditView::SetAnchorMode(EEAnchorMode)
EditView::SetInvalidateMore(unsigned short)
EditView::SetSelectionMode(EESelectionMode)
EditView::StartSearchAndReplace(SvxSearchItem const&)
EditView::~EditView()
EditViewCallbacks::~EditViewCallbacks()
EmbeddedFontsHelper::activateFont(rtl::OUString const&, rtl::OUString const&)
EmbeddedFontsHelper::clearTemporaryFontFiles()
EmbeddedFontsHelper::fileUrlForTemporaryFont(rtl::OUString const&, char const*)
EmbeddedFontsHelper::sufficientTTFRights(void const*, long, EmbeddedFontsHelper::FontRights)
EnhancedCustomShape2d::ApplyGluePoints(SdrObject*)
EnhancedCustomShape2d::CreateObject(bool)
EnhancedCustomShape2d::EnhancedCustomShape2d(SdrObjCustomShape&)
EnhancedCustomShape2d::GetEquation(unsigned short, int, int, int)
EnhancedCustomShape2d::GetHdlCount() const
EnhancedCustomShape2d::GetTextRect() const
EnhancedCustomShape2d::SetEnhancedCustomShapeHandleParameter(com::sun::star::drawing::EnhancedCustomShapeParameter&, int, bool, bool)
EnhancedCustomShape2d::SetEnhancedCustomShapeParameter(com::sun::star::drawing::EnhancedCustomShapeParameter&, int)
EnhancedCustomShape2d::~EnhancedCustomShape2d()
EnhancedCustomShape::FillEquationParameter(com::sun::star::drawing::EnhancedCustomShapeParameter const&, int, EnhancedCustomShapeEquation&)
EnhancedCustomShapeTypeNames::Get(rtl::OUString const&)
EnhancedCustomShapeTypeNames::GetAccName(rtl::OUString const&)
ErrorContext::ErrorContext(weld::Window*)
ErrorContext::GetContext()
ErrorContext::GetParent()
ErrorContext::~ErrorContext()
ErrorHandler::ErrorHandler()
ErrorHandler::~ErrorHandler()
ErrorInfo::~ErrorInfo()
ErrorRegistry::ErrorRegistry()
ErrorRegistry::RegisterDisplay(DialogMask (*)(weld::Window*, DialogMask, rtl::OUString const&, rtl::OUString const&))
ErrorStringFactory::CreateString(ErrorInfo const*, rtl::OUString&)
EscherConnectorListEntry::GetClosestPoint(tools::Polygon const&, com::sun::star::awt::Point const&)
EscherEx::EscherEx(std::shared_ptr<EscherExGlobal> const&, SvStream*, bool)
EscherEx::SeekToPersistOffset(unsigned int)
EscherEx::SetEditAs(rtl::OUString const&)
EscherEx::SetGroupLogicRect(unsigned int, tools::Rectangle const&)
EscherEx::SetGroupSnapRect(unsigned int, tools::Rectangle const&)
EscherEx::~EscherEx()
EscherExAtom::EscherExAtom(SvStream&, unsigned short, unsigned short, unsigned char)
EscherExAtom::~EscherExAtom()
EscherExClientAnchor_Base::~EscherExClientAnchor_Base()
EscherExClientRecord_Base::~EscherExClientRecord_Base()
EscherExContainer::EscherExContainer(SvStream&, unsigned short, unsigned short)
EscherExContainer::~EscherExContainer()
EscherExGlobal::ImplQueryPictureStream()
EscherExGlobal::~EscherExGlobal()
EscherGraphicProvider::EscherGraphicProvider(EscherGraphicProviderFlags)
EscherGraphicProvider::GetPrefSize(unsigned int, Size&, MapMode&)
EscherGraphicProvider::ImplInsertBlib(EscherBlibEntry*)
EscherGraphicProvider::~EscherGraphicProvider()
EscherPersistTable::EscherPersistTable()
EscherPersistTable::PtDelete(unsigned int)
EscherPersistTable::PtIsID(unsigned int)
EscherPersistTable::PtReplace(unsigned int, unsigned int)
EscherPersistTable::~EscherPersistTable()
EscherPropertyContainer::CreateGraphicProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, GraphicObject const&)
EscherPropertyContainer::EscherPropertyContainer()
EscherPropertyContainer::EscherPropertyContainer(EscherGraphicProvider&, SvStream*, tools::Rectangle&)
EscherPropertyContainer::GetGradientColor(com::sun::star::awt::Gradient const*, unsigned int)
EscherPropertyContainer::GetPolyPolygon(com::sun::star::uno::Any const&)
EscherPropertyContainer::GetValueForEnhancedCustomShapeParameter(com::sun::star::drawing::EnhancedCustomShapeParameter const&, std::vector<int, std::allocator<int> > const&, bool)
EscherPropertyContainer::ImplCreateEmbeddedBmp(GraphicObject const&)
EscherPropertyContainer::ImplCreateGraphicAttributes(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, unsigned int, bool)
EscherPropertyContainer::ImplGetColor(unsigned int, bool)
EscherPropertyContainer::~EscherPropertyContainer()
EscherSolverContainer::AddConnector(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Point const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Point const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
EscherSolverContainer::EscherSolverContainer()
EscherSolverContainer::~EscherSolverContainer()
ExportEpsGraphic(SvStream&, Graphic const&, FilterConfigItem*)
ExportGifGraphic(SvStream&, Graphic const&, FilterConfigItem*)
ExportTiffGraphicImport(SvStream&, Graphic const&, FilterConfigItem const*)
ExtTextEngine::ExtTextEngine()
ExtTextEngine::MatchGroup(TextPaM const&) const
ExtTextEngine::Search(TextSelection&, i18nutil::SearchOptions const&, bool) const
ExtTextEngine::~ExtTextEngine()
ExternalToolEdit::ExternalToolEdit()
ExternalToolEdit::HandleCloseEvent(ExternalToolEdit*)
ExternalToolEdit::StartListeningEvent()
ExternalToolEdit::~ExternalToolEdit()
FC_GetFunctionList@@NSS_3.4
FC_GetInterface@@NSS_3.52
FC_GetInterfaceList@@NSS_3.52
FREEBL_GetVector@@NSSprivate_3.11
FSDK_SetLocaltimeFunction
FSDK_SetTimeFunction
FSDK_SetUnSpObjProcessHandler
FileChangedChecker::FileChangedChecker(rtl::OUString const&, std::function<void ()> const&)
FileChangedChecker::hasFileChanged()
FileChangedChecker::resetTimer()
FileExportedDialog::FileExportedDialog(weld::Window*, rtl::OUString)
FilterConfigItem::FilterConfigItem(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
FilterConfigItem::FilterConfigItem(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
FilterConfigItem::FilterConfigItem(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
FilterConfigItem::GetPropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, rtl::OUString const&)
FilterConfigItem::GetStatusIndicator() const
FilterConfigItem::ImpInitTree(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
FilterConfigItem::ImplGetPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
FilterConfigItem::WritePropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, com::sun::star::beans::PropertyValue const&)
FilterConfigItem::~FilterConfigItem()
FixedBitmap::ApplySettings(OutputDevice&)
FixedBitmap::DataChanged(DataChangedEvent const&)
FixedBitmap::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
FixedBitmap::FixedBitmap(vcl::Window*, long)
FixedBitmap::Paint(OutputDevice&, tools::Rectangle const&)
FixedBitmap::Resize()
FixedBitmap::SetBitmap(BitmapEx const&)
FixedBitmap::StateChanged(StateChangedType)
FixedImage::ApplySettings(OutputDevice&)
FixedImage::DataChanged(DataChangedEvent const&)
FixedImage::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
FixedImage::DumpAsPropertyTree(tools::JsonWriter&)
FixedImage::FixedImage(vcl::Window*, long)
FixedImage::GetOptimalSize() const
FixedImage::Paint(OutputDevice&, tools::Rectangle const&)
FixedImage::Resize()
FixedImage::SetImage(Image const&)
FixedImage::StateChanged(StateChangedType)
FixedImage::loadThemeImage(rtl::OUString const&)
FixedImage::set_property(rtl::OString const&, rtl::OUString const&)
FixedLine::ApplySettings(OutputDevice&)
FixedLine::DataChanged(DataChangedEvent const&)
FixedLine::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
FixedLine::DumpAsPropertyTree(tools::JsonWriter&)
FixedLine::FillLayoutData() const
FixedLine::FixedLine(vcl::Window*, long)
FixedLine::GetCanonicalFont(StyleSettings const&) const
FixedLine::GetCanonicalTextColor(StyleSettings const&) const
FixedLine::GetOptimalSize() const
FixedLine::Paint(OutputDevice&, tools::Rectangle const&)
FixedLine::Resize()
FixedLine::StateChanged(StateChangedType)
FixedText::ApplySettings(OutputDevice&)
FixedText::CalcMinimumSize(long) const
FixedText::CalcMinimumTextSize(Control const*, long)
FixedText::DataChanged(DataChangedEvent const&)
FixedText::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
FixedText::FillLayoutData() const
FixedText::FixedText(vcl::Window*, long)
FixedText::GetCanonicalFont(StyleSettings const&) const
FixedText::GetCanonicalTextColor(StyleSettings const&) const
FixedText::GetOptimalSize() const
FixedText::Paint(OutputDevice&, tools::Rectangle const&)
FixedText::Resize()
FixedText::StateChanged(StateChangedType)
FixedText::dispose()
FixedText::getAccessibleRelationLabelFor() const
FixedText::getTextDimensions(Control const*, rtl::OUString const&, long)
FixedText::setMaxWidthChars(int)
FixedText::setMinWidthChars(int)
FixedText::set_mnemonic_widget(vcl::Window*)
FixedText::set_property(rtl::OString const&, rtl::OUString const&)
FixedText::~FixedText()
FloatingWindow::AddPopupModeWindow(vcl::Window*)
FloatingWindow::ApplySettings(OutputDevice&)
FloatingWindow::DataChanged(DataChangedEvent const&)
FloatingWindow::EventNotify(NotifyEvent&)
FloatingWindow::FloatingWindow(vcl::Window*, long)
FloatingWindow::FloatingWindow(vcl::Window*, rtl::OString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
FloatingWindow::ImplConvertToRelPos(vcl::Window*, tools::Rectangle const&)
FloatingWindow::PixelInvalidate(tools::Rectangle const*)
FloatingWindow::PopupModeEnd()
FloatingWindow::SetTitleType(FloatWinTitleType)
FloatingWindow::StartPopupMode(ToolBox*, FloatWinPopupFlags)
FloatingWindow::StartPopupMode(tools::Rectangle const&, FloatWinPopupFlags)
FloatingWindow::StateChanged(StateChangedType)
FloatingWindow::dispose()
FloatingWindow::doDeferredInit(long)
FloatingWindow::~FloatingWindow()
FmDesignModeChangedHint::FmDesignModeChangedHint(bool)
FmDesignModeChangedHint::~FmDesignModeChangedHint()
FmFormModel::AllocPage(bool)
FmFormModel::ControlsUseRefDevice() const
FmFormModel::GetUndoEnv()
FmFormModel::implSetOpenInDesignMode(bool)
FmFormModel::~FmFormModel()
FmFormObjFactory::FmFormObjFactory()
FmFormObjFactory::~FmFormObjFactory()
FmFormPage::CloneSdrPage(SdrModel&) const
FmFormPage::FmFormPage(FmFormModel&, bool)
FmFormPage::GetForms(bool) const
FmFormPage::~FmFormPage()
FmFormShell::Activate(bool)
FmFormShell::Deactivate(bool)
FmFormShell::DetermineForms(bool)
FmFormShell::ExecuteTextAttribute(SfxRequest&)
FmFormShell::FmFormShell(SfxViewShell*, FmFormView*)
FmFormShell::GetCurPage() const
FmFormShell::GetFormState(SfxItemSet&, unsigned short)
FmFormShell::GetInterface() const
FmFormShell::GetStaticInterface()
FmFormShell::GetTextAttributeState(SfxItemSet&)
FmFormShell::HasUIFeature(SfxShellFeature) const
FmFormShell::InitInterface_Impl()
FmFormShell::NotifyMarkListChanged(FmFormView*)
FmFormShell::RegisterInterface(SfxModule const*)
FmFormShell::impl_setDesignMode(bool)
FmFormShell::~FmFormShell()
FmFormView::GetCurPage()
FmFormView::Init()
FmFormView::InsertControlContainer(com::sun::star::uno::Reference<com::sun::star::awt::XControlContainer> const&)
FmFormView::RemoveControlContainer(com::sun::star::uno::Reference<com::sun::star::awt::XControlContainer> const&)
FmFormView::~FmFormView()
FmGridControl::FmGridControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, vcl::Window*, FmXGridPeer*, long)
FmGridControl::GetAccessibleObjectDescription(AccessibleBrowseBoxObjType, int) const
FmGridControl::InitColumnByField(DbGridColumn*, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&)
FmGridControl::InitColumnsByModels(com::sun::star::uno::Reference<com::sun::star::container::XIndexContainer> const&)
FmGridControl::commit()
FmGridControl::inserted()
FmGridControl::isColumnMarked(unsigned short) const
FmGridControl::isColumnSelected(DbGridColumn const*) const
FmGridControl::markColumn(unsigned short)
FmGridControl::positioned()
FmGridControl::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
FmGridControl::selectBookmarks(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
FmGridHeader::FmGridHeader(BrowseBox*, long)
FmGridHeader::GetModelColumnPos(unsigned short) const
FmGridHeader::triggerColumnContextMenu(Point const&)
FmGridHeader::~FmGridHeader()
FmSearchEngine::FmSearchEngine(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XResultSet> const&, rtl::OUString const&, std::vector<com::sun::star::uno::Reference<com::sun::star::uno::XInterface>, std::allocator<com::sun::star::uno::Reference<com::sun::star::uno::XInterface> > > const&)
FmSearchEngine::FormatField(int)
FmSearchEngine::ImplStartNextSearch()
FmSearchEngine::Init(rtl::OUString const&)
FmSearchEngine::OnSearchTerminated()
FmSearchEngine::SearchNextImpl()
FmXGridControl::FmXGridControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
FmXGridControl::createPeer(com::sun::star::uno::Reference<com::sun::star::awt::XToolkit> const&, com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&)
FmXGridControl::dispose()
FmXGridControl::getImplementationId()
FmXGridControl::getImplementationName()
FmXGridControl::getSupportedServiceNames()
FmXGridControl::getTypes()
FmXGridControl::imp_CreatePeer(vcl::Window*)
FmXGridControl::~FmXGridControl()
FmXGridPeer::CellModified()
FmXGridPeer::ConnectToDispatcher()
FmXGridPeer::DisConnectFromDispatcher()
FmXGridPeer::FmXGridPeer(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
FmXGridPeer::UpdateDispatches()
FmXGridPeer::addColumnListeners(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
FmXGridPeer::columnChanged()
FmXGridPeer::columnHidden(DbGridColumn const*)
FmXGridPeer::columnVisible(DbGridColumn const*)
FmXGridPeer::dispose()
FmXGridPeer::getSomething(com::sun::star::uno::Sequence<signed char> const&)
FmXGridPeer::getSupportedGridSlots()
FmXGridPeer::getSupportedURLs()
FmXGridPeer::getUnoTunnelId()
FmXGridPeer::imp_CreateControl(vcl::Window*, long)
FmXGridPeer::queryDispatch(com::sun::star::util::URL const&, rtl::OUString const&, int)
FmXGridPeer::removeColumnListeners(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
FmXGridPeer::selectionChanged()
FmXGridPeer::startCursorListening()
FmXGridPeer::stopCursorListening()
FmXGridPeer::updateGrid(com::sun::star::uno::Reference<com::sun::star::sdbc::XRowSet> const&)
FmXGridPeer::~FmXGridPeer()
FocusListenerMultiplexer::FocusListenerMultiplexer(cppu::OWeakObject&)
FocusListenerMultiplexer::acquire()
FocusListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
FocusListenerMultiplexer::focusGained(com::sun::star::awt::FocusEvent const&)
FocusListenerMultiplexer::focusLost(com::sun::star::awt::FocusEvent const&)
FocusListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
FocusListenerMultiplexer::release()
FontAttributes::CompareDeviceIndependentFontAttributes(FontAttributes const&) const
FontAttributes::FontAttributes()
FontCharMap::CountCharsInRange(unsigned int, unsigned int) const
FontCharMap::FontCharMap()
FontCharMap::FontCharMap(CmapResult const&)
FontCharMap::FontCharMap(tools::SvRef<ImplFontCharMap> const&)
FontCharMap::GetCharCount() const
FontCharMap::GetCharFromIndex(int) const
FontCharMap::GetGlyphIndex(unsigned int) const
FontCharMap::GetIndexFromChar(unsigned int) const
FontCharMap::GetPrevChar(unsigned int) const
FontCharMap::findRangeIndex(unsigned int) const
FontCharMap::isSymbolic() const
FontCharMap::~FontCharMap()
FontConfigFontOptions::SyncPattern(rtl::OString const&, unsigned int, unsigned int, bool)
FontConfigFontOptions::cairo_font_options_substitute(_FcPattern*)
FontConfigFontOptions::~FontConfigFontOptions()
FontList::FontList(OutputDevice*, OutputDevice*)
FontList::GetNextFontMetric(void*)
FontList::GetStyleName(FontWeight, FontItalic) const
FontList::~FontList()
FontMetric::FontMetric()
FontMetric::FontMetric(FontMetric const&)
FontMetric::FontMetric(vcl::font::PhysicalFontFace const&)
FontMetric::operator=(FontMetric const&)
FontMetric::~FontMetric()
FontNameBox::CachePreview(unsigned long, Point*)
FontNameBox::FontNameBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
FontNameBox::InitFontMRUEntriesFile()
FontNameBox::LoadMRUEntries(rtl::OUString const&)
FontNameBox::SaveMRUEntries(rtl::OUString const&) const
FontNameBox::~FontNameBox()
FontSizeBox::FontSizeBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
FontSizeBox::InsertValue(int)
FontSizeBox::SetValue(int, FieldUnit)
FontSizeBox::format_number(int) const
FontStyleBox::FontStyleBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
FontSubsetInfo::CreateFontSubset(FontType, _IO_FILE*, char const*, unsigned short const*, unsigned char const*, int, int*)
FontSubsetInfo::CreateFontSubsetFromCff(int*)
FontSubsetInfo::CreateFontSubsetFromSfnt(int*)
FontSubsetInfo::CreateFontSubsetFromType1(int const*)
FontSubsetInfo::FontSubsetInfo()
FontSubsetInfo::LoadFont(FontType, unsigned char const*, int)
FontSubsetInfo::LoadFont(vcl::TrueTypeFont*)
FontSubsetInfo::~FontSubsetInfo()
ForResId(TranslateId)
FormattedField::Down()
FormattedField::DumpAsPropertyTree(tools::JsonWriter&)
FormattedField::EventNotify(NotifyEvent&)
FormattedField::First()
FormattedField::FormattedField(vcl::Window*, long)
FormattedField::GetFormatter()
FormattedField::GetUITestFactory() const
FormattedField::Last()
FormattedField::Modify()
FormattedField::PreNotify(NotifyEvent&)
FormattedField::SetFormatter(Formatter*)
FormattedField::SetText(rtl::OUString const&)
FormattedField::SetText(rtl::OUString const&, Selection const&)
FormattedField::SetValueFromString(rtl::OUString const&)
FormattedField::Up()
FormattedField::dispose()
FormattedField::set_property(rtl::OString const&, rtl::OUString const&)
Formatter::Commit()
Formatter::DisableRemainderFactor()
Formatter::EntryLostFocus()
Formatter::FormatChanged(FORMAT_CHANGE_TYPE)
Formatter::Formatter()
Formatter::GetDecimalDigits() const
Formatter::GetFormat(o3tl::strong_int<unsigned short, LanguageTypeTag>&) const
Formatter::GetThousandsSep() const
Formatter::ImplGetValue(double&)
Formatter::ImplSetFormatKey(unsigned long)
Formatter::ImplSetTextImpl(rtl::OUString const&, Selection const*)
Formatter::ImplSetValue(double, bool)
Formatter::SetAutoColor(bool)
Formatter::SetFieldText(rtl::OUString const&, Selection const&)
Formatter::SetMaxValue(double)
Formatter::SetMinValue(double)
Formatter::SetThousandsSep(bool)
Formatter::StaticFormatter::StaticFormatter()
Formatter::StaticFormatter::~StaticFormatter()
Formatter::~Formatter()
FormatterBase::FormatterBase(Edit*)
FormatterBase::GetLanguageTag() const
FormatterBase::GetLocale() const
FormatterBase::GetLocaleDataWrapper() const
FormatterBase::IsEmptyFieldValue() const
FormatterBase::Reformat()
FormatterBase::ReformatAll()
FormatterBase::SetEmptyFieldValue()
FormatterBase::SetStrictFormat(bool)
FormatterBase::~FormatterBase()
Fraction::Fraction(double)
Fraction::Fraction(double, double)
Fraction::Fraction(long, long)
FrameDeleteWatch::FrameDeleteWatch(SwFrameFormat*)
FrameDeleteWatch::Notify(SfxHint const&)
FrameDeleteWatch::~FrameDeleteWatch()
FreeTypeTextRenderImpl::FreeTypeTextRenderImpl()
FreeTypeTextRenderImpl::~FreeTypeTextRenderImpl()
FreetypeFont::ApplyGlyphTransform(bool, FT_GlyphRec_*) const
FreetypeFont::FreetypeFont(FreetypeFontInstance&, std::shared_ptr<FreetypeFontInfo> const&)
FreetypeFont::GetFontCapabilities(vcl::FontCapabilities&) const
FreetypeFont::GetFontCharMap() const
FreetypeFont::GetFontFaceIndex() const
FreetypeFont::GetFontFaceVariation() const
FreetypeFont::GetFontFileName() const
FreetypeFont::GetFontMetric(tools::SvRef<ImplFontMetricData> const&) const
FreetypeFont::GetFtFace() const
FreetypeFont::GetGlyphBoundRect(unsigned short, tools::Rectangle&, bool) const
FreetypeFont::GetGlyphOutline(unsigned short, basegfx::B2DPolyPolygon&, bool) const
FreetypeFont::GetTable(char const*, unsigned long*) const
FreetypeFont::SetFontVariationsOnHBFont(hb_font_t*) const
FreetypeFont::~FreetypeFont()
FreetypeManager::AnnounceFonts(vcl::font::PhysicalFontCollection*) const
FreetypeManager::CreateFont(FreetypeFontInstance*)
FreetypeManager::FindFontFile(rtl::OString const&)
FreetypeManager::FreetypeManager()
FreetypeManager::InitFreetype()
FreetypeManager::~FreetypeManager()
FuConstUnoControl::Activate()
FunctionSet::~FunctionSet()
FunctionsTest::FunctionsTest(rtl::OUString const&)
GDIMetaFile::Adjust(short, short, short, short, short, double, bool, bool)
GDIMetaFile::Clip(tools::Rectangle const&)
GDIMetaFile::Convert(MtfConversion)
GDIMetaFile::GDIMetaFile()
GDIMetaFile::GDIMetaFile(GDIMetaFile const&)
GDIMetaFile::GetMonochromeMtf(Color const&) const
GDIMetaFile::GetSizeBytes() const
GDIMetaFile::Linker(OutputDevice*, bool)
GDIMetaFile::Mirror(BmpMirrorFlags)
GDIMetaFile::Play(GDIMetaFile&)
GDIMetaFile::Play(OutputDevice&, Point const&, Size const&)
GDIMetaFile::ReplaceAction(rtl::Reference<MetaAction>, unsigned long)
GDIMetaFile::ReplaceColors(Color const*, Color const*, unsigned long)
GDIMetaFile::Rotate(o3tl::strong_int<short, FractionTag<10> >)
GDIMetaFile::UseCanvas(bool)
GDIMetaFile::WindPrev()
GDIMetaFile::dumpAsXml(char const*) const
GDIMetaFile::operator==(GDIMetaFile const&) const
GDIMetaFile::push_back(rtl::Reference<MetaAction> const&)
GDIMetaFile::~GDIMetaFile()
GLWindow::Synchronize(bool) const
GLWindow::~GLWindow()
GUB_count
Gallery::Gallery(rtl::OUString const&)
Gallery::GetGalleryInstance()
Gallery::~Gallery()
GalleryBinaryEngine::GalleryBinaryEngine(GalleryBinaryStorageLocations const&, GalleryObjectCollection&, bool)
GalleryBinaryEngine::clearSotStorage()
GalleryBinaryEngine::getModificationDate() const
GalleryBinaryEngine::implCreateUniqueURL(SgaObjKind, INetURLObject const&, ConvertDataFormat)
GalleryBinaryEngine::implReadSgaObject(GalleryObject const*)
GalleryBinaryEngine::implWriteSgaObject(SgaObject const&, unsigned int, GalleryObject*)
GalleryBinaryEngine::insertFileOrDirURL(INetURLObject const&, std::vector<INetURLObject, std::allocator<INetURLObject> >&)
GalleryBinaryEngine::insertGraphic(Graphic const&, GfxLink const&, ConvertDataFormat const&, INetURLObject const&)
GalleryBinaryEngine::insertModel(FmFormModel const&, INetURLObject const&)
GalleryBinaryEngine::insertModelStream(tools::SvRef<SotTempStream> const&, INetURLObject const&)
GalleryBinaryEngine::insertObject(SgaObject const&, GalleryObject*, unsigned int)
GalleryBinaryEngine::readModel(GalleryObject const*, SdrModel&)
GalleryBinaryEngine::readModelStream(GalleryObject const*, tools::SvRef<SotTempStream> const&)
GalleryBinaryEngine::removeObject(std::unique_ptr<GalleryObject, std::default_delete<GalleryObject> > const&)
GalleryBinaryEngine::setDestDir(rtl::OUString const&, bool)
GalleryBinaryEngine::updateSvDrawObject(GalleryObject const*)
GalleryBinaryEngine::updateTheme()
GalleryBinaryEngine::writeGalleryTheme(SvStream&, GalleryTheme const&, GalleryThemeEntry const*)
GalleryBinaryStorageLocations::ImplGetURLIgnoreCase(INetURLObject const&)
GalleryBinaryStorageLocations::SetSdgExtension(INetURLObject&)
GalleryBinaryStorageLocations::SetSdvExtension(INetURLObject&)
GalleryBinaryStorageLocations::SetStorageLocations(INetURLObject&)
GalleryBinaryStorageLocations::SetStrExtension(INetURLObject&)
GalleryBinaryStorageLocations::SetThmExtension(INetURLObject&)
GalleryExplorer::BeginLocking(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GalleryExplorer::EndLocking(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GalleryExplorer::FillObjList(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
GalleryExplorer::GetGraphicObj(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, Graphic*)
GalleryExplorer::GetSdrObj(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, SdrModel*, BitmapEx*)
GalleryExplorer::GetSdrObjCount(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GalleryObjectCollection::GalleryObjectCollection()
GalleryObjectCollection::clear()
GalleryObjectCollection::getForPosition(unsigned int) const
GalleryObjectCollection::getURLForPosition(unsigned int) const
GalleryObjectCollection::searchObjectWithURL(INetURLObject const&)
GalleryObjectCollection::searchPosWithObject(GalleryObject const*)
GalleryProgress::GalleryProgress(GraphicFilter const*)
GalleryProgress::~GalleryProgress()
GalleryStorageLocations::~GalleryStorageLocations()
GalleryTheme::GetGraphic(unsigned int, Graphic&)
GalleryTheme::GetModel(unsigned int, SdrModel&)
GalleryTheme::InsertGraphic(Graphic const&, unsigned int)
GalleryTheme::InsertModel(FmFormModel const&, unsigned int)
GalleryTheme::InsertObject(SgaObject const&, unsigned int)
GalleryTheme::getModificationDate() const
GenPspGraphics::AddTempDevFont(vcl::font::PhysicalFontCollection*, rtl::OUString const&, rtl::OUString const&)
GenPspGraphics::AddTempDevFontHelper(vcl::font::PhysicalFontCollection*, rtl::OUString const&, rtl::OUString const&)
GenPspGraphics::AnnounceFonts(vcl::font::PhysicalFontCollection*, psp::FastPrintFontInfo const&)
GenPspGraphics::ClearDevFontCache()
GenPspGraphics::CreateBitmapSurface(OutputDevice const&, BitmapSystemData const&, Size const&) const
GenPspGraphics::CreateFontSubset(rtl::OUString const&, vcl::font::PhysicalFontFace const*, unsigned short const*, unsigned char const*, int*, int, FontSubsetInfo&)
GenPspGraphics::CreateSurface(OutputDevice const&, int, int, int, int) const
GenPspGraphics::CreateSurface(std::shared_ptr<_cairo_surface> const&) const
GenPspGraphics::DoFreeEmbedFontData(void const*, long)
GenPspGraphics::DoGetEmbedFontData(int, long*)
GenPspGraphics::DoGetGlyphWidths(int, bool, std::vector<int, std::allocator<int> >&, std::map<char16_t, unsigned int, std::less<char16_t>, std::allocator<std::pair<char16_t const, unsigned int> > >&)
GenPspGraphics::DrawTextLayout(GenericSalLayout const&)
GenPspGraphics::FreeEmbedFontData(void const*, long)
GenPspGraphics::GenPspGraphics()
GenPspGraphics::GetDevFontList(vcl::font::PhysicalFontCollection*)
GenPspGraphics::GetEmbedFontData(vcl::font::PhysicalFontFace const*, long*)
GenPspGraphics::GetFontCapabilities(vcl::FontCapabilities&) const
GenPspGraphics::GetFontCharMap() const
GenPspGraphics::GetFontMetric(tools::SvRef<ImplFontMetricData>&, int)
GenPspGraphics::GetGlyphWidths(vcl::font::PhysicalFontFace const*, bool, std::vector<int, std::allocator<int> >&, std::map<char16_t, unsigned int, std::less<char16_t>, std::allocator<std::pair<char16_t const, unsigned int> > >&)
GenPspGraphics::GetGraphicsData() const
GenPspGraphics::GetNativeSurfaceHandle(std::shared_ptr<cairo::Surface>&, basegfx::B2IVector const&) const
GenPspGraphics::GetResolution(int&, int&)
GenPspGraphics::GetTextLayout(int)
GenPspGraphics::Init(psp::JobData*, psp::PrinterGfx*)
GenPspGraphics::SetFont(LogicalFontInstance*, int)
GenPspGraphics::SetTextColor(Color)
GenPspGraphics::SupportsCairo() const
GenPspGraphics::~GenPspGraphics()
GenericSalLayout::ApplyAsianKerning(rtl::OUString const&)
GenericSalLayout::ApplyDXArray(int const*, SalLayoutFlags)
GenericSalLayout::CreateTextLayoutCache(rtl::OUString const&)
GenericSalLayout::DropGlyph(int)
GenericSalLayout::GenericSalLayout(LogicalFontInstance&)
GenericSalLayout::GetCharWidths(std::vector<int, std::allocator<int> >&) const
GenericSalLayout::HasVerticalAlternate(unsigned int, unsigned int)
GenericSalLayout::Justify(int)
GenericSalLayout::MoveGlyph(int, long)
GenericSalLayout::ParseFeatures(rtl::OUString const&)
GenericSalLayout::SetNeedFallback(vcl::text::ImplLayoutArgs&, int, bool)
GenericSalLayout::Simplify(bool)
GenericSalLayout::~GenericSalLayout()
GenericUnixSalData::GenericUnixSalData(SalInstance*)
GenericUnixSalData::InitFreetypeManager()
GenericUnixSalData::InitPrintFontManager()
GenericUnixSalData::~GenericUnixSalData()
GetCustomShapeConnectionTypeDefault(MSO_SPT)
GetCustomShapeContent(MSO_SPT)
GetExecutionEnvironment
GetODFSaneDefaultVersion(SvtSaveOptions::ODFDefaultVersion)
GetPropertyId(rtl::OUString const&)
GetStandardErrorBoxImage()
GetStandardErrorBoxText()
GetStandardInfoBoxImage()
GetStandardInfoBoxText()
GetStandardQueryBoxImage()
GetStandardQueryBoxText()
GetStandardWarningBoxImage()
GetStandardWarningBoxText()
GfxLink::ExportNative(SvStream&) const
GfxLink::GetHash() const
GfxLink::GfxLink()
GfxLink::GfxLink(BinaryDataContainer const&, GfxLinkType)
GfxLink::GfxLink(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, unsigned int, GfxLinkType)
GfxLink::IsNative() const
GfxLink::LoadNative(Graphic&) const
GfxLink::operator==(GfxLink const&) const
GlobalEventConfig::GetOwnStaticMutex()
GlobalEventConfig::GlobalEventConfig()
GlobalEventConfig::getByName(rtl::OUString const&)
GlobalEventConfig::getElementNames()
GlobalEventConfig::getElementType()
GlobalEventConfig::getEvents()
GlobalEventConfig::hasByName(rtl::OUString const&)
GlobalEventConfig::hasElements()
GlobalEventConfig::replaceByName(rtl::OUString const&, com::sun::star::uno::Any const&)
GlobalEventConfig::~GlobalEventConfig()
GrBackendFormat::GrBackendFormat(GrBackendFormat const&)
GrBackendFormat::GrBackendFormat(GrColorType, SkImage::CompressionType, bool)
GrBackendFormat::GrBackendFormat(VkFormat, GrVkYcbcrConversionInfo const&, bool)
GrBackendFormat::MakeMock(GrColorType, SkImage::CompressionType, bool)
GrBackendFormat::MakeVk(GrVkYcbcrConversionInfo const&, bool)
GrBackendFormat::asMockColorType() const
GrBackendFormat::asMockCompressionType() const
GrBackendFormat::asVkFormat(VkFormat*) const
GrBackendFormat::channelMask() const
GrBackendFormat::desc() const
GrBackendFormat::getVkYcbcrConversionInfo() const
GrBackendFormat::isMockStencilFormat() const
GrBackendFormat::makeTexture2D() const
GrBackendFormat::operator=(GrBackendFormat const&)
GrBackendFormat::operator==(GrBackendFormat const&) const
GrBackendRenderTarget::GrBackendRenderTarget()
GrBackendRenderTarget::GrBackendRenderTarget(GrBackendRenderTarget const&)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, GrVkImageInfo const&)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, GrVkImageInfo const&, sk_sp<GrBackendSurfaceMutableStateImpl>)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, int, GrVkImageInfo const&)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, int, int, GrMockRenderTargetInfo const&)
GrBackendRenderTarget::cleanup()
GrBackendRenderTarget::getBackendFormat() const
GrBackendRenderTarget::getMockRenderTargetInfo(GrMockRenderTargetInfo*) const
GrBackendRenderTarget::getMutableState() const
GrBackendRenderTarget::getVkImageInfo(GrVkImageInfo*) const
GrBackendRenderTarget::isProtected() const
GrBackendRenderTarget::operator=(GrBackendRenderTarget const&)
GrBackendRenderTarget::setMutableState(GrBackendSurfaceMutableState const&)
GrBackendRenderTarget::setVkImageLayout(VkImageLayout)
GrBackendRenderTarget::~GrBackendRenderTarget()
GrBackendSurfaceMutableState::GrBackendSurfaceMutableState(GrBackendSurfaceMutableState const&)
GrBackendSurfaceMutableState::operator=(GrBackendSurfaceMutableState const&)
GrBackendTexture::GrBackendTexture()
GrBackendTexture::GrBackendTexture(GrBackendTexture const&)
GrBackendTexture::GrBackendTexture(int, int, GrMipmapped, GrMockTextureInfo const&)
GrBackendTexture::GrBackendTexture(int, int, GrVkImageInfo const&)
GrBackendTexture::GrBackendTexture(int, int, GrVkImageInfo const&, sk_sp<GrBackendSurfaceMutableStateImpl>)
GrBackendTexture::cleanup()
GrBackendTexture::getBackendFormat() const
GrBackendTexture::getMockTextureInfo(GrMockTextureInfo*) const
GrBackendTexture::getMutableState() const
GrBackendTexture::getVkImageInfo(GrVkImageInfo*) const
GrBackendTexture::isProtected() const
GrBackendTexture::isSameTexture(GrBackendTexture const&)
GrBackendTexture::operator=(GrBackendTexture const&)
GrBackendTexture::setMutableState(GrBackendSurfaceMutableState const&)
GrBackendTexture::setVkImageLayout(VkImageLayout)
GrBackendTexture::~GrBackendTexture()
GrContextThreadSafeProxy::GrContextThreadSafeProxy(GrBackendApi, GrContextOptions const&)
GrContextThreadSafeProxy::abandonContext()
GrContextThreadSafeProxy::abandoned() const
GrContextThreadSafeProxy::compressedBackendFormat(SkImage::CompressionType) const
GrContextThreadSafeProxy::createCharacterization(unsigned long, SkImageInfo const&, GrBackendFormat const&, int, GrSurfaceOrigin, SkSurfaceProps const&, bool, bool, bool, GrProtected, bool, bool)
GrContextThreadSafeProxy::defaultBackendFormat(SkColorType, GrRenderable) const
GrContextThreadSafeProxy::init(sk_sp<GrCaps const>, sk_sp<GrThreadSafePipelineBuilder>)
GrContextThreadSafeProxy::~GrContextThreadSafeProxy()
GrContext_Base::GrContext_Base(sk_sp<GrContextThreadSafeProxy>)
GrContext_Base::backend() const
GrContext_Base::caps() const
GrContext_Base::compressedBackendFormat(SkImage::CompressionType) const
GrContext_Base::contextID() const
GrContext_Base::defaultBackendFormat(SkColorType, GrRenderable) const
GrContext_Base::init()
GrContext_Base::options() const
GrContext_Base::refCaps() const
GrContext_Base::threadSafeProxy()
GrContext_Base::~GrContext_Base()
GrDirectContext::DirectContextID::Next()
GrDirectContext::GrDirectContext(GrBackendApi, GrContextOptions const&)
GrDirectContext::MakeMock(GrMockOptions const*)
GrDirectContext::MakeMock(GrMockOptions const*, GrContextOptions const&)
GrDirectContext::MakeVulkan(GrVkBackendContext const&)
GrDirectContext::MakeVulkan(GrVkBackendContext const&, GrContextOptions const&)
GrDirectContext::abandonContext()
GrDirectContext::abandoned()
GrDirectContext::checkAsyncWorkCompletion()
GrDirectContext::createBackendTexture(SkPixmap const*, int, GrSurfaceOrigin, GrRenderable, GrProtected, void (*)(void*), void*)
GrDirectContext::createBackendTexture(int, int, GrBackendFormat const&, GrMipmapped, GrRenderable, GrProtected)
GrDirectContext::createBackendTexture(int, int, GrBackendFormat const&, SkRGBA4f<(SkAlphaType)3> const&, GrMipmapped, GrRenderable, GrProtected, void (*)(void*), void*)
GrDirectContext::createBackendTexture(int, int, SkColorType, GrMipmapped, GrRenderable, GrProtected)
GrDirectContext::createBackendTexture(int, int, SkColorType, SkRGBA4f<(SkAlphaType)3> const&, GrMipmapped, GrRenderable, GrProtected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, GrBackendFormat const&, SkRGBA4f<(SkAlphaType)3> const&, GrMipmapped, GrProtected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, GrBackendFormat const&, void const*, unsigned long, GrMipmapped, GrProtected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, SkImage::CompressionType, SkRGBA4f<(SkAlphaType)3> const&, GrMipmapped, GrProtected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, SkImage::CompressionType, void const*, unsigned long, GrMipmapped, GrProtected, void (*)(void*), void*)
GrDirectContext::deleteBackendTexture(GrBackendTexture)
GrDirectContext::dumpMemoryStatistics(SkTraceMemoryDump*) const
GrDirectContext::flush(GrFlushInfo const&)
GrDirectContext::freeGpuResources()
GrDirectContext::getResourceCacheLimit() const
GrDirectContext::getResourceCacheLimits(int*, unsigned long*) const
GrDirectContext::getResourceCachePurgeableBytes() const
GrDirectContext::getResourceCacheUsage(int*, unsigned long*) const
GrDirectContext::init()
GrDirectContext::onGetSmallPathAtlasMgr()
GrDirectContext::performDeferredCleanup(std::chrono::duration<long, std::ratio<1l, 1000l> >, bool)
GrDirectContext::precompileShader(SkData const&, SkData const&)
GrDirectContext::purgeUnlockedResources(bool)
GrDirectContext::purgeUnlockedResources(unsigned long, bool)
GrDirectContext::releaseResourcesAndAbandonContext()
GrDirectContext::resetContext(unsigned int)
GrDirectContext::resetGLTextureBindings()
GrDirectContext::setBackendRenderTargetState(GrBackendRenderTarget const&, GrBackendSurfaceMutableState const&, GrBackendSurfaceMutableState*, void (*)(void*), void*)
GrDirectContext::setBackendTextureState(GrBackendTexture const&, GrBackendSurfaceMutableState const&, GrBackendSurfaceMutableState*, void (*)(void*), void*)
GrDirectContext::setResourceCacheLimit(unsigned long)
GrDirectContext::setResourceCacheLimits(int, unsigned long)
GrDirectContext::storeVkPipelineCacheData()
GrDirectContext::submit(bool)
GrDirectContext::supportsDistanceFieldText() const
GrDirectContext::syncAllOutstandingGpuWork(bool)
GrDirectContext::threadSafeProxy()
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkColorType, SkRGBA4f<(SkAlphaType)3> const&, void (*)(void*), void*)
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkPixmap const*, int, GrSurfaceOrigin, void (*)(void*), void*)
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkRGBA4f<(SkAlphaType)3> const&, void (*)(void*), void*)
GrDirectContext::updateCompressedBackendTexture(GrBackendTexture const&, SkRGBA4f<(SkAlphaType)3> const&, void (*)(void*), void*)
GrDirectContext::updateCompressedBackendTexture(GrBackendTexture const&, void const*, unsigned long, void (*)(void*), void*)
GrDirectContext::wait(int, GrBackendSemaphore const*, bool)
GrDirectContext::~GrDirectContext()
GrDriverBugWorkarounds::GrDriverBugWorkarounds()
GrDriverBugWorkarounds::GrDriverBugWorkarounds(std::vector<int, std::allocator<int> > const&)
GrDriverBugWorkarounds::applyOverrides(GrDriverBugWorkarounds const&)
GrDriverBugWorkarounds::~GrDriverBugWorkarounds()
GrImageContext::abandonContext()
GrImageContext::abandoned()
GrRecordingContext::colorTypeSupportedAsImage(SkColorType) const
GrRecordingContext::maxRenderTargetSize() const
GrRecordingContext::maxSurfaceSampleCountForColorType(SkColorType) const
GrRecordingContext::maxTextureSize() const
GrVkExtensions::getSpecVersions(std::function<void (*(char const*, VkInstance_T*, VkDevice_T*))()>, VkInstance_T*, VkPhysicalDevice_T*)
GrVkExtensions::hasExtension(char const*, unsigned int) const
GrVkExtensions::init(std::function<void (*(char const*, VkInstance_T*, VkDevice_T*))()>, VkInstance_T*, VkPhysicalDevice_T*, unsigned int, char const* const*, unsigned int, char const* const*)
GrVkSecondaryCBDrawContext::GrVkSecondaryCBDrawContext(sk_sp<skgpu::BaseDevice>, SkSurfaceProps const*)
GrVkSecondaryCBDrawContext::Make(GrRecordingContext*, SkImageInfo const&, GrVkDrawableInfo const&, SkSurfaceProps const*)
GrVkSecondaryCBDrawContext::characterize(SkSurfaceCharacterization*) const
GrVkSecondaryCBDrawContext::draw(sk_sp<SkDeferredDisplayList const>)
GrVkSecondaryCBDrawContext::flush()
GrVkSecondaryCBDrawContext::getCanvas()
GrVkSecondaryCBDrawContext::isCompatible(SkSurfaceCharacterization const&) const
GrVkSecondaryCBDrawContext::releaseResources()
GrVkSecondaryCBDrawContext::wait(int, GrBackendSemaphore const*, bool)
GrVkSecondaryCBDrawContext::~GrVkSecondaryCBDrawContext()
GrYUVABackendTextureInfo::GrYUVABackendTextureInfo(SkYUVAInfo const&, GrBackendFormat const*, GrMipmapped, GrSurfaceOrigin)
GrYUVABackendTextureInfo::operator==(GrYUVABackendTextureInfo const&) const
GrYUVABackendTextureInfo::toYUVALocations() const
GrYUVABackendTextures::GrYUVABackendTextures(SkYUVAInfo const&, GrBackendTexture const*, GrSurfaceOrigin)
GrYUVABackendTextures::toYUVALocations() const
Gradient::Gradient()
Gradient::Gradient(Gradient const&)
Gradient::Gradient(Gradient&&)
Gradient::Gradient(GradientStyle, Color const&, Color const&)
Gradient::MakeGrayscale()
Gradient::operator=(Gradient const&)
Gradient::operator=(Gradient&&)
Gradient::operator==(Gradient const&) const
Gradient::~Gradient()
GraphCtrl::CreateAccessible()
GraphCtrl::GetPositionInDialog() const
GraphCtrl::GetSelectedSdrObject() const
GraphCtrl::GraphCtrl(weld::Dialog*)
GraphCtrl::GraphicToVD()
GraphCtrl::InitSdrModel()
GraphCtrl::KeyInput(KeyEvent const&)
GraphCtrl::MarkListHasChanged()
GraphCtrl::MouseButtonDown(MouseEvent const&)
GraphCtrl::MouseButtonUp(MouseEvent const&)
GraphCtrl::MouseMove(MouseEvent const&)
GraphCtrl::Paint(OutputDevice&, tools::Rectangle const&)
GraphCtrl::QueueIdleUpdate()
GraphCtrl::Resize()
GraphCtrl::SdrObjChanged(SdrObject const&)
GraphCtrl::SdrObjCreated(SdrObject const&)
GraphCtrl::SetDrawingArea(weld::DrawingArea*)
GraphCtrl::SetEditMode(bool)
GraphCtrl::SetObjKind(SdrObjKind)
GraphCtrl::SetPolyEditMode(unsigned short)
GraphCtrl::SetSdrMode(bool)
GraphCtrl::~GraphCtrl()
Graphic::GetAnimationLoopCount() const
Graphic::GetAnimationNotifyHdl() const
Graphic::GetReaderContext()
Graphic::Graphic()
Graphic::Graphic(Animation const&)
Graphic::Graphic(BitmapEx const&)
Graphic::Graphic(GDIMetaFile const&)
Graphic::Graphic(Graphic const&)
Graphic::Graphic(Graphic&&)
Graphic::Graphic(GraphicExternalLink const&)
Graphic::Graphic(Image const&)
Graphic::Graphic(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
Graphic::Graphic(std::shared_ptr<GfxLink> const&, int)
Graphic::Graphic(std::shared_ptr<VectorGraphicData> const&)
Graphic::IsDummyContext() const
Graphic::IsEPS() const
Graphic::SetAnimationNotifyHdl(Link<Animation*, void> const&)
Graphic::SetDummyContext(bool)
Graphic::SetGfxLink(std::shared_ptr<GfxLink> const&)
Graphic::SetReaderContext(std::shared_ptr<GraphicReader> const&)
Graphic::getUniqueID() const
Graphic::getUnoTunnelId()
GraphicConverter::GraphicConverter()
GraphicConverter::~GraphicConverter()
GraphicDescriptor::GraphicDescriptor(INetURLObject const&)
GraphicDescriptor::GraphicDescriptor(SvStream&, rtl::OUString const*)
GraphicDescriptor::ImpConstruct()
GraphicDescriptor::ImpDetectBMP(SvStream&, bool)
GraphicDescriptor::ImpDetectDXF(SvStream&, bool)
GraphicDescriptor::ImpDetectEMF(SvStream&, bool)
GraphicDescriptor::ImpDetectEPS(SvStream&, bool)
GraphicDescriptor::ImpDetectGIF(SvStream&, bool)
GraphicDescriptor::ImpDetectJPG(SvStream&, bool)
GraphicDescriptor::ImpDetectMET(SvStream&, bool)
GraphicDescriptor::ImpDetectPBM(SvStream&, bool)
GraphicDescriptor::ImpDetectPCD(SvStream&, bool)
GraphicDescriptor::ImpDetectPCT(SvStream&, bool)
GraphicDescriptor::ImpDetectPCX(SvStream&)
GraphicDescriptor::ImpDetectPGM(SvStream&, bool)
GraphicDescriptor::ImpDetectPNG(SvStream&, bool)
GraphicDescriptor::ImpDetectPPM(SvStream&, bool)
GraphicDescriptor::ImpDetectPSD(SvStream&, bool)
GraphicDescriptor::ImpDetectRAS(SvStream&, bool)
GraphicDescriptor::ImpDetectSVG(SvStream&, bool)
GraphicDescriptor::ImpDetectSVM(SvStream&, bool)
GraphicDescriptor::ImpDetectTGA(SvStream&, bool)
GraphicDescriptor::ImpDetectTIF(SvStream&, bool)
GraphicDescriptor::ImpDetectWMF(SvStream&, bool)
GraphicDescriptor::ImpDetectXBM(SvStream&, bool)
GraphicDescriptor::ImpDetectXPM(SvStream&, bool)
GraphicDescriptor::~GraphicDescriptor()
GraphicFilter::CanImportGraphic(INetURLObject const&, unsigned short, unsigned short*)
GraphicFilter::CanImportGraphic(rtl::OUString const&, SvStream&, unsigned short, unsigned short*)
GraphicFilter::GetImportFormatNumber(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GraphicFilter::GraphicFilter(bool)
GraphicFilter::ImpTestOrFindFormat(rtl::OUString const&, SvStream&, unsigned short&)
GraphicFilter::ImplInit()
GraphicFilter::ImplSetError(ErrCode, SvStream const*)
GraphicFilter::ImportGraphics(std::vector<std::shared_ptr<Graphic>, std::allocator<std::shared_ptr<Graphic> > >&, std::vector<std::unique_ptr<SvStream, std::default_delete<SvStream> >, std::allocator<std::unique_ptr<SvStream, std::default_delete<SvStream> > > >)
GraphicFilter::ResetLastError()
GraphicFilter::compressAsPNG(Graphic const&, SvStream&)
GraphicFilter::readBMP(SvStream&, Graphic&, GfxLinkType&)
GraphicFilter::readDXF(SvStream&, Graphic&)
GraphicFilter::readEMF(SvStream&, Graphic&, GfxLinkType&, WmfExternal const*)
GraphicFilter::readEPS(SvStream&, Graphic&)
GraphicFilter::readGIF(SvStream&, Graphic&, GfxLinkType&)
GraphicFilter::readJPEG(SvStream&, Graphic&, GfxLinkType&, GraphicFilterImportFlags)
GraphicFilter::readMET(SvStream&, Graphic&, GfxLinkType&)
GraphicFilter::readPBM(SvStream&, Graphic&)
GraphicFilter::readPCD(SvStream&, Graphic&)
GraphicFilter::readPCX(SvStream&, Graphic&)
GraphicFilter::readPDF(SvStream&, Graphic&, GfxLinkType&)
GraphicFilter::readPICT(SvStream&, Graphic&, GfxLinkType&)
GraphicFilter::readPNG(SvStream&, Graphic&, GfxLinkType&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, int&)
GraphicFilter::readPSD(SvStream&, Graphic&)
GraphicFilter::readRAS(SvStream&, Graphic&)
GraphicFilter::readSVG(SvStream&, Graphic&, GfxLinkType&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, int&)
GraphicFilter::readTGA(SvStream&, Graphic&)
GraphicFilter::readTIFF(SvStream&, Graphic&, GfxLinkType&)
GraphicFilter::readWMF(SvStream&, Graphic&, GfxLinkType&, WmfExternal const*)
GraphicFilter::readWMF_EMF(SvStream&, Graphic&, GfxLinkType&, WmfExternal const*, VectorGraphicDataType)
GraphicFilter::readWithTypeSerializer(SvStream&, Graphic&, GfxLinkType&, rtl::OUString)
GraphicFilter::readXBM(SvStream&, Graphic&)
GraphicFilter::readXPM(SvStream&, Graphic&)
GraphicFilter::~GraphicFilter()
GraphicHelper::GetPreferredExtension(rtl::OUString&, Graphic const&)
GraphicNativeMetadata::GraphicNativeMetadata()
GraphicNativeMetadata::~GraphicNativeMetadata()
GraphicNativeTransform::GraphicNativeTransform(Graphic&)
GraphicNativeTransform::rotateBitmapOnly(o3tl::strong_int<short, FractionTag<10> >)
GraphicNativeTransform::rotateGeneric(o3tl::strong_int<short, FractionTag<10> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GraphicNativeTransform::rotateJPEG(o3tl::strong_int<short, FractionTag<10> >)
GraphicNativeTransform::~GraphicNativeTransform()
GraphicObject::GetTransformedGraphic(GraphicAttr const*) const
GraphicObject::GraphicObject()
GraphicObject::GraphicObject(Graphic const&)
GraphicObject::GraphicObject(GraphicObject const&)
GraphicObject::~GraphicObject()
GraphicsRenderTests::appendTestResult(rtl::OUString, rtl::OUString, Bitmap)
GraphicsRenderTests::returnTestStatus(vcl::test::TestResult)
GraphicsRenderTests::runALLTests()
GraphicsRenderTests::testAxialGradient()
GraphicsRenderTests::testClipB2DPolyPolygon()
GraphicsRenderTests::testClipPolyPolygon()
GraphicsRenderTests::testClipPolygon()
GraphicsRenderTests::testClipRectangle()
GraphicsRenderTests::testClosedBezierWithPolygon()
GraphicsRenderTests::testClosedBezierWithPolyline()
GraphicsRenderTests::testComplexDrawTransformedBitmap24bpp()
GraphicsRenderTests::testDashedLine()
GraphicsRenderTests::testDrawBezierAAWithPolylineB2D()
GraphicsRenderTests::testDrawBezierWithPolylineB2D()
GraphicsRenderTests::testDrawBitmap24bpp()
GraphicsRenderTests::testDrawBitmap32bpp()
GraphicsRenderTests::testDrawBitmap8bppGreyScale()
GraphicsRenderTests::testDrawBitmapExWithAlpha24bpp()
GraphicsRenderTests::testDrawBitmapExWithAlpha32bpp()
GraphicsRenderTests::testDrawBlend24bpp()
GraphicsRenderTests::testDrawBlend32bpp()
GraphicsRenderTests::testDrawDiamondWithLine()
GraphicsRenderTests::testDrawDiamondWithPolygon()
GraphicsRenderTests::testDrawDiamondWithPolyline()
GraphicsRenderTests::testDrawDiamondWithPolylineB2D()
GraphicsRenderTests::testDrawDropShapeAAWithPolygon()
GraphicsRenderTests::testDrawDropShapeAAWithPolyline()
GraphicsRenderTests::testDrawDropShapeWithPolygon()
GraphicsRenderTests::testDrawDropShapeWithPolyline()
GraphicsRenderTests::testDrawFilledRectWithPolyPolygon()
GraphicsRenderTests::testDrawFilledRectWithPolyPolygon2D()
GraphicsRenderTests::testDrawFilledRectWithPolygon()
GraphicsRenderTests::testDrawFilledRectWithRectangle()
GraphicsRenderTests::testDrawInvertN50WithRectangle()
GraphicsRenderTests::testDrawInvertTrackFrameWithRectangle()
GraphicsRenderTests::testDrawInvertWithRectangle()
GraphicsRenderTests::testDrawMask24bpp()
GraphicsRenderTests::testDrawMask32bpp()
GraphicsRenderTests::testDrawOpenBezierWithPolyLine()
GraphicsRenderTests::testDrawOpenBezierWithPolyLineB2D()
GraphicsRenderTests::testDrawOpenPolygonWithPolyLine()
GraphicsRenderTests::testDrawOpenPolygonWithPolyLineB2D()
GraphicsRenderTests::testDrawOpenPolygonWithPolyPolygon()
GraphicsRenderTests::testDrawOpenPolygonWithPolyPolygonB2D()
GraphicsRenderTests::testDrawOpenPolygonWithPolygon()
GraphicsRenderTests::testDrawOutDev()
GraphicsRenderTests::testDrawOutDevScaledClipped()
GraphicsRenderTests::testDrawOutDevSelf()
GraphicsRenderTests::testDrawRectAAWithLine()
GraphicsRenderTests::testDrawRectAAWithPixel()
GraphicsRenderTests::testDrawRectAAWithPolyLine()
GraphicsRenderTests::testDrawRectAAWithPolyLineB2D()
GraphicsRenderTests::testDrawRectAAWithPolyPolygon()
GraphicsRenderTests::testDrawRectAAWithPolyPolygonB2D()
GraphicsRenderTests::testDrawRectAAWithPolygon()
GraphicsRenderTests::testDrawRectAAWithRectangle()
GraphicsRenderTests::testDrawRectWithLine()
GraphicsRenderTests::testDrawRectWithPixel()
GraphicsRenderTests::testDrawRectWithPolyLine()
GraphicsRenderTests::testDrawRectWithPolyLineB2D()
GraphicsRenderTests::testDrawRectWithPolyPolygon()
GraphicsRenderTests::testDrawRectWithPolyPolygonB2D()
GraphicsRenderTests::testDrawRectWithPolygon()
GraphicsRenderTests::testDrawRectWithRectangle()
GraphicsRenderTests::testDrawRectangleOnSize1028WithLine()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPixel()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyLine()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyLineB2D()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyPolygon()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyPolygonB2D()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolygon()
GraphicsRenderTests::testDrawRectangleOnSize1028WithRect()
GraphicsRenderTests::testDrawRectangleOnSize4096WithLine()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPixel()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolyLine()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolyLineB2D()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolyPolygon()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolygon()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolygonPolygonB2D()
GraphicsRenderTests::testDrawRectangleOnSize4096WithRect()
GraphicsRenderTests::testDrawTransformedBitmap24bpp()
GraphicsRenderTests::testDrawTransformedBitmap32bpp()
GraphicsRenderTests::testDrawTransformedBitmap8bppGreyScale()
GraphicsRenderTests::testDrawXor()
GraphicsRenderTests::testEvenOddRuleInIntersectingRectsWithPolyPolygon()
GraphicsRenderTests::testEvenOddRuleInIntersectingRectsWithPolyPolygonB2D()
GraphicsRenderTests::testFilledAsymmetricalDropShape()
GraphicsRenderTests::testHalfEllipseAAWithPolyLine()
GraphicsRenderTests::testHalfEllipseAAWithPolyLineB2D()
GraphicsRenderTests::testHalfEllipseAAWithPolygon()
GraphicsRenderTests::testHalfEllipseWithPolyLine()
GraphicsRenderTests::testHalfEllipseWithPolyLineB2D()
GraphicsRenderTests::testHalfEllipseWithPolygon()
GraphicsRenderTests::testLineCapButt()
GraphicsRenderTests::testLineCapRound()
GraphicsRenderTests::testLineCapSquare()
GraphicsRenderTests::testLineJoinBevel()
GraphicsRenderTests::testLineJoinMiter()
GraphicsRenderTests::testLineJoinNone()
GraphicsRenderTests::testLineJoinRound()
GraphicsRenderTests::testLinearGradient()
GraphicsRenderTests::testLinearGradientAngled()
GraphicsRenderTests::testLinearGradientBorder()
GraphicsRenderTests::testLinearGradientIntensity()
GraphicsRenderTests::testLinearGradientSteps()
GraphicsRenderTests::testRadialGradient()
GraphicsRenderTests::testRadialGradientOfs()
GraphicsRenderTests::testTextDrawing()
HBUILD
HCHANGE
HDELETE
HDOWN
HINSERT
HTMLOption::GetNumbers(std::vector<unsigned int, std::allocator<unsigned int> >&) const
HTMLOption::HTMLOption(HtmlOptionId, rtl::OUString const&, rtl::OUString const&)
HTMLOutContext::HTMLOutContext(unsigned short)
HTMLOutContext::~HTMLOutContext()
HTMLOutFuncs::Out_Hex(SvStream&, unsigned int, unsigned char)
HTMLParser::FilterListing(HtmlTokenId)
HTMLParser::FilterPRE(HtmlTokenId)
HTMLParser::FilterXMP(HtmlTokenId)
HTMLParser::GetNextRawToken()
HTMLParser::HTMLParser(SvStream&, bool)
HTMLParser::ParseMetaOptionsImpl(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&, SvKeyValueIterator*, std::vector<HTMLOption, std::allocator<HTMLOption> > const&, unsigned short&)
HTMLParser::ScanText(char16_t)
HTMLParser::~HTMLParser()
HUP
Hatch::Hatch()
Hatch::Hatch(Hatch const&)
Hatch::Hatch(HatchStyle, Color const&, long, o3tl::strong_int<short, FractionTag<10> >)
Hatch::SetAngle(o3tl::strong_int<short, FractionTag<10> >)
Hatch::SetColor(Color const&)
Hatch::SetDistance(long)
Hatch::operator=(Hatch const&)
Hatch::operator==(Hatch const&) const
Hatch::~Hatch()
HeaderBar::CalcWindowSizePixel() const
HeaderBar::Clear()
HeaderBar::GetHelpText(unsigned short) const
HeaderBar::GetItemId(unsigned short) const
HeaderBar::GetItemPos(unsigned short) const
HeaderBar::GetItemSize(unsigned short) const
HeaderBar::HeaderBar(vcl::Window*, long)
HeaderBar::InsertItem(unsigned short, rtl::OUString const&, long, HeaderBarItemBits, unsigned short)
HeaderBar::MoveItem(unsigned short, unsigned short)
HeaderBar::RemoveItem(unsigned short)
HeaderBar::SetAccessible(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
HeaderBar::SetItemSize(unsigned short, long)
HeaderBar::SetItemText(unsigned short, rtl::OUString const&)
HeaderBar::SetOffset(long)
HeaderBar::~HeaderBar()
HeaderFooterEntry::HeaderFooterEntry(PptSlidePersistEntry const*)
Help::EndExtHelp()
Help::GetHelpText(rtl::OUString const&, vcl::Window const*)
Help::GetHelpText(rtl::OUString const&, weld::Widget const*)
Help::Help()
Help::IsContextHelpEnabled()
Help::SearchKeyword(rtl::OUString const&)
Help::Start(rtl::OUString const&, vcl::Window const*)
Help::Start(rtl::OUString const&, weld::Widget*)
Help::StartExtHelp()
Help::UpdatePopover(void*, vcl::Window*, tools::Rectangle const&, rtl::OUString const&)
Help::~Help()
HelpButton::Click()
HelpButton::HelpButton(vcl::Window*, long)
HelpButton::StateChanged(StateChangedType)
HelpIndexer::HelpIndexer(rtl::OUString const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
HelpIndexer::helpDocument(rtl::OUString const&, lucene::document::Document*) const
HelpIndexer::helpFileReader(rtl::OUString const&)
HelpIndexer::scanForFiles()
HelpIndexer::scanForFiles(rtl::OUString const&)
HelpLinker::main(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rtl::OUString const*)
HelpSearch::HelpSearch(rtl::OUString const&)
HelpSettings::GetBalloonDelay()
HelpSettings::GetTipTimeout() const
HelpSettings::HelpSettings()
HelpSettings::SetTipTimeout(int)
HelpSettings::operator!=(HelpSettings const&) const
HelpSettings::operator==(HelpSettings const&) const
HtmlWriter::HtmlWriter(SvStream&, std::basic_string_view<char, std::char_traits<char> >)
HtmlWriter::writeAttribute(SvStream&, std::basic_string_view<char, std::char_traits<char> >, int)
HtmlWriter::writeAttribute(SvStream&, std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >)
HtmlWriter::~HtmlWriter()
Hunspell::Hunspell(char const*, char const*, char const*)
Hunspell::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::add_dic(char const*, char const*)
Hunspell::add_with_affix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::analyze(char***, char const*)
Hunspell::analyze(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::free_list(char***, int)
Hunspell::generate(char***, char const*, char const*)
Hunspell::generate(char***, char const*, char**, int)
Hunspell::generate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::generate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
Hunspell::get_csconv()
Hunspell::get_dic_encoding()
Hunspell::get_dict_encoding[abi:cxx11]() const
Hunspell::get_langnum() const
Hunspell::get_version() const
Hunspell::get_version_cpp[abi:cxx11]() const
Hunspell::get_wordchars() const
Hunspell::get_wordchars_cpp[abi:cxx11]() const
Hunspell::get_wordchars_utf16() const
Hunspell::input_conv(char const*, char*, unsigned long)
Hunspell::input_conv(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
Hunspell::remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::spell(char const*, int*, char**)
Hunspell::spell(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
Hunspell::stem(char***, char const*)
Hunspell::stem(char***, char**, int)
Hunspell::stem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::stem(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
Hunspell::suffix_suggest(char***, char const*)
Hunspell::suffix_suggest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::suggest(char***, char const*)
Hunspell::suggest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunspell::~Hunspell()
Hunzip::Hunzip(char const*, char const*)
Hunzip::fail(char const*, char const*)
Hunzip::getbuf()
Hunzip::getcode(char const*)
Hunzip::getline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
Hunzip::~Hunzip()
IDocumentMarkAccess::IsLegalPaMForCrossRefHeadingBookmark(SwPaM const&)
IDocumentMarkAccess::iterator::get() const
IDocumentMarkAccess::iterator::iterator()
IDocumentMarkAccess::iterator::iterator(IDocumentMarkAccess::iterator const&)
IDocumentMarkAccess::iterator::iterator(IDocumentMarkAccess::iterator&&)
IDocumentMarkAccess::iterator::iterator(__gnu_cxx::__normal_iterator<sw::mark::MarkBase* const*, std::vector<sw::mark::MarkBase*, std::allocator<sw::mark::MarkBase*> > > const&)
IDocumentMarkAccess::iterator::operator+(long) const
IDocumentMarkAccess::iterator::operator++(int)
IDocumentMarkAccess::iterator::operator+=(long)
IDocumentMarkAccess::iterator::operator-(long) const
IDocumentMarkAccess::iterator::operator--()
IDocumentMarkAccess::iterator::operator--(int)
IDocumentMarkAccess::iterator::operator-=(long)
IDocumentMarkAccess::iterator::operator<(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::operator<=(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::operator=(IDocumentMarkAccess::iterator const&)
IDocumentMarkAccess::iterator::operator>(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::operator>=(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::~iterator()
IMapCircleObject::GetType() const
IMapCircleObject::IMapCircleObject(Point const&, int, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, bool)
IMapCircleObject::ImpConstruct(Point const&, int, bool)
IMapCircleObject::IsEqual(IMapCircleObject const&) const
IMapCircleObject::IsHit(Point const&) const
IMapCircleObject::ReadIMapObject(SvStream&)
IMapCircleObject::Scale(Fraction const&, Fraction const&)
IMapCircleObject::WriteCERN(SvStream&) const
IMapCircleObject::WriteIMapObject(SvStream&) const
IMapCircleObject::WriteNCSA(SvStream&) const
IMapPolygonObject::GetType() const
IMapPolygonObject::IMapPolygonObject(tools::Polygon const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, bool)
IMapPolygonObject::IsEqual(IMapPolygonObject const&)
IMapPolygonObject::IsHit(Point const&) const
IMapPolygonObject::ReadIMapObject(SvStream&)
IMapPolygonObject::Scale(Fraction const&, Fraction const&)
IMapPolygonObject::SetExtraEllipse(tools::Rectangle const&)
IMapPolygonObject::WriteCERN(SvStream&) const
IMapPolygonObject::WriteIMapObject(SvStream&) const
IMapPolygonObject::WriteNCSA(SvStream&) const
IMapRectangleObject::GetType() const
IMapRectangleObject::IMapRectangleObject(tools::Rectangle const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, bool)
IMapRectangleObject::IsEqual(IMapRectangleObject const&) const
IMapRectangleObject::IsHit(Point const&) const
IMapRectangleObject::ReadIMapObject(SvStream&)
IMapRectangleObject::Scale(Fraction const&, Fraction const&)
IMapRectangleObject::WriteCERN(SvStream&) const
IMapRectangleObject::WriteIMapObject(SvStream&) const
IMapRectangleObject::WriteNCSA(SvStream&) const
INetContentTypes::GetContentType(INetContentType)
INetContentTypes::GetContentType(rtl::OUString const&)
INetContentTypes::GetContentType4Extension(rtl::OUString const&)
INetContentTypes::GetContentTypeFromURL(rtl::OUString const&)
INetContentTypes::GetExtensionFromURL(rtl::OUString const&, rtl::OUString&)
INetMIME::equalIgnoreCase(char16_t const*, char16_t const*, char const*)
INetMIME::isAtomChar(unsigned int)
INetMIME::isIMAPAtomChar(unsigned int)
INetMIME::scanUnsigned(char16_t const*&, char16_t const*, bool, unsigned int&)
INetURLHistory::PutUrl_Impl(INetURLObject const&)
INetURLObject::ConcatData(INetProtocol, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, rtl::OUString const&)
INetURLObject::GetHostPort(INetURLObject::DecodeMechanism, unsigned short) const
INetURLObject::GetSchemeName(INetProtocol)
INetURLObject::SetPort(unsigned int)
INetURLObject::appendUCS4(rtl::OUStringBuffer&, unsigned int, INetURLObject::EscapeType, INetURLObject::Part, unsigned short, bool)
INetURLObject::appendUCS4Escape(rtl::OUStringBuffer&, unsigned int)
INetURLObject::convertExtToInt(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&, INetURLObject::DecodeMechanism, unsigned short)
INetURLObject::convertIntToExt(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&, INetURLObject::DecodeMechanism, unsigned short)
INetURLObject::getAbbreviated(com::sun::star::uno::Reference<com::sun::star::util::XStringWidth> const&, int, INetURLObject::DecodeMechanism, unsigned short) const
INetURLObject::getUTF32(char16_t const*&, char16_t const*, INetURLObject::EncodeMechanism, unsigned short, INetURLObject::EscapeType&)
INetURLObject::hasExtension() const
INetURLObject::scanDomain(char16_t const*&, char16_t const*, bool)
INetURLObject::setHost(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short)
INetURLObject::setPath(rtl::OUString const&, INetURLObject::EncodeMechanism, unsigned short)
Idle::Idle(bool, char const*)
Image::Draw(OutputDevice*, Point const&, DrawImageFlags, Size const*)
Image::Image()
Image::Image(BitmapEx const&)
Image::Image(StockImage, rtl::OUString const&)
Image::Image(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
Image::Image(rtl::OUString const&)
Image::operator==(Image const&) const
ImageButton::ImageButton(vcl::Window*, long)
ImageMap::ClearImageMap()
ImageMap::ImageMap(ImageMap const&)
ImageMap::ImageMap(rtl::OUString const&)
ImageMap::ImpDetectFormat(SvStream&)
ImageMap::ImpReadCERN(SvStream&)
ImageMap::ImpReadCERNCoords(char const**)
ImageMap::ImpReadCERNLine(std::basic_string_view<char, std::char_traits<char> >)
ImageMap::ImpReadCERNRadius(char const**)
ImageMap::ImpReadCERNURL(char const**)
ImageMap::ImpReadImageMap(SvStream&, unsigned long)
ImageMap::ImpReadNCSA(SvStream&)
ImageMap::ImpReadNCSACoords(char const**)
ImageMap::ImpReadNCSALine(std::basic_string_view<char, std::char_traits<char> >)
ImageMap::ImpReadNCSAURL(char const**)
ImageMap::ImpWriteCERN(SvStream&) const
ImageMap::ImpWriteImageMap(SvStream&) const
ImageMap::ImpWriteNCSA(SvStream&) const
ImageMap::InsertIMapObject(IMapObject const&)
ImageMap::InsertIMapObject(std::unique_ptr<IMapObject, std::default_delete<IMapObject> >)
ImageMap::Write(SvStream&) const
ImageMap::Write(SvStream&, IMapFormat) const
ImageMap::~ImageMap()
ImageTree::getNameAccess()
ImageTree::loadImage(rtl::OUString const&, rtl::OUString const&, BitmapEx&, bool, ImageLoadFlags)
ImageTree::loadImage(rtl::OUString const&, rtl::OUString const&, BitmapEx&, bool, int, ImageLoadFlags)
ImageTree::shutdown()
ImpGraphic::ImpGraphic()
ImpGraphic::ImpGraphic(Animation const&)
ImpGraphic::ImpGraphic(BitmapEx const&)
ImpGraphic::ImpGraphic(GDIMetaFile const&)
ImpGraphic::ImpGraphic(GraphicExternalLink const&)
ImpGraphic::ImpGraphic(ImpGraphic const&)
ImpGraphic::ImpGraphic(ImpGraphic&&)
ImpGraphic::ImpGraphic(std::shared_ptr<GfxLink> const&, int)
ImpGraphic::ImpGraphic(std::shared_ptr<VectorGraphicData> const&)
ImpGraphic::clear()
ImpGraphic::clearGraphics()
ImpGraphic::createSwapInfo()
ImpGraphic::draw(OutputDevice&, Point const&) const
ImpGraphic::draw(OutputDevice&, Point const&, Size const&) const
ImpGraphic::ensureAvailable() const
ImpGraphic::getAnimation() const
ImpGraphic::getAnimationLoopCount() const
ImpGraphic::getAnimationNotifyHdl() const
ImpGraphic::getBitmap(GraphicConversionParameters const&) const
ImpGraphic::getBitmapEx(GraphicConversionParameters const&) const
ImpGraphic::getBitmapExRef() const
ImpGraphic::getChecksum() const
ImpGraphic::getGDIMetaFile() const
ImpGraphic::getGfxLink() const
ImpGraphic::getPageNumber() const
ImpGraphic::getPrefMapMode() const
ImpGraphic::getPrefSize() const
ImpGraphic::getSharedGfxLink() const
ImpGraphic::getSizeBytes() const
ImpGraphic::getSizePixel() const
ImpGraphic::getVectorGraphicData() const
ImpGraphic::getVectorGraphicReplacement() const
ImpGraphic::isAlpha() const
ImpGraphic::isAnimated() const
ImpGraphic::isAvailable() const
ImpGraphic::isEPS() const
ImpGraphic::isGfxLink() const
ImpGraphic::isSupportedGraphic() const
ImpGraphic::isTransparent() const
ImpGraphic::makeAvailable()
ImpGraphic::operator=(ImpGraphic const&)
ImpGraphic::operator=(ImpGraphic&&)
ImpGraphic::operator==(ImpGraphic const&) const
ImpGraphic::restoreFromSwapInfo()
ImpGraphic::setAnimationNotifyHdl(Link<Animation*, void> const&)
ImpGraphic::setContext(std::shared_ptr<GraphicReader> const&)
ImpGraphic::setDefaultType()
ImpGraphic::setGfxLink(std::shared_ptr<GfxLink> const&)
ImpGraphic::setPrefMapMode(MapMode const&)
ImpGraphic::setPrefSize(Size const&)
ImpGraphic::setPrepared(bool, Size const*)
ImpGraphic::setValuesForPrefMapMod(MapMode const&)
ImpGraphic::setValuesForPrefSize(Size const&)
ImpGraphic::startAnimation(OutputDevice&, Point const&, Size const&, long, OutputDevice*)
ImpGraphic::stopAnimation(OutputDevice const*, long)
ImpGraphic::swapIn()
ImpGraphic::swapInContent(SvStream&)
ImpGraphic::swapInFromStream(SvStream&)
ImpGraphic::swapInGraphic(SvStream&)
ImpGraphic::swapOutContent(SvStream&)
ImpGraphic::swapOutGraphic(SvStream&)
ImpGraphic::updateFromLoadedGraphic(ImpGraphic const*)
ImpGraphic::~ImpGraphic()
ImplCallPreNotify(NotifyEvent&)
ImplControlValue::clone() const
ImplControlValue::~ImplControlValue()
ImplDestroyHelpWindow(bool)
ImplFastBitmapConversion(BitmapBuffer&, BitmapBuffer const&, SalTwoRect const&)
ImplFontMetricData::ImplFontMetricData(vcl::font::FontSelectPattern const&)
ImplFontMetricData::ImplInitAboveTextLineSize()
ImplFontMetricData::ImplInitFlags(OutputDevice const*)
ImplFontMetricData::ImplInitTextLineSize(OutputDevice const*)
ImplFontMetricData::ShouldUseWinMetrics(vcl::TTGlobalFontInfo_ const&) const
ImplGetSalSystem()
ImplHideSplash()
ImplJobSetup::ImplJobSetup()
ImplJobSetup::ImplJobSetup(ImplJobSetup const&)
ImplJobSetup::SetDriver(rtl::OUString const&)
ImplJobSetup::SetDriverData(unsigned char*)
ImplJobSetup::SetDriverDataLen(unsigned int)
ImplJobSetup::SetDuplexMode(DuplexMode)
ImplJobSetup::SetOrientation(Orientation)
ImplJobSetup::SetPaperBin(unsigned short)
ImplJobSetup::SetPaperFormat(Paper)
ImplJobSetup::SetPaperHeight(long)
ImplJobSetup::SetPaperWidth(long)
ImplJobSetup::SetPapersizeFromSetup(bool)
ImplJobSetup::SetPrinterName(rtl::OUString const&)
ImplJobSetup::SetPrinterSetupMode(PrinterSetupMode)
ImplJobSetup::SetSystem(unsigned short)
ImplJobSetup::SetValueMap(rtl::OUString const&, rtl::OUString const&)
ImplJobSetup::operator==(ImplJobSetup const&) const
ImplJobSetup::~ImplJobSetup()
ImplPrnQueueList::Get(rtl::OUString const&)
ImplPrnQueueList::~ImplPrnQueueList()
ImplSVMain()
IndexEntryResource::IndexEntryResource()
IndexEntrySupplierWrapper::CompareIndexEntry(rtl::OUString const&, rtl::OUString const&, com::sun::star::lang::Locale const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::lang::Locale const&) const
IndexEntrySupplierWrapper::GetFollowingText(bool) const
IndexEntrySupplierWrapper::GetIndexKey(rtl::OUString const&, rtl::OUString const&, com::sun::star::lang::Locale const&) const
IndexEntrySupplierWrapper::IndexEntrySupplierWrapper()
IndexEntrySupplierWrapper::LoadAlgorithm(com::sun::star::lang::Locale const&, rtl::OUString const&, long) const
IndexEntrySupplierWrapper::~IndexEntrySupplierWrapper()
IndexerPreProcessor::IndexerPreProcessor(fs::path const&, fs::path const&, fs::path const&)
IndexerPreProcessor::processDocument(_xmlDoc*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
IndexerPreProcessor::~IndexerPreProcessor()
InputDialog::InputDialog(weld::Widget*, rtl::OUString const&)
InputDialog::SetEntryMessageType(weld::EntryMessageType)
InputDialog::SetTooltip(rtl::OUString const&)
InputDialog::setCheckEntry(std::function<bool (rtl::OUString)>)
InsCaptionOpt::InsCaptionOpt(SwCapObjType, SvGlobalName const*)
InterimItemWindow::ControlHasFocus() const
InterimItemWindow::InterimItemWindow(vcl::Window*, rtl::OUString const&, rtl::OString const&, bool, unsigned long)
InterimItemWindow::InvalidateChildSizeCache()
InterimItemWindow::StartIdleLayout()
InterimItemWindow::~InterimItemWindow()
InterimToolbarPopup::EndPopupMode()
InterimToolbarPopup::GetFocus()
InterimToolbarPopup::InterimToolbarPopup(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, vcl::Window*, std::unique_ptr<WeldToolbarPopup, std::default_delete<WeldToolbarPopup> >, bool)
InterimToolbarPopup::dispose()
InterimToolbarPopup::~InterimToolbarPopup()
IntlWrapper::IntlWrapper(LanguageTag const&)
IntlWrapper::~IntlWrapper()
IsCustomShapeFilledByDefault(MSO_SPT)
IsCustomShapeStrokedByDefault(MSO_SPT)
IsVCLInit()
JobSetup::IsDefault() const
JobSetup::JobSetup()
JobSetup::JobSetup(JobSetup const&)
JobSetup::operator=(JobSetup const&)
JobSetup::operator=(JobSetup&&)
JobSetup::~JobSetup()
JoinMainLoopThread()
KeyListenerMultiplexer::KeyListenerMultiplexer(cppu::OWeakObject&)
KeyListenerMultiplexer::acquire()
KeyListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
KeyListenerMultiplexer::keyPressed(com::sun::star::awt::KeyEvent const&)
KeyListenerMultiplexer::keyReleased(com::sun::star::awt::KeyEvent const&)
KeyListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
KeyListenerMultiplexer::release()
LabelItemWindow::LabelItemWindow(vcl::Window*, rtl::OUString const&)
LabelItemWindow::SetOptimalSize()
LabelItemWindow::dispose()
LabelItemWindow::get_label() const
LabelItemWindow::set_label(rtl::OUString const&)
LabelItemWindow::~LabelItemWindow()
LanguageTag::LanguageTag(_rtl_Locale const&)
LanguageTag::LanguageTag(com::sun::star::lang::Locale const&)
LanguageTag::LanguageTag(o3tl::strong_int<unsigned short, LanguageTypeTag>)
LanguageTag::LanguageTag(rtl::OUString const&, bool)
LanguageTag::LanguageTag(rtl::OUString const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
LanguageTag::convertBcp47ToLang()
LanguageTag::convertBcp47ToLocale()
LanguageTag::convertFromRtlLocale()
LanguageTag::convertLangToLocale()
LanguageTag::convertLocaleToLang()
LanguageTag::getImpl()
LanguageTag::getImpl() const
LanguageTag::getOnTheFlyScriptType(o3tl::strong_int<unsigned short, LanguageTypeTag>)
LanguageTag::getScriptType() const
LanguageTag::isIsoCountry(rtl::OUString const&)
LanguageTag::isIsoLanguage(rtl::OUString const&)
LanguageTag::isIsoScript(rtl::OUString const&)
LanguageTag::registerImpl() const
LanguageTag::resetVars()
LanguageTag::synCanonicalize()
LanguageTag::syncFromImpl()
LanguageTag::syncVarsFromImpl() const
LanguageTag::syncVarsFromRawImpl() const
LanguageTag::~LanguageTag()
LightButton::LightButton(std::unique_ptr<weld::ToggleButton, std::default_delete<weld::ToggleButton> >)
LineInfo::LineInfo(LineInfo const&)
LineInfo::LineInfo(LineInfo&&)
LineInfo::LineInfo(LineStyle, double)
LineInfo::SetStyle(LineStyle)
LineInfo::applyToB2DPolyPolygon(basegfx::B2DPolyPolygon&, basegfx::B2DPolyPolygon&) const
LineInfo::operator=(LineInfo const&)
LineInfo::operator=(LineInfo&&)
LineInfo::operator==(LineInfo const&) const
LineInfo::~LineInfo()
LinguMgr::GetChangeAll()
LinguMgr::GetDicList()
LinguMgr::GetHyph()
LinguMgr::GetIgnoreAll()
LinguMgr::GetProp()
LinguMgr::GetSpell()
LinguMgr::GetStandard()
LinguMgr::GetThes()
ListBox::AdaptDropDownLineCountToMaximum()
ListBox::AddSeparator(int)
ListBox::ApplySettings(OutputDevice&)
ListBox::CalcAdjustedSize(Size const&) const
ListBox::CalcBlockSize(unsigned short, unsigned short) const
ListBox::CalcMinimumSize() const
ListBox::CalcSubEditSize() const
ListBox::Clear()
ListBox::DataChanged(DataChangedEvent const&)
ListBox::DoubleClick()
ListBox::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
ListBox::DumpAsPropertyTree(tools::JsonWriter&)
ListBox::EnableAutoSize(bool)
ListBox::EnableMultiSelection(bool)
ListBox::FillLayoutData() const
ListBox::GetDisplayBackground() const
ListBox::GetDropDownLineCount() const
ListBox::GetEntryData(int) const
ListBox::GetEntryImage(int) const
ListBox::GetEntryPos(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ListBox::GetFocus()
ListBox::GetOptimalSize() const
ListBox::GetSeparatorPos() const
ListBox::GetUITestFactory() const
ListBox::InsertEntry(rtl::OUString const&, Image const&, int)
ListBox::InsertEntry(rtl::OUString const&, int)
ListBox::IsReadOnly() const
ListBox::IsTravelSelect() const
ListBox::ListBox(WindowType)
ListBox::ListBox(vcl::Window*, long)
ListBox::LoseFocus()
ListBox::PreNotify(NotifyEvent&)
ListBox::RemoveEntry(int)
ListBox::Resize()
ListBox::SelectEntriesPos(std::vector<int, std::allocator<int> > const&, bool)
ListBox::SelectEntry(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
ListBox::SetDropDownLineCount(unsigned short)
ListBox::SetEntryData(int, void*)
ListBox::SetEntryFlags(int, ListBoxEntryFlags)
ListBox::SetReadOnly(bool)
ListBox::SetSeparatorPos(int)
ListBox::SetTopEntry(int)
ListBox::StateChanged(StateChangedType)
ListBox::dispose()
ListBox::setMaxWidthChars(int)
ListBox::setPosSizePixel(long, long, long, long, PosSizeFlags)
ListBox::set_property(rtl::OString const&, rtl::OUString const&)
ListBox::~ListBox()
LocaleDataWrapper::ImplAddFormatNum(rtl::OUStringBuffer&, long, unsigned short, bool, bool) const
LocaleDataWrapper::LocaleDataWrapper(LanguageTag const&, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
LocaleDataWrapper::LocaleDataWrapper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, LanguageTag const&)
LocaleDataWrapper::appendLocaleInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
LocaleDataWrapper::doesSecondaryCalendarUseEC(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
LocaleDataWrapper::evaluateLocaleDataChecking()
LocaleDataWrapper::getAllCurrencies() const
LocaleDataWrapper::getAllFormats() const
LocaleDataWrapper::getAllInstalledLocaleNames() const
LocaleDataWrapper::getCurr(long, unsigned short, rtl::OUString const&, bool) const
LocaleDataWrapper::getCurrBankSymbol() const
LocaleDataWrapper::getCurrDigits() const
LocaleDataWrapper::getCurrNegativeFormat() const
LocaleDataWrapper::getCurrPositiveFormat() const
LocaleDataWrapper::getDefaultCalendar() const
LocaleDataWrapper::getInstalledLocaleNames()
LocaleDataWrapper::getLanguageCountryInfo() const
LocaleDataWrapper::getLongDateOrder() const
LocaleDataWrapper::getMyLocale() const
LocaleDataWrapper::loadCurrencyFormats()
LocaleDataWrapper::loadData()
LocaleDataWrapper::loadDateAcceptancePatterns(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
LocaleDataWrapper::loadDateOrders()
LocaleDataWrapper::loadDigitGrouping()
LocaleDataWrapper::outputCheckMessage(char const*)
LocaleDataWrapper::outputCheckMessage(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
LocaleDataWrapper::scanCurrFormatImpl(rtl::OUString const&, int, int&, int&, int&, int&, int&) const
LocaleDataWrapper::scanDateOrderImpl(rtl::OUString const&) const
LocaleDataWrapper::~LocaleDataWrapper()
LogicalFontInstance::AddFallbackForUnicode(unsigned int, FontWeight, rtl::OUString const&)
LogicalFontInstance::GetFallbackForUnicode(unsigned int, FontWeight, rtl::OUString*) const
LogicalFontInstance::GetGlyphBoundRect(unsigned short, tools::Rectangle&, bool) const
LogicalFontInstance::GetScale(double*, double*)
LogicalFontInstance::IgnoreFallbackForUnicode(unsigned int, FontWeight, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
LogicalFontInstance::IsGraphiteFont()
LogicalFontInstance::LogicalFontInstance(vcl::font::PhysicalFontFace const&, vcl::font::FontSelectPattern const&)
LogicalFontInstance::~LogicalFontInstance()
LokChartHelper::Hit(Point const&)
LokChartHelper::Invalidate()
LokChartHelper::PaintTile(VirtualDevice&, tools::Rectangle const&)
MSE40HTMLClipFormatObj::~MSE40HTMLClipFormatObj()
MailDispatcher::MailDispatcher(com::sun::star::uno::Reference<com::sun::star::mail::XSmtpService> const&)
MailDispatcher::cloneListener()
MailDispatcher::onTerminated()
MailDispatcher::run()
MailDispatcher::sendMailMessageNotifyListener(com::sun::star::uno::Reference<com::sun::star::mail::XMailMessage> const&)
MailDispatcher::~MailDispatcher()
MapMode::IsDefault() const
MapMode::MapMode()
MapMode::MapMode(MapMode const&)
MapMode::MapMode(MapUnit)
MapMode::MapMode(MapUnit, Point const&, Fraction const&, Fraction const&)
MapMode::~MapMode()
Menu::Activate()
Menu::CheckItem(std::basic_string_view<char, std::char_traits<char> >, bool)
Menu::GetHelpCommand(unsigned short) const
Menu::GetHelpId(unsigned short) const
Menu::GetHelpText(unsigned short) const
Menu::GetSystemMenuData(SystemMenuData*) const
Menu::GetUserValue(unsigned short) const
Menu::InsertItem(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
Menu::InsertItem(unsigned short, Image const&, MenuItemBits, rtl::OString const&, unsigned short)
Menu::InsertItem(unsigned short, rtl::OUString const&, Image const&, MenuItemBits, rtl::OString const&, unsigned short)
Menu::Menu()
Menu::MenuBarKeyInput(KeyEvent const&)
Menu::RemoveItem(unsigned short)
Menu::Select()
Menu::SetAccelKey(unsigned short, vcl::KeyCode const&)
Menu::SetAccessibleDescription(unsigned short, rtl::OUString const&)
Menu::SetAccessibleName(unsigned short, rtl::OUString const&)
Menu::SetHelpCommand(unsigned short, rtl::OUString const&)
Menu::SetHelpText(unsigned short, rtl::OUString const&)
Menu::SetItemBits(unsigned short, MenuItemBits)
Menu::SetTipHelpText(unsigned short, rtl::OUString const&)
Menu::SetUserValue(unsigned short, void*, void (*)(void*))
Menu::ShowItem(unsigned short, bool)
Menu::dispose()
Menu::operator=(Menu const&)
Menu::~Menu()
MenuBar::AddMenuBarButton(Image const&, Link<MenuBarButtonCallbackArg&, bool> const&, rtl::OUString const&)
MenuBar::ClosePopup(Menu*)
MenuBar::GetMenuBarButtonRectPixel(unsigned short)
MenuBar::GetMenuBarHeight() const
MenuBar::HandleMenuHighlightEvent(Menu*, unsigned short) const
MenuBar::MenuBar()
MenuBar::MenuBar(MenuBar const&)
MenuBar::MenuBarKeyInput(KeyEvent const&)
MenuBar::RemoveMenuBarButton(unsigned short)
MenuBar::SelectItem(unsigned short)
MenuBar::SetDisplayable(bool)
MenuBar::SetMenuBarButtonHighlightHdl(unsigned short, Link<MenuBarButtonCallbackArg&, bool> const&)
MenuBar::ShowButtons(bool, bool, bool)
MenuBar::ShowCloseButton(bool)
MenuBar::dispose()
MenuBar::getMenuBarWindow()
MenuBar::~MenuBar()
MenuBarUpdateIconManager::AddMenuBarIcon(SystemWindow*, bool)
MenuBarUpdateIconManager::GetBubbleWindow()
MenuBarUpdateIconManager::MenuBarUpdateIconManager()
MenuBarUpdateIconManager::RemoveBubbleWindow(bool)
MenuBarUpdateIconManager::SetBubbleChanged()
MenuBarUpdateIconManager::SetBubbleImage(Image const&)
MenuBarUpdateIconManager::SetBubbleText(rtl::OUString const&)
MenuBarUpdateIconManager::SetBubbleTitle(rtl::OUString const&)
MenuBarUpdateIconManager::SetShowBubble(bool)
MenuBarUpdateIconManager::SetShowMenuIcon(bool)
MenuBarUpdateIconManager::~MenuBarUpdateIconManager()
MenuButton::Activate()
MenuButton::CancelMenu()
MenuButton::ExecuteMenu()
MenuButton::GetUITestFactory() const
MenuButton::InPopupMode() const
MenuButton::KeyInput(KeyEvent const&)
MenuButton::MenuButton(vcl::Window*, long)
MenuButton::MouseButtonDown(MouseEvent const&)
MenuButton::Select()
MenuButton::SetCurItemId()
MenuButton::SetPopover(vcl::Window*)
MenuButton::SetPopupMenu(PopupMenu*)
MenuButton::dispose()
MenuButton::~MenuButton()
MenuOrToolMenuButton::MenuOrToolMenuButton(SvxColorToolBoxControl*, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>)
MenuOrToolMenuButton::MenuOrToolMenuButton(weld::MenuButton*)
MenuOrToolMenuButton::MenuOrToolMenuButton(weld::Toolbar*, rtl::OString const&)
MenuOrToolMenuButton::get_active() const
MenuOrToolMenuButton::get_widget() const
MenuOrToolMenuButton::~MenuOrToolMenuButton()
MetaAction::Clone() const
MetaAction::Execute(OutputDevice*)
MetaAction::MetaAction()
MetaAction::MetaAction(MetaAction const&)
MetaAction::MetaAction(MetaActionType)
MetaAction::Move(long, long)
MetaAction::Scale(double, double)
MetaAction::~MetaAction()
MetaArcAction::Clone() const
MetaArcAction::Execute(OutputDevice*)
MetaArcAction::MetaArcAction()
MetaArcAction::MetaArcAction(tools::Rectangle const&, Point const&, Point const&)
MetaArcAction::Move(long, long)
MetaArcAction::Scale(double, double)
MetaArcAction::~MetaArcAction()
MetaBmpAction::Clone() const
MetaBmpAction::Execute(OutputDevice*)
MetaBmpAction::MetaBmpAction()
MetaBmpAction::MetaBmpAction(Point const&, Bitmap const&)
MetaBmpAction::Move(long, long)
MetaBmpAction::Scale(double, double)
MetaBmpAction::~MetaBmpAction()
MetaBmpExAction::Clone() const
MetaBmpExAction::Execute(OutputDevice*)
MetaBmpExAction::MetaBmpExAction()
MetaBmpExAction::MetaBmpExAction(Point const&, BitmapEx const&)
MetaBmpExAction::Move(long, long)
MetaBmpExAction::Scale(double, double)
MetaBmpExAction::~MetaBmpExAction()
MetaBmpExScaleAction::Clone() const
MetaBmpExScaleAction::Execute(OutputDevice*)
MetaBmpExScaleAction::MetaBmpExScaleAction()
MetaBmpExScaleAction::MetaBmpExScaleAction(Point const&, Size const&, BitmapEx const&)
MetaBmpExScaleAction::Move(long, long)
MetaBmpExScaleAction::Scale(double, double)
MetaBmpExScaleAction::~MetaBmpExScaleAction()
MetaBmpScaleAction::Clone() const
MetaBmpScaleAction::Execute(OutputDevice*)
MetaBmpScaleAction::MetaBmpScaleAction()
MetaBmpScaleAction::MetaBmpScaleAction(Point const&, Size const&, Bitmap const&)
MetaBmpScaleAction::Move(long, long)
MetaBmpScaleAction::Scale(double, double)
MetaBmpScaleAction::~MetaBmpScaleAction()
MetaChordAction::Clone() const
MetaChordAction::Execute(OutputDevice*)
MetaChordAction::MetaChordAction()
MetaChordAction::MetaChordAction(tools::Rectangle const&, Point const&, Point const&)
MetaChordAction::Move(long, long)
MetaChordAction::Scale(double, double)
MetaChordAction::~MetaChordAction()
MetaClipRegionAction::Clone() const
MetaClipRegionAction::MetaClipRegionAction()
MetaClipRegionAction::MetaClipRegionAction(vcl::Region const&, bool)
MetaClipRegionAction::Move(long, long)
MetaClipRegionAction::Scale(double, double)
MetaClipRegionAction::~MetaClipRegionAction()
MetaCommentAction::Clone() const
MetaCommentAction::Execute(OutputDevice*)
MetaCommentAction::MetaCommentAction()
MetaCommentAction::MetaCommentAction(MetaCommentAction const&)
MetaCommentAction::MetaCommentAction(rtl::OString const&, int, unsigned char const*, unsigned int)
MetaCommentAction::Move(long, long)
MetaCommentAction::Scale(double, double)
MetaCommentAction::~MetaCommentAction()
MetaEPSAction::Clone() const
MetaEPSAction::Execute(OutputDevice*)
MetaEPSAction::MetaEPSAction()
MetaEPSAction::MetaEPSAction(Point const&, Size const&, GfxLink const&, GDIMetaFile const&)
MetaEPSAction::Move(long, long)
MetaEPSAction::Scale(double, double)
MetaEPSAction::~MetaEPSAction()
MetaEllipseAction::Clone() const
MetaEllipseAction::Execute(OutputDevice*)
MetaEllipseAction::MetaEllipseAction()
MetaEllipseAction::MetaEllipseAction(tools::Rectangle const&)
MetaEllipseAction::Move(long, long)
MetaEllipseAction::Scale(double, double)
MetaEllipseAction::~MetaEllipseAction()
MetaFillColorAction::Clone() const
MetaFillColorAction::MetaFillColorAction()
MetaFillColorAction::MetaFillColorAction(Color const&, bool)
MetaFillColorAction::~MetaFillColorAction()
MetaFontAction::Clone() const
MetaFontAction::MetaFontAction()
MetaFontAction::MetaFontAction(vcl::Font const&)
MetaFontAction::Scale(double, double)
MetaFontAction::~MetaFontAction()
MetaGradientExAction::Clone() const
MetaGradientExAction::Execute(OutputDevice*)
MetaGradientExAction::MetaGradientExAction()
MetaGradientExAction::MetaGradientExAction(tools::PolyPolygon const&, Gradient const&)
MetaGradientExAction::Move(long, long)
MetaGradientExAction::Scale(double, double)
MetaGradientExAction::~MetaGradientExAction()
MetaISectRectClipRegionAction::Clone() const
MetaISectRectClipRegionAction::MetaISectRectClipRegionAction()
MetaISectRectClipRegionAction::MetaISectRectClipRegionAction(tools::Rectangle const&)
MetaISectRectClipRegionAction::Move(long, long)
MetaISectRectClipRegionAction::Scale(double, double)
MetaISectRectClipRegionAction::~MetaISectRectClipRegionAction()
MetaISectRegionClipRegionAction::Clone() const
MetaISectRegionClipRegionAction::MetaISectRegionClipRegionAction()
MetaISectRegionClipRegionAction::MetaISectRegionClipRegionAction(vcl::Region const&)
MetaISectRegionClipRegionAction::Move(long, long)
MetaISectRegionClipRegionAction::Scale(double, double)
MetaISectRegionClipRegionAction::~MetaISectRegionClipRegionAction()
MetaLayoutModeAction::Clone() const
MetaLayoutModeAction::MetaLayoutModeAction()
MetaLayoutModeAction::MetaLayoutModeAction(vcl::text::ComplexTextLayoutFlags)
MetaLayoutModeAction::~MetaLayoutModeAction()
MetaLineAction::Clone() const
MetaLineAction::Execute(OutputDevice*)
MetaLineAction::MetaLineAction()
MetaLineAction::MetaLineAction(Point const&, Point const&)
MetaLineAction::MetaLineAction(Point const&, Point const&, LineInfo const&)
MetaLineAction::Move(long, long)
MetaLineAction::Scale(double, double)
MetaLineAction::~MetaLineAction()
MetaLineColorAction::Clone() const
MetaLineColorAction::MetaLineColorAction()
MetaLineColorAction::MetaLineColorAction(Color const&, bool)
MetaLineColorAction::~MetaLineColorAction()
MetaMapModeAction::Clone() const
MetaMapModeAction::MetaMapModeAction()
MetaMapModeAction::MetaMapModeAction(MapMode const&)
MetaMapModeAction::Scale(double, double)
MetaMapModeAction::~MetaMapModeAction()
MetaMoveClipRegionAction::Clone() const
MetaMoveClipRegionAction::MetaMoveClipRegionAction()
MetaMoveClipRegionAction::MetaMoveClipRegionAction(long, long)
MetaMoveClipRegionAction::Scale(double, double)
MetaMoveClipRegionAction::~MetaMoveClipRegionAction()
MetaOverlineColorAction::Clone() const
MetaOverlineColorAction::MetaOverlineColorAction()
MetaOverlineColorAction::MetaOverlineColorAction(Color const&, bool)
MetaOverlineColorAction::~MetaOverlineColorAction()
MetaPieAction::Clone() const
MetaPieAction::Execute(OutputDevice*)
MetaPieAction::MetaPieAction()
MetaPieAction::MetaPieAction(tools::Rectangle const&, Point const&, Point const&)
MetaPieAction::Move(long, long)
MetaPieAction::Scale(double, double)
MetaPieAction::~MetaPieAction()
MetaPixelAction::Clone() const
MetaPixelAction::Execute(OutputDevice*)
MetaPixelAction::MetaPixelAction()
MetaPixelAction::MetaPixelAction(Point const&, Color const&)
MetaPixelAction::Move(long, long)
MetaPixelAction::Scale(double, double)
MetaPixelAction::~MetaPixelAction()
MetaPointAction::Clone() const
MetaPointAction::Execute(OutputDevice*)
MetaPointAction::MetaPointAction()
MetaPointAction::MetaPointAction(Point const&)
MetaPointAction::Move(long, long)
MetaPointAction::Scale(double, double)
MetaPointAction::~MetaPointAction()
MetaPolyLineAction::Clone() const
MetaPolyLineAction::Execute(OutputDevice*)
MetaPolyLineAction::MetaPolyLineAction()
MetaPolyLineAction::MetaPolyLineAction(tools::Polygon const&)
MetaPolyLineAction::MetaPolyLineAction(tools::Polygon const&, LineInfo const&)
MetaPolyLineAction::Move(long, long)
MetaPolyLineAction::Scale(double, double)
MetaPolyLineAction::~MetaPolyLineAction()
MetaPolyPolygonAction::Clone() const
MetaPolyPolygonAction::Execute(OutputDevice*)
MetaPolyPolygonAction::MetaPolyPolygonAction()
MetaPolyPolygonAction::MetaPolyPolygonAction(tools::PolyPolygon const&)
MetaPolyPolygonAction::Move(long, long)
MetaPolyPolygonAction::Scale(double, double)
MetaPolyPolygonAction::~MetaPolyPolygonAction()
MetaPolygonAction::Clone() const
MetaPolygonAction::Execute(OutputDevice*)
MetaPolygonAction::MetaPolygonAction()
MetaPolygonAction::MetaPolygonAction(tools::Polygon const&)
MetaPolygonAction::Move(long, long)
MetaPolygonAction::Scale(double, double)
MetaPolygonAction::~MetaPolygonAction()
MetaPopAction::Clone() const
MetaPopAction::MetaPopAction()
MetaPopAction::~MetaPopAction()
MetaPushAction::Clone() const
MetaPushAction::MetaPushAction()
MetaPushAction::MetaPushAction(vcl::PushFlags)
MetaPushAction::~MetaPushAction()
MetaRasterOpAction::Clone() const
MetaRasterOpAction::MetaRasterOpAction()
MetaRasterOpAction::MetaRasterOpAction(RasterOp)
MetaRasterOpAction::~MetaRasterOpAction()
MetaRectAction::Clone() const
MetaRectAction::Execute(OutputDevice*)
MetaRectAction::MetaRectAction()
MetaRectAction::MetaRectAction(tools::Rectangle const&)
MetaRectAction::Move(long, long)
MetaRectAction::Scale(double, double)
MetaRectAction::~MetaRectAction()
MetaRefPointAction::Clone() const
MetaRefPointAction::MetaRefPointAction()
MetaRefPointAction::MetaRefPointAction(Point const&, bool)
MetaRefPointAction::~MetaRefPointAction()
MetaRoundRectAction::Clone() const
MetaRoundRectAction::Execute(OutputDevice*)
MetaRoundRectAction::MetaRoundRectAction()
MetaRoundRectAction::MetaRoundRectAction(tools::Rectangle const&, unsigned int, unsigned int)
MetaRoundRectAction::Move(long, long)
MetaRoundRectAction::Scale(double, double)
MetaRoundRectAction::~MetaRoundRectAction()
MetaTextAlignAction::Clone() const
MetaTextAlignAction::MetaTextAlignAction()
MetaTextAlignAction::MetaTextAlignAction(TextAlign)
MetaTextAlignAction::~MetaTextAlignAction()
MetaTextColorAction::Clone() const
MetaTextColorAction::MetaTextColorAction()
MetaTextColorAction::MetaTextColorAction(Color const&)
MetaTextColorAction::~MetaTextColorAction()
MetaTextFillColorAction::Clone() const
MetaTextFillColorAction::MetaTextFillColorAction()
MetaTextFillColorAction::MetaTextFillColorAction(Color const&, bool)
MetaTextFillColorAction::~MetaTextFillColorAction()
MetaTextLanguageAction::Clone() const
MetaTextLanguageAction::MetaTextLanguageAction()
MetaTextLanguageAction::MetaTextLanguageAction(o3tl::strong_int<unsigned short, LanguageTypeTag>)
MetaTextLanguageAction::~MetaTextLanguageAction()
MetaTextLineColorAction::Clone() const
MetaTextLineColorAction::MetaTextLineColorAction()
MetaTextLineColorAction::MetaTextLineColorAction(Color const&, bool)
MetaTextLineColorAction::~MetaTextLineColorAction()
MetafileXmlDump::MetafileXmlDump()
MetafileXmlDump::dump(GDIMetaFile const&, SvStream&)
MetafileXmlDump::writeXml(GDIMetaFile const&, tools::XmlWriter&)
MetafileXmlDump::~MetafileXmlDump()
MetricBox::CalcMinimumSize() const
MetricBox::DataChanged(DataChangedEvent const&)
MetricBox::EventNotify(NotifyEvent&)
MetricBox::MetricBox(vcl::Window*, long)
MetricBox::Modify()
MetricBox::PreNotify(NotifyEvent&)
MetricBox::ReformatAll()
MetricBox::dispose()
MetricField::CalcMinimumSize() const
MetricField::DataChanged(DataChangedEvent const&)
MetricField::Down()
MetricField::DumpAsPropertyTree(tools::JsonWriter&)
MetricField::EventNotify(NotifyEvent&)
MetricField::First()
MetricField::GetFirst(FieldUnit) const
MetricField::GetLast(FieldUnit) const
MetricField::GetUITestFactory() const
MetricField::Last()
MetricField::MetricField(vcl::Window*, long)
MetricField::Modify()
MetricField::PreNotify(NotifyEvent&)
MetricField::SetFirst(long, FieldUnit)
MetricField::SetLast(long, FieldUnit)
MetricField::SetUnit(FieldUnit)
MetricField::Up()
MetricField::dispose()
MetricField::set_property(rtl::OString const&, rtl::OUString const&)
MetricFormatter::CreateFieldText(long) const
MetricFormatter::GetCorrectedValue(FieldUnit) const
MetricFormatter::GetMax(FieldUnit) const
MetricFormatter::GetMin(FieldUnit) const
MetricFormatter::GetValue(FieldUnit) const
MetricFormatter::GetValueFromString(rtl::OUString const&) const
MetricFormatter::GetValueFromStringUnit(rtl::OUString const&, FieldUnit) const
MetricFormatter::MetricFormatter(Edit*)
MetricFormatter::Reformat()
MetricFormatter::SetCustomUnitText(rtl::OUString const&)
MetricFormatter::SetMax(long, FieldUnit)
MetricFormatter::SetMin(long, FieldUnit)
MetricFormatter::SetUnit(FieldUnit)
MetricFormatter::SetUserValue(long, FieldUnit)
MetricFormatter::SetValue(long)
MetricFormatter::SetValue(long, FieldUnit)
MetricFormatter::~MetricFormatter()
MiscSettings::MiscSettings()
MiscSettings::SetEnableLocalizedDecimalSep(bool)
MiscSettings::operator!=(MiscSettings const&) const
MiscSettings::operator==(MiscSettings const&) const
MnemonicGenerator::GetCharClass()
MnemonicGenerator::MnemonicGenerator(char16_t)
MouseListenerMultiplexer::MouseListenerMultiplexer(cppu::OWeakObject&)
MouseListenerMultiplexer::acquire()
MouseListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
MouseListenerMultiplexer::mouseEntered(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::mouseExited(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::mousePressed(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::mouseReleased(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
MouseListenerMultiplexer::release()
MouseMotionListenerMultiplexer::MouseMotionListenerMultiplexer(cppu::OWeakObject&)
MouseMotionListenerMultiplexer::acquire()
MouseMotionListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
MouseMotionListenerMultiplexer::mouseDragged(com::sun::star::awt::MouseEvent const&)
MouseMotionListenerMultiplexer::mouseMoved(com::sun::star::awt::MouseEvent const&)
MouseMotionListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
MouseMotionListenerMultiplexer::release()
MouseSettings::CopyData()
MouseSettings::GetActionDelay()
MouseSettings::GetButtonStartRepeat()
MouseSettings::GetContextMenuClicks()
MouseSettings::GetContextMenuCode()
MouseSettings::GetDoubleClickHeight() const
MouseSettings::GetDoubleClickWidth() const
MouseSettings::GetOptions() const
MouseSettings::GetScrollRepeat()
MouseSettings::GetStartDragCode()
MouseSettings::GetStartDragHeight() const
MouseSettings::GetStartDragWidth() const
MouseSettings::GetWheelBehavior() const
MouseSettings::MouseSettings()
MouseSettings::SetButtonRepeat(int)
MouseSettings::SetMiddleButtonAction(MouseMiddleButtonAction)
MouseSettings::SetOptions(MouseSettingsOptions)
MouseSettings::operator!=(MouseSettings const&) const
MouseSettings::operator==(MouseSettings const&) const
MsLangId::getPlatformSystemLanguage()
MsLangId::getPlatformSystemUILanguage()
MultiSelection::LastSelected()
MultiSelection::MultiSelection()
MultiSelection::MultiSelection(MultiSelection const&)
MultiSelection::MultiSelection(Range const&)
MultiSelection::Remove(int)
MultiSelection::Reset()
MultiSelection::operator=(MultiSelection const&)
MultiSelection::~MultiSelection()
MyThes::CleanUpAfterLookup(mentry**, int)
MyThes::Lookup(char const*, int, mentry**)
MyThes::MyThes(char const*, char const*)
MyThes::binsearch(char*, char**, int)
MyThes::get_th_encoding()
MyThes::mychomp(char*)
MyThes::myfopen(char const*, char const*)
MyThes::mystr_indexOfChar(char const*, int)
MyThes::mystrdup(char const*)
MyThes::readLine(_IO_FILE*, char*, int)
MyThes::thCleanup()
MyThes::thInitialize(char const*, char const*)
MyThes::~MyThes()
NameOrIndex::CheckNamedItem(NameOrIndex const*, unsigned short, SfxItemPool const*, bool (*)(NameOrIndex const*, NameOrIndex const*), TranslateId, rtl::Reference<XPropertyList> const&)
NameOrIndex::Clone(SfxItemPool*) const
NameOrIndex::NameOrIndex(NameOrIndex const&)
NameOrIndex::NameOrIndex(unsigned short, int)
NameOrIndex::NameOrIndex(unsigned short, rtl::OUString const&)
NameOrIndex::dumpAsXml(_xmlTextWriter*) const
NameOrIndex::operator==(SfxPoolItem const&) const
NfCurrencyTable::begin()
NfCurrencyTable::insert(__gnu_cxx::__normal_iterator<NfCurrencyEntry*, std::vector<NfCurrencyEntry, std::allocator<NfCurrencyEntry> > > const&, NfCurrencyEntry)
NfCurrencyTable::operator[](unsigned long)
NotebookBar::DataChanged(DataChangedEvent const&)
NotebookBar::GetOptimalSize() const
NotebookBar::NotebookBar(vcl::Window*, rtl::OString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, NotebookBarAddonsItem const&)
NotebookBar::PreNotify(NotifyEvent&)
NotebookBar::Resize()
NotebookBar::SetDisposeCallback(Link<SfxViewShell const*, void>, SfxViewShell const*)
NotebookBar::SetSystemWindow(SystemWindow*)
NotebookBar::StateChanged(StateChangedType)
NotebookBar::StopListeningAllControllers()
NotebookBar::UpdateBackground()
NotebookBar::UpdateDefaultSettings()
NotebookBar::UpdatePersonaSettings()
NotebookBar::dispose()
NotebookBar::setPosSizePixel(long, long, long, long, PosSizeFlags)
NotebookBar::~NotebookBar()
NotifyBrokenPackage::NotifyBrokenPackage(rtl::OUString const&)
NotifyBrokenPackage::~NotifyBrokenPackage()
NotifyEvent::NotifyEvent(MouseNotifyEvent, vcl::Window*, void const*)
NotifyEvent::~NotifyEvent()
NumFormatListBox::Init()
NumFormatListBox::NumFormatListBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
NumFormatListBox::clear()
NumericFormatter::ClipAgainstMinMax(long) const
NumericFormatter::CreateFieldText(long) const
NumericFormatter::Denormalize(long) const
NumericFormatter::FieldDown()
NumericFormatter::FieldFirst()
NumericFormatter::FieldLast()
NumericFormatter::FieldUp()
NumericFormatter::FormatValue(Selection const*)
NumericFormatter::GetValue() const
NumericFormatter::GetValueFromString(rtl::OUString const&) const
NumericFormatter::GetValueString() const
NumericFormatter::Normalize(long) const
NumericFormatter::NumericFormatter(Edit*)
NumericFormatter::Reformat()
NumericFormatter::SetDecimalDigits(unsigned short)
NumericFormatter::SetMax(long)
NumericFormatter::SetMin(long)
NumericFormatter::SetUseThousandSep(bool)
NumericFormatter::SetUserValue(long)
NumericFormatter::SetValue(long)
NumericFormatter::SetValueFromString(rtl::OUString const&)
NumericFormatter::~NumericFormatter()
OFlowChainedText::OFlowChainedText(Outliner const*, bool)
OFlowChainedText::~OFlowChainedText()
OKButton::Click()
OKButton::OKButton(vcl::Window*, long)
OLEObjCache::operator[](unsigned long) const
OLEObjCache::~OLEObjCache()
Octree::CreatePalette(OctreeNode*)
Octree::GetBestPaletteIndex(BitmapColor const&)
Octree::GetPalIndex(OctreeNode const*)
Octree::Octree(BitmapReadAccess const&, unsigned long)
Octree::~Octree()
OfaPtrItem::Clone(SfxItemPool*) const
OfaPtrItem::OfaPtrItem(unsigned short, void*)
OfaPtrItem::operator==(SfxPoolItem const&) const
Op(SkPath const&, SkPath const&, SkPathOp, SkPath*)
OpenCLConfig::OpenCLConfig()
OpenCLConfig::checkImplementation(OpenCLPlatformInfo const&, OpenCLDeviceInfo const&) const
OpenCLConfig::operator==(OpenCLConfig const&) const
OpenGLContext::ImplInit()
OpenGLContext::OpenGLContext()
OpenGLContext::destroyCurrentContext()
OpenGLContext::getChildWindow() const
OpenGLContext::hasCurrent()
OpenGLContext::initWindow()
OpenGLContext::isCurrent()
OpenGLContext::makeCurrent()
OpenGLContext::prepareForYield()
OpenGLContext::resetCurrent()
OpenGLContext::swapBuffers()
OpenGLContext::~OpenGLContext()
OpenGLHelper::ConvertBufferToBitmapEx(unsigned char const*, long, long)
OpenGLHelper::GLErrorString(unsigned int)
OpenGLHelper::GetDigest(rtl::OUString const&, rtl::OUString const&, std::basic_string_view<char, std::char_traits<char> >)
OpenGLHelper::LoadShaders(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >)
OpenGLHelper::OptimalBufferFormat()
OpenGLHelper::checkGLError(char const*, unsigned long)
OpenGLHelper::createFramebuffer(long, long, unsigned int&, unsigned int&, unsigned int&)
OpenGLHelper::debugMsgPrint(int, char const*, ...)
OpenGLHelper::debugMsgStream(std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > const&)
OpenGLHelper::debugMsgStreamWarn(std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > const&)
OpenGLHelper::isDeviceDenylisted()
OpenGLHelper::renderToFile(long, long, rtl::OUString const&)
OpenGLWrapper::getBufferSwapCounter()
OpenGLZone::checkDebug(int, CrashWatchdogTimingsValues const&)
OpenGLZone::getCrashWatchdogTimingsValues()
OpenGLZone::hardDisable()
OpenGLZone::relaxWatchdogTimings()
Outliner::Collapse(Paragraph const*)
Outliner::DepthChangedHdl(Paragraph*, ParaFlag)
Outliner::DrawingTab(Point const&, long, rtl::OUString const&, SvxFont const&, int, unsigned char, bool, bool, Color const&, Color const&)
Outliner::DrawingText(Point const&, rtl::OUString const&, int, int, o3tl::span<int const>, SvxFont const&, int, unsigned char, std::vector<EEngineData::WrongSpellClass, std::allocator<EEngineData::WrongSpellClass> > const*, SvxFieldData const*, bool, bool, bool, com::sun::star::lang::Locale const*, Color const&, Color const&)
Outliner::Expand(Paragraph const*)
Outliner::GetBulletsNumberingStatus(int, int) const
Outliner::GetDocPos(Point const&) const
Outliner::GetNonOverflowingText() const
Outliner::GetNumberFormat(int) const
Outliner::GetOverflowingText() const
Outliner::GetParaBounds(int) const
Outliner::GetStyleSheetPool()
Outliner::ImpCalcBulletArea(int, bool, bool)
Outliner::ImpCalcBulletFont(int) const
Outliner::ImpCanDeleteSelectedPages(OutlinerView*)
Outliner::ImpCanDeleteSelectedPages(OutlinerView*, int, int)
Outliner::ImpCanIndentSelectedPages(OutlinerView*)
Outliner::ImpConvertEdtToOut(int)
Outliner::ImpFilterIndents(int, int)
Outliner::ImpTextPasted(int, int)
Outliner::ImplBlockInsertionCallbacks(bool)
Outliner::ImplCalcBulletText(int, bool, bool)
Outliner::ImplCheckDepth(short&) const
Outliner::ImplCheckNumBulletItem(int)
Outliner::ImplCheckParagraphs(int, int)
Outliner::ImplGetBulletSize(int)
Outliner::ImplGetBulletText(int)
Outliner::ImplGetNumbering(int, SvxNumberFormat const*)
Outliner::ImplHasNumberFormat(int) const
Outliner::ImplInitDepth(int, short, bool)
Outliner::ImplSetLevelDependentStyleSheet(int)
Outliner::IndentingPagesHdl(OutlinerView*)
Outliner::InsertUndo(std::unique_ptr<EditUndo, std::default_delete<EditUndo> >)
Outliner::InvalidateBullet(int)
Outliner::IsForceAutoColor() const
Outliner::IsTextPos(Point const&, unsigned short, bool*)
Outliner::PaintBullet(int, Point const&, Point const&, o3tl::strong_int<short, FractionTag<10> >, OutputDevice&)
Outliner::ParaAttribsChanged(int)
Outliner::ParagraphDeleted(int)
Outliner::ParagraphInserted(int)
Outliner::ParagraphInsertedHdl(Paragraph*)
Outliner::QuickFormatDoc()
Outliner::RemovingPagesHdl(OutlinerView*)
Outliner::SetLevelDependentStyleSheet(int)
Outliner::SetMaxDepth(short)
Outliner::SetToEmptyText()
Outliner::StyleSheetChanged(SfxStyleSheet const*)
Outliner::~Outliner()
OutlinerParaObjData::OutlinerParaObjData(OutlinerParaObjData const&)
OutlinerParaObjData::OutlinerParaObjData(std::unique_ptr<EditTextObject, std::default_delete<EditTextObject> >, std::vector<ParagraphData, std::allocator<ParagraphData> >&&, bool)
OutlinerParaObjData::isWrongListEqual(OutlinerParaObjData const&) const
OutlinerParaObjData::operator==(OutlinerParaObjData const&) const
OutlinerParaObjData::~OutlinerParaObjData()
OutlinerParaObject::GetParagraphData(int) const
OutlinerParaObject::OutlinerParaObject(OutlinerParaObject const&)
OutlinerParaObject::OutlinerParaObject(OutlinerParaObject&&)
OutlinerParaObject::OutlinerParaObject(std::unique_ptr<EditTextObject, std::default_delete<EditTextObject> >)
OutlinerParaObject::OutlinerParaObject(std::unique_ptr<EditTextObject, std::default_delete<EditTextObject> >, std::vector<ParagraphData, std::allocator<ParagraphData> >&&, bool)
OutlinerParaObject::~OutlinerParaObject()
OutlinerView::GetStyleSheet() const
OutlinerView::Indent(short)
OutlinerView::OutlinerView(Outliner*, vcl::Window*)
OutlinerView::~OutlinerView()
OutputDevice::AddFontSubstitute(rtl::OUString const&, rtl::OUString const&, AddFontSubstituteFlags)
OutputDevice::AddTempDevFont(rtl::OUString const&, rtl::OUString const&)
OutputDevice::BeginFontSubstitution()
OutputDevice::ClearStack()
OutputDevice::CreateUnoGraphicsList()
OutputDevice::DrawBitmapEx(Point const&, Size const&, Point const&, Size const&, BitmapEx const&, MetaActionType)
OutputDevice::DrawCtrlText(Point const&, rtl::OUString const&, int, int, DrawTextFlags, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >*, rtl::OUString*, SalLayoutGlyphs const*)
OutputDevice::DrawGradientWallpaper(long, long, long, long, Wallpaper const&)
OutputDevice::DrawHatch(tools::PolyPolygon const&, Hatch const&, bool)
OutputDevice::DrawMask(Point const&, Size const&, Point const&, Size const&, Bitmap const&, Color const&)
OutputDevice::DrawNativeControl(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, rtl::OUString const&, Color const&)
OutputDevice::DrawPolyLineDirectInternal(basegfx::B2DHomMatrix const&, basegfx::B2DPolygon const&, double, double, std::vector<double, std::allocator<double> > const*, basegfx::B2DLineJoin, com::sun::star::drawing::LineCap, double)
OutputDevice::EndFontSubstitution()
OutputDevice::FinishTrackingFontMappingUse()
OutputDevice::GetCommonDeviceInfo(Size const&) const
OutputDevice::GetFontCapabilities(vcl::FontCapabilities&) const
OutputDevice::GetGlyphBoundRects(Point const&, rtl::OUString const&, int, int, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >&) const
OutputDevice::GetGraphics() const
OutputDevice::GetInverseViewTransformation(MapMode const&) const
OutputDevice::GetNativeControlRegion(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, tools::Rectangle&, tools::Rectangle&) const
OutputDevice::GetSpriteCanvas() const
OutputDevice::GetSystemGfxDataAny() const
OutputDevice::GetTextIsRTL(rtl::OUString const&, int, int) const
OutputDevice::GetTextOutlines(std::vector<basegfx::B2DPolyPolygon, std::allocator<basegfx::B2DPolyPolygon> >&, rtl::OUString const&, int, int, int, unsigned long, o3tl::span<int const>) const
OutputDevice::GetTextOutlines(std::vector<tools::PolyPolygon, std::allocator<tools::PolyPolygon> >&, rtl::OUString const&, int, int, int, unsigned long, o3tl::span<int const>) const
OutputDevice::GetViewTransformation(MapMode const&) const
OutputDevice::HasFastDrawTransformedBitmap() const
OutputDevice::HitTestNativeScrollbar(ControlPart, tools::Rectangle const&, Point const&, bool&) const
OutputDevice::ImplDrawRotateText(SalLayout&)
OutputDevice::ImplDrawText(OutputDevice&, tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >*, rtl::OUString*, vcl::ITextLayout&)
OutputDevice::ImplDrawText(SalLayout&)
OutputDevice::ImplDrawTextBackground(SalLayout const&)
OutputDevice::ImplDrawTextLine(long, long, long, int, FontStrikeout, FontLineStyle, FontLineStyle, bool)
OutputDevice::ImplDrawTextLines(SalLayout&, FontStrikeout, FontLineStyle, FontLineStyle, bool, bool)
OutputDevice::ImplGetTextBoundRect(SalLayout const&) const
OutputDevice::Invert(tools::Polygon const&, InvertFlags)
OutputDevice::IsNativeControlSupported(ControlType, ControlPart) const
OutputDevice::LogicToPixel(basegfx::B2DPolyPolygon const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolyPolygon const&, MapMode const&) const
OutputDevice::LogicToPixel(tools::PolyPolygon const&) const
OutputDevice::LogicToPixel(tools::Polygon const&) const
OutputDevice::LogicToPixel(tools::Polygon const&, MapMode const&) const
OutputDevice::OutputDevice(OutDevType)
OutputDevice::PixelToLogic(basegfx::B2DPolyPolygon const&) const
OutputDevice::PixelToLogic(basegfx::B2DPolyPolygon const&, MapMode const&) const
OutputDevice::PixelToLogic(basegfx::B2DPolygon const&, MapMode const&) const
OutputDevice::PixelToLogic(tools::PolyPolygon const&) const
OutputDevice::PixelToLogic(tools::Polygon const&) const
OutputDevice::PixelToLogic(tools::Polygon const&, MapMode const&) const
OutputDevice::PixelToLogic(vcl::Region const&) const
OutputDevice::RefreshFontData(bool)
OutputDevice::ReleaseFontCache()
OutputDevice::ReleaseFontCollection()
OutputDevice::RemoveFontsSubstitute()
OutputDevice::ResetNewFontCache()
OutputDevice::SelectClipRegion(vcl::Region const&, SalGraphics*)
OutputDevice::SetFontCollectionFromSVData()
OutputDevice::SetOutOffXPixel(long)
OutputDevice::SetOutOffYPixel(long)
OutputDevice::StartTrackingFontMappingUse()
OutputDevice::~OutputDevice()
PDFSignatureHelper::GetNewSecurityId() const
PDFSignatureHelper::PDFSignatureHelper()
PDFSignatureHelper::ReadAndVerifySignature(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
PDFSignatureHelper::SetDescription(rtl::OUString const&)
PDFSignatureHelper::SetX509Certificate(com::sun::star::uno::Reference<com::sun::star::security::XCertificate> const&)
PDFSignatureHelper::Sign(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
PPTFieldEntry::SetDateTime(unsigned int)
PPTFieldEntry::~PPTFieldEntry()
PPTParagraphObj::GetAttrib(unsigned int, unsigned int&, TSS_Type)
PPTParagraphObj::Next()
PPTParagraphObj::PPTParagraphObj(PPTStyleSheet const&, TSS_Type, unsigned short)
PPTParagraphObj::PPTParagraphObj(PPTStyleTextPropReader&, unsigned long, unsigned long&, PPTStyleSheet const&, TSS_Type, PPTTextRulerInterpreter const&)
PPTParagraphObj::UpdateBulletRelSize(unsigned int&) const
PPTParagraphObj::~PPTParagraphObj()
PPTPortionObj::ApplyTo(SfxItemSet&, SdrPowerPointImport&, TSS_Type, PPTTextObj const*)
PPTPortionObj::GetAttrib(unsigned int, unsigned int&, TSS_Type) const
PPTPortionObj::GetTextField()
PPTPortionObj::PPTPortionObj(PPTCharPropSet const&, PPTStyleSheet const&, TSS_Type, unsigned int)
PPTPortionObj::PPTPortionObj(PPTPortionObj const&)
PPTPortionObj::PPTPortionObj(PPTStyleSheet const&, TSS_Type, unsigned int)
PPTPortionObj::~PPTPortionObj()
PPTTextObj::GetBackground() const
PPTTextObj::Next()
PPTTextObj::PPTTextObj(PPTTextObj const&)
PPTTextObj::PPTTextObj(SvStream&, SdrPowerPointImport&, PptSlidePersistEntry&, DffObjData const*)
PPTTextObj::operator=(PPTTextObj const&)
PPTTextObj::~PPTTextObj()
PaintListenerMultiplexer::PaintListenerMultiplexer(cppu::OWeakObject&)
PaintListenerMultiplexer::acquire()
PaintListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
PaintListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
PaintListenerMultiplexer::release()
PaintListenerMultiplexer::windowPaint(com::sun::star::awt::PaintEvent const&)
PaletteManager::DispatchColorCommand(rtl::OUString const&, std::pair<Color, rtl::OUString> const&)
PaletteManager::GetColorCount() const
PaletteManager::GetPalette() const
PaletteManager::LoadPalettes()
PaletteManager::PaletteManager()
PaletteManager::PopupColorPicker(weld::Window*, rtl::OUString const&, Color const&)
PaletteManager::SetBtnUpdater(svx::ToolboxButtonColorUpdaterBase*)
PaletteManager::SetColorSelectFunction(std::function<void (rtl::OUString const&, std::pair<Color, rtl::OUString> const&)> const&)
PaletteManager::~PaletteManager()
PanelLayout::PanelLayout(weld::Widget*, rtl::OString const&, rtl::OUString const&)
PanelLayout::SetPanel(sfx2::sidebar::Panel*)
PanelLayout::queue_resize()
PanelLayout::~PanelLayout()
PaperInfo::PaperInfo(Paper)
PaperInfo::PaperInfo(long, long)
PaperInfo::fromPSName(rtl::OString const&)
PaperInfo::getDefaultPaperForLocale(com::sun::star::lang::Locale const&)
PaperInfo::sloppyEqual(PaperInfo const&) const
PaperInfo::toPSName(Paper)
PopupMenu::ClosePopup(Menu*)
PopupMenu::CreateMenuInterface()
PopupMenu::EndExecute()
PopupMenu::GetActivePopupMenu()
PopupMenu::PopupMenu()
PopupMenu::PopupMenu(PopupMenu const&)
PopupMenu::SelectItem(unsigned short)
PopupMenu::SetSelectedEntry(unsigned short)
PopupMenu::~PopupMenu()
PowerPointImportParam::PowerPointImportParam(SvStream&)
PptSlidePersistList::PptSlidePersistList()
PptSlidePersistList::~PptSlidePersistList()
Printer::DrawGradientEx(OutputDevice*, tools::Rectangle const&, Gradient const&)
Printer::ExecutePrintJob(std::shared_ptr<vcl::PrinterController> const&)
Printer::GetCapabilities(PrinterCapType) const
Printer::GetDuplexMode() const
Printer::GetPaperInfo(int) const
Printer::GetPaperInfoCount() const
Printer::GetPaperSize(int) const
Printer::GetSizeOfPaper() const
Printer::ImplReleaseGraphics(bool)
Printer::PreparePrintJob(std::shared_ptr<vcl::PrinterController>, JobSetup const&)
Printer::PrintJob(std::shared_ptr<vcl::PrinterController> const&, JobSetup const&)
Printer::Printer(JobSetup const&)
Printer::Printer(QueueInfo const&)
Printer::Printer(rtl::OUString const&)
Printer::SetCopyCount(unsigned short, bool)
Printer::SetDuplexMode(DuplexMode)
Printer::updatePrinters()
Printer::~Printer()
PrinterSetupDialog::PrinterSetupDialog(weld::Window*)
PrinterSetupDialog::SetOptionsHdl(Link<weld::Button&, void> const&)
PrinterSetupDialog::~PrinterSetupDialog()
ProcessData::NotifyFreeObj(SdrObject*)
ProgressBarHelper::ProgressBarHelper(com::sun::star::uno::Reference<com::sun::star::task::XStatusIndicator> const&, bool)
ProgressBarHelper::~ProgressBarHelper()
PspSalInfoPrinter::AcquireGraphics()
PspSalInfoPrinter::GetCapabilities(ImplJobSetup const*, PrinterCapType)
PspSalInfoPrinter::GetLandscapeAngle(ImplJobSetup const*)
PspSalInfoPrinter::GetPageInfo(ImplJobSetup const*, long&, long&, Point&, Size&)
PspSalInfoPrinter::GetPaperBinCount(ImplJobSetup const*)
PspSalInfoPrinter::GetPaperBinName(ImplJobSetup const*, unsigned short)
PspSalInfoPrinter::InitPaperFormats(ImplJobSetup const*)
PspSalInfoPrinter::PspSalInfoPrinter()
PspSalInfoPrinter::ReleaseGraphics(SalGraphics*)
PspSalInfoPrinter::SetData(JobSetFlags, ImplJobSetup*)
PspSalInfoPrinter::SetPrinterData(ImplJobSetup*)
PspSalInfoPrinter::Setup(weld::Window*, ImplJobSetup*)
PspSalInfoPrinter::~PspSalInfoPrinter()
PspSalPrinter::~PspSalPrinter()
PushButton::CalcMinimumSize() const
PushButton::EndSelection()
PushButton::PushButton(WindowType)
PushButton::SetDropDown(PushButtonDropdownStyle)
PushButton::SetState(TriState)
PushButton::SetSymbol(SymbolType)
PushButton::SetSymbolAlign(SymbolAlign)
PushButton::Toggle()
PushButtonValue::clone() const
PushButtonValue::~PushButtonValue()
QtData::ErrorTrapPop(bool)
QtData::ErrorTrapPush()
QtData::QtData(SalInstance*)
QtData::getCursor(PointerStyle)
QtData::noNativeControls()
QtData::~QtData()
QtFilePicker::QtFilePicker(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, QFileDialog::FileMode, bool)
QtFilePicker::currentChanged(QString const&)
QtFilePicker::enableControl(short, unsigned char)
QtFilePicker::filterSelected(QString const&)
QtFilePicker::finished(int)
QtFilePicker::getImplementationName()
QtFilePicker::getLabel(short)
QtFilePicker::getResString(TranslateId)
QtFilePicker::getSupportedServiceNames()
QtFilePicker::getValue(short, short)
QtFilePicker::handleGetListValue(QComboBox const*, short)
QtFilePicker::handleSetListValue(QComboBox*, short, com::sun::star::uno::Any const&)
QtFilePicker::metaObject() const
QtFilePicker::prepareExecute()
QtFilePicker::setLabel(short, rtl::OUString const&)
QtFilePicker::setValue(short, short, com::sun::star::uno::Any const&)
QtFilePicker::supportsService(rtl::OUString const&)
QtFilePicker::updateAutomaticFileExtension()
QtFilePicker::~QtFilePicker()
QtFrame::CalcDefaultSize()
QtFrame::Damage(int, int, int, int) const
QtFrame::FillSystemEnvData(SystemEnvData&, long, QWidget*)
QtFrame::QtFrame(QtFrame*, SalFrameStyleFlags, bool)
QtFrame::SetDefaultPos()
QtFrame::SetDefaultSize()
QtFrame::SetWindowStateImpl(QFlags<Qt::WindowState>)
QtFrame::UpdateSettings(AllSettings&)
QtFrame::asChild() const
QtFrame::devicePixelRatioF() const
QtFrame::fixICCCMwindowGroup()
QtFrame::handleDragLeave()
QtFrame::handleDragMove(QDragMoveEvent*)
QtFrame::handleDrop(QDropEvent*)
QtFrame::isMaximized() const
QtFrame::isMinimized() const
QtFrame::isWindow() const
QtFrame::modalReparent(bool)
QtFrame::screen() const
QtFrame::setInputLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
QtFrame::windowHandle() const
QtFrame::~QtFrame()
QtInstance::CreateChildFrame(SystemParentData*, SalFrameStyleFlags)
QtInstance::CreateFrame(SalFrame*, SalFrameStyleFlags)
QtInstance::ImplYield(bool, bool)
QtInstance::ImplYieldSignal(bool, bool)
QtInstance::QtInstance(std::unique_ptr<QApplication, std::default_delete<QApplication> >&, bool)
QtInstance::UpdateStyle(bool)
QtInstance::deleteObjectLater(QObject*)
QtInstance::deleteObjectLaterSignal(QObject*)
QtInstance::localeChanged()
QtInstance::~QtInstance()
QtSvpGraphics::CreateSurface(OutputDevice const&, int, int, int, int) const
QtSvpGraphics::CreateSurface(std::shared_ptr<_cairo_surface> const&) const
QtSvpGraphics::GetResolution(int&, int&)
QtSvpGraphics::QtSvpGraphics(QtFrame*)
QtSvpGraphics::SupportsCairo() const
QtSvpGraphics::handleDamage(tools::Rectangle const&)
QtSvpGraphics::updateQWidget() const
QtSvpGraphics::~QtSvpGraphics()
QueueInfo::GetComment() const
QueueInfo::GetJobs() const
QueueInfo::GetLocation() const
QueueInfo::GetStatus() const
QueueInfo::QueueInfo()
RadioButton::CalcMinimumSize(long) const
RadioButton::Check(bool)
RadioButton::GetRadioImage(AllSettings const&, DrawButtonFlags)
RadioButton::SetModeRadioImage(Image const&)
RadioButton::SetState(bool)
RadioButton::Toggle()
RadioButton::group(RadioButton&)
RadioButton::~RadioButton()
ReadDIBV5(Bitmap&, AlphaMask&, SvStream&)
ReadFileList(SvStream&, FileList&)
ReadJobSetup(SvStream&, JobSetup&)
Reader::ClearTemplate()
Reader::GetTemplateDoc(SwDoc&)
Reader::MakeHTMLDummyTemplateDoc()
Reader::Reader()
Reader::ResetFrameFormats(SwDoc&)
Reader::SetTemplate(SwDoc&)
Reader::SetTemplateName(rtl::OUString const&)
Reader::~Reader()
RecordItemWindow::DoKeyInput(KeyEvent const&)
RecordItemWindow::RecordItemWindow(vcl::Window*)
RecordItemWindow::dispose()
RecordItemWindow::~RecordItemWindow()
RecordItemWindowBase::FirePosition(bool)
RecordItemWindowBase::PositionFired(long)
RecordItemWindowBase::RecordItemWindowBase(std::unique_ptr<weld::Entry, std::default_delete<weld::Entry> >)
RecordItemWindowBase::~RecordItemWindowBase()
RedlinData::~RedlinData()
RequestPackageReparation::RequestPackageReparation(rtl::OUString const&)
RequestPackageReparation::~RequestPackageReparation()
ResizableDockingWindow::ResizableDockingWindow(vcl::Window*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
ResizableDockingWindow::ResizableDockingWindow(vcl::Window*, long)
ResizableDockingWindow::~ResizableDockingWindow()
RotatePoly(tools::Polygon&, Point const&, double, double)
Ruler::CancelDrag()
Ruler::DoubleClick()
Ruler::Ruler(vcl::Window*, long)
Ruler::SetExtraType(RulerExtra, unsigned short)
Ruler::SetLeftFrameMargin(long)
Ruler::SetRightFrameMargin(long)
Ruler::SetTabs(unsigned int, RulerTab const*)
Ruler::SetTextRTL(bool)
Ruler::~Ruler()
SEInitializerGpg::SEInitializerGpg()
SEInitializerGpg::createSecurityContext(rtl::OUString const&)
SEInitializerGpg::freeSecurityContext(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSecurityContext> const&)
SEInitializerGpg::getImplementationName()
SEInitializerGpg::getSupportedServiceNames()
SEInitializerGpg::supportsService(rtl::OUString const&)
SEInitializerGpg::~SEInitializerGpg()
SVTXNumericField::CreateAccessibleContext()
SVTXNumericField::GetPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&)
SVTXNumericField::SVTXNumericField()
SVTXNumericField::getDecimalDigits()
SVTXNumericField::getFirst()
SVTXNumericField::getImplementationId()
SVTXNumericField::getLast()
SVTXNumericField::getTypes()
SVTXNumericField::isStrictFormat()
SVTXNumericField::queryInterface(com::sun::star::uno::Type const&)
SVTXNumericField::setDecimalDigits(short)
SVTXNumericField::setFirst(double)
SVTXNumericField::setLast(double)
SVTXNumericField::setMax(double)
SVTXNumericField::setMin(double)
SVTXNumericField::setSpinSize(double)
SVTXNumericField::setStrictFormat(unsigned char)
SVTXNumericField::~SVTXNumericField()
SalBitmap::DropScaledCache()
SalBitmap::convertDataBitCount(unsigned char const*, int, int, int, int, BitmapPalette const&, SalBitmap::BitConvert)
SalBitmap::updateChecksum() const
SalBitmap::~SalBitmap()
SalData::SalData()
SalData::~SalData()
SalDisplay::Beep() const
SalDisplay::BestVisual(_XDisplay*, int, XVisualInfo&)
SalDisplay::CaptureMouse(SalFrame*)
SalDisplay::DeInitRandR()
SalDisplay::GetEventTimeImpl(bool) const
SalDisplay::GetIndicatorState() const
SalDisplay::GetKeyCode(unsigned long, char*) const
SalDisplay::GetKeyName(unsigned short) const
SalDisplay::GetKeyNameFromKeySym(unsigned long) const
SalDisplay::GetKeySym(XKeyEvent*, char*, int*, unsigned long*, int*, _XIC*) const
SalDisplay::GetPointer(PointerStyle)
SalDisplay::Init()
SalDisplay::InitRandR(unsigned long) const
SalDisplay::InitXinerama()
SalDisplay::ModifierMapping()
SalDisplay::SalDisplay(_XDisplay*)
SalDisplay::SimulateKeyPress(unsigned short)
SalDisplay::XIfEventWithTimeout(_XEvent*, char*, int (*)(_XDisplay*, _XEvent*, char*)) const
SalDisplay::addXineramaScreenUnique(int, long, long, long, long)
SalDisplay::doDestruct()
SalDisplay::initScreen(SalX11Screen) const
SalDisplay::processRandREvent(_XEvent*)
SalDisplay::~SalDisplay()
SalFrame::GetGeometry() const
SalFrame::SalFrame()
SalFrame::SetCallback(vcl::Window*, bool (*)(vcl::Window*, SalEvent, void const*))
SalFrame::~SalFrame()
SalGenericDisplay::SalGenericDisplay()
SalGenericDisplay::~SalGenericDisplay()
SalGenericInstance::~SalGenericInstance()
SalGenericSystem::SalGenericSystem()
SalGenericSystem::~SalGenericSystem()
SalGraphics::BlendAlphaBitmap(SalTwoRect const&, SalBitmap const&, SalBitmap const&, SalBitmap const&, OutputDevice const&)
SalGraphics::BlendBitmap(SalTwoRect const&, SalBitmap const&, OutputDevice const&)
SalGraphics::CopyArea(long, long, long, long, long, long, OutputDevice const&)
SalGraphics::CopyBits(SalTwoRect const&, OutputDevice const&)
SalGraphics::CopyBits(SalTwoRect const&, SalGraphics&, OutputDevice const&, OutputDevice const&)
SalGraphics::DrawAlphaBitmap(SalTwoRect const&, SalBitmap const&, SalBitmap const&, OutputDevice const&)
SalGraphics::DrawAlphaRect(long, long, long, long, unsigned char, OutputDevice const&)
SalGraphics::DrawBitmap(SalTwoRect const&, SalBitmap const&, OutputDevice const&)
SalGraphics::DrawBitmap(SalTwoRect const&, SalBitmap const&, SalBitmap const&, OutputDevice const&)
SalGraphics::DrawEPS(long, long, long, long, void*, unsigned int, OutputDevice const&)
SalGraphics::DrawGradient(tools::PolyPolygon const&, Gradient const&, OutputDevice const&)
SalGraphics::DrawLine(long, long, long, long, OutputDevice const&)
SalGraphics::DrawMask(SalTwoRect const&, SalBitmap const&, Color, OutputDevice const&)
SalGraphics::DrawNativeControl(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, rtl::OUString const&, OutputDevice const&, Color const&)
SalGraphics::DrawPixel(long, long, Color, OutputDevice const&)
SalGraphics::DrawPixel(long, long, OutputDevice const&)
SalGraphics::DrawPolyLine(basegfx::B2DHomMatrix const&, basegfx::B2DPolygon const&, double, double, std::vector<double, std::allocator<double> > const*, basegfx::B2DLineJoin, com::sun::star::drawing::LineCap, double, bool, OutputDevice const&)
SalGraphics::DrawPolyLine(unsigned int, Point const*, OutputDevice const&)
SalGraphics::DrawPolyLineBezier(unsigned int, Point const*, PolyFlags const*, OutputDevice const&)
SalGraphics::DrawPolyPolygon(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&, double, OutputDevice const&)
SalGraphics::DrawPolyPolygon(unsigned int, unsigned int const*, Point const**, OutputDevice const&)
SalGraphics::DrawPolyPolygonBezier(unsigned int, unsigned int const*, Point const* const*, PolyFlags const* const*, OutputDevice const&)
SalGraphics::DrawPolygon(unsigned int, Point const*, OutputDevice const&)
SalGraphics::DrawPolygonBezier(unsigned int, Point const*, PolyFlags const*, OutputDevice const&)
SalGraphics::DrawRect(long, long, long, long, OutputDevice const&)
SalGraphics::DrawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*, double, OutputDevice const&)
SalGraphics::FillFontSubsetInfo(vcl::TTGlobalFontInfo_ const&, rtl::OUString const&, FontSubsetInfo&)
SalGraphics::GetBitmap(long, long, long, long, OutputDevice const&)
SalGraphics::GetNativeControlRegion(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, tools::Rectangle&, tools::Rectangle&, OutputDevice const&)
SalGraphics::GetPixel(long, long, OutputDevice const&)
SalGraphics::HasFastDrawTransformedBitmap() const
SalGraphics::HitTestNativeScrollbar(ControlPart, tools::Rectangle const&, Point const&, bool&, OutputDevice const&)
SalGraphics::Invert(long, long, long, long, SalInvert, OutputDevice const&)
SalGraphics::Invert(unsigned int, Point const*, SalInvert, OutputDevice const&)
SalGraphics::SalGraphics()
SalGraphics::SetClipRegion(vcl::Region const&, OutputDevice const&)
SalGraphics::drawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*, double)
SalGraphics::getMirror(OutputDevice const&) const
SalGraphics::mirror(ImplControlValue&, OutputDevice const&) const
SalGraphics::mirror(basegfx::B2DPolyPolygon const&, OutputDevice const&) const
SalGraphics::mirror(long&, OutputDevice const&) const
SalGraphics::mirror(long&, long, OutputDevice const&, bool) const
SalGraphics::mirror(tools::Rectangle&, OutputDevice const&, bool) const
SalGraphics::mirror(unsigned int, Point const*, Point*, OutputDevice const&) const
SalGraphics::mirror(vcl::Region&, OutputDevice const&) const
SalGraphics::mirror2(long, OutputDevice const&) const
SalGraphics::~SalGraphics()
SalGraphicsImpl::~SalGraphicsImpl()
SalInfoPrinter::~SalInfoPrinter()
SalInstance::AcquireYieldMutex(unsigned int)
SalInstance::CreateOpenGLContext()
SalInstance::ReleaseYieldMutexAll()
SalInstance::SalInstance(std::unique_ptr<comphelper::SolarMutex, std::default_delete<comphelper::SolarMutex> >)
SalInstance::~SalInstance()
SalLayout::AdjustLayout(vcl::text::ImplLayoutArgs&)
SalLayout::GetBoundRect(tools::Rectangle&) const
SalLayout::GetDrawPosition(Point const&) const
SalLayout::GetGlyphs() const
SalLayout::SalLayout()
SalLayout::~SalLayout()
SalLayoutGlyphs::AppendImpl(SalLayoutGlyphsImpl*)
SalLayoutGlyphs::Invalidate()
SalLayoutGlyphs::SalLayoutGlyphs()
SalLayoutGlyphs::SalLayoutGlyphs(SalLayoutGlyphs&&)
SalLayoutGlyphs::~SalLayoutGlyphs()
SalMenu::ShowCloseButton(bool)
SalMenu::ShowNativePopupMenu(FloatingWindow*, tools::Rectangle const&, FloatWinPopupFlags)
SalMenu::~SalMenu()
SalMenuItem::~SalMenuItem()
SalObject::~SalObject()
SalPrinter::StartJob(rtl::OUString const*, rtl::OUString const&, rtl::OUString const&, ImplJobSetup*, vcl::PrinterController&)
SalPrinter::~SalPrinter()
SalPrinterQueueInfo::SalPrinterQueueInfo()
SalPrinterQueueInfo::~SalPrinterQueueInfo()
SalSession::~SalSession()
SalSystem::~SalSystem()
SalTimer::~SalTimer()
SalUserEventList::RemoveEvent(SalFrame*, void*, SalEvent)
SalUserEventList::SalUserEventList()
SalUserEventList::~SalUserEventList()
SalVirtualDevice::~SalVirtualDevice()
SalYieldMutex::~SalYieldMutex()
SaveMonitor::SaveMonitor(weld::Window*)
SaveMonitor::~SaveMonitor()
SaveOrDelMSVBAStorage_ww8
SaveVBA
SbMethod::Broadcast(SfxHintId)
SbMethod::Call(SbxValue*, SbxVariable*)
SbMethod::ClearStatics()
SbMethod::GetInfo()
SbMethod::GetLineRange(unsigned short&, unsigned short&)
SbMethod::GetStatics()
SbMethod::LoadData(SvStream&, unsigned short)
SbMethod::StoreData(SvStream&) const
SbMethod::~SbMethod()
SbModule::AddVarName(rtl::OUString const&)
SbModule::Clear()
SbModule::ClearAllBP()
SbModule::ClearBP(unsigned short)
SbModule::ClearPrivateVars()
SbModule::ClearVarsDependingOnDeletedBasic(StarBASIC*)
SbModule::EndDefinitions(bool)
SbModule::ExceedsLegacyModuleSize()
SbModule::Find(rtl::OUString const&, SbxClassType)
SbModule::FindNextStmnt(unsigned char const*, unsigned short&, unsigned short&) const
SbModule::FindNextStmnt(unsigned char const*, unsigned short&, unsigned short&, bool, SbiImage const*) const
SbModule::FindType(rtl::OUString const&) const
SbModule::GetCodeCompleteDataFromParse(CodeCompleteDataCache&)
SbModule::GetIfaceMapperMethod(rtl::OUString const&, SbMethod*)
SbModule::GetKeywordCase(rtl::OUString const&)
SbModule::GetMethod(rtl::OUString const&, SbxDataType)
SbModule::GetProcedureProperty(rtl::OUString const&, SbxDataType)
SbModule::GetProperty(rtl::OUString const&, SbxDataType)
SbModule::GlobalRunDeInit()
SbModule::GlobalRunInit(bool)
SbModule::HasExeCode()
SbModule::IsBP(unsigned short) const
SbModule::IsBreakable(unsigned short) const
SbModule::LoadBinaryData(SvStream&)
SbModule::LoadCompleted()
SbModule::LoadData(SvStream&, unsigned short)
SbModule::Notify(SfxBroadcaster&, SfxHint const&)
SbModule::RemoveVars()
SbModule::Run(SbMethod*)
SbModule::RunInit()
SbModule::SbModule(rtl::OUString const&, bool)
SbModule::SetBP(unsigned short)
SbModule::SetParent(SbxObject*)
SbModule::SetSource32(rtl::OUString const&)
SbModule::SetVBACompat(bool)
SbModule::StartDefinitions()
SbModule::StoreBinaryData(SvStream&)
SbModule::StoreData(SvStream&) const
SbModule::createCOMWrapperForIface(com::sun::star::uno::Any&, SbClassModuleObject*)
SbModule::fixUpMethodStart(bool, SbiImage*) const
SbModule::handleProcedureProperties(SfxBroadcaster&, SfxHint const&)
SbModule::implProcessModuleRunInit(ModuleInitDependencyMap&, ClassModuleRunInitItem&)
SbModule::~SbModule()
SbxArray::Clear()
SbxArray::Find(rtl::OUString const&, SbxClassType)
SbxArray::GetAlias(unsigned int)
SbxArray::GetRef(unsigned int)
SbxArray::GetType() const
SbxArray::Insert(SbxVariable*, unsigned int)
SbxArray::LoadData(SvStream&, unsigned short)
SbxArray::Merge(SbxArray*)
SbxArray::PutAlias(rtl::OUString const&, unsigned int)
SbxArray::Remove(SbxVariable const*)
SbxArray::Remove(unsigned int)
SbxArray::SbxArray(SbxDataType)
SbxArray::StoreData(SvStream&) const
SbxArray::operator=(SbxArray const&)
SbxArray::~SbxArray()
SbxBase::AddFactory(SbxFactory*)
SbxBase::Create(unsigned short, unsigned int)
SbxBase::CreateObject(rtl::OUString const&)
SbxBase::IsError()
SbxBase::Load(SvStream&)
SbxBase::RemoveFactory(SbxFactory const*)
SbxBase::SbxBase()
SbxBase::SbxBase(SbxBase const&)
SbxBase::Store(SvStream&)
SbxBase::operator=(SbxBase const&)
SbxBase::~SbxBase()
SbxDimArray::Clear()
SbxDimArray::Get(SbxArray*)
SbxDimArray::LoadData(SvStream&, unsigned short)
SbxDimArray::Offset(SbxArray*)
SbxDimArray::Offset(int const*)
SbxDimArray::Put(SbxVariable*, int const*)
SbxDimArray::SbxDimArray(SbxDataType)
SbxDimArray::StoreData(SvStream&) const
SbxDimArray::operator=(SbxDimArray const&)
SbxDimArray::unoAddDim(int, int)
SbxDimArray::~SbxDimArray()
SbxMethod::GetClass() const
SbxMethod::SbxMethod(SbxMethod const&)
SbxMethod::SbxMethod(rtl::OUString const&, SbxDataType, bool)
SbxMethod::~SbxMethod()
SbxObject::Call(rtl::OUString const&, SbxArray*)
SbxObject::Clear()
SbxObject::Dump(SvStream&, bool)
SbxObject::Execute(rtl::OUString const&)
SbxObject::Find(rtl::OUString const&, SbxClassType)
SbxObject::FindQualified(rtl::OUString const&, SbxClassType)
SbxObject::GetClass() const
SbxObject::GetDfltProperty()
SbxObject::GetType() const
SbxObject::Insert(SbxVariable*)
SbxObject::IsClass(rtl::OUString const&) const
SbxObject::LoadData(SvStream&, unsigned short)
SbxObject::Make(rtl::OUString const&, SbxClassType, SbxDataType, bool)
SbxObject::Notify(SfxBroadcaster&, SfxHint const&)
SbxObject::QuickInsert(SbxVariable*)
SbxObject::Remove(SbxVariable*)
SbxObject::Remove(rtl::OUString const&, SbxClassType)
SbxObject::SbxObject(SbxObject const&)
SbxObject::SbxObject(rtl::OUString const&)
SbxObject::SetDfltProperty(rtl::OUString const&)
SbxObject::StoreData(SvStream&) const
SbxObject::operator=(SbxObject const&)
SbxObject::~SbxObject()
SbxValue::Convert(SbxDataType)
SbxValue::Format(rtl::OUString&, rtl::OUString const*) const
SbxValue::Get(SbxValues&) const
SbxValue::GetCoreString() const
SbxValue::ImpIsNumeric(bool) const
SbxValue::IsNumericRTL() const
SbxValue::Put(SbxValues const&)
SbxValue::PutByte(unsigned char)
SbxValue::PutCurrency(long)
SbxValue::PutDate(double)
SbxValue::PutDecimal(SbxDecimal*)
SbxValue::PutDecimal(com::sun::star::bridge::oleautomation::Decimal const&)
SbxValue::PutErr(unsigned short)
SbxValue::PutInt64(long)
SbxValue::PutInteger(short)
SbxValue::PutNull()
SbxValue::PutSingle(float)
SbxValue::PutStringExt(rtl::OUString const&)
SbxValue::PutUInt64(unsigned long)
SbxValue::SbxValue(SbxDataType)
SbxValue::SbxValue(SbxValue const&)
SbxValue::Scan(rtl::OUString const&, unsigned short*)
SbxValue::ScanNumIntnl(rtl::OUString const&, double&, bool)
SbxValue::SetType(SbxDataType)
SbxValue::fillAutomationDecimal(com::sun::star::bridge::oleautomation::Decimal&) const
SbxValue::~SbxValue()
SbxVariable::Broadcast(SfxHintId)
SbxVariable::ClearComListener()
SbxVariable::Dump(SvStream&, bool)
SbxVariable::GetBroadcaster()
SbxVariable::GetClass() const
SbxVariable::GetDeclareClassName() const
SbxVariable::GetInfo()
SbxVariable::GetParameters() const
SbxVariable::GetType() const
SbxVariable::LoadData(SvStream&, unsigned short)
SbxVariable::SbxVariable()
SbxVariable::SbxVariable(SbxDataType)
SbxVariable::SbxVariable(SbxVariable const&)
SbxVariable::SetComListener(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, StarBASIC*)
SbxVariable::SetDeclareClassName(rtl::OUString const&)
SbxVariable::SetInfo(SbxInfo*)
SbxVariable::SetModified(bool)
SbxVariable::SetName(rtl::OUString const&)
SbxVariable::SetParent(SbxObject*)
SbxVariable::StoreData(SvStream&) const
SbxVariable::operator=(SbxVariable const&)
SbxVariable::~SbxVariable()
ScAppOptions::ScAppOptions()
ScAppOptions::ScAppOptions(ScAppOptions const&)
ScAppOptions::SetDefaults()
ScAppOptions::SetLRUFuncList(unsigned short const*, unsigned short)
ScAppOptions::operator=(ScAppOptions const&)
ScAppOptions::~ScAppOptions()
ScAreaLink::Closed()
ScAreaLink::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
ScAreaLink::Edit(weld::Window*, Link<sfx2::SvBaseLink&, void> const&)
ScAreaLink::FindExtRange(ScRange&, ScDocument const&, rtl::OUString const&)
ScAreaLink::IsEqual(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, ScRange const&) const
ScAreaLink::Refresh(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, unsigned long)
ScAreaLink::ScAreaLink(SfxObjectShell*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, ScRange const&, unsigned long)
ScAreaLink::SetDestArea(ScRange const&)
ScAreaLink::SetSource(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
ScAreaLink::~ScAreaLink()
ScAreaNameIterator::ScAreaNameIterator(ScDocument const&)
ScAutoFmtPreview::Paint(OutputDevice&, tools::Rectangle const&)
ScAutoFmtPreview::Resize()
ScAutoFmtPreview::ScAutoFmtPreview()
ScAutoFmtPreview::SetDrawingArea(weld::DrawingArea*)
ScAutoFmtPreview::~ScAutoFmtPreview()
ScAutoFormat::Load()
ScAutoFormat::ScAutoFormat()
ScAutoFormat::SetSaveLater(bool)
ScAutoFormat::begin() const
ScAutoFormat::end() const
ScAutoFormat::findByIndex(unsigned long) const
ScAutoFormatData::CopyItem(unsigned short, unsigned short, unsigned short)
ScAutoFormatData::FillToItemSet(unsigned short, SfxItemSet&, ScDocument const&) const
ScAutoFormatData::GetFromItemSet(unsigned short, SfxItemSet const&, ScNumFormatAbbrev const&)
ScAutoFormatData::GetItem(unsigned short, unsigned short) const
ScAutoFormatData::GetNumFormat(unsigned short) const
ScAutoFormatData::IsEqualData(unsigned short, unsigned short) const
ScAutoFormatData::Load(SvStream&, ScAfVersions const&)
ScAutoFormatData::PutItem(unsigned short, SfxPoolItem const&)
ScAutoFormatData::Save(SvStream&, unsigned short)
ScAutoFormatData::ScAutoFormatData()
ScAutoFormatData::ScAutoFormatData(ScAutoFormatData const&)
ScAutoFormatData::~ScAutoFormatData()
ScAutoNameCache::GetNameOccurrences(rtl::OUString const&, short)
ScAutoNameCache::ScAutoNameCache(ScDocument&)
ScAutoNameCache::~ScAutoNameCache()
ScBootstrapFixture::ScBootstrapFixture(rtl::OUString const&)
ScBootstrapFixture::load(bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, SfxFilterFlags, SotClipboardFormatId, unsigned long, rtl::OUString const*)
ScBootstrapFixture::saveAndReload(ScDocShell*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, SfxFilterFlags, rtl::OUString const*)
ScBootstrapFixture::~ScBootstrapFixture()
ScCalcConfig::MergeDocumentSpecific(ScCalcConfig const&)
ScCalcConfig::ScCalcConfig()
ScCalcConfig::isThreadingEnabled()
ScCalcConfig::setOpenCLConfigToDefault()
ScCellFormat::GetInputString(ScRefCellValue const&, unsigned int, SvNumberFormatter&, ScDocument const&, svl::SharedString const**, bool)
ScCellFormat::GetOutputString(ScDocument&, ScAddress const&, ScRefCellValue const&)
ScCellMergeOption::ScCellMergeOption(short, int, short, int, bool)
ScCellObj::GetCellPropertyMap()
ScCellObj::GetContentType_Impl()
ScCellObj::GetEditPropertySet()
ScCellObj::GetInputString_Impl(bool) const
ScCellObj::GetItemPropertyMap()
ScCellObj::GetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
ScCellObj::GetOutputString_Impl() const
ScCellObj::GetResultType_Impl() const
ScCellObj::GetUnoText()
ScCellObj::GetValue_Impl() const
ScCellObj::RefChanged()
ScCellObj::ScCellObj(ScDocShell*, ScAddress const&)
ScCellObj::SetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
ScCellObj::SetString_Impl(rtl::OUString const&, bool, bool)
ScCellObj::SetValue_Impl(double)
ScCellObj::acquire()
ScCellObj::addActionLock()
ScCellObj::createEnumeration()
ScCellObj::createTextCursor()
ScCellObj::createTextCursorByRange(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&)
ScCellObj::getAnnotation()
ScCellObj::getCellAddress()
ScCellObj::getElementType()
ScCellObj::getEnd()
ScCellObj::getError()
ScCellObj::getFormula()
ScCellObj::getImplementationId()
ScCellObj::getImplementationName()
ScCellObj::getPropertySetInfo()
ScCellObj::getStart()
ScCellObj::getString()
ScCellObj::getSupportedServiceNames()
ScCellObj::getText()
ScCellObj::getTextFieldMasters()
ScCellObj::getTextFields()
ScCellObj::getTokens()
ScCellObj::getType()
ScCellObj::getTypes()
ScCellObj::getValue()
ScCellObj::hasElements()
ScCellObj::insertControlCharacter(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, short, unsigned char)
ScCellObj::insertString(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, rtl::OUString const&, unsigned char)
ScCellObj::insertTextContent(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, unsigned char)
ScCellObj::isActionLocked()
ScCellObj::queryInterface(com::sun::star::uno::Type const&)
ScCellObj::release()
ScCellObj::removeActionLock()
ScCellObj::removeTextContent(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
ScCellObj::resetActionLocks()
ScCellObj::setActionLocks(short)
ScCellObj::setFormula(rtl::OUString const&)
ScCellObj::setFormulaResult(double)
ScCellObj::setFormulaString(rtl::OUString const&)
ScCellObj::setString(rtl::OUString const&)
ScCellObj::setTokens(com::sun::star::uno::Sequence<com::sun::star::sheet::FormulaToken> const&)
ScCellObj::setValue(double)
ScCellObj::supportsService(rtl::OUString const&)
ScCellObj::~ScCellObj()
ScCellRangeObj::CreateRangeFromDoc(ScDocument const&, ScRange const&)
ScCellRangeObj::GetCellByPosition_Impl(int, int)
ScCellRangeObj::GetItemPropertyMap()
ScCellRangeObj::GetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
ScCellRangeObj::RefChanged()
ScCellRangeObj::ScCellRangeObj(ScDocShell*, ScRange const&)
ScCellRangeObj::SetArrayFormula_Impl(rtl::OUString const&, formula::FormulaGrammar::Grammar)
ScCellRangeObj::SetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
ScCellRangeObj::acquire()
ScCellRangeObj::applySubTotals(com::sun::star::uno::Reference<com::sun::star::sheet::XSubTotalDescriptor> const&, unsigned char)
ScCellRangeObj::autoFormat(rtl::OUString const&)
ScCellRangeObj::createFilterDescriptor(unsigned char)
ScCellRangeObj::createFilterDescriptorByObject(com::sun::star::uno::Reference<com::sun::star::sheet::XSheetFilterable> const&)
ScCellRangeObj::createImportDescriptor(unsigned char)
ScCellRangeObj::createSortDescriptor()
ScCellRangeObj::createSubTotalDescriptor(unsigned char)
ScCellRangeObj::doImport(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScCellRangeObj::fillAuto(com::sun::star::sheet::FillDirection, int)
ScCellRangeObj::fillSeries(com::sun::star::sheet::FillDirection, com::sun::star::sheet::FillMode, com::sun::star::sheet::FillDateMode, double, double)
ScCellRangeObj::filter(com::sun::star::uno::Reference<com::sun::star::sheet::XSheetFilterDescriptor> const&)
ScCellRangeObj::getArrayFormula()
ScCellRangeObj::getArrayTokens()
ScCellRangeObj::getCellByPosition(int, int)
ScCellRangeObj::getCellFormatRanges()
ScCellRangeObj::getCellRangeByName(rtl::OUString const&)
ScCellRangeObj::getCellRangeByName(rtl::OUString const&, ScAddress::Details const&)
ScCellRangeObj::getCellRangeByPosition(int, int, int, int)
ScCellRangeObj::getColumns()
ScCellRangeObj::getDataArray()
ScCellRangeObj::getFormulaArray()
ScCellRangeObj::getImplementationId()
ScCellRangeObj::getImplementationName()
ScCellRangeObj::getIsMerged()
ScCellRangeObj::getPropertySetInfo()
ScCellRangeObj::getRangeAddress()
ScCellRangeObj::getRows()
ScCellRangeObj::getSpreadsheet()
ScCellRangeObj::getSupportedServiceNames()
ScCellRangeObj::getTypes()
ScCellRangeObj::getUniqueCellFormatRanges()
ScCellRangeObj::merge(unsigned char)
ScCellRangeObj::queryInterface(com::sun::star::uno::Type const&)
ScCellRangeObj::release()
ScCellRangeObj::removeSubTotals()
ScCellRangeObj::setArrayFormula(rtl::OUString const&)
ScCellRangeObj::setArrayTokens(com::sun::star::uno::Sequence<com::sun::star::sheet::FormulaToken> const&)
ScCellRangeObj::setDataArray(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::uno::Any> > const&)
ScCellRangeObj::setFormulaArray(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<rtl::OUString> > const&)
ScCellRangeObj::setTableOperation(com::sun::star::table::CellRangeAddress const&, com::sun::star::sheet::TableOperationMode, com::sun::star::table::CellAddress const&, com::sun::star::table::CellAddress const&)
ScCellRangeObj::sort(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScCellRangeObj::supportsService(rtl::OUString const&)
ScCellRangeObj::~ScCellRangeObj()
ScCellRangesBase::AddRange(ScRange const&, bool)
ScCellRangesBase::CreateMemChart_Impl() const
ScCellRangesBase::Find_Impl(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&, ScAddress const*)
ScCellRangesBase::ForceChartListener_Impl()
ScCellRangesBase::ForgetCurrentAttrs()
ScCellRangesBase::ForgetMarkData()
ScCellRangesBase::GetCurrentAttrsDeep()
ScCellRangesBase::GetCurrentAttrsFlat()
ScCellRangesBase::GetDocument() const
ScCellRangesBase::GetItemPropertyMap()
ScCellRangesBase::GetLimitedChartRanges_Impl(int, int) const
ScCellRangesBase::GetMarkData()
ScCellRangesBase::GetOnePropertyState(unsigned short, SfxItemPropertyMapEntry const*)
ScCellRangesBase::GetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
ScCellRangesBase::InitInsertRange(ScDocShell*, ScRange const&)
ScCellRangesBase::Notify(SfxBroadcaster&, SfxHint const&)
ScCellRangesBase::PaintGridRanges_Impl()
ScCellRangesBase::QueryDifferences_Impl(com::sun::star::table::CellAddress const&, bool)
ScCellRangesBase::RefChanged()
ScCellRangesBase::ScCellRangesBase(ScDocShell*, ScRange const&)
ScCellRangesBase::ScCellRangesBase(ScDocShell*, ScRangeList const&)
ScCellRangesBase::SetCursorOnly(bool)
ScCellRangesBase::SetNewRange(ScRange const&)
ScCellRangesBase::SetNewRanges(ScRangeList const&)
ScCellRangesBase::SetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
ScCellRangesBase::addChartDataChangeEventListener(com::sun::star::uno::Reference<com::sun::star::chart::XChartDataChangeEventListener> const&)
ScCellRangesBase::addModifyListener(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
ScCellRangesBase::addPropertiesChangeListener(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
ScCellRangesBase::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScCellRangesBase::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScCellRangesBase::clearContents(int)
ScCellRangesBase::computeFunction(com::sun::star::sheet::GeneralFunction)
ScCellRangesBase::createReplaceDescriptor()
ScCellRangesBase::createSearchDescriptor()
ScCellRangesBase::decrementIndent()
ScCellRangesBase::findAll(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
ScCellRangesBase::findFirst(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
ScCellRangesBase::findNext(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
ScCellRangesBase::firePropertiesChangeEvent(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
ScCellRangesBase::getColumnDescriptions()
ScCellRangesBase::getData()
ScCellRangesBase::getDirectPropertyValuesTolerant(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScCellRangesBase::getImplementationName()
ScCellRangesBase::getNotANumber()
ScCellRangesBase::getPropertyDefault(rtl::OUString const&)
ScCellRangesBase::getPropertySetInfo()
ScCellRangesBase::getPropertyState(rtl::OUString const&)
ScCellRangesBase::getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScCellRangesBase::getPropertyValue(rtl::OUString const&)
ScCellRangesBase::getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScCellRangesBase::getPropertyValuesTolerant(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScCellRangesBase::getRowDescriptions()
ScCellRangesBase::getSomething(com::sun::star::uno::Sequence<signed char> const&)
ScCellRangesBase::getSupportedServiceNames()
ScCellRangesBase::incrementIndent()
ScCellRangesBase::isNotANumber(double)
ScCellRangesBase::queryColumnDifferences(com::sun::star::table::CellAddress const&)
ScCellRangesBase::queryContentCells(short)
ScCellRangesBase::queryDependents(unsigned char)
ScCellRangesBase::queryEmptyCells()
ScCellRangesBase::queryFormulaCells(int)
ScCellRangesBase::queryIntersection(com::sun::star::table::CellRangeAddress const&)
ScCellRangesBase::queryPrecedents(unsigned char)
ScCellRangesBase::queryRowDifferences(com::sun::star::table::CellAddress const&)
ScCellRangesBase::queryVisibleCells()
ScCellRangesBase::removeChartDataChangeEventListener(com::sun::star::uno::Reference<com::sun::star::chart::XChartDataChangeEventListener> const&)
ScCellRangesBase::removeModifyListener(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
ScCellRangesBase::removePropertiesChangeListener(com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
ScCellRangesBase::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScCellRangesBase::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScCellRangesBase::replaceAll(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
ScCellRangesBase::setColumnDescriptions(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScCellRangesBase::setData(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&)
ScCellRangesBase::setPropertyToDefault(rtl::OUString const&)
ScCellRangesBase::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ScCellRangesBase::setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ScCellRangesBase::setPropertyValuesTolerant(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ScCellRangesBase::setRowDescriptions(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScCellRangesBase::supportsService(rtl::OUString const&)
ScCellRangesBase::~ScCellRangesBase()
ScCellRangesObj::ScCellRangesObj(ScDocShell*, ScRangeList const&)
ScCellRangesObj::acquire()
ScCellValue::ScCellValue()
ScCellValue::ScCellValue(ScCellValue const&)
ScCellValue::ScCellValue(ScCellValue&&)
ScCellValue::ScCellValue(ScRefCellValue const&)
ScCellValue::ScCellValue(double)
ScCellValue::ScCellValue(svl::SharedString const&)
ScCellValue::assign(ScCellValue const&, ScDocument&, ScCloneFlags)
ScCellValue::assign(ScDocument const&, ScAddress const&)
ScCellValue::commit(ScColumn&, int) const
ScCellValue::commit(ScDocument&, ScAddress const&) const
ScCellValue::equalsWithoutFormat(ScCellValue const&) const
ScCellValue::getString(ScDocument const&) const
ScCellValue::operator=(ScCellValue const&)
ScCellValue::operator=(ScCellValue&&)
ScCellValue::operator=(ScRefCellValue const&)
ScCellValue::release(ScColumn&, int, sc::StartListeningType)
ScCellValue::release(ScDocument&, ScAddress const&)
ScCellValue::set(EditTextObject const&)
ScCellValue::swap(ScCellValue&)
ScCellValue::~ScCellValue()
ScChangeTrack::AppendDeleteRange(ScRange const&, ScDocument*, short, unsigned long)
ScChangeTrack::ScChangeTrack(ScDocument&)
ScChangeTrack::Undo(unsigned long, unsigned long, bool)
ScChangeTrack::~ScChangeTrack()
ScChangeViewSettings::AdjustDateMode(ScDocument const&)
ScChangeViewSettings::IsValidComment(rtl::OUString const*) const
ScChangeViewSettings::ScChangeViewSettings(ScChangeViewSettings const&)
ScChangeViewSettings::SetTheComment(rtl::OUString const&)
ScChangeViewSettings::operator=(ScChangeViewSettings const&)
ScChangeViewSettings::~ScChangeViewSettings()
ScChart2DataProvider::Notify(SfxBroadcaster&, SfxHint const&)
ScChart2DataProvider::ScChart2DataProvider(ScDocument*)
ScChart2DataProvider::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScChart2DataProvider::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScChart2DataProvider::convertRangeFromXML(rtl::OUString const&)
ScChart2DataProvider::convertRangeToXML(rtl::OUString const&)
ScChart2DataProvider::createDataSequenceByFormulaTokens(com::sun::star::uno::Sequence<com::sun::star::sheet::FormulaToken> const&)
ScChart2DataProvider::createDataSequenceByFormulaTokensPossible(com::sun::star::uno::Sequence<com::sun::star::sheet::FormulaToken> const&)
ScChart2DataProvider::createDataSequenceByRangeRepresentation(rtl::OUString const&)
ScChart2DataProvider::createDataSequenceByRangeRepresentationPossible(rtl::OUString const&)
ScChart2DataProvider::createDataSequenceByValueArray(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
ScChart2DataProvider::createDataSource(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScChart2DataProvider::createDataSourcePossible(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScChart2DataProvider::detectArguments(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSource> const&)
ScChart2DataProvider::getImplementationName()
ScChart2DataProvider::getPropertySetInfo()
ScChart2DataProvider::getPropertyValue(rtl::OUString const&)
ScChart2DataProvider::getRangeSelection()
ScChart2DataProvider::getSupportedServiceNames()
ScChart2DataProvider::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScChart2DataProvider::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScChart2DataProvider::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ScChart2DataProvider::supportsService(rtl::OUString const&)
ScChart2DataProvider::~ScChart2DataProvider()
ScChartHiddenRangeListener::ScChartHiddenRangeListener()
ScChartHiddenRangeListener::~ScChartHiddenRangeListener()
ScChartListener::ChangeListening(tools::SvRef<ScRangeList> const&, bool)
ScChartListener::EndListeningTo()
ScChartListener::GetExtRefListener()
ScChartListener::GetRangeList() const
ScChartListener::GetUnoListener() const
ScChartListener::GetUnoSource() const
ScChartListener::Notify(SfxHint const&)
ScChartListener::ScChartListener(rtl::OUString const&, ScDocument&, std::unique_ptr<std::vector<boost::intrusive_ptr<formula::FormulaToken>, std::allocator<boost::intrusive_ptr<formula::FormulaToken> > >, std::default_delete<std::vector<boost::intrusive_ptr<formula::FormulaToken>, std::allocator<boost::intrusive_ptr<formula::FormulaToken> > > > >)
ScChartListener::ScChartListener(rtl::OUString const&, ScDocument&, tools::SvRef<ScRangeList> const&)
ScChartListener::SetRangeList(tools::SvRef<ScRangeList> const&)
ScChartListener::SetUno(com::sun::star::uno::Reference<com::sun::star::chart::XChartDataChangeEventListener> const&, com::sun::star::uno::Reference<com::sun::star::chart::XChartData> const&)
ScChartListener::SetUpdateQueue()
ScChartListener::Update()
ScChartListener::UpdateChartIntersecting(ScRange const&)
ScChartListener::operator!=(ScChartListener const&) const
ScChartListener::operator==(ScChartListener const&) const
ScChartListener::~ScChartListener()
ScChartListenerCollection::ChangeListening(rtl::OUString const&, tools::SvRef<ScRangeList> const&)
ScChartListenerCollection::FreeUno(com::sun::star::uno::Reference<com::sun::star::chart::XChartDataChangeEventListener> const&, com::sun::star::uno::Reference<com::sun::star::chart::XChartData> const&)
ScChartListenerCollection::FreeUnused()
ScChartListenerCollection::Init()
ScChartListenerCollection::ScChartListenerCollection(ScChartListenerCollection const&)
ScChartListenerCollection::ScChartListenerCollection(ScDocument&)
ScChartListenerCollection::SetDiffDirty(ScChartListenerCollection const&, bool)
ScChartListenerCollection::SetDirty()
ScChartListenerCollection::StartAllListeners()
ScChartListenerCollection::StartTimer()
ScChartListenerCollection::UpdateChartsContainingTab(short)
ScChartListenerCollection::UpdateDirtyCharts()
ScChartListenerCollection::findByName(rtl::OUString const&)
ScChartListenerCollection::findByName(rtl::OUString const&) const
ScChartListenerCollection::getUniqueName(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ScChartListenerCollection::hasListeners() const
ScChartListenerCollection::operator==(ScChartListenerCollection const&) const
ScChartListenerCollection::removeByName(rtl::OUString const&)
ScChartListenerCollection::~ScChartListenerCollection()
ScClipParam::ScClipParam()
ScClipParam::ScClipParam(ScRange const&, bool)
ScClipParam::getPasteColSize()
ScClipParam::getPasteRowSize(ScDocument const&, bool)
ScClipParam::getWholeRange() const
ScClipParam::isMultiRange() const
ScClipParam::transpose(ScDocument const&, bool, bool)
ScColorFormat::ScColorFormat(ScDocument*)
ScColorFormat::SetParent(ScConditionalFormat*)
ScColorFormat::endRendering()
ScColorFormat::getMaxValue() const
ScColorFormat::getMinValue() const
ScColorFormat::getValues() const
ScColorFormat::startRendering()
ScColorFormat::~ScColorFormat()
ScColorScaleEntry::ScColorScaleEntry()
ScColorScaleEntry::ScColorScaleEntry(ScColorScaleEntry const&)
ScColorScaleEntry::ScColorScaleEntry(ScDocument*, ScColorScaleEntry const&)
ScColorScaleEntry::ScColorScaleEntry(double, Color const&, ScColorScaleEntryType)
ScColorScaleEntry::SetColor(Color const&)
ScColorScaleEntry::SetRepaintCallback(ScConditionalFormat*)
ScColorScaleEntry::SetRepaintCallback(std::function<void ()> const&)
ScColorScaleEntry::SetValue(double)
ScColorScaleEntry::UpdateDeleteTab(sc::RefUpdateDeleteTabContext const&)
ScColorScaleEntry::UpdateInsertTab(sc::RefUpdateInsertTabContext const&)
ScColorScaleEntry::UpdateMoveTab(sc::RefUpdateMoveTabContext const&)
ScColorScaleEntry::UpdateReference(sc::RefUpdateContext const&)
ScColorScaleEntry::setListener()
ScColorScaleEntry::~ScColorScaleEntry()
ScColorScaleFormat::CalcValue(double, double, __gnu_cxx::__normal_iterator<std::unique_ptr<ScColorScaleEntry, o3tl::default_delete<ScColorScaleEntry> > const*, std::vector<std::unique_ptr<ScColorScaleEntry, o3tl::default_delete<ScColorScaleEntry> >, std::allocator<std::unique_ptr<ScColorScaleEntry, o3tl::default_delete<ScColorScaleEntry> > > > > const&) const
ScColorScaleFormat::Clone(ScDocument*) const
ScColorScaleFormat::EnsureSize()
ScColorScaleFormat::GetColor(ScAddress const&) const
ScColorScaleFormat::GetEntry(unsigned long)
ScColorScaleFormat::GetMaxValue() const
ScColorScaleFormat::GetMinValue() const
ScColorScaleFormat::GetType() const
ScColorScaleFormat::ScColorScaleFormat(ScDocument*)
ScColorScaleFormat::ScColorScaleFormat(ScDocument*, ScColorScaleFormat const&)
ScColorScaleFormat::SetParent(ScConditionalFormat*)
ScColorScaleFormat::UpdateDeleteTab(sc::RefUpdateDeleteTabContext&)
ScColorScaleFormat::UpdateInsertTab(sc::RefUpdateInsertTabContext&)
ScColorScaleFormat::UpdateMoveTab(sc::RefUpdateMoveTabContext&)
ScColorScaleFormat::UpdateReference(sc::RefUpdateContext&)
ScColorScaleFormat::begin()
ScColorScaleFormat::calcMinMax(double&, double&) const
ScColorScaleFormat::end()
ScColorScaleFormat::~ScColorScaleFormat()
ScCompiler::AdjustSheetLocalNameRelReferences(short)
ScCompiler::AdjustSumRangeShape(ScComplexRefData const&, ScComplexRefData&)
ScCompiler::AnnotateOperands()
ScCompiler::AnnotateTrimOnDoubleRefs()
ScCompiler::AutoCorrectParsedSymbol()
ScCompiler::CompileString(rtl::OUString const&, rtl::OUString const&)
ScCompiler::CorrectSumRange(ScComplexRefData const&, ScComplexRefData&, formula::FormulaToken**)
ScCompiler::CreateStringFromDoubleRef(rtl::OUStringBuffer&, formula::FormulaToken const*) const
ScCompiler::CreateStringFromExternal(rtl::OUStringBuffer&, formula::FormulaToken const*) const
ScCompiler::CreateStringFromIndex(rtl::OUStringBuffer&, formula::FormulaToken const*) const
ScCompiler::CreateStringFromMatrix(rtl::OUStringBuffer&, formula::FormulaToken const*) const
ScCompiler::CreateStringFromSingleRef(rtl::OUStringBuffer&, formula::FormulaToken const*) const
ScCompiler::CreateStringFromXMLTokenArray(rtl::OUString&, rtl::OUString&)
ScCompiler::DeInit()
ScCompiler::DoubleRefToPosSingleRefScalarCase(ScRange const&, ScAddress&, ScAddress const&)
ScCompiler::EnQuote(rtl::OUString&)
ScCompiler::ExtendRangeReference(formula::FormulaToken&, formula::FormulaToken&)
ScCompiler::FindAddInFunction(rtl::OUString const&, bool) const
ScCompiler::GetAddInMapCount()
ScCompiler::GetCharClassEnglish()
ScCompiler::GetCharClassLocalized()
ScCompiler::GetDocTabPos(rtl::OUString const&)
ScCompiler::GetForceArrayParameter(formula::FormulaToken const*, unsigned short) const
ScCompiler::GetRangeData(formula::FormulaToken const&) const
ScCompiler::GetRangeData(short&, rtl::OUString const&) const
ScCompiler::GetRefConvention(formula::FormulaGrammar::AddressConvention)
ScCompiler::GetSetupTabNames() const
ScCompiler::GetTokenIfOpCode(OpCode)
ScCompiler::HandleColRowName()
ScCompiler::HandleDbData()
ScCompiler::HandleExternalReference(formula::FormulaToken const&)
ScCompiler::HandleIIOpCode(formula::FormulaToken*, formula::FormulaToken***, unsigned char)
ScCompiler::HandleIIOpCodeInternal(formula::FormulaToken*, formula::FormulaToken***, unsigned char)
ScCompiler::HandleRange()
ScCompiler::HandleTableRef()
ScCompiler::IsBoolean(rtl::OUString const&)
ScCompiler::IsColRowName(rtl::OUString const&)
ScCompiler::IsDBRange(rtl::OUString const&)
ScCompiler::IsDoubleReference(rtl::OUString const&, rtl::OUString const*)
ScCompiler::IsErrorConstant(rtl::OUString const&) const
ScCompiler::IsExternalNamedRange(rtl::OUString const&, bool&)
ScCompiler::IsMacro(rtl::OUString const&)
ScCompiler::IsNamedRange(rtl::OUString const&)
ScCompiler::IsOpCode(rtl::OUString const&, bool)
ScCompiler::IsOpCode2(rtl::OUString const&)
ScCompiler::IsPredetectedErrRefReference(rtl::OUString const&, rtl::OUString const*)
ScCompiler::IsPredetectedReference(rtl::OUString const&)
ScCompiler::IsReference(rtl::OUString const&, rtl::OUString const*)
ScCompiler::IsSingleReference(rtl::OUString const&, rtl::OUString const*)
ScCompiler::IsString()
ScCompiler::IsTableRefColumn(rtl::OUString const&) const
ScCompiler::IsTableRefItem(rtl::OUString const&) const
ScCompiler::IsValue(rtl::OUString const&)
ScCompiler::LocalizeString(rtl::OUString&) const
ScCompiler::MoveRelWrap()
ScCompiler::NextNewToken(bool)
ScCompiler::NextSymbol(bool)
ScCompiler::ParameterMayBeImplicitIntersection(formula::FormulaToken const*, int)
ScCompiler::PostProcessCode()
ScCompiler::ReplaceDoubleRefII(formula::FormulaToken**)
ScCompiler::ScCompiler(ScDocument&, ScAddress const&, ScTokenArray&, formula::FormulaGrammar::Grammar, bool, bool, ScInterpreterContext const*)
ScCompiler::ScCompiler(ScDocument&, ScAddress const&, formula::FormulaGrammar::Grammar, bool, bool, ScInterpreterContext const*)
ScCompiler::ScCompiler(sc::CompileFormulaContext&, ScAddress const&, ScTokenArray&, bool, bool, ScInterpreterContext const*)
ScCompiler::ScCompiler(sc::CompileFormulaContext&, ScAddress const&, bool, bool, ScInterpreterContext const*)
ScCompiler::SetAutoCorrection(bool)
ScCompiler::SetError(FormulaError)
ScCompiler::SetFormulaLanguage(std::shared_ptr<formula::FormulaCompiler::OpCodeMap const> const&)
ScCompiler::SetGrammarAndRefConvention(formula::FormulaGrammar::Grammar, formula::FormulaGrammar::Grammar)
ScCompiler::SetRefConvention(ScCompiler::Convention const*)
ScCompiler::SetRefConvention(formula::FormulaGrammar::AddressConvention)
ScCompiler::SetRelNameReference()
ScCompiler::SkipImplicitIntersectionOptimization(formula::FormulaToken const*) const
ScCompiler::ToUpperAsciiOrI18nIsAscii(rtl::OUString&, rtl::OUString const&) const
ScCompiler::addWhitespace(std::vector<ScCompiler::Whitespace, std::allocator<ScCompiler::Whitespace> >&, ScCompiler::Whitespace&, char16_t, int)
ScCompiler::fillAddInToken(std::vector<com::sun::star::sheet::FormulaOpCodeMapEntry, std::allocator<com::sun::star::sheet::FormulaOpCodeMapEntry> >&, bool) const
ScCompiler::fillFromAddInCollectionEnglishName(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&) const
ScCompiler::fillFromAddInCollectionUpperName(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&) const
ScCompiler::fillFromAddInMap(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&, formula::FormulaGrammar::Grammar) const
ScCompiler::~ScCompiler()
ScComplexRefData::toAbs(ScSheetLimits const&, ScAddress const&) const
ScCondDateFormatEntry::Clone(ScDocument*) const
ScCondDateFormatEntry::IsValid(ScAddress const&) const
ScCondDateFormatEntry::ScCondDateFormatEntry(ScDocument*)
ScCondDateFormatEntry::ScCondDateFormatEntry(ScDocument*, ScCondDateFormatEntry const&)
ScCondDateFormatEntry::endRendering()
ScCondDateFormatEntry::startRendering()
ScCondFormatEntry::Clone(ScDocument*) const
ScCondFormatEntry::DataChanged() const
ScCondFormatEntry::IsEqual(ScFormatEntry const&, bool) const
ScCondFormatEntry::ScCondFormatEntry(ScCondFormatEntry const&)
ScCondFormatEntry::ScCondFormatEntry(ScConditionMode, ScTokenArray const*, ScTokenArray const*, ScDocument&, ScAddress const&, rtl::OUString const&)
ScCondFormatEntry::ScCondFormatEntry(ScConditionMode, rtl::OUString const&, rtl::OUString const&, ScDocument&, ScAddress const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, formula::FormulaGrammar::Grammar, formula::FormulaGrammar::Grammar, ScFormatEntry::Type)
ScCondFormatEntry::ScCondFormatEntry(ScDocument&, ScCondFormatEntry const&)
ScCondFormatEntry::~ScCondFormatEntry()
ScCondFormatHelper::GetExpression(ScCondFormatEntryType, int, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScConditionEntry::CalcAll()
ScConditionEntry::Clone(ScDocument*) const
ScConditionEntry::Compile(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, formula::FormulaGrammar::Grammar, formula::FormulaGrammar::Grammar, bool)
ScConditionEntry::CompileAll()
ScConditionEntry::CompileXML()
ScConditionEntry::DataChanged() const
ScConditionEntry::FillCache() const
ScConditionEntry::GetModeFromApi(com::sun::star::sheet::ConditionOperator)
ScConditionEntry::Interpret(ScAddress const&)
ScConditionEntry::IsAboveAverage(double, bool) const
ScConditionEntry::IsBelowAverage(double, bool) const
ScConditionEntry::IsBottomNElement(double) const
ScConditionEntry::IsBottomNPercent(double) const
ScConditionEntry::IsCellValid(ScRefCellValue&, ScAddress const&) const
ScConditionEntry::IsDuplicate(double, rtl::OUString const&) const
ScConditionEntry::IsEqual(ScFormatEntry const&, bool) const
ScConditionEntry::IsError(ScAddress const&) const
ScConditionEntry::IsTopNElement(double) const
ScConditionEntry::IsTopNPercent(double) const
ScConditionEntry::IsValid(double, ScAddress const&) const
ScConditionEntry::IsValidStr(rtl::OUString const&, ScAddress const&) const
ScConditionEntry::MakeCells(ScAddress const&)
ScConditionEntry::MarkUsedExternalReferences() const
ScConditionEntry::NeedsRepaint() const
ScConditionEntry::ScConditionEntry(ScConditionEntry const&)
ScConditionEntry::ScConditionEntry(ScConditionMode, ScTokenArray const*, ScTokenArray const*, ScDocument&, ScAddress const&)
ScConditionEntry::ScConditionEntry(ScConditionMode, rtl::OUString const&, rtl::OUString const&, ScDocument&, ScAddress const&, rtl::OUString const&, rtl::OUString const&, formula::FormulaGrammar::Grammar, formula::FormulaGrammar::Grammar, ScFormatEntry::Type)
ScConditionEntry::ScConditionEntry(ScDocument&, ScConditionEntry const&)
ScConditionEntry::SetFormula1(ScTokenArray const&)
ScConditionEntry::SetFormula2(ScTokenArray const&)
ScConditionEntry::SetOperation(ScConditionMode)
ScConditionEntry::SetParent(ScConditionalFormat*)
ScConditionEntry::SimplifyCompiledFormula(std::unique_ptr<ScTokenArray, std::default_delete<ScTokenArray> >&, double&, bool&, rtl::OUString&)
ScConditionEntry::StartListening()
ScConditionEntry::UpdateDeleteTab(sc::RefUpdateDeleteTabContext&)
ScConditionEntry::UpdateInsertTab(sc::RefUpdateInsertTabContext&)
ScConditionEntry::UpdateMoveTab(sc::RefUpdateMoveTabContext&)
ScConditionEntry::UpdateReference(sc::RefUpdateContext&)
ScConditionEntry::endRendering()
ScConditionEntry::startRendering()
ScConditionEntry::~ScConditionEntry()
ScConditionalFormat::CalcAll()
ScConditionalFormat::CompileAll()
ScConditionalFormat::CompileXML()
ScConditionalFormat::DeleteArea(short, int, short, int)
ScConditionalFormat::DoRepaint()
ScConditionalFormat::EqualEntries(ScConditionalFormat const&, bool) const
ScConditionalFormat::GetData(ScRefCellValue&, ScAddress const&) const
ScConditionalFormat::GetDocument()
ScConditionalFormat::InsertCol(short, int, int, short, unsigned long)
ScConditionalFormat::InsertRow(short, short, short, int, unsigned long)
ScConditionalFormat::IsEmpty() const
ScConditionalFormat::MarkUsedExternalReferences() const
ScConditionalFormat::RemoveEntry(unsigned long)
ScConditionalFormat::RenameCellStyle(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
ScConditionalFormat::ScConditionalFormat(unsigned int, ScDocument*)
ScConditionalFormat::UpdateDeleteTab(sc::RefUpdateDeleteTabContext&)
ScConditionalFormat::UpdateInsertTab(sc::RefUpdateInsertTabContext&)
ScConditionalFormat::UpdateMoveTab(sc::RefUpdateMoveTabContext&)
ScConditionalFormat::UpdateReference(sc::RefUpdateContext&, bool)
ScConditionalFormat::endRendering()
ScConditionalFormat::startRendering()
ScConditionalFormat::~ScConditionalFormat()
ScConditionalFormatList::AddToDocument(ScDocument&) const
ScConditionalFormatList::CalcAll()
ScConditionalFormatList::CheckAllEntries(Link<ScConditionalFormat*, void> const&)
ScConditionalFormatList::CompileAll()
ScConditionalFormatList::CompileXML()
ScConditionalFormatList::DeleteArea(short, int, short, int)
ScConditionalFormatList::GetCombinedRange() const
ScConditionalFormatList::GetFormat(unsigned int) const
ScConditionalFormatList::InsertCol(short, int, int, short, unsigned long)
ScConditionalFormatList::InsertNew(std::unique_ptr<ScConditionalFormat, std::default_delete<ScConditionalFormat> >)
ScConditionalFormatList::InsertRow(short, short, short, int, unsigned long)
ScConditionalFormatList::RemoveFromDocument(ScDocument&) const
ScConditionalFormatList::RenameCellStyle(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
ScConditionalFormatList::ScConditionalFormatList(ScConditionalFormatList const&)
ScConditionalFormatList::ScConditionalFormatList(ScDocument&, ScConditionalFormatList const&)
ScConditionalFormatList::UpdateDeleteTab(sc::RefUpdateDeleteTabContext&)
ScConditionalFormatList::UpdateInsertTab(sc::RefUpdateInsertTabContext&)
ScConditionalFormatList::UpdateMoveTab(sc::RefUpdateMoveTabContext&)
ScConditionalFormatList::UpdateReference(sc::RefUpdateContext&)
ScConditionalFormatList::clear()
ScConditionalFormatList::endRendering()
ScConditionalFormatList::getMaxKey() const
ScConditionalFormatList::startRendering()
ScCreateDialogFactory
ScCsvControl::AccSendCaretEvent()
ScCsvControl::AccSendFocusEvent(bool)
ScCsvControl::AccSendInsertColumnEvent(unsigned int, unsigned int)
ScCsvControl::AccSendRemoveColumnEvent(unsigned int, unsigned int)
ScCsvControl::AccSendSelectionEvent()
ScCsvControl::AccSendTableUpdateEvent(unsigned int, unsigned int, bool)
ScCsvControl::AccSendVisibleEvent()
ScCsvControl::DisableRepaint()
ScCsvControl::EnableRepaint()
ScCsvControl::GetFirstX() const
ScCsvControl::GetFocus()
ScCsvControl::GetHdrX() const
ScCsvControl::GetHorzDirection(unsigned short, bool)
ScCsvControl::GetLastVisLine() const
ScCsvControl::GetLastX() const
ScCsvControl::GetLineFromY(int) const
ScCsvControl::GetMaxLineOffset() const
ScCsvControl::GetMaxPosOffset() const
ScCsvControl::GetPosFromX(int) const
ScCsvControl::GetVertDirection(unsigned short, bool)
ScCsvControl::GetVisPosCount() const
ScCsvControl::GetX(int) const
ScCsvControl::GetY(int) const
ScCsvControl::ImplInvertRect(OutputDevice&, tools::Rectangle const&)
ScCsvControl::IsValidLine(int) const
ScCsvControl::IsValidSplitPos(int) const
ScCsvControl::IsVisibleLine(int) const
ScCsvControl::IsVisibleSplitPos(int) const
ScCsvControl::LoseFocus()
ScCsvControl::Repaint(bool)
ScCsvControl::ScCsvControl(ScCsvLayoutData const&)
ScCsvControl::~ScCsvControl()
ScCsvGrid::ApplyLayout(ScCsvLayoutData const&)
ScCsvGrid::Command(CommandEvent const&)
ScCsvGrid::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
ScCsvGrid::CreateAccessible()
ScCsvGrid::FillColumnDataFix(ScAsciiOptions&) const
ScCsvGrid::FillColumnDataSep(ScAsciiOptions&) const
ScCsvGrid::GetCellText(unsigned int, int) const
ScCsvGrid::GetColumnFromPos(int) const
ScCsvGrid::GetColumnFromX(int) const
ScCsvGrid::GetColumnTypeName(unsigned int) const
ScCsvGrid::GetColumnWidth(unsigned int) const
ScCsvGrid::GetColumnX(unsigned int) const
ScCsvGrid::GetEditEngine()
ScCsvGrid::GetFirstSelected() const
ScCsvGrid::GetFirstVisColumn() const
ScCsvGrid::GetFocus()
ScCsvGrid::GetFocusRect()
ScCsvGrid::GetLastVisColumn() const
ScCsvGrid::GetNextSelected(unsigned int) const
ScCsvGrid::GetNoScrollCol(int) const
ScCsvGrid::ImplRedraw(OutputDevice&)
ScCsvGrid::ImplSetTextLineFix(int, rtl::OUString const&)
ScCsvGrid::ImplSetTextLineSep(int, rtl::OUString const&, rtl::OUString const&, char16_t, bool, bool)
ScCsvGrid::Init()
ScCsvGrid::InsertSplit(int)
ScCsvGrid::IsSelected(unsigned int) const
ScCsvGrid::IsValidColumn(unsigned int) const
ScCsvGrid::IsVisibleColumn(unsigned int) const
ScCsvGrid::KeyInput(KeyEvent const&)
ScCsvGrid::LoseFocus()
ScCsvGrid::MouseButtonDown(MouseEvent const&)
ScCsvGrid::MouseButtonUp(MouseEvent const&)
ScCsvGrid::MouseMove(MouseEvent const&)
ScCsvGrid::MoveSplit(int, int)
ScCsvGrid::Paint(OutputDevice&, tools::Rectangle const&)
ScCsvGrid::RemoveAllSplits()
ScCsvGrid::RemoveSplit(int)
ScCsvGrid::Resize()
ScCsvGrid::ScCsvGrid(ScCsvLayoutData const&, std::unique_ptr<weld::Menu, std::default_delete<weld::Menu> >, ScCsvTableBox*)
ScCsvGrid::Select(unsigned int, bool)
ScCsvGrid::SelectAll(bool)
ScCsvGrid::SelectRange(unsigned int, unsigned int, bool)
ScCsvGrid::SetColumnStates(std::vector<ScCsvColState, std::allocator<ScCsvColState> >&&)
ScCsvGrid::SetDrawingArea(weld::DrawingArea*)
ScCsvGrid::SetFirstImportedLine(int)
ScCsvGrid::SetSelColumnType(int)
ScCsvGrid::SetSplits(ScCsvSplits const&)
ScCsvGrid::SetTypeNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&&)
ScCsvGrid::StyleUpdated()
ScCsvGrid::ToggleSelect(unsigned int)
ScCsvGrid::UpdateLayoutData()
ScCsvGrid::UpdateOffsetX()
ScCsvGrid::~ScCsvGrid()
ScCsvTableBox::ScCsvTableBox(weld::Builder&)
ScCsvTableBox::~ScCsvTableBox()
ScDBCollection::DeleteOnTab(short)
ScDBCollection::GetDBAtArea(short, short, int, short, int) const
ScDBCollection::GetDBAtCursor(short, int, short, ScDBDataPortion)
ScDBCollection::GetDBAtCursor(short, int, short, ScDBDataPortion) const
ScDBCollection::NamedDBs::NamedDBs(ScDBCollection&, ScDocument&)
ScDBCollection::NamedDBs::NamedDBs(ScDBCollection::NamedDBs const&, ScDBCollection&)
ScDBCollection::NamedDBs::begin() const
ScDBCollection::NamedDBs::end() const
ScDBCollection::NamedDBs::erase(std::_Rb_tree_const_iterator<std::unique_ptr<ScDBData, std::default_delete<ScDBData> > > const&)
ScDBCollection::NamedDBs::findByUpperName2(rtl::OUString const&)
ScDBCollection::NamedDBs::initInserted(ScDBData*)
ScDBCollection::NamedDBs::operator==(ScDBCollection::NamedDBs const&) const
ScDBCollection::NamedDBs::size() const
ScDBCollection::NamedDBs::~NamedDBs()
ScDBCollection::RefreshDirtyTableColumnNames()
ScDBCollection::ScDBCollection(ScDBCollection const&)
ScDBCollection::ScDBCollection(ScDocument&)
ScDBCollection::UpdateMoveTab(short, short)
ScDBCollection::UpdateReference(UpdateRefMode, short, int, short, short, int, short, short, int, short)
ScDBCollection::operator==(ScDBCollection const&) const
ScDBData::ScDBData(rtl::OUString const&, short, short, int, short, int, bool, bool, bool)
ScDBData::~ScDBData()
ScDBDocFunc::Query(short, ScQueryParam const&, ScRange const*, bool, bool)
ScDPCache::AddReference(ScDPObject*) const
ScDPCache::AppendGroupField()
ScDPCache::Clear()
ScDPCache::ClearAllFields()
ScDPCache::ClearGroupFields()
ScDPCache::GetColumnCount() const
ScDPCache::GetDimMemberCount(long) const
ScDPCache::GetDoc() const
ScDPCache::GetGroupItems(long) const
ScDPCache::GetIdByItemData(long, ScDPItemData const&) const
ScDPCache::GetItemDataId(unsigned short, int, bool) const
ScDPCache::GetLocaleIndependentFormat(SvNumberFormatter&, unsigned int)
ScDPCache::GetLocaleIndependentFormattedNumberString(double)
ScDPCache::GetLocaleIndependentFormattedString(double, SvNumberFormatter&, unsigned int)
ScDPCache::GetNumberFormat(long) const
ScDPCache::GetNumberFormatter() const
ScDPCache::GetRowCount() const
ScDPCache::InitFromDataBase(ScDPCache::DBConnector&)
ScDPCache::InitFromDoc(ScDocument&, ScRange const&)
ScDPCache::InternString(unsigned long, rtl::OUString const&)
ScDPCache::IsRowEmpty(int) const
ScDPCache::PostInit()
ScDPCache::RemoveReference(ScDPObject*) const
ScDPCache::ResetGroupItems(long, ScDPNumGroupInfo const&, int)
ScDPCache::ScDPCache(ScDocument&)
ScDPCache::SetGroupItem(long, ScDPItemData const&)
ScDPCache::ValidQuery(int, ScQueryParam const&) const
ScDPCache::~ScDPCache()
ScDPCollection::GetDBCaches() const
ScDPCollection::GetNameCaches() const
ScDPCollection::HasTable(ScDPObject const*) const
ScDPCollection::operator[](unsigned long) const
ScDPDimensionSaveData::CollectDateParts(rtl::OUString const&) const
ScDPDimensionSaveData::CreateDateGroupDimName(int, ScDPObject const&, bool, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*)
ScDPDimensionSaveData::CreateGroupDimName(rtl::OUString const&, ScDPObject const&, bool, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*)
ScDPDimensionSaveData::GetFirstNamedGroupDim(rtl::OUString const&) const
ScDPDimensionSaveData::GetFirstNamedGroupDimAcc(rtl::OUString const&)
ScDPDimensionSaveData::GetGroupDimAccForBase(rtl::OUString const&)
ScDPDimensionSaveData::GetNamedGroupDimAcc(rtl::OUString const&)
ScDPDimensionSaveData::GetNextNamedGroupDim(rtl::OUString const&) const
ScDPDimensionSaveData::GetNextNamedGroupDimAcc(rtl::OUString const&)
ScDPDimensionSaveData::GetNumGroupDimAcc(rtl::OUString const&)
ScDPDimensionSaveData::RemoveGroupDimension(rtl::OUString const&)
ScDPDimensionSaveData::RemoveNumGroupDimension(rtl::OUString const&)
ScDPDimensionSaveData::ReplaceGroupDimension(ScDPSaveGroupDimension const&)
ScDPDimensionSaveData::ReplaceNumGroupDimension(ScDPSaveNumGroupDimension const&)
ScDPDimensionSaveData::ScDPDimensionSaveData()
ScDPDimensionSaveData::WriteToCache(ScDPCache&) const
ScDPDimensionSaveData::WriteToData(ScDPGroupTableData&) const
ScDPDimensionSaveData::operator==(ScDPDimensionSaveData const&) const
ScDPItemData::Compare(ScDPItemData const&, ScDPItemData const&)
ScDPItemData::DisposeString()
ScDPItemData::GetCellType() const
ScDPItemData::IsCaseInsEqual(ScDPItemData const&) const
ScDPItemData::IsValue() const
ScDPItemData::ScDPItemData()
ScDPItemData::ScDPItemData(ScDPItemData const&)
ScDPItemData::ScDPItemData(int, int)
ScDPItemData::ScDPItemData(rtl::OUString const&)
ScDPItemData::SetEmpty()
ScDPItemData::SetErrorStringInterned(_rtl_uString*)
ScDPItemData::SetRangeFirst()
ScDPItemData::SetRangeLast()
ScDPItemData::SetRangeStart(double)
ScDPItemData::SetString(rtl::OUString const&)
ScDPItemData::SetStringInterned(_rtl_uString*)
ScDPItemData::SetValue(double)
ScDPItemData::operator<(ScDPItemData const&) const
ScDPItemData::operator=(ScDPItemData const&)
ScDPItemData::operator==(ScDPItemData const&) const
ScDPItemData::~ScDPItemData()
ScDPName::ScDPName()
ScDPName::ScDPName(rtl::OUString const&, rtl::OUString const&, unsigned char)
ScDPNumGroupDimension::DisposeData()
ScDPNumGroupDimension::ScDPNumGroupDimension()
ScDPNumGroupDimension::ScDPNumGroupDimension(ScDPNumGroupDimension const&)
ScDPNumGroupDimension::ScDPNumGroupDimension(ScDPNumGroupInfo const&)
ScDPNumGroupDimension::operator=(ScDPNumGroupDimension const&)
ScDPNumGroupDimension::~ScDPNumGroupDimension()
ScDPNumGroupInfo::ScDPNumGroupInfo()
ScDPObject::Clear()
ScDPObject::ClearTableData()
ScDPObject::ConvertOrientation(ScDPSaveData&, std::vector<ScPivotField, std::allocator<ScPivotField> > const&, com::sun::star::sheet::DataPilotFieldOrientation, com::sun::star::uno::Reference<com::sun::star::sheet::XDimensionsSupplier> const&, std::vector<std::unique_ptr<ScDPLabelData, std::default_delete<ScDPLabelData> >, std::allocator<std::unique_ptr<ScDPLabelData, std::default_delete<ScDPLabelData> > > > const&, std::vector<ScPivotField, std::allocator<ScPivotField> > const*, std::vector<ScPivotField, std::allocator<ScPivotField> > const*, std::vector<ScPivotField, std::allocator<ScPivotField> > const*)
ScDPObject::CreateSource(ScDPServiceDesc const&)
ScDPObject::EnableGetPivotData(bool)
ScDPObject::FillLabelData(ScPivotParam&)
ScDPObject::FillLabelData(int, ScDPLabelData&)
ScDPObject::FillOldParam(ScPivotParam&) const
ScDPObject::GetDataFieldPositionData(ScAddress const&, com::sun::star::uno::Sequence<com::sun::star::sheet::DataPilotFieldFilter>&)
ScDPObject::GetDrillDownData(ScAddress const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::uno::Any> >&)
ScDPObject::GetHeaderDrag(ScAddress const&, bool, bool, long, tools::Rectangle&, com::sun::star::sheet::DataPilotFieldOrientation&, long&)
ScDPObject::GetHeaderPositionData(ScAddress const&, com::sun::star::sheet::DataPilotTableHeaderData&)
ScDPObject::GetHierarchies(int, com::sun::star::uno::Sequence<rtl::OUString>&)
ScDPObject::GetHierarchiesNA(int, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess>&)
ScDPObject::GetMemberNames(int, com::sun::star::uno::Sequence<rtl::OUString>&)
ScDPObject::GetMemberResultNames(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> >&, long)
ScDPObject::GetMembersNA(int, com::sun::star::uno::Reference<com::sun::star::sheet::XMembersAccess>&)
ScDPObject::GetMembersNA(int, int, com::sun::star::uno::Reference<com::sun::star::sheet::XMembersAccess>&)
ScDPObject::GetNewOutputRange(bool&)
ScDPObject::GetPivotData(rtl::OUString const&, std::vector<com::sun::star::sheet::DataPilotFieldFilter, std::allocator<com::sun::star::sheet::DataPilotFieldFilter> >&)
ScDPObject::GetPositionData(ScAddress const&, com::sun::star::sheet::DataPilotTablePositionData&)
ScDPObject::GetRegisteredSources()
ScDPObject::HasRegisteredSources()
ScDPObject::InvalidateData()
ScDPObject::IsDataDescriptionCell(ScAddress const&)
ScDPObject::IsDimNameInUse(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ScDPObject::IsFilterButton(ScAddress const&)
ScDPObject::IsSheetData() const
ScDPObject::ParseFilters(rtl::OUString&, std::vector<com::sun::star::sheet::DataPilotFieldFilter, std::allocator<com::sun::star::sheet::DataPilotFieldFilter> >&, std::vector<short, std::allocator<short> >&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScDPObject::RefreshAfterLoad()
ScDPObject::RefsEqual(ScDPObject const&) const
ScDPObject::ScDPObject(ScDPObject const&)
ScDPObject::ScDPObject(ScDocument*)
ScDPObject::SetAllowMove(bool)
ScDPObject::SetImportDesc(ScImportSourceDesc const&)
ScDPObject::SetServiceData(ScDPServiceDesc const&)
ScDPObject::SetTag(rtl::OUString const&)
ScDPObject::ToggleDetails(com::sun::star::sheet::DataPilotTableHeaderData const&, ScDPObject*)
ScDPObject::UpdateReference(UpdateRefMode, ScRange const&, short, int, short)
ScDPObject::WriteRefsTo(ScDPObject&) const
ScDPObject::WriteSourceDataTo(ScDPObject&) const
ScDPObject::WriteTempDataTo(ScDPObject&) const
ScDPObject::operator=(ScDPObject const&)
ScDPObject::~ScDPObject()
ScDPOutputGeometry::ScDPOutputGeometry(ScRange const&, bool)
ScDPOutputGeometry::adjustFieldsForDataLayout(unsigned int&, unsigned int&) const
ScDPOutputGeometry::getFieldButtonType(ScAddress const&) const
ScDPOutputGeometry::setDataLayoutType(ScDPOutputGeometry::FieldType)
ScDPOutputGeometry::~ScDPOutputGeometry()
ScDPSaveData::ScDPSaveData()
ScDPSaveData::~ScDPSaveData()
ScDPSaveDimension::AddMember(std::unique_ptr<ScDPSaveMember, std::default_delete<ScDPSaveMember> >)
ScDPSaveDimension::GetCurrentPage() const
ScDPSaveDimension::IsMemberNameInUse(rtl::OUString const&) const
ScDPSaveDimension::RemoveLayoutName()
ScDPSaveDimension::RemoveObsoleteMembers(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> > const&)
ScDPSaveDimension::RemoveSubtotalName()
ScDPSaveDimension::ScDPSaveDimension(ScDPSaveDimension const&)
ScDPSaveDimension::ScDPSaveDimension(rtl::OUString const&, bool)
ScDPSaveDimension::SetMemberPosition(rtl::OUString const&, int)
ScDPSaveDimension::SetName(rtl::OUString const&)
ScDPSaveDimension::SetRepeatItemLabels(bool)
ScDPSaveDimension::SetUsedHierarchy(long)
ScDPSaveDimension::UpdateMemberVisibility(std::unordered_map<rtl::OUString, bool, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, bool> > > const&)
ScDPSaveDimension::WriteToSource(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
ScDPSaveDimension::operator==(ScDPSaveDimension const&) const
ScDPSaveDimension::~ScDPSaveDimension()
ScDPSaveGroupDimension::AddToCache(ScDPCache&) const
ScDPSaveGroupDimension::AddToData(ScDPGroupTableData&) const
ScDPSaveGroupDimension::CreateGroupName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScDPSaveGroupDimension::GetNamedGroup(rtl::OUString const&) const
ScDPSaveGroupDimension::GetNamedGroupAcc(rtl::OUString const&)
ScDPSaveGroupDimension::HasOnlyHidden(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> > const&)
ScDPSaveGroupDimension::IsEmpty() const
ScDPSaveGroupDimension::IsInGroup(ScDPItemData const&) const
ScDPSaveGroupDimension::RemoveFromGroups(rtl::OUString const&)
ScDPSaveGroupDimension::RemoveGroup(rtl::OUString const&)
ScDPSaveGroupDimension::Rename(rtl::OUString const&)
ScDPSaveGroupDimension::ScDPSaveGroupDimension(rtl::OUString const&, rtl::OUString const&)
ScDPSaveGroupDimension::ScDPSaveGroupDimension(rtl::OUString const&, rtl::OUString const&, ScDPNumGroupInfo const&, int)
ScDPSaveGroupItem::AddElementsFromGroup(ScDPSaveGroupItem const&)
ScDPSaveGroupItem::AddToData(ScDPGroupDimension&) const
ScDPSaveGroupItem::ConvertElementsToItems(SvNumberFormatter*) const
ScDPSaveGroupItem::HasInGroup(ScDPItemData const&) const
ScDPSaveGroupItem::RemoveElement(rtl::OUString const&)
ScDPSaveGroupItem::RemoveElementsFromGroups(ScDPSaveGroupDimension&) const
ScDPSaveGroupItem::Rename(rtl::OUString const&)
ScDPSaveGroupItem::ScDPSaveGroupItem(rtl::OUString const&)
ScDPSaveGroupItem::~ScDPSaveGroupItem()
ScDPSaveNumGroupDimension::AddToCache(ScDPCache&) const
ScDPSaveNumGroupDimension::AddToData(ScDPGroupTableData&) const
ScDPSaveNumGroupDimension::ScDPSaveNumGroupDimension(rtl::OUString const&, ScDPNumGroupInfo const&)
ScDPSaveNumGroupDimension::ScDPSaveNumGroupDimension(rtl::OUString const&, ScDPNumGroupInfo const&, int)
ScDPSaveNumGroupDimension::SetGroupInfo(ScDPNumGroupInfo const&)
ScDPTableData::CalcResultsFromCacheTable(ScDPFilteredCache const&, ScDPTableData::CalcInfo&, bool)
ScDPTableData::Compare(int, int, int)
ScDPTableData::FillRowDataFromCacheTable(int, ScDPFilteredCache const&, ScDPTableData::CalcInfo const&, ScDPTableData::CalcRowData&)
ScDPTableData::GetColumnEntries(int)
ScDPTableData::GetDatePart(long, long, long)
ScDPTableData::GetFormattedString(int, ScDPItemData const&, bool) const
ScDPTableData::GetGroupBase(int) const
ScDPTableData::GetItemData(ScDPFilteredCache const&, int, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >&)
ScDPTableData::GetMemberByIndex(int, int)
ScDPTableData::GetMembersCount(int)
ScDPTableData::GetNumberFormat(int)
ScDPTableData::GetNumberFormatByIdx(NfIndexTableOffset)
ScDPTableData::GetSourceDim(int)
ScDPTableData::HasCommonElement(ScDPItemData const&, int, ScDPItemData const&, int) const
ScDPTableData::IsBaseForGroup(int) const
ScDPTableData::IsInGroup(ScDPItemData const&, int, ScDPItemData const&, int) const
ScDPTableData::IsNumOrDateGroup(int) const
ScDPTableData::IsRepeatIfEmpty()
ScDPTableData::ProcessRowData(ScDPTableData::CalcInfo&, ScDPTableData::CalcRowData const&, bool)
ScDPTableData::ScDPTableData(ScDocument const*)
ScDPTableData::~ScDPTableData()
ScDPUtil::getDateGroupName(int, int, SvNumberFormatter*, double, double)
ScDataBarFormat::Clone(ScDocument*) const
ScDataBarFormat::EnsureSize()
ScDataBarFormat::GetDataBarData()
ScDataBarFormat::GetDataBarInfo(ScAddress const&) const
ScDataBarFormat::GetType() const
ScDataBarFormat::ScDataBarFormat(ScDocument*)
ScDataBarFormat::ScDataBarFormat(ScDocument*, ScDataBarFormat const&)
ScDataBarFormat::SetParent(ScConditionalFormat*)
ScDataBarFormat::UpdateDeleteTab(sc::RefUpdateDeleteTabContext&)
ScDataBarFormat::UpdateInsertTab(sc::RefUpdateInsertTabContext&)
ScDataBarFormat::UpdateMoveTab(sc::RefUpdateMoveTabContext&)
ScDataBarFormat::UpdateReference(sc::RefUpdateContext&)
ScDataBarFormat::getMax(double, double) const
ScDataBarFormat::getMin(double, double) const
ScDatabaseRangeObj::ScDatabaseRangeObj(ScDocShell*, short)
ScDefaultsOptions::ScDefaultsOptions()
ScDefaultsOptions::SetDefaults()
ScDefaultsOptions::operator==(ScDefaultsOptions const&) const
ScDetectiveFunc::AppendChangTrackNoteSeparator(rtl::OUString&)
ScDetectiveFunc::DeleteAll(ScDetectiveDelete)
ScDetectiveFunc::DeleteArrowsAt(short, int, bool)
ScDetectiveFunc::DeleteBox(short, int, short, int)
ScDetectiveFunc::DeletePred(short, int)
ScDetectiveFunc::DeleteSucc(short, int)
ScDetectiveFunc::DrawAlienEntry(ScRange const&, ScDetectiveData&)
ScDetectiveFunc::DrawCircle(short, int, ScDetectiveData&)
ScDetectiveFunc::DrawEntry(short, int, ScRange const&, ScDetectiveData&)
ScDetectiveFunc::FindFrameForObject(SdrObject const*, ScRange&)
ScDetectiveFunc::FindPredLevel(short, int, unsigned short, unsigned short)
ScDetectiveFunc::FindPredLevelArea(ScRange const&, unsigned short, unsigned short)
ScDetectiveFunc::FindSuccLevel(short, int, short, int, unsigned short, unsigned short)
ScDetectiveFunc::GetAllPreds(short, int, short, int, std::vector<boost::intrusive_ptr<formula::FormulaToken>, std::allocator<boost::intrusive_ptr<formula::FormulaToken> > >&)
ScDetectiveFunc::GetAllSuccs(short, int, short, int, std::vector<boost::intrusive_ptr<formula::FormulaToken>, std::allocator<boost::intrusive_ptr<formula::FormulaToken> > >&)
ScDetectiveFunc::GetArrowColor()
ScDetectiveFunc::GetCommentColor()
ScDetectiveFunc::GetDrawPos(short, int, ScDetectiveFunc::DrawPosMode) const
ScDetectiveFunc::GetDrawRect(short, int) const
ScDetectiveFunc::GetDrawRect(short, int, short, int) const
ScDetectiveFunc::GetErrorColor()
ScDetectiveFunc::HasArrow(ScAddress const&, short, int, short)
ScDetectiveFunc::HasError(ScRange const&, ScAddress&)
ScDetectiveFunc::InitializeColors()
ScDetectiveFunc::InsertArrow(short, int, short, int, short, int, bool, bool, ScDetectiveData&)
ScDetectiveFunc::InsertErrorLevel(short, int, ScDetectiveData&, unsigned short)
ScDetectiveFunc::InsertObject(ScDetectiveObjType, ScAddress const&, ScRange const&, bool)
ScDetectiveFunc::InsertPredLevel(short, int, ScDetectiveData&, unsigned short)
ScDetectiveFunc::InsertPredLevelArea(ScRange const&, ScDetectiveData&, unsigned short)
ScDetectiveFunc::InsertSuccLevel(short, int, short, int, ScDetectiveData&, unsigned short)
ScDetectiveFunc::InsertToOtherTab(short, int, short, int, bool, ScDetectiveData&)
ScDetectiveFunc::IsColorsInitialized()
ScDetectiveFunc::IsNonAlienArrow(SdrObject const*)
ScDetectiveFunc::Modified()
ScDetectiveFunc::ShowError(short, int)
ScDetectiveFunc::ShowPred(short, int)
ScDetectiveFunc::ShowSucc(short, int)
ScDetectiveFunc::UpdateAllArrowColors()
ScDetectiveFunc::UpdateAllComments(ScDocument&)
ScDocFunc::InsertTable(short, rtl::OUString const&, bool, bool)
ScDocOptions::ResetDocOptions()
ScDocOptions::ScDocOptions()
ScDocProtection::ScDocProtection()
ScDocProtection::ScDocProtection(ScDocProtection const&)
ScDocProtection::getPasswordHash() const
ScDocProtection::hasPasswordHash(ScPasswordHash, ScPasswordHash) const
ScDocProtection::isPasswordEmpty() const
ScDocProtection::isProtectedWithPass() const
ScDocProtection::setPassword(rtl::OUString const&)
ScDocProtection::setPasswordHash(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, unsigned int)
ScDocProtection::~ScDocProtection()
ScDocShell::AdjustPrintZoom(ScRange const&)
ScDocShell::AdjustRowHeight(int, int, short)
ScDocShell::AfterXMLLoading(bool)
ScDocShell::AllowLinkUpdate()
ScDocShell::AsciiSave(SvStream&, ScImportOptions const&, short)
ScDocShell::BeforeXMLLoading()
ScDocShell::CalcOutputFactor()
ScDocShell::CancelAutoDBRange()
ScDocShell::CheckConfigOptions()
ScDocShell::CompareDocument(ScDocument&)
ScDocShell::ConvertFrom(SfxMedium&)
ScDocShell::ConvertTo(SfxMedium&)
ScDocShell::CreateDocumentInfoDialog(weld::Window*, SfxItemSet const&)
ScDocShell::DBAreaDeleted(short, short, int, short)
ScDocShell::DdeCreateLinkSource(rtl::OUString const&)
ScDocShell::DoAutoStyle(ScRange const&, rtl::OUString const&)
ScDocShell::DoConsolidate(ScConsolidateParam const&, bool)
ScDocShell::DoSaveCompleted(SfxMedium*, bool)
ScDocShell::Draw(OutputDevice*, JobSetup const&, unsigned short)
ScDocShell::ErrorMessage(TranslateId)
ScDocShell::Execute(SfxRequest&)
ScDocShell::ExecuteChangeCommentDialog(ScChangeAction*, weld::Window*, bool)
ScDocShell::ExecuteChangeProtectionDialog(bool)
ScDocShell::ExecutePageStyle(SfxViewShell const&, SfxRequest&, short)
ScDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
ScDocShell::GetAnonymousDBData(ScRange const&)
ScDocShell::GetAsciiFilterName()
ScDocShell::GetChangeAction(ScAddress const&)
ScDocShell::GetDBData(ScRange const&, ScGetDBMode, ScGetDBSelection)
ScDocShell::GetDBaseFilterName()
ScDocShell::GetDifFilterName()
ScDocShell::GetDocColors()
ScDocShell::GetDocumentPrinter()
ScDocShell::GetFormatSaveData()
ScDocShell::GetHiddenInformationState(HiddenInformation)
ScDocShell::GetHtmlFilterName()
ScDocShell::GetInterface() const
ScDocShell::GetLinkUpdateModeState() const
ScDocShell::GetLotusFilterName()
ScDocShell::GetOldAutoDBRange()
ScDocShell::GetOwnFilterName()
ScDocShell::GetPageOnFromPageStyleSet(SfxItemSet const*, short, bool&, bool&)
ScDocShell::GetPrinter(bool)
ScDocShell::GetProtectionHash(com::sun::star::uno::Sequence<signed char>&)
ScDocShell::GetRefDevice()
ScDocShell::GetSheetSaveData()
ScDocShell::GetShellByNum(unsigned short)
ScDocShell::GetState(SfxItemSet&)
ScDocShell::GetStatePageStyle(SfxItemSet&, short)
ScDocShell::GetStaticInterface()
ScDocShell::GetStyleSheetPool()
ScDocShell::GetViewBindings()
ScDocShell::GetVisArea(unsigned short) const
ScDocShell::GetWebQueryFilterName()
ScDocShell::HasAutomaticTableName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScDocShell::HasChangeRecordProtection() const
ScDocShell::InitInterface_Impl()
ScDocShell::InitNew(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
ScDocShell::IsChangeRecording() const
ScDocShell::IsEditable() const
ScDocShell::IsOle() const
ScDocShell::LOKCommentNotify(LOKCommentNotificationType, ScDocument const*, ScAddress const&, ScPostIt const*)
ScDocShell::Load(SfxMedium&)
ScDocShell::LoadExternal(SfxMedium&)
ScDocShell::LoadFrom(SfxMedium&)
ScDocShell::LoadStyles(SfxObjectShell&)
ScDocShell::LoadStylesArgs(ScDocShell&, bool, bool, bool)
ScDocShell::LockDocument()
ScDocShell::LockPaint()
ScDocShell::MakeDrawLayer()
ScDocShell::MakeScenario(short, rtl::OUString const&, rtl::OUString const&, Color const&, ScScenarioFlags, ScMarkData&, bool)
ScDocShell::MergeDocument(ScDocument&, bool, bool, unsigned long, std::unordered_map<unsigned long, unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >*, bool)
ScDocShell::MergeSharedDocument(ScDocShell*)
ScDocShell::ModifyScenario(short, rtl::OUString const&, rtl::OUString const&, Color const&, ScScenarioFlags)
ScDocShell::MoveTable(short, short, bool, bool)
ScDocShell::Notify(SfxBroadcaster&, SfxHint const&)
ScDocShell::NotifyStyle(SfxStyleSheetHint const&)
ScDocShell::PageStyleModified(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
ScDocShell::PostDataChanged()
ScDocShell::PostEditView(ScEditEngineDefaulter*, ScAddress const&)
ScDocShell::PostPaint(short, int, short, short, int, short, PaintPartFlags, unsigned short)
ScDocShell::PostPaintCell(ScAddress const&)
ScDocShell::PostPaintCell(short, int, short)
ScDocShell::PostPaintExtras()
ScDocShell::PrepareClose(bool)
ScDocShell::QuerySlotExecutable(unsigned short)
ScDocShell::ReconnectDdeLink(SfxObjectShell&)
ScDocShell::RefreshPivotTables(ScRange const&)
ScDocShell::RegisterInterface(SfxModule const*)
ScDocShell::ReloadTabLinks()
ScDocShell::ResetKeyBindings(ScOptionsUtil::KeyBindingType)
ScDocShell::Save()
ScDocShell::SaveAs(SfxMedium&)
ScDocShell::ScDocShell(SfxModelFlags)
ScDocShell::SetChangeComment(ScChangeAction*, rtl::OUString const&)
ScDocShell::SetChangeRecording(bool, bool)
ScDocShell::SetDrawModified()
ScDocShell::SetFormulaOptions(ScFormulaOptions const&, bool)
ScDocShell::SetInUndo(bool)
ScDocShell::SetInplace(bool)
ScDocShell::SetLockCount(unsigned short)
ScDocShell::SetModified(bool)
ScDocShell::SetPrintZoom(short, unsigned short, unsigned short)
ScDocShell::SetPrinter(VclPtr<SfxPrinter> const&, SfxPrinterChangeFlags)
ScDocShell::SetProtectionPassword(rtl::OUString const&)
ScDocShell::SetSolverSaveData(std::unique_ptr<ScOptSolverSave, std::default_delete<ScOptSolverSave> >)
ScDocShell::SetVisArea(tools::Rectangle const&)
ScDocShell::SetVisAreaOrSize(tools::Rectangle const&)
ScDocShell::SnapVisArea(tools::Rectangle&) const
ScDocShell::TerminateEditing()
ScDocShell::UnlockDocument()
ScDocShell::UnlockPaint()
ScDocShell::UpdateFontList()
ScDocShell::UpdateLinks()
ScDocShell::UpdateOle(ScViewData const&, bool)
ScDocShell::UpdatePaintExt(unsigned short&, ScRange const&)
ScDocShell::UpdatePaintExt(unsigned short&, short, int, short, short, int, short)
ScDocShell::UpdatePendingRowHeights(short, bool)
ScDocShell::UseScenario(short, rtl::OUString const&, bool)
ScDocShell::~ScDocShell()
ScDocument::ApplyPatternArea(short, int, short, int, ScMarkData const&, ScPatternAttr const&, ScEditDataArray*, bool*)
ScDocument::ApplyPatternIfNumberformatIncompatible(ScRange const&, ScMarkData const&, ScPatternAttr const&, SvNumFormatType)
ScDocument::ApplySelectionPattern(ScPatternAttr const&, ScMarkData const&, ScEditDataArray*, bool*)
ScDocument::ApplySelectionStyle(ScStyleSheet const&, ScMarkData const&)
ScDocument::CalcFormulaTree(bool, bool, bool)
ScDocument::CompareDocument(ScDocument&)
ScDocument::CompileHybridFormula()
ScDocument::CopyDdeLinks(ScDocument&) const
ScDocument::CopyOneCellFromClip(sc::CopyFromClipContext&, short, int, short, int)
ScDocument::CopyStdStylesFrom(ScDocument const&)
ScDocument::CopyToDocument(ScRange const&, InsertDeleteFlags, bool, ScDocument&, ScMarkData const*, bool)
ScDocument::CopyUpdated(ScDocument*, ScDocument*)
ScDocument::CreateNote(ScAddress const&)
ScDocument::CreateValidTabNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, short) const
ScDocument::DeleteArea(short, int, short, int, ScMarkData const&, InsertDeleteFlags, bool, sc::ColumnSpanSet*)
ScDocument::DeleteAreaTab(short, int, short, int, short, InsertDeleteFlags)
ScDocument::DeleteSelection(InsertDeleteFlags, ScMarkData const&, bool)
ScDocument::DeleteTabs(short, short)
ScDocument::DoEmptyBlock(short, short, int, short, int)
ScDocument::DoMergeContents(short, short, int, short, int)
ScDocument::DrawGetPrintArea(ScRange&, bool, bool) const
ScDocument::EnableUserInteraction(bool)
ScDocument::EnsureFormulaCellResults(ScRange const&, bool)
ScDocument::ExtendOverlapped(short&, int&, short, int, short) const
ScDocument::Fill(short, int, short, int, ScProgress*, ScMarkData const&, unsigned long, FillDir, FillCmd, FillDateCmd, double, double)
ScDocument::GetAllNoteEntries(short, std::vector<sc::NoteEntry, std::allocator<sc::NoteEntry> >&) const
ScDocument::GetAllocatedColumnsCount(short) const
ScDocument::GetAnonymousDBData()
ScDocument::GetCellArea(short, short&, int&) const
ScDocument::GetCellCount() const
ScDocument::GetCellScriptType(ScAddress const&, unsigned int, ScRefCellValue const*)
ScDocument::GetCellType(short, int, short) const
ScDocument::GetChartRanges(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<ScRangeList, std::allocator<ScRangeList> >&, ScDocument const&)
ScDocument::GetColFlags(short, short) const
ScDocument::GetColWidth(short, short, short) const
ScDocument::GetDBAtArea(short, short, int, short, int) const
ScDocument::GetFirstEditTextRow(ScRange const&) const
ScDocument::GetFormulaCell(ScAddress const&) const
ScDocument::GetFormulaGroupCount() const
ScDocument::GetHashCode(short, long&) const
ScDocument::GetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, o3tl::strong_int<unsigned short, LanguageTypeTag>&) const
ScDocument::GetLinkDoc(short) const
ScDocument::GetLinkManager() const
ScDocument::GetLinkTab(short) const
ScDocument::GetNote(short, int, short)
ScDocument::GetNoteEngine()
ScDocument::GetPrintAreaHor(short, int, int, short&) const
ScDocument::GetPrintAreaVer(short, short, short, int&, bool) const
ScDocument::GetRowHeight(int, short, int*, int*) const
ScDocument::GetTiledRenderingArea(short, short&, int&) const
ScDocument::HasColNotes(short, short) const
ScDocument::HasTabNotes(short) const
ScDocument::InitClipPtrs(ScDocument*)
ScDocument::InitUndo(ScDocument const&, short, short, bool, bool)
ScDocument::InitUndoSelected(ScDocument const&, ScMarkData const&, bool, bool)
ScDocument::InsertMatrixFormula(short, int, short, int, ScMarkData const&, rtl::OUString const&, ScTokenArray const*, formula::FormulaGrammar::Grammar)
ScDocument::InsertTableOp(ScTabOpParam const&, short, int, short, int, ScMarkData const&)
ScDocument::InsertTabs(short, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, bool)
ScDocument::IsDocProtected() const
ScDocument::PreprocessAllRangeNamesUpdate(std::map<rtl::OUString, std::unique_ptr<ScRangeName, std::default_delete<ScRangeName> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::unique_ptr<ScRangeName, std::default_delete<ScRangeName> > > > > const&)
ScDocument::PreprocessDBDataUpdate()
ScDocument::PreprocessRangeNameUpdate()
ScDocument::ReleaseNote(ScAddress const&)
ScDocument::ResetClip(ScDocument*, ScMarkData const*)
ScDocument::ResetClip(ScDocument*, short)
ScDocument::ScDocument(ScDocumentMode, SfxObjectShell*)
ScDocument::SetAllRangeNames(std::map<rtl::OUString, std::unique_ptr<ScRangeName, std::default_delete<ScRangeName> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::unique_ptr<ScRangeName, std::default_delete<ScRangeName> > > > > const&)
ScDocument::SetAnonymousDBData(std::unique_ptr<ScDBData, std::default_delete<ScDBData> >)
ScDocument::SetEditText(ScAddress const&, rtl::OUString const&)
ScDocument::SetFormula(ScAddress const&, ScTokenArray const&)
ScDocument::SetFormulaResults(ScAddress const&, double const*, unsigned long)
ScDocument::SetPattern(ScAddress const&, ScPatternAttr const&)
ScDocument::SetPattern(short, int, short, ScPatternAttr const&)
ScDocument::SetRowHeightRange(int, int, short, unsigned short)
ScDocument::ShowRow(int, short, bool)
ScDocument::StartAllListeners(ScRange const&)
ScDocument::TransferDrawPage(ScDocument const&, short, short)
ScDocument::TransferTab(ScDocument&, short, short, bool, bool)
ScDocument::TransposeClip(ScDocument*, InsertDeleteFlags, bool, bool)
ScDocument::UpdateTranspose(ScAddress const&, ScDocument*, ScMarkData const&, ScDocument*)
ScDocument::~ScDocument()
ScDocumentImport::Attrs::Attrs()
ScDocumentImport::Attrs::~Attrs()
ScDocumentImport::ScDocumentImport(ScDocument&)
ScDocumentImport::broadcastRecalcAfterImportColumn(ScColumn&)
ScDocumentImport::initColumn(ScColumn&)
ScDocumentImport::setDefaultNumericScript(SvtScriptType)
ScDocumentImport::setRowsVisible(short, int, int, bool)
ScDocumentImport::~ScDocumentImport()
ScDocumentLoader::CreateMedium(rtl::OUString const&, std::shared_ptr<SfxFilter const> const&, rtl::OUString const&, weld::Window*)
ScDocumentLoader::GetDocument()
ScDocumentLoader::GetTitle() const
ScDocumentLoader::IsError() const
ScDocumentLoader::RemoveAppPrefix(rtl::OUString&)
ScDocumentLoader::ScDocumentLoader(rtl::OUString const&, rtl::OUString&, rtl::OUString&, unsigned int, weld::Window*, com::sun::star::uno::Reference<com::sun::star::io::XInputStream>)
ScDocumentLoader::~ScDocumentLoader()
ScDocumentPool::CellStyleCreated(std::basic_string_view<char16_t, std::char_traits<char16_t> >, ScDocument const&)
ScDocumentPool::Clone() const
ScDocumentPool::GetMetric(unsigned short) const
ScDocumentPool::GetPresentation(SfxPoolItem const&, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScDocumentPool::PutImpl(SfxPoolItem const&, unsigned short, bool)
ScDocumentPool::ScDocumentPool()
ScDocumentPool::StyleDeleted(ScStyleSheet const*)
ScDocumentPool::~ScDocumentPool()
ScDrawLayer::AddCalcUndo(std::unique_ptr<SdrUndoAction, std::default_delete<SdrUndoAction> >)
ScDrawLayer::AllocModel() const
ScDrawLayer::AllocPage(bool)
ScDrawLayer::BeginCalcUndo(bool)
ScDrawLayer::CopyFromClip(ScDrawLayer*, short, tools::Rectangle const&, ScAddress const&, tools::Rectangle const&)
ScDrawLayer::CopyToClip(ScDocument*, short, tools::Rectangle const&)
ScDrawLayer::DeleteObjectsInSelection(ScMarkData const&)
ScDrawLayer::EnsureGraphicNames()
ScDrawLayer::GetCalcUndo()
ScDrawLayer::GetCellAnchorFromPosition(tools::Rectangle const&, ScDrawObjData&, ScDocument const&, short, bool)
ScDrawLayer::GetCellRect(ScDocument const&, ScAddress const&, bool)
ScDrawLayer::GetNamedObject(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short, short&) const
ScDrawLayer::GetNewGraphicName(long*) const
ScDrawLayer::GetNoteCaptionData(SdrObject*, short)
ScDrawLayer::GetObjDataTab(SdrObject*, short)
ScDrawLayer::GetObjectsAnchoredToCols(short, short, short)
ScDrawLayer::GetObjectsAnchoredToRows(short, int, int)
ScDrawLayer::GetPrintArea(ScRange&, bool, bool) const
ScDrawLayer::GetVisibleName(SdrObject const*)
ScDrawLayer::HasObjects() const
ScDrawLayer::HasObjectsAnchoredInRange(ScRange const&)
ScDrawLayer::InitializeCellAnchoredObj(SdrObject*, ScDrawObjData&)
ScDrawLayer::MirrorRTL(SdrObject*)
ScDrawLayer::MirrorRectRTL(tools::Rectangle&)
ScDrawLayer::MoveArea(short, short, int, short, int, short, int, bool, bool)
ScDrawLayer::MoveCells(short, short, int, short, int, short, int, bool)
ScDrawLayer::MoveObject(SdrObject*, ScAddress const&)
ScDrawLayer::MoveRTL(SdrObject*)
ScDrawLayer::ResetTab(short, short)
ScDrawLayer::ResizeLastRectFromAnchor(SdrObject const*, ScDrawObjData&, bool, bool)
ScDrawLayer::ScAddPage(short)
ScDrawLayer::ScCopyPage(unsigned short, unsigned short)
ScDrawLayer::ScDrawLayer(ScDocument*, rtl::OUString const&)
ScDrawLayer::ScMovePage(unsigned short, unsigned short)
ScDrawLayer::ScRemovePage(short)
ScDrawLayer::ScRenamePage(short, rtl::OUString const&)
ScDrawLayer::SetCellAnchored(SdrObject&, ScDrawObjData const&)
ScDrawLayer::SetChanged(bool)
ScDrawLayer::SetGlobalDrawPersist(SfxObjectShell*)
ScDrawLayer::SetNonRotatedAnchor(SdrObject&, ScDrawObjData const&)
ScDrawLayer::SetPageSize(unsigned short, Size const&, bool, ScObjectHandling)
ScDrawLayer::UpdateCellAnchorFromPositionEnd(SdrObject const&, ScDrawObjData&, ScDocument const&, short, bool)
ScDrawLayer::UseHyphenator()
ScDrawLayer::createUnoModel()
ScDrawLayer::~ScDrawLayer()
ScDrawObjData::Clone(SdrObject*) const
ScDrawObjData::ScDrawObjData()
ScEditEngineDefaulter::GetDefaults()
ScEditEngineDefaulter::RemoveParaAttribs()
ScEditEngineDefaulter::RepeatDefaults()
ScEditEngineDefaulter::ScEditEngineDefaulter(ScEditEngineDefaulter const&)
ScEditEngineDefaulter::ScEditEngineDefaulter(SfxItemPool*, bool)
ScEditEngineDefaulter::SetDefaultItem(SfxPoolItem const&)
ScEditEngineDefaulter::SetDefaults(SfxItemSet const&, bool)
ScEditEngineDefaulter::SetTextNewDefaults(EditTextObject const&, SfxItemSet const&, bool)
ScEditEngineDefaulter::SetTextNewDefaults(rtl::OUString const&, SfxItemSet const&)
ScEditEngineDefaulter::~ScEditEngineDefaulter()
ScEditWindow::CreateAccessible()
ScEditWindow::GetEditEngine() const
ScEditWindow::GetFocus()
ScEditWindow::KeyInput(KeyEvent const&)
ScEditWindow::LoseFocus()
ScEditWindow::MouseButtonDown(MouseEvent const&)
ScEditWindow::ScEditWindow(ScEditWindowLocation, weld::Window*)
ScEditWindow::SetDrawingArea(weld::DrawingArea*)
ScEditWindow::makeEditEngine()
ScEditWindow::~ScEditWindow()
ScExtDocOptions::GetDocSettings() const
ScExtDocOptions::GetLastTab() const
ScExtDocOptions::IsChanged() const
ScExtDocOptions::ScExtDocOptions()
ScExtDocOptions::ScExtDocOptions(ScExtDocOptions const&)
ScExtDocOptions::operator=(ScExtDocOptions const&)
ScExtDocOptions::~ScExtDocOptions()
ScExternalRefManager::ApiGuard::ApiGuard(ScDocument const&)
ScExternalRefManager::ApiGuard::~ApiGuard()
ScExternalRefManager::Notify(SfxBroadcaster&, SfxHint const&)
ScExternalRefManager::ScExternalRefManager(ScDocument&)
ScExternalRefManager::addLinkListener(unsigned short, ScExternalRefManager::LinkListener*)
ScExternalRefManager::breakLink(unsigned short)
ScExternalRefManager::cacheNewDocShell(unsigned short, ScExternalRefManager::SrcShell&)
ScExternalRefManager::clear()
ScExternalRefManager::clearCache(unsigned short)
ScExternalRefManager::enableDocTimer(bool)
ScExternalRefManager::fillCellFormat(unsigned long, ScExternalRefCache::CellFormat*) const
ScExternalRefManager::getAllCachedExternalFileNames() const
ScExternalRefManager::getAllCachedNumberFormats(std::vector<unsigned int, std::allocator<unsigned int> >&) const
ScExternalRefManager::getCacheTableName(unsigned short, unsigned long) const
ScExternalRefManager::getCachedTabSpan(unsigned short, rtl::OUString const&, rtl::OUString const&) const
ScExternalRefManager::getDoubleRefTokensFromSrcDoc(ScDocument const&, rtl::OUString const&, ScRange&, std::vector<ScExternalRefCache::SingleRangeData, std::allocator<ScExternalRefCache::SingleRangeData> >&)
ScExternalRefManager::getExternalFileCount() const
ScExternalRefManager::getExternalFileData(unsigned short) const
ScExternalRefManager::getInMemorySrcDocument(unsigned short)
ScExternalRefManager::getMappedNumberFormat(unsigned short, unsigned int, ScDocument const&)
ScExternalRefManager::getOwnDocumentName() const
ScExternalRefManager::getRangeNameTokensFromSrcDoc(unsigned short, ScDocument const&, rtl::OUString&)
ScExternalRefManager::getRealRangeName(unsigned short, rtl::OUString const&) const
ScExternalRefManager::getRealTableName(unsigned short, rtl::OUString const&) const
ScExternalRefManager::getSingleRefToken(unsigned short, rtl::OUString const&, ScAddress const&, ScAddress const*, short*, ScExternalRefCache::CellFormat*)
ScExternalRefManager::getSingleRefTokenFromSrcDoc(unsigned short, ScDocument&, ScAddress const&, ScExternalRefCache::CellFormat*)
ScExternalRefManager::getSrcDocTable(ScDocument const&, rtl::OUString const&, short&, unsigned short) const
ScExternalRefManager::getSrcDocument(unsigned short)
ScExternalRefManager::hasExternalData() const
ScExternalRefManager::hasExternalFile(rtl::OUString const&) const
ScExternalRefManager::hasExternalFile(unsigned short) const
ScExternalRefManager::insertRefCell(unsigned short, ScAddress const&)
ScExternalRefManager::insertRefCellFromTemplate(ScFormulaCell*, ScFormulaCell*)
ScExternalRefManager::isFileLoadable(rtl::OUString const&) const
ScExternalRefManager::isOwnDocument(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ScExternalRefManager::isValidRangeName(unsigned short, rtl::OUString const&)
ScExternalRefManager::loadSrcDocument(unsigned short, rtl::OUString&)
ScExternalRefManager::markUsedByLinkListeners()
ScExternalRefManager::markUsedExternalRefCells()
ScExternalRefManager::maybeCreateRealFileName(unsigned short)
ScExternalRefManager::maybeLinkExternalFile(unsigned short, bool)
ScExternalRefManager::notifyAllLinkListeners(unsigned short, ScExternalRefManager::LinkUpdateType)
ScExternalRefManager::purgeStaleSrcDocument(int)
ScExternalRefManager::refreshAllRefCells(unsigned short)
ScExternalRefManager::refreshSrcDocument(unsigned short)
ScExternalRefManager::removeLinkListener(ScExternalRefManager::LinkListener*)
ScExternalRefManager::removeLinkListener(unsigned short, ScExternalRefManager::LinkListener*)
ScExternalRefManager::removeRefCell(ScFormulaCell*)
ScExternalRefManager::resetSrcFileData(rtl::OUString const&)
ScExternalRefManager::setAllCacheTableReferencedStati(bool)
ScExternalRefManager::setCacheTableReferenced(unsigned short, rtl::OUString const&, unsigned long)
ScExternalRefManager::setFilterData(unsigned short, rtl::OUString const&, rtl::OUString const&)
ScExternalRefManager::setRelativeFileName(unsigned short, rtl::OUString const&)
ScExternalRefManager::switchSrcFile(unsigned short, rtl::OUString const&, rtl::OUString const&)
ScExternalRefManager::transformUnsavedRefToSavedRef(SfxObjectShell*)
ScExternalRefManager::updateAbsAfterLoad()
ScExternalRefManager::~ScExternalRefManager()
ScFieldEditEngine::CalcFieldValue(SvxFieldItem const&, int, int, std::optional<Color>&, std::optional<Color>&)
ScFieldEditEngine::FieldClicked(SvxFieldItem const&)
ScFieldEditEngine::ScFieldEditEngine(ScDocument*, SfxItemPool*, SfxItemPool*, bool)
ScFilterCreate
ScFilterOptions::ImplCommit()
ScFilterOptions::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScFilterOptions::ScFilterOptions()
ScFormatEntry::IsEqual(ScFormatEntry const&, bool) const
ScFormatEntry::ScFormatEntry(ScDocument*)
ScFormatEntry::endRendering()
ScFormatEntry::operator==(ScFormatEntry const&) const
ScFormatEntry::startRendering()
ScFormulaCell::CalcAfterLoad(sc::CompileFormulaContext&, bool)
ScFormulaCell::CheckComputeDependencies(sc::FormulaLogger::GroupScope&, bool, int, int, bool)
ScFormulaCell::Clone() const
ScFormulaCell::Clone(ScAddress const&) const
ScFormulaCell::CompareByTokenArray(ScFormulaCell const&) const
ScFormulaCell::Compile(rtl::OUString const&, bool, formula::FormulaGrammar::Grammar)
ScFormulaCell::Compile(sc::CompileFormulaContext&, rtl::OUString const&, bool)
ScFormulaCell::CompileColRowNameFormula(sc::CompileFormulaContext&)
ScFormulaCell::CompileDBFormula(sc::CompileFormulaContext&)
ScFormulaCell::CompileTokenArray(bool)
ScFormulaCell::CompileTokenArray(sc::CompileFormulaContext&, bool)
ScFormulaCell::CompileXML(sc::CompileFormulaContext&, ScProgress&)
ScFormulaCell::CreateURLObject()
ScFormulaCell::EndListeningTo(ScDocument&, ScTokenArray*, ScAddress)
ScFormulaCell::EndListeningTo(sc::EndListeningContext&)
ScFormulaCell::FindRangeNamesInUse(sc::UpdatedRangeNames&) const
ScFormulaCell::GetErrorOrValue(FormulaError&, double&)
ScFormulaCell::GetFormula(formula::FormulaGrammar::Grammar, ScInterpreterContext const*) const
ScFormulaCell::GetHash() const
ScFormulaCell::GetHybridFormula() const
ScFormulaCell::GetMatrix()
ScFormulaCell::GetMatrixEdge(ScDocument const&, ScAddress&) const
ScFormulaCell::GetRawError() const
ScFormulaCell::GetRawString() const
ScFormulaCell::GetRawValue() const
ScFormulaCell::GetResultDimensions(unsigned long&, unsigned long&)
ScFormulaCell::GetResultString() const
ScFormulaCell::GetSharedCode()
ScFormulaCell::GetWeight() const
ScFormulaCell::HandleStuffAfterParallelCalculation(ScInterpreter*)
ScFormulaCell::HasHybridStringResult() const
ScFormulaCell::HasOneReference(ScRange&) const
ScFormulaCell::HasRefListExpressibleAsOneReference(ScRange&) const
ScFormulaCell::HasRelNameReference() const
ScFormulaCell::Interpret(int, int)
ScFormulaCell::InterpretFormulaGroup(int, int)
ScFormulaCell::InterpretFormulaGroupOpenCL(sc::FormulaLogger::GroupScope&, bool&, bool&)
ScFormulaCell::InterpretFormulaGroupThreading(sc::FormulaLogger::GroupScope&, bool&, bool&, int, int)
ScFormulaCell::InterpretInvariantFormulaGroup()
ScFormulaCell::InterpretTail(ScInterpreterContext&, ScFormulaCell::ScInterpretTailParameter)
ScFormulaCell::IsEmpty()
ScFormulaCell::IsEmptyDisplayedAsString()
ScFormulaCell::IsShared() const
ScFormulaCell::IsValueNoError()
ScFormulaCell::IsValueNoError() const
ScFormulaCell::MarkUsedExternalReferences()
ScFormulaCell::Notify(SfxHint const&)
ScFormulaCell::Query(SvtListener::QueryBase&) const
ScFormulaCell::ResetTableOpDirtyVar()
ScFormulaCell::ScFormulaCell(ScDocument&, ScAddress const&)
ScFormulaCell::ScFormulaCell(ScDocument&, ScAddress const&, ScTokenArray const&, formula::FormulaGrammar::Grammar, ScMatrixMode)
ScFormulaCell::ScFormulaCell(ScDocument&, ScAddress const&, boost::intrusive_ptr<ScFormulaCellGroup> const&, formula::FormulaGrammar::Grammar, ScMatrixMode)
ScFormulaCell::ScFormulaCell(ScDocument&, ScAddress const&, rtl::OUString const&, formula::FormulaGrammar::Grammar, ScMatrixMode)
ScFormulaCell::ScFormulaCell(ScDocument&, ScAddress const&, std::unique_ptr<ScTokenArray, std::default_delete<ScTokenArray> >, formula::FormulaGrammar::Grammar, ScMatrixMode)
ScFormulaCell::ScFormulaCell(ScFormulaCell const&, ScDocument&, ScAddress const&, ScCloneFlags)
ScFormulaCell::SetCellGroup(boost::intrusive_ptr<ScFormulaCellGroup> const&)
ScFormulaCell::SetCode(std::unique_ptr<ScTokenArray, std::default_delete<ScTokenArray> >)
ScFormulaCell::SetCompile(bool)
ScFormulaCell::SetDirtyAfterLoad()
ScFormulaCell::SetDirtyVar()
ScFormulaCell::SetHybridEmptyDisplayedAsString()
ScFormulaCell::SetHybridFormula(rtl::OUString const&, formula::FormulaGrammar::Grammar)
ScFormulaCell::SetInChangeTrack(bool)
ScFormulaCell::SetMatColsRows(short, int)
ScFormulaCell::SetNeedsDirty(bool)
ScFormulaCell::SetNeedsListening(bool)
ScFormulaCell::SetNext(ScFormulaCell*)
ScFormulaCell::SetNextTrack(ScFormulaCell*)
ScFormulaCell::SetPrevious(ScFormulaCell*)
ScFormulaCell::SetPreviousTrack(ScFormulaCell*)
ScFormulaCell::SetResultError(FormulaError)
ScFormulaCell::SetResultMatrix(short, int, boost::intrusive_ptr<ScMatrix const> const&, formula::FormulaToken const*)
ScFormulaCell::SetRunning(bool)
ScFormulaCell::SetTableOpDirty()
ScFormulaCell::StartListeningTo(ScDocument&)
ScFormulaCell::StartListeningTo(sc::StartListeningContext&)
ScFormulaCell::SyncSharedCode()
ScFormulaCell::TestTabRefAbs(short)
ScFormulaCell::TransposeReference()
ScFormulaCell::UpdateCompile(bool)
ScFormulaCell::UpdateDeleteTab(sc::RefUpdateDeleteTabContext const&)
ScFormulaCell::UpdateGrow(ScRange const&, short, int)
ScFormulaCell::UpdateInsertTab(sc::RefUpdateInsertTabContext const&)
ScFormulaCell::UpdateInsertTabAbs(short)
ScFormulaCell::UpdateMoveTab(sc::RefUpdateMoveTabContext const&, short)
ScFormulaCell::UpdatePosOnShift(sc::RefUpdateContext const&)
ScFormulaCell::UpdateReference(sc::RefUpdateContext const&, ScDocument*, ScAddress const*)
ScFormulaCell::UpdateReferenceOnCopy(sc::RefUpdateContext const&, ScDocument*, ScAddress const*)
ScFormulaCell::UpdateReferenceOnMove(sc::RefUpdateContext const&, ScDocument*, ScAddress const*)
ScFormulaCell::UpdateReferenceOnShift(sc::RefUpdateContext const&, ScDocument*, ScAddress const*)
ScFormulaCell::UpdateTranspose(ScRange const&, ScAddress const&, ScDocument*)
ScFormulaCell::~ScFormulaCell()
ScFormulaCellGroup::ScFormulaCellGroup()
ScFormulaCellGroup::compileCode(ScDocument&, ScAddress const&, formula::FormulaGrammar::Grammar)
ScFormulaCellGroup::endAllGroupListening(ScDocument&)
ScFormulaCellGroup::getAreaListener(ScFormulaCell**, ScRange const&, bool, bool)
ScFormulaCellGroup::setCode(ScTokenArray const&)
ScFormulaCellGroup::~ScFormulaCellGroup()
ScFormulaOptions::ResetFormulaSeparators()
ScFormulaOptions::ScFormulaOptions()
ScFormulaOptions::SetDefaults()
ScFormulaOptions::operator!=(ScFormulaOptions const&) const
ScFormulaOptions::operator==(ScFormulaOptions const&) const
ScGlobal::FindUnquoted(char16_t const*, char16_t)
ScGlobal::FindUnquoted(rtl::OUString const&, char16_t, int)
ScGlobal::GetAutoFormat()
ScGlobal::GetStandardFormat(SvNumberFormatter&, unsigned int, SvNumFormatType)
ScGlobal::GetStandardRowHeight()
ScGlobal::IsQuoted(rtl::OUString const&, char16_t)
ScHeaderEditEngine::CalcFieldValue(SvxFieldItem const&, int, int, std::optional<Color>&, std::optional<Color>&)
ScHeaderEditEngine::ScHeaderEditEngine(SfxItemPool*)
ScIconSetFormat::CalcValue(double, double, __gnu_cxx::__normal_iterator<std::unique_ptr<ScColorScaleEntry, o3tl::default_delete<ScColorScaleEntry> > const*, std::vector<std::unique_ptr<ScColorScaleEntry, o3tl::default_delete<ScColorScaleEntry> >, std::allocator<std::unique_ptr<ScColorScaleEntry, o3tl::default_delete<ScColorScaleEntry> > > > > const&) const
ScIconSetFormat::Clone(ScDocument*) const
ScIconSetFormat::EnsureSize()
ScIconSetFormat::GetIconSetData()
ScIconSetFormat::GetMaxValue() const
ScIconSetFormat::GetMinValue() const
ScIconSetFormat::GetType() const
ScIconSetFormat::ScIconSetFormat(ScDocument*)
ScIconSetFormat::ScIconSetFormat(ScDocument*, ScIconSetFormat const&)
ScIconSetFormat::SetParent(ScConditionalFormat*)
ScIconSetFormat::UpdateDeleteTab(sc::RefUpdateDeleteTabContext&)
ScIconSetFormat::UpdateInsertTab(sc::RefUpdateInsertTabContext&)
ScIconSetFormat::UpdateMoveTab(sc::RefUpdateMoveTabContext&)
ScIconSetFormat::UpdateReference(sc::RefUpdateContext&)
ScIconSetFormat::begin()
ScIconSetFormat::end()
ScIconSetFormat::getBitmap(std::map<rtl::OUString, BitmapEx, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, BitmapEx> > >&, ScIconSetType, int)
ScIconSetFormat::getIconName(ScIconSetType, int)
ScIconSetFormat::getIconSetElements(ScIconSetType)
ScIconSetFormat::size() const
ScImportExport::CountVisualWidth(rtl::OUString const&)
ScImportExport::CountVisualWidth(rtl::OUString const&, int&, int)
ScImportExport::Dif2Doc(SvStream&)
ScImportExport::Doc2Dif(SvStream&)
ScImportExport::Doc2HTML(SvStream&, rtl::OUString const&)
ScImportExport::Doc2RTF(SvStream&)
ScImportExport::Doc2Sylk(SvStream&)
ScImportExport::Doc2Text(SvStream&)
ScImportExport::EndPaste(bool)
ScImportExport::ExportByteString(rtl::OString&, unsigned short, SotClipboardFormatId)
ScImportExport::ExportData(rtl::OUString const&, com::sun::star::uno::Any&)
ScImportExport::ExportStream(SvStream&, rtl::OUString const&, SotClipboardFormatId)
ScImportExport::ExportString(rtl::OUString&, SotClipboardFormatId)
ScImportExport::ExtText2Doc(SvStream&)
ScImportExport::HTML2Doc(SvStream&, rtl::OUString const&)
ScImportExport::ImportString(rtl::OUString const&, SotClipboardFormatId)
ScImportExport::IsFormatSupported(SotClipboardFormatId)
ScImportExport::RTF2Doc(SvStream&, rtl::OUString const&)
ScImportExport::ScImportExport(ScDocument&)
ScImportExport::ScImportExport(ScDocument&, ScAddress const&)
ScImportExport::ScImportExport(ScDocument&, ScRange const&)
ScImportExport::ScImportExport(ScDocument&, rtl::OUString const&)
ScImportExport::ScanNextFieldFromString(char16_t const*, rtl::OUString&, char16_t, char16_t const*, bool, bool&, bool&, bool)
ScImportExport::SetExtOptions(ScAsciiOptions const&)
ScImportExport::SetFilterOptions(rtl::OUString const&)
ScImportExport::SetNoEndianSwap(SvStream&)
ScImportExport::StartPaste()
ScImportExport::Sylk2Doc(SvStream&)
ScImportExport::Text2Doc(SvStream&)
ScImportExport::WriteUnicodeOrByteEndl(SvStream&)
ScImportExport::WriteUnicodeOrByteString(SvStream&, rtl::OUString const&, bool)
ScImportExport::~ScImportExport()
ScImportOptions::BuildString() const
ScImportOptions::ScImportOptions(rtl::OUString const&)
ScIndentItem::Clone(SfxItemPool*) const
ScIndentItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScIndentItem::ScIndentItem(unsigned short)
ScLineBreakCell::Clone(SfxItemPool*) const
ScLineBreakCell::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScLineBreakCell::ScLineBreakCell(bool)
ScLinkConfigItem::ImplCommit()
ScLinkConfigItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScLinkConfigItem::ScLinkConfigItem(rtl::OUString const&)
ScLinkConfigItem::ScLinkConfigItem(rtl::OUString const&, ConfigItemMode)
ScLinkConfigItem::SetCommitLink(Link<ScLinkConfigItem&, void> const&)
ScLinkConfigItem::SetNotifyLink(Link<ScLinkConfigItem&, void> const&)
ScMacroManager::GetUserFuncVolatile(rtl::OUString const&)
ScMacroManager::InitUserFuncData()
ScMarkArray::GetMark(int) const
ScMarkArray::GetMarkEnd(int, bool) const
ScMarkArray::GetNextMarked(int, bool) const
ScMarkArray::HasOneMark(int&, int&) const
ScMarkArray::Intersect(ScMarkArray const&)
ScMarkArray::IsAllMarked(int, int) const
ScMarkArray::Reset(bool, unsigned long)
ScMarkArray::ScMarkArray(ScMarkArray const&)
ScMarkArray::ScMarkArray(ScMarkArray&&)
ScMarkArray::ScMarkArray(ScSheetLimits const&)
ScMarkArray::Set(std::vector<ScMarkEntry, std::allocator<ScMarkEntry> >&&)
ScMarkArray::Shift(int, long)
ScMarkArray::operator=(ScMarkArray const&)
ScMarkArray::operator=(ScMarkArray&&)
ScMarkArray::operator==(ScMarkArray const&) const
ScMarkArray::~ScMarkArray()
ScMarkArrayIter::ScMarkArrayIter(ScMarkArray const*)
ScMarkArrayIter::reset(ScMarkArray const*)
ScMarkArrayIter::~ScMarkArrayIter()
ScMarkData::ExtendRangeListTables(ScRangeList*) const
ScMarkData::FillRangeListWithMarks(ScRangeList*, bool, short) const
ScMarkData::GetLastSelected() const
ScMarkData::GetMarkedColSpans() const
ScMarkData::GetMarkedRanges() const
ScMarkData::GetMarkedRangesForTab(short) const
ScMarkData::GetMarkedRowSpans() const
ScMarkData::GetMultiMarkArea(ScRange&) const
ScMarkData::GetTableSelect(short) const
ScMarkData::HasAnyMultiMarks() const
ScMarkData::MarkFromRangeList(ScRangeList const&, bool)
ScMarkData::MarkToSimple()
ScMarkData::ResetMark()
ScMarkData::ScMarkData(ScSheetLimits const&)
ScMarkData::ScMarkData(ScSheetLimits const&, ScRangeList const&)
ScMarkData::SetAreaTab(short)
ScMarkData::ShiftCols(ScDocument const&, short, int)
ScMarkData::ShiftRows(ScDocument const&, int, int)
ScMarkData::begin()
ScMarkData::end()
ScMarkData::operator=(ScMarkData const&)
ScMarkData::operator=(ScMarkData&&)
ScMarkData::rbegin() const
ScMarkData::~ScMarkData()
ScMatrix::AddOp(double, ScMatrix const&)
ScMatrix::And() const
ScMatrix::Clone() const
ScMatrix::CloneAndExtend(unsigned long, unsigned long) const
ScMatrix::CloneIfConst()
ScMatrix::CollectKahan(std::vector<sc::op::Op_<std::function<void (KahanSum&, double)>, KahanSum>, std::allocator<sc::op::Op_<std::function<void (KahanSum&, double)>, KahanSum> > > const&)
ScMatrix::CompareEqual()
ScMatrix::CompareGreater()
ScMatrix::CompareGreaterEqual()
ScMatrix::CompareLess()
ScMatrix::CompareLessEqual()
ScMatrix::CompareMatrix(sc::Compare&, unsigned long, sc::CompareOptions*) const
ScMatrix::CompareNotEqual()
ScMatrix::Count(bool, bool, bool) const
ScMatrix::DivOp(bool, double, ScMatrix const&)
ScMatrix::ExecuteOperation(std::pair<unsigned long, unsigned long> const&, std::pair<unsigned long, unsigned long> const&, std::function<void (unsigned long, unsigned long, double)>, std::function<void (unsigned long, unsigned long, bool)>, std::function<void (unsigned long, unsigned long, svl::SharedString)>, std::function<void (unsigned long, unsigned long)>) const
ScMatrix::FillDouble(double, unsigned long, unsigned long, unsigned long, unsigned long)
ScMatrix::GetDouble(unsigned long) const
ScMatrix::GetDouble(unsigned long, unsigned long) const
ScMatrix::GetDoubleArray(std::vector<double, std::allocator<double> >&, bool) const
ScMatrix::GetDoubleWithStringConversion(unsigned long, unsigned long) const
ScMatrix::GetElementCount() const
ScMatrix::GetError(unsigned long, unsigned long) const
ScMatrix::GetGcd() const
ScMatrix::GetLcm() const
ScMatrix::GetMaxValue(bool, bool) const
ScMatrix::GetMinValue(bool, bool) const
ScMatrix::GetString(SvNumberFormatter&, unsigned long, unsigned long) const
ScMatrix::GetString(unsigned long) const
ScMatrix::GetString(unsigned long, unsigned long) const
ScMatrix::IsBoolean(unsigned long, unsigned long) const
ScMatrix::IsEmpty(unsigned long, unsigned long) const
ScMatrix::IsEmptyCell(unsigned long, unsigned long) const
ScMatrix::IsEmptyPath(unsigned long, unsigned long) const
ScMatrix::IsEmptyResult(unsigned long, unsigned long) const
ScMatrix::IsNumeric() const
ScMatrix::IsSizeAllocatable(unsigned long, unsigned long)
ScMatrix::IsStringOrEmpty(unsigned long) const
ScMatrix::IsStringOrEmpty(unsigned long, unsigned long) const
ScMatrix::IsValue(unsigned long) const
ScMatrix::IsValue(unsigned long, unsigned long) const
ScMatrix::IsValueOrEmpty(unsigned long, unsigned long) const
ScMatrix::MatConcat(unsigned long, unsigned long, boost::intrusive_ptr<ScMatrix> const&, boost::intrusive_ptr<ScMatrix> const&, SvNumberFormatter&, svl::SharedStringPool&)
ScMatrix::MatCopy(ScMatrix const&) const
ScMatrix::MatTrans(ScMatrix const&) const
ScMatrix::MatchDoubleInColumns(double, unsigned long, unsigned long) const
ScMatrix::MatchStringInColumns(svl::SharedString const&, unsigned long, unsigned long) const
ScMatrix::MergeDoubleArrayMultiply(std::vector<double, std::allocator<double> >&) const
ScMatrix::MulOp(double, ScMatrix const&)
ScMatrix::NegOp(ScMatrix const&)
ScMatrix::NotOp(ScMatrix const&)
ScMatrix::Or() const
ScMatrix::PowOp(bool, double, ScMatrix const&)
ScMatrix::Product(bool, bool) const
ScMatrix::PutDouble(double const*, unsigned long, unsigned long, unsigned long)
ScMatrix::PutDouble(double, unsigned long)
ScMatrix::PutDoubleVector(std::vector<double, std::allocator<double> > const&, unsigned long, unsigned long)
ScMatrix::PutEmptyPath(unsigned long, unsigned long)
ScMatrix::PutEmptyPathVector(unsigned long, unsigned long, unsigned long)
ScMatrix::PutEmptyResultVector(unsigned long, unsigned long, unsigned long)
ScMatrix::PutEmptyVector(unsigned long, unsigned long, unsigned long)
ScMatrix::PutString(svl::SharedString const&, unsigned long)
ScMatrix::PutString(svl::SharedString const*, unsigned long, unsigned long, unsigned long)
ScMatrix::PutStringVector(std::vector<svl::SharedString, std::allocator<svl::SharedString> > const&, unsigned long, unsigned long)
ScMatrix::Resize(unsigned long, unsigned long, double)
ScMatrix::ScMatrix(unsigned long, unsigned long)
ScMatrix::ScMatrix(unsigned long, unsigned long, double)
ScMatrix::ScMatrix(unsigned long, unsigned long, std::vector<double, std::allocator<double> > const&)
ScMatrix::SetErrorInterpreter(ScInterpreter*)
ScMatrix::SetImmutable() const
ScMatrix::SetMutable()
ScMatrix::SubOp(bool, double, ScMatrix const&)
ScMatrix::Sum(bool, bool) const
ScMatrix::SumSquare(bool, bool) const
ScMatrix::ValidColRow(unsigned long, unsigned long) const
ScMatrix::ValidColRowOrReplicated(unsigned long&, unsigned long&) const
ScMatrix::ValidColRowReplicated(unsigned long&, unsigned long&) const
ScMatrix::Xor() const
ScMatrix::~ScMatrix()
ScMergeAttr::Clone(SfxItemPool*) const
ScMergeAttr::ScMergeAttr()
ScMergeAttr::ScMergeAttr(ScMergeAttr const&)
ScMergeAttr::ScMergeAttr(short, int)
ScMergeAttr::dumpAsXml(_xmlTextWriter*) const
ScMergeAttr::operator==(SfxPoolItem const&) const
ScMergeAttr::~ScMergeAttr()
ScMergeFlagAttr::Clone(SfxItemPool*) const
ScMergeFlagAttr::HasPivotButton() const
ScMergeFlagAttr::HasPivotPopupButton() const
ScMergeFlagAttr::ScMergeFlagAttr()
ScMergeFlagAttr::ScMergeFlagAttr(ScMF)
ScMergeFlagAttr::dumpAsXml(_xmlTextWriter*) const
ScMergeFlagAttr::~ScMergeFlagAttr()
ScModelObj::AfterXMLLoading()
ScModelObj::BeforeXMLLoading()
ScModelObj::CreateAndSet(ScDocShell*)
ScModelObj::FillRenderMarkData(com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, ScMarkData&, ScPrintSelectionStatus&, rtl::OUString&, bool&) const
ScModelObj::GetFormatSaveData()
ScModelObj::GetFormatter()
ScModelObj::GetSheetSaveData()
ScModelObj::HandleCalculateEvents()
ScModelObj::HasChangesListeners() const
ScModelObj::Notify(SfxBroadcaster&, SfxHint const&)
ScModelObj::NotifyChanges(rtl::OUString const&, ScRangeList const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScModelObj::RepaintRange(ScRange const&)
ScModelObj::RepaintRange(ScRangeList const&)
ScModelObj::ScModelObj(ScDocShell*)
ScModelObj::acquire()
ScModelObj::addActionLock()
ScModelObj::addChangesListener(com::sun::star::uno::Reference<com::sun::star::util::XChangesListener> const&)
ScModelObj::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScModelObj::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScModelObj::calculate()
ScModelObj::calculateAll()
ScModelObj::completeFunction(rtl::OUString const&)
ScModelObj::consolidate(com::sun::star::uno::Reference<com::sun::star::sheet::XConsolidationDescriptor> const&)
ScModelObj::create(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const*)
ScModelObj::createConsolidationDescriptor(unsigned char)
ScModelObj::createDataProvider()
ScModelObj::createInstance(rtl::OUString const&)
ScModelObj::createInstanceWithArguments(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ScModelObj::disableAutomaticDeviceSelection()
ScModelObj::disableOpcodeSubsetTest()
ScModelObj::enableAutomaticCalculation(unsigned char)
ScModelObj::enableAutomaticDeviceSelection(unsigned char)
ScModelObj::enableOpcodeSubsetTest()
ScModelObj::enableOpenCL(unsigned char)
ScModelObj::getAvailableServiceNames()
ScModelObj::getCellCursor(tools::JsonWriter&)
ScModelObj::getDeviceID()
ScModelObj::getDocWindow()
ScModelObj::getDocumentSize()
ScModelObj::getDrawPages()
ScModelObj::getFormulaCellNumberLimit()
ScModelObj::getImplementationId()
ScModelObj::getImplementationName()
ScModelObj::getLinks()
ScModelObj::getOpenCLPlatforms()
ScModelObj::getPart()
ScModelObj::getPartHash(int)
ScModelObj::getPartInfo(int)
ScModelObj::getPartName(int)
ScModelObj::getParts()
ScModelObj::getPlatformID()
ScModelObj::getPointer()
ScModelObj::getPostIts(tools::JsonWriter&)
ScModelObj::getPostItsPos(tools::JsonWriter&)
ScModelObj::getPropertySetInfo()
ScModelObj::getPropertyValue(rtl::OUString const&)
ScModelObj::getRenderer(int, com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScModelObj::getRendererCount(com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScModelObj::getRowColumnHeaders(tools::Rectangle const&, tools::JsonWriter&)
ScModelObj::getSdrModelFromUnoModel() const
ScModelObj::getSelection()
ScModelObj::getSheetGeometryData(bool, bool, bool, bool, bool, bool)
ScModelObj::getSheets()
ScModelObj::getSomething(com::sun::star::uno::Sequence<signed char> const&)
ScModelObj::getStyleFamilies()
ScModelObj::getSupportedServiceNames()
ScModelObj::getTrackedChanges(tools::JsonWriter&)
ScModelObj::getTypes()
ScModelObj::getViewData()
ScModelObj::initializeForTiledRendering(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScModelObj::isActionLocked()
ScModelObj::isAutomaticCalculationEnabled()
ScModelObj::isMimeTypeSupported()
ScModelObj::isOpcodeSubsetTested()
ScModelObj::isOpenCLEnabled()
ScModelObj::isProtected()
ScModelObj::lockControllers()
ScModelObj::paintTile(VirtualDevice&, int, int, int, int, long, long)
ScModelObj::postKeyEvent(int, int, int)
ScModelObj::postMouseEvent(int, int, int, int, int, int)
ScModelObj::protect(rtl::OUString const&)
ScModelObj::queryInterface(com::sun::star::uno::Type const&)
ScModelObj::refreshArrows()
ScModelObj::release()
ScModelObj::removeActionLock()
ScModelObj::removeChangesListener(com::sun::star::uno::Reference<com::sun::star::util::XChangesListener> const&)
ScModelObj::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScModelObj::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScModelObj::render(int, com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScModelObj::resetActionLocks()
ScModelObj::resetSelection()
ScModelObj::seekGoal(com::sun::star::table::CellAddress const&, com::sun::star::table::CellAddress const&, rtl::OUString const&)
ScModelObj::selectOpenCLDevice(int, int)
ScModelObj::setActionLocks(short)
ScModelObj::setClientVisibleArea(tools::Rectangle const&)
ScModelObj::setClientZoom(int, int, int, int)
ScModelObj::setClipboard(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&)
ScModelObj::setFormulaCellNumberLimit(int)
ScModelObj::setGraphicSelection(int, int, int)
ScModelObj::setOutlineState(bool, int, int, bool)
ScModelObj::setPart(int, bool)
ScModelObj::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ScModelObj::setTextSelection(int, int, int)
ScModelObj::supportsService(rtl::OUString const&)
ScModelObj::unlockControllers()
ScModelObj::unprotect(rtl::OUString const&)
ScModelObj::~ScModelObj()
ScModule::CallAutomationApplicationEventSinks(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
ScModule::Find1RefWindow(unsigned short, weld::Window const*)
ScModule::InputEnterHandler(ScEnterMode)
ScModule::RegisterRefController(unsigned short, std::shared_ptr<SfxDialogController>&, weld::Window*)
ScModule::SetRefDialog(unsigned short, bool, SfxViewFrame*)
ScModule::UnregisterRefController(unsigned short, std::shared_ptr<SfxDialogController> const&)
ScMultiBlockUndo::BeginUndo()
ScMultiBlockUndo::EndRedo()
ScMultiBlockUndo::EndUndo()
ScMultiBlockUndo::ScMultiBlockUndo(ScDocShell*, ScRangeList const&)
ScMultiBlockUndo::ShowBlock()
ScMultiBlockUndo::~ScMultiBlockUndo()
ScMultiSel::GetMarkArray(short) const
ScMultiSel::GetMultiSelArray(short) const
ScMultiSel::GetRowSelArray() const
ScMultiSel::IsRowRangeMarked(int, int) const
ScMultiSel::MarkAllCols(int, int)
ScMultiSel::ScMultiSel(ScSheetLimits const&)
ScMultiSel::Set(ScRangeList const&)
ScMultiSel::ShiftCols(short, int)
ScMultiSel::ShiftRows(int, int)
ScMultiSel::operator=(ScMultiSel const&)
ScMultiSel::operator=(ScMultiSel&&)
ScMultiSel::~ScMultiSel()
ScNamedRangeObj::GetTab_Impl()
ScNamedRangeObj::Modify_Impl(rtl::OUString const*, ScTokenArray const*, rtl::OUString const*, ScAddress const*, ScRangeData::Type const*, formula::FormulaGrammar::Grammar)
ScNamedRangeObj::Notify(SfxBroadcaster&, SfxHint const&)
ScNamedRangeObj::ScNamedRangeObj(rtl::Reference<ScNamedRangesObj> const&, ScDocShell*, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::container::XNamed> const&)
ScNamedRangeObj::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScNamedRangeObj::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScNamedRangeObj::getContent()
ScNamedRangeObj::getImplementationName()
ScNamedRangeObj::getName()
ScNamedRangeObj::getPropertySetInfo()
ScNamedRangeObj::getPropertyValue(rtl::OUString const&)
ScNamedRangeObj::getReferencePosition()
ScNamedRangeObj::getReferredCells()
ScNamedRangeObj::getSomething(com::sun::star::uno::Sequence<signed char> const&)
ScNamedRangeObj::getSupportedServiceNames()
ScNamedRangeObj::getTokens()
ScNamedRangeObj::getType()
ScNamedRangeObj::getUnoTunnelId()
ScNamedRangeObj::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ScNamedRangeObj::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ScNamedRangeObj::setContent(rtl::OUString const&)
ScNamedRangeObj::setName(rtl::OUString const&)
ScNamedRangeObj::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ScNamedRangeObj::setReferencePosition(com::sun::star::table::CellAddress const&)
ScNamedRangeObj::setTokens(com::sun::star::uno::Sequence<com::sun::star::sheet::FormulaToken> const&)
ScNamedRangeObj::setType(int)
ScNamedRangeObj::supportsService(rtl::OUString const&)
ScNamedRangeObj::~ScNamedRangeObj()
ScNoteUtil::CreateNoteFromCaption(ScDocument&, ScAddress const&, SdrCaptionObj*)
ScNoteUtil::CreateTempCaption(ScDocument&, ScAddress const&, SdrPage&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, tools::Rectangle const&, bool)
ScOrcusXMLTreeParam::EntryData::EntryData(ScOrcusXMLTreeParam::EntryType)
ScOutlineArray::DecDepth()
ScOutlineArray::DeleteSpace(int, unsigned long)
ScOutlineArray::ExtendBlock(unsigned long, int&, int&)
ScOutlineArray::FindEntry(int, unsigned long&, unsigned long&, unsigned long)
ScOutlineArray::GetEntry(unsigned long, unsigned long)
ScOutlineArray::GetEntryIndex(unsigned long, int, unsigned long&) const
ScOutlineArray::GetEntryIndexInRange(unsigned long, int, int, unsigned long&) const
ScOutlineArray::InsertSpace(int, unsigned long)
ScOutlineArray::ManualAction(int, int, bool, ScTable const&, bool)
ScOutlineArray::PromoteSub(int, int, unsigned long)
ScOutlineArray::Remove(int, int, bool&)
ScOutlineArray::RemoveAll()
ScOutlineArray::ScOutlineArray()
ScOutlineArray::ScOutlineArray(ScOutlineArray const&)
ScOutlineArray::SetVisibleBelow(unsigned long, unsigned long, bool, bool)
ScOutlineArray::TestInsertSpace(unsigned long, int) const
ScOutlineArray::dumpAsString() const
ScOutlineArray::finalizeImport(ScTable const&)
ScPageHFItem::Clone(SfxItemPool*) const
ScPageHFItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
ScPageHFItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScPageHFItem::ScPageHFItem(ScPageHFItem const&)
ScPageHFItem::ScPageHFItem(unsigned short)
ScPageHFItem::dumpAsXml(_xmlTextWriter*) const
ScPageHFItem::operator==(SfxPoolItem const&) const
ScPageHFItem::~ScPageHFItem()
ScPageScaleToItem::Clone(SfxItemPool*) const
ScPageScaleToItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScPageScaleToItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
ScPageScaleToItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScPageScaleToItem::ScPageScaleToItem()
ScPageScaleToItem::ScPageScaleToItem(unsigned short, unsigned short)
ScPageScaleToItem::dumpAsXml(_xmlTextWriter*) const
ScPageScaleToItem::operator==(SfxPoolItem const&) const
ScPageScaleToItem::~ScPageScaleToItem()
ScPaintHint::ScPaintHint(ScRange const&, PaintPartFlags)
ScPaintHint::~ScPaintHint()
ScPatternAttr::CalcHashCode() const
ScPatternAttr::ClearItems(unsigned short const*)
ScPatternAttr::Clone(SfxItemPool*) const
ScPatternAttr::DeleteUnchanged(ScPatternAttr const*)
ScPatternAttr::FillEditParaItems(SfxItemSet*) const
ScPatternAttr::GetCellOrientation(SfxItemSet const&, SfxItemSet const*)
ScPatternAttr::GetCellOrientation(SfxItemSet const*) const
ScPatternAttr::GetItem(unsigned short, SfxItemSet const&, SfxItemSet const*)
ScPatternAttr::GetKey() const
ScPatternAttr::GetNumberFormat(SvNumberFormatter*, SfxItemSet const*) const
ScPatternAttr::GetRotateDir(SfxItemSet const*) const
ScPatternAttr::GetRotateVal(SfxItemSet const*) const
ScPatternAttr::HasItemsSet(unsigned short const*) const
ScPatternAttr::IsSymbolFont() const
ScPatternAttr::IsVisible() const
ScPatternAttr::IsVisibleEqual(ScPatternAttr const&) const
ScPatternAttr::PutInPool(ScDocument*, ScDocument*) const
ScPatternAttr::ScPatternAttr(ScPatternAttr const&)
ScPatternAttr::ScPatternAttr(SfxItemPool*)
ScPatternAttr::ScPatternAttr(SfxItemSet&&)
ScPatternAttr::ScPatternAttr(SfxItemSet&&, rtl::OUString const&)
ScPatternAttr::SetKey(unsigned long)
ScPatternAttr::StyleToName()
ScPatternAttr::UpdateStyleSheet(ScDocument const&)
ScPatternAttr::operator==(SfxPoolItem const&) const
ScPatternAttr::~ScPatternAttr()
ScPostIt::AutoStamp()
ScPostIt::Clone(ScAddress const&, ScDocument&, ScAddress const&, bool) const
ScPostIt::CreateCaption(ScAddress const&, SdrCaptionObj const*)
ScPostIt::CreateCaptionFromInitData(ScAddress const&) const
ScPostIt::ForgetCaption(bool)
ScPostIt::GetOutlinerObject() const
ScPostIt::HasMultiLineText() const
ScPostIt::RemoveCaption()
ScPostIt::ScPostIt(ScDocument&, ScAddress const&, ScNoteData const&, bool, unsigned int)
ScPostIt::ScPostIt(ScDocument&, ScAddress const&, ScPostIt const&, unsigned int)
ScPostIt::ScPostIt(ScDocument&, ScAddress const&, unsigned int)
ScPostIt::SetDate(rtl::OUString const&)
ScPostIt::ShowCaptionTemp(ScAddress const&, bool)
ScPostIt::UpdateCaptionPos(ScAddress const&)
ScPostIt::~ScPostIt()
ScPreviewShell::Activate(bool)
ScPreviewShell::AddAccessibilityObject(SfxListener&)
ScPreviewShell::AdjustPosSizePixel(Point const&, Size const&)
ScPreviewShell::BroadcastAccessibility(SfxHint const&)
ScPreviewShell::Construct(vcl::Window*)
ScPreviewShell::CreateInstance(SfxViewFrame*, SfxViewShell*)
ScPreviewShell::CreatePrintOptionsPage(weld::Container*, weld::DialogController*, SfxItemSet const&)
ScPreviewShell::DoScroll(unsigned short)
ScPreviewShell::Execute(SfxRequest&)
ScPreviewShell::ExitPreview()
ScPreviewShell::FillFieldData(ScHeaderFieldData&)
ScPreviewShell::GetDocument()
ScPreviewShell::GetInterface() const
ScPreviewShell::GetLocationData()
ScPreviewShell::GetPageSize(Size&)
ScPreviewShell::GetPrinter(bool)
ScPreviewShell::GetState(SfxItemSet&)
ScPreviewShell::GetStaticInterface()
ScPreviewShell::HasAccessibilityObjects() const
ScPreviewShell::HasPrintOptionsPage() const
ScPreviewShell::InitFactory()
ScPreviewShell::InitInterface_Impl()
ScPreviewShell::InitStartTable(short)
ScPreviewShell::InnerResizePixel(Point const&, Size const&, bool)
ScPreviewShell::Notify(SfxBroadcaster&, SfxHint const&)
ScPreviewShell::OuterResizePixel(Point const&, Size const&)
ScPreviewShell::ReadUserData(rtl::OUString const&, bool)
ScPreviewShell::ReadUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScPreviewShell::RegisterFactory(o3tl::strong_int<unsigned short, SfxInterfaceIdTag>)
ScPreviewShell::RegisterInterface(SfxModule const*)
ScPreviewShell::RemoveAccessibilityObject(SfxListener&)
ScPreviewShell::ScPreviewShell(SfxViewFrame*, SfxViewShell*)
ScPreviewShell::ScrollCommand(CommandEvent const&)
ScPreviewShell::SetPrinter(SfxPrinter*, SfxPrinterChangeFlags)
ScPreviewShell::UpdateNeededScrollBars(bool)
ScPreviewShell::UpdateScrollBars()
ScPreviewShell::WriteUserData(rtl::OUString&, bool)
ScPreviewShell::WriteUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
ScPreviewShell::~ScPreviewShell()
ScPrintOptions::ScPrintOptions()
ScPrintOptions::SetDefaults()
ScPrintOptions::operator==(ScPrintOptions const&) const
ScProgress::CreateInterpretProgress(ScDocument*, bool)
ScProgress::DeleteInterpretProgress()
ScProgress::ScProgress()
ScProgress::ScProgress(SfxObjectShell*, rtl::OUString const&, unsigned long, bool)
ScProgress::~ScProgress()
ScProtectionAttr::Clone(SfxItemPool*) const
ScProtectionAttr::CreateDefault()
ScProtectionAttr::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScProtectionAttr::GetValueText() const
ScProtectionAttr::PutValue(com::sun::star::uno::Any const&, unsigned char)
ScProtectionAttr::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScProtectionAttr::ScProtectionAttr()
ScProtectionAttr::ScProtectionAttr(ScProtectionAttr const&)
ScProtectionAttr::ScProtectionAttr(bool, bool, bool, bool)
ScProtectionAttr::dumpAsXml(_xmlTextWriter*) const
ScProtectionAttr::~ScProtectionAttr()
ScQueryEntry::Clear()
ScQueryEntry::GetSearchTextPtr(utl::SearchParam::SearchType, bool, bool) const
ScQueryEntry::ScQueryEntry()
ScQueryEntry::ScQueryEntry(ScQueryEntry const&)
ScQueryEntry::SetQueryByBackgroundColor(Color)
ScQueryEntry::SetQueryByTextColor(Color)
ScQueryEntry::operator==(ScQueryEntry const&) const
ScQueryEntry::~ScQueryEntry()
ScQueryItem::Clone(SfxItemPool*) const
ScQueryItem::GetAdvancedQuerySource(ScRange&) const
ScQueryItem::ScQueryItem(ScQueryItem const&)
ScQueryItem::ScQueryItem(unsigned short, ScQueryParam const*)
ScQueryItem::ScQueryItem(unsigned short, ScViewData*, ScQueryParam const*)
ScQueryItem::SetAdvancedQuerySource(ScRange const*)
ScQueryItem::operator==(SfxPoolItem const&) const
ScQueryItem::~ScQueryItem()
ScQueryParam::Clear()
ScQueryParam::ClearDestParams()
ScQueryParam::MoveToDest()
ScQueryParam::ScQueryParam()
ScQueryParam::ScQueryParam(ScDBQueryParamInternal const&)
ScQueryParam::ScQueryParam(ScQueryParam const&)
ScQueryParam::operator=(ScQueryParam const&)
ScQueryParam::operator==(ScQueryParam const&) const
ScQueryParam::~ScQueryParam()
ScQueryParamBase::RemoveAllEntriesByField(int)
ScRange::IncColIfNotLessThan(ScDocument const&, short, short)
ScRange::IncEndColSticky(ScDocument const&, short)
ScRange::IncEndRowSticky(ScDocument const&, int)
ScRange::IncRowIfNotLessThan(ScDocument const&, int, int)
ScRange::Intersection(ScRange const&) const
ScRange::MoveSticky(ScDocument const&, short, int, short, ScRange&)
ScRangeData::GetErrCode() const
ScRangeData::GetSymbol(ScAddress const&, formula::FormulaGrammar::Grammar) const
ScRangeData::ScRangeData(ScDocument&, rtl::OUString const&, ScAddress const&)
ScRangeData::ScRangeData(ScDocument&, rtl::OUString const&, ScTokenArray const&, ScAddress const&, ScRangeData::Type)
ScRangeData::ScRangeData(ScDocument&, rtl::OUString const&, rtl::OUString const&, ScAddress const&, ScRangeData::Type, formula::FormulaGrammar::Grammar)
ScRangeData::~ScRangeData()
ScRangeList::AddAndPartialCombine(ScRange const&)
ScRangeList::InsertCol(short, short)
ScRangeList::Intersects(ScRange const&) const
ScRangeList::ScRangeList()
ScRangeList::ScRangeList(ScRange const&)
ScRangeList::ScRangeList(ScRangeList const&)
ScRangeList::ScRangeList(ScRangeList&&)
ScRangeList::operator=(ScRangeList&&)
ScRangeList::swap(ScRangeList&)
ScRangeList::~ScRangeList()
ScRangeManagerTable::CheckForFormulaString()
ScRangeManagerTable::DeleteSelectedEntries()
ScRangeManagerTable::GetCurrentLine(ScRangeNameLine&)
ScRangeManagerTable::GetLine(ScRangeNameLine&, weld::TreeIter const&)
ScRangeManagerTable::Init()
ScRangeManagerTable::IsMultiSelection() const
ScRangeManagerTable::ScRangeManagerTable(std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >, std::map<rtl::OUString, std::unique_ptr<ScRangeName, std::default_delete<ScRangeName> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::unique_ptr<ScRangeName, std::default_delete<ScRangeName> > > > > const&, ScAddress const&)
ScRangeManagerTable::SetEntry(ScRangeNameLine const&)
ScRangeManagerTable::addEntry(ScRangeNameLine const&, bool)
ScRangeManagerTable::findRangeData(ScRangeNameLine const&)
ScRangeName::ScRangeName(ScRangeName const&)
ScRangeName::begin()
ScRangeName::end()
ScRangePairList::Clone() const
ScRangePairList::CreateNameSortedArray(ScDocument&) const
ScRangePairList::DeleteOnTab(short)
ScRangePairList::Find(ScAddress const&)
ScRangePairList::Find(ScRange const&)
ScRangePairList::Join(ScRangePair const&, bool)
ScRangePairList::Remove(ScRangePair const&)
ScRangePairList::Remove(unsigned long)
ScRangePairList::UpdateReference(UpdateRefMode, ScDocument const*, ScRange const&, short, int, short)
ScRangePairList::operator[](unsigned long) const
ScRangePairList::~ScRangePairList()
ScRangeStringConverter::AppendTableName(rtl::OUStringBuffer&, rtl::OUString const&)
ScRangeStringConverter::AssignString(rtl::OUString&, rtl::OUString const&, bool, char16_t)
ScRangeStringConverter::GetAddressFromString(ScAddress&, rtl::OUString const&, ScDocument const&, formula::FormulaGrammar::AddressConvention, int&, char16_t, char16_t)
ScRangeStringConverter::GetAreaFromString(ScArea&, rtl::OUString const&, ScDocument const&, formula::FormulaGrammar::AddressConvention, int&, char16_t)
ScRangeStringConverter::GetRangeDataFromString(rtl::OUString const&, short, ScDocument const&, formula::FormulaGrammar::AddressConvention)
ScRangeStringConverter::GetRangeFromString(ScRange&, rtl::OUString const&, ScDocument const&, formula::FormulaGrammar::AddressConvention, int&, char16_t, char16_t)
ScRangeStringConverter::GetRangeFromString(com::sun::star::table::CellRangeAddress&, rtl::OUString const&, ScDocument const&, formula::FormulaGrammar::AddressConvention, int&, char16_t)
ScRangeStringConverter::GetStringFromAddress(rtl::OUString&, ScAddress const&, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t, bool, ScRefFlags)
ScRangeStringConverter::GetStringFromAddress(rtl::OUString&, com::sun::star::table::CellAddress const&, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t, bool)
ScRangeStringConverter::GetStringFromArea(rtl::OUString&, ScArea const&, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t, bool, ScRefFlags)
ScRangeStringConverter::GetStringFromRange(rtl::OUString&, ScRange const&, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t, bool, ScRefFlags)
ScRangeStringConverter::GetStringFromRange(rtl::OUString&, com::sun::star::table::CellRangeAddress const&, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t, bool, ScRefFlags)
ScRangeStringConverter::GetStringFromRangeList(rtl::OUString&, ScRangeList const*, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t)
ScRangeStringConverter::GetStringFromRangeList(rtl::OUString&, com::sun::star::uno::Sequence<com::sun::star::table::CellRangeAddress> const&, ScDocument const*, formula::FormulaGrammar::AddressConvention, char16_t)
ScRangeStringConverter::GetStringFromXMLRangeString(rtl::OUString&, rtl::OUString const&, ScDocument const&)
ScRangeStringConverter::GetTokenByOffset(rtl::OUString&, rtl::OUString const&, int&, char16_t, char16_t)
ScRangeStringConverter::GetTokenCount(rtl::OUString const&, char16_t)
ScRangeStringConverter::IndexOf(rtl::OUString const&, char16_t, int, char16_t)
ScRangeStringConverter::IndexOfDifferent(rtl::OUString const&, char16_t, int)
ScRangeUtil::CutPosString(rtl::OUString const&, rtl::OUString&)
ScRangeUtil::IsAbsTabArea(rtl::OUString const&, ScDocument const*, std::unique_ptr<ScArea [], std::default_delete<ScArea []> >*, unsigned short*, bool, ScAddress::Details const&)
ScRangeUtil::MakeArea(rtl::OUString const&, ScArea&, ScDocument const&, short, ScAddress::Details const&)
ScRangeUtil::MakeRangeFromName(rtl::OUString const&, ScDocument const&, short, ScRange&, RutlNameScope, ScAddress::Details const&, bool)
ScRefCellValue::ScRefCellValue()
ScRefCellValue::ScRefCellValue(EditTextObject const*)
ScRefCellValue::ScRefCellValue(ScDocument&, ScAddress const&)
ScRefCellValue::ScRefCellValue(ScDocument&, ScAddress const&, sc::ColumnBlockPosition&)
ScRefCellValue::ScRefCellValue(ScFormulaCell*)
ScRefCellValue::ScRefCellValue(double)
ScRefCellValue::ScRefCellValue(svl::SharedString const*)
ScRefCellValue::assign(ScDocument&, ScAddress const&, sc::ColumnBlockPosition&)
ScRefCellValue::clear()
ScRefCellValue::commit(ScDocument&, ScAddress const&) const
ScRefCellValue::equalsWithoutFormat(ScRefCellValue const&) const
ScRefCellValue::getRawString(ScDocument const&) const
ScRefCellValue::getRawValue() const
ScRefCellValue::getValue()
ScRefCellValue::hasEmptyValue()
ScRefCellValue::hasError() const
ScRefCellValue::hasString() const
ScRefTokenHelper::intersects(ScDocument const*, std::vector<boost::intrusive_ptr<formula::FormulaToken>, std::allocator<boost::intrusive_ptr<formula::FormulaToken> > > const&, boost::intrusive_ptr<formula::FormulaToken> const&, ScAddress const&)
ScRefTokenHelper::isExternalRef(boost::intrusive_ptr<formula::FormulaToken> const&)
ScRefUndoData::DeleteUnchanged(ScDocument const*)
ScRefUndoData::DoUndo(ScDocument*, bool)
ScRefUndoData::ScRefUndoData(ScDocument const*)
ScRefUndoData::~ScRefUndoData()
ScRefreshTimer::Invoke()
ScRefreshTimerProtector::ScRefreshTimerProtector(std::unique_ptr<ScRefreshTimerControl, std::default_delete<ScRefreshTimerControl> > const&)
ScRefreshTimerProtector::~ScRefreshTimerProtector()
ScRotateValueItem::Clone(SfxItemPool*) const
ScRotateValueItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScRotateValueItem::ScRotateValueItem(o3tl::strong_int<int, FractionTag<100> >)
ScSetStringParam::ScSetStringParam()
ScSetStringParam::setNumericInput()
ScSheetDPData::CalcResults(ScDPTableData::CalcInfo&, bool)
ScSheetDPData::CreateCacheTable()
ScSheetDPData::DisposeData()
ScSheetDPData::FilterCacheTable(std::vector<ScDPFilteredCache::Criterion, std::allocator<ScDPFilteredCache::Criterion> >&&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&&)
ScSheetDPData::GetCacheTable() const
ScSheetDPData::GetColumnCount()
ScSheetDPData::GetDrillDownData(std::vector<ScDPFilteredCache::Criterion, std::allocator<ScDPFilteredCache::Criterion> >&&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::uno::Any> >&)
ScSheetDPData::GetNumberFormat(int)
ScSheetDPData::IsDateDimension(int)
ScSheetDPData::IsRepeatIfEmpty()
ScSheetDPData::ReloadCacheTable()
ScSheetDPData::ScSheetDPData(ScDocument const*, ScSheetSourceDesc const&, ScDPCache const&)
ScSheetDPData::SetEmptyFlags(bool, bool)
ScSheetDPData::getDimensionName(int)
ScSheetDPData::getIsDataLayoutDimension(int)
ScSheetDPData::~ScSheetDPData()
ScSheetSourceDesc::ScSheetSourceDesc(ScDocument*)
ScShrinkToFitCell::Clone(SfxItemPool*) const
ScShrinkToFitCell::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScShrinkToFitCell::ScShrinkToFitCell(bool)
ScSimpleUndo::BeginRedo()
ScSimpleUndo::BeginUndo()
ScSimpleUndo::BroadcastChanges(ScRange const&)
ScSimpleUndo::BroadcastChanges(std::map<short, std::unique_ptr<sc::ColumnSpanSet, std::default_delete<sc::ColumnSpanSet> >, std::less<short>, std::allocator<std::pair<short const, std::unique_ptr<sc::ColumnSpanSet, std::default_delete<sc::ColumnSpanSet> > > > > const&)
ScSimpleUndo::EndRedo()
ScSimpleUndo::EndUndo()
ScSimpleUndo::GetViewShellId() const
ScSimpleUndo::Merge(SfxUndoAction*)
ScSimpleUndo::ScSimpleUndo(ScDocShell*)
ScSimpleUndo::SetViewMarkData(ScMarkData const&)
ScSimpleUndo::ShowTable(ScRange const&)
ScSimpleUndo::ShowTable(short)
ScSingleRefData::ColValid(ScDocument const&) const
ScSingleRefData::IncCol(short)
ScSingleRefData::IncRow(int)
ScSingleRefData::IncTab(short)
ScSingleRefData::InitAddress(short, int, short)
ScSingleRefData::InitAddressRel(ScDocument const&, ScAddress const&, ScAddress const&)
ScSingleRefData::InitFromRefAddress(ScDocument const&, ScRefAddress const&, ScAddress const&)
ScSingleRefData::PutInOrder(ScSingleRefData&, ScSingleRefData&, ScAddress const&)
ScSingleRefData::RowValid(ScDocument const&) const
ScSingleRefData::TabValid() const
ScSingleRefData::Valid(ScDocument const&) const
ScSingleRefData::ValidExternal(ScDocument const&) const
ScSingleRefData::operator!=(ScSingleRefData const&) const
ScSingleRefData::operator==(ScSingleRefData const&) const
ScSingleRefData::toAbs(ScSheetLimits const&, ScAddress const&) const
ScSortItem::Clone(SfxItemPool*) const
ScSortItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScSortItem::ScSortItem(unsigned short, ScSortParam const*)
ScSortItem::ScSortItem(unsigned short, ScViewData*, ScSortParam const*)
ScSortItem::operator==(SfxPoolItem const&) const
ScSortParam::Clear()
ScSortParam::MoveToDest()
ScSortParam::ScSortParam()
ScSortParam::ScSortParam(ScQueryParam const&, short)
ScSortParam::ScSortParam(ScSortParam const&)
ScSortParam::ScSortParam(ScSubTotalParam const&, ScSortParam const&)
ScSortParam::operator==(ScSortParam const&) const
ScSortParam::~ScSortParam()
ScStringUtil::isMultiline(rtl::OUString const&)
ScStyleSheetPool::CopyStdStylesFrom(ScStyleSheetPool*)
ScStyleSheetPool::CopyStyleFrom(ScStyleSheetPool*, rtl::OUString const&, SfxStyleFamily)
ScStyleSheetPool::Create(SfxStyleSheetBase const&)
ScStyleSheetPool::Create(rtl::OUString const&, SfxStyleFamily, SfxStyleSearchBits)
ScStyleSheetPool::Remove(SfxStyleSheetBase*)
ScStyleSheetPool::ScStyleSheetPool(SfxItemPool const&, ScDocument*)
ScStyleSheetPool::SetDocument(ScDocument*)
ScStyleSheetPool::setAllParaStandard()
ScStyleSheetPool::~ScStyleSheetPool()
ScSubTotalItem::Clone(SfxItemPool*) const
ScSubTotalItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScSubTotalItem::ScSubTotalItem(unsigned short, ScViewData*, ScSubTotalParam const*)
ScSubTotalItem::operator==(SfxPoolItem const&) const
ScSubTotalParam::Clear()
ScSubTotalParam::ScSubTotalParam()
ScSubTotalParam::ScSubTotalParam(ScSubTotalParam const&)
ScSubTotalParam::operator==(ScSubTotalParam const&) const
ScTabEditEngine::Init(ScPatternAttr const&)
ScTabEditEngine::ScTabEditEngine(ScDocument*)
ScTabEditEngine::ScTabEditEngine(ScPatternAttr const&, SfxItemPool*, ScDocument*, SfxItemPool*)
ScTabOpParam::ScTabOpParam()
ScTabOpParam::ScTabOpParam(ScRefAddress const&, ScRefAddress const&, ScRefAddress const&, ScRefAddress const&, ScTabOpParam::Mode)
ScTabOpParam::ScTabOpParam(ScTabOpParam const&)
ScTabOpParam::operator=(ScTabOpParam const&)
ScTabOpParam::operator==(ScTabOpParam const&) const
ScTabView::SetTabNo(short, bool, bool, bool)
ScTabViewShell::Activate(bool)
ScTabViewShell::ActivateObject(SdrOle2Obj*, int)
ScTabViewShell::AddAccessibilityObject(SfxListener&)
ScTabViewShell::BroadcastAccessibility(SfxHint const&)
ScTabViewShell::ClearFormEditData()
ScTabViewShell::ConnectObject(SdrOle2Obj const*)
ScTabViewShell::Construct(TriState)
ScTabViewShell::CreateInstance(SfxViewFrame*, SfxViewShell*)
ScTabViewShell::CreatePrintOptionsPage(weld::Container*, weld::DialogController*, SfxItemSet const&)
ScTabViewShell::CreateRefDialogController(SfxBindings*, SfxChildWindow*, SfxChildWinInfo const*, weld::Window*, unsigned short)
ScTabViewShell::Deactivate(bool)
ScTabViewShell::DeactivateOle()
ScTabViewShell::DoAutoSum(bool&, bool&, OpCode)
ScTabViewShell::DoReadUserData(rtl::OUString const&)
ScTabViewShell::DoReadUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScTabViewShell::DoVerb(int)
ScTabViewShell::EnableEditHyperlink()
ScTabViewShell::ExecChildWin(SfxRequest const&)
ScTabViewShell::ExecDrawIns(SfxRequest&)
ScTabViewShell::ExecDrawOpt(SfxRequest const&)
ScTabViewShell::ExecGallery(SfxRequest const&)
ScTabViewShell::ExecImageMap(SfxRequest&)
ScTabViewShell::ExecSearch(SfxRequest&)
ScTabViewShell::ExecuteCellFormatDlg(SfxRequest&, rtl::OString const&)
ScTabViewShell::ExecuteInputDirect()
ScTabViewShell::ExecuteObject(SfxRequest const&)
ScTabViewShell::ExecuteRetypePassDlg(ScPasswordHash)
ScTabViewShell::ExecuteSave(SfxRequest&)
ScTabViewShell::ExecuteTable(SfxRequest&)
ScTabViewShell::ExecuteUndo(SfxRequest&)
ScTabViewShell::FillFieldData(ScHeaderFieldData&)
ScTabViewShell::GetActiveViewShell()
ScTabViewShell::GetDialogParent()
ScTabViewShell::GetDrawInsState(SfxItemSet&)
ScTabViewShell::GetDrawOptState(SfxItemSet&)
ScTabViewShell::GetDrawState(SfxItemSet&)
ScTabViewShell::GetDrawView() const
ScTabViewShell::GetFormula(ScAddress const&)
ScTabViewShell::GetFunction(rtl::OUString&, FormulaError)
ScTabViewShell::GetImageMapState(SfxItemSet&)
ScTabViewShell::GetInterface() const
ScTabViewShell::GetMySubShell() const
ScTabViewShell::GetNavigatorSettings()
ScTabViewShell::GetObjectState(SfxItemSet&)
ScTabViewShell::GetPrinter(bool)
ScTabViewShell::GetSaveState(SfxItemSet&)
ScTabViewShell::GetSelectionText(bool)
ScTabViewShell::GetStateTable(SfxItemSet&)
ScTabViewShell::GetStaticInterface()
ScTabViewShell::GetUndoState(SfxItemSet&)
ScTabViewShell::HasAccessibilityObjects() const
ScTabViewShell::HasPrintOptionsPage() const
ScTabViewShell::HasSelection(bool) const
ScTabViewShell::InitFactory()
ScTabViewShell::InitFormEditData()
ScTabViewShell::InitInterface_Impl()
ScTabViewShell::InnerResizePixel(Point const&, Size const&, bool)
ScTabViewShell::InsertURL(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, unsigned short)
ScTabViewShell::InsertURLButton(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, Point const*)
ScTabViewShell::InsertURLField(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
ScTabViewShell::IsAuditShell() const
ScTabViewShell::IsDrawTextShell() const
ScTabViewShell::IsQRCodeSelected()
ScTabViewShell::IsRefInputMode() const
ScTabViewShell::IsSignatureLineSelected()
ScTabViewShell::IsSignatureLineSigned()
ScTabViewShell::KeyInput(KeyEvent const&)
ScTabViewShell::MakeNumberInfoItem(ScDocument&, ScViewData const&)
ScTabViewShell::Move()
ScTabViewShell::Notify(SfxBroadcaster&, SfxHint const&)
ScTabViewShell::NotifyCursor(SfxViewShell*) const
ScTabViewShell::OuterResizePixel(Point const&, Size const&)
ScTabViewShell::PrepareClose(bool)
ScTabViewShell::QueryObjAreaPixel(tools::Rectangle&) const
ScTabViewShell::ReadUserData(rtl::OUString const&, bool)
ScTabViewShell::ReadUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScTabViewShell::RegisterFactory(o3tl::strong_int<unsigned short, SfxInterfaceIdTag>)
ScTabViewShell::RegisterInterface(SfxModule const*)
ScTabViewShell::RemoveAccessibilityObject(SfxListener&)
ScTabViewShell::ScTabViewShell(SfxViewFrame*, SfxViewShell*)
ScTabViewShell::SetActive()
ScTabViewShell::SetAuditShell(bool)
ScTabViewShell::SetChartShell(bool)
ScTabViewShell::SetCurRefDlgId(unsigned short)
ScTabViewShell::SetCurSubShell(ObjectSelectionType, bool)
ScTabViewShell::SetDefaultFrameLine(editeng::SvxBorderLine const*)
ScTabViewShell::SetDialogDPObject(std::unique_ptr<ScDPObject, std::default_delete<ScDPObject> >)
ScTabViewShell::SetDrawFormShell(bool)
ScTabViewShell::SetDrawShellOrSub()
ScTabViewShell::SetDrawTextShell(bool)
ScTabViewShell::SetDrawTextUndo(SfxUndoManager*)
ScTabViewShell::SetEditShell(EditView*, bool)
ScTabViewShell::SetFormShellAtTop(bool)
ScTabViewShell::SetGraphicShell(bool)
ScTabViewShell::SetMediaShell(bool)
ScTabViewShell::SetOleObjectShell(bool)
ScTabViewShell::SetPivotShell(bool)
ScTabViewShell::SetPrinter(SfxPrinter*, SfxPrinterChangeFlags)
ScTabViewShell::SetZoomFactor(Fraction const&, Fraction const&)
ScTabViewShell::SfxKeyInput(KeyEvent const&)
ScTabViewShell::ShouldDisableEditHyperlink() const
ScTabViewShell::ShowCursor(bool)
ScTabViewShell::StartSimpleRefDialog(rtl::OUString const&, rtl::OUString const&, bool, bool, bool)
ScTabViewShell::StopEditShell()
ScTabViewShell::StopSimpleRefDialog()
ScTabViewShell::SwitchBetweenRefDialogs(SfxModelessDialogController*)
ScTabViewShell::TabKeyInput(KeyEvent const&)
ScTabViewShell::UIDeactivated(SfxInPlaceClient*)
ScTabViewShell::UpdateDrawShell()
ScTabViewShell::UpdateInputHandler(bool, bool)
ScTabViewShell::UpdateInputHandlerCellAdjust(SvxCellHorJustify)
ScTabViewShell::UpdateNumberFormatter(SvxNumberInfoItem const&)
ScTabViewShell::UpdateOleZoom()
ScTabViewShell::UseSubTotal(ScRangeList*)
ScTabViewShell::WindowChanged()
ScTabViewShell::WriteUserData(rtl::OUString&, bool)
ScTabViewShell::WriteUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
ScTabViewShell::afterCallbackRegistered()
ScTabViewShell::getLOKVisibleArea() const
ScTabViewShell::getPart() const
ScTabViewShell::getSelectedXShapes()
ScTabViewShell::isAnyEditViewInRange(SfxViewShell const*, bool, int, int)
ScTabViewShell::notifyAllViewsHeaderInvalidation(SfxViewShell const*, HeaderType, short)
ScTabViewShell::notifyAllViewsSheetGeomInvalidation(SfxViewShell const*, bool, bool, bool, bool, bool, bool, short)
ScTabViewShell::~ScTabViewShell()
ScTableProtection::ScTableProtection()
ScTableProtection::ScTableProtection(ScTableProtection const&)
ScTableProtection::hasPasswordHash(ScPasswordHash, ScPasswordHash) const
ScTableProtection::isPasswordEmpty() const
ScTableProtection::isProtectedWithPass() const
ScTableProtection::isSelectionEditable(ScRangeList const&) const
ScTableProtection::setPassword(rtl::OUString const&)
ScTableProtection::updateReference(UpdateRefMode, ScDocument const&, ScRange const&, short, int, short)
ScTableProtection::~ScTableProtection()
ScTableSheetObj::GetItemPropertyMap()
ScTableSheetObj::GetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
ScTableSheetObj::GetTab_Impl() const
ScTableSheetObj::InitInsertSheet(ScDocShell*, short)
ScTableSheetObj::PrintAreaUndo_Impl(std::unique_ptr<ScPrintRangeSaver, std::default_delete<ScPrintRangeSaver> >)
ScTableSheetObj::ScTableSheetObj(ScDocShell*, short)
ScTableSheetObj::SetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
ScTableSheetObj::acquire()
ScTableSheetObj::addRanges(com::sun::star::uno::Sequence<com::sun::star::table::CellRangeAddress> const&)
ScTableSheetObj::apply()
ScTableSheetObj::autoOutline(com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::clearArrows()
ScTableSheetObj::clearOutline()
ScTableSheetObj::copyRange(com::sun::star::table::CellAddress const&, com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::createCursor()
ScTableSheetObj::createCursorByRange(com::sun::star::uno::Reference<com::sun::star::sheet::XSheetCellRange> const&)
ScTableSheetObj::getAnnotations()
ScTableSheetObj::getCellByPosition(int, int)
ScTableSheetObj::getCellRangeByName(rtl::OUString const&)
ScTableSheetObj::getCellRangeByPosition(int, int, int, int)
ScTableSheetObj::getCharts()
ScTableSheetObj::getColumnPageBreaks()
ScTableSheetObj::getDataPilotTables()
ScTableSheetObj::getDrawPage()
ScTableSheetObj::getEvents()
ScTableSheetObj::getImplementationId()
ScTableSheetObj::getImplementationName()
ScTableSheetObj::getIsScenario()
ScTableSheetObj::getLinkMode()
ScTableSheetObj::getLinkSheetName()
ScTableSheetObj::getLinkUrl()
ScTableSheetObj::getName()
ScTableSheetObj::getPivotCharts()
ScTableSheetObj::getPrintAreas()
ScTableSheetObj::getPrintTitleColumns()
ScTableSheetObj::getPrintTitleRows()
ScTableSheetObj::getPropertySetInfo()
ScTableSheetObj::getRanges()
ScTableSheetObj::getRowPageBreaks()
ScTableSheetObj::getScenarioComment()
ScTableSheetObj::getScenarios()
ScTableSheetObj::getSomething(com::sun::star::uno::Sequence<signed char> const&)
ScTableSheetObj::getSpreadsheet()
ScTableSheetObj::getSupportedServiceNames()
ScTableSheetObj::getTitleColumns()
ScTableSheetObj::getTitleRows()
ScTableSheetObj::getTypes()
ScTableSheetObj::getUnoTunnelId()
ScTableSheetObj::group(com::sun::star::table::CellRangeAddress const&, com::sun::star::table::TableOrientation)
ScTableSheetObj::hideDependents(com::sun::star::table::CellAddress const&)
ScTableSheetObj::hideDetail(com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::hidePrecedents(com::sun::star::table::CellAddress const&)
ScTableSheetObj::insertCells(com::sun::star::table::CellRangeAddress const&, com::sun::star::sheet::CellInsertMode)
ScTableSheetObj::isProtected()
ScTableSheetObj::link(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::sheet::SheetLinkMode)
ScTableSheetObj::moveRange(com::sun::star::table::CellAddress const&, com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::protect(rtl::OUString const&)
ScTableSheetObj::queryInterface(com::sun::star::uno::Type const&)
ScTableSheetObj::release()
ScTableSheetObj::removeAllManualPageBreaks()
ScTableSheetObj::removeRange(com::sun::star::table::CellRangeAddress const&, com::sun::star::sheet::CellDeleteMode)
ScTableSheetObj::setExternalName(rtl::OUString const&, rtl::OUString const&)
ScTableSheetObj::setLinkMode(com::sun::star::sheet::SheetLinkMode)
ScTableSheetObj::setLinkSheetName(rtl::OUString const&)
ScTableSheetObj::setLinkUrl(rtl::OUString const&)
ScTableSheetObj::setName(rtl::OUString const&)
ScTableSheetObj::setPrintAreas(com::sun::star::uno::Sequence<com::sun::star::table::CellRangeAddress> const&)
ScTableSheetObj::setPrintTitleColumns(unsigned char)
ScTableSheetObj::setPrintTitleRows(unsigned char)
ScTableSheetObj::setScenarioComment(rtl::OUString const&)
ScTableSheetObj::setTitleColumns(com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::setTitleRows(com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::showDependents(com::sun::star::table::CellAddress const&)
ScTableSheetObj::showDetail(com::sun::star::table::CellRangeAddress const&)
ScTableSheetObj::showErrors(com::sun::star::table::CellAddress const&)
ScTableSheetObj::showInvalid()
ScTableSheetObj::showLevel(short, com::sun::star::table::TableOrientation)
ScTableSheetObj::showPrecedents(com::sun::star::table::CellAddress const&)
ScTableSheetObj::supportsService(rtl::OUString const&)
ScTableSheetObj::ungroup(com::sun::star::table::CellRangeAddress const&, com::sun::star::table::TableOrientation)
ScTableSheetObj::unprotect(rtl::OUString const&)
ScTableSheetObj::~ScTableSheetObj()
ScTokenArray::AddDBRange(unsigned short)
ScTokenArray::AddFormulaToken(com::sun::star::sheet::FormulaToken const&, svl::SharedStringPool&, formula::ExternalReferenceHelper*)
ScTokenArray::AddMatrixSingleReference(ScSingleRefData const&)
ScTokenArray::AddRawToken(ScRawToken const&)
ScTokenArray::AdjustAbsoluteRefs(ScDocument const&, ScAddress const&, ScAddress const&, bool)
ScTokenArray::AdjustReferenceInMovedName(sc::RefUpdateContext const&, ScAddress const&)
ScTokenArray::AdjustReferenceInName(sc::RefUpdateContext const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnCopy(ScAddress const&)
ScTokenArray::AdjustReferenceOnDeletedTab(sc::RefUpdateDeleteTabContext const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnInsertedTab(sc::RefUpdateInsertTabContext const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnMove(sc::RefUpdateContext const&, ScAddress const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnMovedOrigin(ScAddress const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnMovedOriginIfOtherSheet(ScAddress const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnMovedTab(sc::RefUpdateMoveTabContext const&, ScAddress const&)
ScTokenArray::AdjustReferenceOnShift(sc::RefUpdateContext const&, ScAddress const&)
ScTokenArray::AdjustSheetLocalNameReferences(short, short)
ScTokenArray::AssignXMLString(rtl::OUString const&, rtl::OUString const&)
ScTokenArray::CheckExpandReferenceBounds(sc::RefUpdateContext const&, ScAddress const&, int, std::vector<int, std::allocator<int> >&) const
ScTokenArray::CheckForThreading(formula::FormulaToken const&)
ScTokenArray::CheckRelativeReferenceBounds(ScAddress const&, int, ScRange const&, std::vector<int, std::allocator<int> >&) const
ScTokenArray::CheckRelativeReferenceBounds(sc::RefUpdateContext const&, ScAddress const&, int, std::vector<int, std::allocator<int> >&) const
ScTokenArray::CheckToken(formula::FormulaToken const&)
ScTokenArray::ClearTabDeleted(ScAddress const&, short, short)
ScTokenArray::EqualTokens(ScTokenArray const*) const
ScTokenArray::GetAdjacentExtendOfOuterFuncRefs(int&, ScAddress const&, ScDirection)
ScTokenArray::GetWeight() const
ScTokenArray::ImplGetReference(ScRange&, ScAddress const&, bool) const
ScTokenArray::IsFormulaVectorDisabled() const
ScTokenArray::IsInvariant() const
ScTokenArray::MergeArray()
ScTokenArray::MergeRangeReference(ScAddress const&)
ScTokenArray::MoveReferenceColReorder(ScAddress const&, short, int, int, sc::ColRowReorderMapType const&)
ScTokenArray::MoveReferenceRowReorder(ScAddress const&, short, short, short, sc::ColRowReorderMapType const&)
ScTokenArray::ReadjustAbsolute3DReferences(ScDocument const&, ScDocument&, ScAddress const&, bool)
ScTokenArray::ReferencesSheet(short, short) const
ScTokenArray::ResetVectorState()
ScTokenArray::ScTokenArray(ScDocument const&)
ScTokenArray::ScTokenArray(ScSheetLimits&)
ScTokenArray::operator=(ScTokenArray const&)
ScTokenArray::operator=(ScTokenArray&&)
ScTokenArray::~ScTokenArray()
ScTpCalcItem::Clone(SfxItemPool*) const
ScTpCalcItem::ScTpCalcItem(unsigned short, ScDocOptions const&)
ScTpCalcItem::operator==(SfxPoolItem const&) const
ScTpCalcItem::~ScTpCalcItem()
ScTpDefaultsItem::Clone(SfxItemPool*) const
ScTpDefaultsItem::ScTpDefaultsItem(ScDefaultsOptions const&)
ScTpDefaultsItem::operator==(SfxPoolItem const&) const
ScTpDefaultsItem::~ScTpDefaultsItem()
ScTpFormulaItem::Clone(SfxItemPool*) const
ScTpFormulaItem::ScTpFormulaItem(ScFormulaOptions const&)
ScTpFormulaItem::operator==(SfxPoolItem const&) const
ScTpFormulaItem::~ScTpFormulaItem()
ScTpPrintItem::Clone(SfxItemPool*) const
ScTpPrintItem::ScTpPrintItem(ScPrintOptions const&)
ScTpPrintItem::operator==(SfxPoolItem const&) const
ScTpPrintItem::~ScTpPrintItem()
ScTpViewItem::Clone(SfxItemPool*) const
ScTpViewItem::ScTpViewItem(ScViewOptions const&)
ScTpViewItem::operator==(SfxPoolItem const&) const
ScTpViewItem::~ScTpViewItem()
ScUndoCut::CanRepeat(SfxRepeatTarget&) const
ScUndoCut::DoChange(bool)
ScUndoCut::GetComment() const
ScUndoCut::Redo()
ScUndoCut::Repeat(SfxRepeatTarget&)
ScUndoCut::ScUndoCut(ScDocShell*, ScRange const&, ScAddress const&, ScMarkData const&, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >)
ScUndoCut::SetChangeTrack()
ScUndoCut::Undo()
ScUndoCut::~ScUndoCut()
ScUndoPaste::CanRepeat(SfxRepeatTarget&) const
ScUndoPaste::DoChange(bool)
ScUndoPaste::GetComment() const
ScUndoPaste::Redo()
ScUndoPaste::Repeat(SfxRepeatTarget&)
ScUndoPaste::ScUndoPaste(ScDocShell*, ScRangeList const&, ScMarkData const&, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >, InsertDeleteFlags, std::unique_ptr<ScRefUndoData, std::default_delete<ScRefUndoData> >, bool, ScUndoPasteOptions const*)
ScUndoPaste::SetChangeTrack()
ScUndoPaste::Undo()
ScUndoPaste::~ScUndoPaste()
ScUnoAddInCollection::Clear()
ScUnoAddInCollection::FillFunctionDesc(long, ScFuncDesc&)
ScUnoAddInCollection::FillFunctionDescFromData(ScUnoAddInFuncData const&, ScFuncDesc&)
ScUnoAddInCollection::FindFunction(rtl::OUString const&, bool)
ScUnoAddInCollection::GetFuncCount()
ScUnoAddInCollection::GetFuncData(long)
ScUnoAddInCollection::GetFuncData(rtl::OUString const&, bool)
ScUnoAddInCollection::Initialize()
ScUnoAddInCollection::LoadComponent(ScUnoAddInFuncData const&)
ScUnoAddInCollection::LocalizeString(rtl::OUString&)
ScUnoAddInCollection::ReadConfiguration()
ScUnoAddInCollection::ReadFromAddIn(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
ScUnoAddInCollection::ScUnoAddInCollection()
ScUnoAddInCollection::UpdateFromAddIn(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScUnoAddInCollection::~ScUnoAddInCollection()
ScUnoHelpFunctions::GetBoolProperty(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, bool)
ScUnoHelpFunctions::GetEnumFromAny(com::sun::star::uno::Any const&)
ScUnoHelpFunctions::GetEnumPropertyImpl(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, int)
ScUnoHelpFunctions::GetInt16FromAny(com::sun::star::uno::Any const&)
ScUnoHelpFunctions::GetInt32FromAny(com::sun::star::uno::Any const&)
ScUnoHelpFunctions::GetLongProperty(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
ScUnoHelpFunctions::GetShortProperty(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, short)
ScUnoHelpFunctions::GetStringProperty(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, rtl::OUString const&)
ScUnoHelpFunctions::SetOptionalPropertyValue(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, char const*, com::sun::star::uno::Any const&)
ScUsedAreaIterator::ScUsedAreaIterator(ScDocument&, short, short, int, short, int)
ScUsedAreaIterator::~ScUsedAreaIterator()
ScUserList::HasEntry(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ScUserList::ScUserList()
ScUserList::ScUserList(ScUserList const&)
ScUserList::operator==(ScUserList const&) const
ScUserList::operator[](unsigned long) const
ScUserListData::Compare(rtl::OUString const&, rtl::OUString const&) const
ScUserListData::ICompare(rtl::OUString const&, rtl::OUString const&) const
ScUserListData::ScUserListData(ScUserListData const&)
ScUserListData::ScUserListData(rtl::OUString const&)
ScUserListData::~ScUserListData()
ScUserListItem::Clone(SfxItemPool*) const
ScUserListItem::ScUserListItem(ScUserListItem const&)
ScUserListItem::ScUserListItem(unsigned short)
ScUserListItem::operator==(SfxPoolItem const&) const
ScUserListItem::~ScUserListItem()
ScValidationData::DoCalcError(ScFormulaCell*) const
ScValidationData::DoError(weld::Window*, rtl::OUString const&, ScAddress const&) const
ScValidationData::DoMacro(ScAddress const&, rtl::OUString const&, ScFormulaCell*, weld::Window*) const
ScValidationData::DoScript(ScAddress const&, rtl::OUString const&, ScFormulaCell*, weld::Window*) const
ScValidationData::GetSelectionFromFormula(std::vector<ScTypedStrData, std::allocator<ScTypedStrData> >*, ScRefCellValue&, ScAddress const&, ScTokenArray const&, int&) const
ScValidationData::HasSelectionList() const
ScValidationData::IsDataValid(rtl::OUString const&, ScPatternAttr const&, ScAddress const&) const
ScValidationData::IsDataValidCustom(rtl::OUString const&, ScPatternAttr const&, ScAddress const&, ScValidationData::CustomValidationPrivateAccess const&) const
ScValidationData::IsDataValidTextLen(rtl::OUString const&, ScAddress const&, ScValidationDataIsNumeric*) const
ScValidationData::IsEmpty() const
ScValidationData::IsEqualToTokenArray(ScRefCellValue&, ScAddress const&, ScTokenArray const&) const
ScValidationData::IsListValid(ScRefCellValue&, ScAddress const&) const
ScValidationData::ScValidationData(ScDocument&, ScValidationData const&)
ScValidationData::ScValidationData(ScValidationData const&)
ScValidationData::ScValidationData(ScValidationMode, ScConditionMode, ScTokenArray const*, ScTokenArray const*, ScDocument&, ScAddress const&)
ScValidationData::ScValidationData(ScValidationMode, ScConditionMode, rtl::OUString const&, rtl::OUString const&, ScDocument&, ScAddress const&, rtl::OUString const&, rtl::OUString const&, formula::FormulaGrammar::Grammar, formula::FormulaGrammar::Grammar)
ScValidationData::~ScValidationData()
ScVbaPropValue::ScVbaPropValue(PropListener*)
ScVbaPropValue::getValue()
ScVbaPropValue::setValue(com::sun::star::uno::Any const&)
ScVbaShape::addListeners()
ScVbaShape::removeShapeListener()
ScVbaShape::removeShapesListener()
ScVbaShape::~ScVbaShape()
ScVbaShapeRange::Group()
ScVbaShapeRange::IncrementLeft(double)
ScVbaShapeRange::IncrementRotation(double)
ScVbaShapeRange::IncrementTop(double)
ScVbaShapeRange::ScVbaShapeRange(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
ScVbaShapeRange::Select()
ScVbaShapeRange::TextFrame()
ScVbaShapeRange::WrapFormat()
ScVbaShapeRange::ZOrder(int)
ScVbaShapeRange::createCollectionObject(com::sun::star::uno::Any const&)
ScVbaShapeRange::createEnumeration()
ScVbaShapeRange::getElementType()
ScVbaShapeRange::getFill()
ScVbaShapeRange::getHeight()
ScVbaShapeRange::getLeft()
ScVbaShapeRange::getLine()
ScVbaShapeRange::getLockAnchor()
ScVbaShapeRange::getLockAspectRatio()
ScVbaShapeRange::getName()
ScVbaShapeRange::getRelativeHorizontalPosition()
ScVbaShapeRange::getRelativeVerticalPosition()
ScVbaShapeRange::getServiceImplName()
ScVbaShapeRange::getServiceNames()
ScVbaShapeRange::getShapes()
ScVbaShapeRange::getTop()
ScVbaShapeRange::getWidth()
ScVbaShapeRange::setHeight(double)
ScVbaShapeRange::setLeft(double)
ScVbaShapeRange::setLockAnchor(unsigned char)
ScVbaShapeRange::setLockAspectRatio(unsigned char)
ScVbaShapeRange::setName(rtl::OUString const&)
ScVbaShapeRange::setRelativeHorizontalPosition(int)
ScVbaShapeRange::setRelativeVerticalPosition(int)
ScVbaShapeRange::setTop(double)
ScVbaShapeRange::setWidth(double)
ScVbaShapes::AddEllipse(int, int, int, int)
ScVbaShapes::AddLine(int, int, int, int)
ScVbaShapes::AddRectangle(int, int, int, int)
ScVbaShapes::AddShape(int, int, int, int, int)
ScVbaShapes::AddTextbox(int, int, int, int, int)
ScVbaShapes::AddTextboxInWriter(int, int, int, int)
ScVbaShapes::Range(com::sun::star::uno::Any const&)
ScVbaShapes::ScVbaShapes(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
ScVbaShapes::SelectAll()
ScVbaShapes::createCollectionObject(com::sun::star::uno::Any const&)
ScVbaShapes::createEnumeration()
ScVbaShapes::createName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScVbaShapes::createShape(rtl::OUString const&)
ScVbaShapes::getElementType()
ScVbaShapes::getServiceImplName()
ScVbaShapes::getServiceNames()
ScVbaShapes::getShapesByArrayIndices(com::sun::star::uno::Any const&)
ScVbaShapes::initBaseCollection()
ScVbaShapes::setDefaultShapeProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
ScVbaShapes::setShape_NameProperty(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, rtl::OUString const&)
ScVerticalStackCell::Clone(SfxItemPool*) const
ScVerticalStackCell::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScVerticalStackCell::ScVerticalStackCell(bool)
ScViewData::AddPixelsWhile(long&, long, int&, int, double, ScDocument const*, short)
ScViewData::AddPixelsWhileBackward(long&, long, int&, int, double, ScDocument const*, short)
ScViewData::CellsAtX(short, short, ScHSplitPos, unsigned short) const
ScViewData::CellsAtY(int, int, ScVSplitPos, unsigned short) const
ScViewData::CopyTab(short, short)
ScViewData::DeleteTab(short)
ScViewData::DeleteTabs(short, short)
ScViewData::DeriveLOKFreezeAllSheets()
ScViewData::DeriveLOKFreezeIfNeeded(short)
ScViewData::EditGrowX()
ScViewData::EditGrowY(bool)
ScViewData::GetActiveWin() const
ScViewData::GetBindings()
ScViewData::GetCurPos() const
ScViewData::GetCurXForTab(short) const
ScViewData::GetCurYForTab(short) const
ScViewData::GetDialogParent()
ScViewData::GetDocFunc() const
ScViewData::GetEditArea(ScSplitPos, short, int, vcl::Window*, ScPatternAttr const*, bool, bool)
ScViewData::GetEditView(ScSplitPos, EditView*&, short&, int&)
ScViewData::GetFillData(short&, int&, short&, int&)
ScViewData::GetLOKHeightHelper(short)
ScViewData::GetLOKSheetFreezeIndex(bool) const
ScViewData::GetLOKWidthHelper(short)
ScViewData::GetLogicMode()
ScViewData::GetLogicMode(ScSplitPos)
ScViewData::GetMarkData() const
ScViewData::GetMergeSizePixel(short, int, long&, long&) const
ScViewData::GetMergeSizePrintTwips(short, int, long&, long&) const
ScViewData::GetMousePosPixel()
ScViewData::GetMouseQuadrant(Point const&, ScSplitPos, short, int, bool&, bool&)
ScViewData::GetMultiArea(tools::SvRef<ScRangeList>&) const
ScViewData::GetOldCurX() const
ScViewData::GetOldCurY() const
ScViewData::GetPosFromPixel(long, long, ScSplitPos, short&, int&, bool, bool, short)
ScViewData::GetPrintTwipsPos(short, int) const
ScViewData::GetPrintTwipsPosFromTileTwips(Point const&) const
ScViewData::GetScrPos(short, int, ScHSplitPos) const
ScViewData::GetScrPos(short, int, ScVSplitPos) const
ScViewData::GetSimpleArea(ScRange&, ScMarkData&) const
ScViewData::InsertTab(short)
ScViewData::InsertTabs(short, short)
ScViewData::IsMinimized() const
ScViewData::IsMultiMarked() const
ScViewData::IsOle() const
ScViewData::KillEditView()
ScViewData::MoveTab(short, short)
ScViewData::OverrideWithLOKFreeze(ScSplitMode&, ScSplitMode&, short&, int&, long&, long&, short) const
ScViewData::PrevCellsX(ScHSplitPos) const
ScViewData::PrevCellsY(ScVSplitPos) const
ScViewData::ReadExtOptions(ScExtDocOptions const&)
ScViewData::ReadUserData(rtl::OUString const&)
ScViewData::ReadUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
ScViewData::RecalcPixPos()
ScViewData::RefreshZoom()
ScViewData::RemoveLOKFreeze()
ScViewData::ResetEditView()
ScViewData::ResetFillMode()
ScViewData::ResetOldCursor()
ScViewData::ScViewData(ScDocShell&, ScTabViewShell*)
ScViewData::ScViewData(ScDocument&)
ScViewData::ScViewData(ScDocument*, ScDocShell*, ScTabViewShell*)
ScViewData::SelectionFillDOOM(ScRange const&)
ScViewData::SelectionForbidsCellFill()
ScViewData::SelectionForbidsPaste(ScDocument*)
ScViewData::SelectionForbidsPaste(short, int)
ScViewData::SetActivePart(ScSplitPos)
ScViewData::SetCurXForTab(short, short)
ScViewData::SetCurYForTab(short, short)
ScViewData::SetDragMode(short, int, short, int, ScFillMode)
ScViewData::SetEditEngine(ScSplitPos, ScEditEngineDefaulter*, vcl::Window*, short, int)
ScViewData::SetFillMode(short, int, short, int)
ScViewData::SetLOKSheetFreezeIndex(int, bool, short)
ScViewData::SetMaxTiledCol(short)
ScViewData::SetMaxTiledRow(int)
ScViewData::SetOldCursor(short, int)
ScViewData::SetOptions(ScViewOptions const&)
ScViewData::SetPagebreakMode(bool)
ScViewData::SetPosX(ScHSplitPos, short)
ScViewData::SetPosY(ScVSplitPos, int)
ScViewData::SetRefEnd(short, int, short)
ScViewData::SetRefStart(short, int, short)
ScViewData::SetScreen(short, int, short, int)
ScViewData::SetScreen(tools::Rectangle const&)
ScViewData::SetScreenPos(Point const&)
ScViewData::SetShowGrid(bool)
ScViewData::SetTabNo(short)
ScViewData::SetZoom(Fraction const&, Fraction const&, bool)
ScViewData::SetZoomType(SvxZoomType, bool)
ScViewData::SetZoomType(SvxZoomType, std::vector<short, std::allocator<short> >&)
ScViewData::SimpleColMarked()
ScViewData::SimpleRowMarked()
ScViewData::UpdateFixX(short)
ScViewData::UpdateFixY(short)
ScViewData::UpdateInputHandler(bool)
ScViewData::UpdateOutlinerFlags(Outliner&) const
ScViewData::UpdateScreenZoom(Fraction const&, Fraction const&)
ScViewData::VisibleCellsX(ScHSplitPos) const
ScViewData::VisibleCellsY(ScVSplitPos) const
ScViewData::WriteUserData(rtl::OUString&)
ScViewData::WriteUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&) const
ScViewData::describeCellCursorAt(short, int, bool) const
ScViewData::~ScViewData()
ScViewFunc::CopyToClip(ScDocument*, ScRangeList const&, bool, bool, bool, bool)
ScViewFunc::GetSelectionPattern()
ScViewFunc::PasteFromSystem(SotClipboardFormatId, bool)
ScViewObjectModeItem::Clone(SfxItemPool*) const
ScViewObjectModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScViewObjectModeItem::GetValueCount() const
ScViewObjectModeItem::ScViewObjectModeItem(unsigned short)
ScViewObjectModeItem::ScViewObjectModeItem(unsigned short, ScVObjMode)
ScViewObjectModeItem::~ScViewObjectModeItem()
ScViewOptions::CreateGridItem() const
ScViewOptions::ScViewOptions()
ScViewOptions::ScViewOptions(ScViewOptions const&)
ScViewOptions::SetDefaults()
ScViewOptions::operator==(ScViewOptions const&) const
ScViewOptions::~ScViewOptions()
ScViewUtil::ExecuteCharMap(SvxFontItem const&, ScTabViewShell const&)
ScViewUtil::FitToUnfilteredRows(ScRange&, ScDocument const&, unsigned long)
ScViewUtil::GetEffLanguage(ScDocument&, ScAddress const&)
ScViewUtil::GetTransliterationType(unsigned short)
ScViewUtil::HasFiltered(ScRange const&, ScDocument const&)
ScViewUtil::HideDisabledSlot(SfxItemSet&, SfxBindings&, unsigned short)
ScViewUtil::IsActionShown(ScChangeAction const&, ScChangeViewSettings const&, ScDocument&)
ScViewUtil::PutItemScript(SfxItemSet&, SfxItemSet const&, unsigned short, SvtScriptType)
ScViewUtil::SetFullScreen(SfxViewShell const&, bool)
ScViewUtil::UnmarkFiltered(ScMarkData&, ScDocument const&)
SchXMLExportHelper::SchXMLExportHelper(SvXMLExport&, SvXMLAutoStylePoolP&)
SchXMLExportHelper::SetDestinationShellID(rtl::OUString const&)
SchXMLExportHelper::SetSourceShellID(rtl::OUString const&)
SchXMLExportHelper::~SchXMLExportHelper()
SchXMLSeriesHelper::getDataSeriesFromDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
SchXMLSeriesHelper::getDataSeriesIndexMapFromDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
SchXMLSeriesHelper::isCandleStickSeries(com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
Scheduler::CallbackTaskScheduling()
Scheduler::GetDeterministicMode()
Scheduler::ImplDeInitScheduler()
Scheduler::ImplStartTimer(unsigned long, bool, unsigned long)
Scheduler::Lock()
Scheduler::SetDeterministicMode(bool)
Scheduler::Unlock()
ScreenSaverInhibitor::inhibitDPMS(bool, _XDisplay*)
ScreenSaverInhibitor::inhibitFDO(bool, char const*, char const*)
ScreenSaverInhibitor::inhibitFDOPM(bool, char const*, char const*)
ScreenSaverInhibitor::inhibitGSM(bool, char const*, char const*, unsigned int)
ScreenSaverInhibitor::inhibitMSM(bool, char const*, char const*, unsigned int)
ScreenSaverInhibitor::inhibitXAutoLock(bool, _XDisplay*)
ScreenSaverInhibitor::inhibitXScreenSaver(bool, _XDisplay*)
ScriptTypeDetector::beginOfCTLScriptType(rtl::OUString const&, int)
ScriptTypeDetector::beginOfScriptDirection(rtl::OUString const&, int, short)
ScriptTypeDetector::endOfScriptDirection(rtl::OUString const&, int, short)
ScrollBar::DoScroll(long)
ScrollBar::Scroll()
ScrollBar::~ScrollBar()
ScrollBarBox::ApplySettings(OutputDevice&)
ScrollBarBox::DataChanged(DataChangedEvent const&)
ScrollBarBox::ScrollBarBox(vcl::Window*, long)
ScrollBarBox::StateChanged(StateChangedType)
SdAbstractDialogFactory::Create()
SdCreateDialogFactory
SdCustomShow::ReplacePage(SdPage const*, SdPage const*)
SdCustomShow::SdCustomShow()
SdCustomShow::SdCustomShow(SdCustomShow const&)
SdCustomShow::SdCustomShow(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SdCustomShow::getUnoCustomShow()
SdCustomShow::~SdCustomShow()
SdDLL::RegisterControllers(SdModule*)
SdDLL::RegisterFactorys()
SdDLL::RegisterInterfaces(SdModule const*)
SdDLL::RegisterRemotes()
SdDrawDocument::AdaptPageSizeForAllPages(Size const&, PageKind, SdUndoGroup*, long, long, long, long, bool, Orientation, unsigned short, bool)
SdDrawDocument::CreateFirstPages(SdDrawDocument const*)
SdDrawDocument::GetActiveSdPageCount() const
SdDrawDocument::GetDefaultWritingMode() const
SdDrawDocument::IsPageNameUnique(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SdDrawDocument::SetMasterPage(unsigned short, std::basic_string_view<char16_t, std::char_traits<char16_t> >, SdDrawDocument*, bool, bool)
SdDrawDocument::adaptSizeAndBorderForAllPages(Size const&, long, long, long, long)
SdHeaderFooterUndoAction::Redo()
SdHeaderFooterUndoAction::SdHeaderFooterUndoAction(SdDrawDocument*, SdPage*, sd::HeaderFooterSettings const&)
SdHeaderFooterUndoAction::Undo()
SdHeaderFooterUndoAction::~SdHeaderFooterUndoAction()
SdIOCompat::SdIOCompat(SvStream&, StreamMode, unsigned short)
SdIOCompat::~SdIOCompat()
SdInsertLayerDlg::SdInsertLayerDlg(weld::Window*, SfxItemSet const&, bool, rtl::OUString const&)
SdInsertLayerDlg::~SdInsertLayerDlg()
SdNavigatorWin::FirstFocus()
SdNavigatorWin::FreshTree(SdDrawDocument const*)
SdNavigatorWin::GetDocInfo()
SdNavigatorWin::GetDragTypeSdBmpId(NavigatorDragType)
SdNavigatorWin::GetFrameWeld() const
SdNavigatorWin::GetNavigatorDragType()
SdNavigatorWin::InsertFile(rtl::OUString const&)
SdNavigatorWin::RefreshDocumentLB(rtl::OUString const*)
SdNavigatorWin::SdNavigatorWin(weld::Widget*, SfxBindings*, SfxNavigator*)
SdNavigatorWin::SetDragImage()
SdNavigatorWin::SetUpdateRequestFunctor(std::function<void ()> const&)
SdNavigatorWin::~SdNavigatorWin()
SdOpenSoundFileDialog::IsInsertAsLinkSelected() const
SdOpenSoundFileDialog::SdOpenSoundFileDialog(weld::Window*)
SdOpenSoundFileDialog::~SdOpenSoundFileDialog()
SdOptionsGeneric::SdOptionsGeneric(SdOptionsGeneric const&)
SdOptionsGeneric::SdOptionsGeneric(bool, rtl::OUString const&)
SdOptionsGeneric::Store()
SdOptionsGeneric::isMetricSystem()
SdOptionsGeneric::operator=(SdOptionsGeneric const&)
SdOptionsGeneric::~SdOptionsGeneric()
SdOptionsItem::GetProperties(com::sun::star::uno::Sequence<rtl::OUString> const&)
SdOptionsItem::ImplCommit()
SdOptionsItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SdOptionsItem::PutProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SdOptionsItem::SdOptionsItem(SdOptionsGeneric const&, rtl::OUString const&)
SdOptionsItem::~SdOptionsItem()
SdOptionsLayout::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsLayout::ReadData(com::sun::star::uno::Any const*)
SdOptionsLayout::SdOptionsLayout(bool, bool)
SdOptionsLayout::WriteData(com::sun::star::uno::Any*) const
SdOptionsLayout::operator==(SdOptionsLayout const&) const
SdOptionsLayoutItem::Clone(SfxItemPool*) const
SdOptionsLayoutItem::SdOptionsLayoutItem()
SdOptionsLayoutItem::SdOptionsLayoutItem(SdOptions const*, sd::FrameView const*)
SdOptionsLayoutItem::SetOptions(SdOptions*) const
SdOptionsLayoutItem::operator==(SfxPoolItem const&) const
SdOptionsMisc::GetDisplay() const
SdOptionsMisc::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsMisc::ReadData(com::sun::star::uno::Any const*)
SdOptionsMisc::SdOptionsMisc(bool, bool)
SdOptionsMisc::SetDisplay(int)
SdOptionsMisc::WriteData(com::sun::star::uno::Any*) const
SdOptionsMisc::operator==(SdOptionsMisc const&) const
SdOptionsMiscItem::Clone(SfxItemPool*) const
SdOptionsMiscItem::SdOptionsMiscItem()
SdOptionsMiscItem::SdOptionsMiscItem(SdOptions const*, sd::FrameView const*)
SdOptionsMiscItem::SetOptions(SdOptions*) const
SdOptionsMiscItem::operator==(SfxPoolItem const&) const
SdOptionsPrint::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsPrint::ReadData(com::sun::star::uno::Any const*)
SdOptionsPrint::SdOptionsPrint(bool, bool)
SdOptionsPrint::WriteData(com::sun::star::uno::Any*) const
SdOptionsPrint::operator==(SdOptionsPrint const&) const
SdOptionsPrintItem::Clone(SfxItemPool*) const
SdOptionsPrintItem::SdOptionsPrintItem()
SdOptionsPrintItem::SdOptionsPrintItem(SdOptions const*)
SdOptionsPrintItem::SetOptions(SdOptions*) const
SdOptionsPrintItem::operator==(SfxPoolItem const&) const
SdOptionsSnap::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsSnap::ReadData(com::sun::star::uno::Any const*)
SdOptionsSnap::SdOptionsSnap(bool, bool)
SdOptionsSnap::WriteData(com::sun::star::uno::Any*) const
SdOptionsSnap::operator==(SdOptionsSnap const&) const
SdOptionsSnapItem::Clone(SfxItemPool*) const
SdOptionsSnapItem::SdOptionsSnapItem()
SdOptionsSnapItem::SdOptionsSnapItem(SdOptions const*, sd::FrameView const*)
SdOptionsSnapItem::SetOptions(SdOptions*) const
SdOptionsSnapItem::operator==(SfxPoolItem const&) const
SdPage::CalculateHandoutAreas(SdDrawDocument&, AutoLayout, bool, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >&)
SdPage::Changed(SdrObject const&, SdrUserCallType, tools::Rectangle const&)
SdPage::ConnectLink()
SdPage::CreateTitleAndLayout(bool, bool)
SdPage::DisconnectLink()
SdPage::EndListenOutlineText()
SdPage::EnsureMasterPageDefaultBackground()
SdPage::Equals(SdPage const&) const
SdPage::GetFadeEffect() const
SdPage::GetHashCode() const
SdPage::GetLayoutRect() const
SdPage::GetOrientation() const
SdPage::GetPresObjKind(SdrObject*) const
SdPage::GetTextStyleSheetForObject(SdrObject*) const
SdPage::GetTitleRect() const
SdPage::InsertAutoLayoutShape(SdrObject*, PresObjKind, bool, tools::Rectangle const&, bool)
SdPage::IsPresObj(SdrObject const*)
SdPage::IsReadOnly() const
SdPage::NbcRemoveObject(unsigned long)
SdPage::RemoveEmptyPresentationObjects()
SdPage::RemovePresObj(SdrObject const*)
SdPage::ReplaceObject(SdrObject*, unsigned long)
SdPage::RestoreDefaultText(SdrObject*)
SdPage::ScaleObjects(Size const&, tools::Rectangle const&, bool)
SdPage::SdPage(SdDrawDocument&, bool)
SdPage::SetBorder(int, int, int, int)
SdPage::SetLeftBorder(int)
SdPage::SetLowerBorder(int)
SdPage::SetOrientation(Orientation)
SdPage::SetPrecious(bool)
SdPage::SetRightBorder(int)
SdPage::SetSize(Size const&)
SdPage::SetUpperBorder(int)
SdPage::addAnnotation(com::sun::star::uno::Reference<com::sun::star::office::XAnnotation> const&, int)
SdPage::checkVisibility(sdr::contact::ViewObjectContact const&, sdr::contact::DisplayInfo const&, bool)
SdPage::cloneAnimations(SdPage&) const
SdPage::createAnnotation(com::sun::star::uno::Reference<com::sun::star::office::XAnnotation>&)
SdPage::createUnoPage()
SdPage::dumpAsXml(_xmlTextWriter*) const
SdPage::getAlienAttributes(com::sun::star::uno::Any&)
SdPage::getAnimationNode()
SdPage::getGraphicsForPrefetch(std::vector<Graphic*, std::allocator<Graphic*> >&) const
SdPage::getOrCreateItems()
SdPage::getPresentationStyle(unsigned int) const
SdPage::hasAnimationNode() const
SdPage::lateInit(SdPage const&)
SdPage::notifyObjectRenamed(SdrObject const*)
SdPage::onEndTextEdit(SdrObject*)
SdPage::onParagraphInserted(Outliner const*, Paragraph const*, SdrObject*)
SdPage::onParagraphRemoving(Outliner const*, Paragraph const*, SdrObject*)
SdPage::onRemoveObject(SdrObject*)
SdPage::removeAnimations(SdrObject const*)
SdPage::removeAnnotation(com::sun::star::uno::Reference<com::sun::star::office::XAnnotation> const&)
SdPage::setAlienAttributes(com::sun::star::uno::Any const&)
SdPage::setAnimationNode(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
SdPage::setTransitionDirection(bool)
SdPage::~SdPage()
SdPageObjsTLV::AddShapeList(SdrObjList const&, SdrObject*, rtl::OUString const&, bool, weld::TreeIter const*)
SdPageObjsTLV::AddShapeToTransferable(SdTransferable&, SdrObject const&) const
SdPageObjsTLV::CloseBookmarkDoc()
SdPageObjsTLV::DoDrag()
SdPageObjsTLV::GetObjectName(SdrObject const*, bool) const
SdPageObjsTLV::GetViewShellForDocShell(sd::DrawDocShell&)
SdPageObjsTLV::HasSelectedChildren(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SdPageObjsTLV::IsEqualToShapeList(std::unique_ptr<weld::TreeIter, std::default_delete<weld::TreeIter> >&, SdrObjList const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SdPageObjsTLV::IsInDrag()
SdPageObjsTLV::LinkStubMousePressHdl(void*, MouseEvent const&)
SdPageObjsTLV::LinkStubMouseReleaseHdl(void*, MouseEvent const&)
SdPageObjsTLV::OnDragFinished()
SdPageObjsTLV::PageBelongsToCurrentShow(SdPage const*) const
SdPageObjsTLV::SdPageObjsTLV(std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >)
SdPageObjsTLV::SetSdNavigator(SdNavigatorWin*)
SdPageObjsTLV::SetShowAllShapes(bool, bool)
SdPageObjsTLV::StartDrag()
SdPageObjsTLV::~SdPageObjsTLV()
SdResId(TranslateNId, int)
SdUndoAction::GetViewShellId() const
SdUndoAction::SdUndoAction(SdDrawDocument*)
SdUndoGroup::Merge(SfxUndoAction*)
SdUndoGroup::Redo()
SdUndoGroup::Undo()
SdUndoGroup::~SdUndoGroup()
SdXImpressDocument::GetModel(SdDrawDocument const&)
SdXImpressDocument::GetViewShell()
SdXImpressDocument::InsertSdPage(unsigned short, bool)
SdXImpressDocument::Notify(SfxBroadcaster&, SfxHint const&)
SdXImpressDocument::SdXImpressDocument(SdDrawDocument*, bool)
SdXImpressDocument::SdXImpressDocument(sd::DrawDocShell*, bool)
SdXImpressDocument::SetModified()
SdXImpressDocument::acquire()
SdXImpressDocument::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SdXImpressDocument::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SdXImpressDocument::create(rtl::OUString const&, rtl::OUString const&)
SdXImpressDocument::createAnyCompareByName(rtl::OUString const&)
SdXImpressDocument::createInstance(rtl::OUString const&)
SdXImpressDocument::createInstanceWithArguments(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SdXImpressDocument::dispose()
SdXImpressDocument::duplicate(com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&)
SdXImpressDocument::getAvailableServiceNames()
SdXImpressDocument::getCustomPresentations()
SdXImpressDocument::getDocWindow()
SdXImpressDocument::getDocumentSize()
SdXImpressDocument::getDrawPages()
SdXImpressDocument::getForbiddenCharsTable()
SdXImpressDocument::getHandoutMasterPage()
SdXImpressDocument::getImplementationId()
SdXImpressDocument::getImplementationName()
SdXImpressDocument::getLayerManager()
SdXImpressDocument::getLinks()
SdXImpressDocument::getMasterPages()
SdXImpressDocument::getPart()
SdXImpressDocument::getPartHash(int)
SdXImpressDocument::getPartInfo(int)
SdXImpressDocument::getPartName(int)
SdXImpressDocument::getParts()
SdXImpressDocument::getPointer()
SdXImpressDocument::getPostIts(tools::JsonWriter&)
SdXImpressDocument::getPresentation()
SdXImpressDocument::getPropertySetInfo()
SdXImpressDocument::getPropertyValue(rtl::OUString const&)
SdXImpressDocument::getRenderer(int, com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SdXImpressDocument::getRendererCount(com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SdXImpressDocument::getSdrModelFromUnoModel() const
SdXImpressDocument::getSelection()
SdXImpressDocument::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SdXImpressDocument::getStyleFamilies()
SdXImpressDocument::getSupportedServiceNames()
SdXImpressDocument::getTypes()
SdXImpressDocument::getUnoTunnelId()
SdXImpressDocument::getViewData()
SdXImpressDocument::hasControllersLocked()
SdXImpressDocument::initializeDocument()
SdXImpressDocument::initializeForTiledRendering(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SdXImpressDocument::isMimeTypeSupported()
SdXImpressDocument::lockControllers()
SdXImpressDocument::moveSelectedParts(int, bool)
SdXImpressDocument::paintTile(VirtualDevice&, int, int, int, int, long, long)
SdXImpressDocument::postKeyEvent(int, int, int)
SdXImpressDocument::postMouseEvent(int, int, int, int, int, int)
SdXImpressDocument::queryInterface(com::sun::star::uno::Type const&)
SdXImpressDocument::release()
SdXImpressDocument::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SdXImpressDocument::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SdXImpressDocument::render(int, com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SdXImpressDocument::resetSelection()
SdXImpressDocument::selectPart(int, int)
SdXImpressDocument::setClientVisibleArea(tools::Rectangle const&)
SdXImpressDocument::setClipboard(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&)
SdXImpressDocument::setGraphicSelection(int, int, int)
SdXImpressDocument::setPart(int, bool)
SdXImpressDocument::setPartMode(int)
SdXImpressDocument::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SdXImpressDocument::setTextSelection(int, int, int)
SdXImpressDocument::setViewData(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&)
SdXImpressDocument::supportsService(rtl::OUString const&)
SdXImpressDocument::unlockControllers()
SdXImpressDocument::~SdXImpressDocument()
SdrAngleItem::Clone(SfxItemPool*) const
SdrAttrObj::CreateObjectSpecificProperties()
SdrAttrObj::HasFill() const
SdrAttrObj::HasLine() const
SdrAttrObj::ImpGetLineWdt() const
SdrAttrObj::SdrAttrObj(SdrModel&)
SdrAttrObj::SdrAttrObj(SdrModel&, SdrAttrObj const&)
SdrAttrObj::~SdrAttrObj()
SdrCaptionEscDirItem::Clone(SfxItemPool*) const
SdrCaptionEscDirItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrCaptionEscDirItem::GetValueCount() const
SdrCaptionEscDirItem::GetValueTextByPos(unsigned short)
SdrCaptionEscIsRelItem::Clone(SfxItemPool*) const
SdrCaptionEscIsRelItem::~SdrCaptionEscIsRelItem()
SdrCaptionEscRelItem::Clone(SfxItemPool*) const
SdrCaptionEscRelItem::~SdrCaptionEscRelItem()
SdrCaptionFitLineLenItem::Clone(SfxItemPool*) const
SdrCaptionFitLineLenItem::~SdrCaptionFitLineLenItem()
SdrCaptionLineLenItem::Clone(SfxItemPool*) const
SdrCaptionLineLenItem::~SdrCaptionLineLenItem()
SdrCaptionObj::AddToHdlList(SdrHdlList&) const
SdrCaptionObj::BckCreate(SdrDragStat&)
SdrCaptionObj::BegCreate(SdrDragStat&)
SdrCaptionObj::BrkCreate(SdrDragStat&)
SdrCaptionObj::CloneSdrObject(SdrModel&) const
SdrCaptionObj::CreateObjectSpecificProperties()
SdrCaptionObj::CreateObjectSpecificViewContact()
SdrCaptionObj::DoConvertToPolyObj(bool, bool) const
SdrCaptionObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrCaptionObj::GetCreatePointer() const
SdrCaptionObj::GetHdlCount() const
SdrCaptionObj::GetObjIdentifier() const
SdrCaptionObj::GetRelativePos() const
SdrCaptionObj::GetSnapPoint(unsigned int) const
SdrCaptionObj::GetSnapPointCount() const
SdrCaptionObj::MovCreate(SdrDragStat&)
SdrCaptionObj::NbcMove(Size const&)
SdrCaptionObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrCaptionObj::NbcSetLogicRect(tools::Rectangle const&)
SdrCaptionObj::NbcSetRelativePos(Point const&)
SdrCaptionObj::NbcSetTailPos(Point const&)
SdrCaptionObj::NewGeoData() const
SdrCaptionObj::Notify(SfxBroadcaster&, SfxHint const&)
SdrCaptionObj::RestoreGeoData(SdrObjGeoData const&)
SdrCaptionObj::SaveGeoData(SdrObjGeoData&) const
SdrCaptionObj::SdrCaptionObj(SdrModel&)
SdrCaptionObj::SdrCaptionObj(SdrModel&, SdrCaptionObj const&)
SdrCaptionObj::SdrCaptionObj(SdrModel&, tools::Rectangle const&, Point const&)
SdrCaptionObj::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrCaptionObj::TakeCreatePoly(SdrDragStat const&) const
SdrCaptionObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrCaptionObj::TakeObjNamePlural() const
SdrCaptionObj::TakeObjNameSingul() const
SdrCaptionObj::TakeXorPoly() const
SdrCaptionObj::applySpecialDrag(SdrDragStat&)
SdrCaptionObj::beginSpecialDrag(SdrDragStat&) const
SdrCaptionObj::getSpecialDragComment(SdrDragStat const&) const
SdrCaptionObj::hasSpecialDrag() const
SdrCaptionObj::~SdrCaptionObj()
SdrCaptionTypeItem::Clone(SfxItemPool*) const
SdrCaptionTypeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrCaptionTypeItem::GetValueCount() const
SdrCaptionTypeItem::GetValueTextByPos(unsigned short)
SdrCircObj::AddToHdlList(SdrHdlList&) const
SdrCircObj::BckCreate(SdrDragStat&)
SdrCircObj::BegCreate(SdrDragStat&)
SdrCircObj::BrkCreate(SdrDragStat&)
SdrCircObj::CloneSdrObject(SdrModel&) const
SdrCircObj::CreateObjectSpecificProperties()
SdrCircObj::CreateObjectSpecificViewContact()
SdrCircObj::DoConvertToPolyObj(bool, bool) const
SdrCircObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrCircObj::GetCreatePointer() const
SdrCircObj::GetHdlCount() const
SdrCircObj::GetObjIdentifier() const
SdrCircObj::GetSnapPoint(unsigned int) const
SdrCircObj::GetSnapPointCount() const
SdrCircObj::MovCreate(SdrDragStat&)
SdrCircObj::NbcMirror(Point const&, Point const&)
SdrCircObj::NbcMove(Size const&)
SdrCircObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrCircObj::NbcSetSnapRect(tools::Rectangle const&)
SdrCircObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrCircObj::NewGeoData() const
SdrCircObj::Notify(SfxBroadcaster&, SfxHint const&)
SdrCircObj::RecalcSnapRect()
SdrCircObj::RestoreGeoData(SdrObjGeoData const&)
SdrCircObj::SaveGeoData(SdrObjGeoData&) const
SdrCircObj::SdrCircObj(SdrModel&, SdrCircKind)
SdrCircObj::SdrCircObj(SdrModel&, SdrCircKind, tools::Rectangle const&)
SdrCircObj::SdrCircObj(SdrModel&, SdrCircKind, tools::Rectangle const&, o3tl::strong_int<int, FractionTag<100> >, o3tl::strong_int<int, FractionTag<100> >)
SdrCircObj::SdrCircObj(SdrModel&, SdrCircObj const&)
SdrCircObj::TakeCreatePoly(SdrDragStat const&) const
SdrCircObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrCircObj::TakeObjNamePlural() const
SdrCircObj::TakeObjNameSingul() const
SdrCircObj::TakeUnrotatedSnapRect(tools::Rectangle&) const
SdrCircObj::TakeXorPoly() const
SdrCircObj::applySpecialDrag(SdrDragStat&)
SdrCircObj::beginSpecialDrag(SdrDragStat&) const
SdrCircObj::getSpecialDragComment(SdrDragStat const&) const
SdrCircObj::hasSpecialDrag() const
SdrCircObj::~SdrCircObj()
SdrCreateView::BckCreateObj()
SdrCreateView::GetAttributes(SfxItemSet&, bool) const
SdrCreateView::HideConnectMarker()
SdrCreateView::HideCreateObj()
SdrCreateView::ImpBegCreateObj(SdrInventor, SdrObjKind, Point const&, OutputDevice*, short, tools::Rectangle const&, SdrObject*)
SdrCreateView::ImpClearConnectMarker()
SdrCreateView::IsEdgeTool() const
SdrCreateView::IsMeasureTool() const
SdrCreateView::IsTextTool() const
SdrCreateView::MouseMove(MouseEvent const&, OutputDevice*)
SdrCreateView::SdrCreateView(SdrModel&, OutputDevice*)
SdrCreateView::SetConnectMarker(SdrObjConnection const&)
SdrCreateView::ShowCreateObj()
SdrCreateView::~SdrCreateView()
SdrCropHdl::CreateB2dIAObject()
SdrCropHdl::GetBitmapForHandle(BitmapEx const&, int)
SdrCropHdl::SdrCropHdl(Point const&, SdrHdlKind, double, double)
SdrCustomShapeGeometryItem::ClearPropertyValue(rtl::OUString const&)
SdrCustomShapeGeometryItem::Clone(SfxItemPool*) const
SdrCustomShapeGeometryItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrCustomShapeGeometryItem::GetPropertyValueByName(rtl::OUString const&, rtl::OUString const&)
SdrCustomShapeGeometryItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrCustomShapeGeometryItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrCustomShapeGeometryItem::SdrCustomShapeGeometryItem()
SdrCustomShapeGeometryItem::SdrCustomShapeGeometryItem(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SdrCustomShapeGeometryItem::SetPropertyValue(rtl::OUString const&, com::sun::star::beans::PropertyValue const&)
SdrCustomShapeGeometryItem::operator==(SfxPoolItem const&) const
SdrCustomShapeGeometryItem::~SdrCustomShapeGeometryItem()
SdrDragEntryPolyPolygon::SdrDragEntryPolyPolygon(basegfx::B2DPolyPolygon const&)
SdrDragEntryPolyPolygon::createPrimitive2DSequenceInCurrentState(SdrDragMethod&)
SdrDragEntryPolyPolygon::~SdrDragEntryPolyPolygon()
SdrDragMethod::AddConnectorOverlays()
SdrDragMethod::DoAddConnectorOverlays()
SdrDragMethod::GetDragPV() const
SdrDragMethod::ImpGetDescriptionStr(TranslateId) const
SdrDragMethod::SdrDragMethod(SdrDragView&)
SdrDragMethod::clearSdrDragEntries()
SdrDragMethod::createSdrDragEntries_GlueDrag()
SdrDragMethod::createSdrDragEntries_PointDrag()
SdrDragMethod::createSdrDragEntries_PolygonDrag()
SdrDragMethod::createSdrDragEntries_SolidDrag()
SdrDragMethod::destroyOverlayGeometry()
SdrDragMethod::getCurrentRange() const
SdrDragMethod::resetSdrDragEntries()
SdrDragMethod::~SdrDragMethod()
SdrDragMove::BeginSdrDrag()
SdrDragMove::EndSdrDrag(bool)
SdrDragMove::ImpCheckSnap(Point const&)
SdrDragMove::SdrDragMove(SdrDragView&)
SdrDragObjOwn::EndSdrDrag(bool)
SdrDragObjOwn::SdrDragObjOwn(SdrDragView&)
SdrDragObjOwn::~SdrDragObjOwn()
SdrDragResize::EndSdrDrag(bool)
SdrDragResize::SdrDragResize(SdrDragView&)
SdrDragStat::Clear()
SdrDragStat::NextPoint()
SdrDragStat::PrevPoint()
SdrDragStat::Reset()
SdrDragStat::Reset(Point const&)
SdrDragStat::TakeCreateRect(tools::Rectangle&) const
SdrDragStat::~SdrDragStat()
SdrDragView::BckAction()
SdrDragView::BrkAction()
SdrDragView::EndAction()
SdrDragView::HideDragObj()
SdrDragView::IsAction() const
SdrDragView::IsInsGluePointPossible() const
SdrDragView::IsInsObjPointPossible() const
SdrDragView::IsOrthoDesired() const
SdrDragView::MovAction(Point const&)
SdrDragView::SdrDragView(SdrModel&, OutputDevice*)
SdrDragView::ShowDragObj()
SdrDragView::TakeActionRect(tools::Rectangle&) const
SdrDragView::~SdrDragView()
SdrDropMarkerOverlay::ImplCreateOverlays(SdrView const&, basegfx::B2DPolyPolygon const&)
SdrDropMarkerOverlay::SdrDropMarkerOverlay(SdrView const&, Point const&, Point const&)
SdrDropMarkerOverlay::SdrDropMarkerOverlay(SdrView const&, SdrObject const&)
SdrDropMarkerOverlay::SdrDropMarkerOverlay(SdrView const&, tools::Rectangle const&)
SdrDropMarkerOverlay::~SdrDropMarkerOverlay()
SdrEdgeKindItem::Clone(SfxItemPool*) const
SdrEdgeKindItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrEdgeKindItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrEdgeKindItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrEdgeNode1HorzDistItem::Clone(SfxItemPool*) const
SdrEdgeNode1HorzDistItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrEdgeNode1HorzDistItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrEdgeNode1VertDistItem::Clone(SfxItemPool*) const
SdrEdgeNode1VertDistItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrEdgeNode1VertDistItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrEdgeNode2HorzDistItem::Clone(SfxItemPool*) const
SdrEdgeNode2HorzDistItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrEdgeNode2HorzDistItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrEdgeNode2VertDistItem::Clone(SfxItemPool*) const
SdrEdgeNode2VertDistItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrEdgeNode2VertDistItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrEdgeObj::AddToHdlList(SdrHdlList&) const
SdrEdgeObj::BckCreate(SdrDragStat&)
SdrEdgeObj::BegCreate(SdrDragStat&)
SdrEdgeObj::BrkCreate(SdrDragStat&)
SdrEdgeObj::CheckNodeConnection(bool) const
SdrEdgeObj::CloneSdrObject(SdrModel&) const
SdrEdgeObj::CreateObjectSpecificProperties()
SdrEdgeObj::CreateObjectSpecificViewContact()
SdrEdgeObj::DisconnectFromNode(bool)
SdrEdgeObj::DoConvertToPolyObj(bool, bool) const
SdrEdgeObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrEdgeObj::ForceGluePointList()
SdrEdgeObj::GetCornerGluePoint(unsigned short) const
SdrEdgeObj::GetCreatePointer() const
SdrEdgeObj::GetCurrentBoundRect() const
SdrEdgeObj::GetEdgeTrackPath() const
SdrEdgeObj::GetGluePointList() const
SdrEdgeObj::GetHdlCount() const
SdrEdgeObj::GetObjIdentifier() const
SdrEdgeObj::GetPoint(unsigned int) const
SdrEdgeObj::GetPointCount() const
SdrEdgeObj::GetSnapPoint(unsigned int) const
SdrEdgeObj::GetSnapPointCount() const
SdrEdgeObj::GetSnapRect() const
SdrEdgeObj::GetTailPoint(bool) const
SdrEdgeObj::GetVertexGluePoint(unsigned short) const
SdrEdgeObj::ImpCalcEdgeTrack(Point const&, long, tools::Rectangle const&, tools::Rectangle const&, Point const&, long, tools::Rectangle const&, tools::Rectangle const&, unsigned long*, SdrEdgeInfoRec*) const
SdrEdgeObj::ImpCalcEdgeTrack(XPolygon const&, SdrObjConnection&, SdrObjConnection&, SdrEdgeInfoRec*) const
SdrEdgeObj::ImpCalcEscAngle(SdrObject const*, Point const&)
SdrEdgeObj::ImpCalcObjToCenter(Point const&, long, tools::Rectangle const&, Point const&)
SdrEdgeObj::ImpDirtyEdgeTrack()
SdrEdgeObj::ImpFindConnector(Point const&, SdrPageView const&, SdrObjConnection&, SdrEdgeObj const*, OutputDevice*, SdrDragStat*)
SdrEdgeObj::ImpRecalcEdgeTrack()
SdrEdgeObj::ImpSetAttrToEdgeInfo()
SdrEdgeObj::ImpSetEdgeInfoToAttr()
SdrEdgeObj::ImpSetTailPoint(bool, Point const&)
SdrEdgeObj::ImpUndirtyEdgeTrack()
SdrEdgeObj::ImplAddConnectorOverlay(SdrDragMethod&, bool, bool, bool) const
SdrEdgeObj::IsPolyObj() const
SdrEdgeObj::MovCreate(SdrDragStat&)
SdrEdgeObj::NbcMirror(Point const&, Point const&)
SdrEdgeObj::NbcMove(Size const&)
SdrEdgeObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrEdgeObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrEdgeObj::NbcSetAnchorPos(Point const&)
SdrEdgeObj::NbcSetPoint(Point const&, unsigned int)
SdrEdgeObj::NbcSetSnapRect(tools::Rectangle const&)
SdrEdgeObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrEdgeObj::NewGeoData() const
SdrEdgeObj::Notify(SfxBroadcaster&, SfxHint const&)
SdrEdgeObj::RecalcSnapRect()
SdrEdgeObj::Reformat()
SdrEdgeObj::RestoreGeoData(SdrObjGeoData const&)
SdrEdgeObj::SaveGeoData(SdrObjGeoData&) const
SdrEdgeObj::SdrEdgeObj(SdrModel&)
SdrEdgeObj::SdrEdgeObj(SdrModel&, SdrEdgeObj const&)
SdrEdgeObj::SetEdgeTrackPath(basegfx::B2DPolyPolygon const&)
SdrEdgeObj::TRGetBaseGeometry(basegfx::B2DHomMatrix&, basegfx::B2DPolyPolygon&) const
SdrEdgeObj::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrEdgeObj::TakeCreatePoly(SdrDragStat const&) const
SdrEdgeObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrEdgeObj::TakeObjNamePlural() const
SdrEdgeObj::TakeObjNameSingul() const
SdrEdgeObj::TakeUnrotatedSnapRect(tools::Rectangle&) const
SdrEdgeObj::TakeXorPoly() const
SdrEdgeObj::applySpecialDrag(SdrDragStat&)
SdrEdgeObj::beginSpecialDrag(SdrDragStat&) const
SdrEdgeObj::getEdgeTrack() const
SdrEdgeObj::getFullDragClone() const
SdrEdgeObj::getGluePointIndex(bool)
SdrEdgeObj::getSpecialDragComment(SdrDragStat const&) const
SdrEdgeObj::handlePageChange(SdrPage*, SdrPage*)
SdrEdgeObj::hasSpecialDrag() const
SdrEdgeObj::setGluePointIndex(bool, int)
SdrEdgeObj::~SdrEdgeObj()
SdrEditView::AddUndoActions(std::vector<std::unique_ptr<SdrUndoAction, std::default_delete<SdrUndoAction> >, std::allocator<std::unique_ptr<SdrUndoAction, std::default_delete<SdrUndoAction> > > >)
SdrEditView::ConvertMarkedToPolyObj()
SdrEditView::CreateConnectorUndo(SdrObject const&)
SdrEditView::CrookMarkedObj(Point const&, Point const&, SdrCrookMode, bool, bool, bool)
SdrEditView::DeleteMarkedList(SdrMarkList const&)
SdrEditView::DistortMarkedObj(tools::Rectangle const&, XPolygon const&, bool, bool)
SdrEditView::EndTextEditCurrentView()
SdrEditView::GetAttributes(SfxItemSet&, bool) const
SdrEditView::GetMarkedObjRotate() const
SdrEditView::GetMarkedObjShear() const
SdrEditView::GetStyleSheet() const
SdrEditView::ImpBroadcastEdgesOfMarkedNodes()
SdrEditView::ImpCanConvertForCombine(SdrObject const*)
SdrEditView::ImpCanConvertForCombine1(SdrObject const*)
SdrEditView::ImpCanDismantle(SdrObject const*, bool)
SdrEditView::ImpCanDismantle(basegfx::B2DPolyPolygon const&, bool)
SdrEditView::ImpCheckToTopBtmPossible()
SdrEditView::ImpCombineToSinglePolygon(basegfx::B2DPolyPolygon const&)
SdrEditView::ImpConvertOneObj(SdrObject*, bool, bool)
SdrEditView::ImpConvertTo(bool, bool)
SdrEditView::ImpCopyAttributes(SdrObject const*, SdrObject*) const
SdrEditView::ImpCrookObj(SdrObject*, Point const&, Point const&, SdrCrookMode, bool, bool, bool, tools::Rectangle const&)
SdrEditView::ImpDelLayerCheck(SdrObjList const*, o3tl::strong_int<unsigned char, SdrLayerIDTag>) const
SdrEditView::ImpDelLayerDelObjs(SdrObjList*, o3tl::strong_int<unsigned char, SdrLayerIDTag>)
SdrEditView::ImpDismantleOneObject(SdrObject const*, SdrObjList&, unsigned long&, SdrPageView*, bool)
SdrEditView::ImpDistortObj(SdrObject*, tools::Rectangle const&, XPolygon const&, bool)
SdrEditView::ImpGetPolyPolygon(SdrObject const*)
SdrEditView::ImpGetPolyPolygon1(SdrObject const*)
SdrEditView::IsCropAllowed() const
SdrEditView::MarkListHasChanged()
SdrEditView::MergeNotPersistAttrFromMarked(SfxItemSet&) const
SdrEditView::MirrorMarkedObj(Point const&, Point const&, bool)
SdrEditView::ModelHasChanged()
SdrEditView::ResizeMultMarkedObj(Point const&, Fraction const&, Fraction const&, bool, bool)
SdrEditView::SdrEditView(SdrModel&, OutputDevice*)
SdrEditView::SetAttributes(SfxItemSet const&, bool)
SdrEditView::SetNotPersistAttrToMarked(SfxItemSet const&)
SdrEditView::SetStyleSheet(SfxStyleSheet*, bool)
SdrEditView::SetStyleSheetToMarked(SfxStyleSheet*, bool)
SdrEditView::ShearMarkedObj(Point const&, o3tl::strong_int<int, FractionTag<100> >, bool, bool)
SdrEditView::~SdrEditView()
SdrEmbedObjectLink::Closed()
SdrEmbedObjectLink::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
SdrEmbedObjectLink::SdrEmbedObjectLink(SdrOle2Obj*)
SdrEmbedObjectLink::~SdrEmbedObjectLink()
SdrEscherImport::GetColorFromPalette(unsigned short, Color&) const
SdrEscherImport::GetFontEnityAtom(unsigned int) const
SdrEscherImport::GetSlideLayoutAtom() const
SdrEscherImport::ImportHeaderFooterContainer(DffRecordHeader const&, HeaderFooterEntry&)
SdrEscherImport::ReadObjText(PPTTextObj*, SdrObject*, SdPageCapsule) const
SdrEscherImport::RecolorGraphic(SvStream&, unsigned int, Graphic&)
SdrEscherImport::SdrEscherImport(PowerPointImportParam&, rtl::OUString const&)
SdrEscherImport::SeekToShape(SvStream&, SvxMSDffClientData*, unsigned int) const
SdrEscherImport::~SdrEscherImport()
SdrExchangeView::ImpGetPasteLayer(SdrObjList const*, o3tl::strong_int<unsigned char, SdrLayerIDTag>&) const
SdrExchangeView::ImpGetPasteObjList(Point&, SdrObjList*&)
SdrExchangeView::ImpLimitToWorkArea(Point&) const
SdrExchangeView::ImpPasteObject(SdrObject*, SdrObjList&, Point const&, Size const&, MapMode const&, SdrInsertFlags)
SdrExchangeView::SdrExchangeView(SdrModel&, OutputDevice*)
SdrExternalToolEdit::SdrExternalToolEdit(FmFormView*, SdrObject*)
SdrFormatter::GetStr(long) const
SdrFormatter::GetUnitStr(MapUnit)
SdrGlobalData::GetSysLocale()
SdrGlobalData::SdrGlobalData()
SdrGlueEditView::DeleteMarkedGluePoints()
SdrGlueEditView::ImpCopyMarkedGluePoints()
SdrGlueEditView::ImpDoMarkedGluePoints(void (*)(SdrGluePoint&, SdrObject const*, void const*, void const*, void const*, void const*), bool, void const*, void const*, void const*, void const*)
SdrGlueEditView::ImpTransformMarkedGluePoints(void (*)(Point&, void const*, void const*, void const*, void const*), void const*, void const*, void const*, void const*)
SdrGlueEditView::MoveMarkedGluePoints(Size const&, bool)
SdrGlueEditView::ResizeMarkedGluePoints(Point const&, Fraction const&, Fraction const&, bool)
SdrGlueEditView::RotateMarkedGluePoints(Point const&, o3tl::strong_int<int, FractionTag<100> >, bool)
SdrGlueEditView::SdrGlueEditView(SdrModel&, OutputDevice*)
SdrGlueEditView::~SdrGlueEditView()
SdrGluePoint::EscAngleToDir(o3tl::strong_int<int, FractionTag<100> >)
SdrGluePoint::EscDirToAngle(SdrEscapeDirection)
SdrGluePoint::GetAlignAngle() const
SdrGluePoint::Invalidate(vcl::Window&, SdrObject const*) const
SdrGluePoint::IsHit(Point const&, OutputDevice const&, SdrObject const*) const
SdrGluePoint::Mirror(Point const&, Point const&, o3tl::strong_int<int, FractionTag<100> >, SdrObject const*)
SdrGluePoint::Rotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double, SdrObject const*)
SdrGluePoint::SetAbsolutePos(Point const&, SdrObject const&)
SdrGluePoint::SetAlignAngle(o3tl::strong_int<int, FractionTag<100> >)
SdrGluePoint::SetReallyAbsolute(bool, SdrObject const&)
SdrGluePoint::Shear(Point const&, double, bool, SdrObject const*)
SdrGluePointList::HitTest(Point const&, OutputDevice const&, SdrObject const*) const
SdrGluePointList::Insert(SdrGluePoint const&)
SdrGluePointList::Invalidate(vcl::Window&, SdrObject const*) const
SdrGluePointList::Mirror(Point const&, Point const&, SdrObject const*)
SdrGluePointList::Mirror(Point const&, Point const&, o3tl::strong_int<int, FractionTag<100> >, SdrObject const*)
SdrGluePointList::Rotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double, SdrObject const*)
SdrGluePointList::SetReallyAbsolute(bool, SdrObject const&)
SdrGluePointList::Shear(Point const&, double, bool, SdrObject const*)
SdrGluePointList::operator=(SdrGluePointList const&)
SdrGrafContrastItem::Clone(SfxItemPool*) const
SdrGrafGamma100Item::Clone(SfxItemPool*) const
SdrGrafGamma100Item::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrGrafGamma100Item::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrGrafLuminanceItem::Clone(SfxItemPool*) const
SdrGrafModeItem::Clone(SfxItemPool*) const
SdrGrafModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrGrafModeItem::GetValueCount() const
SdrGrafModeItem::GetValueTextByPos(unsigned short)
SdrGrafObj::AddToHdlList(SdrHdlList&) const
SdrGrafObj::CreateObjectSpecificProperties()
SdrGrafObj::CreateObjectSpecificViewContact()
SdrGrafObj::DoConvertToPolyObj(bool, bool) const
SdrGrafObj::ForceSwapIn() const
SdrGrafObj::GetGrafPrefMapMode() const
SdrGrafObj::GetGrafPrefSize() const
SdrGrafObj::GetGrafStreamURL() const
SdrGrafObj::GetHdlCount() const
SdrGrafObj::GetMetaFile(GraphicType&) const
SdrGrafObj::GetObjIdentifier() const
SdrGrafObj::GetReplacementGraphicObject() const
SdrGrafObj::ImpDeregisterLink()
SdrGrafObj::ImpRegisterLink()
SdrGrafObj::ImpSetAttrToGrafInfo()
SdrGrafObj::ImpSetLinkedGraphic(Graphic const&)
SdrGrafObj::NbcMirror(Point const&, Point const&)
SdrGrafObj::NbcSetGraphic(Graphic const&)
SdrGrafObj::NewGeoData() const
SdrGrafObj::Notify(SfxBroadcaster&, SfxHint const&)
SdrGrafObj::RestoreGeoData(SdrObjGeoData const&)
SdrGrafObj::SaveGeoData(SdrObjGeoData&) const
SdrGrafObj::SdrGrafObj(SdrModel&)
SdrGrafObj::SdrGrafObj(SdrModel&, Graphic const&)
SdrGrafObj::SdrGrafObj(SdrModel&, Graphic const&, tools::Rectangle const&)
SdrGrafObj::SdrGrafObj(SdrModel&, SdrGrafObj const&)
SdrGrafObj::SetGrafAnimationAllowed(bool)
SdrGrafObj::SetGrafStreamURL(rtl::OUString const&)
SdrGrafObj::SetMirrored(bool)
SdrGrafObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrGrafObj::TakeObjNamePlural() const
SdrGrafObj::TakeObjNameSingul() const
SdrGrafObj::addCropHandles(SdrHdlList&) const
SdrGrafObj::getFullDragClone() const
SdrGrafObj::getInputStream() const
SdrGrafObj::handlePageChange(SdrPage*, SdrPage*)
SdrGrafObj::onGraphicChanged()
SdrGrafObj::~SdrGrafObj()
SdrHdl::CreateOverlayObject(basegfx::B2DPoint const&, BitmapColorIndex, BitmapMarkerKind, Point)
SdrHdl::GetNextBigger(BitmapMarkerKind)
SdrHdl::IsHdlHit(Point const&) const
SdrHdl::SdrHdl()
SdrHdl::Set1PixMore(bool)
SdrHdl::SetHdlList(SdrHdlList*)
SdrHdl::SetMoveOutside(bool)
SdrHdl::SetRotationAngle(o3tl::strong_int<int, FractionTag<100> >)
SdrHdl::createGluePointBitmap()
SdrHdl::~SdrHdl()
SdrHdlColor::SdrHdlColor(Point const&, Color, Size const&, bool)
SdrHdlColor::~SdrHdlColor()
SdrHdlList::IsHdlListHit(Point const&) const
SdrHdlList::RemoveHdl(unsigned long)
SdrHdlList::SdrHdlList(SdrMarkView*)
SdrHdlList::SetDistortShear(bool)
SdrHdlList::SetHdlSize(unsigned short)
SdrHdlList::SetMoveOutside(bool)
SdrHdlList::SetRotateShear(bool)
SdrHdlList::Sort()
SdrHdlList::~SdrHdlList()
SdrHelpLineList::HitTest(Point const&, unsigned short, OutputDevice const&) const
SdrHint::SdrHint(SdrHintKind)
SdrHint::SdrHint(SdrHintKind, SdrObject const&)
SdrHint::SdrHint(SdrHintKind, SdrObject const&, SdrPage const*)
SdrHint::SdrHint(SdrHintKind, SdrPage const*)
SdrItemPool::Clone() const
SdrItemPool::GetItemName(unsigned short)
SdrItemPool::GetPresentation(SfxPoolItem const&, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrItemPool::SdrItemPool(SdrItemPool const&)
SdrItemPool::SdrItemPool(SfxItemPool*)
SdrItemPool::~SdrItemPool()
SdrLayer::SdrLayer(o3tl::strong_int<unsigned char, SdrLayerIDTag>, rtl::OUString const&)
SdrLayer::operator==(SdrLayer const&) const
SdrLayerAdmin::Broadcast() const
SdrLayerAdmin::ClearLayers()
SdrLayerAdmin::GetLayerPos(SdrLayer const*) const
SdrLayerAdmin::GetUniqueLayerID() const
SdrLayerAdmin::InsertLayer(std::unique_ptr<SdrLayer, std::default_delete<SdrLayer> >, unsigned short)
SdrLayerAdmin::RemoveLayer(unsigned short)
SdrLayerAdmin::SdrLayerAdmin(SdrLayerAdmin const&)
SdrLayerAdmin::SdrLayerAdmin(SdrLayerAdmin*)
SdrLayerAdmin::SetModel(SdrModel*)
SdrLayerAdmin::operator=(SdrLayerAdmin const&)
SdrLayerAdmin::~SdrLayerAdmin()
SdrLayerIDSet::IsEmpty() const
SdrLayerIDSet::operator&=(SdrLayerIDSet const&)
SdrMark::ObjectInDestruction(SdrObject const&)
SdrMark::SdrMark(SdrMark const&)
SdrMark::SdrMark(SdrObject*, SdrPageView*)
SdrMark::SetMarkedSdrObj(SdrObject*)
SdrMark::operator=(SdrMark const&)
SdrMark::setTime()
SdrMark::~SdrMark()
SdrMarkList::DeletePageView(SdrPageView const&)
SdrMarkList::InsertPageView(SdrPageView const&)
SdrMarkList::Merge(SdrMarkList const&, bool)
SdrMarkList::ReplaceMark(SdrMark const&, unsigned long)
SdrMarkList::TakeSnapRect(SdrPageView const*, tools::Rectangle&) const
SdrMarkView::AddDragModeHdl(SdrDragMode)
SdrMarkView::BckAction()
SdrMarkView::BrkAction()
SdrMarkView::BrkMarkGluePoints()
SdrMarkView::BrkMarkObj()
SdrMarkView::BrkMarkPoints()
SdrMarkView::CheckSingleSdrObjectHit(Point const&, unsigned short, SdrObjList const*, SdrPageView*, SdrSearchOptions, SdrLayerIDSet const*, SdrObject*&) const
SdrMarkView::CheckSingleSdrObjectHit(Point const&, unsigned short, SdrObjList const*, SdrPageView*, SdrSearchOptions, SdrLayerIDSet const*, SdrObject*&, SdrMarkList const*) const
SdrMarkView::EndAction()
SdrMarkView::EndMarkGluePoints()
SdrMarkView::ForceRefToMarked()
SdrMarkView::GetMarkedGluePointsRect() const
SdrMarkView::GetMarkedPointsRect() const
SdrMarkView::HasMarkableGluePoints() const
SdrMarkView::HasMarkedGluePoints() const
SdrMarkView::HideSdrPage()
SdrMarkView::ImpGetDescriptionString(TranslateId, ImpGetDescriptionOptions) const
SdrMarkView::ImpIsFrameHandles() const
SdrMarkView::ImpMarkPoint(SdrHdl*, SdrMark*, bool)
SdrMarkView::IsAction() const
SdrMarkView::MarkListHasChanged()
SdrMarkView::MarkNextGluePoint()
SdrMarkView::MarkNextPoint()
SdrMarkView::MarkObj(tools::Rectangle const&, bool)
SdrMarkView::ModelHasChanged()
SdrMarkView::MouseMove(MouseEvent const&, OutputDevice*)
SdrMarkView::MovAction(Point const&)
SdrMarkView::MovMarkGluePoints(Point const&)
SdrMarkView::MovMarkObj(Point const&)
SdrMarkView::Notify(SfxBroadcaster&, SfxHint const&)
SdrMarkView::PickMarkedObj(Point const&, SdrObject*&, SdrPageView*&, SdrSearchOptions) const
SdrMarkView::PickObj(Point const&, short, SdrPageView*&, SdrSearchOptions, SdrObject**, bool*) const
SdrMarkView::SdrMarkView(SdrModel&, OutputDevice*)
SdrMarkView::SetMarkHandles(SfxViewShell*)
SdrMarkView::SetMarkHandlesForLOKit(tools::Rectangle const&, SfxViewShell const*)
SdrMarkView::SetMarkRects()
SdrMarkView::SetMoveOutside(bool)
SdrMarkView::SetRef1(Point const&)
SdrMarkView::SetRef2(Point const&)
SdrMarkView::TakeActionRect(tools::Rectangle&) const
SdrMarkView::dumpGluePointsToJSON(boost::property_tree::basic_ptree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
SdrMarkView::getPossibleGridOffsetForPosition(basegfx::B2DVector&, basegfx::B2DPoint const&, SdrPageView const*) const
SdrMarkView::getPossibleGridOffsetForSdrObject(basegfx::B2DVector&, SdrObject const*, SdrPageView const*) const
SdrMarkView::modelHasChangedLOKit()
SdrMarkView::~SdrMarkView()
SdrMeasureBelowRefEdgeItem::Clone(SfxItemPool*) const
SdrMeasureBelowRefEdgeItem::~SdrMeasureBelowRefEdgeItem()
SdrMeasureDecimalPlacesItem::Clone(SfxItemPool*) const
SdrMeasureDecimalPlacesItem::~SdrMeasureDecimalPlacesItem()
SdrMeasureField::Clone() const
SdrMeasureField::operator==(SvxFieldData const&) const
SdrMeasureField::~SdrMeasureField()
SdrMeasureObj::AddToHdlList(SdrHdlList&) const
SdrMeasureObj::BckCreate(SdrDragStat&)
SdrMeasureObj::BegCreate(SdrDragStat&)
SdrMeasureObj::BegTextEdit(SdrOutliner&)
SdrMeasureObj::BrkCreate(SdrDragStat&)
SdrMeasureObj::CalcFieldValue(SvxFieldItem const&, int, unsigned short, bool, std::optional<Color>&, std::optional<Color>&, rtl::OUString&) const
SdrMeasureObj::CloneSdrObject(SdrModel&) const
SdrMeasureObj::CreateObjectSpecificProperties()
SdrMeasureObj::CreateObjectSpecificViewContact()
SdrMeasureObj::DoConvertToPolyObj(bool, bool) const
SdrMeasureObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrMeasureObj::GetCreatePointer() const
SdrMeasureObj::GetHdlCount() const
SdrMeasureObj::GetObjIdentifier() const
SdrMeasureObj::GetOutlinerParaObject() const
SdrMeasureObj::GetOutlinerViewAnchorMode() const
SdrMeasureObj::GetPointCount() const
SdrMeasureObj::GetRotateAngle() const
SdrMeasureObj::GetSnapPoint(unsigned int) const
SdrMeasureObj::GetSnapPointCount() const
SdrMeasureObj::GetTextSize() const
SdrMeasureObj::ImpCalcGeometrics(ImpMeasureRec const&, ImpMeasurePoly&) const
SdrMeasureObj::ImpCalcXPoly(ImpMeasurePoly const&)
SdrMeasureObj::ImpEvalDrag(ImpMeasureRec&, SdrDragStat const&) const
SdrMeasureObj::ImpTakeAttr(ImpMeasureRec&) const
SdrMeasureObj::IsPolyObj() const
SdrMeasureObj::MovCreate(SdrDragStat&)
SdrMeasureObj::NbcMirror(Point const&, Point const&)
SdrMeasureObj::NbcMove(Size const&)
SdrMeasureObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrMeasureObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrMeasureObj::NbcSetOutlinerParaObject(std::optional<OutlinerParaObject>)
SdrMeasureObj::NbcSetPoint(Point const&, unsigned int)
SdrMeasureObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrMeasureObj::NewGeoData() const
SdrMeasureObj::RecalcSnapRect()
SdrMeasureObj::RestoreGeoData(SdrObjGeoData const&)
SdrMeasureObj::SaveGeoData(SdrObjGeoData&) const
SdrMeasureObj::SdrMeasureObj(SdrModel&)
SdrMeasureObj::SdrMeasureObj(SdrModel&, Point const&, Point const&)
SdrMeasureObj::SdrMeasureObj(SdrModel&, SdrMeasureObj const&)
SdrMeasureObj::TRGetBaseGeometry(basegfx::B2DHomMatrix&, basegfx::B2DPolyPolygon&) const
SdrMeasureObj::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrMeasureObj::TakeCreatePoly(SdrDragStat const&) const
SdrMeasureObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrMeasureObj::TakeObjNamePlural() const
SdrMeasureObj::TakeObjNameSingul() const
SdrMeasureObj::TakeRepresentation(SdrMeasureFieldKind) const
SdrMeasureObj::TakeTextAnchorRect(tools::Rectangle&) const
SdrMeasureObj::TakeTextEditArea(Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
SdrMeasureObj::TakeTextRect(SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*, bool) const
SdrMeasureObj::TakeXorPoly() const
SdrMeasureObj::UndirtyText() const
SdrMeasureObj::applySpecialDrag(SdrDragStat&)
SdrMeasureObj::beginSpecialDrag(SdrDragStat&) const
SdrMeasureObj::getSpecialDragComment(SdrDragStat const&) const
SdrMeasureObj::hasSpecialDrag() const
SdrMeasureObj::~SdrMeasureObj()
SdrMeasureTextHPosItem::Clone(SfxItemPool*) const
SdrMeasureTextHPosItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrMeasureTextHPosItem::GetValueCount() const
SdrMeasureTextHPosItem::GetValueTextByPos(unsigned short)
SdrMeasureTextHPosItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrMeasureTextHPosItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrMeasureTextRota90Item::Clone(SfxItemPool*) const
SdrMeasureTextRota90Item::~SdrMeasureTextRota90Item()
SdrMeasureTextVPosItem::Clone(SfxItemPool*) const
SdrMeasureTextVPosItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrMeasureTextVPosItem::GetValueCount() const
SdrMeasureTextVPosItem::GetValueTextByPos(unsigned short)
SdrMeasureTextVPosItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrMeasureTextVPosItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrMeasureUnitItem::Clone(SfxItemPool*) const
SdrMeasureUnitItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrMeasureUnitItem::GetValueCount() const
SdrMeasureUnitItem::GetValueTextByPos(unsigned short)
SdrMeasureUnitItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrMeasureUnitItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrMediaObj::CloneSdrObject(SdrModel&) const
SdrMediaObj::CreateObjectSpecificViewContact()
SdrMediaObj::GetObjIdentifier() const
SdrMediaObj::HasTextEdit() const
SdrMediaObj::SdrMediaObj(SdrModel&)
SdrMediaObj::SdrMediaObj(SdrModel&, SdrMediaObj const&)
SdrMediaObj::SdrMediaObj(SdrModel&, tools::Rectangle const&)
SdrMediaObj::SetInputStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
SdrMediaObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrMediaObj::TakeObjNamePlural() const
SdrMediaObj::TakeObjNameSingul() const
SdrMediaObj::getSnapshot() const
SdrMediaObj::mediaPropertiesChanged(avmedia::MediaItem const&)
SdrMediaObj::setMediaProperties(avmedia::MediaItem const&)
SdrMediaObj::~SdrMediaObj()
SdrMetricItem::Clone(SfxItemPool*) const
SdrModel::BegUndo(rtl::OUString const&, rtl::OUString const&, SdrRepeatFunc)
SdrModel::CopyPages(unsigned short, unsigned short, unsigned short, bool, bool)
SdrModel::GetAngleString(o3tl::strong_int<int, FractionTag<100> >)
SdrModel::GetChainingOutliner(SdrTextObj const*) const
SdrModel::GetDocumentStream(rtl::OUString const&, comphelper::LifecycleProxy const&) const
SdrModel::GetMetricString(long, bool, int) const
SdrModel::GetPercentString(Fraction const&)
SdrModel::GetTextChain() const
SdrModel::GetUnitString(FieldUnit)
SdrModel::HasRedoActions() const
SdrModel::HasUndoActions() const
SdrModel::IsAnchoredTextOverflowLegacy() const
SdrModel::Redo()
SdrModel::RefDeviceChanged()
SdrModel::Repeat(SfxRepeatTarget&)
SdrModel::SetMaxUndoActionCount(unsigned int)
SdrModel::SetScaleUnit(MapUnit, Fraction const&)
SdrModel::SetTextDefaults(SfxItemPool*, int)
SdrModel::SetUndoComment(rtl::OUString const&)
SdrModel::SetUndoComment(rtl::OUString const&, rtl::OUString const&)
SdrModel::Undo()
SdrModel::createOutliner(OutlinerMode)
SdrModel::createUnoModel()
SdrModel::disposeOutliner(std::unique_ptr<SdrOutliner, std::default_delete<SdrOutliner> >)
SdrModel::~SdrModel()
SdrObjCustomShape::GetCustomShapeEngine() const
SdrObjCustomShape::GetCustomShapeName() const
SdrObjCustomShape::GetObjIdentifier() const
SdrObjCustomShape::GetSdrObjectFromCustomShape() const
SdrObjCustomShape::GetSdrObjectShadowFromCustomShape() const
SdrObjCustomShape::ImpCalculateTextFrame(bool, bool)
SdrObjCustomShape::ImpCheckCustomGluePointsAreAdded()
SdrObjCustomShape::InvalidateRenderGeometry()
SdrObjCustomShape::IsDefaultGeometry(SdrObjCustomShape::DefaultType) const
SdrObjCustomShape::IsTextPath() const
SdrObjCustomShape::SdrObjCustomShape(SdrModel&, SdrObjCustomShape const&)
SdrObjCustomShape::SetMirroredX(bool)
SdrObjCustomShape::SetMirroredY(bool)
SdrObjCustomShape::~SdrObjCustomShape()
SdrObjEditView::ApplyFormatPaintBrushToText(SfxItemSet const&, SdrTextObj&, SdrText*, bool, bool)
SdrObjEditView::BckAction()
SdrObjEditView::BeginPasteOrDropHdl(PasteOrDropInfos*)
SdrObjEditView::BrkAction()
SdrObjEditView::BrkMacroObj()
SdrObjEditView::Command(CommandEvent const&, vcl::Window*)
SdrObjEditView::EndAction()
SdrObjEditView::EndMacroObj()
SdrObjEditView::EndPasteOrDropHdl(PasteOrDropInfos*)
SdrObjEditView::GetAttributes(SfxItemSet&, bool) const
SdrObjEditView::GetStyleSheet() const
SdrObjEditView::ImpChainingEventHdl()
SdrObjEditView::ImpFindOutlinerView(vcl::Window const*) const
SdrObjEditView::ImpHandleMotionThroughBoxesKeyInput(KeyEvent const&, bool*)
SdrObjEditView::ImpInvalidateOutlinerView(OutlinerView const&) const
SdrObjEditView::ImpIsTextEditAllSelected() const
SdrObjEditView::ImpMacroDown(Point const&)
SdrObjEditView::ImpMacroUp(Point const&)
SdrObjEditView::ImpMakeOutlinerView(vcl::Window*, OutlinerView*, SfxViewShell*) const
SdrObjEditView::ImpMakeTextCursorAreaVisible()
SdrObjEditView::ImpMoveCursorAfterChainingEvent(TextChainCursorManager*)
SdrObjEditView::ImpPaintOutlinerView(OutlinerView&, tools::Rectangle const&, OutputDevice&) const
SdrObjEditView::IsAction() const
SdrObjEditView::IsTextEditInSelectionMode() const
SdrObjEditView::KeyInput(KeyEvent const&, vcl::Window*)
SdrObjEditView::MouseButtonDown(MouseEvent const&, OutputDevice*)
SdrObjEditView::MouseButtonUp(MouseEvent const&, OutputDevice*)
SdrObjEditView::MouseMove(MouseEvent const&, OutputDevice*)
SdrObjEditView::MovAction(Point const&)
SdrObjEditView::MovMacroObj(Point const&)
SdrObjEditView::SdrObjEditView(SdrModel&, OutputDevice*)
SdrObjEditView::SetAttributes(SfxItemSet const&, bool)
SdrObjEditView::SetStyleSheet(SfxStyleSheet*, bool)
SdrObjEditView::SetTextEditWin(vcl::Window*)
SdrObjEditView::TakeActionRect(tools::Rectangle&) const
SdrObjEditView::TextEditDrawing(SdrPaintWindow&)
SdrObjEditView::~SdrObjEditView()
SdrObjGeoData::SdrObjGeoData()
SdrObjGeoData::~SdrObjGeoData()
SdrObjGroup::BegCreate(SdrDragStat&)
SdrObjGroup::CloneSdrObject(SdrModel&) const
SdrObjGroup::CreateObjectSpecificProperties()
SdrObjGroup::CreateObjectSpecificViewContact()
SdrObjGroup::DoConvertToPolyObj(bool, bool) const
SdrObjGroup::GetObjIdentifier() const
SdrObjGroup::GetRotateAngle() const
SdrObjGroup::GetShearAngle(bool) const
SdrObjGroup::GetSnapRect() const
SdrObjGroup::Mirror(Point const&, Point const&)
SdrObjGroup::Move(Size const&)
SdrObjGroup::NbcMirror(Point const&, Point const&)
SdrObjGroup::NbcReformatText()
SdrObjGroup::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrObjGroup::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObjGroup::NbcSetAnchorPos(Point const&)
SdrObjGroup::NbcSetLayer(o3tl::strong_int<unsigned char, SdrLayerIDTag>)
SdrObjGroup::NbcSetLogicRect(tools::Rectangle const&)
SdrObjGroup::NbcSetRelativePos(Point const&)
SdrObjGroup::NbcSetSnapRect(tools::Rectangle const&)
SdrObjGroup::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrObjGroup::RecalcSnapRect()
SdrObjGroup::Resize(Point const&, Fraction const&, Fraction const&, bool)
SdrObjGroup::Rotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObjGroup::SdrObjGroup(SdrModel&)
SdrObjGroup::SdrObjGroup(SdrModel&, SdrObjGroup const&)
SdrObjGroup::SetAnchorPos(Point const&)
SdrObjGroup::SetBoundRectDirty()
SdrObjGroup::SetLogicRect(tools::Rectangle const&)
SdrObjGroup::SetRelativePos(Point const&)
SdrObjGroup::SetSnapRect(tools::Rectangle const&)
SdrObjGroup::Shear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrObjGroup::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrObjGroup::TakeObjNamePlural() const
SdrObjGroup::TakeObjNameSingul() const
SdrObjGroup::TakeXorPoly() const
SdrObjGroup::beginSpecialDrag(SdrDragStat&) const
SdrObjGroup::dumpAsXml(_xmlTextWriter*) const
SdrObjGroup::getChildrenOfSdrObject() const
SdrObjGroup::getSdrObjectFromSdrObjList() const
SdrObjGroup::getSdrPageFromSdrObjList() const
SdrObjGroup::handlePageChange(SdrPage*, SdrPage*)
SdrObjGroup::~SdrObjGroup()
SdrObjList::BurnInStyleSheetAttributes()
SdrObjList::CopyObjects(SdrObjList const&)
SdrObjList::FlattenGroups()
SdrObjList::GetAllObjSnapRect() const
SdrObjList::GetObjectForNavigationPosition(unsigned int) const
SdrObjList::InsertObjectIntoContainer(SdrObject&, unsigned int)
SdrObjList::NbcReformatAllTextObjects()
SdrObjList::RecalcNavigationPositions()
SdrObjList::RecalcRects()
SdrObjList::ReformatAllEdgeObjects()
SdrObjList::ReformatAllTextObjects()
SdrObjList::RemoveObjectFromContainer(unsigned int)
SdrObjList::ReplaceObjectInContainer(SdrObject&, unsigned int)
SdrObjList::SdrObjList()
SdrObjList::SetExistingObjectOrdNum(SdrObject*, unsigned long)
SdrObjList::UnGroupObj(unsigned long)
SdrObjList::dumpAsXml(_xmlTextWriter*) const
SdrObjList::getSdrPageFromSdrObjList() const
SdrObjList::impChildInserted(SdrObject const&)
SdrObjList::impClearSdrObjList(bool)
SdrObjList::sort(std::vector<int, std::allocator<int> >&)
SdrObjList::~SdrObjList()
SdrObjListIter::ImpProcessMarkList(SdrMarkList const&, SdrIterMode)
SdrObjListIter::ImpProcessObj(SdrObject const&, SdrIterMode)
SdrObjListIter::ImpProcessObjectList(SdrObjList const&, SdrIterMode)
SdrObjListIter::SdrObjListIter(SdrMarkList const&, SdrIterMode)
SdrObjListIter::SdrObjListIter(SdrObjList const*, SdrIterMode, bool)
SdrObjListIter::SdrObjListIter(SdrObjList const*, bool, SdrIterMode, bool)
SdrObjListIter::SdrObjListIter(SdrObject const&, SdrIterMode, bool)
SdrObjListIter::SdrObjListIter(SdrPage const*, SdrIterMode, bool)
SdrObjListPrimitiveHit(SdrObjList const&, Point const&, unsigned short, SdrPageView const&, SdrLayerIDSet const*, bool)
SdrObjMacroHitRec::SdrObjMacroHitRec()
SdrObjTransformInfoRec::SdrObjTransformInfoRec()
SdrObjUserCall::~SdrObjUserCall()
SdrObjUserData::SdrObjUserData(SdrInventor, unsigned short)
SdrObjUserData::SdrObjUserData(SdrObjUserData const&)
SdrObjUserData::~SdrObjUserData()
SdrObject::AddReference(SdrVirtObj&)
SdrObject::ApplyNotPersistAttr(SfxItemSet const&)
SdrObject::BurnInStyleSheetAttributes()
SdrObject::ConvertToContourObj(SdrObject*, bool) const
SdrObject::CreateObjectSpecificViewContact()
SdrObject::DelReference(SdrVirtObj&)
SdrObject::GetBroadcaster() const
SdrObject::GetMetrStr(long) const
SdrObject::GetObjIdentifier() const
SdrObject::GetObjInventor() const
SdrObject::GetObjectItem(unsigned short) const
SdrObject::ImpConvertToContourObj(bool)
SdrObject::ImpDragCalcRect(SdrDragStat const&) const
SdrObject::ImpForcePlusData()
SdrObject::ImpGetDescriptionStr(TranslateId) const
SdrObject::InsertedStateChange()
SdrObject::IsInDestruction() const
SdrObject::IsMacroHit(SdrObjMacroHitRec const&) const
SdrObject::LineGeometryUsageIsNecessary() const
SdrObject::MakeNameUnique(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> >&)
SdrObject::NbcApplyNotPersistAttr(SfxItemSet const&)
SdrObject::NbcMirrorGluePoints(Point const&, Point const&)
SdrObject::NbcRotateGluePoints(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObject::NbcShearGluePoints(Point const&, double, bool)
SdrObject::RemoveListener(SfxListener&)
SdrObject::SdrObject(SdrModel&)
SdrObject::SdrObject(SdrModel&, SdrObject const&)
SdrObject::SetBLIPSizeRectangle(tools::Rectangle const&)
SdrObject::SetGlueReallyAbsolute(bool)
SdrObject::SetGrabBagItem(com::sun::star::uno::Any const&)
SdrObject::SetNavigationPosition(unsigned int)
SdrObject::SetObjectItem(SfxPoolItem const&)
SdrObject::SetObjectItemSet(SfxItemSet const&)
SdrObject::SetPrintable(bool)
SdrObject::TakeNotPersistAttr(SfxItemSet&) const
SdrObject::getBackgroundFillSet() const
SdrObject::getMergedHierarchySdrLayerIDSet(SdrLayerIDSet&) const
SdrObject::getSvxShape()
SdrObject::~SdrObject()
SdrOle2Obj::BreakFileLink_Impl()
SdrOle2Obj::CalculateNewScaling(Fraction&, Fraction&, Size&)
SdrOle2Obj::CanUnloadRunningObj(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, long)
SdrOle2Obj::CheckFileLink_Impl()
SdrOle2Obj::CloneSdrObject(SdrModel&) const
SdrOle2Obj::DisconnectFileLink_Impl()
SdrOle2Obj::GetNewReplacement()
SdrOle2Obj::GetObjIdentifier() const
SdrOle2Obj::GetParentXModel() const
SdrOle2Obj::GetStyleString()
SdrOle2Obj::ObjectLoaded()
SdrOle2Obj::SdrOle2Obj(SdrModel&, SdrOle2Obj const&)
SdrOle2Obj::SdrOle2Obj(SdrModel&, svt::EmbeddedObjectRef const&, rtl::OUString const&, tools::Rectangle const&)
SdrOle2Obj::SetClosedObj(bool)
SdrOle2Obj::SetGraphicToObj(Graphic const&)
SdrOle2Obj::UpdateLinkURL_Impl()
SdrOle2Obj::getEmbeddedObjectRef() const
SdrOle2Obj::isInplaceActive() const
SdrOle2Obj::isUiActive() const
SdrOle2Obj::~SdrOle2Obj()
SdrOnOffItem::Clone(SfxItemPool*) const
SdrOnOffItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrOnOffItem::GetValueTextByVal(bool) const
SdrOnOffItem::dumpAsXml(_xmlTextWriter*) const
SdrOutliner::SetTextObj(SdrTextObj const*)
SdrOutliner::SetTextObjNoInit(SdrTextObj const*)
SdrOutliner::hasEditViewCallbacks() const
SdrOutliner::~SdrOutliner()
SdrPage::CloneSdrPage(SdrModel&) const
SdrPage::CreateObjectSpecificViewContact()
SdrPage::GetLayerAdmin()
SdrPage::GetLayerAdmin() const
SdrPage::GetViewContact() const
SdrPage::MakePageObjectsNamesUnique()
SdrPage::SetPageNum(unsigned short)
SdrPage::TRG_ImpMasterPageRemoved(SdrPage const&)
SdrPage::createUnoPage()
SdrPage::getCorrectSdrPageProperties() const
SdrPage::getSdrPageProperties() const
SdrPage::~SdrPage()
SdrPageObj::CloneSdrObject(SdrModel&) const
SdrPageObj::CreateObjectSpecificProperties()
SdrPageObj::CreateObjectSpecificViewContact()
SdrPageObj::GetObjIdentifier() const
SdrPageObj::PageInDestruction(SdrPage const&)
SdrPageObj::SdrPageObj(SdrModel&, SdrPage*)
SdrPageObj::SdrPageObj(SdrModel&, SdrPageObj const&)
SdrPageObj::SdrPageObj(SdrModel&, tools::Rectangle const&, SdrPage*)
SdrPageObj::SetBoundRectDirty()
SdrPageObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrPageObj::TakeObjNamePlural() const
SdrPageObj::TakeObjNameSingul() const
SdrPageObj::~SdrPageObj()
SdrPageProperties::ImpAddStyleSheet(SfxStyleSheet&)
SdrPageProperties::ImpRemoveStyleSheet()
SdrPageProperties::Notify(SfxBroadcaster&, SfxHint const&)
SdrPageProperties::SdrPageProperties(SdrPage&)
SdrPageProperties::dumpAsXml(_xmlTextWriter*) const
SdrPageProperties::isUsedByModel() const
SdrPageProperties::~SdrPageProperties()
SdrPageView::AddPaintWindowToPageView(SdrPaintWindow&)
SdrPageView::CheckCurrentGroup()
SdrPageView::CompleteRedraw(SdrPaintWindow&, vcl::Region const&, sdr::contact::ViewObjectContactRedirector*)
SdrPageView::FindPageWindow(SdrPaintWindow const&) const
SdrPageView::FindPatchedPageWindow(OutputDevice const&) const
SdrPageView::GetControlContainer(OutputDevice const&) const
SdrPageView::GetEnteredLevel() const
SdrPageView::Hide()
SdrPageView::ImpInvalidateHelpLineArea(unsigned short) const
SdrPageView::IsReadOnly() const
SdrPageView::LeaveAllGroup()
SdrPageView::LeaveOneGroup()
SdrPageView::ModelHasChanged()
SdrPageView::PrePaint()
SdrPageView::RemovePaintWindowFromPageView(SdrPaintWindow&)
SdrPageView::SdrPageView(SdrPage*, SdrView&)
SdrPageView::SetApplicationBackgroundColor(Color)
SdrPageView::SetCurrentGroupAndList(SdrObject*, SdrObjList*)
SdrPageView::SetDesignMode(bool) const
SdrPageView::Show()
SdrPageView::setPreparedPageWindow(SdrPageWindow*)
SdrPageView::~SdrPageView()
SdrPageWindow::GetControlContainer(bool) const
SdrPageWindow::GetOriginalPaintWindow() const
SdrPageWindow::GetPageView() const
SdrPageWindow::HasObjectContact() const
SdrPageWindow::InvalidatePageWindow(basegfx::B2DRange const&)
SdrPageWindow::PrePaint()
SdrPageWindow::PrepareRedraw(vcl::Region const&)
SdrPageWindow::RedrawAll(sdr::contact::ViewObjectContactRedirector*)
SdrPageWindow::RedrawLayer(o3tl::strong_int<unsigned char, SdrLayerIDTag> const*, sdr::contact::ViewObjectContactRedirector*, basegfx::B2IRange const*)
SdrPageWindow::ResetObjectContact()
SdrPageWindow::SdrPageWindow(SdrPageView&, SdrPaintWindow&)
SdrPageWindow::SetDesignMode(bool) const
SdrPageWindow::~SdrPageWindow()
SdrPaintView::AddWindowToPaintView(OutputDevice*, vcl::Window*)
SdrPaintView::BckAction()
SdrPaintView::BrkAction()
SdrPaintView::ClearPageView()
SdrPaintView::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
SdrPaintView::DeletePaintWindow(SdrPaintWindow const&)
SdrPaintView::DeleteWindowFromPaintView(OutputDevice*)
SdrPaintView::DoCompleteRedraw(SdrPaintWindow&, vcl::Region const&, sdr::contact::ViewObjectContactRedirector*)
SdrPaintView::EndAction()
SdrPaintView::FindPaintWindow(OutputDevice const&) const
SdrPaintView::GetAttributes(SfxItemSet&, bool) const
SdrPaintView::GetStyleSheet() const
SdrPaintView::HideSdrPage()
SdrPaintView::ImpFormLayerDrawing(SdrPaintWindow&)
SdrPaintView::ImpGetHitTolLogic(short, OutputDevice const*) const
SdrPaintView::ImpGetMinMovLogic(short, OutputDevice const*) const
SdrPaintView::InitOverlayManager(rtl::Reference<sdr::overlay::OverlayManager>)
SdrPaintView::InvalidateAllWin(tools::Rectangle const&)
SdrPaintView::IsAction() const
SdrPaintView::IsBufferedOutputAllowed() const
SdrPaintView::IsTextEdit() const
SdrPaintView::KeyInput(KeyEvent const&, vcl::Window*)
SdrPaintView::MergeNotPersistDefaultAttr(SfxItemSet&) const
SdrPaintView::ModelHasChanged()
SdrPaintView::MovAction(Point const&)
SdrPaintView::Notify(SfxBroadcaster&, SfxHint const&)
SdrPaintView::OptimizeDrawLayersRegion(OutputDevice const*, vcl::Region const&, bool)
SdrPaintView::SdrPaintView(SdrModel&, OutputDevice*)
SdrPaintView::SetAnimationTimer(unsigned int)
SdrPaintView::SetAttributes(SfxItemSet const&, bool)
SdrPaintView::SetDefaultStyleSheet(SfxStyleSheet*, bool)
SdrPaintView::SetNotPersistDefaultAttr(SfxItemSet const&)
SdrPaintView::SetStyleSheet(SfxStyleSheet*, bool)
SdrPaintView::ShowSdrPage(SdrPage*)
SdrPaintView::TakeActionRect(tools::Rectangle&) const
SdrPaintView::VisAreaChanged()
SdrPaintView::onChangeColorConfig()
SdrPaintView::~SdrPaintView()
SdrPaintWindow::DestroyPreRenderDevice()
SdrPaintWindow::DrawOverlay(vcl::Region const&)
SdrPaintWindow::OutputPreRenderDevice(vcl::Region const&)
SdrPaintWindow::OutputToRecordingMetaFile() const
SdrPaintWindow::PreparePreRenderDevice()
SdrPaintWindow::SdrPaintWindow(SdrPaintView&, OutputDevice&, vcl::Window*)
SdrPaintWindow::SetRedrawRegion(vcl::Region const&)
SdrPaintWindow::impCreateOverlayManager()
SdrPaintWindow::~SdrPaintWindow()
SdrPathObj::BckCreate(SdrDragStat&)
SdrPathObj::BegCreate(SdrDragStat&)
SdrPathObj::BrkCreate(SdrDragStat&)
SdrPathObj::CloneSdrObject(SdrModel&) const
SdrPathObj::CreateObjectSpecificViewContact()
SdrPathObj::DoConvertToPolyObj(bool, bool) const
SdrPathObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrPathObj::GetCreatePointer() const
SdrPathObj::GetHdlCount() const
SdrPathObj::GetObjIdentifier() const
SdrPathObj::GetSnapPoint(unsigned int) const
SdrPathObj::GetSnapPointCount() const
SdrPathObj::ImpForceKind()
SdrPathObj::ImpForceLineAngle()
SdrPathObj::ImpSetClosed(bool)
SdrPathObj::IsPolyObj() const
SdrPathObj::MovCreate(SdrDragStat&)
SdrPathObj::NbcInsPoint(Point const&, bool)
SdrPathObj::NbcMirror(Point const&, Point const&)
SdrPathObj::NbcMove(Size const&)
SdrPathObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrPathObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrPathObj::NbcSetPathPoly(basegfx::B2DPolyPolygon const&)
SdrPathObj::NbcSetPoint(Point const&, unsigned int)
SdrPathObj::NbcSetSnapRect(tools::Rectangle const&)
SdrPathObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrPathObj::NewGeoData() const
SdrPathObj::RecalcSnapRect()
SdrPathObj::RestoreGeoData(SdrObjGeoData const&)
SdrPathObj::RipPoint(unsigned int, unsigned int&)
SdrPathObj::SaveGeoData(SdrObjGeoData&) const
SdrPathObj::SdrPathObj(SdrModel&, SdrObjKind)
SdrPathObj::SdrPathObj(SdrModel&, SdrObjKind, basegfx::B2DPolyPolygon const&)
SdrPathObj::SdrPathObj(SdrModel&, SdrPathObj const&)
SdrPathObj::SetHandleScale(bool)
SdrPathObj::TRGetBaseGeometry(basegfx::B2DHomMatrix&, basegfx::B2DPolyPolygon&) const
SdrPathObj::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrPathObj::TakeCreatePoly(SdrDragStat const&) const
SdrPathObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrPathObj::TakeObjNamePlural() const
SdrPathObj::TakeObjNameSingul() const
SdrPathObj::TakeUnrotatedSnapRect(tools::Rectangle&) const
SdrPathObj::TakeXorPoly() const
SdrPathObj::applySpecialDrag(SdrDragStat&)
SdrPathObj::beginSpecialDrag(SdrDragStat&) const
SdrPathObj::getDragPolyPolygon(SdrDragStat const&) const
SdrPathObj::getObjectPolyPolygon(SdrDragStat const&) const
SdrPathObj::getSpecialDragComment(SdrDragStat const&) const
SdrPathObj::getSpecialDragPoly(SdrDragStat const&) const
SdrPathObj::hasSpecialDrag() const
SdrPathObj::impGetDAC() const
SdrPathObj::~SdrPathObj()
SdrPercentItem::Clone(SfxItemPool*) const
SdrPercentItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrPercentItem::dumpAsXml(_xmlTextWriter*) const
SdrPolyEditView::MoveMarkedPoints(Size const&)
SdrPolyEditView::ResizeMarkedPoints(Point const&, Fraction const&, Fraction const&)
SdrPolyEditView::RotateMarkedPoints(Point const&, o3tl::strong_int<int, FractionTag<100> >)
SdrPolyEditView::SdrPolyEditView(SdrModel&, OutputDevice*)
SdrPolyEditView::~SdrPolyEditView()
SdrPowerPointImport::CreateTable(SdrObject*, unsigned int const*, SvxMSDffSolverContainer*)
SdrPowerPointImport::GetCurrentPageId()
SdrPowerPointImport::GetMasterPageId(unsigned short, PptPageKind) const
SdrPowerPointImport::GetPageSize() const
SdrPowerPointImport::ImportExOleObjStg(unsigned int, unsigned int&) const
SdrPowerPointImport::IsNoteOrHandout(unsigned short) const
SdrPowerPointImport::IsVerticalText() const
SdrPowerPointImport::ReadFontCollection()
SdrPowerPointImport::SdrPowerPointImport(PowerPointImportParam&, rtl::OUString const&)
SdrPowerPointImport::~SdrPowerPointImport()
SdrRectObj::CloneSdrObject(SdrModel&) const
SdrRectObj::CreateObjectSpecificViewContact()
SdrRectObj::GetObjIdentifier() const
SdrRectObj::GetXPoly() const
SdrRectObj::ImpCalcXPoly(tools::Rectangle const&, long) const
SdrRectObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrRectObj::SdrRectObj(SdrModel&)
SdrRectObj::SdrRectObj(SdrModel&, SdrObjKind)
SdrRectObj::SdrRectObj(SdrModel&, SdrObjKind, tools::Rectangle const&)
SdrRectObj::SdrRectObj(SdrModel&, SdrRectObj const&)
SdrRectObj::SdrRectObj(SdrModel&, tools::Rectangle const&)
SdrRectObj::SetXPolyDirty()
SdrRectObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrRectObj::TakeObjNamePlural() const
SdrRectObj::TakeObjNameSingul() const
SdrRectObj::~SdrRectObj()
SdrSnapView::BckAction()
SdrSnapView::BrkAction()
SdrSnapView::BrkDragHelpLine()
SdrSnapView::BrkSetPageOrg()
SdrSnapView::CheckSnap(Point const&, long&, long&, bool&, bool&) const
SdrSnapView::EndAction()
SdrSnapView::EndSetPageOrg()
SdrSnapView::GetDraggedHelpLinePointer() const
SdrSnapView::IsAction() const
SdrSnapView::MovAction(Point const&)
SdrSnapView::MovSetPageOrg(Point const&)
SdrSnapView::SdrSnapView(SdrModel&, OutputDevice*)
SdrSnapView::SnapPos(Point&, SdrPageView const*) const
SdrSnapView::TakeActionRect(tools::Rectangle&) const
SdrSnapView::~SdrSnapView()
SdrText::CheckPortionInfo(SdrOutliner const&)
SdrText::ForceOutlinerParaObject(OutlinerMode)
SdrText::GetItemSet() const
SdrText::GetObjectItemSet()
SdrText::GetOutlinerParaObject() const
SdrText::GetStyleSheet() const
SdrText::ReformatText()
SdrText::RemoveOutlinerParaObject()
SdrText::SdrText(SdrTextObj&)
SdrText::SetOutlinerParaObject(std::optional<OutlinerParaObject>)
SdrText::dumpAsXml(_xmlTextWriter*) const
SdrText::~SdrText()
SdrTextAniAmountItem::Clone(SfxItemPool*) const
SdrTextAniAmountItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniAmountItem::HasMetrics() const
SdrTextAniAmountItem::ScaleMetrics(long, long)
SdrTextAniDelayItem::Clone(SfxItemPool*) const
SdrTextAniDelayItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniDirectionItem::Clone(SfxItemPool*) const
SdrTextAniDirectionItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniDirectionItem::GetValueCount() const
SdrTextAniDirectionItem::GetValueTextByPos(unsigned short)
SdrTextAniDirectionItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextAniDirectionItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextAniKindItem::Clone(SfxItemPool*) const
SdrTextAniKindItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniKindItem::GetValueCount() const
SdrTextAniKindItem::GetValueTextByPos(unsigned short)
SdrTextAniKindItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextAniKindItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextAniStartInsideItem::Clone(SfxItemPool*) const
SdrTextAniStartInsideItem::~SdrTextAniStartInsideItem()
SdrTextAniStopInsideItem::Clone(SfxItemPool*) const
SdrTextAniStopInsideItem::~SdrTextAniStopInsideItem()
SdrTextFitToSizeTypeItem::Clone(SfxItemPool*) const
SdrTextFitToSizeTypeItem::GetBoolValue() const
SdrTextFitToSizeTypeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextFitToSizeTypeItem::GetValueCount() const
SdrTextFitToSizeTypeItem::GetValueTextByPos(unsigned short)
SdrTextFitToSizeTypeItem::HasBoolValue() const
SdrTextFitToSizeTypeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextFitToSizeTypeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextFitToSizeTypeItem::SetBoolValue(bool)
SdrTextFitToSizeTypeItem::operator==(SfxPoolItem const&) const
SdrTextHorzAdjustItem::Clone(SfxItemPool*) const
SdrTextHorzAdjustItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextHorzAdjustItem::GetValueCount() const
SdrTextHorzAdjustItem::GetValueTextByPos(unsigned short)
SdrTextHorzAdjustItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextHorzAdjustItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextObj::AddToHdlList(SdrHdlList&) const
SdrTextObj::AdjustRectToTextDistance(tools::Rectangle&) const
SdrTextObj::CloneSdrObject(SdrModel&) const
SdrTextObj::CreateObjectSpecificProperties()
SdrTextObj::CreateObjectSpecificViewContact()
SdrTextObj::DoConvertToPolyObj(bool, bool) const
SdrTextObj::GetEckenradius() const
SdrTextObj::GetHdlCount() const
SdrTextObj::GetMaxTextFrameHeight() const
SdrTextObj::GetMaxTextFrameWidth() const
SdrTextObj::GetMinTextFrameWidth() const
SdrTextObj::GetNextLinkInChain() const
SdrTextObj::GetObjIdentifier() const
SdrTextObj::GetPrevLinkInChain() const
SdrTextObj::GetPreventChainable() const
SdrTextObj::GetTextChain() const
SdrTextObj::GetTextHorizontalAdjust(SfxItemSet const&) const
SdrTextObj::GetTextLeftDistance() const
SdrTextObj::GetTextLowerDistance() const
SdrTextObj::GetTextRightDistance() const
SdrTextObj::GetTextScrollMetaFileAndRectangle(tools::Rectangle&, tools::Rectangle&)
SdrTextObj::GetTextUpperDistance() const
SdrTextObj::GetTextVerticalAdjust(SfxItemSet const&) const
SdrTextObj::HasTextColumnsNumber() const
SdrTextObj::HasTextColumnsSpacing() const
SdrTextObj::HasTextImpl(SdrOutliner const*)
SdrTextObj::ImpAutoFitText(SdrOutliner&) const
SdrTextObj::ImpAutoFitText(SdrOutliner&, Size const&, bool) const
SdrTextObj::ImpCanConvTextToCurve() const
SdrTextObj::ImpCheckShear()
SdrTextObj::ImpConvertAddText(std::unique_ptr<SdrObject, SdrObjectFreeOp>, bool) const
SdrTextObj::ImpConvertMakeObj(basegfx::B2DPolyPolygon const&, bool, bool) const
SdrTextObj::ImpDragCalcRect(SdrDragStat const&) const
SdrTextObj::ImpGetDrawOutliner() const
SdrTextObj::ImpJustifyRect(tools::Rectangle&)
SdrTextObj::ImpSetCharStretching(SdrOutliner&, Size const&, Size const&, Fraction&)
SdrTextObj::ImpSetContourPolygon(SdrOutliner&, tools::Rectangle const&, bool) const
SdrTextObj::ImpSetTextEditParams() const
SdrTextObj::ImpSetTextStyleSheetListeners()
SdrTextObj::IsChainable() const
SdrTextObj::IsContourTextFrame() const
SdrTextObj::IsFitToSize() const
SdrTextObj::IsHideContour() const
SdrTextObj::IsTopToBottom() const
SdrTextObj::LoadText(rtl::OUString const&, unsigned short)
SdrTextObj::NbcMirror(Point const&, Point const&)
SdrTextObj::NbcMove(Size const&)
SdrTextObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrTextObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrTextObj::NbcSetEckenradius(long)
SdrTextObj::NbcSetSnapRect(tools::Rectangle const&)
SdrTextObj::NbcSetText(SvStream&, rtl::OUString const&, EETextFormat)
SdrTextObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrTextObj::ReleaseTextLink()
SdrTextObj::ReloadLinkedText(bool)
SdrTextObj::RemoveOutlinerCharacterAttribs(std::vector<unsigned short, std::allocator<unsigned short> > const&)
SdrTextObj::RestoreGeoData(SdrObjGeoData const&)
SdrTextObj::SdrTextObj(SdrModel&)
SdrTextObj::SdrTextObj(SdrModel&, SdrObjKind)
SdrTextObj::SdrTextObj(SdrModel&, SdrObjKind, tools::Rectangle const&)
SdrTextObj::SdrTextObj(SdrModel&, SdrTextObj const&)
SdrTextObj::SdrTextObj(SdrModel&, tools::Rectangle const&)
SdrTextObj::SetNextLinkInChain(SdrTextObj*)
SdrTextObj::SetText(SvStream&, rtl::OUString const&, EETextFormat)
SdrTextObj::SetTextAnimationAllowed(bool)
SdrTextObj::SetTextColumnsNumber(short)
SdrTextObj::SetTextColumnsSpacing(int)
SdrTextObj::SetupOutlinerFormatting(SdrOutliner&, tools::Rectangle&) const
SdrTextObj::TakeCreatePoly(SdrDragStat const&) const
SdrTextObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrTextObj::TakeObjNamePlural() const
SdrTextObj::TakeObjNameSingul() const
SdrTextObj::TakeXorPoly() const
SdrTextObj::UpdateOutlinerFormatting(SdrOutliner&, tools::Rectangle&) const
SdrTextObj::applySpecialDrag(SdrDragStat&)
SdrTextObj::hasSpecialDrag() const
SdrTextObj::impDecomposeAutoFitTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrAutoFitTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeBlockTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrBlockTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeBlockTextPrimitiveDirect(drawinglayer::primitive2d::Primitive2DContainer&, SdrOutliner&, basegfx::B2DHomMatrix const&, basegfx::B2DHomMatrix const&, basegfx::B2DRange const&)
SdrTextObj::impDecomposeChainedTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrChainedTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeContourTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrContourTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposePathTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrPathTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeStretchTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrStretchTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impGetBlinkTextTiming(drawinglayer::animation::AnimationEntryList&) const
SdrTextObj::impGetScrollTextTiming(drawinglayer::animation::AnimationEntryList&, double, double) const
SdrTextObj::impHandleChainingEventsDuringDecomposition(SdrOutliner&) const
SdrTextObj::onChainingEvent()
SdrTextObj::~SdrTextObj()
SdrTextVertAdjustItem::Clone(SfxItemPool*) const
SdrTextVertAdjustItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextVertAdjustItem::GetValueCount() const
SdrTextVertAdjustItem::GetValueTextByPos(unsigned short)
SdrTextVertAdjustItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextVertAdjustItem::dumpAsXml(_xmlTextWriter*) const
SdrUIObject::~SdrUIObject()
SdrUndoAction::SdrUndoAction(SdrModel&)
SdrUndoAction::~SdrUndoAction()
SdrUndoAttrObj::ensureStyleSheetInStyleSheetPool(SfxStyleSheetBasePool&, SfxStyleSheet&)
SdrUndoAttrObj::~SdrUndoAttrObj()
SdrUndoDelPage::CanSdrRepeat(SdrView&) const
SdrUndoDelPage::GetComment() const
SdrUndoDelPage::GetSdrRepeatComment() const
SdrUndoDelPage::Redo()
SdrUndoDelPage::SdrRepeat(SdrView&)
SdrUndoDelPage::SdrUndoDelPage(SdrPage&)
SdrUndoDelPage::Undo()
SdrUndoDelPage::clearFillBitmap()
SdrUndoDelPage::queryFillBitmap(SfxItemSet const&)
SdrUndoDelPage::restoreFillBitmap()
SdrUndoDelPage::~SdrUndoDelPage()
SdrUndoFactory::CreateUndoAttrObject(SdrObject&, bool, bool)
SdrUndoFactory::CreateUndoDeleteObject(SdrObject&, bool)
SdrUndoFactory::CreateUndoGeoObject(SdrObject&)
SdrUndoFactory::CreateUndoObjectSetText(SdrObject&, int)
SdrUndoFactory::CreateUndoObjectStrAttr(SdrObject&, SdrUndoObjStrAttr::ObjStrAttrType, rtl::OUString const&, rtl::OUString const&)
SdrUndoFactory::CreateUndoRemoveObject(SdrObject&)
SdrUndoFactory::CreateUndoReplaceObject(SdrObject&, SdrObject&)
SdrUndoFactory::~SdrUndoFactory()
SdrUndoGeoObj::~SdrUndoGeoObj()
SdrUndoGroup::CanSdrRepeat(SdrView&) const
SdrUndoGroup::GetComment() const
SdrUndoGroup::GetSdrRepeatComment() const
SdrUndoGroup::Redo()
SdrUndoGroup::SdrRepeat(SdrView&)
SdrUndoGroup::SdrUndoGroup(SdrModel&)
SdrUndoGroup::Undo()
SdrUndoGroup::~SdrUndoGroup()
SdrUndoInsertObj::Redo()
SdrUndoInsertObj::Undo()
SdrUndoManager::SetEndTextEditHdl(Link<SdrUndoManager*, void> const&)
SdrUndoManager::~SdrUndoManager()
SdrUndoMoveObj::CanSdrRepeat(SdrView&) const
SdrUndoMoveObj::GetComment() const
SdrUndoMoveObj::GetSdrRepeatComment() const
SdrUndoMoveObj::Redo()
SdrUndoMoveObj::SdrRepeat(SdrView&)
SdrUndoMoveObj::Undo()
SdrUndoMoveObj::~SdrUndoMoveObj()
SdrUndoNewObj::GetComment() const
SdrUndoNewObj::Redo()
SdrUndoNewObj::Undo()
SdrUndoNewPage::GetComment() const
SdrUndoNewPage::Redo()
SdrUndoNewPage::Undo()
SdrUndoObj::GetDescriptionStringForObject(SdrObject const&, TranslateId, bool)
SdrUndoObj::ImpGetDescriptionStr(TranslateId, bool) const
SdrUndoObj::ImpShowPageOfThisObject()
SdrUndoObj::SdrUndoObj(SdrObject&)
SdrUndoObjList::SdrUndoObjList(SdrObject&, bool)
SdrUndoObjList::SetOwner(bool)
SdrUndoObjList::~SdrUndoObjList()
SdrUndoObjSetText::AfterSetText()
SdrUndoObjSetText::IsDifferent() const
SdrUndoObjSetText::SdrUndoObjSetText(SdrObject&, int)
SdrUndoObjSetText::~SdrUndoObjSetText()
SdrUndoObjectLayerChange::Redo()
SdrUndoObjectLayerChange::SdrUndoObjectLayerChange(SdrObject&, o3tl::strong_int<unsigned char, SdrLayerIDTag>, o3tl::strong_int<unsigned char, SdrLayerIDTag>)
SdrUndoObjectLayerChange::Undo()
SdrUndoPageList::SdrUndoPageList(SdrPage&)
SdrUndoPageList::~SdrUndoPageList()
SdrUndoRemoveObj::~SdrUndoRemoveObj()
SdrUndoReplaceObj::SdrUndoReplaceObj(SdrObject&, SdrObject&)
SdrUndoReplaceObj::SetNewOwner(bool)
SdrUndoReplaceObj::SetOldOwner(bool)
SdrUndoReplaceObj::~SdrUndoReplaceObj()
SdrUnoObj::CloneSdrObject(SdrModel&) const
SdrUnoObj::GetObjIdentifier() const
SdrUnoObj::GetTemporaryControlForWindow(vcl::Window const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlContainer>&) const
SdrUnoObj::SdrUnoObj(SdrModel&, SdrUnoObj const&)
SdrUnoObj::SdrUnoObj(SdrModel&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
SdrUnoObj::~SdrUnoObj()
SdrView::BegMark(Point const&, bool, bool)
SdrView::DoMouseEvent(SdrViewEvent const&)
SdrView::GetMarkedRect() const
SdrView::~SdrView()
SdrViewEvent::SdrViewEvent()
SdrViewEvent::~SdrViewEvent()
SdrViewIter::SdrViewIter(SdrObject const*)
SdrViewIter::SdrViewIter(SdrPage const*)
SdrVirtObj::CreateObjectSpecificViewContact()
SdrVirtObj::GetCurrentBoundRect() const
SdrVirtObj::GetLastBoundRect() const
SdrVirtObj::GetLogicRect() const
SdrVirtObj::GetSnapRect() const
SdrVirtObj::Move(Size const&)
SdrVirtObj::NbcMove(Size const&)
SdrVirtObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrVirtObj::NbcSetLogicRect(tools::Rectangle const&)
SdrVirtObj::NbcSetSnapRect(tools::Rectangle const&)
SdrVirtObj::RecalcBoundRect()
SdrVirtObj::RecalcSnapRect()
SdrVirtObj::Resize(Point const&, Fraction const&, Fraction const&, bool)
SdrVirtObj::SdrVirtObj(SdrModel&, SdrObject&)
SdrVirtObj::SdrVirtObj(SdrModel&, SdrVirtObj const&)
SdrVirtObj::SetLogicRect(tools::Rectangle const&)
SdrVirtObj::SetSnapRect(tools::Rectangle const&)
SdrVirtObj::TakeXorPoly() const
SdrVirtObj::~SdrVirtObj()
SdrYesNoItem::Clone(SfxItemPool*) const
SdrYesNoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrYesNoItem::GetValueTextByVal(bool) const
SearchAttrItemList::Clear()
SearchAttrItemList::Put(SfxItemSet const&)
SearchAttrItemList::SearchAttrItemList(SearchAttrItemList const&)
SearchAttrItemList::SearchAttrItemList(SearchAttrItemList&&)
SearchAttrItemList::~SearchAttrItemList()
SelectionEngine::CaptureMouse()
SelectionListenerMultiplexer::SelectionListenerMultiplexer(cppu::OWeakObject&)
SelectionListenerMultiplexer::acquire()
SelectionListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
SelectionListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
SelectionListenerMultiplexer::release()
SelectionListenerMultiplexer::selectionChanged(com::sun::star::awt::grid::GridSelectionEvent const&)
SetExecutionEnvironment
SetSVHelpData(ImplSVHelpData*)
SetSVWinData(ImplSVWinData*)
SfxAbstractDialogFactory::~SfxAbstractDialogFactory()
SfxAllItemSet::Clone(bool, SfxItemPool*) const
SfxAllItemSet::CloneAsValue(bool, SfxItemPool*) const
SfxAllItemSet::SfxAllItemSet(SfxAllItemSet const&)
SfxAllItemSet::SfxAllItemSet(SfxItemPool&)
SfxAllItemSet::SfxAllItemSet(SfxItemSet const&)
SfxApplication::Deinitialize()
SfxApplication::GetBasicContainer()
SfxApplication::GetDdeService() const
SfxApplication::GetFreeIndex()
SfxApplication::GetProgress() const
SfxApplication::GetSidebarTheme()
SfxApplication::GetStaticInterface()
SfxApplication::InitInterface_Impl()
SfxApplication::InitializeDde()
SfxApplication::Invalidate(unsigned short)
SfxApplication::MacroOrganizer(weld::Window*, short)
SfxApplication::RegisterInterface(SfxModule const*)
SfxApplication::ReleaseIndex(unsigned short)
SfxApplication::SaveBasicAndDialogContainer() const
SfxApplication::SfxApplication()
SfxApplication::~SfxApplication()
SfxBaseController::GetViewShell_Impl() const
SfxBaseController::SfxBaseController(SfxViewShell*)
SfxBaseController::~SfxBaseController()
SfxBaseModel::IsInitialized() const
SfxBaseModel::MethodEntryCheck(bool) const
SfxBaseModel::SfxBaseModel(SfxObjectShell*)
SfxBaseModel::changing()
SfxBaseModel::getBoolPropertyValue(rtl::OUString const&)
SfxBaseModel::getTypes()
SfxBaseModel::getUIConfigurationManager2()
SfxBaseModel::impl_getPrintHelper()
SfxBaseModel::queryInterface(com::sun::star::uno::Type const&)
SfxBaseModel::~SfxBaseModel()
SfxBindings::GetStateCache(unsigned short)
SfxBindings::HidePopups(bool)
SfxBindings::Register(SfxControllerItem&)
SfxBindings::Release(SfxControllerItem&)
SfxBindings::SetActiveFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxBindings::SfxBindings()
SfxBindings::~SfxBindings()
SfxBoolItem::Clone(SfxItemPool*) const
SfxBroadcaster::SfxBroadcaster(SfxBroadcaster const&)
SfxBroadcaster::~SfxBroadcaster()
SfxChildWinFactory::SfxChildWinFactory(std::unique_ptr<SfxChildWindow, std::default_delete<SfxChildWindow> > (*)(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*), unsigned short, unsigned short)
SfxChildWindow::CreateChildWindow(unsigned short, vcl::Window*, SfxBindings*, SfxChildWinInfo const&)
SfxChildWindow::Destroy()
SfxChildWindow::GetFrame() const
SfxChildWindow::GetPosition() const
SfxChildWindow::IsHideNotDelete() const
SfxChildWindow::SaveStatus(SfxChildWinInfo const&)
SfxChildWindow::SetFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxChildWindow::SetVisible_Impl(bool)
SfxChildWindow::SfxChildWindow(vcl::Window*, unsigned short)
SfxChildWindow::WantsFocus() const
SfxChildWindow::~SfxChildWindow()
SfxClassificationHelper::GetAbbreviatedBACName(rtl::OUString const&)
SfxClassificationHelper::GetAbbreviatedBACNames()
SfxClassificationHelper::GetBACIdentifiers()
SfxClassificationHelper::GetBACName(SfxClassificationPolicyType) const
SfxClassificationHelper::GetBACNames()
SfxClassificationHelper::GetImpactLevel()
SfxClassificationHelper::GetImpactLevelType()
SfxClassificationHelper::GetImpactScale()
SfxClassificationHelper::GetIntellectualPropertyPartNumbers() const
SfxClassificationHelper::GetIntellectualPropertyParts() const
SfxClassificationHelper::GetMarkings() const
SfxClassificationHelper::HasImpactLevel()
SfxClassificationHelper::IsClassified(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&)
SfxClassificationHelper::PROP_DOCWATERMARK()
SfxClassificationHelper::SfxClassificationHelper(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&, bool)
SfxClassificationHelper::UpdateInfobar(SfxViewFrame&)
SfxClassificationHelper::~SfxClassificationHelper()
SfxCommonPrintOptionsTabPage::DeactivatePage(SfxItemSet*)
SfxCommonPrintOptionsTabPage::FillItemSet(SfxItemSet*)
SfxCommonPrintOptionsTabPage::Reset(SfxItemSet const*)
SfxCommonPrintOptionsTabPage::SfxCommonPrintOptionsTabPage(weld::Container*, weld::DialogController*, SfxItemSet const&)
SfxCommonPrintOptionsTabPage::~SfxCommonPrintOptionsTabPage()
SfxControllerItem::Bind(unsigned short, SfxBindings*)
SfxControllerItem::ChangeItemLink(SfxControllerItem*)
SfxControllerItem::GetItemLink()
SfxControllerItem::GetItemState(SfxPoolItem const*)
SfxControllerItem::IsBound() const
SfxControllerItem::ReBind()
SfxControllerItem::SetId(unsigned short)
SfxControllerItem::SfxControllerItem()
SfxControllerItem::SfxControllerItem(unsigned short, SfxBindings&)
SfxControllerItem::UnBind()
SfxControllerItem::~SfxControllerItem()
SfxDialogController::SfxDialogController(weld::Widget*, rtl::OUString const&, rtl::OString const&)
SfxDispatcher::Execute(unsigned short, SfxCallMode, SfxItemSet const*, SfxItemSet const*, unsigned short)
SfxDispatcher::Execute_(SfxShell&, SfxSlot const&, SfxRequest&, SfxCallMode)
SfxDispatcher::FillState_(SfxSlotServer const&, SfxItemSet&, SfxSlot const*)
SfxDispatcher::FindServer_(unsigned short, SfxSlotServer&)
SfxDispatcher::FlushImpl()
SfxDispatcher::GetShellLevel(SfxShell const&)
SfxDispatcher::GetSlot(rtl::OUString const&)
SfxDispatcher::HideUI(bool)
SfxDispatcher::IsActive(SfxShell const&)
SfxDispatcher::IsAppDispatcher() const
SfxDispatcher::IsFlushed() const
SfxDispatcher::PostMsgHandler(std::unique_ptr<SfxRequest, std::default_delete<SfxRequest> >)
SfxDispatcher::SfxDispatcher()
SfxDispatcher::SfxDispatcher(SfxViewFrame*)
SfxDispatcher::~SfxDispatcher()
SfxDockingWindow::CalcAlignment(Point const&, tools::Rectangle&)
SfxDockingWindow::GetMinOutputSizePixel() const
SfxDockingWindow::SfxDockingWindow(SfxBindings*, SfxChildWindow*, vcl::Window*, long)
SfxDockingWindow::SfxDockingWindow(SfxBindings*, SfxChildWindow*, vcl::Window*, rtl::OString const&, rtl::OUString const&)
SfxDockingWindow::~SfxDockingWindow()
SfxDocumentInfoDialog::PageCreated(rtl::OString const&, SfxTabPage&)
SfxDocumentInfoDialog::SfxDocumentInfoDialog(weld::Window*, SfxItemSet const&)
SfxDocumentTemplates::Copy(unsigned short, unsigned short, unsigned short, unsigned short)
SfxDocumentTemplates::CopyFrom(unsigned short, unsigned short, rtl::OUString&)
SfxDocumentTemplates::CopyTo(unsigned short, unsigned short, rtl::OUString const&) const
SfxDocumentTemplates::Delete(unsigned short, unsigned short)
SfxDocumentTemplates::GetFull(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&)
SfxDocumentTemplates::GetRegionName(unsigned short) const
SfxDocumentTemplates::GetTemplateTargetURLFromComponent(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxDocumentTemplates::InsertDir(rtl::OUString const&, unsigned short)
SfxDocumentTemplates::InsertTemplate(unsigned short, unsigned short, rtl::OUString const&, rtl::OUString const&)
SfxDocumentTemplates::Move(unsigned short, unsigned short, unsigned short, unsigned short)
SfxDocumentTemplates::ReInitFromComponent()
SfxDocumentTemplates::SetName(rtl::OUString const&, unsigned short, unsigned short)
SfxDocumentTemplates::SfxDocumentTemplates()
SfxDocumentTemplates::Update()
SfxDocumentTemplates::~SfxDocumentTemplates()
SfxErrorContext::SfxErrorContext(unsigned short, rtl::OUString const&, weld::Window*, std::pair<TranslateId, ErrCode> const*, std::locale const&)
SfxErrorContext::SfxErrorContext(unsigned short, weld::Window*, std::pair<TranslateId, ErrCode> const*, std::locale const&)
SfxErrorHandler::CreateString(ErrorInfo const*, rtl::OUString&) const
SfxErrorHandler::GetErrorString(ErrCode, rtl::OUString&) const
SfxErrorHandler::SfxErrorHandler(std::pair<TranslateId, ErrCode> const*, ErrCodeArea, ErrCodeArea, std::locale const&)
SfxErrorHandler::~SfxErrorHandler()
SfxEventNamesItem::Clone(SfxItemPool*) const
SfxEventNamesItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxEventNamesItem::operator==(SfxPoolItem const&) const
SfxEventNamesList::operator=(SfxEventNamesList const&)
SfxEventNamesList::~SfxEventNamesList()
SfxExtItemPropertySetInfo::SfxExtItemPropertySetInfo(SfxItemPropertyMapEntry const*, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&)
SfxExtItemPropertySetInfo::getByName(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxExtItemPropertySetInfo::getProperties()
SfxExtItemPropertySetInfo::getPropertyByName(rtl::OUString const&)
SfxExtItemPropertySetInfo::hasPropertyByName(rtl::OUString const&)
SfxExtItemPropertySetInfo::~SfxExtItemPropertySetInfo()
SfxFilter::GetTypeFromStorage(SotStorage const&)
SfxFilter::GetTypeFromStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxFilter::SfxFilter(rtl::OUString const&, rtl::OUString const&)
SfxFilter::SfxFilter(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, SfxFilterFlags, SotClipboardFormatId, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool)
SfxFilter::~SfxFilter()
SfxFilterContainer::GetAnyFilter(SfxFilterFlags, SfxFilterFlags) const
SfxFilterContainer::SfxFilterContainer(rtl::OUString const&)
SfxFilterContainer::~SfxFilterContainer()
SfxFilterMatcher::GetAnyFilter(SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GetFilter4UIName(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GetFilterForProps(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&, SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GuessFilterControlDefaultUI(SfxMedium&, std::shared_ptr<SfxFilter const>&, SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::SfxFilterMatcher()
SfxFilterMatcher::SfxFilterMatcher(rtl::OUString const&)
SfxFilterMatcher::~SfxFilterMatcher()
SfxFilterMatcherIter::SfxFilterMatcherIter(SfxFilterMatcher const&, SfxFilterFlags, SfxFilterFlags)
SfxFlagItem::Clone(SfxItemPool*) const
SfxFlagItem::GetFlagCount() const
SfxFlagItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxFlagItem::SfxFlagItem(unsigned short, unsigned short)
SfxFlagItem::operator==(SfxPoolItem const&) const
SfxFrame::CancelTransfers()
SfxFrame::Create(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxFrame::CreateBlankFrame()
SfxFrame::DoClose()
SfxFrame::GetHasTitle() const
SfxFrame::Resize()
SfxFrame::UpdateDescriptor(SfxObjectShell const*)
SfxFrame::~SfxFrame()
SfxFrameDescriptor::GetArgs()
SfxFrameDescriptor::SetActualURL()
SfxFrameDescriptor::SetURL(rtl::OUString const&)
SfxFrameDescriptor::SfxFrameDescriptor()
SfxFrameDescriptor::~SfxFrameDescriptor()
SfxFrameItem::Clone(SfxItemPool*) const
SfxFrameItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxFrameItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxFrameItem::SfxFrameItem(SfxFrame*)
SfxFrameItem::SfxFrameItem(unsigned short, SfxFrame*)
SfxFrameItem::SfxFrameItem(unsigned short, SfxViewFrame const*)
SfxFrameItem::operator==(SfxPoolItem const&) const
SfxGlobalNameItem::Clone(SfxItemPool*) const
SfxGlobalNameItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxGlobalNameItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxGlobalNameItem::SfxGlobalNameItem()
SfxGlobalNameItem::SfxGlobalNameItem(unsigned short, SvGlobalName const&)
SfxGlobalNameItem::operator==(SfxPoolItem const&) const
SfxGlobalNameItem::~SfxGlobalNameItem()
SfxGrabBagItem::SfxGrabBagItem()
SfxGrabBagItem::SfxGrabBagItem(unsigned short)
SfxGrabBagItem::operator==(SfxPoolItem const&) const
SfxGrabBagItem::~SfxGrabBagItem()
SfxHTMLParser::SfxHTMLParser(SvStream&, bool, SfxMedium*)
SfxHTMLParser::~SfxHTMLParser()
SfxHelp::CreateHelpURL(rtl::OUString const&, rtl::OUString const&)
SfxHelp::GetCurrentModuleIdentifier()
SfxHelp::GetDefaultHelpModule()
SfxHelp::GetHelpText(rtl::OUString const&, vcl::Window const*)
SfxHelp::GetHelpText(rtl::OUString const&, weld::Widget const*)
SfxHelp::SfxHelp()
SfxHelp::~SfxHelp()
SfxHint::~SfxHint()
SfxHyphenRegionItem::Clone(SfxItemPool*) const
SfxHyphenRegionItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxHyphenRegionItem::SfxHyphenRegionItem(unsigned short)
SfxHyphenRegionItem::operator==(SfxPoolItem const&) const
SfxImageItem::Clone(SfxItemPool*) const
SfxImageItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxImageItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxImageItem::SfxImageItem(SfxImageItem const&)
SfxImageItem::SfxImageItem(unsigned short)
SfxImageItem::operator==(SfxPoolItem const&) const
SfxImageItem::~SfxImageItem()
SfxInPlaceClient::GetObjectMiscStatus() const
SfxInPlaceClient::Invalidate()
SfxInPlaceClient::IsObjectUIActive() const
SfxInPlaceClient::IsUIActive() const
SfxInPlaceClient::ResetObject()
SfxInPlaceClient::SetObjectState(int)
SfxInPlaceClient::SfxInPlaceClient(SfxViewShell*, vcl::Window*, long)
SfxInPlaceClient::~SfxInPlaceClient()
SfxInfoBarContainerChild::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SfxInfoBarContainerChild::GetInfo() const
SfxInfoBarContainerChild::RegisterChildWindow(bool, SfxModule*, SfxChildWindowFlags)
SfxInfoBarContainerChild::SfxInfoBarContainerChild(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SfxInfoBarContainerChild::Update()
SfxInfoBarContainerChild::~SfxInfoBarContainerChild()
SfxInfoBarWindow::DoLayout()
SfxInfoBarWindow::Layout()
SfxInfoBarWindow::SetCloseButtonImage()
SfxInfoBarWindow::SetForeAndBackgroundColors(InfobarType)
SfxInfoBarWindow::SfxInfoBarWindow(vcl::Window*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, InfobarType, bool)
SfxInfoBarWindow::Update(rtl::OUString const&, rtl::OUString const&, InfobarType)
SfxInfoBarWindow::dispose()
SfxInfoBarWindow::~SfxInfoBarWindow()
SfxInt64Item::Clone(SfxItemPool*) const
SfxInt64Item::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxInt64Item::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxInt64Item::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxInt64Item::SfxInt64Item(unsigned short, long)
SfxInt64Item::operator==(SfxPoolItem const&) const
SfxInt64Item::~SfxInt64Item()
SfxIntegerListItem::Clone(SfxItemPool*) const
SfxIntegerListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxIntegerListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxIntegerListItem::SfxIntegerListItem()
SfxIntegerListItem::SfxIntegerListItem(unsigned short, com::sun::star::uno::Sequence<int> const&)
SfxIntegerListItem::SfxIntegerListItem(unsigned short, std::vector<int, std::allocator<int> >&&)
SfxIntegerListItem::operator==(SfxPoolItem const&) const
SfxIntegerListItem::~SfxIntegerListItem()
SfxInterface::GetChildWindowCount() const
SfxInterface::GetChildWindowFeature(unsigned short) const
SfxInterface::GetChildWindowId(unsigned short) const
SfxInterface::GetObjectBarCount() const
SfxInterface::GetObjectBarFeature(unsigned short) const
SfxInterface::GetObjectBarFlags(unsigned short) const
SfxInterface::GetObjectBarId(unsigned short) const
SfxInterface::GetObjectBarPos(unsigned short) const
SfxInterface::GetPopupMenuName() const
SfxInterface::GetRealSlot(SfxSlot const*) const
SfxInterface::GetStatusBarId() const
SfxInterface::IsObjectBarVisible(unsigned short) const
SfxInterface::SetSlotMap(SfxSlot&, unsigned short)
SfxInterface::SfxInterface(char const*, bool, o3tl::strong_int<unsigned short, SfxInterfaceIdTag>, SfxInterface const*, SfxSlot&, unsigned short)
SfxInterface::~SfxInterface()
SfxItemIter::SfxItemIter(SfxItemSet const&)
SfxItemIter::~SfxItemIter()
SfxItemPool::BC()
SfxItemPool::CheckItemInPool(SfxPoolItem const*) const
SfxItemPool::FillItemIdRanges_Impl(WhichRangesContainer&) const
SfxItemPool::GetDefaultMetric() const
SfxItemPool::GetIndex_Impl(unsigned short) const
SfxItemPool::GetSize_Impl() const
SfxItemPool::IsItemPoolable(unsigned short) const
SfxItemPool::ReleaseDefaults(std::vector<SfxPoolItem*, std::allocator<SfxPoolItem*> >*, bool)
SfxItemPool::dumpAsXml(_xmlTextWriter*) const
SfxItemPool::~SfxItemPool()
SfxItemPoolCache::SfxItemPoolCache(SfxItemPool*, SfxItemSet const*)
SfxItemPoolCache::SfxItemPoolCache(SfxItemPool*, SfxPoolItem const*)
SfxItemPoolCache::~SfxItemPoolCache()
SfxItemPropertyMap::SfxItemPropertyMap(SfxItemPropertyMap const&)
SfxItemPropertyMap::SfxItemPropertyMap(SfxItemPropertyMapEntry const*)
SfxItemPropertyMap::getProperties() const
SfxItemPropertyMap::getPropertyByName(rtl::OUString const&) const
SfxItemPropertyMap::~SfxItemPropertyMap()
SfxItemPropertySet::~SfxItemPropertySet()
SfxItemPropertySetInfo::SfxItemPropertySetInfo(SfxItemPropertyMap const&)
SfxItemPropertySetInfo::SfxItemPropertySetInfo(SfxItemPropertyMapEntry const*)
SfxItemPropertySetInfo::getProperties()
SfxItemPropertySetInfo::getPropertyByName(rtl::OUString const&)
SfxItemPropertySetInfo::hasPropertyByName(rtl::OUString const&)
SfxItemPropertySetInfo::~SfxItemPropertySetInfo()
SfxItemSet::SfxItemSet(SfxItemPool&)
SfxItemSet::SfxItemSet(SfxItemPool&, SfxItemSet::SfxAllItemSetFlag)
SfxItemSet::SfxItemSet(SfxItemPool&, WhichRangesContainer const&, unsigned long)
SfxItemSet::SfxItemSet(SfxItemPool&, WhichRangesContainer&&)
SfxItemSet::SfxItemSet(SfxItemPool&, WhichRangesContainer&&, SfxPoolItem const**)
SfxItemSet::~SfxItemSet()
SfxItemSetHint::SfxItemSetHint(SfxItemSet const&)
SfxItemSetHint::~SfxItemSetHint()
SfxListUndoAction::CanRepeat(SfxRepeatTarget&) const
SfxListUndoAction::GetComment() const
SfxListUndoAction::GetRepeatComment(SfxRepeatTarget&) const
SfxListUndoAction::GetViewShellId() const
SfxListUndoAction::Merge(SfxUndoAction*)
SfxListUndoAction::Redo()
SfxListUndoAction::RedoWithContext(SfxUndoContext&)
SfxListUndoAction::Repeat(SfxRepeatTarget&)
SfxListUndoAction::SfxListUndoAction(rtl::OUString const&, rtl::OUString const&, unsigned short, o3tl::strong_int<int, ViewShellIdTag>, SfxUndoArray*)
SfxListUndoAction::Undo()
SfxListUndoAction::UndoWithContext(SfxUndoContext&)
SfxListUndoAction::dumpAsXml(_xmlTextWriter*) const
SfxListUndoAction::~SfxListUndoAction()
SfxListener::RemoveBroadcaster_Impl(SfxBroadcaster&)
SfxListener::SfxListener(SfxListener const&)
SfxListener::~SfxListener()
SfxLockBytesItem::Clone(SfxItemPool*) const
SfxLockBytesItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxLockBytesItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxLockBytesItem::SfxLockBytesItem()
SfxLockBytesItem::operator==(SfxPoolItem const&) const
SfxLockBytesItem::~SfxLockBytesItem()
SfxLokHelper::createView(SfxViewFrame*, o3tl::strong_int<int, ViewShellDocIdTag>)
SfxLokHelper::getDefaultLanguage()
SfxLokHelper::getViewOfId(int)
SfxLokHelper::notifyAllViews(int, rtl::OString const&)
SfxLokHelper::notifyContextChange(SfxViewShell const*, rtl::OUString const&, rtl::OUString const&)
SfxLokHelper::notifyWindow(SfxViewShell const*, unsigned int, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<std::pair<rtl::OString const, rtl::OString const>, std::allocator<std::pair<rtl::OString const, rtl::OString const> > > const&)
SfxLokHelper::sendUnoStatus(SfxViewShell const*, SfxPoolItem const*)
SfxMacroInfoItem::Clone(SfxItemPool*) const
SfxMacroInfoItem::CreateDefault()
SfxMacroInfoItem::SfxMacroInfoItem(unsigned short, BasicManager const*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SfxMacroInfoItem::operator==(SfxPoolItem const&) const
SfxMailModel::AddToAddress(rtl::OUString const&)
SfxMailModel::SaveAndSend(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&)
SfxMailModel::SaveDocumentAsFormat(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString&)
SfxMailModel::SfxMailModel()
SfxMailModel::ShowFilterOptionsDialog(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, int&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
SfxMailModel::~SfxMailModel()
SfxMedium::AddToCheckEditableWorkerList()
SfxMedium::CancelCheckEditableEntry(bool)
SfxMedium::CheckCanGetLockfile() const
SfxMedium::CheckFileDate(com::sun::star::util::DateTime const&)
SfxMedium::CloseAndRelease()
SfxMedium::CloseInStream()
SfxMedium::CloseStorage()
SfxMedium::CompleteReOpen()
SfxMedium::CreatePasswordToModifyHash(rtl::OUString const&, bool)
SfxMedium::CreateTempCopyWithExt(rtl::OUString const&)
SfxMedium::CreateTempFile(bool)
SfxMedium::CreateTempFileNoCopy()
SfxMedium::DisableFileSync(bool)
SfxMedium::DisableUnlockWebDAV(bool)
SfxMedium::DocNeedsFileDateCheck() const
SfxMedium::GetCheckEditableMutex() const
SfxMedium::GetContent() const
SfxMedium::GetInitFileDate(bool)
SfxMedium::GetLastStorageCreationState() const
SfxMedium::GetOpenMode() const
SfxMedium::GetVersionList(bool)
SfxMedium::GetVersionList(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxMedium::GetWorkerReloadEvent() const
SfxMedium::IsExpired() const
SfxMedium::IsInCheckIn() const
SfxMedium::IsOpen() const
SfxMedium::IsOriginallyLoadedReadOnly() const
SfxMedium::IsOriginallyReadOnly() const
SfxMedium::IsReadOnly() const
SfxMedium::LockOrigFileOnDemand(bool, bool, bool, o3tl::enumarray<LockFileComponent, rtl::OUString>*)
SfxMedium::ReOpen()
SfxMedium::ResetError()
SfxMedium::SetArgs(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SfxMedium::SetDoneLink(Link<void*, void> const&)
SfxMedium::SetHasEmbeddedObjects(bool)
SfxMedium::SetInCheckIn(bool)
SfxMedium::SetLoadTargetFrame(SfxFrame*)
SfxMedium::SetName(rtl::OUString const&, bool)
SfxMedium::SetOpenMode(StreamMode, bool)
SfxMedium::SetOriginallyReadOnly(bool)
SfxMedium::SetWorkerReloadEvent(ImplSVEvent*)
SfxMedium::SetWritableForUserOnly(rtl::OUString const&)
SfxMedium::SfxMedium()
SfxMedium::SfxMedium(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, rtl::OUString const&, std::shared_ptr<SfxItemSet> const&)
SfxMedium::SfxMedium(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, std::shared_ptr<SfxItemSet> const&)
SfxMedium::SfxMedium(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SfxMedium::SfxMedium(rtl::OUString const&, StreamMode, std::shared_ptr<SfxFilter const>, std::shared_ptr<SfxItemSet> const&)
SfxMedium::SfxMedium(rtl::OUString const&, rtl::OUString const&, StreamMode, std::shared_ptr<SfxFilter const>, std::shared_ptr<SfxItemSet> const&)
SfxMedium::ShowLockFileProblemDialog(SfxMedium::MessageDlg)
SfxMedium::ShowLockedDocumentDialog(o3tl::enumarray<LockFileComponent, rtl::OUString> const&, bool, bool, bool)
SfxMedium::SwitchDocumentToFile(rtl::OUString const&)
SfxMedium::SwitchDocumentToTempFile()
SfxMedium::UnlockFile(bool)
SfxMedium::~SfxMedium()
SfxMetricItem::SfxMetricItem(unsigned short, unsigned int)
SfxModelessDialogController::Init(SfxBindings*, SfxChildWindow*)
SfxModelessDialogController::SfxModelessDialogController(SfxBindings*, SfxChildWindow*, weld::Window*, rtl::OUString const&, rtl::OString const&)
SfxModelessDialogController::~SfxModelessDialogController()
SfxModule::CreateTabPage(unsigned short, weld::Container*, weld::DialogController*, SfxItemSet const&)
SfxModule::GetInterface() const
SfxModule::GetModuleFieldUnit(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxModule::RegisterChildWindow(SfxChildWinFactory const&)
SfxModule::RegisterInterface(SfxModule const*)
SfxModule::RegisterStatusBarControl(SfxStbCtrlFactory const&)
SfxModule::RegisterToolBoxControl(SfxTbxCtrlFactory const&)
SfxModule::SfxModule(rtl::OString const&, std::initializer_list<SfxObjectFactory*>)
SfxModule::~SfxModule()
SfxNavigator::SfxNavigator(SfxBindings*, SfxChildWindow*, vcl::Window*, SfxChildWinInfo*)
SfxNavigatorWrapper::SfxNavigatorWrapper(vcl::Window*, unsigned short)
SfxNewFileDialog::GetSelectedTemplatePos() const
SfxNewFileDialog::SfxNewFileDialog(weld::Window*, SfxNewFileDialogMode)
SfxNewFileDialog::~SfxNewFileDialog()
SfxNewStyleDlg::SfxNewStyleDlg(weld::Widget*, SfxStyleSheetBasePool&, SfxStyleFamily)
SfxNewStyleDlg::~SfxNewStyleDlg()
SfxObjectFactory::GetDocumentServiceName() const
SfxObjectFactory::GetFactoryURL() const
SfxObjectFactory::GetModule() const
SfxObjectFactory::GetViewFactory(unsigned short) const
SfxObjectFactory::GetViewFactoryByViewName(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxObjectFactory::GetViewFactoryCount() const
SfxObjectFactory::SetStandardTemplate(rtl::OUString const&, rtl::OUString const&)
SfxObjectFactory::SetSystemTemplate(rtl::OUString const&, rtl::OUString const&)
SfxObjectFactory::SfxObjectFactory(SvGlobalName const&, rtl::OUString const&)
SfxObjectFactory::~SfxObjectFactory()
SfxObjectItem::Clone(SfxItemPool*) const
SfxObjectItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxObjectItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxObjectItem::SfxObjectItem(unsigned short, SfxShell*)
SfxObjectItem::operator==(SfxPoolItem const&) const
SfxObjectShell::AcceptStateUpdate() const
SfxObjectShell::AddToRecentlyUsedList()
SfxObjectShell::AdjustMacroMode()
SfxObjectShell::AfterSigning(bool, bool)
SfxObjectShell::CheckIsReadonly(bool)
SfxObjectShell::CloseInternal()
SfxObjectShell::CopyStoragesOfUnknownMediaType(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
SfxObjectShell::CreateAndLoadComponent(SfxItemSet const&)
SfxObjectShell::CreateObject(rtl::OUString const&, SfxObjectCreateMode)
SfxObjectShell::DoLoadExternal(SfxMedium*)
SfxObjectShell::DoSave()
SfxObjectShell::ExportTo(SfxMedium&)
SfxObjectShell::FlushDocInfo()
SfxObjectShell::GenerateAndStoreThumbnail(bool, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxObjectShell::GetAPIName() const
SfxObjectShell::GetAutoStyleFilterIndex() const
SfxObjectShell::GetCurrentComponent()
SfxObjectShell::GetFirstPageSize() const
SfxObjectShell::GetMacroCallsSeenWhileLoading() const
SfxObjectShell::GetPreviewBitmap() const
SfxObjectShell::GetServiceNameFromFactory(rtl::OUString const&)
SfxObjectShell::HasValidSignatures() const
SfxObjectShell::InitInterface_Impl()
SfxObjectShell::IsAutoLoadLocked() const
SfxObjectShell::IsOriginallyLoadedReadOnlyMedium() const
SfxObjectShell::IsOriginallyReadOnlyMedium() const
SfxObjectShell::IsReadOnlyMedium() const
SfxObjectShell::LoadOwnFormat(SfxMedium&)
SfxObjectShell::ModifyChanged()
SfxObjectShell::QueryHiddenInformation(HiddenWarningFact, weld::Window*)
SfxObjectShell::ReconnectDdeLinks(SfxObjectShell&)
SfxObjectShell::RegisterInterface(SfxModule const*)
SfxObjectShell::ResetFromTemplate(rtl::OUString const&, rtl::OUString const&)
SfxObjectShell::SaveChildren(bool)
SfxObjectShell::SetMacroCallsSeenWhileLoading()
SfxObjectShell::SetNoName()
SfxObjectShell::SetReadOnly()
SfxObjectShell::SetSecurityOptOpenReadOnly(bool)
SfxObjectShell::SfxObjectShell(SfxModelFlags)
SfxObjectShell::SfxObjectShell(SfxObjectCreateMode)
SfxObjectShell::SignDocumentContent(weld::Window*)
SfxObjectShell::SignScriptingContent(weld::Window*)
SfxObjectShell::SwitchChildrenPersistance(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, bool)
SfxObjectShell::SwitchPersistence(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxObjectShell::TemplateDisconnectionAfterLoad()
SfxObjectShell::UnTrustedScript(rtl::OUString const&)
SfxObjectShell::UpdateDocInfoForSave()
SfxObjectShell::WriteThumbnail(bool, com::sun::star::uno::Reference<com::sun::star::io::XStream> const&)
SfxObjectShell::getPendingInfobars()
SfxObjectShell::isEditDocLocked() const
SfxObjectShell::isPrintLocked() const
SfxObjectShell::isSaveLocked() const
SfxObjectShell::isScriptAccessAllowed(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SfxObjectShell::~SfxObjectShell()
SfxObjectShellItem::Clone(SfxItemPool*) const
SfxObjectShellItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxObjectShellItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxObjectShellItem::operator==(SfxPoolItem const&) const
SfxPasswordDialog::ModifyHdl()
SfxPasswordDialog::SetPasswdText()
SfxPasswordDialog::SfxPasswordDialog(weld::Widget*, rtl::OUString const*)
SfxPointItem::Clone(SfxItemPool*) const
SfxPointItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxPointItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxPointItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxPointItem::SfxPointItem()
SfxPointItem::SfxPointItem(unsigned short, Point const&)
SfxPointItem::operator==(SfxPoolItem const&) const
SfxPoolItem::~SfxPoolItem()
SfxPrinter::Clone() const
SfxPrinter::SfxPrinter(SfxPrinter const&)
SfxPrinter::SfxPrinter(std::unique_ptr<SfxItemSet, std::default_delete<SfxItemSet> >&&)
SfxPrinter::SfxPrinter(std::unique_ptr<SfxItemSet, std::default_delete<SfxItemSet> >&&, JobSetup const&)
SfxPrinter::SfxPrinter(std::unique_ptr<SfxItemSet, std::default_delete<SfxItemSet> >&&, rtl::OUString const&)
SfxPrinter::dispose()
SfxPrinter::~SfxPrinter()
SfxProgress::Resume()
SfxProgress::SfxProgress(SfxObjectShell*, rtl::OUString const&, unsigned int, bool)
SfxProgress::Suspend()
SfxProgress::~SfxProgress()
SfxRangeItem::Clone(SfxItemPool*) const
SfxRangeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxRangeItem::SfxRangeItem(unsigned short, unsigned short, unsigned short)
SfxRangeItem::operator==(SfxPoolItem const&) const
SfxRectangleItem::Clone(SfxItemPool*) const
SfxRectangleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxRectangleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxRectangleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxRectangleItem::SfxRectangleItem()
SfxRectangleItem::SfxRectangleItem(unsigned short, tools::Rectangle const&)
SfxRectangleItem::operator==(SfxPoolItem const&) const
SfxRepeatTarget::~SfxRepeatTarget()
SfxRequest::AllowRecording(bool)
SfxRequest::AllowsRecording() const
SfxRequest::ForgetAllArgs()
SfxRequest::GetCallMode() const
SfxRequest::GetMacroRecorder(SfxViewFrame const*)
SfxRequest::IsCancelled() const
SfxRequest::IsSynchronCall() const
SfxRequest::ReleaseArgs()
SfxRequest::SetSynchronCall(bool)
SfxRequest::SfxRequest(SfxRequest const&)
SfxRequest::SfxRequest(SfxSlot const*, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, SfxCallMode, SfxItemPool&)
SfxRequest::SfxRequest(SfxViewFrame*, unsigned short)
SfxRequest::SfxRequest(unsigned short, SfxCallMode, SfxAllItemSet const&)
SfxRequest::SfxRequest(unsigned short, SfxCallMode, SfxAllItemSet const&, SfxAllItemSet const&)
SfxRequest::SfxRequest(unsigned short, SfxCallMode, SfxItemPool&)
SfxRequest::~SfxRequest()
SfxSetItem::SfxSetItem(SfxSetItem const&, SfxItemPool*)
SfxSetItem::SfxSetItem(unsigned short, SfxItemSet const&)
SfxSetItem::SfxSetItem(unsigned short, SfxItemSet&&)
SfxSetItem::~SfxSetItem()
SfxShell::GetDisableFlags() const
SfxShell::GetRepeatTarget() const
SfxShell::GetVerbs() const
SfxShell::SetDisableFlags(SfxDisableFlags)
SfxShell::SfxShell()
SfxShell::SfxShell(SfxViewShell*)
SfxShell::VerbExec(SfxRequest&)
SfxShell::VerbState(SfxItemSet&)
SfxShell::~SfxShell()
SfxSingleTabDialogController::CreateOutputItemSet(SfxItemSet const&)
SfxSingleTabDialogController::~SfxSingleTabDialogController()
SfxSlotPool::GetGroupCount() const
SfxSlotPool::GetSlotType(unsigned short) const
SfxSlotPool::NextSlot()
SfxSlotPool::RegisterInterface(SfxInterface&)
SfxSlotPool::SeekGroup(unsigned short)
SfxSlotPool::SeekSlot(unsigned short)
SfxSlotPool::SfxSlotPool(SfxSlotPool*)
SfxSlotPool::~SfxSlotPool()
SfxStatusBarControl::CreateControl(unsigned short, unsigned short, StatusBar*, SfxModule const*)
SfxStatusBarControl::SfxStatusBarControl(unsigned short, unsigned short, StatusBar&)
SfxStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SfxStatusBarControl::convertAwtToVCLMouseButtons(short)
SfxStatusBarControl::~SfxStatusBarControl()
SfxStatusForwarder::SfxStatusForwarder(unsigned short, SfxControllerItem&)
SfxStatusForwarder::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SfxStatusListener::SfxStatusListener(com::sun::star::uno::Reference<com::sun::star::frame::XDispatchProvider> const&, unsigned short, rtl::OUString const&)
SfxStatusListener::StateChangedAtStatusListener(SfxItemState, SfxPoolItem const*)
SfxStatusListener::~SfxStatusListener()
SfxStringItem::Clone(SfxItemPool*) const
SfxStringItem::CreateDefault()
SfxStringListItem::Clone(SfxItemPool*) const
SfxStringListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxStringListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxStringListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxStringListItem::SfxStringListItem()
SfxStringListItem::SfxStringListItem(unsigned short, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*)
SfxStringListItem::operator==(SfxPoolItem const&) const
SfxStringListItem::~SfxStringListItem()
SfxStyleDialogController::SfxStyleDialogController(weld::Window*, rtl::OUString const&, rtl::OString const&, SfxStyleSheetBase&)
SfxStyleDialogController::~SfxStyleDialogController()
SfxStyleFamilyItem::SfxStyleFamilyItem(SfxStyleFamily, rtl::OUString const&, rtl::OUString const&, std::pair<TranslateId, SfxStyleSearchBits> const*, std::locale const&)
SfxStyleSheet::SfxStyleSheet(SfxStyleSheet const&)
SfxStyleSheet::SfxStyleSheet(rtl::OUString const&, SfxStyleSheetBasePool const&, SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheet::~SfxStyleSheet()
SfxStyleSheetBase::SfxStyleSheetBase(SfxStyleSheetBase const&)
SfxStyleSheetBase::SfxStyleSheetBase(rtl::OUString const&, SfxStyleSheetBasePool*, SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheetBase::~SfxStyleSheetBase()
SfxStyleSheetBasePool::Add(SfxStyleSheetBase const&)
SfxStyleSheetBasePool::ChangeParent(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&, SfxStyleFamily, bool)
SfxStyleSheetBasePool::Create(rtl::OUString const&, SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheetBasePool::GetIterator_Impl(SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheetBasePool::SfxStyleSheetBasePool(SfxItemPool&)
SfxStyleSheetBasePool::SfxStyleSheetBasePool(SfxStyleSheetBasePool const&)
SfxStyleSheetBasePool::StoreStyleSheet(rtl::Reference<SfxStyleSheetBase> const&)
SfxStyleSheetBasePool::operator+=(SfxStyleSheetBasePool const&)
SfxStyleSheetBasePool::operator=(SfxStyleSheetBasePool const&)
SfxStyleSheetBasePool::~SfxStyleSheetBasePool()
SfxStyleSheetHint::SfxStyleSheetHint(SfxHintId, SfxStyleSheetBase&)
SfxStyleSheetIterator::Find(rtl::OUString const&)
SfxStyleSheetIterator::GetSearchFamily() const
SfxStyleSheetIterator::GetSearchMask() const
SfxStyleSheetIterator::~SfxStyleSheetIterator()
SfxStyleSheetPool::Create(rtl::OUString const&, SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheetPool::SfxStyleSheetPool(SfxItemPool const&)
SfxTabDialogController::LinkStubOkHdl(void*, weld::Button&)
SfxTabDialogController::RemoveStandardButton()
SfxTabDialogController::SavePosAndId()
SfxTabDialogController::SfxTabDialogController(weld::Widget*, rtl::OUString const&, rtl::OString const&, SfxItemSet const*, bool)
SfxTabDialogController::~SfxTabDialogController()
SfxTabDialogItem::Clone(SfxItemPool*) const
SfxTabDialogItem::SfxTabDialogItem(SfxTabDialogItem const&, SfxItemPool*)
SfxTabDialogItem::SfxTabDialogItem(unsigned short, SfxItemSet const&)
SfxTabPage::SfxTabPage(weld::Container*, weld::DialogController*, rtl::OUString const&, rtl::OString const&, SfxItemSet const*)
SfxTabPage::~SfxTabPage()
SfxTemplateItem::Clone(SfxItemPool*) const
SfxTemplateItem::GetFlagCount() const
SfxTemplateItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxTemplateItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxTemplateItem::SfxTemplateItem()
SfxTemplateItem::SfxTemplateItem(unsigned short, rtl::OUString const&, rtl::OUString const&)
SfxTemplateItem::operator==(SfxPoolItem const&) const
SfxTemplateManagerDlg::DefaultTemplateMenuSelectHdl(std::basic_string_view<char, std::char_traits<char> >)
SfxTemplateManagerDlg::ExtensionsActionHdl()
SfxTemplateManagerDlg::ImportActionHdl()
SfxTemplateManagerDlg::OnCategoryDelete()
SfxTemplateManagerDlg::OnCategoryNew()
SfxTemplateManagerDlg::OnCategoryRename()
SfxTemplateManagerDlg::OnTemplateExport()
SfxTemplateManagerDlg::OnTemplateImportCategory(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxTemplateManagerDlg::OnTemplateOpen()
SfxTemplateManagerDlg::OnTemplateState(ThumbnailViewItem const*)
SfxTemplateManagerDlg::SearchUpdate()
SfxTemplateManagerDlg::SfxTemplateManagerDlg(weld::Window*)
SfxTemplateManagerDlg::fillFolderComboBox()
SfxTemplateManagerDlg::getApplicationSpecificSettings()
SfxTemplateManagerDlg::getCurrentApplicationFilter() const
SfxTemplateManagerDlg::getTemplateViewMode() const
SfxTemplateManagerDlg::localMoveTo(unsigned short)
SfxTemplateManagerDlg::readSettings()
SfxTemplateManagerDlg::setDocumentModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SfxTemplateManagerDlg::setTemplateViewMode(TemplateViewMode)
SfxTemplateManagerDlg::updateMenuItems()
SfxTemplateManagerDlg::writeSettings()
SfxTemplateManagerDlg::~SfxTemplateManagerDlg()
SfxTemplateSelectionDlg::SfxTemplateSelectionDlg(weld::Window*)
SfxTemplateSelectionDlg::~SfxTemplateSelectionDlg()
SfxToolBoxControl::CreateControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox*, SfxModule const*)
SfxToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SfxToolBoxControl::Dispatch(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SfxToolBoxControl::RegisterControl(unsigned short, SfxModule*)
SfxToolBoxControl::SfxToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&, bool)
SfxToolBoxControl::~SfxToolBoxControl()
SfxUInt32Item::CreateDefault()
SfxUndoAction::GetDateTime() const
SfxUndoAction::SfxUndoAction()
SfxUndoAction::~SfxUndoAction()
SfxUndoArray::Remove(unsigned long, unsigned long)
SfxUndoArray::~SfxUndoArray()
SfxUndoContext::~SfxUndoContext()
SfxUndoManager::AddUndoListener(SfxUndoListener&)
SfxUndoManager::CanRepeat(SfxRepeatTarget&) const
SfxUndoManager::GetListActionDepth() const
SfxUndoManager::GetRepeatActionComment(SfxRepeatTarget&) const
SfxUndoManager::GetRepeatActionCount() const
SfxUndoManager::ImplAddUndoAction_NoNotify(std::unique_ptr<SfxUndoAction, std::default_delete<SfxUndoAction> >, bool, bool, svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplCheckEmptyActions()
SfxUndoManager::ImplClearCurrentLevel_NoNotify(svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplClearRedo(svl::undo::impl::UndoManagerGuard&, bool)
SfxUndoManager::ImplClearUndo(svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplEnableUndo_Lock(bool)
SfxUndoManager::ImplGetRedoActionCount_Lock(bool) const
SfxUndoManager::ImplIsInListAction_Lock() const
SfxUndoManager::ImplIsUndoEnabled_Lock() const
SfxUndoManager::ImplLeaveListAction(bool, svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplRedo(SfxUndoContext*)
SfxUndoManager::ImplUndo(SfxUndoContext*)
SfxUndoManager::IsEmptyActions() const
SfxUndoManager::LeaveAndMergeListAction()
SfxUndoManager::RemoveUndoListener(SfxUndoListener&)
SfxUndoManager::Repeat(SfxRepeatTarget&)
SfxUndoManager::Reset()
SfxUndoManager::~SfxUndoManager()
SfxUnoAnyItem::Clone(SfxItemPool*) const
SfxUnoAnyItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxUnoAnyItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxUnoAnyItem::SfxUnoAnyItem(unsigned short, com::sun::star::uno::Any const&)
SfxUnoAnyItem::operator==(SfxPoolItem const&) const
SfxUnoFrameItem::Clone(SfxItemPool*) const
SfxUnoFrameItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxUnoFrameItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxUnoFrameItem::SfxUnoFrameItem()
SfxUnoFrameItem::SfxUnoFrameItem(unsigned short, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxUnoFrameItem::operator==(SfxPoolItem const&) const
SfxUnoStyleSheet::SfxUnoStyleSheet(rtl::OUString const&, SfxStyleSheetBasePool const&, SfxStyleFamily, SfxStyleSearchBits)
SfxUnoStyleSheet::getUnoTunnelId()
SfxViewFactory::CreateInstance(SfxViewFrame*, SfxViewShell*)
SfxViewFactory::GetAPIViewName() const
SfxViewFactory::GetLegacyViewName() const
SfxViewFactory::SfxViewFactory(SfxViewShell* (*)(SfxViewFrame*, SfxViewShell*), o3tl::strong_int<unsigned short, SfxInterfaceIdTag>, char const*)
SfxViewFrame::Activate(bool)
SfxViewFrame::ChildWindowState(SfxItemSet&)
SfxViewFrame::Close()
SfxViewFrame::Deactivate(bool)
SfxViewFrame::DoActivate(bool)
SfxViewFrame::DoAdjustPosSizePixel(SfxViewShell*, Point const&, Size const&, bool)
SfxViewFrame::DoDeactivate(bool, SfxViewFrame const*)
SfxViewFrame::Get(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&, SfxObjectShell const*)
SfxViewFrame::GetProgress() const
SfxViewFrame::GetStaticInterface()
SfxViewFrame::InitInterface_Impl()
SfxViewFrame::Notify(SfxBroadcaster&, SfxHint const&)
SfxViewFrame::RegisterInterface(SfxModule const*)
SfxViewFrame::SetModalMode(bool)
SfxViewFrame::SetViewFrame(SfxViewFrame*)
SfxViewFrame::SfxViewFrame(SfxFrame&, SfxObjectShell*)
SfxViewFrame::UpdateInfoBar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&, rtl::OUString const&, InfobarType)
SfxViewFrame::UpdateTitle()
SfxViewFrame::~SfxViewFrame()
SfxViewFrameItem::Clone(SfxItemPool*) const
SfxViewFrameItem::operator==(SfxPoolItem const&) const
SfxViewShell::GetActivePrinter() const
SfxViewShell::GetClipboardNotifier() const
SfxViewShell::GetPrinter(bool)
SfxViewShell::InitInterface_Impl()
SfxViewShell::JumpToMark(rtl::OUString const&)
SfxViewShell::OutplaceActivated(bool)
SfxViewShell::RegisterInterface(SfxModule const*)
SfxViewShell::SetController(SfxBaseController*)
SfxViewShell::SetCurrentDocument() const
SfxViewShell::SetLOKLanguageTag(rtl::OUString const&)
SfxViewShell::SetLOKLocale(rtl::OUString const&)
SfxViewShell::SetMargin(Size const&)
SfxViewShell::SetPrinter(SfxPrinter*, SfxPrinterChangeFlags)
SfxViewShell::SfxViewShell(SfxViewFrame*, SfxViewShellFlags)
SfxViewShell::StartPrint(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, bool, bool)
SfxViewShell::TryContextMenuInterception(Menu&, rtl::OUString const&, com::sun::star::ui::ContextMenuExecuteEvent)
SfxViewShell::isBlockedCommand(rtl::OUString)
SfxViewShell::setBlockedCommandList(char const*)
SfxViewShell::~SfxViewShell()
SfxVisibilityItem::Clone(SfxItemPool*) const
SfxVisibilityItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxVisibilityItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxVisibilityItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxVisibilityItem::operator==(SfxPoolItem const&) const
SfxVoidItem::Clone(SfxItemPool*) const
SfxVoidItem::CreateDefault()
SfxVoidItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxVoidItem::IsVoidItem() const
SfxVoidItem::SfxVoidItem(unsigned short)
SfxVoidItem::dumpAsXml(_xmlTextWriter*) const
SfxVoidItem::operator==(SfxPoolItem const&) const
SfxVoidItem::~SfxVoidItem()
SfxWatermarkItem::Clone(SfxItemPool*) const
SfxWatermarkItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxWatermarkItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxWatermarkItem::SfxWatermarkItem()
SfxWatermarkItem::operator==(SfxPoolItem const&) const
SfxWhichIter::SfxWhichIter(SfxItemSet const&)
ShearPoly(tools::Polygon&, Point const&, double)
ShellResource::GetAutoFormatNameLst_() const
ShellResource::ShellResource()
Simplify(SkPath const&, SkPath*)
Sk3DView::Sk3DView()
Sk3DView::applyToCanvas(SkCanvas*) const
Sk3DView::dotWithNormal(float, float, float) const
Sk3DView::getMatrix(SkMatrix*) const
Sk3DView::restore()
Sk3DView::rotateX(float)
Sk3DView::rotateY(float)
Sk3DView::rotateZ(float)
Sk3DView::save()
Sk3DView::translate(float, float, float)
Sk3DView::~Sk3DView()
SkAndroidCodec::MakeFromCodec(std::unique_ptr<SkCodec, std::default_delete<SkCodec> >)
SkAndroidCodec::MakeFromData(sk_sp<SkData>, SkPngChunkReader*)
SkAndroidCodec::MakeFromStream(std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkPngChunkReader*)
SkAndroidCodec::SkAndroidCodec(SkCodec*)
SkAndroidCodec::computeOutputAlphaType(bool)
SkAndroidCodec::computeOutputColorSpace(SkColorType, sk_sp<SkColorSpace>)
SkAndroidCodec::computeOutputColorType(SkColorType)
SkAndroidCodec::computeSampleSize(SkISize*) const
SkAndroidCodec::getAndroidPixels(SkImageInfo const&, void*, unsigned long)
SkAndroidCodec::getAndroidPixels(SkImageInfo const&, void*, unsigned long, SkAndroidCodec::AndroidOptions const*)
SkAndroidCodec::getSampledDimensions(int) const
SkAndroidCodec::getSampledSubsetDimensions(int, SkIRect const&) const
SkAndroidCodec::getSupportedSubset(SkIRect*) const
SkAndroidCodec::~SkAndroidCodec()
SkAnnotateLinkToDestination(SkCanvas*, SkRect const&, SkData*)
SkAnnotateNamedDestination(SkCanvas*, SkPoint const&, SkData*)
SkAnnotateRectWithURL(SkCanvas*, SkRect const&, SkData*)
SkBitmap::HeapAllocator::allocPixelRef(SkBitmap*)
SkBitmap::SkBitmap()
SkBitmap::SkBitmap(SkBitmap const&)
SkBitmap::SkBitmap(SkBitmap&&)
SkBitmap::allocPixels()
SkBitmap::allocPixels(SkBitmap::Allocator*)
SkBitmap::allocPixels(SkImageInfo const&)
SkBitmap::allocPixels(SkImageInfo const&, unsigned long)
SkBitmap::allocPixelsFlags(SkImageInfo const&, unsigned int)
SkBitmap::erase(unsigned int, SkIRect const&) const
SkBitmap::extractAlpha(SkBitmap*, SkPaint const*, SkBitmap::Allocator*, SkIPoint*) const
SkBitmap::extractSubset(SkBitmap*, SkIRect const&) const
SkBitmap::getBounds(SkIRect*) const
SkBitmap::getBounds(SkRect*) const
SkBitmap::getGenerationID() const
SkBitmap::installMaskPixels(SkMask const&)
SkBitmap::isImmutable() const
SkBitmap::operator=(SkBitmap const&)
SkBitmap::operator=(SkBitmap&&)
SkBitmap::peekPixels(SkPixmap*) const
SkBitmap::pixelRefOrigin() const
SkBitmap::readPixels(SkImageInfo const&, void*, unsigned long, int, int) const
SkBitmap::readPixels(SkPixmap const&, int, int) const
SkBitmap::setAlphaType(SkAlphaType)
SkBitmap::setInfo(SkImageInfo const&, unsigned long)
SkBitmap::setPixelRef(sk_sp<SkPixelRef>, int, int)
SkBitmap::setPixels(void*)
SkBitmap::swap(SkBitmap&)
SkBitmap::tryAllocPixels(SkBitmap::Allocator*)
SkBitmap::tryAllocPixelsFlags(SkImageInfo const&, unsigned int)
SkBitmap::writePixels(SkPixmap const&, int, int)
SkBitmap::~SkBitmap()
SkBlendMode_AsCoeff(SkBlendMode, SkBlendModeCoeff*, SkBlendModeCoeff*)
SkBlendMode_Name(SkBlendMode)
SkBlender::Mode(SkBlendMode)
SkBlenders::Arithmetic(float, float, float, float, bool)
SkBlurMask::ConvertRadiusToSigma(float)
SkBlurMask::ConvertSigmaToRadius(float)
SkCanvas::ImageSetEntry::ImageSetEntry()
SkCanvas::ImageSetEntry::ImageSetEntry(SkCanvas::ImageSetEntry const&)
SkCanvas::ImageSetEntry::ImageSetEntry(sk_sp<SkImage const>, SkRect const&, SkRect const&, float, unsigned int)
SkCanvas::ImageSetEntry::ImageSetEntry(sk_sp<SkImage const>, SkRect const&, SkRect const&, int, float, unsigned int, bool)
SkCanvas::ImageSetEntry::operator=(SkCanvas::ImageSetEntry const&)
SkCanvas::ImageSetEntry::~ImageSetEntry()
SkCanvas::Layer::Layer(sk_sp<SkBaseDevice>, sk_sp<SkImageFilter>, SkPaint const&)
SkCanvas::MCRec::MCRec(SkBaseDevice*)
SkCanvas::MCRec::MCRec(SkCanvas::MCRec const*)
SkCanvas::MCRec::newLayer(sk_sp<SkBaseDevice>, sk_sp<SkImageFilter>, SkPaint const&)
SkCanvas::MCRec::reset(SkBaseDevice*)
SkCanvas::MCRec::~MCRec()
SkCanvas::MakeRasterDirect(SkImageInfo const&, void*, unsigned long, SkSurfaceProps const*)
SkCanvas::SkCanvas()
SkCanvas::SkCanvas(SkBitmap const&)
SkCanvas::SkCanvas(SkBitmap const&, SkSurfaceProps const&)
SkCanvas::SkCanvas(SkBitmap const&, std::unique_ptr<SkRasterHandleAllocator, std::default_delete<SkRasterHandleAllocator> >, void*)
SkCanvas::SkCanvas(SkIRect const&)
SkCanvas::SkCanvas(int, int, SkSurfaceProps const*)
SkCanvas::SkCanvas(sk_sp<SkBaseDevice>)
SkCanvas::aboutToDraw(SkCanvas*, SkPaint const&, SkRect const*, SkCanvas::CheckForOverwrite, SkCanvas::ShaderOverrideOpacity)
SkCanvas::accessTopLayerPixels(SkImageInfo*, unsigned long*, SkIPoint*)
SkCanvas::accessTopRasterHandle() const
SkCanvas::androidFramework_isClipAA() const
SkCanvas::androidFramework_setDeviceClipRestriction(SkIRect const&)
SkCanvas::canDrawBitmapAsSprite(float, float, int, int, SkSamplingOptions const&, SkPaint const&)
SkCanvas::checkForDeferredSave()
SkCanvas::clipRRect(SkRRect const&, SkClipOp, bool)
SkCanvas::clipRegion(SkRegion const&, SkClipOp)
SkCanvas::clipShader(sk_sp<SkShader>, SkClipOp)
SkCanvas::computeDeviceClipBounds(bool) const
SkCanvas::concat(SkM44 const&)
SkCanvas::doSave()
SkCanvas::drawAnnotation(SkRect const&, char const*, SkData*)
SkCanvas::drawArc(SkRect const&, float, float, bool, SkPaint const&)
SkCanvas::drawAtlas(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkCanvas::drawCircle(float, float, float, SkPaint const&)
SkCanvas::drawClippedToSaveBehind(SkPaint const&)
SkCanvas::drawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkCanvas::drawDrawable(SkDrawable*, SkMatrix const*)
SkCanvas::drawDrawable(SkDrawable*, float, float)
SkCanvas::drawGlyphs(int, unsigned short const*, SkPoint const*, SkPoint, SkFont const&, SkPaint const&)
SkCanvas::drawGlyphs(int, unsigned short const*, SkPoint const*, unsigned int const*, int, char const*, SkPoint, SkFont const&, SkPaint const&)
SkCanvas::drawGlyphs(int, unsigned short const*, SkRSXform const*, SkPoint, SkFont const&, SkPaint const&)
SkCanvas::drawImageLattice(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkCanvas::drawImageNine(SkImage const*, SkIRect const&, SkRect const&, SkFilterMode, SkPaint const*)
SkCanvas::drawOval(SkRect const&, SkPaint const&)
SkCanvas::drawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkCanvas::drawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkCanvas::drawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkCanvas::drawRRect(SkRRect const&, SkPaint const&)
SkCanvas::drawRegion(SkRegion const&, SkPaint const&)
SkCanvas::drawRoundRect(SkRect const&, float, float, SkPaint const&)
SkCanvas::drawSimpleText(void const*, unsigned long, SkTextEncoding, float, float, SkFont const&, SkPaint const&)
SkCanvas::drawVertices(SkVertices const*, SkBlendMode, SkPaint const&)
SkCanvas::drawVertices(sk_sp<SkVertices> const&, SkBlendMode, SkPaint const&)
SkCanvas::experimental_DrawEdgeAAImageSet(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkCanvas::experimental_DrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkCanvas::findMarkedCTM(char const*, SkM44*) const
SkCanvas::getBaseLayerSize() const
SkCanvas::getDeviceClipBounds() const
SkCanvas::getLocalClipBounds() const
SkCanvas::getLocalToDevice() const
SkCanvas::getProps(SkSurfaceProps*) const
SkCanvas::getSurface() const
SkCanvas::getTotalMatrix() const
SkCanvas::imageInfo() const
SkCanvas::init(sk_sp<SkBaseDevice>)
SkCanvas::internalConcat44(SkM44 const&)
SkCanvas::internalDrawDeviceWithFilter(SkBaseDevice*, SkBaseDevice*, SkImageFilter const*, SkPaint const&, SkCanvas::DeviceCompatibleWithFilter, float)
SkCanvas::internalDrawPaint(SkPaint const&)
SkCanvas::internalQuickReject(SkRect const&, SkPaint const&, SkMatrix const*)
SkCanvas::internalRestore()
SkCanvas::internalSave()
SkCanvas::internalSaveBehind(SkRect const*)
SkCanvas::internalSaveLayer(SkCanvas::SaveLayerRec const&, SkCanvas::SaveLayerStrategy)
SkCanvas::internalSetMatrix(SkM44 const&)
SkCanvas::internal_private_resetClip()
SkCanvas::isClipEmpty() const
SkCanvas::isClipRect() const
SkCanvas::makeSurface(SkImageInfo const&, SkSurfaceProps const*)
SkCanvas::markCTM(char const*)
SkCanvas::onAccessTopLayerPixels(SkPixmap*)
SkCanvas::onClipPath(SkPath const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkCanvas::onClipRRect(SkRRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkCanvas::onClipRect(SkRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkCanvas::onClipRegion(SkRegion const&, SkClipOp)
SkCanvas::onClipShader(sk_sp<SkShader>, SkClipOp)
SkCanvas::onDiscard()
SkCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkCanvas::onDrawBehind(SkPaint const&)
SkCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkCanvas::onDrawGlyphRunList(SkGlyphRunList const&, SkPaint const&)
SkCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkCanvas::onDrawPaint(SkPaint const&)
SkCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkCanvas::onFlush()
SkCanvas::onGetProps(SkSurfaceProps*) const
SkCanvas::onImageInfo() const
SkCanvas::onNewSurface(SkImageInfo const&, SkSurfaceProps const&)
SkCanvas::onPeekPixels(SkPixmap*)
SkCanvas::onResetClip()
SkCanvas::only_axis_aligned_saveBehind(SkRect const*)
SkCanvas::peekPixels(SkPixmap*)
SkCanvas::predrawNotify(SkRect const*, SkPaint const*, SkCanvas::ShaderOverrideOpacity)
SkCanvas::predrawNotify(bool)
SkCanvas::private_draw_shadow_rec(SkPath const&, SkDrawShadowRec const&)
SkCanvas::quickReject(SkPath const&) const
SkCanvas::quickReject(SkRect const&) const
SkCanvas::readPixels(SkBitmap const&, int, int)
SkCanvas::readPixels(SkImageInfo const&, void*, unsigned long, int, int)
SkCanvas::readPixels(SkPixmap const&, int, int)
SkCanvas::recordingContext()
SkCanvas::resetForNextPicture(SkIRect const&)
SkCanvas::resetMatrix()
SkCanvas::rotate(float)
SkCanvas::rotate(float, float, float)
SkCanvas::saveLayer(SkCanvas::SaveLayerRec const&)
SkCanvas::saveLayer(SkRect const*, SkPaint const*)
SkCanvas::saveLayerAlpha(SkRect const*, unsigned int)
SkCanvas::setMatrix(SkM44 const&)
SkCanvas::setMatrix(SkMatrix const&)
SkCanvas::skew(float, float)
SkCanvas::temporary_internal_getRgnClip(SkRegion*)
SkCanvas::topDevice() const
SkCanvas::translate(float, float)
SkCanvas::validateClip() const
SkCanvas::wouldOverwriteEntireSurface(SkRect const*, SkPaint const*, SkCanvas::ShaderOverrideOpacity) const
SkCanvas::writePixels(SkBitmap const&, int, int)
SkCanvas::writePixels(SkImageInfo const&, void const*, unsigned long, int, int)
SkCanvas::~SkCanvas()
SkCanvasStateUtils::CaptureCanvasState(SkCanvas*)
SkCanvasStateUtils::MakeFromCanvasState(SkCanvasState const*)
SkCanvasStateUtils::ReleaseCanvasState(SkCanvasState*)
SkCodec::MakeFromData(sk_sp<SkData>, SkPngChunkReader*)
SkCodec::MakeFromStream(std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkCodec::Result*, SkPngChunkReader*, SkCodec::SelectionPolicy)
SkCodec::Register(bool (*)(void const*, unsigned long), std::unique_ptr<SkCodec, std::default_delete<SkCodec> > (*)(std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkCodec::Result*))
SkCodec::ResultToString(SkCodec::Result)
SkCodec::SkCodec(SkEncodedInfo&&, skcms_PixelFormat, std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkEncodedOrigin)
SkCodec::applyColorXform(void*, void const*, int) const
SkCodec::conversionSupported(SkImageInfo const&, bool, bool)
SkCodec::fillIncompleteImage(SkImageInfo const&, void*, unsigned long, SkCodec::ZeroInitialized, int, int)
SkCodec::getFrameInfo()
SkCodec::getImage()
SkCodec::getImage(SkImageInfo const&, SkCodec::Options const*)
SkCodec::getPixels(SkImageInfo const&, void*, unsigned long, SkCodec::Options const*)
SkCodec::getScanlines(void*, int, unsigned long)
SkCodec::getYUVAPlanes(SkYUVAPixmaps const&)
SkCodec::handleFrameIndex(SkImageInfo const&, void*, unsigned long, SkCodec::Options const&, SkAndroidCodec*)
SkCodec::initializeColorXform(SkImageInfo const&, SkEncodedInfo::Alpha, bool)
SkCodec::onOutputScanline(int) const
SkCodec::outputScanline(int) const
SkCodec::queryYUVAInfo(SkYUVAPixmapInfo::SupportedDataTypes const&, SkYUVAPixmapInfo*) const
SkCodec::rewindIfNeeded()
SkCodec::skipScanlines(int)
SkCodec::startIncrementalDecode(SkImageInfo const&, void*, unsigned long, SkCodec::Options const*)
SkCodec::startScanlineDecode(SkImageInfo const&, SkCodec::Options const*)
SkCodec::~SkCodec()
SkColorFilter::Deserialize(void const*, unsigned long, SkDeserialProcs const*)
SkColorFilter::asAColorMatrix(float*) const
SkColorFilter::asAColorMode(unsigned int*, SkBlendMode*) const
SkColorFilter::filterColor(unsigned int) const
SkColorFilter::filterColor4f(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*, SkColorSpace*) const
SkColorFilter::isAlphaUnchanged() const
SkColorFilter::makeComposed(sk_sp<SkColorFilter>) const
SkColorFilters::Blend(unsigned int, SkBlendMode)
SkColorFilters::HSLAMatrix(SkColorMatrix const&)
SkColorFilters::HSLAMatrix(float const*)
SkColorFilters::Lerp(float, sk_sp<SkColorFilter>, sk_sp<SkColorFilter>)
SkColorFilters::LinearToSRGBGamma()
SkColorFilters::Matrix(float const*)
SkColorFilters::SRGBToLinearGamma()
SkColorInfo::shiftPerPixel() const
SkColorMatrix::RGBtoYUV(SkYUVColorSpace)
SkColorMatrix::YUVtoRGB(SkYUVColorSpace)
SkColorMatrix::postTranslate(float, float, float, float)
SkColorMatrix::setConcat(SkColorMatrix const&, SkColorMatrix const&)
SkColorMatrix::setIdentity()
SkColorMatrix::setSaturation(float)
SkColorMatrix::setScale(float, float, float, float)
SkColorMatrixFilter::MakeLightingFilter(unsigned int, unsigned int)
SkColorSpace::Deserialize(void const*, unsigned long)
SkColorSpace::Equals(SkColorSpace const*, SkColorSpace const*)
SkColorSpace::Make(skcms_ICCProfile const&)
SkColorSpace::MakeRGB(skcms_TransferFunction const&, skcms_Matrix3x3 const&)
SkColorSpace::MakeSRGB()
SkColorSpace::MakeSRGBLinear()
SkColorSpace::SkColorSpace(skcms_TransferFunction const&, skcms_Matrix3x3 const&)
SkColorSpace::computeLazyDstFields() const
SkColorSpace::gammaCloseToSRGB() const
SkColorSpace::gammaIsLinear() const
SkColorSpace::gamutTransformTo(SkColorSpace const*, skcms_Matrix3x3*) const
SkColorSpace::invTransferFn(skcms_TransferFunction*) const
SkColorSpace::isNumericalTransferFn(skcms_TransferFunction*) const
SkColorSpace::isSRGB() const
SkColorSpace::makeColorSpin() const
SkColorSpace::makeLinearGamma() const
SkColorSpace::makeSRGBGamma() const
SkColorSpace::serialize() const
SkColorSpace::toProfile(skcms_ICCProfile*) const
SkColorSpace::toXYZD50(skcms_Matrix3x3*) const
SkColorSpace::transferFn(float*) const
SkColorSpace::transferFn(skcms_TransferFunction*) const
SkColorSpace::writeToMemory(void*) const
SkColorSpacePrimaries::toXYZD50(skcms_Matrix3x3*) const
SkColorTypeIsAlwaysOpaque(SkColorType)
SkColorTypeValidateAlphaType(SkColorType, SkAlphaType, SkAlphaType*)
SkConic::chopIntoQuadsPOW2(SkPoint*, int) const
SkConic::computeQuadPOW2(float) const
SkContourMeasure::Segment::getScalarT() const
SkContourMeasure::SkContourMeasure(SkTDArray<SkContourMeasure::Segment>&&, SkTDArray<SkPoint>&&, float, bool)
SkContourMeasure::distanceToSegment(float, float*) const
SkContourMeasure::getMatrix(float, SkMatrix*, SkContourMeasure::MatrixFlags) const
SkContourMeasure::getPosTan(float, SkPoint*, SkPoint*) const
SkContourMeasure::getSegment(float, float, SkPath*, bool) const
SkContourMeasureIter::Impl::buildSegments()
SkContourMeasureIter::Impl::compute_conic_segs(SkConic const&, float, int, SkPoint const&, int, SkPoint const&, unsigned int)
SkContourMeasureIter::Impl::compute_cubic_segs(SkPoint const*, float, int, int, unsigned int)
SkContourMeasureIter::Impl::compute_line_seg(SkPoint, SkPoint, float, unsigned int)
SkContourMeasureIter::Impl::compute_quad_segs(SkPoint const*, float, int, int, unsigned int)
SkContourMeasureIter::SkContourMeasureIter()
SkContourMeasureIter::SkContourMeasureIter(SkPath const&, bool, float)
SkContourMeasureIter::next()
SkContourMeasureIter::reset(SkPath const&, bool, float)
SkContourMeasureIter::~SkContourMeasureIter()
SkCornerPathEffect::Make(float)
SkCornerPathEffect::RegisterFlattenables()
SkCubicMap::SkCubicMap(SkPoint, SkPoint)
SkCubicMap::computeFromT(float) const
SkCubicMap::computeYFromX(float) const
SkData::MakeEmpty()
SkData::MakeFromFD(int)
SkData::MakeFromFILE(_IO_FILE*)
SkData::MakeFromFileName(char const*)
SkData::MakeFromMalloc(void const*, unsigned long)
SkData::MakeFromStream(SkStream*, unsigned long)
SkData::MakeSubset(SkData const*, unsigned long, unsigned long)
SkData::MakeUninitialized(unsigned long)
SkData::MakeWithCString(char const*)
SkData::MakeWithCopy(void const*, unsigned long)
SkData::MakeWithProc(void const*, unsigned long, void (*)(void const*, void*), void*)
SkData::NoopReleaseProc(void const*, void*)
SkData::PrivateNewWithCopy(void const*, unsigned long)
SkData::SkData(unsigned long)
SkData::SkData(void const*, unsigned long, void (*)(void const*, void*), void*)
SkData::copyRange(unsigned long, unsigned long, void*) const
SkData::equals(SkData const*) const
SkData::~SkData()
SkDataTable::MakeArrayProc(void const*, unsigned long, int, void (*)(void*), void*)
SkDataTable::MakeCopyArray(void const*, unsigned long, int)
SkDataTable::MakeCopyArrays(void const* const*, unsigned long const*, int)
SkDataTable::MakeEmpty()
SkDataTable::SkDataTable()
SkDataTable::SkDataTable(SkDataTable::Dir const*, int, void (*)(void*), void*)
SkDataTable::SkDataTable(void const*, unsigned long, int, void (*)(void*), void*)
SkDataTable::at(int, unsigned long*) const
SkDataTable::atSize(int) const
SkDataTable::~SkDataTable()
SkDebugf(char const*, ...)
SkDeferredDisplayList::ProgramIterator::ProgramIterator(GrDirectContext*, SkDeferredDisplayList*)
SkDeferredDisplayList::ProgramIterator::compile()
SkDeferredDisplayList::ProgramIterator::done() const
SkDeferredDisplayList::ProgramIterator::next()
SkDeferredDisplayList::ProgramIterator::~ProgramIterator()
SkDeferredDisplayList::SkDeferredDisplayList(SkSurfaceCharacterization const&, sk_sp<GrRenderTargetProxy>, sk_sp<SkDeferredDisplayList::LazyProxyData>)
SkDeferredDisplayList::~SkDeferredDisplayList()
SkDeferredDisplayListRecorder::SkDeferredDisplayListRecorder(SkSurfaceCharacterization const&)
SkDeferredDisplayListRecorder::detach()
SkDeferredDisplayListRecorder::getCanvas()
SkDeferredDisplayListRecorder::init()
SkDeferredDisplayListRecorder::makePromiseTexture(GrBackendFormat const&, int, int, GrMipmapped, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>, sk_sp<SkPromiseImageTexture> (*)(void*), void (*)(void*), void*)
SkDeferredDisplayListRecorder::makeYUVAPromiseTexture(GrYUVABackendTextureInfo const&, sk_sp<SkColorSpace>, sk_sp<SkPromiseImageTexture> (*)(void*), void (*)(void*), void**)
SkDeferredDisplayListRecorder::~SkDeferredDisplayListRecorder()
SkDeque::Iter::Iter()
SkDeque::Iter::Iter(SkDeque const&, SkDeque::Iter::IterStart)
SkDeque::Iter::next()
SkDeque::Iter::prev()
SkDeque::Iter::reset(SkDeque const&, SkDeque::Iter::IterStart)
SkDeque::SkDeque(unsigned long, int)
SkDeque::SkDeque(unsigned long, void*, unsigned long, int)
SkDeque::allocateBlock(int)
SkDeque::freeBlock(SkDeque::Block*)
SkDeque::numBlocksAllocated() const
SkDeque::pop_back()
SkDeque::pop_front()
SkDeque::push_back()
SkDeque::push_front()
SkDeque::~SkDeque()
SkDiscretePathEffect::Make(float, float, unsigned int)
SkDiscretePathEffect::RegisterFlattenables()
SkDocument::SkDocument(SkWStream*)
SkDocument::abort()
SkDocument::beginPage(float, float, SkRect const*)
SkDocument::close()
SkDocument::endPage()
SkDocument::~SkDocument()
SkDrawable::SkDrawable()
SkDrawable::draw(SkCanvas*, SkMatrix const*)
SkDrawable::draw(SkCanvas*, float, float)
SkDrawable::getBounds()
SkDrawable::getGenerationID()
SkDrawable::newPictureSnapshot()
SkDrawable::notifyDrawingChanged()
SkDrawable::onNewPictureSnapshot()
SkDynamicMemoryWStream::SkDynamicMemoryWStream(SkDynamicMemoryWStream&&)
SkDynamicMemoryWStream::bytesWritten() const
SkDynamicMemoryWStream::copyTo(void*) const
SkDynamicMemoryWStream::copyToAndReset(void*)
SkDynamicMemoryWStream::detachAsData()
SkDynamicMemoryWStream::detachAsStream()
SkDynamicMemoryWStream::operator=(SkDynamicMemoryWStream&&)
SkDynamicMemoryWStream::padToAlign4()
SkDynamicMemoryWStream::prependToAndReset(SkDynamicMemoryWStream*)
SkDynamicMemoryWStream::read(void*, unsigned long, unsigned long)
SkDynamicMemoryWStream::reset()
SkDynamicMemoryWStream::write(void const*, unsigned long)
SkDynamicMemoryWStream::writeToAndReset(SkDynamicMemoryWStream*)
SkDynamicMemoryWStream::writeToAndReset(SkWStream*)
SkDynamicMemoryWStream::writeToStream(SkWStream*) const
SkDynamicMemoryWStream::~SkDynamicMemoryWStream()
SkEncodeBitmap(SkBitmap const&, SkEncodedImageFormat, int)
SkEncodeImage(SkWStream*, SkBitmap const&, SkEncodedImageFormat, int)
SkEncodeImage(SkWStream*, SkPixmap const&, SkEncodedImageFormat, int)
SkEncodePixmap(SkPixmap const&, SkEncodedImageFormat, int)
SkEncoder::encodeRows(int)
SkEventTracer::GetInstance()
SkEventTracer::SetInstance(SkEventTracer*)
SkExecutor::GetDefault()
SkExecutor::MakeFIFOThreadPool(int, bool)
SkExecutor::MakeLIFOThreadPool(int, bool)
SkExecutor::SetDefault(SkExecutor*)
SkExecutor::~SkExecutor()
SkFILEStream::SkFILEStream(_IO_FILE*)
SkFILEStream::SkFILEStream(_IO_FILE*, unsigned long)
SkFILEStream::SkFILEStream(_IO_FILE*, unsigned long, unsigned long)
SkFILEStream::SkFILEStream(char const*)
SkFILEStream::SkFILEStream(std::shared_ptr<_IO_FILE>, unsigned long, unsigned long)
SkFILEStream::SkFILEStream(std::shared_ptr<_IO_FILE>, unsigned long, unsigned long, unsigned long)
SkFILEStream::close()
SkFILEStream::getLength() const
SkFILEStream::getPosition() const
SkFILEStream::isAtEnd() const
SkFILEStream::move(long)
SkFILEStream::onDuplicate() const
SkFILEStream::onFork() const
SkFILEStream::read(void*, unsigned long)
SkFILEStream::rewind()
SkFILEStream::seek(unsigned long)
SkFILEStream::~SkFILEStream()
SkFILEWStream::SkFILEWStream(char const*)
SkFILEWStream::bytesWritten() const
SkFILEWStream::flush()
SkFILEWStream::fsync()
SkFILEWStream::write(void const*, unsigned long)
SkFILEWStream::~SkFILEWStream()
SkFlattenable::Deserialize(SkFlattenable::Type, void const*, unsigned long, SkDeserialProcs const*)
SkFlattenable::FactoryToName(sk_sp<SkFlattenable> (*)(SkReadBuffer&))
SkFlattenable::Finalize()
SkFlattenable::NameToFactory(char const*)
SkFlattenable::PrivateInitializer::InitEffects()
SkFlattenable::PrivateInitializer::InitImageFilters()
SkFlattenable::Register(char const*, sk_sp<SkFlattenable> (*)(SkReadBuffer&))
SkFlattenable::RegisterFlattenablesIfNeeded()
SkFlattenable::serialize(SkSerialProcs const*) const
SkFlattenable::serialize(void*, unsigned long, SkSerialProcs const*) const
SkFont::SkFont()
SkFont::SkFont(sk_sp<SkTypeface>)
SkFont::SkFont(sk_sp<SkTypeface>, float)
SkFont::SkFont(sk_sp<SkTypeface>, float, float, float)
SkFont::dump() const
SkFont::getIntercepts(unsigned short const*, int, SkPoint const*, float, float, SkPaint const*) const
SkFont::getMetrics(SkFontMetrics*) const
SkFont::getPath(unsigned short, SkPath*) const
SkFont::getPaths(unsigned short const*, int, void (*)(SkPath const*, SkMatrix const&, void*), void*) const
SkFont::getPos(unsigned short const*, int, SkPoint*, SkPoint) const
SkFont::getTypefaceOrDefault() const
SkFont::getWidthsBounds(unsigned short const*, int, float*, SkRect*, SkPaint const*) const
SkFont::getXPos(unsigned short const*, int, float*, float) const
SkFont::hasSomeAntiAliasing() const
SkFont::makeWithSize(float) const
SkFont::measureText(void const*, unsigned long, SkTextEncoding, SkRect*, SkPaint const*) const
SkFont::operator==(SkFont const&) const
SkFont::refTypefaceOrDefault() const
SkFont::setBaselineSnap(bool)
SkFont::setEmbeddedBitmaps(bool)
SkFont::setForceAutoHinting(bool)
SkFont::setHinting(SkFontHinting)
SkFont::setLinearMetrics(bool)
SkFont::setSubpixel(bool)
SkFont::setupForAsPaths(SkPaint*)
SkFont::textToGlyphs(void const*, unsigned long, SkTextEncoding, unsigned short*, int) const
SkFont::unicharToGlyph(int) const
SkFont::unicharsToGlyphs(int const*, int, unsigned short*) const
SkFontConfigInterface::FontIdentity::readFromMemory(void const*, unsigned long)
SkFontConfigInterface::FontIdentity::writeToMemory(void*) const
SkFontConfigInterface::GetSingletonDirectInterface()
SkFontConfigInterface::RefGlobal()
SkFontConfigInterface::SetGlobal(sk_sp<SkFontConfigInterface>)
SkFontMgr::Factory()
SkFontMgr::RefDefault()
SkFontMgr::countFamilies() const
SkFontMgr::createStyleSet(int) const
SkFontMgr::getFamilyName(int, SkString*) const
SkFontMgr::legacyMakeTypeface(char const*, SkFontStyle) const
SkFontMgr::makeFromData(sk_sp<SkData>, int) const
SkFontMgr::makeFromFile(char const*, int) const
SkFontMgr::makeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, SkFontArguments const&) const
SkFontMgr::makeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, int) const
SkFontMgr::matchFamily(char const*) const
SkFontMgr::matchFamilyStyle(char const*, SkFontStyle const&) const
SkFontMgr::matchFamilyStyleCharacter(char const*, SkFontStyle const&, char const**, int, int) const
SkFontMgr_New_FCI(sk_sp<SkFontConfigInterface>)
SkFontStyleSet::CreateEmpty()
SkFontStyleSet::matchStyleCSS3(SkFontStyle const&)
SkGradientShader::MakeLinear(SkPoint const*, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, unsigned int, SkMatrix const*)
SkGradientShader::MakeRadial(SkPoint const&, float, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, unsigned int, SkMatrix const*)
SkGradientShader::MakeSweep(float, float, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, float, float, unsigned int, SkMatrix const*)
SkGradientShader::MakeSweep(float, float, unsigned int const*, float const*, int, SkTileMode, float, float, unsigned int, SkMatrix const*)
SkGradientShader::MakeTwoPointConical(SkPoint const&, float, SkPoint const&, float, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, unsigned int, SkMatrix const*)
SkGradientShader::MakeTwoPointConical(SkPoint const&, float, SkPoint const&, float, unsigned int const*, float const*, int, SkTileMode, unsigned int, SkMatrix const*)
SkGradientShader::RegisterFlattenables()
SkGraphics::AllowJIT()
SkGraphics::DumpMemoryStatistics(SkTraceMemoryDump*)
SkGraphics::GetFontCacheCountLimit()
SkGraphics::GetFontCacheCountUsed()
SkGraphics::GetFontCacheLimit()
SkGraphics::GetFontCacheUsed()
SkGraphics::GetResourceCacheSingleAllocationByteLimit()
SkGraphics::GetResourceCacheTotalByteLimit()
SkGraphics::GetResourceCacheTotalBytesUsed()
SkGraphics::PurgeAllCaches()
SkGraphics::PurgeFontCache()
SkGraphics::PurgeResourceCache()
SkGraphics::SetFlags(char const*)
SkGraphics::SetFontCacheCountLimit(int)
SkGraphics::SetFontCacheLimit(unsigned long)
SkGraphics::SetImageGeneratorFromEncodedDataFactory(std::unique_ptr<SkImageGenerator, std::default_delete<SkImageGenerator> > (*)(sk_sp<SkData>))
SkGraphics::SetResourceCacheSingleAllocationByteLimit(unsigned long)
SkGraphics::SetResourceCacheTotalByteLimit(unsigned long)
SkHSVToColor(unsigned int, float const*)
SkHighContrastFilter::Make(SkHighContrastConfig const&)
SkImage::MakeBackendTextureFromSkImage(GrDirectContext*, sk_sp<SkImage>, GrBackendTexture*, std::function<void (GrBackendTexture)>*)
SkImage::MakeCrossContextFromPixmap(GrDirectContext*, SkPixmap const&, bool, bool)
SkImage::MakeFromAdoptedTexture(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>)
SkImage::MakeFromCompressedTexture(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkAlphaType, sk_sp<SkColorSpace>, void (*)(void*), void*)
SkImage::MakeFromEncoded(sk_sp<SkData>)
SkImage::MakeFromGenerator(std::unique_ptr<SkImageGenerator, std::default_delete<SkImageGenerator> >)
SkImage::MakeFromPicture(sk_sp<SkPicture>, SkISize const&, SkMatrix const*, SkPaint const*, SkImage::BitDepth, sk_sp<SkColorSpace>)
SkImage::MakeFromRaster(SkPixmap const&, void (*)(void const*, void*), void*)
SkImage::MakeFromTexture(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>, void (*)(void*), void*)
SkImage::MakeFromYUVAPixmaps(GrRecordingContext*, SkYUVAPixmaps const&, GrMipmapped, bool, sk_sp<SkColorSpace>)
SkImage::MakeFromYUVATextures(GrRecordingContext*, GrYUVABackendTextures const&, sk_sp<SkColorSpace>, void (*)(void*), void*)
SkImage::MakePromiseTexture(sk_sp<GrContextThreadSafeProxy>, GrBackendFormat const&, SkISize, GrMipmapped, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>, sk_sp<SkPromiseImageTexture> (*)(void*), void (*)(void*), void*)
SkImage::MakePromiseYUVATexture(sk_sp<GrContextThreadSafeProxy>, GrYUVABackendTextureInfo const&, sk_sp<SkColorSpace>, sk_sp<SkPromiseImageTexture> (*)(void*), void (*)(void*), void**)
SkImage::MakeRasterCopy(SkPixmap const&)
SkImage::MakeRasterData(SkImageInfo const&, sk_sp<SkData>, unsigned long)
SkImage::MakeRasterFromCompressed(sk_sp<SkData>, int, int, SkImage::CompressionType)
SkImage::MakeTextureFromCompressed(GrDirectContext*, sk_sp<SkData>, int, int, SkImage::CompressionType, GrMipmapped, GrProtected)
SkImage::SkImage(SkImageInfo const&, unsigned int)
SkImage::alphaType() const
SkImage::asLegacyBitmap(SkBitmap*, SkImage::LegacyBitmapMode) const
SkImage::asyncRescaleAndReadPixels(SkImageInfo const&, SkIRect const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*) const
SkImage::asyncRescaleAndReadPixelsYUV420(SkYUVColorSpace, sk_sp<SkColorSpace>, SkIRect const&, SkISize const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*) const
SkImage::colorSpace() const
SkImage::colorType() const
SkImage::encodeToData() const
SkImage::flush(GrDirectContext*, GrFlushInfo const&) const
SkImage::flushAndSubmit(GrDirectContext*) const
SkImage::getBackendTexture(bool, GrSurfaceOrigin*) const
SkImage::hasMipmaps() const
SkImage::isAlphaOnly() const
SkImage::isLazyGenerated() const
SkImage::isValid(GrRecordingContext*) const
SkImage::makeColorSpace(sk_sp<SkColorSpace>, GrDirectContext*) const
SkImage::makeColorTypeAndColorSpace(SkColorType, sk_sp<SkColorSpace>, GrDirectContext*) const
SkImage::makeNonTextureImage() const
SkImage::makeRasterImage(SkImage::CachingHint) const
SkImage::makeSubset(SkIRect const&, GrDirectContext*) const
SkImage::makeTextureImage(GrDirectContext*, GrMipmapped, SkBudgeted) const
SkImage::makeWithFilter(GrRecordingContext*, SkImageFilter const*, SkIRect const&, SkIRect const&, SkIRect*, SkIPoint*) const
SkImage::readPixels(GrDirectContext*, SkImageInfo const&, void*, unsigned long, int, int, SkImage::CachingHint) const
SkImage::readPixels(GrDirectContext*, SkPixmap const&, int, int, SkImage::CachingHint) const
SkImage::readPixels(SkImageInfo const&, void*, unsigned long, int, int, SkImage::CachingHint) const
SkImage::readPixels(SkPixmap const&, int, int, SkImage::CachingHint) const
SkImage::refColorSpace() const
SkImage::refEncodedData() const
SkImage::reinterpretColorSpace(sk_sp<SkColorSpace>) const
SkImage::scalePixels(SkPixmap const&, SkSamplingOptions const&, SkImage::CachingHint) const
SkImage::textureSize() const
SkImage::withDefaultMipmaps() const
SkImage::withMipmaps(sk_sp<SkMipmap>) const
SkImageFilter::asAColorFilter(SkColorFilter**) const
SkImageFilter::canComputeFastBounds() const
SkImageFilter::computeFastBounds(SkRect const&) const
SkImageFilter::countInputs() const
SkImageFilter::filterBounds(SkIRect const&, SkMatrix const&, SkImageFilter::MapDirection, SkIRect const*) const
SkImageFilter::getInput(int) const
SkImageFilter::isColorFilterNode(SkColorFilter**) const
SkImageFilter::makeWithLocalMatrix(SkMatrix const&) const
SkImageFilters::AlphaThreshold(SkRegion const&, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Arithmetic(float, float, float, float, bool, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Blend(SkBlendMode, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Blend(sk_sp<SkBlender>, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Blur(float, float, SkTileMode, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::ColorFilter(sk_sp<SkColorFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Compose(sk_sp<SkImageFilter>, sk_sp<SkImageFilter>)
SkImageFilters::Dilate(float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DisplacementMap(SkColorChannel, SkColorChannel, float, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DistantLitDiffuse(SkPoint3 const&, unsigned int, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DistantLitSpecular(SkPoint3 const&, unsigned int, float, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DropShadow(float, float, float, float, unsigned int, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DropShadowOnly(float, float, float, float, unsigned int, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Erode(float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Image(sk_sp<SkImage>, SkRect const&, SkRect const&, SkSamplingOptions const&)
SkImageFilters::Magnifier(SkRect const&, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::MatrixConvolution(SkISize const&, float const*, float, float, SkIPoint const&, SkTileMode, bool, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::MatrixTransform(SkMatrix const&, SkSamplingOptions const&, sk_sp<SkImageFilter>)
SkImageFilters::Merge(sk_sp<SkImageFilter>*, int, SkImageFilters::CropRect const&)
SkImageFilters::Offset(float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Paint(SkPaint const&, SkImageFilters::CropRect const&)
SkImageFilters::Picture(sk_sp<SkPicture>, SkRect const&)
SkImageFilters::PointLitDiffuse(SkPoint3 const&, unsigned int, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::PointLitSpecular(SkPoint3 const&, unsigned int, float, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Shader(sk_sp<SkShader>, SkImageFilters::Dither, SkImageFilters::CropRect const&)
SkImageFilters::SpotLitDiffuse(SkPoint3 const&, SkPoint3 const&, float, float, unsigned int, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::SpotLitSpecular(SkPoint3 const&, SkPoint3 const&, float, float, unsigned int, float, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Tile(SkRect const&, SkRect const&, sk_sp<SkImageFilter>)
SkImageGenerator::MakeFromEncoded(sk_sp<SkData>)
SkImageGenerator::MakeFromEncodedImpl(sk_sp<SkData>)
SkImageGenerator::MakeFromPicture(SkISize const&, sk_sp<SkPicture>, SkMatrix const*, SkPaint const*, SkImage::BitDepth, sk_sp<SkColorSpace>)
SkImageGenerator::SkImageGenerator(SkImageInfo const&, unsigned int)
SkImageGenerator::generateTexture(GrRecordingContext*, SkImageInfo const&, SkIPoint const&, GrMipmapped, GrImageTexGenPolicy)
SkImageGenerator::getPixels(SkImageInfo const&, void*, unsigned long)
SkImageGenerator::getYUVAPlanes(SkYUVAPixmaps const&)
SkImageGenerator::onGenerateTexture(GrRecordingContext*, SkImageInfo const&, SkIPoint const&, GrMipmapped, GrImageTexGenPolicy)
SkImageGenerator::queryYUVAInfo(SkYUVAPixmapInfo::SupportedDataTypes const&, SkYUVAPixmapInfo*) const
SkImageInfo::computeByteSize(unsigned long) const
SkImageInfo::computeOffset(int, int, unsigned long) const
SkJpegEncoder::Encode(SkWStream*, SkPixmap const&, SkJpegEncoder::Options const&)
SkJpegEncoder::Make(SkWStream*, SkPixmap const&, SkJpegEncoder::Options const&)
SkLatticeIter::SkLatticeIter(SkCanvas::Lattice const&, SkRect const&)
SkLatticeIter::SkLatticeIter(int, int, SkIRect const&, SkRect const&)
SkLatticeIter::Valid(int, int, SkCanvas::Lattice const&)
SkLatticeIter::Valid(int, int, SkIRect const&)
SkLatticeIter::mapDstScaleTranslate(SkMatrix const&)
SkLatticeIter::next(SkIRect*, SkRect*, bool*, unsigned int*)
SkLine2DPathEffect::Make(float, SkMatrix const&)
SkLine2DPathEffect::RegisterFlattenables()
SkLumaColorFilter::Make()
SkM44::LookAt(SkV3 const&, SkV3 const&, SkV3 const&)
SkM44::Perspective(float, float, float)
SkM44::RectToRect(SkRect const&, SkRect const&)
SkM44::dump() const
SkM44::getRowMajor(float*) const
SkM44::invert(SkM44*) const
SkM44::map(float, float, float, float) const
SkM44::normalizePerspective()
SkM44::operator==(SkM44 const&) const
SkM44::postTranslate(float, float, float)
SkM44::preConcat(SkMatrix const&)
SkM44::preScale(float, float)
SkM44::preScale(float, float, float)
SkM44::preTranslate(float, float, float)
SkM44::setConcat(SkM44 const&, SkM44 const&)
SkM44::setRotate(SkV3, float)
SkM44::setRotateUnitSinCos(SkV3, float, float)
SkM44::transpose() const
SkMakeCropImageFilter(SkRect const&, sk_sp<SkImageFilter>)
SkMakeImageFromRasterBitmap(SkBitmap const&, SkCopyPixelsMode)
SkMakeMultiPictureDocument(SkWStream*, SkSerialProcs const*, std::function<void (SkPicture const*)>)
SkMakeNullCanvas()
SkMakeRuntimeImageFilter(sk_sp<SkRuntimeEffect>, sk_sp<SkData>, sk_sp<SkImageFilter>)
SkMallocPixelRef::MakeAllocate(SkImageInfo const&, unsigned long)
SkMallocPixelRef::MakeWithData(SkImageInfo const&, unsigned long, sk_sp<SkData>)
SkMaskFilter::Deserialize(void const*, unsigned long, SkDeserialProcs const*)
SkMaskFilter::MakeBlur(SkBlurStyle, float, bool)
SkMaskFilter::RegisterFlattenables()
SkMaskFilter::approximateFilteredBounds(SkRect const&) const
SkMatrix::Affine_vpts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::ComputeInv(float*, float const*, double, bool)
SkMatrix::I()
SkMatrix::Identity_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Identity_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::InvalidMatrix()
SkMatrix::Persp_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Persp_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::Poly2Proc(SkPoint const*, SkMatrix*)
SkMatrix::Poly3Proc(SkPoint const*, SkMatrix*)
SkMatrix::Poly4Proc(SkPoint const*, SkMatrix*)
SkMatrix::RotTrans_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::Rot_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::ScaleTrans_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::Scale_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Scale_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::SetAffineIdentity(float*)
SkMatrix::Trans_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Trans_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::asAffine(float*) const
SkMatrix::computePerspectiveTypeMask() const
SkMatrix::decomposeScale(SkSize*, SkMatrix*) const
SkMatrix::doNormalizePerspective()
SkMatrix::dump() const
SkMatrix::getMaxScale() const
SkMatrix::getMinMaxScales(float*) const
SkMatrix::getMinScale() const
SkMatrix::invertNonIdentity(SkMatrix*) const
SkMatrix::isSimilarity(float) const
SkMatrix::mapHomogeneousPoints(SkPoint3*, SkPoint const*, int) const
SkMatrix::mapHomogeneousPoints(SkPoint3*, SkPoint3 const*, int) const
SkMatrix::mapPoints(SkPoint*, SkPoint const*, int) const
SkMatrix::mapRadius(float) const
SkMatrix::mapRect(SkRect*, SkRect const&, SkApplyPerspectiveClip) const
SkMatrix::mapRectScaleTranslate(SkRect*, SkRect const&) const
SkMatrix::mapVectors(SkPoint*, SkPoint const*, int) const
SkMatrix::mapXY(float, float, SkPoint*) const
SkMatrix::postConcat(SkMatrix const&)
SkMatrix::postIDiv(int, int)
SkMatrix::postRotate(float)
SkMatrix::postRotate(float, float, float)
SkMatrix::postScale(float, float, float, float)
SkMatrix::postSkew(float, float)
SkMatrix::postSkew(float, float, float, float)
SkMatrix::postTranslate(float, float)
SkMatrix::preConcat(SkMatrix const&)
SkMatrix::preRotate(float)
SkMatrix::preRotate(float, float, float)
SkMatrix::preScale(float, float)
SkMatrix::preScale(float, float, float, float)
SkMatrix::preSkew(float, float)
SkMatrix::preSkew(float, float, float, float)
SkMatrix::preTranslate(float, float)
SkMatrix::preservesRightAngles(float) const
SkMatrix::readFromMemory(void const*, unsigned long)
SkMatrix::reset()
SkMatrix::set9(float const*)
SkMatrix::setAffine(float const*)
SkMatrix::setPolyToPoly(SkPoint const*, SkPoint const*, int)
SkMatrix::setRSXform(SkRSXform const&)
SkMatrix::setRectToRect(SkRect const&, SkRect const&, SkMatrix::ScaleToFit)
SkMatrix::setRotate(float, float, float)
SkMatrix::setScale(float, float, float, float)
SkMatrix::setSinCos(float, float)
SkMatrix::setSinCos(float, float, float, float)
SkMatrix::setSkew(float, float)
SkMatrix::setSkew(float, float, float, float)
SkMatrix::writeToMemory(void*) const
SkMatrixPathEffect::Make(SkMatrix const&)
SkMatrixPathEffect::MakeTranslate(float, float)
SkMemoryStream::Make(sk_sp<SkData>)
SkMemoryStream::MakeCopy(void const*, unsigned long)
SkMemoryStream::MakeDirect(void const*, unsigned long)
SkMemoryStream::SkMemoryStream()
SkMemoryStream::SkMemoryStream(sk_sp<SkData>)
SkMemoryStream::SkMemoryStream(unsigned long)
SkMemoryStream::SkMemoryStream(void const*, unsigned long, bool)
SkMemoryStream::getAtPos()
SkMemoryStream::getLength() const
SkMemoryStream::getMemoryBase()
SkMemoryStream::getPosition() const
SkMemoryStream::isAtEnd() const
SkMemoryStream::move(long)
SkMemoryStream::onDuplicate() const
SkMemoryStream::onFork() const
SkMemoryStream::peek(void*, unsigned long) const
SkMemoryStream::read(void*, unsigned long)
SkMemoryStream::rewind()
SkMemoryStream::seek(unsigned long)
SkMemoryStream::setData(sk_sp<SkData>)
SkMemoryStream::setMemory(void const*, unsigned long, bool)
SkMemoryStream::setMemoryOwned(void const*, unsigned long)
SkMemoryStream::skipToAlign4()
SkMergePathEffect::Make(sk_sp<SkPathEffect>, sk_sp<SkPathEffect>, SkPathOp)
SkMultiPictureDocumentRead(SkStreamSeekable*, SkDocumentPage*, int, SkDeserialProcs const*)
SkMultiPictureDocumentReadPageCount(SkStreamSeekable*)
SkNWayCanvas::SkNWayCanvas(int, int)
SkNWayCanvas::addCanvas(SkCanvas*)
SkNWayCanvas::didConcat44(SkM44 const&)
SkNWayCanvas::didScale(float, float)
SkNWayCanvas::didSetM44(SkM44 const&)
SkNWayCanvas::didTranslate(float, float)
SkNWayCanvas::getSaveLayerStrategy(SkCanvas::SaveLayerRec const&)
SkNWayCanvas::onClipPath(SkPath const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkNWayCanvas::onClipRRect(SkRRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkNWayCanvas::onClipRect(SkRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkNWayCanvas::onClipRegion(SkRegion const&, SkClipOp)
SkNWayCanvas::onClipShader(sk_sp<SkShader>, SkClipOp)
SkNWayCanvas::onDoSaveBehind(SkRect const*)
SkNWayCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkNWayCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkNWayCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkNWayCanvas::onDrawBehind(SkPaint const&)
SkNWayCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkNWayCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkNWayCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkNWayCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkNWayCanvas::onDrawGlyphRunList(SkGlyphRunList const&, SkPaint const&)
SkNWayCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkNWayCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkNWayCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkNWayCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkNWayCanvas::onDrawPaint(SkPaint const&)
SkNWayCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkNWayCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkNWayCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkNWayCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkNWayCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkNWayCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkNWayCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkNWayCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkNWayCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkNWayCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkNWayCanvas::onFlush()
SkNWayCanvas::onMarkCTM(char const*)
SkNWayCanvas::onResetClip()
SkNWayCanvas::removeAll()
SkNWayCanvas::removeCanvas(SkCanvas*)
SkNWayCanvas::willRestore()
SkNWayCanvas::willSave()
SkNWayCanvas::~SkNWayCanvas()
SkNoDrawCanvas::SkNoDrawCanvas(SkIRect const&)
SkNoDrawCanvas::SkNoDrawCanvas(int, int)
SkNoDrawCanvas::SkNoDrawCanvas(sk_sp<SkBaseDevice>)
SkNoDrawCanvas::getSaveLayerStrategy(SkCanvas::SaveLayerRec const&)
SkNoDrawCanvas::onDoSaveBehind(SkRect const*)
SkOSFile::Iter::Iter()
SkOSFile::Iter::Iter(char const*, char const*)
SkOSFile::Iter::next(SkString*, bool)
SkOSFile::Iter::reset(char const*, char const*)
SkOSFile::Iter::~Iter()
SkOpBuilder::FixWinding(SkPath*)
SkOpBuilder::ReversePath(SkPath*)
SkOpBuilder::add(SkPath const&, SkPathOp)
SkOpBuilder::reset()
SkOpBuilder::resolve(SkPath*)
SkOrderedFontMgr::SkOrderedFontMgr()
SkOrderedFontMgr::append(sk_sp<SkFontMgr>)
SkOrderedFontMgr::onCountFamilies() const
SkOrderedFontMgr::onCreateStyleSet(int) const
SkOrderedFontMgr::onGetFamilyName(int, SkString*) const
SkOrderedFontMgr::onLegacyMakeTypeface(char const*, SkFontStyle) const
SkOrderedFontMgr::onMakeFromData(sk_sp<SkData>, int) const
SkOrderedFontMgr::onMakeFromFile(char const*, int) const
SkOrderedFontMgr::onMakeFromStreamArgs(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, SkFontArguments const&) const
SkOrderedFontMgr::onMakeFromStreamIndex(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, int) const
SkOrderedFontMgr::onMatchFamily(char const*) const
SkOrderedFontMgr::onMatchFamilyStyle(char const*, SkFontStyle const&) const
SkOrderedFontMgr::onMatchFamilyStyleCharacter(char const*, SkFontStyle const&, char const**, int, int) const
SkOrderedFontMgr::~SkOrderedFontMgr()
SkOverdrawCanvas::SkOverdrawCanvas(SkCanvas*)
SkOverdrawCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkOverdrawCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkOverdrawCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkOverdrawCanvas::onDrawBehind(SkPaint const&)
SkOverdrawCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkOverdrawCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkOverdrawCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkOverdrawCanvas::onDrawGlyphRunList(SkGlyphRunList const&, SkPaint const&)
SkOverdrawCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkOverdrawCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkOverdrawCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkOverdrawCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawPaint(SkPaint const&)
SkOverdrawCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkOverdrawCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkOverdrawCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkOverdrawCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkOverdrawCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkOverdrawCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkOverdrawCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkOverdrawCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkOverdrawColorFilter::MakeWithSkColors(unsigned int const*)
SkPaint::SkPaint()
SkPaint::SkPaint(SkPaint const&)
SkPaint::SkPaint(SkPaint&&)
SkPaint::SkPaint(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*)
SkPaint::asBlendMode() const
SkPaint::canComputeFastBounds() const
SkPaint::doComputeFastBounds(SkRect const&, SkRect*, SkPaint::Style) const
SkPaint::getBlendMode_or(SkBlendMode) const
SkPaint::getFillPath(SkPath const&, SkPath*, SkRect const*, SkMatrix const&) const
SkPaint::getFillPath(SkPath const&, SkPath*, SkRect const*, float) const
SkPaint::isSrcOver() const
SkPaint::nothingToDraw() const
SkPaint::operator=(SkPaint const&)
SkPaint::operator=(SkPaint&&)
SkPaint::refBlender() const
SkPaint::refColorFilter() const
SkPaint::refImageFilter() const
SkPaint::refMaskFilter() const
SkPaint::refPathEffect() const
SkPaint::reset()
SkPaint::setARGB(unsigned int, unsigned int, unsigned int, unsigned int)
SkPaint::setAlphaf(float)
SkPaint::setColor(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*)
SkPaint::setImageFilter(sk_sp<SkImageFilter>)
SkPaint::setMaskFilter(sk_sp<SkMaskFilter>)
SkPaint::setStroke(bool)
SkPaint::~SkPaint()
SkPaintFilterCanvas::SkPaintFilterCanvas(SkCanvas*)
SkPaintFilterCanvas::onAccessTopLayerPixels(SkPixmap*)
SkPaintFilterCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkPaintFilterCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkPaintFilterCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkPaintFilterCanvas::onDrawBehind(SkPaint const&)
SkPaintFilterCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkPaintFilterCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkPaintFilterCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkPaintFilterCanvas::onDrawGlyphRunList(SkGlyphRunList const&, SkPaint const&)
SkPaintFilterCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkPaintFilterCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkPaintFilterCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkPaintFilterCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawPaint(SkPaint const&)
SkPaintFilterCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkPaintFilterCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkPaintFilterCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkPaintFilterCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkPaintFilterCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkPaintFilterCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkPaintFilterCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkPaintFilterCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkPaintFilterCanvas::onGetProps(SkSurfaceProps*) const
SkPaintFilterCanvas::onImageInfo() const
SkPaintFilterCanvas::onNewSurface(SkImageInfo const&, SkSurfaceProps const&)
SkPaintFilterCanvas::onPeekPixels(SkPixmap*)
SkParse::Count(char const*)
SkParse::Count(char const*, char)
SkParse::FindBool(char const*, bool*)
SkParse::FindColor(char const*, unsigned int*)
SkParse::FindHex(char const*, unsigned int*)
SkParse::FindList(char const*, char const*)
SkParse::FindMSec(char const*, unsigned int*)
SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)
SkParse::FindS32(char const*, int*)
SkParse::FindScalar(char const*, float*)
SkParse::FindScalars(char const*, float*, int)
SkParsePath::FromSVGString(char const*, SkPath*)
SkParsePath::ToSVGString(SkPath const&, SkString*, SkParsePath::PathEncoding)
SkPath1DPathEffect::Make(SkPath const&, float, float, SkPath1DPathEffect::Style)
SkPath1DPathEffect::RegisterFlattenables()
SkPath2DPathEffect::Make(SkMatrix const&, SkPath const&)
SkPath2DPathEffect::RegisterFlattenables()
SkPath::Circle(float, float, float, SkPathDirection)
SkPath::ConvertConicToQuads(SkPoint const&, SkPoint const&, SkPoint const&, float, SkPoint*, int)
SkPath::IsCubicDegenerate(SkPoint const&, SkPoint const&, SkPoint const&, SkPoint const&, bool)
SkPath::IsLineDegenerate(SkPoint const&, SkPoint const&, bool)
SkPath::IsQuadDegenerate(SkPoint const&, SkPoint const&, SkPoint const&, bool)
SkPath::Iter::Iter()
SkPath::Iter::Iter(SkPath const&, bool)
SkPath::Iter::autoClose(SkPoint*)
SkPath::Iter::isClosedContour() const
SkPath::Iter::next(SkPoint*)
SkPath::Iter::setPath(SkPath const&, bool)
SkPath::Make(SkPoint const*, int, unsigned char const*, int, float const*, int, SkPathFillType, bool)
SkPath::Oval(SkRect const&, SkPathDirection)
SkPath::Oval(SkRect const&, SkPathDirection, unsigned int)
SkPath::Polygon(SkPoint const*, int, bool, SkPathFillType, bool)
SkPath::RRect(SkRRect const&, SkPathDirection)
SkPath::RRect(SkRRect const&, SkPathDirection, unsigned int)
SkPath::RRect(SkRect const&, float, float, SkPathDirection)
SkPath::RawIter::next(SkPoint*)
SkPath::RawIter::setPath(SkPath const&)
SkPath::Rect(SkRect const&, SkPathDirection, unsigned int)
SkPath::SkPath()
SkPath::SkPath(SkPath const&)
SkPath::SkPath(sk_sp<SkPathRef>, SkPathFillType, bool, SkPathConvexity, SkPathFirstDirection)
SkPath::addArc(SkRect const&, float, float)
SkPath::addCircle(float, float, float, SkPathDirection)
SkPath::addOval(SkRect const&, SkPathDirection)
SkPath::addOval(SkRect const&, SkPathDirection, unsigned int)
SkPath::addPath(SkPath const&, SkMatrix const&, SkPath::AddPathMode)
SkPath::addPath(SkPath const&, float, float, SkPath::AddPathMode)
SkPath::addPoly(SkPoint const*, int, bool)
SkPath::addRRect(SkRRect const&, SkPathDirection)
SkPath::addRRect(SkRRect const&, SkPathDirection, unsigned int)
SkPath::addRoundRect(SkRect const&, float const*, SkPathDirection)
SkPath::addRoundRect(SkRect const&, float, float, SkPathDirection)
SkPath::approximateBytesUsed() const
SkPath::arcTo(SkRect const&, float, float, bool)
SkPath::arcTo(float, float, float, SkPath::ArcSize, SkPathDirection, float, float)
SkPath::arcTo(float, float, float, float, float)
SkPath::computeConvexity() const
SkPath::computeTightBounds() const
SkPath::conicTo(float, float, float, float, float)
SkPath::conservativelyContainsRect(SkRect const&) const
SkPath::contains(float, float) const
SkPath::copyFields(SkPath const&)
SkPath::countPoints() const
SkPath::countVerbs() const
SkPath::dirtyAfterEdit()
SkPath::dump(SkWStream*, bool) const
SkPath::dumpArrays(SkWStream*, bool) const
SkPath::getConvexity() const
SkPath::getFirstDirection() const
SkPath::getGenerationID() const
SkPath::getLastPt(SkPoint*) const
SkPath::getPoint(int) const
SkPath::getPoints(SkPoint*, int) const
SkPath::getVerbs(unsigned char*, int) const
SkPath::interpolate(SkPath const&, float, SkPath*) const
SkPath::isConvexityAccurate() const
SkPath::isInterpolatable(SkPath const&) const
SkPath::isLastContourClosed() const
SkPath::isLine(SkPoint*) const
SkPath::isOval(SkRect*) const
SkPath::isRRect(SkRRect*) const
SkPath::isRect(SkRect*, bool*, SkPathDirection*) const
SkPath::isValidImpl() const
SkPath::isZeroLengthSincePoint(int) const
SkPath::operator=(SkPath const&)
SkPath::quadTo(float, float, float, float)
SkPath::rArcTo(float, float, float, SkPath::ArcSize, SkPathDirection, float, float)
SkPath::rConicTo(float, float, float, float, float)
SkPath::rCubicTo(float, float, float, float, float, float)
SkPath::rLineTo(float, float)
SkPath::rMoveTo(float, float)
SkPath::rQuadTo(float, float, float, float)
SkPath::readAsRRect(void const*, unsigned long)
SkPath::readFromMemory(void const*, unsigned long)
SkPath::readFromMemory_EQ4Or5(void const*, unsigned long)
SkPath::reset()
SkPath::resetFields()
SkPath::reverseAddPath(SkPath const&)
SkPath::reversePathTo(SkPath const&)
SkPath::rewind()
SkPath::serialize() const
SkPath::setConvexity(SkPathConvexity)
SkPath::setConvexity(SkPathConvexity) const
SkPath::setFirstDirection(SkPathFirstDirection) const
SkPath::setLastPt(float, float)
SkPath::setPt(int, float, float)
SkPath::shrinkToFit()
SkPath::swap(SkPath&)
SkPath::transform(SkMatrix const&, SkPath*, SkApplyPerspectiveClip) const
SkPath::writeToMemory(void*) const
SkPath::writeToMemoryAsRRect(void*) const
SkPath::~SkPath()
SkPathBuilder::SkPathBuilder()
SkPathBuilder::SkPathBuilder(SkPath const&)
SkPathBuilder::SkPathBuilder(SkPathFillType)
SkPathBuilder::addArc(SkRect const&, float, float)
SkPathBuilder::addCircle(float, float, float, SkPathDirection)
SkPathBuilder::addOval(SkRect const&, SkPathDirection, unsigned int)
SkPathBuilder::addPath(SkPath const&)
SkPathBuilder::addPolygon(SkPoint const*, int, bool)
SkPathBuilder::addRRect(SkRRect const&, SkPathDirection, unsigned int)
SkPathBuilder::addRect(SkRect const&, SkPathDirection, unsigned int)
SkPathBuilder::arcTo(SkPoint, SkPoint, float)
SkPathBuilder::arcTo(SkPoint, float, SkPathBuilder::ArcSize, SkPathDirection, SkPoint)
SkPathBuilder::arcTo(SkRect const&, float, float, bool)
SkPathBuilder::close()
SkPathBuilder::computeBounds() const
SkPathBuilder::conicTo(SkPoint, SkPoint, float)
SkPathBuilder::cubicTo(SkPoint, SkPoint, SkPoint)
SkPathBuilder::detach()
SkPathBuilder::incReserve(int, int)
SkPathBuilder::lineTo(SkPoint)
SkPathBuilder::make(sk_sp<SkPathRef>) const
SkPathBuilder::moveTo(SkPoint)
SkPathBuilder::offset(float, float)
SkPathBuilder::operator=(SkPath const&)
SkPathBuilder::polylineTo(SkPoint const*, int)
SkPathBuilder::privateReverseAddPath(SkPath const&)
SkPathBuilder::quadTo(SkPoint, SkPoint)
SkPathBuilder::rConicTo(SkPoint, SkPoint, float)
SkPathBuilder::rCubicTo(SkPoint, SkPoint, SkPoint)
SkPathBuilder::rLineTo(SkPoint)
SkPathBuilder::rQuadTo(SkPoint, SkPoint)
SkPathBuilder::reset()
SkPathBuilder::snapshot() const
SkPathBuilder::~SkPathBuilder()
SkPathEffect::Deserialize(void const*, unsigned long, SkDeserialProcs const*)
SkPathEffect::MakeCompose(sk_sp<SkPathEffect>, sk_sp<SkPathEffect>)
SkPathEffect::MakeSum(sk_sp<SkPathEffect>, sk_sp<SkPathEffect>)
SkPathEffect::asADash(SkPathEffect::DashInfo*) const
SkPathEffect::filterPath(SkPath*, SkPath const&, SkStrokeRec*, SkRect const*) const
SkPathEffect::filterPath(SkPath*, SkPath const&, SkStrokeRec*, SkRect const*, SkMatrix const&) const
SkPathEffect::needsCTM() const
SkPathMeasure::SkPathMeasure()
SkPathMeasure::SkPathMeasure(SkPath const&, bool, float)
SkPathMeasure::getLength()
SkPathMeasure::getMatrix(float, SkMatrix*, SkPathMeasure::MatrixFlags)
SkPathMeasure::getPosTan(float, SkPoint*, SkPoint*)
SkPathMeasure::getSegment(float, float, SkPath*, bool)
SkPathMeasure::isClosed()
SkPathMeasure::nextContour()
SkPathMeasure::setPath(SkPath const*, bool)
SkPathMeasure::~SkPathMeasure()
SkPathRef::CreateEmpty()
SkPathRef::CreateTransformedCopy(sk_sp<SkPathRef>*, SkPathRef const&, SkMatrix const&)
SkPathRef::Editor::Editor(sk_sp<SkPathRef>*, int, int)
SkPathRef::Iter::Iter()
SkPathRef::Iter::Iter(SkPathRef const&)
SkPathRef::Iter::next(SkPoint*)
SkPathRef::Iter::peek() const
SkPathRef::Iter::setPathRef(SkPathRef const&)
SkPathRef::Rewind(sk_sp<SkPathRef>*)
SkPathRef::addGenIDChangeListener(sk_sp<SkIDChangeListener>)
SkPathRef::approximateBytesUsed() const
SkPathRef::callGenIDChangeListeners()
SkPathRef::copy(SkPathRef const&, int, int)
SkPathRef::dataMatchesVerbs() const
SkPathRef::genID() const
SkPathRef::genIDChangeListenerCount()
SkPathRef::getRRect() const
SkPathRef::growForRepeatedVerb(int, int, float**)
SkPathRef::growForVerb(int, float)
SkPathRef::growForVerbsInPath(SkPathRef const&)
SkPathRef::interpolate(SkPathRef const&, float, SkPathRef*) const
SkPathRef::isValid() const
SkPathRef::operator==(SkPathRef const&) const
SkPathRef::writeSize() const
SkPathRef::writeToBuffer(SkWBuffer*) const
SkPathRef::~SkPathRef()
SkPerlinNoiseShader::MakeFractalNoise(float, float, int, float, SkISize const*)
SkPerlinNoiseShader::MakeTurbulence(float, float, int, float, SkISize const*)
SkPerlinNoiseShader::RegisterFlattenables()
SkPicture::BufferIsSKP(SkReadBuffer*, SkPictInfo*)
SkPicture::Forwardport(SkPictInfo const&, SkPictureData const*, SkReadBuffer*)
SkPicture::IsValidPictInfo(SkPictInfo const&)
SkPicture::MakeFromData(SkData const*, SkDeserialProcs const*)
SkPicture::MakeFromData(void const*, unsigned long, SkDeserialProcs const*)
SkPicture::MakeFromStream(SkStream*, SkDeserialProcs const*)
SkPicture::MakeFromStream(SkStream*, SkDeserialProcs const*, SkTypefacePlayback*)
SkPicture::MakePlaceholder(SkRect)
SkPicture::SkPicture()
SkPicture::StreamIsSKP(SkStream*, SkPictInfo*)
SkPicture::backport() const
SkPicture::createHeader() const
SkPicture::makeShader(SkTileMode, SkTileMode, SkFilterMode, SkMatrix const*, SkRect const*) const
SkPicture::serialize(SkSerialProcs const*) const
SkPicture::serialize(SkWStream*, SkSerialProcs const*) const
SkPicture::serialize(SkWStream*, SkSerialProcs const*, SkRefCntSet*, bool) const
SkPicture::~SkPicture()
SkPictureRecorder::SkPictureRecorder()
SkPictureRecorder::beginRecording(SkRect const&, SkBBHFactory*)
SkPictureRecorder::beginRecording(SkRect const&, sk_sp<SkBBoxHierarchy>)
SkPictureRecorder::finishRecordingAsDrawable()
SkPictureRecorder::finishRecordingAsPicture()
SkPictureRecorder::finishRecordingAsPictureWithCull(SkRect const&)
SkPictureRecorder::getRecordingCanvas()
SkPictureRecorder::partialReplay(SkCanvas*) const
SkPictureRecorder::~SkPictureRecorder()
SkPixelRef::SkPixelRef(int, int, void*, unsigned long)
SkPixelRef::addGenIDChangeListener(sk_sp<SkIDChangeListener>)
SkPixelRef::android_only_reset(int, int, unsigned long)
SkPixelRef::callGenIDChangeListeners()
SkPixelRef::getGenerationID() const
SkPixelRef::needsNewGenID()
SkPixelRef::notifyPixelsChanged()
SkPixelRef::restoreMutability()
SkPixelRef::setImmutable()
SkPixelRef::setImmutableWithID(unsigned int)
SkPixelRef::setTemporarilyImmutable()
SkPixelRef::~SkPixelRef()
SkPixmap::computeIsOpaque() const
SkPixmap::erase(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*, SkIRect const*) const
SkPixmap::erase(unsigned int, SkIRect const&) const
SkPixmap::extractSubset(SkPixmap*, SkIRect const&) const
SkPixmap::getAlphaf(int, int) const
SkPixmap::readPixels(SkImageInfo const&, void*, unsigned long, int, int) const
SkPixmap::reset()
SkPixmap::reset(SkImageInfo const&, void const*, unsigned long)
SkPixmap::reset(SkMask const&)
SkPixmap::scalePixels(SkPixmap const&, SkSamplingOptions const&) const
SkPixmap::setColorSpace(sk_sp<SkColorSpace>)
SkPngEncoder::Encode(SkWStream*, SkPixmap const&, SkPngEncoder::Options const&)
SkPngEncoder::Make(SkWStream*, SkPixmap const&, SkPngEncoder::Options const&)
SkPngEncoder::SkPngEncoder(std::unique_ptr<SkPngEncoderMgr, std::default_delete<SkPngEncoderMgr> >, SkPixmap const&)
SkPngEncoder::onEncodeRows(int)
SkPngEncoder::~SkPngEncoder()
SkPoint3::Length(float, float, float)
SkPoint3::normalize()
SkPoint::Length(float, float)
SkPoint::Normalize(SkPoint*)
SkPoint::normalize()
SkPoint::scale(float, SkPoint*) const
SkPoint::setLength(float)
SkPoint::setLength(float, float, float)
SkPoint::setNormalize(float, float)
SkPreMultiplyColor(unsigned int)
SkPromiseImageTexture::SkPromiseImageTexture(GrBackendTexture const&)
SkPromiseImageTexture::addKeyToInvalidate(unsigned int, GrUniqueKey const&)
SkPromiseImageTexture::~SkPromiseImageTexture()
SkRGBA4f<(SkAlphaType)3>::toSkColor() const
SkRGBToHSV(unsigned int, unsigned int, unsigned int, float*)
SkRRect::AreRectAndRadiiValid(SkRect const&, SkPoint const*)
SkRRect::checkCornerContainment(float, float) const
SkRRect::computeType()
SkRRect::contains(SkRect const&) const
SkRRect::dump(bool) const
SkRRect::dumpToString(bool) const
SkRRect::initializeRect(SkRect const&)
SkRRect::inset(float, float, SkRRect*) const
SkRRect::isValid() const
SkRRect::readFromMemory(void const*, unsigned long)
SkRRect::scaleRadii()
SkRRect::setNinePatch(SkRect const&, float, float, float, float)
SkRRect::setOval(SkRect const&)
SkRRect::setRectRadii(SkRect const&, SkPoint const*)
SkRRect::setRectXY(SkRect const&, float, float)
SkRRect::transform(SkMatrix const&, SkRRect*) const
SkRRect::writeToMemory(void*) const
SkRTreeFactory::operator()() const
SkRasterHandleAllocator::MakeCanvas(std::unique_ptr<SkRasterHandleAllocator, std::default_delete<SkRasterHandleAllocator> >, SkImageInfo const&, SkRasterHandleAllocator::Rec const*)
SkRasterHandleAllocator::allocBitmap(SkImageInfo const&, SkBitmap*)
SkRect::dump(bool) const
SkRect::intersect(SkRect const&)
SkRect::intersect(SkRect const&, SkRect const&)
SkRect::join(SkRect const&)
SkRect::setBoundsNoCheck(SkPoint const*, int)
SkRect::toQuad(SkPoint*) const
SkRegion::BuildRectRuns(SkIRect const&, int*)
SkRegion::Cliperator::Cliperator(SkRegion const&, SkIRect const&)
SkRegion::Cliperator::next()
SkRegion::Iterator::Iterator(SkRegion const&)
SkRegion::Iterator::reset(SkRegion const&)
SkRegion::Iterator::rewind()
SkRegion::Oper(SkRegion const&, SkRegion const&, SkRegion::Op, SkRegion*)
SkRegion::RunsAreARect(int const*, int, SkIRect*)
SkRegion::SkRegion()
SkRegion::SkRegion(SkIRect const&)
SkRegion::SkRegion(SkRegion const&)
SkRegion::Spanerator::Spanerator(SkRegion const&, int, int, int)
SkRegion::Spanerator::next(int*, int*)
SkRegion::allocateRuns(SkRegion::RunHead const&)
SkRegion::allocateRuns(int)
SkRegion::allocateRuns(int, int, int)
SkRegion::computeRegionComplexity() const
SkRegion::contains(SkIRect const&) const
SkRegion::contains(SkRegion const&) const
SkRegion::contains(int, int) const
SkRegion::count_runtype_values(int*, int*) const
SkRegion::freeRuns()
SkRegion::getBoundaryPath(SkPath*) const
SkRegion::getRuns(int*, int*) const
SkRegion::intersects(SkRegion const&) const
SkRegion::isValid() const
SkRegion::op(SkIRect const&, SkRegion const&, SkRegion::Op)
SkRegion::op(SkRegion const&, SkRegion const&, SkRegion::Op)
SkRegion::operator=(SkRegion const&)
SkRegion::operator==(SkRegion const&) const
SkRegion::readFromMemory(void const*, unsigned long)
SkRegion::setPath(SkPath const&, SkRegion const&)
SkRegion::setRect(SkIRect const&)
SkRegion::setRegion(SkRegion const&)
SkRegion::setRuns(int*, int)
SkRegion::swap(SkRegion&)
SkRegion::translate(int, int, SkRegion*) const
SkRegion::writeToMemory(void*) const
SkRegion::~SkRegion()
SkRemotableFontIdentitySet::NewEmpty()
SkRemotableFontIdentitySet::SkRemotableFontIdentitySet(int, SkFontIdentity**)
SkRuntimeBlendBuilder::SkRuntimeBlendBuilder(sk_sp<SkRuntimeEffect>)
SkRuntimeBlendBuilder::makeBlender()
SkRuntimeBlendBuilder::~SkRuntimeBlendBuilder()
SkRuntimeEffect::ChildPtr::blender() const
SkRuntimeEffect::ChildPtr::colorFilter() const
SkRuntimeEffect::ChildPtr::shader() const
SkRuntimeEffect::ChildPtr::type() const
SkRuntimeEffect::MakeForBlender(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >)
SkRuntimeEffect::MakeForBlender(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeForColorFilter(SkString, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeForColorFilter(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >)
SkRuntimeEffect::MakeForColorFilter(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeForShader(SkString, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeForShader(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >)
SkRuntimeEffect::MakeForShader(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeFromDSL(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&, SkSL::ProgramKind)
SkRuntimeEffect::MakeFromSource(SkString, SkRuntimeEffect::Options const&, SkSL::ProgramKind)
SkRuntimeEffect::MakeInternal(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&, SkSL::ProgramKind)
SkRuntimeEffect::RegisterFlattenables()
SkRuntimeEffect::SkRuntimeEffect(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&, SkSL::FunctionDefinition const&, std::vector<SkRuntimeEffect::Uniform, std::allocator<SkRuntimeEffect::Uniform> >&&, std::vector<SkRuntimeEffect::Child, std::allocator<SkRuntimeEffect::Child> >&&, std::vector<SkSL::SampleUsage, std::allocator<SkSL::SampleUsage> >&&, unsigned int)
SkRuntimeEffect::Uniform::sizeInBytes() const
SkRuntimeEffect::findChild(char const*) const
SkRuntimeEffect::findUniform(char const*) const
SkRuntimeEffect::getFilterColorProgram()
SkRuntimeEffect::makeColorFilter(sk_sp<SkData>) const
SkRuntimeEffect::makeColorFilter(sk_sp<SkData>, SkSpan<SkRuntimeEffect::ChildPtr>) const
SkRuntimeEffect::makeColorFilter(sk_sp<SkData>, sk_sp<SkColorFilter>*, unsigned long) const
SkRuntimeEffect::makeImage(GrRecordingContext*, sk_sp<SkData>, SkSpan<SkRuntimeEffect::ChildPtr>, SkMatrix const*, SkImageInfo, bool) const
SkRuntimeEffect::makeShader(sk_sp<SkData>, SkSpan<SkRuntimeEffect::ChildPtr>, SkMatrix const*, bool) const
SkRuntimeEffect::makeShader(sk_sp<SkData>, sk_sp<SkShader>*, unsigned long, SkMatrix const*, bool) const
SkRuntimeEffect::source[abi:cxx11]() const
SkRuntimeEffect::uniformSize() const
SkRuntimeEffect::~SkRuntimeEffect()
SkRuntimeShaderBuilder::SkRuntimeShaderBuilder(sk_sp<SkRuntimeEffect>)
SkRuntimeShaderBuilder::makeImage(GrRecordingContext*, SkMatrix const*, SkImageInfo, bool)
SkRuntimeShaderBuilder::makeShader(SkMatrix const*, bool)
SkRuntimeShaderBuilder::~SkRuntimeShaderBuilder()
SkSL::Compiler::Compiler(GrShaderCaps const*)
SkSL::Compiler::convertIdentifier(int, skstd::string_view)
SkSL::Compiler::convertProgram(SkSL::ProgramKind, SkSL::String, SkSL::ProgramSettings)
SkSL::Compiler::errorText(bool)
SkSL::Compiler::finalize(SkSL::Program&)
SkSL::Compiler::handleError(skstd::string_view, SkSL::PositionInfo)
SkSL::Compiler::loadFragmentModule()
SkSL::Compiler::loadGPUModule()
SkSL::Compiler::loadModule(SkSL::ProgramKind, SkSL::Compiler::ModuleData, std::shared_ptr<SkSL::SymbolTable>, bool)
SkSL::Compiler::loadPublicModule()
SkSL::Compiler::loadRuntimeShaderModule()
SkSL::Compiler::loadVertexModule()
SkSL::Compiler::makePrivateSymbolTable(std::shared_ptr<SkSL::SymbolTable>)
SkSL::Compiler::makeRootSymbolTable()
SkSL::Compiler::moduleForProgramKind(SkSL::ProgramKind)
SkSL::Compiler::optimize(SkSL::LoadedModule&)
SkSL::Compiler::optimize(SkSL::Program&)
SkSL::Compiler::parseModule(SkSL::ProgramKind, SkSL::Compiler::ModuleData, SkSL::ParsedModule const&)
SkSL::Compiler::runInliner(std::vector<std::unique_ptr<SkSL::ProgramElement, std::default_delete<SkSL::ProgramElement> >, std::allocator<std::unique_ptr<SkSL::ProgramElement, std::default_delete<SkSL::ProgramElement> > > > const&, std::shared_ptr<SkSL::SymbolTable>, SkSL::ProgramUsage*)
SkSL::Compiler::toGLSL(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toGLSL(SkSL::Program&, SkSL::String*)
SkSL::Compiler::toHLSL(SkSL::Program&, SkSL::String*)
SkSL::Compiler::toMetal(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toMetal(SkSL::Program&, SkSL::String*)
SkSL::Compiler::toSPIRV(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toSPIRV(SkSL::Program&, SkSL::String*)
SkSL::Compiler::writeErrorCount()
SkSL::Compiler::~Compiler()
SkSL::String::appendf(char const*, ...)
SkSL::String::consumeSuffix(char const*)
SkSL::String::operator+(SkSL::String const&) const
SkSL::String::operator+(char const*) const
SkSL::String::operator+(skstd::string_view) const
SkSL::String::operator+=(SkSL::String const&)
SkSL::String::operator+=(char const*)
SkSL::String::operator+=(char)
SkSL::String::operator+=(skstd::string_view)
SkSL::String::printf(char const*, ...)
SkSL::String::vappendf(char const*, __va_list_tag*)
SkSemaphore::osSignal(int)
SkSemaphore::osWait()
SkSemaphore::try_wait()
SkSemaphore::~SkSemaphore()
SkShader::asAGradient(SkShader::GradientInfo*) const
SkShader::isAImage(SkMatrix*, SkTileMode*) const
SkShader::makeWithColorFilter(sk_sp<SkColorFilter>) const
SkShader::makeWithLocalMatrix(SkMatrix const&) const
SkShaderMaskFilter::Make(sk_sp<SkShader>)
SkShaderMaskFilter::RegisterFlattenables()
SkShaders::Blend(sk_sp<SkBlender>, sk_sp<SkShader>, sk_sp<SkShader>)
SkShaders::Color(SkRGBA4f<(SkAlphaType)3> const&, sk_sp<SkColorSpace>)
SkShaders::Empty()
SkShadowUtils::ComputeTonalColors(unsigned int, unsigned int, unsigned int*, unsigned int*)
SkShadowUtils::DrawShadow(SkCanvas*, SkPath const&, SkPoint3 const&, SkPoint3 const&, float, unsigned int, unsigned int, unsigned int)
SkShadowUtils::GetLocalBounds(SkMatrix const&, SkPath const&, SkPoint3 const&, SkPoint3 const&, float, unsigned int, SkRect*)
SkSpinlock::contendedAcquire()
SkStream::MakeFromFile(char const*)
SkStream::readPackedUInt(unsigned long*)
SkStream::readS16(short*)
SkStream::readS32(int*)
SkStream::readS8(signed char*)
SkStream::readScalar(float*)
SkStrikeClient::SkStrikeClient(sk_sp<SkStrikeClient::DiscardableHandleManager>, bool, SkStrikeCache*)
SkStrikeClient::deserializeTypeface(void const*, unsigned long)
SkStrikeClient::readStrikeData(void const volatile*, unsigned long)
SkStrikeClient::~SkStrikeClient()
SkStrikeServer::SkStrikeServer(SkStrikeServer::DiscardableHandleManager*)
SkStrikeServer::makeAnalysisCanvas(int, int, SkSurfaceProps const&, sk_sp<SkColorSpace>, bool)
SkStrikeServer::serializeTypeface(SkTypeface*)
SkStrikeServer::writeStrikeData(std::vector<unsigned char, std::allocator<unsigned char> >*)
SkStrikeServer::~SkStrikeServer()
SkString::Rec::Make(char const*, unsigned long)
SkString::Rec::ref() const
SkString::Rec::unique() const
SkString::Rec::unref() const
SkString::SkString()
SkString::SkString(SkString const&)
SkString::SkString(SkString&&)
SkString::SkString(char const*)
SkString::SkString(char const*, unsigned long)
SkString::SkString(skstd::string_view)
SkString::SkString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
SkString::SkString(unsigned long)
SkString::appendVAList(char const*, __va_list_tag*)
SkString::appendf(char const*, ...)
SkString::equals(SkString const&) const
SkString::equals(char const*) const
SkString::equals(char const*, unsigned long) const
SkString::insert(unsigned long, char const*)
SkString::insert(unsigned long, char const*, unsigned long)
SkString::insertHex(unsigned long, unsigned int, int)
SkString::insertS32(unsigned long, int)
SkString::insertS64(unsigned long, long, int)
SkString::insertScalar(unsigned long, float)
SkString::insertU32(unsigned long, unsigned int)
SkString::insertU64(unsigned long, unsigned long, int)
SkString::insertUnichar(unsigned long, int)
SkString::operator=(SkString const&)
SkString::operator=(SkString&&)
SkString::operator=(char const*)
SkString::prependVAList(char const*, __va_list_tag*)
SkString::prependf(char const*, ...)
SkString::printVAList(char const*, __va_list_tag*)
SkString::printf(char const*, ...)
SkString::remove(unsigned long, unsigned long)
SkString::reset()
SkString::resize(unsigned long)
SkString::set(char const*)
SkString::set(char const*, unsigned long)
SkString::swap(SkString&)
SkString::writable_str()
SkString::~SkString()
SkStrokeAndFillPathEffect::Make()
SkStrokePathEffect::Make(float, SkPaint::Join, SkPaint::Cap, float)
SkStrokeRec::GetInflationRadius(SkPaint const&, SkPaint::Style)
SkStrokeRec::GetInflationRadius(SkPaint::Join, float, SkPaint::Cap, float)
SkStrokeRec::SkStrokeRec(SkPaint const&, SkPaint::Style, float)
SkStrokeRec::SkStrokeRec(SkPaint const&, float)
SkStrokeRec::SkStrokeRec(SkStrokeRec::InitStyle)
SkStrokeRec::applyToPaint(SkPaint*) const
SkStrokeRec::applyToPath(SkPath*, SkPath const&) const
SkStrokeRec::getInflationRadius() const
SkStrokeRec::getStyle() const
SkStrokeRec::init(SkPaint const&, SkPaint::Style, float)
SkStrokeRec::setFillStyle()
SkStrokeRec::setHairlineStyle()
SkStrokeRec::setStrokeStyle(float, bool)
SkSurface::MakeFromBackendRenderTarget(GrRecordingContext*, GrBackendRenderTarget const&, GrSurfaceOrigin, SkColorType, sk_sp<SkColorSpace>, SkSurfaceProps const*, void (*)(void*), void*)
SkSurface::MakeFromBackendTexture(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, int, SkColorType, sk_sp<SkColorSpace>, SkSurfaceProps const*, void (*)(void*), void*)
SkSurface::MakeNull(int, int)
SkSurface::MakeRasterDirect(SkImageInfo const&, void*, unsigned long, SkSurfaceProps const*)
SkSurface::MakeRasterDirectReleaseProc(SkImageInfo const&, void*, unsigned long, void (*)(void*, void*), void*, SkSurfaceProps const*)
SkSurface::MakeRasterN32Premul(int, int, SkSurfaceProps const*)
SkSurface::MakeRenderTarget(GrRecordingContext*, SkSurfaceCharacterization const&, SkBudgeted)
SkSurface::SkSurface(SkImageInfo const&, SkSurfaceProps const*)
SkSurface::SkSurface(int, int, SkSurfaceProps const*)
SkSurface::asyncRescaleAndReadPixels(SkImageInfo const&, SkIRect const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*)
SkSurface::asyncRescaleAndReadPixelsYUV420(SkYUVColorSpace, sk_sp<SkColorSpace>, SkIRect const&, SkISize const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*)
SkSurface::characterize(SkSurfaceCharacterization*) const
SkSurface::draw(SkCanvas*, float, float, SkSamplingOptions const&, SkPaint const*)
SkSurface::draw(sk_sp<SkDeferredDisplayList const>, int, int)
SkSurface::flush(GrFlushInfo const&, GrBackendSurfaceMutableState const*)
SkSurface::flush(SkSurface::BackendSurfaceAccess, GrFlushInfo const&)
SkSurface::generationID()
SkSurface::getBackendRenderTarget(SkSurface::BackendHandleAccess)
SkSurface::getBackendTexture(SkSurface::BackendHandleAccess)
SkSurface::isCompatible(SkSurfaceCharacterization const&) const
SkSurface::makeSurface(SkImageInfo const&)
SkSurface::makeSurface(int, int)
SkSurface::notifyContentWillChange(SkSurface::ContentChangeMode)
SkSurface::peekPixels(SkPixmap*)
SkSurface::readPixels(SkImageInfo const&, void*, unsigned long, int, int)
SkSurface::readPixels(SkPixmap const&, int, int)
SkSurface::recordingContext()
SkSurface::replaceBackendTexture(GrBackendTexture const&, GrSurfaceOrigin, SkSurface::ContentChangeMode, void (*)(void*), void*)
SkSurface::wait(int, GrBackendSemaphore const*, bool)
SkSurface::writePixels(SkBitmap const&, int, int)
SkSurface::writePixels(SkPixmap const&, int, int)
SkSurfaceCharacterization::createBackendFormat(SkColorType, GrBackendFormat const&) const
SkSurfaceCharacterization::createColorSpace(sk_sp<SkColorSpace>) const
SkSurfaceCharacterization::createFBO0(bool) const
SkSurfaceCharacterization::createResized(int, int) const
SkSurfaceCharacterization::isCompatible(GrBackendTexture const&) const
SkSurfaceCharacterization::operator==(SkSurfaceCharacterization const&) const
SkSurfaceProps::SkSurfaceProps()
SkSurfaceProps::SkSurfaceProps(SkSurfaceProps const&)
SkSurfaceProps::SkSurfaceProps(unsigned int, SkPixelGeometry)
SkSwapRB(unsigned int*, unsigned int const*, int)
SkTableColorFilter::Make(unsigned char const*)
SkTableColorFilter::MakeARGB(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char const*)
SkTableColorFilter::RegisterFlattenables()
SkTableMaskFilter::Create(unsigned char const*)
SkTableMaskFilter::CreateClip(unsigned char, unsigned char)
SkTableMaskFilter::CreateGamma(float)
SkTableMaskFilter::MakeClipTable(unsigned char*, unsigned char, unsigned char)
SkTableMaskFilter::MakeGammaTable(unsigned char*, float)
SkTextBlob::Deserialize(void const*, unsigned long, SkDeserialProcs const&)
SkTextBlob::Iter::Iter(SkTextBlob const&)
SkTextBlob::Iter::experimentalNext(SkTextBlob::Iter::ExperimentalRun*)
SkTextBlob::Iter::next(SkTextBlob::Iter::Run*)
SkTextBlob::MakeFromPosText(void const*, unsigned long, SkPoint const*, SkFont const&, SkTextEncoding)
SkTextBlob::MakeFromPosTextH(void const*, unsigned long, float const*, float, SkFont const&, SkTextEncoding)
SkTextBlob::MakeFromText(void const*, unsigned long, SkFont const&, SkTextEncoding)
SkTextBlob::RunRecord::First(SkTextBlob const*)
SkTextBlob::RunRecord::Next(SkTextBlob::RunRecord const*)
SkTextBlob::RunRecord::NextUnchecked(SkTextBlob::RunRecord const*)
SkTextBlob::RunRecord::PosCount(unsigned int, SkTextBlob::GlyphPositioning, SkSafeMath*)
SkTextBlob::RunRecord::StorageSize(unsigned int, unsigned int, SkTextBlob::GlyphPositioning, SkSafeMath*)
SkTextBlob::RunRecord::grow(unsigned int)
SkTextBlob::RunRecord::textSizePtr() const
SkTextBlob::RunRecord::validate(unsigned char const*) const
SkTextBlob::ScalarsPerGlyph(SkTextBlob::GlyphPositioning)
SkTextBlob::SkTextBlob(SkRect const&)
SkTextBlob::getIntercepts(float const*, float*, SkPaint const*) const
SkTextBlob::operator new(unsigned long)
SkTextBlob::operator new(unsigned long, void*)
SkTextBlob::serialize(SkSerialProcs const&) const
SkTextBlob::serialize(SkSerialProcs const&, void*, unsigned long) const
SkTextBlob::~SkTextBlob()
SkTextBlobBuilder::ConservativeRunBounds(SkTextBlob::RunRecord const&)
SkTextBlobBuilder::SkTextBlobBuilder()
SkTextBlobBuilder::TightRunBounds(SkTextBlob::RunRecord const&)
SkTextBlobBuilder::allocInternal(SkFont const&, SkTextBlob::GlyphPositioning, int, int, SkPoint, SkRect const*)
SkTextBlobBuilder::allocRun(SkFont const&, int, float, float, SkRect const*)
SkTextBlobBuilder::allocRunPos(SkFont const&, int, SkRect const*)
SkTextBlobBuilder::allocRunPosH(SkFont const&, int, float, SkRect const*)
SkTextBlobBuilder::allocRunRSXform(SkFont const&, int)
SkTextBlobBuilder::allocRunText(SkFont const&, int, float, float, int, SkRect const*)
SkTextBlobBuilder::allocRunTextPos(SkFont const&, int, int, SkRect const*)
SkTextBlobBuilder::allocRunTextPosH(SkFont const&, int, float, int, SkRect const*)
SkTextBlobBuilder::allocRunTextRSXform(SkFont const&, int, int, SkRect const*)
SkTextBlobBuilder::make()
SkTextBlobBuilder::mergeRun(SkFont const&, SkTextBlob::GlyphPositioning, unsigned int, SkPoint)
SkTextBlobBuilder::reserve(unsigned long)
SkTextBlobBuilder::updateDeferredBounds()
SkTextBlobBuilder::~SkTextBlobBuilder()
SkTextUtils::Draw(SkCanvas*, void const*, unsigned long, SkTextEncoding, float, float, SkFont const&, SkPaint const&, SkTextUtils::Align)
SkTextUtils::GetPath(void const*, unsigned long, SkTextEncoding, float, float, SkFont const&, SkPath*)
SkTime::DateTime::toISO8601(SkString*) const
SkTime::GetDateTime(SkTime::DateTime*)
SkTime::GetNSecs()
SkTrimPathEffect::Make(float, float, SkTrimPathEffect::Mode)
SkTypeface::Equal(SkTypeface const*, SkTypeface const*)
SkTypeface::FromOldStyle(SkTypeface::Style)
SkTypeface::GetDefaultTypeface(SkTypeface::Style)
SkTypeface::MakeDefault()
SkTypeface::MakeDeserialize(SkStream*)
SkTypeface::MakeFromData(sk_sp<SkData>, int)
SkTypeface::MakeFromFile(char const*, int)
SkTypeface::MakeFromName(char const*, SkFontStyle)
SkTypeface::MakeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, int)
SkTypeface::SkTypeface(SkFontStyle const&, bool)
SkTypeface::UniqueID(SkTypeface const*)
SkTypeface::copyTableData(unsigned int) const
SkTypeface::countGlyphs() const
SkTypeface::countTables() const
SkTypeface::createFamilyNameIterator() const
SkTypeface::createScalerContext(SkScalerContextEffects const&, SkDescriptor const*) const
SkTypeface::getAdvancedMetrics() const
SkTypeface::getBounds() const
SkTypeface::getFamilyName(SkString*) const
SkTypeface::getGlyphToUnicodeMap(int*) const
SkTypeface::getKerningPairAdjustments(unsigned short const*, int, int*) const
SkTypeface::getPostScriptName(SkString*) const
SkTypeface::getTableData(unsigned int, unsigned long, unsigned long, void*) const
SkTypeface::getTableSize(unsigned int) const
SkTypeface::getTableTags(unsigned int*) const
SkTypeface::getUnitsPerEm() const
SkTypeface::getVariationDesignParameters(SkFontParameters::Variation::Axis*, int) const
SkTypeface::getVariationDesignPosition(SkFontArguments::VariationPosition::Coordinate*, int) const
SkTypeface::glyphMaskNeedsCurrentColor() const
SkTypeface::makeClone(SkFontArguments const&) const
SkTypeface::onComputeBounds(SkRect*) const
SkTypeface::onCopyTableData(unsigned int) const
SkTypeface::onGetAdvancedMetrics() const
SkTypeface::onGetKerningPairAdjustments(unsigned short const*, int, int*) const
SkTypeface::openStream(int*) const
SkTypeface::serialize(SkTypeface::SerializeBehavior) const
SkTypeface::serialize(SkWStream*, SkTypeface::SerializeBehavior) const
SkTypeface::textToGlyphs(void const*, unsigned long, SkTextEncoding, unsigned short*, int) const
SkTypeface::unicharToGlyph(int) const
SkTypeface::unicharsToGlyphs(int const*, int, unsigned short*) const
SkTypeface::~SkTypeface()
SkUTF::CountUTF16(unsigned short const*, unsigned long)
SkUTF::CountUTF32(int const*, unsigned long)
SkUTF::CountUTF8(char const*, unsigned long)
SkUTF::NextUTF16(unsigned short const**, unsigned short const*)
SkUTF::NextUTF32(int const**, int const*)
SkUTF::NextUTF8(char const**, char const*)
SkUTF::ToUTF16(int, unsigned short*)
SkUTF::ToUTF8(int, char*)
SkUTF::UTF16ToUTF8(char*, int, unsigned short const*, unsigned long)
SkUTF::UTF8ToUTF16(unsigned short*, int, char const*, unsigned long)
SkUnPreMultiply::PMColorToColor(unsigned int)
SkVertices::Builder::Builder(SkVertices::Desc const&)
SkVertices::Builder::Builder(SkVertices::VertexMode, int, int, unsigned int)
SkVertices::Builder::colors()
SkVertices::Builder::detach()
SkVertices::Builder::indices()
SkVertices::Builder::init(SkVertices::Desc const&)
SkVertices::Builder::positions()
SkVertices::Builder::texCoords()
SkVertices::MakeCopy(SkVertices::VertexMode, int, SkPoint const*, SkPoint const*, unsigned int const*, int, unsigned short const*)
SkVertices::approximateSize() const
SkVertices::getSizes() const
SkVertices::operator delete(void*)
SkWStream::SizeOfPackedUInt(unsigned long)
SkWStream::flush()
SkWStream::writeBigDecAsText(long, int)
SkWStream::writeDecAsText(int)
SkWStream::writeHexAsText(unsigned int, int)
SkWStream::writePackedUInt(unsigned long)
SkWStream::writeScalar(float)
SkWStream::writeScalarAsText(float)
SkWStream::writeStream(SkStream*, unsigned long)
SkWStream::~SkWStream()
SkWebpEncoder::Encode(SkWStream*, SkPixmap const&, SkWebpEncoder::Options const&)
SkWriteICCProfile(skcms_TransferFunction const&, skcms_Matrix3x3 const&)
SkYUVAInfo::GetYUVALocations(SkYUVAInfo::PlaneConfig, unsigned int const*)
SkYUVAInfo::HasAlpha(SkYUVAInfo::PlaneConfig)
SkYUVAInfo::PlaneDimensions(SkISize, SkYUVAInfo::PlaneConfig, SkYUVAInfo::Subsampling, SkEncodedOrigin, SkISize*)
SkYUVAInfo::PlaneSubsamplingFactors(SkYUVAInfo::PlaneConfig, SkYUVAInfo::Subsampling, int)
SkYUVAInfo::SkYUVAInfo(SkISize, SkYUVAInfo::PlaneConfig, SkYUVAInfo::Subsampling, SkYUVColorSpace, SkEncodedOrigin, SkYUVAInfo::Siting, SkYUVAInfo::Siting)
SkYUVAInfo::SubsamplingFactors(SkYUVAInfo::Subsampling)
SkYUVAInfo::computeTotalBytes(unsigned long const*, unsigned long*) const
SkYUVAInfo::makeDimensions(SkISize) const
SkYUVAInfo::makeSubsampling(SkYUVAInfo::Subsampling) const
SkYUVAInfo::operator==(SkYUVAInfo const&) const
SkYUVAInfo::toYUVALocations(unsigned int const*) const
SkYUVAPixmapInfo::NumChannelsAndDataType(SkColorType)
SkYUVAPixmapInfo::SkYUVAPixmapInfo(SkYUVAInfo const&, SkColorType const*, unsigned long const*)
SkYUVAPixmapInfo::SkYUVAPixmapInfo(SkYUVAInfo const&, SkYUVAPixmapInfo::DataType, unsigned long const*)
SkYUVAPixmapInfo::SupportedDataTypes::SupportedDataTypes(GrImageContext const&)
SkYUVAPixmapInfo::SupportedDataTypes::enableDataType(SkYUVAPixmapInfo::DataType, int)
SkYUVAPixmapInfo::computeTotalBytes(unsigned long*) const
SkYUVAPixmapInfo::initPixmapsFromSingleAllocation(void*, SkPixmap*) const
SkYUVAPixmapInfo::isSupported(SkYUVAPixmapInfo::SupportedDataTypes const&) const
SkYUVAPixmapInfo::operator==(SkYUVAPixmapInfo const&) const
SkYUVAPixmaps::Allocate(SkYUVAPixmapInfo const&)
SkYUVAPixmaps::FromData(SkYUVAPixmapInfo const&, sk_sp<SkData>)
SkYUVAPixmaps::FromExternalMemory(SkYUVAPixmapInfo const&, void*)
SkYUVAPixmaps::FromExternalPixmaps(SkYUVAInfo const&, SkPixmap const*)
SkYUVAPixmaps::MakeCopy(SkYUVAPixmaps const&)
SkYUVAPixmaps::RecommendedRGBAColorType(SkYUVAPixmapInfo::DataType)
SkYUVAPixmaps::SkYUVAPixmaps(SkYUVAInfo const&, SkYUVAPixmapInfo::DataType, SkPixmap const*)
SkYUVAPixmaps::SkYUVAPixmaps(SkYUVAPixmapInfo const&, sk_sp<SkData>)
SkYUVAPixmaps::pixmapsInfo() const
SkYUVAPixmaps::toYUVALocations() const
SkiaHelper::createSkImage(SkBitmap const&)
SkiaHelper::dump(SkBitmap const&, char const*)
SkiaHelper::dump(sk_sp<SkImage> const&, char const*)
SkiaHelper::dump(sk_sp<SkSurface> const&, char const*)
SkiaHelper::makeCheckedImageSnapshot(sk_sp<SkSurface>)
SkiaHelper::makeCheckedImageSnapshot(sk_sp<SkSurface>, SkIRect const&)
SkiaHelper::setPixelGeometry(SkPixelGeometry)
SkiaHelper::surfaceProps()
SkiaSalBitmap::AlphaBlendWith(SalBitmap const&)
SkiaSalBitmap::ComputeScanlineSize()
SkiaSalBitmap::ConserveMemory() const
SkiaSalBitmap::ConvertToGreyscale()
SkiaSalBitmap::Create(SalBitmap const&, SalGraphics*)
SkiaSalBitmap::Create(SalBitmap const&, vcl::PixelFormat)
SkiaSalBitmap::Create(com::sun::star::uno::Reference<com::sun::star::rendering::XBitmapCanvas> const&, Size&, bool)
SkiaSalBitmap::CreateBitmapData()
SkiaSalBitmap::Destroy()
SkiaSalBitmap::EnsureBitmapData()
SkiaSalBitmap::EnsureBitmapUniqueData()
SkiaSalBitmap::EraseInternal(Color const&)
SkiaSalBitmap::GetAlphaImageKey(SkiaHelper::DirectImage) const
SkiaSalBitmap::GetAlphaSkShader(SkSamplingOptions const&, SkiaHelper::DirectImage) const
SkiaSalBitmap::GetAsSkBitmap() const
SkiaSalBitmap::GetBitCount() const
SkiaSalBitmap::GetImageKey(SkiaHelper::DirectImage) const
SkiaSalBitmap::GetSkShader(SkSamplingOptions const&, SkiaHelper::DirectImage) const
SkiaSalBitmap::GetSystemData(BitmapSystemData&)
SkiaSalBitmap::IsAllBlack() const
SkiaSalBitmap::IsFullyOpaqueAsAlpha() const
SkiaSalBitmap::PerformErase()
SkiaSalBitmap::ReleaseBuffer(BitmapBuffer*, BitmapAccessMode, bool)
SkiaSalBitmap::Replace(Color const&, Color const&, unsigned char)
SkiaSalBitmap::ResetAllData()
SkiaSalBitmap::ResetPendingScaling()
SkiaSalBitmap::ResetToBuffer()
SkiaSalBitmap::ResetToSkImage(sk_sp<SkImage>)
SkiaSalBitmap::ScalingSupported() const
SkiaSalBitmap::SkiaSalBitmap()
SkiaSalBitmap::SkiaSalBitmap(sk_sp<SkImage> const&)
SkiaSalBitmap::TryDirectConvertToAlphaNoScaling()
SkiaSalBitmap::alphaType() const
SkiaSalBitmap::dump(char const*) const
SkiaSalBitmap::~SkiaSalBitmap()
SkiaSalGraphicsImpl::SkiaSalGraphicsImpl(SalGraphics&, SalGeometryProvider*)
SkiaSalGraphicsImpl::applyXor()
SkiaSalGraphicsImpl::checkPendingDrawing()
SkiaSalGraphicsImpl::checkSurface()
SkiaSalGraphicsImpl::createOffscreenSurface()
SkiaSalGraphicsImpl::createWindowSurface(bool)
SkiaSalGraphicsImpl::delayDrawPolyPolygon(basegfx::B2DPolyPolygon const&, double)
SkiaSalGraphicsImpl::destroySurface()
SkiaSalGraphicsImpl::drawBitmap(SalTwoRect const&, SkiaSalBitmap const&, SkBlendMode)
SkiaSalGraphicsImpl::drawImage(SalTwoRect const&, sk_sp<SkImage> const&, int, SkBlendMode)
SkiaSalGraphicsImpl::drawShader(SalTwoRect const&, sk_sp<SkShader> const&, SkBlendMode)
SkiaSalGraphicsImpl::dump(char const*) const
SkiaSalGraphicsImpl::flushDrawing()
SkiaSalGraphicsImpl::getClipRegion() const
SkiaSalGraphicsImpl::getXorCanvas()
SkiaSalGraphicsImpl::invert(basegfx::B2DPolygon const&, SalInvert)
SkiaSalGraphicsImpl::makeCachedImageKey(SkiaSalBitmap const&, SkiaSalBitmap const*, Size const&, SkiaHelper::DirectImage, SkiaHelper::DirectImage)
SkiaSalGraphicsImpl::mergeCacheBitmaps(SkiaSalBitmap const&, SkiaSalBitmap const*, Size const&)
SkiaSalGraphicsImpl::performDrawPolyPolygon(basegfx::B2DPolyPolygon const&, double, bool)
SkiaSalGraphicsImpl::postDraw()
SkiaSalGraphicsImpl::preDraw()
SkiaSalGraphicsImpl::privateCopyBits(SalTwoRect const&, SkiaSalGraphicsImpl*)
SkiaSalGraphicsImpl::privateDrawAlphaRect(long, long, long, long, double, bool)
SkiaSalGraphicsImpl::resetCanvasScalingAndClipping()
SkiaSalGraphicsImpl::scheduleFlush()
SkiaSalGraphicsImpl::setCanvasClipRegion(SkCanvas*, vcl::Region const&)
SkiaSalGraphicsImpl::setCanvasScalingAndClipping()
SkiaSalGraphicsImpl::~SkiaSalGraphicsImpl()
SkiaTextRender::ClearDevFontCache()
SkiaTextRender::DrawTextLayout(GenericSalLayout const&, SalGraphics const&)
SkiaZone::checkDebug(int, CrashWatchdogTimingsValues const&)
SkiaZone::getCrashWatchdogTimingsValues()
SkiaZone::hardDisable()
SmDocShell::ArrangeFormula()
SmDocShell::ConvertFrom(SfxMedium&)
SmDocShell::Draw(OutputDevice*, JobSetup const&, unsigned short)
SmDocShell::DrawFormula(OutputDevice&, Point&, bool)
SmDocShell::Execute(SfxRequest&)
SmDocShell::Factory()
SmDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
SmDocShell::GetAccessibleText()
SmDocShell::GetComment() const
SmDocShell::GetCursor()
SmDocShell::GetEditEngine()
SmDocShell::GetInterface() const
SmDocShell::GetPool()
SmDocShell::GetPrt()
SmDocShell::GetRefDev()
SmDocShell::GetSize()
SmDocShell::GetState(SfxItemSet&)
SmDocShell::GetStaticInterface()
SmDocShell::GetUndoManager()
SmDocShell::HasCursor() const
SmDocShell::InitInterface_Impl()
SmDocShell::InitNew(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SmDocShell::InvalidateCursor()
SmDocShell::Load(SfxMedium&)
SmDocShell::LoadSymbols()
SmDocShell::Notify(SfxBroadcaster&, SfxHint const&)
SmDocShell::OnDocumentPrinterChanged(Printer*)
SmDocShell::Parse()
SmDocShell::RegisterInterface(SfxModule const*)
SmDocShell::Repaint()
SmDocShell::ReplaceBadChars()
SmDocShell::Save()
SmDocShell::SaveAs(SfxMedium&)
SmDocShell::SaveSymbols()
SmDocShell::SetFormat(SmFormat const&)
SmDocShell::SetModified(bool)
SmDocShell::SetPrinter(SfxPrinter*)
SmDocShell::SetSmSyntaxVersion(unsigned short)
SmDocShell::SetVisArea(tools::Rectangle const&)
SmDocShell::SmDocShell(SfxModelFlags)
SmDocShell::UpdateEditEngineDefaultFonts()
SmDocShell::UpdateText()
SmDocShell::WriteAsMathType3(SfxMedium&)
SmDocShell::readFormulaOoxml(oox::formulaimport::XmlStream&)
SmDocShell::writeFormulaOoxml(std::shared_ptr<sax_fastparser::FastSerializerHelper> const&, oox::core::OoxmlVersion, oox::drawingml::DocumentType, signed char)
SmDocShell::writeFormulaRtf(rtl::OStringBuffer&, unsigned short)
SmDocShell::~SmDocShell()
SmartTagMgr::AssociateActionsWithRecognizers()
SmartTagMgr::LoadLibraries()
SmartTagMgr::PrepareConfiguration(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SmartTagMgr::ReadConfiguration(bool, bool)
SmartTagMgr::RegisterListener()
SmartTagMgr::SmartTagMgr(rtl::OUString const&)
SmartTagMgr::changesOccurred(com::sun::star::util::ChangesEvent const&)
SmartTagMgr::modified(com::sun::star::lang::EventObject const&)
SmartTagMgr::~SmartTagMgr()
SotExchange::GetFormatName(SotClipboardFormatId)
SotExchange::RegisterFormat(com::sun::star::datatransfer::DataFlavor const&)
SotObject::DoClose()
SotObject::SotObject()
SotObject::~SotObject()
SotStorage::CopyTo(rtl::OUString const&, SotStorage*, rtl::OUString const&)
SotStorage::CreateStorage(bool, StreamMode)
SotStorage::SotStorage(BaseStorage*)
SotStorage::SotStorage(SvStream&)
SotStorage::SotStorage(SvStream*, bool)
SotStorage::SotStorage(bool, SvStream&)
SotStorage::SotStorage(bool, rtl::OUString const&, StreamMode)
SotStorage::SotStorage(rtl::OUString const&, StreamMode)
SotStorage::~SotStorage()
SotStorageStream::FlushData()
SotStorageStream::GetData(void*, unsigned long)
SotStorageStream::PutData(void const*, unsigned long)
SotStorageStream::ResetError()
SotStorageStream::SeekPos(unsigned long)
SotStorageStream::SotStorageStream(BaseStorageStream*)
SotStorageStream::~SotStorageStream()
SotTempStream::SotTempStream(rtl::OUString const&, StreamMode)
SotTempStream::~SotTempStream()
SpinField::CalcMinimumSize() const
SpinField::CalcMinimumSizeForText(rtl::OUString const&) const
SpinField::CalcSize(int) const
SpinField::DataChanged(DataChangedEvent const&)
SpinField::Down()
SpinField::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
SpinField::EndDropDown()
SpinField::EventNotify(NotifyEvent&)
SpinField::FillLayoutData() const
SpinField::First()
SpinField::GetOptimalSize() const
SpinField::GetUITestFactory() const
SpinField::ImplFindPartRect(Point const&)
SpinField::Last()
SpinField::MouseButtonDown(MouseEvent const&)
SpinField::MouseButtonUp(MouseEvent const&)
SpinField::MouseMove(MouseEvent const&)
SpinField::Paint(OutputDevice&, tools::Rectangle const&)
SpinField::PreNotify(NotifyEvent&)
SpinField::Resize()
SpinField::ShowDropDown(bool)
SpinField::SpinField(vcl::Window*, long, WindowType)
SpinField::StateChanged(StateChangedType)
SpinField::Up()
SpinField::dispose()
SpinField::~SpinField()
SpinListenerMultiplexer::SpinListenerMultiplexer(cppu::OWeakObject&)
SpinListenerMultiplexer::acquire()
SpinListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
SpinListenerMultiplexer::down(com::sun::star::awt::SpinEvent const&)
SpinListenerMultiplexer::first(com::sun::star::awt::SpinEvent const&)
SpinListenerMultiplexer::last(com::sun::star::awt::SpinEvent const&)
SpinListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
SpinListenerMultiplexer::release()
SpinListenerMultiplexer::up(com::sun::star::awt::SpinEvent const&)
SplitWindow::CalcLayoutSizePixel(Size const&)
SplitWindow::GetFadeInSize() const
SplitWindow::GetItemCount(unsigned short) const
SplitWindow::GetItemId(Point const&) const
SplitWindow::GetItemId(unsigned short) const
SplitWindow::GetItemPos(unsigned short, unsigned short) const
SplitWindow::GetItemSize(unsigned short, SplitWindowItemFlags) const
SplitWindow::ShowFadeInHideButton()
SplitWindow::ShowFadeOutButton()
SplitWindow::SplitItem(unsigned short, long, bool, bool)
SplitWindow::~SplitWindow()
Splitter::EndSplit()
Splitter::SetHorizontal(bool)
Splitter::Split()
Splitter::StartDrag()
Splitter::StartSplit()
Splitter::~Splitter()
StarBASIC::BreakHdl()
StarBASIC::CError(ErrCode, rtl::OUString const&, int, int, int)
StarBASIC::ClearAllModuleVars()
StarBASIC::DeInitAllModules()
StarBASIC::Error(ErrCode, rtl::OUString const&)
StarBASIC::ErrorHdl()
StarBASIC::FatalError(ErrCode, rtl::OUString const&)
StarBASIC::FindSBXInCurrentScope(rtl::OUString const&)
StarBASIC::GetActiveModule()
StarBASIC::GetCol2()
StarBASIC::GetErl()
StarBASIC::GetErrorMsg()
StarBASIC::GetModelFromBasic(SbxObject*)
StarBASIC::GetSfxFromVBError(unsigned short)
StarBASIC::GetUNOConstant(rtl::OUString const&, com::sun::star::uno::Any&)
StarBASIC::GetVBErrorCode(ErrCode)
StarBASIC::InitAllModules(StarBASIC const*)
StarBASIC::Insert(SbxVariable*)
StarBASIC::LoadData(SvStream&, unsigned short)
StarBASIC::MakeErrorText(ErrCode, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
StarBASIC::MakeModule(rtl::OUString const&, com::sun::star::script::ModuleInfo const&, rtl::OUString const&)
StarBASIC::QuitAndExitApplication()
StarBASIC::Remove(SbxVariable*)
StarBASIC::SetErrorData(ErrCode, unsigned short, unsigned short, unsigned short)
StarBASIC::SetGlobalBreakHdl(Link<StarBASIC*, BasicDebugFlags> const&)
StarBASIC::SetModified(bool)
StarBASIC::SetVBAEnabled(bool)
StarBASIC::StarBASIC(StarBASIC*, bool)
StarBASIC::Stop()
StarBASIC::StoreData(SvStream&) const
StarBASIC::VBAFind(rtl::OUString const&, SbxClassType)
StarBASIC::getUnoListeners()
StarBASIC::isVBAEnabled() const
StarBASIC::~StarBASIC()
StatusBar::AdjustItemWidthsForHiDPI()
StatusBar::ApplySettings(OutputDevice&)
StatusBar::CalcWindowSizePixel() const
StatusBar::Clear()
StatusBar::Click()
StatusBar::DataChanged(DataChangedEvent const&)
StatusBar::DoubleClick()
StatusBar::EndProgressMode()
StatusBar::GetItemBits(unsigned short) const
StatusBar::GetItemData(unsigned short) const
StatusBar::GetItemOffset(unsigned short) const
StatusBar::GetItemTextPos(unsigned short) const
StatusBar::GetItemWidth(unsigned short) const
StatusBar::GetQuickHelpText(unsigned short) const
StatusBar::HideItem(unsigned short)
StatusBar::InsertItem(unsigned short, unsigned long, StatusBarItemBits, long, unsigned short)
StatusBar::MouseButtonDown(MouseEvent const&)
StatusBar::Paint(OutputDevice&, tools::Rectangle const&)
StatusBar::RedrawItem(unsigned short)
StatusBar::RemoveItem(unsigned short)
StatusBar::RequestHelp(HelpEvent const&)
StatusBar::Resize()
StatusBar::SetAccessibleName(unsigned short, rtl::OUString const&)
StatusBar::SetHelpId(unsigned short, rtl::OString const&)
StatusBar::SetHelpText(unsigned short, rtl::OUString const&)
StatusBar::SetItemCommand(unsigned short, rtl::OUString const&)
StatusBar::SetProgressValue(unsigned short)
StatusBar::SetText(rtl::OUString const&)
StatusBar::ShowItem(unsigned short)
StatusBar::StartProgressMode(rtl::OUString const&)
StatusBar::StateChanged(StateChangedType)
StatusBar::StatusBar(vcl::Window*, long)
StatusBar::UserDraw(UserDrawEvent const&)
StatusBar::dispose()
StatusBar::~StatusBar()
StgReader::GetReaderType()
StringErrorInfo::StringErrorInfo(ErrCode, rtl::OUString const&, DialogMask)
StringRangeEnumerator::StringRangeEnumerator(rtl::OUString const&, int, int, int)
StringRangeEnumerator::checkValue(int, o3tl::sorted_vector<int, std::less<int>, o3tl::find_unique, true> const*) const
StringRangeEnumerator::insertJoinedRanges(std::vector<int, std::allocator<int> > const&)
StringRangeEnumerator::insertRange(int, int, bool)
StringRangeEnumerator::setRange(rtl::OUString const&)
StripScriptFromName(rtl::OUString const&)
StylePool::StylePool(SfxItemSet const*)
StylePool::~StylePool()
StyleSettings::CopyData()
StyleSettings::GetActionButtonPressedRolloverTextColor() const
StyleSettings::GetActionButtonRolloverTextColor() const
StyleSettings::GetActionButtonTextColor() const
StyleSettings::GetActiveBorderColor() const
StyleSettings::GetActiveTabColor() const
StyleSettings::GetAlternatingRowColor() const
StyleSettings::GetAntialiasingMinPixelHeight() const
StyleSettings::GetAutoMnemonic() const
StyleSettings::GetBorderSize()
StyleSettings::GetButtonPressedRolloverTextColor() const
StyleSettings::GetButtonRolloverTextColor() const
StyleSettings::GetCheckedColor() const
StyleSettings::GetContextMenuShortcuts() const
StyleSettings::GetDeactiveBorderColor() const
StyleSettings::GetDeactiveColor() const
StyleSettings::GetDeactiveTextColor() const
StyleSettings::GetDefaultActionButtonPressedRolloverTextColor() const
StyleSettings::GetDefaultActionButtonRolloverTextColor() const
StyleSettings::GetDefaultActionButtonTextColor() const
StyleSettings::GetDefaultButtonPressedRolloverTextColor() const
StyleSettings::GetDefaultButtonRolloverTextColor() const
StyleSettings::GetDefaultButtonTextColor() const
StyleSettings::GetDisplayOptions() const
StyleSettings::GetDockingFloatsSupported()
StyleSettings::GetEdgeBlending() const
StyleSettings::GetEdgeBlendingBottomRightColor() const
StyleSettings::GetEdgeBlendingTopLeftColor() const
StyleSettings::GetFaceGradientColor() const
StyleSettings::GetFieldRolloverTextColor() const
StyleSettings::GetFlatButtonPressedRolloverTextColor() const
StyleSettings::GetFlatButtonRolloverTextColor() const
StyleSettings::GetFlatButtonTextColor() const
StyleSettings::GetFloatTitleFont() const
StyleSettings::GetFloatTitleHeight() const
StyleSettings::GetGroupTextColor() const
StyleSettings::GetHelpColor() const
StyleSettings::GetHelpFont() const
StyleSettings::GetHelpTextColor() const
StyleSettings::GetHideDisabledMenuItems() const
StyleSettings::GetIconFont() const
StyleSettings::GetInactiveTabColor() const
StyleSettings::GetLightBorderColor() const
StyleSettings::GetMenuBarHighlightTextColor() const
StyleSettings::GetMenuBarRolloverColor() const
StyleSettings::GetMenuBarRolloverTextColor() const
StyleSettings::GetMenuBarTextColor() const
StyleSettings::GetMenuBorderColor() const
StyleSettings::GetMinThumbSize() const
StyleSettings::GetMonoColor() const
StyleSettings::GetPersonaFooter() const
StyleSettings::GetPreferredContextMenuShortcuts() const
StyleSettings::GetPreferredUseImagesInMenus() const
StyleSettings::GetPrimaryButtonWarpsSlider() const
StyleSettings::GetPushButtonFont() const
StyleSettings::GetRadioCheckFont() const
StyleSettings::GetRadioCheckTextColor() const
StyleSettings::GetSeparatorColor() const
StyleSettings::GetSkipDisabledInMenus() const
StyleSettings::GetSpinSize() const
StyleSettings::GetTabHighlightTextColor() const
StyleSettings::GetTabRolloverTextColor() const
StyleSettings::GetTabTextColor() const
StyleSettings::GetTitleFont() const
StyleSettings::GetTitleHeight() const
StyleSettings::GetToolTextColor() const
StyleSettings::GetToolbarIconSize() const
StyleSettings::GetToolbarIconSizePixel() const
StyleSettings::GetUseFlatBorders() const
StyleSettings::GetUseFlatMenus() const
StyleSettings::GetUseSystemUIFonts() const
StyleSettings::GetVisitedLinkColor() const
StyleSettings::Set3DColors(Color const&)
StyleSettings::SetActiveBorderColor(Color const&)
StyleSettings::SetAntialiasingMinPixelHeight(int)
StyleSettings::SetAppFont(vcl::Font const&)
StyleSettings::SetAutoMnemonic(bool)
StyleSettings::SetCheckedColor(Color const&)
StyleSettings::SetCheckedColorSpecialCase()
StyleSettings::SetColorValueSetColumnCount(unsigned short)
StyleSettings::SetDeactiveBorderColor(Color const&)
StyleSettings::SetDeactiveColor(Color const&)
StyleSettings::SetDeactiveTextColor(Color const&)
StyleSettings::SetDialogColor(Color const&)
StyleSettings::SetDisplayOptions(DisplayOptions)
StyleSettings::SetEdgeBlending(unsigned short)
StyleSettings::SetFaceColor(Color const&)
StyleSettings::SetFieldFont(vcl::Font const&)
StyleSettings::SetFloatTitleHeight(int)
StyleSettings::SetFontColor(Color const&)
StyleSettings::SetGroupFont(vcl::Font const&)
StyleSettings::SetHideDisabledMenuItems(bool)
StyleSettings::SetHighContrastMode(bool)
StyleSettings::SetIconFont(vcl::Font const&)
StyleSettings::SetIconTheme(rtl::OUString const&)
StyleSettings::SetLabelFont(vcl::Font const&)
StyleSettings::SetLightBorderColor(Color const&)
StyleSettings::SetLightColor(Color const&)
StyleSettings::SetListBoxMaximumLineCount(unsigned short)
StyleSettings::SetListBoxPreviewDefaultLogicSize(Size const&)
StyleSettings::SetMenuBorderColor(Color const&)
StyleSettings::SetMonoColor(Color const&)
StyleSettings::SetPreviewUsesCheckeredBackground(bool)
StyleSettings::SetPushButtonFont(vcl::Font const&)
StyleSettings::SetRadioCheckFont(vcl::Font const&)
StyleSettings::SetSpinSize(int)
StyleSettings::SetStandardStyles()
StyleSettings::SetTitleHeight(int)
StyleSettings::SetUseFlatBorders(bool)
StyleSettings::SetUseFlatMenus(bool)
StyleSettings::SetUseSystemUIFonts(bool)
StyleSettings::StyleSettings()
StyleSettings::operator!=(StyleSettings const&) const
StyleSettings::operator==(StyleSettings const&) const
SubsetMap::SubsetMap(tools::SvRef<FontCharMap> const&)
SvAddressParser::SvAddressParser(rtl::OUString const&)
SvAddressParser::~SvAddressParser()
SvBaseEventDescriptor::SvBaseEventDescriptor(SvEventDescription const*)
SvBaseEventDescriptor::getMacroID(rtl::OUString const&) const
SvBaseEventDescriptor::mapNameToEventID(rtl::OUString const&) const
SvBaseEventDescriptor::~SvBaseEventDescriptor()
SvColorDialog::SvColorDialog()
SvColorDialog::~SvColorDialog()
SvDetachedEventDescriptor::SvDetachedEventDescriptor(SvEventDescription const*)
SvDetachedEventDescriptor::getImplementationName()
SvDetachedEventDescriptor::getIndex(SvMacroItemId) const
SvDetachedEventDescriptor::~SvDetachedEventDescriptor()
SvEmbedTransferHelper::AddSupportedFormats()
SvEmbedTransferHelper::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
SvEmbedTransferHelper::ObjectReleased()
SvEmbedTransferHelper::SvEmbedTransferHelper(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, Graphic const*, long)
SvEmbedTransferHelper::~SvEmbedTransferHelper()
SvEventDescriptor::SvEventDescriptor(com::sun::star::uno::XInterface&, SvEventDescription const*)
SvEventDescriptor::~SvEventDescriptor()
SvFileInformationManager::GetDescription(INetURLObject const&)
SvFileInformationManager::GetFileDescription(INetURLObject const&)
SvFileInformationManager::GetFolderDescription(svtools::VolumeInfo const&)
SvFileInformationManager::GetFolderImageId(svtools::VolumeInfo const&)
SvFileInformationManager::GetImageNoDefault(INetURLObject const&, vcl::ImageType)
SvFileStream::FlushData()
SvFileStream::GetData(void*, unsigned long)
SvFileStream::LockFile()
SvFileStream::PutData(void const*, unsigned long)
SvFileStream::ResetError()
SvFileStream::SeekPos(unsigned long)
SvFileStream::SetSize(unsigned long)
SvFileStream::SvFileStream()
SvFileStream::SvFileStream(rtl::OUString const&, StreamMode)
SvFileStream::UnlockFile()
SvFileStream::~SvFileStream()
SvGlobalName::MakeFromMemory(void const*)
SvGlobalName::SvGlobalName()
SvGlobalName::SvGlobalName(SvGUID const&)
SvGlobalName::SvGlobalName(com::sun::star::uno::Sequence<signed char> const&)
SvGlobalName::SvGlobalName(unsigned int, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
SvGlobalName::operator<(SvGlobalName const&) const
SvGlobalName::~SvGlobalName()
SvHeaderTabListBox::ConvertPointToCellAddress(int&, unsigned short&, Point const&)
SvHeaderTabListBox::ConvertPointToColumnHeader(unsigned short&, Point const&)
SvHeaderTabListBox::ConvertPointToControlIndex(int&, Point const&)
SvHeaderTabListBox::ConvertPointToRowHeader(int&, Point const&)
SvHeaderTabListBox::CreateAccessible()
SvHeaderTabListBox::CreateAccessibleCell(int, unsigned short)
SvHeaderTabListBox::CreateAccessibleColumnHeader(unsigned short)
SvHeaderTabListBox::CreateAccessibleControl(int)
SvHeaderTabListBox::CreateAccessibleRowHeader(int)
SvHeaderTabListBox::DumpAsPropertyTree(tools::JsonWriter&)
SvHeaderTabListBox::FillAccessibleStateSet(utl::AccessibleStateSetHelper&, AccessibleBrowseBoxObjType) const
SvHeaderTabListBox::FillAccessibleStateSetForCell(utl::AccessibleStateSetHelper&, int, unsigned short) const
SvHeaderTabListBox::GetAccessible()
SvHeaderTabListBox::GetAccessibleCellText(int, unsigned short) const
SvHeaderTabListBox::GetAccessibleControlCount() const
SvHeaderTabListBox::GetAccessibleObjectDescription(AccessibleBrowseBoxObjType, int) const
SvHeaderTabListBox::GetAccessibleObjectName(AccessibleBrowseBoxObjType, int) const
SvHeaderTabListBox::GetAccessibleParentWindow() const
SvHeaderTabListBox::GetAllSelectedColumns(com::sun::star::uno::Sequence<int>&) const
SvHeaderTabListBox::GetAllSelectedRows(com::sun::star::uno::Sequence<int>&) const
SvHeaderTabListBox::GetColumnCount() const
SvHeaderTabListBox::GetColumnDescription(unsigned short) const
SvHeaderTabListBox::GetCurrColumn() const
SvHeaderTabListBox::GetCurrRow() const
SvHeaderTabListBox::GetFieldCharacterBounds(int, int, int)
SvHeaderTabListBox::GetFieldIndexAtPoint(int, int, Point const&)
SvHeaderTabListBox::GetFieldRectPixelAbs(int, unsigned short, bool, bool)
SvHeaderTabListBox::GetGlyphBoundRects(Point const&, rtl::OUString const&, int, int, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >&)
SvHeaderTabListBox::GetHeaderBar()
SvHeaderTabListBox::GetRowCount() const
SvHeaderTabListBox::GetRowDescription(int) const
SvHeaderTabListBox::GetSelectedColumnCount() const
SvHeaderTabListBox::GetSelectedRowCount() const
SvHeaderTabListBox::GetWindowExtentsRelative(vcl::Window const*) const
SvHeaderTabListBox::GetWindowInstance()
SvHeaderTabListBox::GoToCell(int, unsigned short)
SvHeaderTabListBox::GrabFocus()
SvHeaderTabListBox::GrabTableFocus()
SvHeaderTabListBox::HasRowHeader() const
SvHeaderTabListBox::InitHeaderBar(HeaderBar*)
SvHeaderTabListBox::Insert(SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvHeaderTabListBox::Insert(SvTreeListEntry*, unsigned int)
SvHeaderTabListBox::InsertEntryToColumn(rtl::OUString const&, SvTreeListEntry*, unsigned int, unsigned short, void*)
SvHeaderTabListBox::IsCellVisible(int, unsigned short) const
SvHeaderTabListBox::IsColumnSelected(int) const
SvHeaderTabListBox::IsRowSelected(int) const
SvHeaderTabListBox::Paint(OutputDevice&, tools::Rectangle const&)
SvHeaderTabListBox::RecalculateAccessibleChildren()
SvHeaderTabListBox::SelectAll()
SvHeaderTabListBox::SelectColumn(unsigned short, bool)
SvHeaderTabListBox::SelectRow(int, bool, bool)
SvHeaderTabListBox::SetNoSelection()
SvHeaderTabListBox::SvHeaderTabListBox(vcl::Window*, long)
SvHeaderTabListBox::calcHeaderRect(bool, bool)
SvHeaderTabListBox::calcTableRect(bool)
SvHeaderTabListBox::dispose()
SvHeaderTabListBox::~SvHeaderTabListBox()
SvInputStream::SvInputStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
SvInputStream::~SvInputStream()
SvKeyValueIterator::GetFirst(SvKeyValue&)
SvKeyValueIterator::GetNext(SvKeyValue&)
SvKeyValueIterator::SvKeyValueIterator()
SvKeyValueIterator::~SvKeyValueIterator()
SvLBoxContextBmp::Clone(SvLBoxItem const*) const
SvLBoxContextBmp::GetType() const
SvLBoxContextBmp::InitViewData(SvTreeListBox*, SvTreeListEntry*, SvViewDataItem*)
SvLBoxContextBmp::Paint(Point const&, SvTreeListBox&, OutputDevice&, SvViewDataEntry const*, SvTreeListEntry const&)
SvLBoxContextBmp::SetModeImages(Image const&, Image const&)
SvLBoxContextBmp::SvLBoxContextBmp()
SvLBoxContextBmp::SvLBoxContextBmp(Image const&, Image const&, bool)
SvLBoxContextBmp::implGetImageStore(bool)
SvLBoxContextBmp::~SvLBoxContextBmp()
SvLBoxItem::CalcWidth(SvTreeListBox const*) const
SvLBoxItem::GetHeight(SvTreeListBox const*, SvTreeListEntry const*) const
SvLBoxItem::GetHeight(SvViewDataEntry const*, unsigned short)
SvLBoxItem::GetWidth(SvTreeListBox const*, SvTreeListEntry const*) const
SvLBoxItem::GetWidth(SvTreeListBox const*, SvViewDataEntry const*, unsigned short) const
SvLBoxItem::SvLBoxItem()
SvLBoxItem::~SvLBoxItem()
SvLBoxString::CalcWidth(SvTreeListBox const*) const
SvLBoxString::Clone(SvLBoxItem const*) const
SvLBoxString::GetType() const
SvLBoxString::InitViewData(SvTreeListBox*, SvTreeListEntry*, SvViewDataItem*)
SvLBoxString::Paint(Point const&, SvTreeListBox&, OutputDevice&, SvViewDataEntry const*, SvTreeListEntry const&)
SvLBoxString::SvLBoxString()
SvLBoxString::SvLBoxString(rtl::OUString const&)
SvLBoxString::~SvLBoxString()
SvListView::Clear()
SvListView::CollapseListEntry(SvTreeListEntry*)
SvListView::ExpandListEntry(SvTreeListEntry*)
SvListView::GetViewData(SvTreeListEntry const*) const
SvListView::GetViewData(SvTreeListEntry*)
SvListView::HasViewData() const
SvListView::InitViewData(SvViewDataEntry*, SvTreeListEntry*)
SvListView::IsAllExpanded(SvTreeListEntry*) const
SvListView::ModelHasCleared()
SvListView::ModelHasEntryInvalidated(SvTreeListEntry*)
SvListView::ModelHasInserted(SvTreeListEntry*)
SvListView::ModelHasInsertedTree(SvTreeListEntry*)
SvListView::ModelHasMoved(SvTreeListEntry*)
SvListView::ModelHasRemoved(SvTreeListEntry*)
SvListView::ModelIsMoving(SvTreeListEntry*)
SvListView::ModelIsRemoving(SvTreeListEntry*)
SvListView::ModelNotification(SvListAction, SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvListView::SelectListEntry(SvTreeListEntry*, bool)
SvListView::SetEntryFocus(SvTreeListEntry*, bool)
SvListView::SvListView()
SvListView::dispose()
SvListView::~SvListView()
SvLockBytes::Flush() const
SvLockBytes::SetSize(unsigned long)
SvLockBytes::WriteAt(unsigned long, void const*, unsigned long, unsigned long*)
SvMacroTableEventDescriptor::SvMacroTableEventDescriptor(SvEventDescription const*)
SvMacroTableEventDescriptor::SvMacroTableEventDescriptor(SvxMacroTableDtor const&, SvEventDescription const*)
SvMacroTableEventDescriptor::~SvMacroTableEventDescriptor()
SvMemoryStream::AllocateMemory(unsigned long)
SvMemoryStream::FreeMemory()
SvMemoryStream::ReAllocateMemory(long)
SvMemoryStream::~SvMemoryStream()
SvNumberFormatsSupplierObj::SvNumberFormatsSupplierObj()
SvNumberFormatsSupplierObj::SvNumberFormatsSupplierObj(SvNumberFormatter*)
SvNumberFormatsSupplierObj::getNumberFormatSettings()
SvNumberFormatsSupplierObj::getNumberFormats()
SvNumberFormatsSupplierObj::getSharedMutex() const
SvNumberFormatsSupplierObj::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvNumberFormatsSupplierObj::~SvNumberFormatsSupplierObj()
SvNumberFormatter::ChangeCL(SvNumFormatType, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::ExpandTwoDigitYear(unsigned short, unsigned short)
SvNumberFormatter::FillKeywordTable(NfKeywordTable&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetCalendar() const
SvNumberFormatter::GetCharClass() const
SvNumberFormatter::GetCompatibilityCurrency(rtl::OUString&, rtl::OUString&) const
SvNumberFormatter::GetCurrencyEntry(bool&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>, bool)
SvNumberFormatter::GetEntryTable(SvNumFormatType, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetFirstEntryTable(SvNumFormatType&, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>&)
SvNumberFormatter::GetFormatIntegerDigits(unsigned int) const
SvNumberFormatter::GetFormatScanner() const
SvNumberFormatter::GetFormatSpecialInfo(rtl::OUString const&, bool&, bool&, unsigned short&, unsigned short&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetGlobalMutex()
SvNumberFormatter::GetLangDecimalSep(o3tl::strong_int<unsigned short, LanguageTypeTag>) const
SvNumberFormatter::GetLanguageTag() const
SvNumberFormatter::GetNatNum() const
SvNumberFormatter::GetNewCurrencySymbolString(unsigned int, rtl::OUString&, NfCurrencyEntry const**, bool*) const
SvNumberFormatter::GetNoZero() const
SvNumberFormatter::GetNumDecimalSepAlt() const
SvNumberFormatter::GetNumThousandSep() const
SvNumberFormatter::GetStandardName(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetSubstitutedEntry(unsigned int, unsigned int&) const
SvNumberFormatter::GetTimeFormat(double, o3tl::strong_int<unsigned short, LanguageTypeTag>, bool)
SvNumberFormatter::GetTransliteration() const
SvNumberFormatter::GetUsedLanguages(std::vector<o3tl::strong_int<unsigned short, LanguageTypeTag>, std::allocator<o3tl::strong_int<unsigned short, LanguageTypeTag> > >&)
SvNumberFormatter::GetUserDefColor(unsigned short)
SvNumberFormatter::ImpLookupCurrencyEntryLoopBody(NfCurrencyEntry const*&, bool&, NfCurrencyEntry const*, unsigned short, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvNumberFormatter::ImpPosToken(rtl::OUStringBuffer const&, char16_t, int) const
SvNumberFormatter::ImpSubstituteEntry(SvNumberformat*, unsigned int*)
SvNumberFormatter::InvalidateDateAcceptancePatterns()
SvNumberFormatter::IsDecimalSep(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvNumberFormatter::IsLocaleInstalled(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::IsSpecialStandardFormat(unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::IsUserDefined(std::basic_string_view<char16_t, std::char_traits<char16_t> >, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::MatchSystemCurrency()
SvNumberFormatter::PutandConvertEntrySystem(rtl::OUString&, int&, SvNumFormatType&, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::ReplaceSystemCL(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::ResetDefaultSystemCurrency()
SvNumberFormatter::SetDefaultSystemCurrency(std::basic_string_view<char16_t, std::char_traits<char16_t> >, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::SetNoZero(bool)
SvNumberFormatter::SvNumberFormatter(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::TestNewString(rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::~SvNumberFormatter()
SvNumberformat::GetCal() const
SvNumberformat::GetConditions(SvNumberformatLimitOps&, double&, SvNumberformatLimitOps&, double&) const
SvNumberformat::GetDateOrder() const
SvNumberformat::GetDenominatorString(unsigned short) const
SvNumberformat::GetExactDateOrder() const
SvNumberformat::GetFormatStringForTimePrecision(int) const
SvNumberformat::GetFormatter() const
SvNumberformat::GetIntegerFractionDelimiterString(unsigned short) const
SvNumberformat::GetNatNumXml(com::sun::star::i18n::NativeNumberXmlAttributes2&, unsigned short) const
SvNumberformat::GetNewCurrencySymbol(rtl::OUString&, rtl::OUString&) const
SvNumberformat::GetNumForInfo(unsigned short, SvNumFormatType&, bool&, unsigned short&, unsigned short&) const
SvNumberformat::GetNumForNumberElementCount(unsigned short) const
SvNumberformat::GetNumForString(unsigned short, unsigned short, bool) const
SvNumberformat::GetNumForType(unsigned short, unsigned short) const
SvNumberformat::GetNumeratorString(unsigned short) const
SvNumberformat::GetOutputString(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&, Color const**)
SvNumberformat::GetPercentString(unsigned short) const
SvNumberformat::GetQuoteEnd(rtl::OUString const&, int, char16_t, char16_t)
SvNumberformat::HasNewCurrency() const
SvNumberformat::HasPositiveBracketPlaceholder() const
SvNumberformat::HasStringNegativeSign(rtl::OUString const&)
SvNumberformat::InsertBlanks(rtl::OUStringBuffer&, int, char16_t)
SvNumberformat::IsInQuote(rtl::OUString const&, int, char16_t, char16_t, char16_t)
SvNumberformat::IsMinuteSecondFormat() const
SvNumberformat::IsNegativeInBracket() const
SvNumberformat::IsNegativeWithoutSign() const
SvNumberformat::StripNewCurrencyDelimiters(rtl::OUString const&)
SvNumberformat::SvNumberformat(SvNumberformat const&)
SvNumberformat::SvNumberformat(SvNumberformat const&, ImpSvNumberformatScan&)
SvNumberformat::SvNumberformat(rtl::OUString&, ImpSvNumberformatScan*, ImpSvNumberInputScan*, int&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, bool)
SvNumberformat::SwitchToGregorianCalendar(rtl::OUString const&, double) const
SvNumberformat::SwitchToOtherCalendar(rtl::OUString&, double&) const
SvNumberformat::rChrCls() const
SvNumberformat::rLoc() const
SvNumberformat::~SvNumberformat()
SvObjectServerList::Get(SvGlobalName const&) const
SvOutputStream::SvOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
SvOutputStream::~SvOutputStream()
SvRTFParser::GetHexValue()
SvRTFParser::ScanText()
SvRTFParser::SvRTFParser(SvStream&, unsigned char)
SvRTFParser::~SvRTFParser()
SvRefBase::~SvRefBase()
SvStream::ClearBuffer()
SvStream::ClearError()
SvStream::CryptAndWriteBuffer(void const*, unsigned long)
SvStream::EncryptBuffer(void*, unsigned long) const
SvStream::FlushData()
SvStream::GetData(void*, unsigned long)
SvStream::PutData(void const*, unsigned long)
SvStream::ReadUniStringLine(rtl::OUString&, int)
SvStream::SeekPos(unsigned long)
SvStream::SetSize(unsigned long)
SvStream::SvStream()
SvStream::SvStream(SvLockBytes*)
SvStream::WriteLine(std::basic_string_view<char, std::char_traits<char> >)
SvStream::readNumberWithoutSwap_(void*, int)
SvStream::writeNumberWithoutSwap_(void const*, int)
SvStream::~SvStream()
SvTabListBox::DumpAsPropertyTree(tools::JsonWriter&)
SvTabListBox::GetCellText(unsigned int, unsigned short) const
SvTabListBox::GetChildOnPos(SvTreeListEntry*, unsigned int, unsigned int&) const
SvTabListBox::GetEntryOnPos(unsigned int) const
SvTabListBox::GetEntryText(SvTreeListEntry const*, unsigned short)
SvTabListBox::GetEntryText(SvTreeListEntry*) const
SvTabListBox::GetEntryText(unsigned int, unsigned short) const
SvTabListBox::GetLogicTab(unsigned short)
SvTabListBox::GetTabEntryText(unsigned int, unsigned short) const
SvTabListBox::GetToken(rtl::OUString const&, int&)
SvTabListBox::InitEntry(SvTreeListEntry*, rtl::OUString const&, Image const&, Image const&)
SvTabListBox::InsertEntry(rtl::OUString const&, SvTreeListEntry*, bool, unsigned int, void*)
SvTabListBox::InsertEntryToColumn(rtl::OUString const&, SvTreeListEntry*, unsigned int, unsigned short, void*)
SvTabListBox::SetTabEditable(unsigned short, bool)
SvTabListBox::SetTabJustify(unsigned short, SvTabJustify)
SvTabListBox::SetTabs()
SvTabListBox::SetTabs(unsigned short, long const*, MapUnit)
SvTabListBox::SvTabListBox(vcl::Window*, long)
SvTabListBox::dispose()
SvTabListBox::~SvTabListBox()
SvTreeList::Broadcast(SvListAction, SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeList::Clear()
SvTreeList::Clone(SvTreeListEntry*, unsigned int&) const
SvTreeList::CloneEntry(SvTreeListEntry*) const
SvTreeList::Compare(SvTreeListEntry const*, SvTreeListEntry const*) const
SvTreeList::Copy(SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeList::EnableInvalidate(bool)
SvTreeList::First() const
SvTreeList::FirstChild(SvTreeListEntry*) const
SvTreeList::GetAbsPos(SvTreeListEntry const*) const
SvTreeList::GetChildCount(SvTreeListEntry const*) const
SvTreeList::GetChildList(SvTreeListEntry*)
SvTreeList::GetChildList(SvTreeListEntry*) const
SvTreeList::GetChildSelectionCount(SvListView const*, SvTreeListEntry*) const
SvTreeList::GetDepth(SvTreeListEntry const*) const
SvTreeList::GetEntry(SvTreeListEntry*, unsigned int) const
SvTreeList::GetEntry(unsigned int) const
SvTreeList::GetEntryAtAbsPos(unsigned int) const
SvTreeList::GetEntryAtVisPos(SvListView const*, unsigned int) const
SvTreeList::GetParent(SvTreeListEntry const*) const
SvTreeList::GetParent(SvTreeListEntry*)
SvTreeList::GetRelPos(SvTreeListEntry const*)
SvTreeList::GetRootLevelParent(SvTreeListEntry*) const
SvTreeList::GetVisibleChildCount(SvListView const*, SvTreeListEntry*) const
SvTreeList::GetVisibleCount(SvListView*) const
SvTreeList::GetVisiblePos(SvListView const*, SvTreeListEntry const*) const
SvTreeList::Insert(SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeList::InsertTree(SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeList::InvalidateEntry(SvTreeListEntry*)
SvTreeList::IsAtRootDepth(SvTreeListEntry const*) const
SvTreeList::IsChild(SvTreeListEntry const*, SvTreeListEntry const*) const
SvTreeList::IsEntryVisible(SvListView const*, SvTreeListEntry*) const
SvTreeList::Last() const
SvTreeList::LastVisible(SvListView const*) const
SvTreeList::Move(SvTreeListEntry*, SvTreeListEntry*)
SvTreeList::Move(SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeList::Next(SvTreeListEntry*, unsigned short*) const
SvTreeList::NextVisible(SvListView const*, SvTreeListEntry*, unsigned short&) const
SvTreeList::NextVisible(SvListView const*, SvTreeListEntry*, unsigned short*) const
SvTreeList::Prev(SvTreeListEntry*) const
SvTreeList::PrevVisible(SvListView const*, SvTreeListEntry*) const
SvTreeList::PrevVisible(SvListView const*, SvTreeListEntry*, unsigned short&) const
SvTreeList::Remove(SvTreeListEntry const*)
SvTreeList::Resort()
SvTreeList::SvTreeList(SvListView&)
SvTreeList::~SvTreeList()
SvTreeListBox::AcceptDrop(AcceptDropEvent const&)
SvTreeListBox::AddTab(long, SvLBoxTabFlags)
SvTreeListBox::AdjustEntryHeight(Image const&)
SvTreeListBox::AdjustEntryHeightAndRecalc()
SvTreeListBox::ApplySettings(OutputDevice&)
SvTreeListBox::CallImplEventListeners(VclEventId, void*)
SvTreeListBox::CancelTextEditing()
SvTreeListBox::CheckButtonHdl()
SvTreeListBox::CheckDragAndDropMode(SvTreeListBox const*, signed char)
SvTreeListBox::Clear()
SvTreeListBox::ClearTabList()
SvTreeListBox::CloneEntry(SvTreeListEntry*)
SvTreeListBox::Command(CommandEvent const&)
SvTreeListBox::CopySelection(SvTreeListBox*, SvTreeListEntry*)
SvTreeListBox::CreateAccessible()
SvTreeListBox::CurrentEntry(rtl::OUString&) const
SvTreeListBox::DataChanged(DataChangedEvent const&)
SvTreeListBox::DefaultCompare(SvLBoxString const*, SvLBoxString const*)
SvTreeListBox::DeselectHdl()
SvTreeListBox::DoubleClickHdl()
SvTreeListBox::DragFinished(signed char)
SvTreeListBox::EditEntry(SvTreeListEntry*)
SvTreeListBox::EditItemText(SvTreeListEntry*, SvLBoxString*, Selection const&)
SvTreeListBox::EditText(rtl::OUString const&, tools::Rectangle const&, Selection const&)
SvTreeListBox::EditedEntry(SvTreeListEntry*, rtl::OUString const&)
SvTreeListBox::EditedText(rtl::OUString const&)
SvTreeListBox::EditingEntry(SvTreeListEntry*)
SvTreeListBox::EnableCheckButton(SvLBoxButtonData*)
SvTreeListBox::EnableInplaceEditing(bool)
SvTreeListBox::EnableSelectionAsDropTarget(bool)
SvTreeListBox::EndEditing(bool)
SvTreeListBox::ExecuteDrop(ExecuteDropEvent const&)
SvTreeListBox::ExecuteDrop(ExecuteDropEvent const&, SvTreeListBox*)
SvTreeListBox::ExpandedHdl()
SvTreeListBox::ExpandingHdl()
SvTreeListBox::GetCollapsedEntryBmp(SvTreeListEntry const*)
SvTreeListBox::GetDefaultCollapsedEntryBmp() const
SvTreeListBox::GetDefaultCollapsedNodeImage()
SvTreeListBox::GetDefaultExpandedEntryBmp() const
SvTreeListBox::GetDefaultExpandedNodeImage()
SvTreeListBox::GetDragFinishedHdl() const
SvTreeListBox::GetDropTarget(Point const&)
SvTreeListBox::GetEntryPosition(SvTreeListEntry const*) const
SvTreeListBox::GetEntryText(SvTreeListEntry*) const
SvTreeListBox::GetExpandedEntryBmp(SvTreeListEntry const*)
SvTreeListBox::GetExpandedNodeBmp() const
SvTreeListBox::GetFirstDynamicTab() const
SvTreeListBox::GetFirstDynamicTab(unsigned short&) const
SvTreeListBox::GetFirstEntryInView() const
SvTreeListBox::GetFirstTab(SvLBoxTabFlags, unsigned short&)
SvTreeListBox::GetFocus()
SvTreeListBox::GetFocusRect(SvTreeListEntry const*, long)
SvTreeListBox::GetItem(SvTreeListEntry*, long)
SvTreeListBox::GetItem(SvTreeListEntry*, long, SvLBoxTab**)
SvTreeListBox::GetItemPos(SvTreeListEntry*, unsigned short)
SvTreeListBox::GetLastTab(SvLBoxTabFlags, unsigned short&)
SvTreeListBox::GetNextEntryInView(SvTreeListEntry*) const
SvTreeListBox::GetOptimalSize() const
SvTreeListBox::GetOutputSizePixel() const
SvTreeListBox::GetTab(SvTreeListEntry const*, SvLBoxItem const*) const
SvTreeListBox::GetTabPos(SvTreeListEntry const*, SvLBoxTab const*) const
SvTreeListBox::GetUITestFactory() const
SvTreeListBox::GetViewDataEntry(SvTreeListEntry const*) const
SvTreeListBox::GetViewDataItem(SvTreeListEntry const*, SvLBoxItem const*)
SvTreeListBox::GetViewDataItem(SvTreeListEntry const*, SvLBoxItem const*) const
SvTreeListBox::ImplEditEntry(SvTreeListEntry*)
SvTreeListBox::ImplShowTargetEmphasis(SvTreeListEntry*, bool)
SvTreeListBox::InitEntry(SvTreeListEntry*, rtl::OUString const&, Image const&, Image const&)
SvTreeListBox::InitSettings()
SvTreeListBox::InitViewData(SvViewDataEntry*, SvTreeListEntry*)
SvTreeListBox::Insert(SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeListBox::Insert(SvTreeListEntry*, unsigned int)
SvTreeListBox::InsertEntry(rtl::OUString const&, SvTreeListEntry*, bool, unsigned int, void*)
SvTreeListBox::Invalidate(InvalidateFlags)
SvTreeListBox::Invalidate(tools::Rectangle const&, InvalidateFlags)
SvTreeListBox::InvalidateEntry(SvTreeListEntry*)
SvTreeListBox::KeyInput(KeyEvent const&)
SvTreeListBox::LoseFocus()
SvTreeListBox::MakeVisible(SvTreeListEntry*)
SvTreeListBox::MakeVisible(SvTreeListEntry*, bool)
SvTreeListBox::ModelHasCleared()
SvTreeListBox::ModelHasEntryInvalidated(SvTreeListEntry*)
SvTreeListBox::ModelHasInserted(SvTreeListEntry*)
SvTreeListBox::ModelHasInsertedTree(SvTreeListEntry*)
SvTreeListBox::ModelHasMoved(SvTreeListEntry*)
SvTreeListBox::ModelHasRemoved(SvTreeListEntry*)
SvTreeListBox::ModelIsMoving(SvTreeListEntry*)
SvTreeListBox::ModelIsRemoving(SvTreeListEntry*)
SvTreeListBox::ModelNotification(SvListAction, SvTreeListEntry*, SvTreeListEntry*, unsigned int)
SvTreeListBox::MouseButtonDown(MouseEvent const&)
SvTreeListBox::MouseButtonUp(MouseEvent const&)
SvTreeListBox::MouseMove(MouseEvent const&)
SvTreeListBox::MoveSelectionCopyFallbackPossible(SvTreeListBox*, SvTreeListEntry*, bool)
SvTreeListBox::NextEntry(void const*, rtl::OUString&) const
SvTreeListBox::NotifyCopying(SvTreeListEntry*, SvTreeListEntry const*, SvTreeListEntry*&, unsigned int&)
SvTreeListBox::NotifyMoving(SvTreeListEntry*, SvTreeListEntry const*, SvTreeListEntry*&, unsigned int&)
SvTreeListBox::NotifyScrolled()
SvTreeListBox::NotifyStartDrag()
SvTreeListBox::OnCurrentEntryChanged()
SvTreeListBox::Paint(OutputDevice&, tools::Rectangle const&)
SvTreeListBox::RecalcViewData()
SvTreeListBox::RemoveEntry(SvTreeListEntry const*)
SvTreeListBox::RemoveSelection()
SvTreeListBox::RequestHelp(HelpEvent const&)
SvTreeListBox::RequestingChildren(SvTreeListEntry*)
SvTreeListBox::Resize()
SvTreeListBox::ScrollOutputArea(short)
SvTreeListBox::ScrollToAbsPos(long)
SvTreeListBox::SelectAll(bool)
SvTreeListBox::SelectChildren(SvTreeListEntry*, bool)
SvTreeListBox::SelectEntry(void const*)
SvTreeListBox::SelectHdl()
SvTreeListBox::SetAlternatingRowColors(bool)
SvTreeListBox::SetCheckButtonData(SvLBoxButtonData*)
SvTreeListBox::SetCollapsedEntryBmp(SvTreeListEntry*, Image const&)
SvTreeListBox::SetCollapsedNodeBmp(Image const&)
SvTreeListBox::SetCurEntry(SvTreeListEntry*)
SvTreeListBox::SetDefaultCollapsedEntryBmp(Image const&)
SvTreeListBox::SetDefaultExpandedEntryBmp(Image const&)
SvTreeListBox::SetDragDropMode(DragDropMode)
SvTreeListBox::SetDragHelper(rtl::Reference<TransferDataContainer> const&, unsigned char)
SvTreeListBox::SetEntryHeight(short)
SvTreeListBox::SetEntryText(SvTreeListEntry*, rtl::OUString const&)
SvTreeListBox::SetEntryWidth(short)
SvTreeListBox::SetExpandedEntryBmp(SvTreeListEntry*, Image const&)
SvTreeListBox::SetExpandedNodeBmp(Image const&)
SvTreeListBox::SetFont(vcl::Font const&)
SvTreeListBox::SetForceMakeVisible(bool)
SvTreeListBox::SetHighlightRange(unsigned short, unsigned short)
SvTreeListBox::SetNoAutoCurEntry(bool)
SvTreeListBox::SetNodeBitmaps(Image const&, Image const&)
SvTreeListBox::SetSelectionMode(SelectionMode)
SvTreeListBox::SetSpaceBetweenEntries(short)
SvTreeListBox::SetSublistOpenWithLeftRight()
SvTreeListBox::SetTabs()
SvTreeListBox::SetUpdateMode(bool)
SvTreeListBox::SetupDragOrigin()
SvTreeListBox::StartDrag(signed char, Point const&)
SvTreeListBox::StateChanged(StateChangedType)
SvTreeListBox::SvTreeListBox(vcl::Window*, long)
SvTreeListBox::UnsetDropTarget()
SvTreeListBox::dispose()
SvTreeListBox::getPreferredDimensions(std::vector<long, std::allocator<long> >&) const
SvTreeListBox::set_min_width_in_chars(int)
SvTreeListBox::set_property(rtl::OString const&, rtl::OUString const&)
SvTreeListBox::~SvTreeListBox()
SvTreeListEntry::AddItem(std::unique_ptr<SvLBoxItem, std::default_delete<SvLBoxItem> >)
SvTreeListEntry::ClearChildren()
SvTreeListEntry::Clone(SvTreeListEntry*)
SvTreeListEntry::EnableChildrenOnDemand(bool)
SvTreeListEntry::GetChildListPos() const
SvTreeListEntry::GetFirstItem(SvLBoxItemType)
SvTreeListEntry::GetFirstItem(SvLBoxItemType) const
SvTreeListEntry::GetItem(unsigned long) const
SvTreeListEntry::GetPos(SvLBoxItem const*) const
SvTreeListEntry::HasChildListPos() const
SvTreeListEntry::InvalidateChildrensListPositions()
SvTreeListEntry::LastSibling() const
SvTreeListEntry::PrevSibling() const
SvTreeListEntry::ReplaceItem(std::unique_ptr<SvLBoxItem, std::default_delete<SvLBoxItem> >, unsigned long)
SvTreeListEntry::SetFlags(SvTLEntryFlags)
SvTreeListEntry::SetListPositions()
SvTreeListEntry::SetUserData(void*)
SvTreeListEntry::SvTreeListEntry()
SvTreeListEntry::~SvTreeListEntry()
SvUnoAttributeContainer::SvUnoAttributeContainer(std::unique_ptr<SvXMLAttrContainerData, std::default_delete<SvXMLAttrContainerData> >)
SvUnoAttributeContainer::getByName(rtl::OUString const&)
SvUnoAttributeContainer::getElementNames()
SvUnoAttributeContainer::getElementType()
SvUnoAttributeContainer::getImplementationName()
SvUnoAttributeContainer::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvUnoAttributeContainer::getSupportedServiceNames()
SvUnoAttributeContainer::hasByName(rtl::OUString const&)
SvUnoAttributeContainer::hasElements()
SvUnoAttributeContainer::insertByName(rtl::OUString const&, com::sun::star::uno::Any const&)
SvUnoAttributeContainer::removeByName(rtl::OUString const&)
SvUnoAttributeContainer::replaceByName(rtl::OUString const&, com::sun::star::uno::Any const&)
SvUnoAttributeContainer::supportsService(rtl::OUString const&)
SvXMLAttrContainerData::Remove(unsigned long)
SvXMLAttrContainerData::SetAt(unsigned long, rtl::OUString const&, rtl::OUString const&)
SvXMLAttrContainerData::SetAt(unsigned long, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLAttrContainerData::SetAt(unsigned long, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLAttrContainerData::SvXMLAttrContainerData()
SvXMLAttrContainerData::SvXMLAttrContainerData(SvXMLAttrContainerData const&)
SvXMLAttrContainerData::~SvXMLAttrContainerData()
SvXMLAttrContainerItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvXMLAttrContainerItem::SvXMLAttrContainerItem(SvXMLAttrContainerItem const&)
SvXMLAttrContainerItem::SvXMLAttrContainerItem(unsigned short)
SvXMLAttrContainerItem::operator==(SfxPoolItem const&) const
SvXMLAttrContainerItem::~SvXMLAttrContainerItem()
SvXMLAttributeList::GetIndexByName(rtl::OUString const&) const
SvXMLAttributeList::RemoveAttributeByIndex(short)
SvXMLAttributeList::RenameAttributeByIndex(short, rtl::OUString const&)
SvXMLAttributeList::SetValueByIndex(short, rtl::OUString const&)
SvXMLAttributeList::SvXMLAttributeList()
SvXMLAttributeList::SvXMLAttributeList(SvXMLAttributeList const&)
SvXMLAttributeList::SvXMLAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SvXMLAttributeList::createClone()
SvXMLAttributeList::getLength()
SvXMLAttributeList::getNameByIndex(short)
SvXMLAttributeList::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvXMLAttributeList::getTypeByIndex(short)
SvXMLAttributeList::getTypeByName(rtl::OUString const&)
SvXMLAttributeList::getValueByIndex(short)
SvXMLAttributeList::getValueByName(rtl::OUString const&)
SvXMLAttributeList::~SvXMLAttributeList()
SvXMLAutoStylePoolP::GetAutoStyleEntries() const
SvXMLAutoStylePoolP::GetRegisteredNames(com::sun::star::uno::Sequence<int>&, com::sun::star::uno::Sequence<rtl::OUString>&)
SvXMLAutoStylePoolP::RegisterNames(com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
SvXMLAutoStylePoolP::SvXMLAutoStylePoolP(SvXMLExport&)
SvXMLAutoStylePoolP::~SvXMLAutoStylePoolP()
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, bool, unsigned short, xmloff::token::XMLTokenEnum, bool, bool)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, rtl::OUString const&, bool, bool)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, unsigned short, char const*, bool, bool)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, unsigned short, rtl::OUString const&, bool, bool)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, unsigned short, xmloff::token::XMLTokenEnum, bool, bool)
SvXMLElementExport::~SvXMLElementExport()
SvXMLEmbeddedObjectHelper::Init(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, comphelper::IEmbeddedHelper&, SvXMLEmbeddedObjectHelperMode)
SvXMLEmbeddedObjectHelper::SvXMLEmbeddedObjectHelper()
SvXMLEmbeddedObjectHelper::SvXMLEmbeddedObjectHelper(comphelper::IEmbeddedHelper&, SvXMLEmbeddedObjectHelperMode)
SvXMLEmbeddedObjectHelper::disposing()
SvXMLEmbeddedObjectHelper::getByName(rtl::OUString const&)
SvXMLEmbeddedObjectHelper::getElementNames()
SvXMLEmbeddedObjectHelper::getElementType()
SvXMLEmbeddedObjectHelper::hasByName(rtl::OUString const&)
SvXMLEmbeddedObjectHelper::hasElements()
SvXMLEmbeddedObjectHelper::resolveEmbeddedObjectURL(rtl::OUString const&)
SvXMLEmbeddedObjectHelper::splitObjectURL(rtl::OUString const&, rtl::OUString&, rtl::OUString&)
SvXMLEmbeddedObjectHelper::~SvXMLEmbeddedObjectHelper()
SvXMLExport::AddAttributeXmlId(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SvXMLExport::AddAttributesRDFa(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
SvXMLExport::AddLanguageTagAttributes(unsigned short, unsigned short, LanguageTag const&, bool)
SvXMLExport::EnsureNamespace(rtl::OUString const&)
SvXMLExport::GetDestinationShellID() const
SvXMLExport::GetGraphicMimeTypeFromStream(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString&)
SvXMLExport::GetImageMapExport()
SvXMLExport::GetODFVersionAttributeValue() const
SvXMLExport::GetSourceShellID() const
SvXMLExport::GetTargetStorage() const
SvXMLExport::GetViewSettingsAndViews(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
SvXMLExport::SetError(int, com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
SvXMLExport::SetNullDateOnUnitConverter()
SvXMLExport::SvXMLExport(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, FieldUnit, SvXMLExportFlags)
SvXMLExport::SvXMLExport(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, short, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&)
SvXMLExport::SvXMLExport(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, short, xmloff::token::XMLTokenEnum, SvXMLExportFlags)
SvXMLExport::dataStyleForceSystemLanguage(int) const
SvXMLExport::exportTextNumberElement() const
SvXMLExport::writeOutlineStyleAsNormalListStyle() const
SvXMLExport::~SvXMLExport()
SvXMLExportPropertyMapper::Equals(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&) const
SvXMLExportPropertyMapper::FilterDefaults(SvXMLExport const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&) const
SvXMLExportPropertyMapper::Filter_(SvXMLExport const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, bool) const
SvXMLExportPropertyMapper::GetStyleName() const
SvXMLExportPropertyMapper::LessPartial(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&) const
SvXMLExportPropertyMapper::SetStyleName(rtl::OUString const&)
SvXMLExportPropertyMapper::_exportXML(SvXMLAttributeList&, XMLPropertyState const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const*, unsigned int) const
SvXMLExportPropertyMapper::_exportXML(unsigned short, unsigned short&, SvXMLAttributeList&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, std::vector<unsigned short, std::allocator<unsigned short> >*, int, int) const
SvXMLExportPropertyMapper::exportElementItems(SvXMLExport&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, SvXmlExportFlags, std::vector<unsigned short, std::allocator<unsigned short> > const&) const
SvXMLExportPropertyMapper::exportXML(SvXMLExport&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, SvXmlExportFlags, bool) const
SvXMLExportPropertyMapper::exportXML(SvXMLExport&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, int, int, SvXmlExportFlags, bool) const
SvXMLExportPropertyMapper::~SvXMLExportPropertyMapper()
SvXMLGraphicHelper::Init(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, SvXMLGraphicHelperMode, rtl::OUString const&)
SvXMLGraphicHelper::SvXMLGraphicHelper()
SvXMLGraphicHelper::SvXMLGraphicHelper(SvXMLGraphicHelperMode)
SvXMLGraphicHelper::createInputStream(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
SvXMLGraphicHelper::createOutputStream()
SvXMLGraphicHelper::disposing()
SvXMLGraphicHelper::getInputStream(rtl::OUString const&)
SvXMLGraphicHelper::loadGraphic(rtl::OUString const&)
SvXMLGraphicHelper::loadGraphicFromOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
SvXMLGraphicHelper::resolveGraphicObjectURL(rtl::OUString const&)
SvXMLGraphicHelper::resolveOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
SvXMLGraphicHelper::saveGraphic(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
SvXMLGraphicHelper::saveGraphicByName(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString&, rtl::OUString const&)
SvXMLGraphicHelper::~SvXMLGraphicHelper()
SvXMLImport::AddNumberStyle(int, rtl::OUString const&)
SvXMLImport::AddRDFa(com::sun::star::uno::Reference<com::sun::star::rdf::XMetadatable> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLImport::ConvStarBatsCharToStarSymbol(char16_t)
SvXMLImport::ConvStarMathCharToStarSymbol(char16_t)
SvXMLImport::CreateChartImport()
SvXMLImport::CreateDataStylesImport_()
SvXMLImport::CreateFastContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
SvXMLImport::GetBitmapHelper()
SvXMLImport::GetDashHelper()
SvXMLImport::GetEventImport()
SvXMLImport::GetFontDecls()
SvXMLImport::GetFontDecls() const
SvXMLImport::GetGradientHelper()
SvXMLImport::GetHatchHelper()
SvXMLImport::GetMarkerHelper()
SvXMLImport::GetStreamForEmbeddedObjectURLFromBase64() const
SvXMLImport::GetStyles() const
SvXMLImport::GetTransGradientHelper()
SvXMLImport::IsODFVersionConsistent(rtl::OUString const&)
SvXMLImport::IsOOoXML() const
SvXMLImport::IsPackageURL(rtl::OUString const&) const
SvXMLImport::IsShapePositionInHoriL2R() const
SvXMLImport::IsTextDocInOOoFileFormat() const
SvXMLImport::NotifyMacroEventRead()
SvXMLImport::ResolveEmbeddedObjectURL(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLImport::ResolveEmbeddedObjectURLFromBase64()
SvXMLImport::SetError(int, com::sun::star::uno::Sequence<rtl::OUString> const&)
SvXMLImport::SetError(int, rtl::OUString const&)
SvXMLImport::SvXMLImport(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, SvXMLImportFlags, com::sun::star::uno::Sequence<rtl::OUString> const&)
SvXMLImport::addEmbeddedFont(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&, char const*, std::vector<unsigned char, std::allocator<unsigned char> > const&, bool)
SvXMLImport::embeddedFontAlreadyProcessed(rtl::OUString const&)
SvXMLImport::getBuildIds(int&, int&) const
SvXMLImport::getGeneratorVersion() const
SvXMLImport::getInterfaceToIdentifierMapper()
SvXMLImport::getNamespacePrefixFromURI(rtl::OUString const&)
SvXMLImport::getNamespaceURIFromToken(int)
SvXMLImport::getPrefixAndNameFromToken(int)
SvXMLImport::getTokenFromName(rtl::OUString const&)
SvXMLImport::getUnoTunnelId()
SvXMLImport::initializeNamespaceMaps()
SvXMLImport::isGeneratorVersionOlderThan(unsigned short, unsigned short)
SvXMLImport::needFixPositionAfterZ() const
SvXMLImport::registerNamespaces()
SvXMLImport::~SvXMLImport()
SvXMLImportContext::~SvXMLImportContext()
SvXMLImportPropertyMapper::CheckSpecialContext(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, ContextID_Index_Pair*) const
SvXMLImportPropertyMapper::FillMultiPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XMultiPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, rtl::Reference<XMLPropertySetMapper> const&, ContextID_Index_Pair*)
SvXMLImportPropertyMapper::FillPropertySequence(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&) const
SvXMLImportPropertyMapper::FillPropertySet(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, ContextID_Index_Pair*) const
SvXMLImportPropertyMapper::FillPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, rtl::Reference<XMLPropertySetMapper> const&, SvXMLImport&, ContextID_Index_Pair*)
SvXMLImportPropertyMapper::FillTolerantMultiPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XTolerantMultiPropertySet> const&, rtl::Reference<XMLPropertySetMapper> const&, SvXMLImport&, ContextID_Index_Pair*)
SvXMLImportPropertyMapper::PrepareForMultiPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, rtl::Reference<XMLPropertySetMapper> const&, ContextID_Index_Pair*, com::sun::star::uno::Sequence<rtl::OUString>&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
SvXMLImportPropertyMapper::importXML(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, unsigned int, int, int) const
SvXMLImportPropertyMapper::importXMLAttribute(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, unsigned int, int, int, com::sun::star::uno::Reference<com::sun::star::container::XNameContainer>&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&) const
SvXMLImportPropertyMapper::~SvXMLImportPropertyMapper()
SvXMLLegacyToFastDocHandler::SvXMLLegacyToFastDocHandler(rtl::Reference<SvXMLImport> const&)
SvXMLLegacyToFastDocHandler::characters(rtl::OUString const&)
SvXMLLegacyToFastDocHandler::endDocument()
SvXMLLegacyToFastDocHandler::endElement(rtl::OUString const&)
SvXMLLegacyToFastDocHandler::ignorableWhitespace(rtl::OUString const&)
SvXMLLegacyToFastDocHandler::processingInstruction(rtl::OUString const&, rtl::OUString const&)
SvXMLLegacyToFastDocHandler::setDocumentLocator(com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
SvXMLLegacyToFastDocHandler::setTargetDocument(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&)
SvXMLLegacyToFastDocHandler::startDocument()
SvXMLLegacyToFastDocHandler::startElement(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SvXMLMetaDocumentContext::FinishMetaElement()
SvXMLMetaDocumentContext::setBuildId(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
SvXMLMetaDocumentContext::~SvXMLMetaDocumentContext()
SvXMLNamespaceMap::AddAtIndex(rtl::OUString const&, rtl::OUString const&, unsigned short)
SvXMLNamespaceMap::AddIfKnown(rtl::OUString const&, rtl::OUString const&)
SvXMLNamespaceMap::GetAttrNameByIndex(unsigned short) const
SvXMLNamespaceMap::GetFirstIndex() const
SvXMLNamespaceMap::GetIndexByKey(unsigned short)
SvXMLNamespaceMap::GetKeyByName(rtl::OUString const&) const
SvXMLNamespaceMap::GetKeyByPrefix(rtl::OUString const&) const
SvXMLNamespaceMap::GetNextIndex(unsigned short) const
SvXMLNamespaceMap::GetPrefixByIndex(unsigned short) const
SvXMLNamespaceMap::GetPrefixByKey(unsigned short) const
SvXMLNamespaceMap::NormalizeOasisURN(rtl::OUString&)
SvXMLNamespaceMap::NormalizeURI(rtl::OUString&)
SvXMLNamespaceMap::NormalizeW3URI(rtl::OUString&)
SvXMLNamespaceMap::SvXMLNamespaceMap()
SvXMLNamespaceMap::SvXMLNamespaceMap(SvXMLNamespaceMap const&)
SvXMLNamespaceMap::operator==(SvXMLNamespaceMap const&) const
SvXMLNamespaceMap::~SvXMLNamespaceMap()
SvXMLNumFmtExport::Export(bool)
SvXMLNumFmtExport::ForceSystemLanguage(unsigned int)
SvXMLNumFmtExport::GetStyleName(unsigned int)
SvXMLNumFmtExport::GetWasUsed() const
SvXMLNumFmtExport::SetUsed(unsigned int)
SvXMLNumFmtExport::SetWasUsed(com::sun::star::uno::Sequence<int> const&)
SvXMLNumFmtExport::SvXMLNumFmtExport(SvXMLExport&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
SvXMLNumFmtExport::SvXMLNumFmtExport(SvXMLExport&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&, rtl::OUString const&)
SvXMLNumFmtExport::~SvXMLNumFmtExport()
SvXMLNumFormatContext::AddColor(Color)
SvXMLNumFormatContext::AddCondition(int)
SvXMLNumFormatContext::AddCondition(rtl::OUString const&, rtl::OUString const&)
SvXMLNumFormatContext::AddCurrency(rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvXMLNumFormatContext::AddNfKeyword(unsigned short)
SvXMLNumFormatContext::AddNumber(SvXMLNumberInfo const&)
SvXMLNumFormatContext::AddToCode(char16_t)
SvXMLNumFormatContext::AddToCode(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLNumFormatContext::CreateAndInsert(SvNumberFormatter*)
SvXMLNumFormatContext::CreateAndInsert(bool)
SvXMLNumFormatContext::CreateAndInsert(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
SvXMLNumFormatContext::GetLocaleData() const
SvXMLNumFormatContext::IsSystemLanguage() const
SvXMLNumFormatContext::ReplaceNfKeyword(unsigned short, unsigned short)
SvXMLNumFormatContext::SvXMLNumFormatContext(SvXMLImport&, int, SvXMLNumImpData*, SvXMLStylesTokens, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, SvXMLStylesContext&)
SvXMLNumFormatContext::SvXMLNumFormatContext(SvXMLImport&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, int, o3tl::strong_int<unsigned short, LanguageTypeTag>, SvXMLStylesContext&)
SvXMLNumFormatContext::UpdateCalendar(rtl::OUString const&)
SvXMLNumFormatContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
SvXMLNumFormatContext::~SvXMLNumFormatContext()
SvXMLPropertySetContext::SvXMLPropertySetContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, unsigned int, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, rtl::Reference<SvXMLImportPropertyMapper> const&, int, int)
SvXMLPropertySetContext::~SvXMLPropertySetContext()
SvXMLStyleContext::SvXMLStyleContext(SvXMLImport&, XmlStyleFamily, bool)
SvXMLStyleContext::~SvXMLStyleContext()
SvXMLStylesContext::GetAutoStyles(XmlStyleFamily) const
SvXMLStylesContext::GetFamily(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLStylesContext::GetStyle(unsigned int)
SvXMLStylesContext::GetStyle(unsigned int) const
SvXMLStylesContext::GetStyleCount() const
SvXMLStylesContext::dispose()
SvXMLStylesContext::~SvXMLStylesContext()
SvXMLTokenEnumerator::SvXMLTokenEnumerator(std::basic_string_view<char16_t, std::char_traits<char16_t> >, char16_t)
SvXMLTokenMap::SvXMLTokenMap(SvXMLTokenMapEntry const*)
SvXMLTokenMap::~SvXMLTokenMap()
SvXMLUnitConverter::SvXMLUnitConverter(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, short, short, SvtSaveOptions::ODFSaneDefaultVersion)
SvXMLUnitConverter::convertB3DVector(basegfx::B3DVector&, std::basic_string_view<char, std::char_traits<char> >)
SvXMLUnitConverter::convertB3DVector(basegfx::B3DVector&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLUnitConverter::convertB3DVector(rtl::OUStringBuffer&, basegfx::B3DVector const&)
SvXMLUnitConverter::convertDateTime(double&, std::basic_string_view<char, std::char_traits<char> >) const
SvXMLUnitConverter::convertDateTime(double&, std::basic_string_view<char, std::char_traits<char> >, com::sun::star::util::Date const&)
SvXMLUnitConverter::convertDateTime(double&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::util::Date const&)
SvXMLUnitConverter::convertDouble(double&, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvXMLUnitConverter::convertDouble(rtl::OUStringBuffer&, double) const
SvXMLUnitConverter::convertEnumImpl(unsigned short&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, SvXMLEnumStringMapEntry<unsigned short> const*)
SvXMLUnitConverter::convertHex(rtl::OUStringBuffer&, unsigned int)
SvXMLUnitConverter::convertHex(unsigned int&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLUnitConverter::convertMeasureToXML(int) const
SvXMLUnitConverter::convertNumFormat(rtl::OUStringBuffer&, short) const
SvXMLUnitConverter::convertNumFormat(short&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool) const
SvXMLUnitConverter::convertNumLetterSync(rtl::OUStringBuffer&, short)
SvXMLUnitConverter::convertPosition3D(com::sun::star::drawing::Position3D&, std::basic_string_view<char, std::char_traits<char> >) const
SvXMLUnitConverter::convertPosition3D(rtl::OUStringBuffer&, com::sun::star::drawing::Position3D const&)
SvXMLUnitConverter::getNumTypeInfo() const
SvXMLUnitConverter::getSaneDefaultVersion() const
SvXMLUnitConverter::overrideSaneDefaultVersion(SvtSaveOptions::ODFSaneDefaultVersion)
SvXMLUnitConverter::~SvXMLUnitConverter()
SvdProgressInfo::ReportActions(unsigned long)
SvdProgressInfo::ReportInserts(unsigned long)
SvdProgressInfo::ReportRescales(unsigned long)
SvdProgressInfo::SetActionCount(unsigned long)
SvdProgressInfo::SetInsertCount(unsigned long)
SvdProgressInfo::SetNextObject()
SvdProgressInfo::SvdProgressInfo(Link<void*, bool> const&)
SvlResId(TranslateId)
SvmReader::ArcHandler()
SvmReader::BmpExHandler()
SvmReader::BmpExScaleHandler()
SvmReader::BmpExScalePartHandler()
SvmReader::BmpHandler()
SvmReader::BmpScaleHandler()
SvmReader::BmpScalePartHandler()
SvmReader::ChordHandler()
SvmReader::ClipRegionHandler()
SvmReader::CommentHandler()
SvmReader::DefaultHandler()
SvmReader::EPSHandler()
SvmReader::EllipseHandler()
SvmReader::FillColorHandler()
SvmReader::FloatTransparentHandler(ImplMetaReadData*)
SvmReader::FontHandler(ImplMetaReadData*)
SvmReader::GradientExHandler()
SvmReader::GradientHandler()
SvmReader::HatchHandler()
SvmReader::ISectRectClipRegionHandler()
SvmReader::ISectRegionClipRegionHandler()
SvmReader::LayoutModeHandler()
SvmReader::LineColorHandler()
SvmReader::LineHandler()
SvmReader::MapModeHandler()
SvmReader::MaskHandler()
SvmReader::MaskScaleHandler()
SvmReader::MaskScalePartHandler()
SvmReader::MetaActionHandler(ImplMetaReadData*)
SvmReader::MoveClipRegionHandler()
SvmReader::OverlineColorHandler()
SvmReader::PieHandler()
SvmReader::PixelHandler()
SvmReader::PointHandler()
SvmReader::PolyLineHandler()
SvmReader::PolyPolygonHandler()
SvmReader::PolygonHandler()
SvmReader::PopHandler()
SvmReader::PushHandler()
SvmReader::RasterOpHandler()
SvmReader::ReadColor(Color&)
SvmReader::RectHandler()
SvmReader::RefPointHandler()
SvmReader::RoundRectHandler()
SvmReader::StretchTextHandler(ImplMetaReadData const*)
SvmReader::SvmReader(SvStream&)
SvmReader::TextAlignHandler()
SvmReader::TextArrayHandler(ImplMetaReadData const*)
SvmReader::TextColorHandler()
SvmReader::TextFillColorHandler()
SvmReader::TextHandler(ImplMetaReadData const*)
SvmReader::TextLanguageHandler()
SvmReader::TextLineColorHandler()
SvmReader::TextLineHandler()
SvmReader::TextRectHandler(ImplMetaReadData const*)
SvmReader::TransparentHandler()
SvmReader::WallpaperHandler()
SvmWriter::ActionHandler(MetaAction const*)
SvmWriter::ArcHandler(MetaArcAction const*)
SvmWriter::BmpExHandler(MetaBmpExAction const*)
SvmWriter::BmpExScaleHandler(MetaBmpExScaleAction const*)
SvmWriter::BmpExScalePartHandler(MetaBmpExScalePartAction const*)
SvmWriter::BmpHandler(MetaBmpAction const*)
SvmWriter::BmpScaleHandler(MetaBmpScaleAction const*)
SvmWriter::BmpScalePartHandler(MetaBmpScalePartAction const*)
SvmWriter::ChordHandler(MetaChordAction const*)
SvmWriter::ClipRegionHandler(MetaClipRegionAction const*)
SvmWriter::CommentHandler(MetaCommentAction const*)
SvmWriter::EPSHandler(MetaEPSAction const*)
SvmWriter::EllipseHandler(MetaEllipseAction const*)
SvmWriter::FillColorHandler(MetaFillColorAction const*)
SvmWriter::FloatTransparentHandler(MetaFloatTransparentAction const*)
SvmWriter::FontHandler(MetaFontAction const*, ImplMetaWriteData*)
SvmWriter::GradientExHandler(MetaGradientExAction const*)
SvmWriter::GradientHandler(MetaGradientAction const*)
SvmWriter::HatchHandler(MetaHatchAction const*)
SvmWriter::ISectRectClipRegionHandler(MetaISectRectClipRegionAction const*)
SvmWriter::ISectRegionClipRegionHandler(MetaISectRegionClipRegionAction const*)
SvmWriter::LayoutModeHandler(MetaLayoutModeAction const*)
SvmWriter::LineColorHandler(MetaLineColorAction const*)
SvmWriter::LineHandler(MetaLineAction const*)
SvmWriter::MapModeHandler(MetaMapModeAction const*)
SvmWriter::MaskHandler(MetaMaskAction const*)
SvmWriter::MaskScaleHandler(MetaMaskScaleAction const*)
SvmWriter::MaskScalePartHandler(MetaMaskScalePartAction const*)
SvmWriter::MetaActionHandler(MetaAction*, ImplMetaWriteData*)
SvmWriter::MoveClipRegionHandler(MetaMoveClipRegionAction const*)
SvmWriter::OverlineColorHandler(MetaOverlineColorAction const*)
SvmWriter::PieHandler(MetaPieAction const*)
SvmWriter::PixelHandler(MetaPixelAction const*)
SvmWriter::PointHandler(MetaPointAction const*)
SvmWriter::PolyLineHandler(MetaPolyLineAction const*)
SvmWriter::PolyPolygonHandler(MetaPolyPolygonAction const*)
SvmWriter::PolygonHandler(MetaPolygonAction const*)
SvmWriter::PopHandler(MetaPopAction const*)
SvmWriter::PushHandler(MetaPushAction const*)
SvmWriter::RasterOpHandler(MetaRasterOpAction const*)
SvmWriter::RectHandler(MetaRectAction const*)
SvmWriter::RefPointHandler(MetaRefPointAction const*)
SvmWriter::RoundRectHandler(MetaRoundRectAction const*)
SvmWriter::StretchTextHandler(MetaStretchTextAction const*, ImplMetaWriteData const*)
SvmWriter::SvmWriter(SvStream&)
SvmWriter::TextAlignHandler(MetaTextAlignAction const*)
SvmWriter::TextArrayHandler(MetaTextArrayAction const*, ImplMetaWriteData const*)
SvmWriter::TextColorHandler(MetaTextColorAction const*)
SvmWriter::TextFillColorHandler(MetaTextFillColorAction const*)
SvmWriter::TextHandler(MetaTextAction const*, ImplMetaWriteData const*)
SvmWriter::TextLanguageHandler(MetaTextLanguageAction const*)
SvmWriter::TextLineColorHandler(MetaTextLineColorAction const*)
SvmWriter::TextLineHandler(MetaTextLineAction const*)
SvmWriter::TextRectHandler(MetaTextRectAction const*, ImplMetaWriteData const*)
SvmWriter::TransparentHandler(MetaTransparentAction const*)
SvmWriter::WallpaperHandler(MetaWallpaperAction const*)
SvmWriter::WriteColor(Color)
SvpSalBitmap::AcquireBuffer(BitmapAccessMode)
SvpSalBitmap::Create(SalBitmap const&)
SvpSalBitmap::Create(SalBitmap const&, SalGraphics*)
SvpSalBitmap::Create(SalBitmap const&, vcl::PixelFormat)
SvpSalBitmap::Create(Size const&, vcl::PixelFormat, BitmapPalette const&)
SvpSalBitmap::Create(com::sun::star::uno::Reference<com::sun::star::rendering::XBitmapCanvas> const&, Size&, bool)
SvpSalBitmap::Create(std::unique_ptr<BitmapBuffer, std::default_delete<BitmapBuffer> >)
SvpSalBitmap::Destroy()
SvpSalBitmap::GetBitCount() const
SvpSalBitmap::GetSize() const
SvpSalBitmap::GetSystemData(BitmapSystemData&)
SvpSalBitmap::ReleaseBuffer(BitmapBuffer*, BitmapAccessMode)
SvpSalBitmap::Replace(Color const&, Color const&, unsigned char)
SvpSalBitmap::Scale(double const&, double const&, BmpScaleFlag)
SvpSalBitmap::ScalingSupported() const
SvpSalBitmap::SvpSalBitmap()
SvpSalBitmap::~SvpSalBitmap()
SvpSalGraphics::CreateSurface(OutputDevice const&, int, int, int, int) const
SvpSalGraphics::CreateSurface(std::shared_ptr<_cairo_surface> const&) const
SvpSalGraphics::GetResolution(int&, int&)
SvpSalGraphics::SupportsCairo() const
SvpSalGraphics::SvpSalGraphics()
SvpSalGraphics::applyColor(_cairo*, Color, double)
SvpSalGraphics::copyWithOperator(SalTwoRect const&, _cairo_surface*, _cairo_operator)
SvpSalGraphics::createCairoSurface(BitmapBuffer const*)
SvpSalGraphics::createTmpCompatibleCairoContext() const
SvpSalGraphics::invert(basegfx::B2DPolygon const&, SalInvert)
SvpSalGraphics::releaseCairoContext(_cairo*, bool, basegfx::B2DRange const&) const
SvpSalGraphics::~SvpSalGraphics()
SvpSalInstance::AddToRecentDocumentList(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvpSalInstance::AnyInput(VclInputFlags)
SvpSalInstance::CheckTimeout(bool)
SvpSalInstance::CloseWakeupPipe(bool)
SvpSalInstance::CreateChildFrame(SystemParentData*, SalFrameStyleFlags)
SvpSalInstance::CreateFrame(SalFrame*, SalFrameStyleFlags)
SvpSalInstance::CreateInfoPrinter(SalPrinterQueueInfo*, ImplJobSetup*)
SvpSalInstance::CreateObject(SalFrame*, SystemWindowData*, bool)
SvpSalInstance::CreatePrintGraphics()
SvpSalInstance::CreatePrinter(SalInfoPrinter*)
SvpSalInstance::CreateSalSystem()
SvpSalInstance::CreateSalTimer()
SvpSalInstance::CreateVirtualDevice(SalGraphics&, long&, long&, DeviceFormat, SystemGraphicsData const*)
SvpSalInstance::CreateWakeupPipe(bool)
SvpSalInstance::DoYield(bool, bool)
SvpSalInstance::GetCairoFontOptions()
SvpSalInstance::IsMainThread() const
SvpSalInstance::StartTimer(unsigned long)
SvpSalInstance::StopTimer()
SvpSalInstance::SvpSalInstance(std::unique_ptr<SalYieldMutex, std::default_delete<SalYieldMutex> >)
SvpSalInstance::Wakeup(SvpRequest)
SvpSalInstance::~SvpSalInstance()
SvpSalVirtualDevice::AcquireGraphics()
SvpSalVirtualDevice::CreateSurface(long, long, unsigned char*)
SvpSalVirtualDevice::~SvpSalVirtualDevice()
SvtAccessibilityOptions::SvtAccessibilityOptions()
SvtAccessibilityOptions::~SvtAccessibilityOptions()
SvtBroadcaster::Add(SvtListener*)
SvtBroadcaster::Normalize() const
SvtBroadcaster::Remove(SvtListener*)
SvtBroadcaster::SvtBroadcaster(SvtBroadcaster const&)
SvtBroadcaster::~SvtBroadcaster()
SvtCTLOptions::SvtCTLOptions(bool)
SvtCTLOptions::~SvtCTLOptions()
SvtCalendarBox::SvtCalendarBox(std::unique_ptr<weld::MenuButton, std::default_delete<weld::MenuButton> >, bool)
SvtCalendarBox::set_label_from_date()
SvtCalendarBox::~SvtCalendarBox()
SvtCommandOptions::EstablishFrameCallback(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SvtCommandOptions::HasEntries(SvtCommandOptions::CmdOption) const
SvtCommandOptions::SvtCommandOptions()
SvtCommandOptions::~SvtCommandOptions()
SvtCompatibilityOptions::SvtCompatibilityOptions()
SvtCompatibilityOptions::~SvtCompatibilityOptions()
SvtFilterOptions::ImplCommit()
SvtFilterOptions::Load()
SvtFilterOptions::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvtFilterOptions::SvtFilterOptions()
SvtFilterOptions::~SvtFilterOptions()
SvtGraphicFill::SvtGraphicFill()
SvtGraphicFill::SvtGraphicFill(tools::PolyPolygon const&, Color, double, SvtGraphicFill::FillRule, SvtGraphicFill::FillType, SvtGraphicFill::Transform const&, bool, SvtGraphicFill::HatchType, Color, SvtGraphicFill::GradientType, Color, Color, int, Graphic const&)
SvtGraphicFill::Transform::Transform()
SvtGraphicFill::getGraphic(Graphic&) const
SvtGraphicFill::getTransform(SvtGraphicFill::Transform&) const
SvtGraphicFill::setPath(tools::PolyPolygon const&)
SvtGraphicStroke::SvtGraphicStroke()
SvtGraphicStroke::SvtGraphicStroke(tools::Polygon const&, tools::PolyPolygon const&, tools::PolyPolygon const&, double, double, SvtGraphicStroke::CapType, SvtGraphicStroke::JoinType, double, std::vector<double, std::allocator<double> >&&)
SvtGraphicStroke::scale(double, double)
SvtGraphicStroke::setEndArrow(tools::PolyPolygon const&)
SvtGraphicStroke::setPath(tools::Polygon const&)
SvtGraphicStroke::setStartArrow(tools::PolyPolygon const&)
SvtHistoryOptions::Clear(EHistoryType)
SvtHistoryOptions::DeleteItem(EHistoryType, rtl::OUString const&)
SvtIconChoiceCtrl::ArrangeIcons()
SvtIconChoiceCtrl::CallImplEventListeners(VclEventId, void*)
SvtIconChoiceCtrl::ClickIcon()
SvtIconChoiceCtrl::Command(CommandEvent const&)
SvtIconChoiceCtrl::CreateAccessible()
SvtIconChoiceCtrl::DataChanged(DataChangedEvent const&)
SvtIconChoiceCtrl::DoKeyInput(KeyEvent const&)
SvtIconChoiceCtrl::DrawEntryImage(SvxIconChoiceCtrlEntry const*, Point const&, OutputDevice&)
SvtIconChoiceCtrl::FillLayoutData() const
SvtIconChoiceCtrl::GetEntryText(SvxIconChoiceCtrlEntry const*)
SvtIconChoiceCtrl::GetFocus()
SvtIconChoiceCtrl::GetStyle() const
SvtIconChoiceCtrl::InsertEntry(rtl::OUString const&, Image const&)
SvtIconChoiceCtrl::KeyInput(KeyEvent const&)
SvtIconChoiceCtrl::LoseFocus()
SvtIconChoiceCtrl::MouseButtonDown(MouseEvent const&)
SvtIconChoiceCtrl::MouseButtonUp(MouseEvent const&)
SvtIconChoiceCtrl::MouseMove(MouseEvent const&)
SvtIconChoiceCtrl::Paint(OutputDevice&, tools::Rectangle const&)
SvtIconChoiceCtrl::RemoveEntry(int)
SvtIconChoiceCtrl::RequestHelp(HelpEvent const&)
SvtIconChoiceCtrl::Resize()
SvtIconChoiceCtrl::SetBackground(Wallpaper const&)
SvtIconChoiceCtrl::SetFont(vcl::Font const&)
SvtIconChoiceCtrl::SetPointFont(vcl::Font const&)
SvtIconChoiceCtrl::SetSelectionMode(SelectionMode)
SvtIconChoiceCtrl::SvtIconChoiceCtrl(vcl::Window*, long)
SvtIconChoiceCtrl::dispose()
SvtIconChoiceCtrl::~SvtIconChoiceCtrl()
SvtLineListBox::GetColorDist(int)
SvtLineListBox::GetColorLine1(int)
SvtLineListBox::GetColorLine2(int)
SvtLineListBox::GetStylePos(int) const
SvtLineListBox::SvtLineListBox(std::unique_ptr<weld::MenuButton, std::default_delete<weld::MenuButton> >)
SvtLineListBox::UpdatePaintLineColor()
SvtLineListBox::~SvtLineListBox()
SvtLinguConfig::GetActiveDictionariesByFormat(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvtLinguConfig::GetDictionaryEntry(rtl::OUString const&, SvtLinguConfigDictionaryEntry&) const
SvtLinguConfig::GetDisabledDictionaries() const
SvtLinguConfig::GetElementNamesFor(rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString>&) const
SvtLinguConfig::GetMainUpdateAccess() const
SvtLinguConfig::GetProperties(com::sun::star::uno::Sequence<rtl::OUString> const&) const
SvtLinguConfig::GetSupportedDictionaryFormatsFor(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString>&) const
SvtLinguConfig::GetSynonymsContextImage(rtl::OUString const&) const
SvtLinguConfig::GetVendorImageUrl_Impl(rtl::OUString const&, rtl::OUString const&) const
SvtLinguConfig::ReplaceSetProperties(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SvtLinguConfig::SvtLinguConfig()
SvtLinguConfig::~SvtLinguConfig()
SvtLinguOptions::SvtLinguOptions()
SvtListener::BroadcasterDying(SvtBroadcaster&)
SvtListener::QueryBase::QueryBase(unsigned short)
SvtListener::QueryBase::~QueryBase()
SvtListener::SvtListener()
SvtListener::SvtListener(SvtListener const&)
SvtListener::~SvtListener()
SvtMiscOptions::AreCurrentSymbolsLarge() const
SvtMiscOptions::SvtMiscOptions()
SvtMiscOptions::~SvtMiscOptions()
SvtModuleOptions::ClassifyFactoryByModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SvtModuleOptions::ClassifyFactoryByName(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SvtModuleOptions::EFactory&)
SvtModuleOptions::ClassifyFactoryByServiceName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvtModuleOptions::ClassifyFactoryByShortName(rtl::OUString const&)
SvtModuleOptions::ClassifyFactoryByURL(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SvtModuleOptions::GetAllServiceNames()
SvtModuleOptions::GetDefaultModuleName() const
SvtModuleOptions::GetFactoryIcon(SvtModuleOptions::EFactory) const
SvtModuleOptions::GetFactoryShortName(SvtModuleOptions::EFactory)
SvtModuleOptions::GetFactoryStandardTemplate(SvtModuleOptions::EFactory) const
SvtModuleOptions::IsDataBase() const
SvtModuleOptions::SetFactoryStandardTemplate(SvtModuleOptions::EFactory, rtl::OUString const&)
SvtModuleOptions::SvtModuleOptions()
SvtModuleOptions::~SvtModuleOptions()
SvtOptionsDialogOptions::IsHidden(rtl::OUString const&) const
SvtOptionsDialogOptions::SvtOptionsDialogOptions()
SvtOptionsDrawinglayer::GetQuadratic3DRenderLimit()
SvtOptionsDrawinglayer::GetQuadraticFormControlRenderLimit()
SvtOptionsDrawinglayer::GetSelectionMaximumLuminancePercent()
SvtOptionsDrawinglayer::IsRenderDecoratedTextDirect()
SvtOptionsDrawinglayer::IsRenderSimpleTextDirect()
SvtOptionsDrawinglayer::IsSnapHorVerLinesToDiscrete()
SvtPathOptions::ExpandMacros(rtl::OUString const&) const
SvtPathOptions::GetBackupPath() const
SvtPathOptions::GetBitmapPath() const
SvtPathOptions::GetClassificationPath() const
SvtPathOptions::GetDictionaryPath() const
SvtPathOptions::GetFavoritesPath() const
SvtPathOptions::GetFilterPath() const
SvtPathOptions::GetFingerprintPath() const
SvtPathOptions::GetHelpPath() const
SvtPathOptions::GetIconsetPath() const
SvtPathOptions::GetLinguisticPath() const
SvtPathOptions::GetModulePath() const
SvtPathOptions::GetNumbertextPath() const
SvtPathOptions::GetPluginPath() const
SvtPathOptions::GetStoragePath() const
SvtPathOptions::SetAddinPath(rtl::OUString const&)
SvtPathOptions::SetAutoCorrectPath(rtl::OUString const&)
SvtPathOptions::SetBackupPath(rtl::OUString const&)
SvtPathOptions::SetBitmapPath(rtl::OUString const&)
SvtPathOptions::SetConfigPath(rtl::OUString const&)
SvtPathOptions::SetDictionaryPath(rtl::OUString const&)
SvtPathOptions::SetFavoritesPath(rtl::OUString const&)
SvtPathOptions::SetFilterPath(rtl::OUString const&)
SvtPathOptions::SetGalleryPath(rtl::OUString const&)
SvtPathOptions::SetGraphicPath(rtl::OUString const&)
SvtPathOptions::SetHelpPath(rtl::OUString const&)
SvtPathOptions::SetLinguisticPath(rtl::OUString const&)
SvtPathOptions::SetModulePath(rtl::OUString const&)
SvtPathOptions::SetPalettePath(rtl::OUString const&)
SvtPathOptions::SetPluginPath(rtl::OUString const&)
SvtPathOptions::SetStoragePath(rtl::OUString const&)
SvtPathOptions::SetTemplatePath(rtl::OUString const&)
SvtPathOptions::SetUserConfigPath(rtl::OUString const&)
SvtPathOptions::SetWorkPath(rtl::OUString const&)
SvtPathOptions::SvtPathOptions()
SvtPathOptions::UseVariable(rtl::OUString const&) const
SvtPathOptions::~SvtPathOptions()
SvtScriptedTextHelper::SvtScriptedTextHelper(OutputDevice&)
SvtScriptedTextHelper::SvtScriptedTextHelper(SvtScriptedTextHelper const&)
SvtScriptedTextHelper::~SvtScriptedTextHelper()
SvtSearchOptions::GetTransliterationFlags() const
SvtSearchOptions::IsBackwards() const
SvtSearchOptions::IsIgnoreDiacritics_CTL() const
SvtSearchOptions::IsIgnoreKashida_CTL() const
SvtSearchOptions::IsNotes() const
SvtSearchOptions::IsSearchFormatted() const
SvtSearchOptions::IsSimilaritySearch() const
SvtSearchOptions::IsUseAsianOptions() const
SvtSearchOptions::IsUseRegularExpression() const
SvtSearchOptions::IsUseWildcard() const
SvtSearchOptions::IsWholeWordsOnly() const
SvtSearchOptions::SetBackwards(bool)
SvtSearchOptions::SetNotes(bool)
SvtSearchOptions::SetSearchForStyles(bool)
SvtSearchOptions::SetSearchFormatted(bool)
SvtSearchOptions::SetSimilaritySearch(bool)
SvtSearchOptions::SetUseAsianOptions(bool)
SvtSearchOptions::SetUseRegularExpression(bool)
SvtSearchOptions::SetUseWildcard(bool)
SvtSearchOptions::SetWholeWordsOnly(bool)
SvtSearchOptions::SvtSearchOptions()
SvtSearchOptions::~SvtSearchOptions()
SvtSecurityOptions::IsMacroDisabled()
SvtSecurityOptions::isSecureMacroUri(rtl::OUString const&, rtl::OUString const&)
SvtSlideSorterBarOptions::SvtSlideSorterBarOptions()
SvtSlideSorterBarOptions::~SvtSlideSorterBarOptions()
SvtSysLocale::GetBestMimeEncoding()
SvtSysLocale::GetOptions() const
SvtSysLocale::SvtSysLocale()
SvtSysLocale::~SvtSysLocale()
SvtSysLocaleOptions::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
SvtSysLocaleOptions::GetCurrencyChangeLink()
SvtSysLocaleOptions::GetRealUILanguageTag() const
SvtSysLocaleOptions::SetCurrencyChangeLink(Link<LinkParamNone*, void> const&)
SvtSysLocaleOptions::SvtSysLocaleOptions()
SvtSysLocaleOptions::~SvtSysLocaleOptions()
SvtTabAppearanceCfg::ImplCommit()
SvtTabAppearanceCfg::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvtTabAppearanceCfg::SvtTabAppearanceCfg()
SvtTabAppearanceCfg::~SvtTabAppearanceCfg()
SvtURLBox::ParseSmart(rtl::OUString const&, rtl::OUString const&)
SvtURLBox::SetNoURLSelection(bool)
SvtURLBox::SetOnlyDirectories(bool)
SvtUserOptions::GetInitMutex()
SvtUserOptions::SvtUserOptions()
SvtUserOptions::~SvtUserOptions()
SvtViewOptions::GetVisible() const
SvtViewOptions::HasVisible() const
SvtViewOptions::IsVisible() const
SvtViewOptions::SetVisible(bool)
SvtViewOptions::SvtViewOptions(EViewType, rtl::OUString const&)
SvtViewOptions::impl_getSetNode(rtl::OUString const&, bool) const
Svx3DChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
Svx3DChildWindow::GetInfo() const
Svx3DChildWindow::Svx3DChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
Svx3DLightControl::AdaptToSelectedLight()
Svx3DLightControl::Construct2()
Svx3DLightControl::ConstructLightObjects()
Svx3DLightControl::GetFocusRect()
Svx3DLightControl::GetLightColor(unsigned int) const
Svx3DLightControl::GetLightDirection(unsigned int) const
Svx3DLightControl::GetLightOnOff(unsigned int) const
Svx3DLightControl::GetPosition(double&, double&)
Svx3DLightControl::GetRotation(double&, double&, double&)
Svx3DLightControl::IsSelectionValid()
Svx3DLightControl::MouseButtonDown(MouseEvent const&)
Svx3DLightControl::MouseButtonUp(MouseEvent const&)
Svx3DLightControl::MouseMove(MouseEvent const&)
Svx3DLightControl::Paint(OutputDevice&, tools::Rectangle const&)
Svx3DLightControl::Resize()
Svx3DLightControl::SetDrawingArea(weld::DrawingArea*)
Svx3DLightControl::SetObjectType(SvxPreviewObjectType)
Svx3DLightControl::SetPosition(double, double)
Svx3DLightControl::SetRotation(double, double, double)
Svx3DLightControl::Svx3DLightControl()
Svx3DLightControl::TrySelection(Point)
Svx3DPreviewControl::Construct()
Svx3DPreviewControl::MouseButtonDown(MouseEvent const&)
Svx3DPreviewControl::Paint(OutputDevice&, tools::Rectangle const&)
Svx3DPreviewControl::Resize()
Svx3DPreviewControl::Set3DAttributes(SfxItemSet const&)
Svx3DPreviewControl::SetDrawingArea(weld::DrawingArea*)
Svx3DPreviewControl::SetObjectType(SvxPreviewObjectType)
Svx3DPreviewControl::Svx3DPreviewControl()
Svx3DPreviewControl::~Svx3DPreviewControl()
Svx3DWin::ClickLight(LightButton const&)
Svx3DWin::Resize()
Svx3DWin::Svx3DWin(SfxBindings*, SfxChildWindow*, vcl::Window*)
Svx3DWin::UpdatePreview()
Svx3DWin::dispose()
Svx3DWin::~Svx3DWin()
SvxAbstractDialogFactory::~SvxAbstractDialogFactory()
SvxAcceptChgCtr::SvxAcceptChgCtr(weld::Container*, weld::Window*, weld::Builder*)
SvxAcceptChgCtr::~SvxAcceptChgCtr()
SvxAdjustItem::Clone(SfxItemPool*) const
SvxAdjustItem::GetEnumValue() const
SvxAdjustItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxAdjustItem::GetValueCount() const
SvxAdjustItem::GetValueTextByPos(unsigned short)
SvxAdjustItem::SetEnumValue(unsigned short)
SvxAdjustItem::SvxAdjustItem(SvxAdjust, unsigned short)
SvxAsianConfig::SvxAsianConfig()
SvxAsianConfig::~SvxAsianConfig()
SvxAttrNameTable::Count()
SvxAuthorField::Clone() const
SvxAuthorField::SvxAuthorField(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, SvxAuthorType, SvxAuthorFormat)
SvxAuthorField::operator==(SvxFieldData const&) const
SvxAutoCorrCfg::SvxAutoCorrCfg()
SvxAutoCorrCfg::~SvxAutoCorrCfg()
SvxAutoCorrDoc::GetLanguage(int) const
SvxAutoCorrDoc::SaveCpltSttWord(ACFlags, int, rtl::OUString const&, char16_t)
SvxAutoCorrDoc::~SvxAutoCorrDoc()
SvxAutoCorrect::CreateLanguageFile(LanguageTag const&, bool)
SvxAutoCorrect::FindInCplSttExceptList(o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString const&, bool)
SvxAutoCorrect::FindInWordStartExceptList(o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString const&)
SvxAutoCorrect::FnCorrectCapsLock(SvxAutoCorrDoc&, rtl::OUString const&, int, int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::GetCharClass_(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::GetDefaultFlags()
SvxAutoCorrect::GetLongText(rtl::OUString const&, rtl::OUString&)
SvxAutoCorrect::InsertQuote(SvxAutoCorrDoc&, int, char16_t, bool, bool, o3tl::strong_int<unsigned short, LanguageTypeTag>, ACQuotes) const
SvxAutoCorrect::NeedsHardspaceAutocorr(char16_t)
SvxAutoCorrect::PutText(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, rtl::OUString const&, SfxObjectShell&, rtl::OUString&)
SvxAutoCorrect::SvxAutoCorrect(SvxAutoCorrect const&)
SvxAutoCorrect::SvxAutoCorrect(rtl::OUString const&, rtl::OUString const&)
SvxAutoCorrect::refreshBlockList(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SvxAutoCorrect::~SvxAutoCorrect()
SvxAutoCorrectLanguageLists::AddToCplSttExceptList(rtl::OUString const&)
SvxAutoCorrectLanguageLists::AddToWordStartExceptList(rtl::OUString const&)
SvxAutoCorrectLanguageLists::GetAutocorrWordList()
SvxAutoCorrectLanguageLists::IsFileChanged_Imp()
SvxAutoCorrectLanguageLists::LoadXMLExceptList_Imp(std::unique_ptr<SvStringsISortDtor, std::default_delete<SvStringsISortDtor> >&, rtl::OUString const&, tools::SvRef<SotStorage>&)
SvxAutoCorrectLanguageLists::MakeBlocklist_Imp(SotStorage&)
SvxAutoCorrectLanguageLists::MakeCombinedChanges(std::vector<SvxAutocorrWord, std::allocator<SvxAutocorrWord> >&, std::vector<SvxAutocorrWord, std::allocator<SvxAutocorrWord> >&)
SvxAutoCorrectLanguageLists::MakeUserStorage_Impl()
SvxAutoCorrectLanguageLists::PutText(rtl::OUString const&, rtl::OUString const&)
SvxAutoCorrectLanguageLists::RemoveStream_Imp(rtl::OUString const&)
SvxAutoCorrectLanguageLists::SaveCplSttExceptList()
SvxAutoCorrectLanguageLists::SaveExceptList_Imp(SvStringsISortDtor const&, rtl::OUString const&, tools::SvRef<SotStorage> const&, bool)
SvxAutoCorrectLanguageLists::SaveWordStartExceptList()
SvxAutoCorrectLanguageLists::SvxAutoCorrectLanguageLists(SvxAutoCorrect&, rtl::OUString const&, rtl::OUString const&)
SvxAutoCorrectLanguageLists::~SvxAutoCorrectLanguageLists()
SvxAutoKernItem::Clone(SfxItemPool*) const
SvxAutoKernItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxAutoKernItem::SvxAutoKernItem(bool, unsigned short)
SvxAutocorrWordList::DeleteAndDestroyAll()
SvxAutocorrWordList::FindAndRemove(SvxAutocorrWord const*)
SvxAutocorrWordList::Insert(SvxAutocorrWord) const
SvxAutocorrWordList::LoadEntry(rtl::OUString const&, rtl::OUString const&, bool)
SvxAutocorrWordList::SearchWordsInList(rtl::OUString const&, int&, int) const
SvxAutocorrWordList::SvxAutocorrWordList()
SvxAutocorrWordList::WordMatches(SvxAutocorrWord const*, rtl::OUString const&, int&, int) const
SvxAutocorrWordList::empty() const
SvxAutocorrWordList::~SvxAutocorrWordList()
SvxB3DVectorItem::Clone(SfxItemPool*) const
SvxB3DVectorItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxB3DVectorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxB3DVectorItem::SvxB3DVectorItem(SvxB3DVectorItem const&)
SvxB3DVectorItem::SvxB3DVectorItem(unsigned short, basegfx::B3DVector const&)
SvxB3DVectorItem::dumpAsXml(_xmlTextWriter*) const
SvxB3DVectorItem::operator==(SfxPoolItem const&) const
SvxB3DVectorItem::~SvxB3DVectorItem()
SvxBitmapListItem::Clone(SfxItemPool*) const
SvxBitmapListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBitmapListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxBitmapListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxBitmapListItem::SvxBitmapListItem()
SvxBitmapListItem::SvxBitmapListItem(SvxBitmapListItem const&)
SvxBitmapListItem::SvxBitmapListItem(rtl::Reference<XBitmapList> const&, unsigned short)
SvxBitmapListItem::operator==(SfxPoolItem const&) const
SvxBlinkItem::Clone(SfxItemPool*) const
SvxBlinkItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBlinkItem::SvxBlinkItem(bool, unsigned short)
SvxBmpMask::Close()
SvxBmpMask::GetMetaFile(Graphic const&)
SvxBmpMask::ImpMask(Animation const&)
SvxBmpMask::ImpMask(BitmapEx&)
SvxBmpMask::ImpMask(GDIMetaFile const&)
SvxBmpMask::ImpMaskTransparent(BitmapEx const&, Color const&, unsigned char)
SvxBmpMask::ImpReplaceTransparency(Animation const&, Color const&)
SvxBmpMask::ImpReplaceTransparency(GDIMetaFile const&, Color const&)
SvxBmpMask::InitColorArrays(Color*, Color*, unsigned char*)
SvxBmpMask::SetExecState(bool)
SvxBmpMask::SvxBmpMask(SfxBindings*, SfxChildWindow*, vcl::Window*)
SvxBmpMask::dispose()
SvxBmpMask::onSelect(MaskSet const*)
SvxBmpMask::~SvxBmpMask()
SvxBmpMaskChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxBmpMaskChildWindow::GetInfo() const
SvxBmpMaskChildWindow::SvxBmpMaskChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxBmpNumValueSet::SvxBmpNumValueSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SvxBmpNumValueSet::UserDraw(UserDrawEvent const&)
SvxBmpNumValueSet::~SvxBmpNumValueSet()
SvxBoxInfoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBoxInfoItem::HasMetrics() const
SvxBoxInfoItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxBoxInfoItem::ScaleMetrics(long, long)
SvxBoxInfoItem::SvxBoxInfoItem(SvxBoxInfoItem const&)
SvxBoxInfoItem::SvxBoxInfoItem(unsigned short)
SvxBoxInfoItem::dumpAsJSON[abi:cxx11]() const
SvxBoxInfoItem::~SvxBoxInfoItem()
SvxBoxItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBoxItem::HasMetrics() const
SvxBoxItem::ScaleMetrics(long, long)
SvxBoxItem::SvxBoxItem(SvxBoxItem const&)
SvxBoxItem::SvxBoxItem(unsigned short)
SvxBoxItem::dumpAsJSON[abi:cxx11]() const
SvxBoxItem::~SvxBoxItem()
SvxBrushItem::ApplyGraphicTransparency_Impl()
SvxBrushItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBrushItem::SvxBrushItem(Color const&, unsigned short)
SvxBrushItem::SvxBrushItem(Graphic const&, SvxGraphicPosition, unsigned short)
SvxBrushItem::SvxBrushItem(GraphicObject const&, SvxGraphicPosition, unsigned short)
SvxBrushItem::SvxBrushItem(SvxBrushItem const&)
SvxBrushItem::SvxBrushItem(SvxBrushItem&&)
SvxBrushItem::SvxBrushItem(rtl::OUString const&, rtl::OUString const&, SvxGraphicPosition, unsigned short)
SvxBrushItem::SvxBrushItem(unsigned short)
SvxBrushItem::dumpAsXml(_xmlTextWriter*) const
SvxBrushItem::isUsed() const
SvxBrushItem::~SvxBrushItem()
SvxBulletItem::Clone(SfxItemPool*) const
SvxBulletItem::GetFullText() const
SvxBulletItem::GetGraphicObject() const
SvxBulletItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBulletItem::SetGraphicObject(GraphicObject const&)
SvxBulletItem::SvxBulletItem(SvxBulletItem const&)
SvxBulletItem::SvxBulletItem(unsigned short)
SvxBulletItem::operator==(SfxPoolItem const&) const
SvxBulletItem::~SvxBulletItem()
SvxCaseMapItem::Clone(SfxItemPool*) const
SvxCaseMapItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCaseMapItem::GetValueCount() const
SvxCaseMapItem::GetValueTextByPos(unsigned short)
SvxCaseMapItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCaseMapItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxCaseMapItem::SvxCaseMapItem(SvxCaseMap, unsigned short)
SvxCharHiddenItem::Clone(SfxItemPool*) const
SvxCharHiddenItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharHiddenItem::SvxCharHiddenItem(bool, unsigned short)
SvxCharReliefItem::Clone(SfxItemPool*) const
SvxCharReliefItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharReliefItem::GetValueCount() const
SvxCharReliefItem::GetValueTextByPos(unsigned short)
SvxCharReliefItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCharReliefItem::SvxCharReliefItem(FontRelief, unsigned short)
SvxCharRotateItem::Clone(SfxItemPool*) const
SvxCharRotateItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharRotateItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCharRotateItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxCharRotateItem::SvxCharRotateItem(o3tl::strong_int<short, FractionTag<10> >, bool, unsigned short)
SvxCharRotateItem::dumpAsXml(_xmlTextWriter*) const
SvxCharRotateItem::operator==(SfxPoolItem const&) const
SvxCharScaleWidthItem::Clone(SfxItemPool*) const
SvxCharScaleWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharScaleWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCharScaleWidthItem::SvxCharScaleWidthItem(unsigned short, unsigned short)
SvxCharView::ContextMenuSelect(std::basic_string_view<char, std::char_traits<char> >)
SvxCharView::GetFocus()
SvxCharView::InsertCharToDoc()
SvxCharView::KeyInput(KeyEvent const&)
SvxCharView::LoseFocus()
SvxCharView::MouseButtonDown(MouseEvent const&)
SvxCharView::Paint(OutputDevice&, tools::Rectangle const&)
SvxCharView::Resize()
SvxCharView::SetDrawingArea(weld::DrawingArea*)
SvxCharView::SvxCharView(VclPtr<VirtualDevice> const&)
SvxCharView::createContextMenu()
SvxCharacterMap::DisableFontSelection()
SvxCharacterMap::SvxCharacterMap(weld::Widget*, SfxItemSet const*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SvxCharacterMap::deleteFavCharacterFromList(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxCharacterMap::fillAllSubsets(weld::ComboBox&)
SvxCharacterMap::getFavChar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvxCharacterMap::getFavCharacterList()
SvxCharacterMap::getRecentChar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvxCharacterMap::getRecentCharacterList()
SvxCharacterMap::init()
SvxCharacterMap::insertCharToDoc(rtl::OUString const&)
SvxCharacterMap::isFavChar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxCharacterMap::selectCharByCode(SvxCharacterMap::Radix)
SvxCharacterMap::setCharName(unsigned int)
SvxCharacterMap::setFavButtonState(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxCharacterMap::toggleSearchView(bool)
SvxCharacterMap::updateFavCharControl()
SvxCharacterMap::updateFavCharacterList(rtl::OUString const&, rtl::OUString const&)
SvxCharacterMap::updateRecentCharControl()
SvxCharacterMap::updateRecentCharacterList(rtl::OUString const&, rtl::OUString const&)
SvxChartIndicateItem::Clone(SfxItemPool*) const
SvxChartIndicateItem::SvxChartIndicateItem(SvxChartIndicate, unsigned short)
SvxChartKindErrorItem::Clone(SfxItemPool*) const
SvxChartKindErrorItem::SvxChartKindErrorItem(SvxChartKindError, unsigned short)
SvxChartRegressItem::Clone(SfxItemPool*) const
SvxChartRegressItem::SvxChartRegressItem(SvxChartRegress, unsigned short)
SvxChartTextOrderItem::Clone(SfxItemPool*) const
SvxChartTextOrderItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxChartTextOrderItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxChartTextOrderItem::SvxChartTextOrderItem(SvxChartTextOrder, unsigned short)
SvxClipBoardControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxClipBoardControl::CreatePopupWindow()
SvxClipBoardControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxClipBoardControl::SvxClipBoardControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxClipBoardControl::~SvxClipBoardControl()
SvxClipboardFormatItem::Clone(SfxItemPool*) const
SvxClipboardFormatItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxClipboardFormatItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxClipboardFormatItem::SvxClipboardFormatItem(SvxClipboardFormatItem const&)
SvxClipboardFormatItem::SvxClipboardFormatItem(unsigned short)
SvxClipboardFormatItem::operator==(SfxPoolItem const&) const
SvxClipboardFormatItem::~SvxClipboardFormatItem()
SvxColorChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxColorChildWindow::GetInfo() const
SvxColorChildWindow::SvxColorChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxColorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxColorItem::SvxColorItem(Color const&, unsigned short)
SvxColorItem::SvxColorItem(unsigned short)
SvxColorItem::dumpAsXml(_xmlTextWriter*) const
SvxColorItem::~SvxColorItem()
SvxColorListItem::Clone(SfxItemPool*) const
SvxColorListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxColorListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxColorListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxColorListItem::SvxColorListItem()
SvxColorListItem::SvxColorListItem(SvxColorListItem const&)
SvxColorListItem::SvxColorListItem(rtl::Reference<XColorList> const&, unsigned short)
SvxColorListItem::operator==(SfxPoolItem const&) const
SvxColorToolBoxControl::EnsurePaletteManager()
SvxColorToolBoxControl::GetParentFrame() const
SvxColorToolBoxControl::SvxColorToolBoxControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
SvxColorToolBoxControl::createVclPopupWindow(vcl::Window*)
SvxColorToolBoxControl::execute(short)
SvxColorToolBoxControl::functionSelected(rtl::OUString const&)
SvxColorToolBoxControl::getImplementationName()
SvxColorToolBoxControl::getSubToolbarName()
SvxColorToolBoxControl::getSupportedServiceNames()
SvxColorToolBoxControl::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxColorToolBoxControl::opensSubToolbar()
SvxColorToolBoxControl::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
SvxColorToolBoxControl::update()
SvxColorToolBoxControl::updateImage()
SvxColorToolBoxControl::weldPopupWindow()
SvxColorToolBoxControl::~SvxColorToolBoxControl()
SvxColorValueSet::addEntriesForColorSet(std::set<Color, std::less<Color>, std::allocator<Color> > const&, rtl::OUString const&)
SvxColorValueSet::addEntriesForXColorList(XColorList const&, unsigned int)
SvxColorValueSet::layoutToGivenHeight(unsigned int, unsigned int)
SvxColumnDescription::GetWidth() const
SvxColumnDescription::SvxColumnDescription(long, long, bool)
SvxColumnDescription::SvxColumnDescription(long, long, long, long, bool)
SvxColumnDescription::operator!=(SvxColumnDescription const&) const
SvxColumnDescription::operator==(SvxColumnDescription const&) const
SvxColumnItem::At(unsigned short)
SvxColumnItem::Clone(SfxItemPool*) const
SvxColumnItem::GetActiveColumnDescription()
SvxColumnItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxColumnItem::IsConsistent() const
SvxColumnItem::IsFirstAct() const
SvxColumnItem::IsLastAct() const
SvxColumnItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxColumnItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxColumnItem::SvxColumnItem(unsigned short)
SvxColumnItem::SvxColumnItem(unsigned short, unsigned short, unsigned short)
SvxColumnItem::operator==(SfxPoolItem const&) const
SvxContourDlg::SvxContourDlg(SfxBindings*, SfxChildWindow*, weld::Window*)
SvxContourDlg::~SvxContourDlg()
SvxContourDlgChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxContourDlgChildWindow::GetInfo() const
SvxContourDlgChildWindow::SvxContourDlgChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxContourItem::Clone(SfxItemPool*) const
SvxContourItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxContourItem::SvxContourItem(bool, unsigned short)
SvxCrossedOutItem::Clone(SfxItemPool*) const
SvxCrossedOutItem::GetBoolValue() const
SvxCrossedOutItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCrossedOutItem::GetValueCount() const
SvxCrossedOutItem::GetValueTextByPos(unsigned short)
SvxCrossedOutItem::HasBoolValue() const
SvxCrossedOutItem::SetBoolValue(bool)
SvxCrossedOutItem::SvxCrossedOutItem(FontStrikeout, unsigned short)
SvxCustomShape::SvxCustomShape(SdrObject*)
SvxCustomShape::createCustomShapeDefaults(rtl::OUString const&)
SvxCustomShape::getImplementationId()
SvxCustomShape::getPosition()
SvxCustomShape::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxCustomShape::queryAggregation(com::sun::star::uno::Type const&)
SvxCustomShape::queryInterface(com::sun::star::uno::Type const&)
SvxCustomShape::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxCustomShape::~SvxCustomShape()
SvxDashListItem::Clone(SfxItemPool*) const
SvxDashListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxDashListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxDashListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxDashListItem::SvxDashListItem()
SvxDashListItem::SvxDashListItem(SvxDashListItem const&)
SvxDashListItem::SvxDashListItem(rtl::Reference<XDashList> const&, unsigned short)
SvxDashListItem::operator==(SfxPoolItem const&) const
SvxDateField::Clone() const
SvxDateField::SvxDateField()
SvxDateField::SvxDateField(Date const&, SvxDateType, SvxDateFormat)
SvxDateField::createBeginComment() const
SvxDateField::operator==(SvxFieldData const&) const
SvxDateTimeField::Clone() const
SvxDateTimeField::SvxDateTimeField()
SvxDateTimeField::operator==(SvxFieldData const&) const
SvxDicListChgClamp::SvxDicListChgClamp(com::sun::star::uno::Reference<com::sun::star::linguistic2::XSearchableDictionaryList> const&)
SvxDicListChgClamp::~SvxDicListChgClamp()
SvxDoubleItem::Clone(SfxItemPool*) const
SvxDoubleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxDoubleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxDoubleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxDoubleItem::SvxDoubleItem(SvxDoubleItem const&)
SvxDoubleItem::SvxDoubleItem(double, unsigned short)
SvxDoubleItem::operator==(SfxPoolItem const&) const
SvxDrawOutlinerViewForwarder::Copy()
SvxDrawOutlinerViewForwarder::Cut()
SvxDrawOutlinerViewForwarder::GetSelection(ESelection&) const
SvxDrawOutlinerViewForwarder::IsValid() const
SvxDrawOutlinerViewForwarder::LogicToPixel(Point const&, MapMode const&) const
SvxDrawOutlinerViewForwarder::Paste()
SvxDrawOutlinerViewForwarder::PixelToLogic(Point const&, MapMode const&) const
SvxDrawOutlinerViewForwarder::SetSelection(ESelection const&)
SvxDrawOutlinerViewForwarder::SvxDrawOutlinerViewForwarder(OutlinerView&)
SvxDrawOutlinerViewForwarder::SvxDrawOutlinerViewForwarder(OutlinerView&, Point const&)
SvxDrawOutlinerViewForwarder::~SvxDrawOutlinerViewForwarder()
SvxDrawPage::CreateSdrObject(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool)
SvxDrawPage::CreateShapeByTypeAndInventor(unsigned short, SdrInventor, SdrObject*, SvxDrawPage*, rtl::OUString const&)
SvxDrawPage::GetTypeAndInventor(SdrObjKind&, SdrInventor&, rtl::OUString const&)
SvxDrawPage::SvxDrawPage(SdrPage*)
SvxDrawPage::~SvxDrawPage()
SvxEditEngineForwarder::AppendParagraph()
SvxEditEngineForwarder::AppendTextPortion(int, rtl::OUString const&, SfxItemSet const&)
SvxEditEngineForwarder::CalcFieldValue(SvxFieldItem const&, int, int, std::optional<Color>&, std::optional<Color>&)
SvxEditEngineForwarder::CopyText(SvxTextForwarder const&)
SvxEditEngineForwarder::Delete(ESelection const&)
SvxEditEngineForwarder::FieldClicked(SvxFieldItem const&)
SvxEditEngineForwarder::GetAttribs(ESelection const&, EditEngineAttribs) const
SvxEditEngineForwarder::GetAttributeRun(int&, int&, int, int, bool) const
SvxEditEngineForwarder::GetBulletInfo(int) const
SvxEditEngineForwarder::GetCharBounds(int, int) const
SvxEditEngineForwarder::GetDepth(int) const
SvxEditEngineForwarder::GetEmptyItemSetPtr()
SvxEditEngineForwarder::GetFieldCount(int) const
SvxEditEngineForwarder::GetFieldInfo(int, unsigned short) const
SvxEditEngineForwarder::GetIndexAtPoint(Point const&, int&, int&) const
SvxEditEngineForwarder::GetItemState(ESelection const&, unsigned short) const
SvxEditEngineForwarder::GetItemState(int, unsigned short) const
SvxEditEngineForwarder::GetLanguage(int, int) const
SvxEditEngineForwarder::GetLineBoundaries(int&, int&, int, int) const
SvxEditEngineForwarder::GetLineCount(int) const
SvxEditEngineForwarder::GetLineLen(int, int) const
SvxEditEngineForwarder::GetLineNumberAtIndex(int, int) const
SvxEditEngineForwarder::GetMapMode() const
SvxEditEngineForwarder::GetParaAttribs(int) const
SvxEditEngineForwarder::GetParaBounds(int) const
SvxEditEngineForwarder::GetParagraphCount() const
SvxEditEngineForwarder::GetPool() const
SvxEditEngineForwarder::GetPortions(int, std::vector<int, std::allocator<int> >&) const
SvxEditEngineForwarder::GetRefDevice() const
SvxEditEngineForwarder::GetText(ESelection const&) const
SvxEditEngineForwarder::GetTextLen(int) const
SvxEditEngineForwarder::GetWordIndices(int, int, int&, int&) const
SvxEditEngineForwarder::InsertText(rtl::OUString const&, ESelection const&)
SvxEditEngineForwarder::IsValid() const
SvxEditEngineForwarder::QuickFormatDoc(bool)
SvxEditEngineForwarder::QuickInsertField(SvxFieldItem const&, ESelection const&)
SvxEditEngineForwarder::QuickInsertLineBreak(ESelection const&)
SvxEditEngineForwarder::QuickInsertText(rtl::OUString const&, ESelection const&)
SvxEditEngineForwarder::QuickSetAttribs(SfxItemSet const&, ESelection const&)
SvxEditEngineForwarder::RemoveAttribs(ESelection const&)
SvxEditEngineForwarder::SetDepth(int, short)
SvxEditEngineForwarder::SetParaAttribs(int, SfxItemSet const&)
SvxEditEngineForwarder::SvxEditEngineForwarder(EditEngine&)
SvxEditEngineForwarder::~SvxEditEngineForwarder()
SvxEditSource::~SvxEditSource()
SvxEditSourceHelper::EEToUserSpace(Point const&, Size const&, bool)
SvxEditSourceHelper::EEToUserSpace(tools::Rectangle const&, Size const&, bool)
SvxEditSourceHelper::GetAttributeRun(int&, int&, EditEngine const&, int, int, bool)
SvxEditSourceHelper::UserSpaceToEE(Point const&, Size const&, bool)
SvxEmphasisMarkItem::Clone(SfxItemPool*) const
SvxEmphasisMarkItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxEmphasisMarkItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxEmphasisMarkItem::SvxEmphasisMarkItem(FontEmphasisMark, unsigned short)
SvxErrorHandler::SvxErrorHandler()
SvxEscapementItem::Clone(SfxItemPool*) const
SvxEscapementItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxEscapementItem::GetValueCount() const
SvxEscapementItem::GetValueTextByPos(unsigned short)
SvxEscapementItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxEscapementItem::SetEnumValue(unsigned short)
SvxEscapementItem::SvxEscapementItem(SvxEscapement, unsigned short)
SvxEscapementItem::SvxEscapementItem(short, unsigned char, unsigned short)
SvxEscapementItem::SvxEscapementItem(unsigned short)
SvxEscapementItem::operator==(SfxPoolItem const&) const
SvxExtFileField::Clone() const
SvxExtFileField::SvxExtFileField()
SvxExtFileField::SvxExtFileField(rtl::OUString const&, SvxFileType, SvxFileFormat)
SvxExtFileField::operator==(SvxFieldData const&) const
SvxExtTimeField::Clone() const
SvxExtTimeField::GetFormatted(tools::Time const&, SvxTimeFormat, SvNumberFormatter&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxExtTimeField::SvxExtTimeField()
SvxExtTimeField::SvxExtTimeField(tools::Time const&, SvxTimeType, SvxTimeFormat)
SvxExtTimeField::createBeginComment() const
SvxExtTimeField::operator==(SvxFieldData const&) const
SvxFieldData::Clone() const
SvxFieldData::Create(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
SvxFieldData::createBeginComment() const
SvxFieldData::createEndComment()
SvxFieldData::operator==(SvxFieldData const&) const
SvxFieldData::~SvxFieldData()
SvxFieldItem::Clone(SfxItemPool*) const
SvxFieldItem::SvxFieldItem(SvxFieldData const&, unsigned short)
SvxFieldItem::SvxFieldItem(SvxFieldItem const&)
SvxFieldItem::SvxFieldItem(std::unique_ptr<SvxFieldData, std::default_delete<SvxFieldData> >, unsigned short)
SvxFieldItem::operator==(SfxPoolItem const&) const
SvxFieldItem::~SvxFieldItem()
SvxFileField::Clone() const
SvxFileField::SvxFileField()
SvxFileField::operator==(SvxFieldData const&) const
SvxFillAttrBox::Fill(weld::ComboBox&, rtl::Reference<XGradientList> const&)
SvxFillToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxFillToolBoxControl::CreateItemWindow(vcl::Window*)
SvxFillToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxFillToolBoxControl::SvxFillToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxFillToolBoxControl::Update()
SvxFillToolBoxControl::~SvxFillToolBoxControl()
SvxFmDrawPage::SvxFmDrawPage(SdrPage*)
SvxFmDrawPage::~SvxFmDrawPage()
SvxFont::ChgPhysFont(OutputDevice&) const
SvxFont::DoOnCapitals(SvxDoCapitals&) const
SvxFont::DrawCapital(OutputDevice*, Point const&, rtl::OUString const&, int, int) const
SvxFont::GetCapitalSize(OutputDevice const*, rtl::OUString const&, int, int) const
SvxFont::GetPhysTxtSize(OutputDevice const*)
SvxFont::GetPhysTxtSize(OutputDevice const*, rtl::OUString const&, int, int) const
SvxFont::QuickDrawText(OutputDevice*, Point const&, rtl::OUString const&, int, int, o3tl::span<int const>) const
SvxFont::QuickGetTextSize(OutputDevice const*, rtl::OUString const&, int, int, std::vector<int, std::allocator<int> >*) const
SvxFont::SetNonAutoEscapement(short, OutputDevice const*)
SvxFont::SetPhysFont(OutputDevice&) const
SvxFont::SvxFont(vcl::Font const&)
SvxFontHeightItem::Clone(SfxItemPool*) const
SvxFontHeightItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFontHeightItem::HasMetrics() const
SvxFontHeightItem::ScaleMetrics(long, long)
SvxFontHeightItem::SvxFontHeightItem(unsigned int, unsigned short, unsigned short)
SvxFontHeightItem::dumpAsXml(_xmlTextWriter*) const
SvxFontItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFontItem::SvxFontItem(FontFamily, rtl::OUString const&, rtl::OUString const&, FontPitch, unsigned short, unsigned short)
SvxFontItem::SvxFontItem(unsigned short)
SvxFontItem::dumpAsXml(_xmlTextWriter*) const
SvxFontListItem::Clone(SfxItemPool*) const
SvxFontListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFontListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxFontListItem::SvxFontListItem(FontList const*, unsigned short)
SvxFontListItem::operator==(SfxPoolItem const&) const
SvxFontPrevWindow::GetFont() const
SvxFontPrevWindow::IsTwoLines() const
SvxFontPrevWindow::Paint(OutputDevice&, tools::Rectangle const&)
SvxFontPrevWindow::SetDrawingArea(weld::DrawingArea*)
SvxFontPrevWindow::SetFontNameAsPreviewText()
SvxFontPrevWindow::SvxFontPrevWindow()
SvxFontPrevWindow::~SvxFontPrevWindow()
SvxFontWorkChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxFontWorkChildWindow::GetInfo() const
SvxFontWorkChildWindow::SvxFontWorkChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxFooterField::Clone() const
SvxFooterField::SvxFooterField()
SvxFooterField::operator==(SvxFieldData const&) const
SvxForbiddenCharactersTable::ClearForbiddenCharacters(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxForbiddenCharactersTable::SvxForbiddenCharactersTable(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
SvxForbiddenRuleItem::Clone(SfxItemPool*) const
SvxForbiddenRuleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxForbiddenRuleItem::SvxForbiddenRuleItem(bool, unsigned short)
SvxFormatBreakItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFormatBreakItem::GetValueCount() const
SvxFormatBreakItem::GetValueTextByPos(unsigned short)
SvxFormatBreakItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxFormatBreakItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxFormatKeepItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFormatKeepItem::dumpAsXml(_xmlTextWriter*) const
SvxFormatSplitItem::Clone(SfxItemPool*) const
SvxFormatSplitItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFormatSplitItem::~SvxFormatSplitItem()
SvxFrameDirectionItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFrameDirectionItem::SvxFrameDirectionItem(SvxFrameDirection, unsigned short)
SvxFrameDirectionItem::dumpAsXml(_xmlTextWriter*) const
SvxFrameDirectionItem::~SvxFrameDirectionItem()
SvxGalleryItem::Clone(SfxItemPool*) const
SvxGalleryItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxGalleryItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxGalleryItem::SvxGalleryItem()
SvxGalleryItem::SvxGalleryItem(SvxGalleryItem const&)
SvxGalleryItem::operator==(SfxPoolItem const&) const
SvxGalleryItem::~SvxGalleryItem()
SvxGradientListItem::Clone(SfxItemPool*) const
SvxGradientListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxGradientListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxGradientListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxGradientListItem::SvxGradientListItem()
SvxGradientListItem::SvxGradientListItem(SvxGradientListItem const&)
SvxGradientListItem::SvxGradientListItem(rtl::Reference<XGradientList> const&, unsigned short)
SvxGradientListItem::operator==(SfxPoolItem const&) const
SvxGrafBlueToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafBlueToolBoxControl::SvxGrafBlueToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafContrastToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafContrastToolBoxControl::SvxGrafContrastToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGammaToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGammaToolBoxControl::SvxGrafGammaToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGreenToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGreenToolBoxControl::SvxGrafGreenToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafLuminanceToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafLuminanceToolBoxControl::SvxGrafLuminanceToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafModeToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafModeToolBoxControl::CreateItemWindow(vcl::Window*)
SvxGrafModeToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxGrafModeToolBoxControl::SvxGrafModeToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafModeToolBoxControl::~SvxGrafModeToolBoxControl()
SvxGrafRedToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafRedToolBoxControl::SvxGrafRedToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafTransparenceToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafTransparenceToolBoxControl::SvxGrafTransparenceToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGraphicItem::Clone(SfxItemPool*) const
SvxGraphicItem::SvxGraphicItem(Graphic const&)
SvxGraphicItem::operator==(SfxPoolItem const&) const
SvxGrfCrop::SvxGrfCrop(int, int, int, int, unsigned short)
SvxGrfCrop::SvxGrfCrop(unsigned short)
SvxGrfCrop::~SvxGrfCrop()
SvxGridTabPage::LinkStubClickRotateHdl_Impl(void*, weld::Toggleable&)
SvxGridTabPage::SvxGridTabPage(weld::Container*, weld::DialogController*, SfxItemSet const&)
SvxGridTabPage::~SvxGridTabPage()
SvxHFPage::InitHandler()
SvxHFPage::LinkStubTurnOnHdl(void*, weld::Toggleable&)
SvxHFPage::RangeHdl()
SvxHFPage::SvxHFPage(weld::Container*, weld::DialogController*, SfxItemSet const&, unsigned short)
SvxHFPage::TurnOn(weld::Toggleable const*)
SvxHFPage::UpdateExample()
SvxHFPage::~SvxHFPage()
SvxHangingPunctuationItem::Clone(SfxItemPool*) const
SvxHangingPunctuationItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHangingPunctuationItem::SvxHangingPunctuationItem(bool, unsigned short)
SvxHatchListItem::Clone(SfxItemPool*) const
SvxHatchListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHatchListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHatchListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHatchListItem::SvxHatchListItem()
SvxHatchListItem::SvxHatchListItem(SvxHatchListItem const&)
SvxHatchListItem::SvxHatchListItem(rtl::Reference<XHatchList> const&, unsigned short)
SvxHatchListItem::operator==(SfxPoolItem const&) const
SvxHeaderField::Clone() const
SvxHeaderField::SvxHeaderField()
SvxHeaderField::operator==(SvxFieldData const&) const
SvxHlinkDlgWrapper::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxHlinkDlgWrapper::GetInfo() const
SvxHlinkDlgWrapper::QueryClose()
SvxHlinkDlgWrapper::SvxHlinkDlgWrapper(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxHlinkDlgWrapper::~SvxHlinkDlgWrapper()
SvxHorJustifyItem::Clone(SfxItemPool*) const
SvxHorJustifyItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHorJustifyItem::GetValueCount() const
SvxHorJustifyItem::GetValueText(SvxCellHorJustify)
SvxHorJustifyItem::SvxHorJustifyItem(SvxCellHorJustify, unsigned short)
SvxHorJustifyItem::SvxHorJustifyItem(unsigned short)
SvxHyperlinkItem::Clone(SfxItemPool*) const
SvxHyperlinkItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHyperlinkItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHyperlinkItem::SvxHyperlinkItem(SvxHyperlinkItem const&)
SvxHyperlinkItem::SvxHyperlinkItem(unsigned short, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, SvxLinkInsertMode, HyperDialogEvent, SvxMacroTableDtor const*)
SvxHyperlinkItem::operator==(SfxPoolItem const&) const
SvxHyphenZoneItem::Clone(SfxItemPool*) const
SvxHyphenZoneItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHyphenZoneItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHyphenZoneItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHyphenZoneItem::SvxHyphenZoneItem(bool, unsigned short)
SvxHyphenZoneItem::operator==(SfxPoolItem const&) const
SvxIMapDlg::DoOpen()
SvxIMapDlg::DoSave()
SvxIMapDlg::SetActiveTool(std::basic_string_view<char, std::char_traits<char> >)
SvxIMapDlg::SetExecState(bool)
SvxIMapDlg::SetTargetList(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
SvxIMapDlg::SvxIMapDlg(SfxBindings*, SfxChildWindow*, weld::Window*)
SvxIMapDlg::URLModify()
SvxIMapDlg::UpdateLink(Graphic const&, ImageMap const*, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*, void*)
SvxIMapDlg::~SvxIMapDlg()
SvxIMapDlgChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxIMapDlgChildWindow::GetInfo() const
SvxIMapDlgChildWindow::SvxIMapDlgChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxImportMSVBasic::GetMSBasicStorageName()
SvxInsertStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxInsertStatusBarControl::Paint(UserDrawEvent const&)
SvxInsertStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxInsertStatusBarControl::SvxInsertStatusBarControl(unsigned short, unsigned short, StatusBar&)
SvxInsertStatusBarControl::~SvxInsertStatusBarControl()
SvxItemPropertySet::SvxItemPropertySet(SfxItemPropertyMapEntry const*, SfxItemPool&)
SvxItemPropertySet::~SvxItemPropertySet()
SvxItemPropertySetUsrAnys::AddUsrAnyForID(com::sun::star::uno::Any const&, SfxItemPropertyMapEntry const&)
SvxItemPropertySetUsrAnys::SvxItemPropertySetUsrAnys()
SvxItemPropertySetUsrAnys::~SvxItemPropertySetUsrAnys()
SvxJustifyMethodItem::Clone(SfxItemPool*) const
SvxJustifyMethodItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxJustifyMethodItem::GetValueCount() const
SvxJustifyMethodItem::GetValueText(SvxCellJustifyMethod)
SvxJustifyMethodItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxJustifyMethodItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxJustifyMethodItem::SvxJustifyMethodItem(SvxCellJustifyMethod, unsigned short)
SvxKerningItem::Clone(SfxItemPool*) const
SvxKerningItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxKerningItem::HasMetrics() const
SvxKerningItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxKerningItem::ScaleMetrics(long, long)
SvxKerningItem::SvxKerningItem(short, unsigned short)
SvxLRSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLRSpaceItem::HasMetrics() const
SvxLRSpaceItem::ScaleMetrics(long, long)
SvxLRSpaceItem::SvxLRSpaceItem(long, long, long, short, unsigned short)
SvxLRSpaceItem::SvxLRSpaceItem(unsigned short)
SvxLRSpaceItem::dumpAsJSON[abi:cxx11]() const
SvxLRSpaceItem::dumpAsXml(_xmlTextWriter*) const
SvxLanguageBox::SvxLanguageBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxLanguageBox::get_id(int) const
SvxLanguageItem::Clone(SfxItemPool*) const
SvxLanguageItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLanguageItem::GetValueCount() const
SvxLanguageItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLanguageItem::SvxLanguageItem(o3tl::strong_int<unsigned short, LanguageTypeTag>, unsigned short)
SvxLightCtl3D::Init()
SvxLightCtl3D::SvxLightCtl3D(Svx3DLightControl&, weld::Scale&, weld::Scale&, weld::Button&)
SvxLightCtl3D::move(double, double)
SvxLightCtl3D::~SvxLightCtl3D()
SvxLineEndLB::SvxLineEndLB(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxLineEndListItem::Clone(SfxItemPool*) const
SvxLineEndListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLineEndListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLineEndListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLineEndListItem::SvxLineEndListItem()
SvxLineEndListItem::SvxLineEndListItem(SvxLineEndListItem const&)
SvxLineEndListItem::SvxLineEndListItem(rtl::Reference<XLineEndList> const&, unsigned short)
SvxLineEndListItem::operator==(SfxPoolItem const&) const
SvxLineItem::Clone(SfxItemPool*) const
SvxLineItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLineItem::HasMetrics() const
SvxLineItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLineItem::SvxLineItem(SvxLineItem const&)
SvxLineItem::SvxLineItem(unsigned short)
SvxLineItem::~SvxLineItem()
SvxLineLB::SvxLineLB(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxLineSpacingItem::Clone(SfxItemPool*) const
SvxLineSpacingItem::GetEnumValue() const
SvxLineSpacingItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLineSpacingItem::GetValueCount() const
SvxLineSpacingItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLineSpacingItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLineSpacingItem::SetEnumValue(unsigned short)
SvxLineSpacingItem::SvxLineSpacingItem(unsigned short, unsigned short)
SvxLineStyleToolBoxControl::SvxLineStyleToolBoxControl(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
SvxLineStyleToolBoxControl::createVclPopupWindow(vcl::Window*)
SvxLineStyleToolBoxControl::dispatchLineStyleCommand(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SvxLineStyleToolBoxControl::execute(short)
SvxLineStyleToolBoxControl::getImplementationName()
SvxLineStyleToolBoxControl::getSupportedServiceNames()
SvxLineStyleToolBoxControl::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxLineStyleToolBoxControl::setLineStyleIsNoneFunction(std::function<void (bool)> const&)
SvxLineStyleToolBoxControl::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
SvxLineStyleToolBoxControl::weldPopupWindow()
SvxLineStyleToolBoxControl::~SvxLineStyleToolBoxControl()
SvxLineWidthToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxLineWidthToolBoxControl::CreateItemWindow(vcl::Window*)
SvxLineWidthToolBoxControl::GetCoreMetric()
SvxLineWidthToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxLineWidthToolBoxControl::SvxLineWidthToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxLineWidthToolBoxControl::~SvxLineWidthToolBoxControl()
SvxLinkWarningDialog::SvxLinkWarningDialog(weld::Widget*, rtl::OUString const&)
SvxLinkWarningDialog::~SvxLinkWarningDialog()
SvxLongLRSpaceItem::Clone(SfxItemPool*) const
SvxLongLRSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLongLRSpaceItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLongLRSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLongLRSpaceItem::SvxLongLRSpaceItem()
SvxLongLRSpaceItem::SvxLongLRSpaceItem(long, long, unsigned short)
SvxLongLRSpaceItem::operator==(SfxPoolItem const&) const
SvxLongULSpaceItem::Clone(SfxItemPool*) const
SvxLongULSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLongULSpaceItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLongULSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLongULSpaceItem::SvxLongULSpaceItem()
SvxLongULSpaceItem::SvxLongULSpaceItem(long, long, unsigned short)
SvxLongULSpaceItem::operator==(SfxPoolItem const&) const
SvxMSConvertOCXControls::SvxMSConvertOCXControls(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SvxMSConvertOCXControls::~SvxMSConvertOCXControls()
SvxMSDffImportData::NotifyFreeObj(SdrObject*)
SvxMSDffImportData::SvxMSDffImportData(tools::Rectangle const&)
SvxMSDffImportData::~SvxMSDffImportData()
SvxMSDffImportRec::SvxMSDffImportRec()
SvxMSDffImportRec::SvxMSDffImportRec(SvxMSDffImportRec const&)
SvxMSDffImportRec::~SvxMSDffImportRec()
SvxMSDffManager::CheckForConvertToSOObj(unsigned int, SotStorage&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, Graphic const&, tools::Rectangle const&, rtl::OUString const&)
SvxMSDffManager::CheckTxBxStoryChain()
SvxMSDffManager::ConvertToOle2(SvStream&, unsigned int, GDIMetaFile const*, tools::SvRef<SotStorage> const&)
SvxMSDffManager::FreeObj(SvxMSDffClientData&, SdrObject*)
SvxMSDffManager::GetBLIPDirect(SvStream&, Graphic&, tools::Rectangle*)
SvxMSDffManager::GetCtrlData(unsigned int)
SvxMSDffManager::GetDrawingContainerData(SvStream&, unsigned int, unsigned short)
SvxMSDffManager::GetDrawingGroupContainerData(SvStream&, unsigned int)
SvxMSDffManager::GetFidclData(unsigned int)
SvxMSDffManager::GetGlobalChildAnchor(DffRecordHeader const&, SvStream&, tools::Rectangle&)
SvxMSDffManager::GetGroupAnchors(DffRecordHeader const&, SvStream&, tools::Rectangle&, tools::Rectangle&, tools::Rectangle const&, tools::Rectangle const&)
SvxMSDffManager::GetShapeContainerData(SvStream&, unsigned int, unsigned long, unsigned short)
SvxMSDffManager::GetShapeGroupContainerData(SvStream&, unsigned int, bool, unsigned short)
SvxMSDffManager::ImportGraphic(SvStream&, SfxItemSet&, DffObjData const&)
SvxMSDffManager::ImportGroup(DffRecordHeader const&, SvStream&, SvxMSDffClientData&, tools::Rectangle&, tools::Rectangle const&, int, int*)
SvxMSDffManager::ImportShape(DffRecordHeader const&, SvStream&, SvxMSDffClientData&, tools::Rectangle&, tools::Rectangle const&, int, int*)
SvxMSDffManager::MSO_TEXT_CLR_ToColor(unsigned int) const
SvxMSDffManager::MakeContentStream(SotStorage*, GDIMetaFile const&)
SvxMSDffManager::NotifyFreeObj(SvxMSDffClientData&, SdrObject*)
SvxMSDffManager::ReadCommonRecordHeader(SvStream&, unsigned char&, unsigned short&, unsigned short&, unsigned int&)
SvxMSDffManager::ReadObjText(rtl::OUString const&, SdrObject*)
SvxMSDffManager::Scale(Point&) const
SvxMSDffManager::Scale(int&) const
SvxMSDffManager::ScalePoint(int) const
SvxMSDffManager::ScalePt(unsigned int) const
SvxMSDffManager::SeekToRec2(unsigned short, unsigned short, unsigned long) const
SvxMSDffManager::SetDgContainer(SvStream&)
SvxMSDffManager::SetPropValue(com::sun::star::uno::Any const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
SvxMSDffManager::SvxMSDffManager(SvStream&, rtl::OUString const&)
SvxMSDffManager::SvxMSDffManager(SvStream&, rtl::OUString const&, unsigned int, SvStream*, SdrModel*, long, Color, SvStream*, bool)
SvxMSDffManager::insertShapeId(int, SdrObject*)
SvxMSDffManager::removeShapeId(SdrObject const*)
SvxMSDffManager::~SvxMSDffManager()
SvxMSDffSolverContainer::SvxMSDffSolverContainer()
SvxMSDffSolverContainer::~SvxMSDffSolverContainer()
SvxMacro::SvxMacro(rtl::OUString const&, rtl::OUString const&)
SvxMacroItem::Clone(SfxItemPool*) const
SvxMacroItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxMacroTableDtor::Read(SvStream&)
SvxMacroTableDtor::Write(SvStream&) const
SvxMarginItem::Clone(SfxItemPool*) const
SvxMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxMarginItem::SvxMarginItem(short, short, short, short, unsigned short)
SvxMarginItem::SvxMarginItem(unsigned short)
SvxModifyControl::Click()
SvxModifyControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxModifyControl::Paint(UserDrawEvent const&)
SvxModifyControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxModifyControl::SvxModifyControl(unsigned short, unsigned short, StatusBar&)
SvxModifyControl::_repaint()
SvxNoHyphenItem::Clone(SfxItemPool*) const
SvxNoHyphenItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxNoHyphenItem::SvxNoHyphenItem(unsigned short)
SvxNumBulletItem::Clone(SfxItemPool*) const
SvxNumBulletItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxNumBulletItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxNumBulletItem::SvxNumBulletItem(SvxNumBulletItem const&)
SvxNumBulletItem::SvxNumBulletItem(SvxNumRule const&)
SvxNumBulletItem::SvxNumBulletItem(SvxNumRule const&, unsigned short)
SvxNumBulletItem::SvxNumBulletItem(SvxNumRule&&)
SvxNumBulletItem::SvxNumBulletItem(SvxNumRule&&, unsigned short)
SvxNumBulletItem::dumpAsXml(_xmlTextWriter*) const
SvxNumBulletItem::operator==(SfxPoolItem const&) const
SvxNumBulletItem::~SvxNumBulletItem()
SvxNumRule::SetLevel(unsigned short, SvxNumberFormat const*)
SvxNumRule::Store(SvStream&)
SvxNumRule::SvxNumRule(SvStream&)
SvxNumRule::SvxNumRule(SvxNumRule const&)
SvxNumRule::SvxNumRule(SvxNumRule&&)
SvxNumRule::SvxNumRule(SvxNumRuleFlags, unsigned short, bool, SvxNumRuleType, SvxNumberFormat::SvxNumPositionAndSpaceMode)
SvxNumRule::dumpAsXml(_xmlTextWriter*) const
SvxNumRule::operator=(SvxNumRule&&)
SvxNumRule::~SvxNumRule()
SvxNumValueSet::GetUITestFactory() const
SvxNumValueSet::SvxNumValueSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SvxNumValueSet::UserDraw(UserDrawEvent const&)
SvxNumValueSet::~SvxNumValueSet()
SvxNumberFormat::Store(SvStream&, void*)
SvxNumberFormat::SvxNumberFormat(SvStream&)
SvxNumberFormat::~SvxNumberFormat()
SvxNumberFormatShell::FindCurrencyFormat(NfCurrencyEntry const*, bool)
SvxNumberFormatShell::FindCurrencyTableEntry(rtl::OUString const&, bool&)
SvxNumberFormatShell::IsInTable(unsigned short, bool, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvxNumberFormatShell::SvxNumberFormatShell(SvNumberFormatter*, unsigned int, SvxNumberValueType, double, rtl::OUString const*)
SvxNumberFormatShell::SvxNumberFormatShell(SvNumberFormatter*, unsigned int, SvxNumberValueType, rtl::OUString const&)
SvxNumberFormatShell::~SvxNumberFormatShell()
SvxNumberInfoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxNumberInfoItem::SvxNumberInfoItem(SvNumberFormatter*, double const&, rtl::OUString const&, unsigned short)
SvxNumberInfoItem::SvxNumberInfoItem(SvNumberFormatter*, double const&, unsigned short)
SvxNumberInfoItem::SvxNumberInfoItem(SvNumberFormatter*, rtl::OUString const&, unsigned short)
SvxNumberInfoItem::SvxNumberInfoItem(SvNumberFormatter*, unsigned short)
SvxNumberInfoItem::SvxNumberInfoItem(SvxNumberInfoItem const&)
SvxNumberInfoItem::SvxNumberInfoItem(unsigned short)
SvxNumberInfoItem::operator==(SfxPoolItem const&) const
SvxNumberInfoItem::~SvxNumberInfoItem()
SvxNumberType::SvxNumberType(SvxNumType)
SvxNumberType::SvxNumberType(SvxNumberType const&)
SvxNumberType::~SvxNumberType()
SvxNumberingPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxNumberingPreview::SvxNumberingPreview()
SvxObjectItem::Clone(SfxItemPool*) const
SvxObjectItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxObjectItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxObjectItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxObjectItem::SetEndX(long)
SvxObjectItem::SetEndY(long)
SvxObjectItem::SetStartX(long)
SvxObjectItem::SetStartY(long)
SvxObjectItem::SvxObjectItem(long, long, long, long)
SvxObjectItem::operator==(SfxPoolItem const&) const
SvxOle2Shape::GetClassName_Impl(rtl::OUString&)
SvxOle2Shape::SvxOle2Shape(SdrObject*)
SvxOle2Shape::SvxOle2Shape(SdrObject*, SfxItemPropertyMapEntry const*, SvxItemPropertySet const*)
SvxOle2Shape::createLink(rtl::OUString const&)
SvxOle2Shape::createObject(SvGlobalName const&)
SvxOle2Shape::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxOle2Shape::resetModifiedState()
SvxOle2Shape::setPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
SvxOle2Shape::~SvxOle2Shape()
SvxOpaqueItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxOpenGraphicDialog::GetCurrentFilter() const
SvxOpenGraphicDialog::SetCurrentFilter(rtl::OUString const&)
SvxOpenGraphicDialog::SetDetectedFilter(rtl::OUString const&)
SvxOpenGraphicDialog::SetPath(rtl::OUString const&, bool)
SvxOpenGraphicDialog::SvxOpenGraphicDialog(rtl::OUString const&, weld::Window*)
SvxOpenGraphicDialog::SvxOpenGraphicDialog(rtl::OUString const&, weld::Window*, short)
SvxOpenGraphicDialog::~SvxOpenGraphicDialog()
SvxOptionsGrid::SvxOptionsGrid()
SvxOrientationItem::Clone(SfxItemPool*) const
SvxOrientationItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxOrientationItem::GetRotation(o3tl::strong_int<int, FractionTag<100> >) const
SvxOrientationItem::GetValueCount() const
SvxOrientationItem::GetValueText(SvxCellOrientation)
SvxOrientationItem::IsStacked() const
SvxOrientationItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxOrientationItem::SvxOrientationItem(SvxCellOrientation, unsigned short)
SvxOrientationItem::SvxOrientationItem(o3tl::strong_int<int, FractionTag<100> >, bool, unsigned short)
SvxOrphansItem::Clone(SfxItemPool*) const
SvxOrphansItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxOrphansItem::SvxOrphansItem(unsigned char, unsigned short)
SvxOutlinerForwarder::AppendParagraph()
SvxOutlinerForwarder::AppendTextPortion(int, rtl::OUString const&, SfxItemSet const&)
SvxOutlinerForwarder::CalcFieldValue(SvxFieldItem const&, int, int, std::optional<Color>&, std::optional<Color>&)
SvxOutlinerForwarder::CopyText(SvxTextForwarder const&)
SvxOutlinerForwarder::Delete(ESelection const&)
SvxOutlinerForwarder::FieldClicked(SvxFieldItem const&)
SvxOutlinerForwarder::GetAttribs(ESelection const&, EditEngineAttribs) const
SvxOutlinerForwarder::GetAttributeRun(int&, int&, int, int, bool) const
SvxOutlinerForwarder::GetBulletInfo(int) const
SvxOutlinerForwarder::GetCharBounds(int, int) const
SvxOutlinerForwarder::GetDepth(int) const
SvxOutlinerForwarder::GetEmptyItemSetPtr()
SvxOutlinerForwarder::GetFieldCount(int) const
SvxOutlinerForwarder::GetFieldInfo(int, unsigned short) const
SvxOutlinerForwarder::GetIndexAtPoint(Point const&, int&, int&) const
SvxOutlinerForwarder::GetItemState(ESelection const&, unsigned short) const
SvxOutlinerForwarder::GetItemState(int, unsigned short) const
SvxOutlinerForwarder::GetLanguage(int, int) const
SvxOutlinerForwarder::GetLineBoundaries(int&, int&, int, int) const
SvxOutlinerForwarder::GetLineCount(int) const
SvxOutlinerForwarder::GetLineLen(int, int) const
SvxOutlinerForwarder::GetLineNumberAtIndex(int, int) const
SvxOutlinerForwarder::GetMapMode() const
SvxOutlinerForwarder::GetNumberingStartValue(int)
SvxOutlinerForwarder::GetParaAttribs(int) const
SvxOutlinerForwarder::GetParaBounds(int) const
SvxOutlinerForwarder::GetParagraphCount() const
SvxOutlinerForwarder::GetPool() const
SvxOutlinerForwarder::GetPortions(int, std::vector<int, std::allocator<int> >&) const
SvxOutlinerForwarder::GetRefDevice() const
SvxOutlinerForwarder::GetText(ESelection const&) const
SvxOutlinerForwarder::GetTextLen(int) const
SvxOutlinerForwarder::GetWordIndices(int, int, int&, int&) const
SvxOutlinerForwarder::InsertText(rtl::OUString const&, ESelection const&)
SvxOutlinerForwarder::IsParaIsNumberingRestart(int)
SvxOutlinerForwarder::IsValid() const
SvxOutlinerForwarder::QuickFormatDoc(bool)
SvxOutlinerForwarder::QuickInsertField(SvxFieldItem const&, ESelection const&)
SvxOutlinerForwarder::QuickInsertLineBreak(ESelection const&)
SvxOutlinerForwarder::QuickInsertText(rtl::OUString const&, ESelection const&)
SvxOutlinerForwarder::QuickSetAttribs(SfxItemSet const&, ESelection const&)
SvxOutlinerForwarder::RemoveAttribs(ESelection const&)
SvxOutlinerForwarder::SetDepth(int, short)
SvxOutlinerForwarder::SetNumberingStartValue(int, int)
SvxOutlinerForwarder::SetParaAttribs(int, SfxItemSet const&)
SvxOutlinerForwarder::SetParaIsNumberingRestart(int, bool)
SvxOutlinerForwarder::SvxOutlinerForwarder(Outliner&, bool)
SvxOutlinerForwarder::~SvxOutlinerForwarder()
SvxOverlineItem::GetValueTextByPos(unsigned short) const
SvxOverlineItem::SvxOverlineItem(FontLineStyle, unsigned short)
SvxPageField::Clone() const
SvxPageField::SvxPageField()
SvxPageField::createBeginComment() const
SvxPageField::operator==(SvxFieldData const&) const
SvxPageItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPageItem::SvxPageItem(SvxPageItem const&)
SvxPageItem::SvxPageItem(unsigned short)
SvxPageItem::operator==(SfxPoolItem const&) const
SvxPageItem::~SvxPageItem()
SvxPageModelItem::Clone(SfxItemPool*) const
SvxPageModelItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPageModelItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPageModelItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPageModelItem::operator==(SfxPoolItem const&) const
SvxPageNumberListBox::SvxPageNumberListBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxPagePosSizeItem::Clone(SfxItemPool*) const
SvxPagePosSizeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPagePosSizeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPagePosSizeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPagePosSizeItem::SvxPagePosSizeItem()
SvxPagePosSizeItem::SvxPagePosSizeItem(Point const&, long, long)
SvxPagePosSizeItem::operator==(SfxPoolItem const&) const
SvxPageTitleField::Clone() const
SvxPageTitleField::SvxPageTitleField()
SvxPageTitleField::createBeginComment() const
SvxPageTitleField::operator==(SvxFieldData const&) const
SvxPageWindow::~SvxPageWindow()
SvxPagesField::Clone() const
SvxPagesField::SvxPagesField()
SvxPagesField::operator==(SvxFieldData const&) const
SvxPaperBinItem::Clone(SfxItemPool*) const
SvxPaperBinItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPaperSizeListBox::SvxPaperSizeListBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxParaGridItem::Clone(SfxItemPool*) const
SvxParaGridItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxParaGridItem::SvxParaGridItem(bool, unsigned short)
SvxParaPrevWindow::DrawParagraph(OutputDevice&)
SvxParaPrevWindow::Paint(OutputDevice&, tools::Rectangle const&)
SvxParaPrevWindow::SetDrawingArea(weld::DrawingArea*)
SvxParaPrevWindow::SvxParaPrevWindow()
SvxParaVertAlignItem::Clone(SfxItemPool*) const
SvxParaVertAlignItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxParaVertAlignItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxParaVertAlignItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxParaVertAlignItem::SvxParaVertAlignItem(SvxParaVertAlignItem::Align, unsigned short)
SvxPatternListItem::Clone(SfxItemPool*) const
SvxPatternListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPatternListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPatternListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPatternListItem::SvxPatternListItem()
SvxPatternListItem::SvxPatternListItem(SvxPatternListItem const&)
SvxPatternListItem::SvxPatternListItem(rtl::Reference<XPatternList> const&, unsigned short)
SvxPatternListItem::operator==(SfxPoolItem const&) const
SvxPixelCtl::ChangePixel(unsigned short)
SvxPixelCtl::CreateAccessible()
SvxPixelCtl::GetBitmapPixel(unsigned short) const
SvxPixelCtl::GetFocus()
SvxPixelCtl::GetFocusPosIndex() const
SvxPixelCtl::GetFocusRect()
SvxPixelCtl::IndexToPoint(long) const
SvxPixelCtl::KeyInput(KeyEvent const&)
SvxPixelCtl::LoseFocus()
SvxPixelCtl::MouseButtonDown(MouseEvent const&)
SvxPixelCtl::Paint(OutputDevice&, tools::Rectangle const&)
SvxPixelCtl::PointToIndex(Point const&) const
SvxPixelCtl::Resize()
SvxPixelCtl::SetDrawingArea(weld::DrawingArea*)
SvxPixelCtl::ShowPosition(Point const&)
SvxPixelCtl::SvxPixelCtl(SvxTabPage*)
SvxPixelCtl::implCalFocusRect(Point const&)
SvxPixelCtl::~SvxPixelCtl()
SvxPosSizeStatusBarControl::Command(CommandEvent const&)
SvxPosSizeStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxPosSizeStatusBarControl::ImplUpdateItemText()
SvxPosSizeStatusBarControl::Paint(UserDrawEvent const&)
SvxPosSizeStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxPosSizeStatusBarControl::SvxPosSizeStatusBarControl(unsigned short, unsigned short, StatusBar&)
SvxPosSizeStatusBarControl::~SvxPosSizeStatusBarControl()
SvxPostItAuthorItem::Clone(SfxItemPool*) const
SvxPostItAuthorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostItAuthorItem::SvxPostItAuthorItem(rtl::OUString const&, unsigned short)
SvxPostItAuthorItem::SvxPostItAuthorItem(unsigned short)
SvxPostItDateItem::Clone(SfxItemPool*) const
SvxPostItDateItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostItDateItem::SvxPostItDateItem(rtl::OUString const&, unsigned short)
SvxPostItDateItem::SvxPostItDateItem(unsigned short)
SvxPostItIdItem::Clone(SfxItemPool*) const
SvxPostItIdItem::SvxPostItIdItem(unsigned short)
SvxPostItTextItem::Clone(SfxItemPool*) const
SvxPostItTextItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostItTextItem::SvxPostItTextItem(rtl::OUString const&, unsigned short)
SvxPostItTextItem::SvxPostItTextItem(unsigned short)
SvxPostureItem::Clone(SfxItemPool*) const
SvxPostureItem::GetBoolValue() const
SvxPostureItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostureItem::GetValueCount() const
SvxPostureItem::GetValueTextByPos(unsigned short)
SvxPostureItem::HasBoolValue() const
SvxPostureItem::SetBoolValue(bool)
SvxPostureItem::SvxPostureItem(FontItalic, unsigned short)
SvxPostureItem::dumpAsXml(_xmlTextWriter*) const
SvxPresetListBox::Command(CommandEvent const&)
SvxPresetListBox::DrawLayout()
SvxPresetListBox::OnMenuItemSelected(std::basic_string_view<char, std::char_traits<char> >)
SvxPresetListBox::SetDrawingArea(weld::DrawingArea*)
SvxPresetListBox::SvxPresetListBox(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SvxPrintItem::Clone(SfxItemPool*) const
SvxPrintItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxProtectItem::Clone(SfxItemPool*) const
SvxProtectItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxProtectItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxProtectItem::dumpAsXml(_xmlTextWriter*) const
SvxRTFParser::AttrGroupEnd()
SvxRTFParser::BuildWhichTable()
SvxRTFParser::CalcValue()
SvxRTFParser::CallParser()
SvxRTFParser::ClearAttrStack()
SvxRTFParser::ClearColorTbl()
SvxRTFParser::ClearStyleAttr_(SvxRTFItemStackType&)
SvxRTFParser::Continue(int)
SvxRTFParser::DelCharAtEnd(rtl::OUString&, char16_t)
SvxRTFParser::GetAttrSet_()
SvxRTFParser::GetFont(unsigned short)
SvxRTFParser::GetRTFDefaults()
SvxRTFParser::IsAttrSttPos()
SvxRTFParser::NextToken(int)
SvxRTFParser::RTFPardPlain(bool, SfxItemSet**)
SvxRTFParser::ReadAttr(int, SfxItemSet*)
SvxRTFParser::ReadColorTable()
SvxRTFParser::ReadFontTable()
SvxRTFParser::ReadStyleTable()
SvxRTFParser::ReadTabAttr(int, SfxItemSet&)
SvxRTFParser::SetAllAttrOfStk()
SvxRTFParser::SetAttrInDoc(SvxRTFItemStackType&)
SvxRTFParser::SetAttrSet(SvxRTFItemStackType&)
SvxRTFParser::SetDefault(int, int)
SvxRTFParser::SetInsPos(EditPosition const&)
SvxRTFParser::SetScriptAttr(SvxRTFParser::RTF_CharTypeDef, SfxItemSet&, SfxPoolItem&)
SvxRTFParser::SvxRTFParser(SfxItemPool&, SvStream&)
SvxRTFParser::UnknownAttrToken(int)
SvxRTFParser::~SvxRTFParser()
SvxRectCtl::CalculateFocusRectangle() const
SvxRectCtl::CalculateFocusRectangle(RectPoint) const
SvxRectCtl::GetApproxLogPtFromPixPt(Point const&) const
SvxRectCtl::GetApproxRPFromPixPt(com::sun::star::awt::Point const&) const
SvxRectCtl::GetPointFromRP(RectPoint) const
SvxRectCtl::GetRPFromPoint(Point, bool) const
SvxRectCtl::SetActualRPWithoutInvalidate(RectPoint)
SvxRectCtl::~SvxRectCtl()
SvxRedlinTable::ColCompare(weld::TreeIter const&, weld::TreeIter const&)
SvxRedlinTable::LinkStubHeaderBarClick(void*, int)
SvxRedlinTable::SvxRedlinTable(std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >, std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >)
SvxRedlinTable::set_size_request(int, int)
SvxRedlinTable::~SvxRedlinTable()
SvxRelativeField::SvxRelativeField(std::unique_ptr<weld::MetricSpinButton, std::default_delete<weld::MetricSpinButton> >)
SvxRotateModeItem::Clone(SfxItemPool*) const
SvxRotateModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxRotateModeItem::GetValueCount() const
SvxRotateModeItem::GetValueText(SvxRotateMode)
SvxRotateModeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxRotateModeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxRotateModeItem::SvxRotateModeItem(SvxRotateMode, unsigned short)
SvxRotateModeItem::SvxRotateModeItem(SvxRotateModeItem const&)
SvxRotateModeItem::~SvxRotateModeItem()
SvxRsidItem::Clone(SfxItemPool*) const
SvxRsidItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxRsidItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxRsidItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxRsidItem::dumpAsXml(_xmlTextWriter*) const
SvxRubyChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxRubyChildWindow::GetInfo() const
SvxRubyChildWindow::SvxRubyChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxRuler::AdjustMargin1(long)
SvxRuler::ApplyBorders()
SvxRuler::ApplyIndents()
SvxRuler::ApplyMargins()
SvxRuler::ApplyObject()
SvxRuler::ApplyTabs()
SvxRuler::CalcMinMax()
SvxRuler::CalcPropMaxRight(unsigned short) const
SvxRuler::ConvertHPosPixel(long) const
SvxRuler::ConvertHSizePixel(long) const
SvxRuler::ConvertPosPixel(long) const
SvxRuler::ConvertSizePixel(long) const
SvxRuler::ConvertVPosPixel(long) const
SvxRuler::ConvertVSizePixel(long) const
SvxRuler::DragBorders()
SvxRuler::DragIndents()
SvxRuler::DragMargin1()
SvxRuler::DragMargin2()
SvxRuler::DragObjectBorder()
SvxRuler::DragTabs()
SvxRuler::DrawLine_Impl(long&, int, bool)
SvxRuler::EvalModifier()
SvxRuler::GetActLeftColumn(bool, unsigned short) const
SvxRuler::GetActRightColumn(bool, unsigned short) const
SvxRuler::GetCorrectedDragPos(bool, bool)
SvxRuler::GetFirstLineIndent() const
SvxRuler::GetLeftFrameMargin() const
SvxRuler::GetLeftIndent() const
SvxRuler::GetLogicRightIndent() const
SvxRuler::GetRightFrameMargin() const
SvxRuler::GetRightIndent() const
SvxRuler::IsActFirstColumn(bool, unsigned short) const
SvxRuler::IsActLastColumn(bool, unsigned short) const
SvxRuler::MakePositionSticky(long, long, bool) const
SvxRuler::MenuSelect(std::basic_string_view<char, std::char_traits<char> >)
SvxRuler::PixelAdjust(long, long) const
SvxRuler::PixelHAdjust(long, long) const
SvxRuler::PixelVAdjust(long, long) const
SvxRuler::PrepareProportional_Impl(RulerType)
SvxRuler::RoundToCurrentMapMode(long) const
SvxRuler::StartListening_Impl()
SvxRuler::TabMenuSelect(rtl::OString const&)
SvxRuler::Update(SvxColumnItem const*, unsigned short)
SvxRuler::Update(SvxObjectItem const*)
SvxRuler::Update(SvxPagePosSizeItem const*)
SvxRuler::Update(SvxProtectItem const*)
SvxRuler::Update(SvxTabStopItem const*)
SvxRuler::UpdateColumns()
SvxRuler::UpdateFrame()
SvxRuler::UpdateFrame(SvxLongLRSpaceItem const*)
SvxRuler::UpdateFrame(SvxLongULSpaceItem const*)
SvxRuler::UpdateFrameMinMax(SfxRectangleItem const*)
SvxRuler::UpdateObject()
SvxRuler::UpdatePage()
SvxRuler::UpdatePara()
SvxRuler::UpdatePara(SvxLRSpaceItem const*)
SvxRuler::UpdateParaBorder()
SvxRuler::UpdateParaContents_Impl(long, SvxRuler::UpdateType)
SvxRuler::UpdateTabs()
SvxRuler::UpdateTextRTL(SfxBoolItem const*)
SvxRuler::~SvxRuler()
SvxScriptSetItem::Clone(SfxItemPool*) const
SvxScriptSetItem::GetItemOfScript(unsigned short, SfxItemSet const&, SvtScriptType)
SvxScriptSetItem::GetItemOfScriptSet(SfxItemSet const&, unsigned short)
SvxScriptSetItem::GetSlotIds(unsigned short, unsigned short&, unsigned short&, unsigned short&)
SvxScriptSetItem::GetWhichIds(unsigned short&, unsigned short&, unsigned short&) const
SvxScriptSetItem::GetWhichIds(unsigned short, SfxItemSet const&, unsigned short&, unsigned short&, unsigned short&)
SvxScriptSetItem::SvxScriptSetItem(unsigned short, SfxItemPool&)
SvxScriptSpaceItem::Clone(SfxItemPool*) const
SvxScriptSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxScriptSpaceItem::SvxScriptSpaceItem(bool, unsigned short)
SvxSearchCharSet::DrawChars_Impl(OutputDevice&, int, int)
SvxSearchCharSet::ImplGetItem(int)
SvxSearchCharSet::KeyInput(KeyEvent const&)
SvxSearchCharSet::LastInView() const
SvxSearchCharSet::Paint(OutputDevice&, tools::Rectangle const&)
SvxSearchCharSet::RecalculateFont(OutputDevice&)
SvxSearchCharSet::SelectIndex(int, bool)
SvxSearchCharSet::SvxSearchCharSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >, VclPtr<VirtualDevice> const&)
SvxSearchCharSet::getMaxCharCount() const
SvxSearchCharSet::~SvxSearchCharSet()
SvxSearchDialog::Activate()
SvxSearchDialog::ChildWinDispose()
SvxSearchDialog::Close()
SvxSearchDialog::GetTransliterationFlags() const
SvxSearchDialog::SetSaveToModule(bool)
SvxSearchDialog::SetSearchLabel(rtl::OUString const&)
SvxSearchDialog::SvxSearchDialog(weld::Window*, SfxChildWindow*, SfxBindings&)
SvxSearchDialog::~SvxSearchDialog()
SvxSearchDialogWrapper::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxSearchDialogWrapper::GetInfo() const
SvxSearchDialogWrapper::GetSearchLabel()
SvxSearchDialogWrapper::SvxSearchDialogWrapper(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxSearchDialogWrapper::~SvxSearchDialogWrapper()
SvxSearchItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxSearchItem::ImplCommit()
SvxSearchItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxSearchItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxSearchItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxSearchItem::SetTransliterationFlags(TransliterationFlags)
SvxSearchItem::SvxSearchItem(SvxSearchItem const&)
SvxSearchItem::SvxSearchItem(unsigned short)
SvxSearchItem::operator==(SfxPoolItem const&) const
SvxSearchItem::~SvxSearchItem()
SvxSelectionModeControl::Click()
SvxSelectionModeControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxSelectionModeControl::MouseButtonDown(MouseEvent const&)
SvxSelectionModeControl::Paint(UserDrawEvent const&)
SvxSelectionModeControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxSelectionModeControl::SvxSelectionModeControl(unsigned short, unsigned short, StatusBar&)
SvxSetItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxSetItem::SvxSetItem(SvxSetItem const&)
SvxSetItem::SvxSetItem(unsigned short, SfxItemSet const&)
SvxSetItem::SvxSetItem(unsigned short, SfxItemSet&&)
SvxShadowItem::GetEnumValue() const
SvxShadowItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxShadowItem::GetValueCount() const
SvxShadowItem::HasMetrics() const
SvxShadowItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxShadowItem::ScaleMetrics(long, long)
SvxShadowItem::SetEnumValue(unsigned short)
SvxShadowItem::SvxShadowItem(unsigned short, Color const*, unsigned short, SvxShadowLocation)
SvxShadowItem::dumpAsXml(_xmlTextWriter*) const
SvxShadowedItem::Clone(SfxItemPool*) const
SvxShadowedItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxShadowedItem::SvxShadowedItem(bool, unsigned short)
SvxShape::Create(SdrObject*, SvxDrawPage*)
SvxShape::ForceMetricTo100th_mm(Pair&) const
SvxShape::ForceMetricTo100th_mm(basegfx::B2DHomMatrix&) const
SvxShape::ForceMetricTo100th_mm(basegfx::B2DPolyPolygon&) const
SvxShape::ForceMetricToItemPoolMetric(Pair&) const
SvxShape::ForceMetricToItemPoolMetric(basegfx::B2DHomMatrix&) const
SvxShape::ForceMetricToItemPoolMetric(basegfx::B2DPolyPolygon&) const
SvxShape::GetAnyForItem(SfxItemSet const&, SfxItemPropertyMapEntry const*) const
SvxShape::GetBitmap(bool) const
SvxShape::HasSdrObjectOwnership() const
SvxShape::InvalidateSdrObject()
SvxShape::Notify(SfxBroadcaster&, SfxHint const&)
SvxShape::ObtainSettingsFromPropertySet(SvxItemPropertySet const&)
SvxShape::SetFillAttribute(unsigned short, rtl::OUString const&)
SvxShape::SetFillAttribute(unsigned short, rtl::OUString const&, SfxItemSet&, SdrModel const*)
SvxShape::SvxShape(SdrObject*)
SvxShape::SvxShape(SdrObject*, SfxItemPropertyMapEntry const*, SvxItemPropertySet const*)
SvxShape::addActionLock()
SvxShape::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxShape::addPropertiesChangeListener(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
SvxShape::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxShape::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxShape::dispose()
SvxShape::endSetPropertyValues()
SvxShape::firePropertiesChangeEvent(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
SvxShape::getGluePoints()
SvxShape::getImplementationId()
SvxShape::getImplementationName()
SvxShape::getName()
SvxShape::getParent()
SvxShape::getPosition()
SvxShape::getPropertyDefault(rtl::OUString const&)
SvxShape::getPropertyDefaults(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::getPropertySetInfo()
SvxShape::getPropertyState(rtl::OUString const&)
SvxShape::getPropertyStateImpl(SfxItemPropertyMapEntry const*, com::sun::star::beans::PropertyState&)
SvxShape::getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::getPropertyValue(rtl::OUString const&)
SvxShape::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxShape::getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::getShapePropertyChangeNotifier()
SvxShape::getShapeType()
SvxShape::getSize()
SvxShape::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvxShape::getSupportedServiceNames()
SvxShape::getTypes()
SvxShape::isActionLocked()
SvxShape::lock()
SvxShape::queryAggregation(com::sun::star::uno::Type const&)
SvxShape::removeActionLock()
SvxShape::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxShape::removePropertiesChangeListener(com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
SvxShape::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxShape::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxShape::resetActionLocks()
SvxShape::setActionLocks(short)
SvxShape::setAllPropertiesToDefault()
SvxShape::setName(rtl::OUString const&)
SvxShape::setParent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SvxShape::setPosition(com::sun::star::awt::Point const&)
SvxShape::setPropertiesToDefault(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::setPropertyToDefault(rtl::OUString const&)
SvxShape::setPropertyToDefaultImpl(SfxItemPropertyMapEntry const*)
SvxShape::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxShape::setPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
SvxShape::setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxShape::setSize(com::sun::star::awt::Size const&)
SvxShape::supportsService(rtl::OUString const&)
SvxShape::unlock()
SvxShape::updateShapeKind()
SvxShape::~SvxShape()
SvxShapeControl::SvxShapeControl(SdrObject*)
SvxShapeControl::getControl()
SvxShapeControl::getImplementationId()
SvxShapeControl::getPosition()
SvxShapeControl::getPropertyDefault(rtl::OUString const&)
SvxShapeControl::getPropertyState(rtl::OUString const&)
SvxShapeControl::getPropertyValue(rtl::OUString const&)
SvxShapeControl::getShapeType()
SvxShapeControl::getSize()
SvxShapeControl::getTypes()
SvxShapeControl::queryAggregation(com::sun::star::uno::Type const&)
SvxShapeControl::queryInterface(com::sun::star::uno::Type const&)
SvxShapeControl::setControl(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
SvxShapeControl::setPosition(com::sun::star::awt::Point const&)
SvxShapeControl::setPropertyToDefault(rtl::OUString const&)
SvxShapeControl::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxShapeControl::setSize(com::sun::star::awt::Size const&)
SvxShapeControl::~SvxShapeControl()
SvxShapeText::Create(SdrObject*, SvxDrawPage*)
SvxShapeText::SvxShapeText(SdrObject*)
SvxShapeText::SvxShapeText(SdrObject*, SfxItemPropertyMapEntry const*, SvxItemPropertySet const*)
SvxShapeText::getEnd()
SvxShapeText::getImplementationId()
SvxShapeText::getImplementationName()
SvxShapeText::getPropertyStateImpl(SfxItemPropertyMapEntry const*, com::sun::star::beans::PropertyState&)
SvxShapeText::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxShapeText::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvxShapeText::getStart()
SvxShapeText::getString()
SvxShapeText::getSupportedServiceNames()
SvxShapeText::getTypes()
SvxShapeText::lock()
SvxShapeText::queryAggregation(com::sun::star::uno::Type const&)
SvxShapeText::queryInterface(com::sun::star::uno::Type const&)
SvxShapeText::setPropertyToDefaultImpl(SfxItemPropertyMapEntry const*)
SvxShapeText::setPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
SvxShapeText::setString(rtl::OUString const&)
SvxShapeText::supportsService(rtl::OUString const&)
SvxShapeText::unlock()
SvxShapeText::~SvxShapeText()
SvxShowCharSet::ContextMenuSelect(std::basic_string_view<char, std::char_traits<char> >)
SvxShowCharSet::CopyToClipboard(rtl::OUString const&)
SvxShowCharSet::CreateAccessible()
SvxShowCharSet::DeSelect()
SvxShowCharSet::DrawChars_Impl(OutputDevice&, int, int)
SvxShowCharSet::FirstInView() const
SvxShowCharSet::GetColumnPos(unsigned short)
SvxShowCharSet::GetFocus()
SvxShowCharSet::GetRowPos(unsigned short)
SvxShowCharSet::GetSelectCharacter() const
SvxShowCharSet::GetUITestFactory() const
SvxShowCharSet::ImplGetItem(int)
SvxShowCharSet::InitSettings(OutputDevice&)
SvxShowCharSet::KeyInput(KeyEvent const&)
SvxShowCharSet::LastInView() const
SvxShowCharSet::LoseFocus()
SvxShowCharSet::MapIndexToPixel(int) const
SvxShowCharSet::MouseButtonDown(MouseEvent const&)
SvxShowCharSet::MouseButtonUp(MouseEvent const&)
SvxShowCharSet::MouseMove(MouseEvent const&)
SvxShowCharSet::OutputIndex(int)
SvxShowCharSet::Paint(OutputDevice&, tools::Rectangle const&)
SvxShowCharSet::PixelToMapIndex(Point const&) const
SvxShowCharSet::RecalculateFont(OutputDevice&)
SvxShowCharSet::Resize()
SvxShowCharSet::SelectIndex(int, bool)
SvxShowCharSet::SetDrawingArea(weld::DrawingArea*)
SvxShowCharSet::SvxShowCharSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >, VclPtr<VirtualDevice> const&)
SvxShowCharSet::createContextMenu()
SvxShowCharSet::getGridRectangle(Point const&, Size const&) const
SvxShowCharSet::getMaxCharCount() const
SvxShowCharSet::init()
SvxShowCharSet::isFavChar(rtl::OUString const&, rtl::OUString const&)
SvxShowCharSet::updateFavCharacterList(rtl::OUString const&, rtl::OUString const&)
SvxShowCharSet::~SvxShowCharSet()
SvxShowText::Paint(OutputDevice&, tools::Rectangle const&)
SvxShowText::Resize()
SvxShowText::SetDrawingArea(weld::DrawingArea*)
SvxShowText::SetFont(vcl::Font const&)
SvxShowText::SetText(rtl::OUString const&)
SvxShowText::SvxShowText(VclPtr<VirtualDevice> const&)
SvxSizeItem::Clone(SfxItemPool*) const
SvxSizeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxSizeItem::HasMetrics() const
SvxSizeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxSizeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxSizeItem::ScaleMetrics(long, long)
SvxSizeItem::SvxSizeItem(unsigned short)
SvxSmartTagItem::Clone(SfxItemPool*) const
SvxSmartTagItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxSmartTagItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxSmartTagItem::SvxSmartTagItem(unsigned short, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::smarttags::XSmartTagAction> > > const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<int> > const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::container::XStringKeyMap> > const&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&, com::sun::star::lang::Locale const&, rtl::OUString const&, rtl::OUString const&)
SvxSmartTagItem::operator==(SfxPoolItem const&) const
SvxSpellWrapper::GetAllRightDic()
SvxSpellWrapper::InsertHyphen(int)
SvxSpellWrapper::ShowLanguageErrors()
SvxSpellWrapper::SpellContinue()
SvxSpellWrapper::SpellMore()
SvxSpellWrapper::SpellStart(SvxSpellArea)
SvxSpellWrapper::SvxSpellWrapper(weld::Widget*, bool, bool)
SvxSpellWrapper::SvxSpellWrapper(weld::Widget*, com::sun::star::uno::Reference<com::sun::star::linguistic2::XHyphenator> const&, bool, bool)
SvxSpellWrapper::~SvxSpellWrapper()
SvxSwAutoFormatFlags::SvxSwAutoFormatFlags()
SvxTPFilter::DeactivatePage()
SvxTPFilter::EnableDateLine1(bool)
SvxTPFilter::EnableDateLine2(bool)
SvxTPFilter::SetRedlinTable(SvxRedlinTable*)
SvxTPFilter::ShowAction(bool)
SvxTPFilter::SvxTPFilter(weld::Container*)
SvxTPFilter::~SvxTPFilter()
SvxTPView::ActivatePage()
SvxTPView::DeactivatePage()
SvxTPView::EnableClearFormatButton(weld::Button&, bool)
SvxTPView::SvxTPView(weld::Container*, weld::Window*, weld::Builder*)
SvxTPView::~SvxTPView()
SvxTPage::ActivatePage()
SvxTPage::SvxTPage(weld::Container*, rtl::OUString const&, rtl::OString const&)
SvxTPage::~SvxTPage()
SvxTabStop::SvxTabStop()
SvxTabStop::SvxTabStop(int, SvxTabAdjust, char16_t, char16_t)
SvxTabStop::dumpAsXml(_xmlTextWriter*) const
SvxTabStopItem::GetPos(SvxTabStop const&) const
SvxTabStopItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTabStopItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTabStopItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTabStopItem::SvxTabStopItem(unsigned short)
SvxTabStopItem::SvxTabStopItem(unsigned short, unsigned short, SvxTabAdjust, unsigned short)
SvxTabStopItem::dumpAsXml(_xmlTextWriter*) const
SvxTableField::Clone() const
SvxTableField::SvxTableField()
SvxTableField::SvxTableField(int)
SvxTableField::operator==(SvxFieldData const&) const
SvxTbxCtlDraw::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxTbxCtlDraw::Select(unsigned short)
SvxTbxCtlDraw::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxTbxCtlDraw::SvxTbxCtlDraw(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxTbxCtlDraw::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxTbxCtlDraw::toggleToolbox()
SvxTextEditSource::Clone() const
SvxTextEditSource::GetBroadcaster() const
SvxTextEditSource::GetEditViewForwarder(bool)
SvxTextEditSource::GetViewForwarder()
SvxTextEditSource::IsValid() const
SvxTextEditSource::LogicToPixel(Point const&, MapMode const&) const
SvxTextEditSource::PixelToLogic(Point const&, MapMode const&) const
SvxTextEditSource::SvxTextEditSource(SdrObject&, SdrText*, SdrView&, OutputDevice const&)
SvxTextEditSource::SvxTextEditSource(SdrObject*, SdrText*)
SvxTextEditSource::UpdateData()
SvxTextEditSource::addRange(SvxUnoTextRangeBase*)
SvxTextEditSource::getRanges() const
SvxTextEditSource::lock()
SvxTextEditSource::removeRange(SvxUnoTextRangeBase*)
SvxTextEditSource::unlock()
SvxTextEditSource::~SvxTextEditSource()
SvxTextEncodingBox::InsertTextEncoding(unsigned short)
SvxTextEncodingBox::SvxTextEncodingBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxTextEncodingBox::~SvxTextEncodingBox()
SvxTextEncodingTreeView::InsertTextEncoding(unsigned short)
SvxTextEncodingTreeView::InsertTextEncoding(unsigned short, rtl::OUString const&)
SvxTextEncodingTreeView::SvxTextEncodingTreeView(std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >)
SvxTextEncodingTreeView::~SvxTextEncodingTreeView()
SvxTextForwarder::GetNumberingStartValue(int)
SvxTextForwarder::IsParaIsNumberingRestart(int)
SvxTextForwarder::SetNumberingStartValue(int, int)
SvxTextForwarder::SetParaIsNumberingRestart(int, bool)
SvxTextForwarder::~SvxTextForwarder()
SvxTextLineItem::Clone(SfxItemPool*) const
SvxTextLineItem::GetBoolValue() const
SvxTextLineItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTextLineItem::GetValueCount() const
SvxTextLineItem::GetValueTextByPos(unsigned short) const
SvxTextLineItem::HasBoolValue() const
SvxTextLineItem::SetBoolValue(bool)
SvxTextLineItem::SvxTextLineItem(FontLineStyle, unsigned short)
SvxTextRotateItem::Clone(SfxItemPool*) const
SvxTextRotateItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTextRotateItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTextRotateItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTextRotateItem::SvxTextRotateItem(o3tl::strong_int<short, FractionTag<10> >, unsigned short)
SvxTextRotateItem::dumpAsXml(_xmlTextWriter*) const
SvxTimeField::Clone() const
SvxTimeField::SvxTimeField()
SvxTimeField::createBeginComment() const
SvxTimeField::operator==(SvxFieldData const&) const
SvxTwoLinesItem::Clone(SfxItemPool*) const
SvxTwoLinesItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTwoLinesItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTwoLinesItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTwoLinesItem::SvxTwoLinesItem(bool, char16_t, char16_t, unsigned short)
SvxTwoLinesItem::operator==(SfxPoolItem const&) const
SvxTwoLinesItem::~SvxTwoLinesItem()
SvxULSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxULSpaceItem::HasMetrics() const
SvxULSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxULSpaceItem::ScaleMetrics(long, long)
SvxULSpaceItem::SvxULSpaceItem(unsigned short)
SvxULSpaceItem::SvxULSpaceItem(unsigned short, unsigned short, unsigned short)
SvxULSpaceItem::dumpAsJSON[abi:cxx11]() const
SvxULSpaceItem::dumpAsXml(_xmlTextWriter*) const
SvxURLField::Clone() const
SvxURLField::SvxURLField()
SvxURLField::SvxURLField(rtl::OUString const&, rtl::OUString const&, SvxURLFormat)
SvxURLField::createBeginComment() const
SvxURLField::operator==(SvxFieldData const&) const
SvxUnderlineItem::GetValueTextByPos(unsigned short) const
SvxUnderlineItem::SvxUnderlineItem(FontLineStyle, unsigned short)
SvxUnoDrawMSFactory::createTextField(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxUnoDrawPool::SvxUnoDrawPool(SdrModel*)
SvxUnoDrawPool::SvxUnoDrawPool(SdrModel*, int)
SvxUnoDrawPool::getAny(SfxItemPool const*, comphelper::PropertyMapEntry const*, com::sun::star::uno::Any&)
SvxUnoDrawPool::init()
SvxUnoDrawPool::~SvxUnoDrawPool()
SvxUnoDrawingModel::SvxUnoDrawingModel(SdrModel*)
SvxUnoDrawingModel::createAnyCompareByName(rtl::OUString const&)
SvxUnoDrawingModel::createInstance(rtl::OUString const&)
SvxUnoDrawingModel::getAvailableServiceNames()
SvxUnoDrawingModel::getDrawPages()
SvxUnoDrawingModel::getImplementationId()
SvxUnoDrawingModel::getImplementationName()
SvxUnoDrawingModel::getSdrModelFromUnoModel() const
SvxUnoDrawingModel::getSupportedServiceNames()
SvxUnoDrawingModel::getTypes()
SvxUnoDrawingModel::hasControllersLocked()
SvxUnoDrawingModel::lockControllers()
SvxUnoDrawingModel::queryInterface(com::sun::star::uno::Type const&)
SvxUnoDrawingModel::supportsService(rtl::OUString const&)
SvxUnoDrawingModel::unlockControllers()
SvxUnoDrawingModel::~SvxUnoDrawingModel()
SvxUnoFontDescriptor::FillFromItemSet(SfxItemSet const&, com::sun::star::awt::FontDescriptor&)
SvxUnoFontDescriptor::FillItemSet(com::sun::star::awt::FontDescriptor const&, SfxItemSet&)
SvxUnoFontDescriptor::getPropertyDefault(SfxItemPool*)
SvxUnoFontDescriptor::setPropertyToDefault(SfxItemSet&)
SvxUnoForbiddenCharsTable::SvxUnoForbiddenCharsTable(std::shared_ptr<SvxForbiddenCharactersTable> const&)
SvxUnoForbiddenCharsTable::onChange()
SvxUnoForbiddenCharsTable::~SvxUnoForbiddenCharsTable()
SvxUnoPropertyMapProvider::GetMap(unsigned short)
SvxUnoPropertyMapProvider::SvxUnoPropertyMapProvider()
SvxUnoPropertyMapProvider::~SvxUnoPropertyMapProvider()
SvxUnoText::SvxUnoText(SvxItemPropertySet const*)
SvxUnoText::SvxUnoText(SvxUnoText const&)
SvxUnoText::getUnoTunnelId()
SvxUnoText::~SvxUnoText()
SvxUnoTextBase::SvxUnoTextBase(SvxEditSource const*, SvxItemPropertySet const*, com::sun::star::uno::Reference<com::sun::star::text::XText> const&)
SvxUnoTextBase::SvxUnoTextBase(SvxItemPropertySet const*)
SvxUnoTextBase::SvxUnoTextBase(SvxUnoTextBase const&)
SvxUnoTextBase::getImplementationId()
SvxUnoTextBase::getSupportedServiceNames_Static()
SvxUnoTextBase::getTypes()
SvxUnoTextBase::~SvxUnoTextBase()
SvxUnoTextCursor::SvxUnoTextCursor(SvxUnoTextBase const&)
SvxUnoTextCursor::SvxUnoTextCursor(SvxUnoTextCursor const&)
SvxUnoTextCursor::getEnd()
SvxUnoTextCursor::getStart()
SvxUnoTextCursor::getText()
SvxUnoTextCursor::~SvxUnoTextCursor()
SvxUnoTextField::CreateFieldData() const
SvxUnoTextField::SvxUnoTextField(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, rtl::OUString const&, SvxFieldData const*)
SvxUnoTextField::SvxUnoTextField(int)
SvxUnoTextField::acquire()
SvxUnoTextField::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxUnoTextField::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxUnoTextField::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxUnoTextField::attach(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&)
SvxUnoTextField::dispose()
SvxUnoTextField::disposing()
SvxUnoTextField::getAnchor()
SvxUnoTextField::getImplementationId()
SvxUnoTextField::getImplementationName()
SvxUnoTextField::getPresentation(unsigned char)
SvxUnoTextField::getPropertySetInfo()
SvxUnoTextField::getPropertyValue(rtl::OUString const&)
SvxUnoTextField::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvxUnoTextField::getSupportedServiceNames()
SvxUnoTextField::getTypes()
SvxUnoTextField::getUnoTunnelId()
SvxUnoTextField::queryAggregation(com::sun::star::uno::Type const&)
SvxUnoTextField::queryInterface(com::sun::star::uno::Type const&)
SvxUnoTextField::release()
SvxUnoTextField::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxUnoTextField::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxUnoTextField::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxUnoTextField::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxUnoTextField::supportsService(rtl::OUString const&)
SvxUnoTextField::~SvxUnoTextField()
SvxUnoTextRange::SvxUnoTextRange(SvxUnoTextBase const&, bool)
SvxUnoTextRange::acquire()
SvxUnoTextRange::getImplementationId()
SvxUnoTextRange::getImplementationName()
SvxUnoTextRange::getText()
SvxUnoTextRange::getTypes()
SvxUnoTextRange::queryAggregation(com::sun::star::uno::Type const&)
SvxUnoTextRange::queryInterface(com::sun::star::uno::Type const&)
SvxUnoTextRange::release()
SvxUnoTextRange::~SvxUnoTextRange()
SvxUnoTextRangeBase::CollapseToEnd()
SvxUnoTextRangeBase::CollapseToStart()
SvxUnoTextRangeBase::GoLeft(int, bool)
SvxUnoTextRangeBase::GoRight(int, bool)
SvxUnoTextRangeBase::GotoEnd(bool)
SvxUnoTextRangeBase::GotoStart(bool)
SvxUnoTextRangeBase::IsCollapsed()
SvxUnoTextRangeBase::SvxUnoTextRangeBase(SvxEditSource const*, SvxItemPropertySet const*)
SvxUnoTextRangeBase::SvxUnoTextRangeBase(SvxItemPropertySet const*)
SvxUnoTextRangeBase::SvxUnoTextRangeBase(SvxUnoTextRangeBase const&)
SvxUnoTextRangeBase::_getOnePropertyStates(SfxItemSet const*, SfxItemPropertyMapEntry const*, com::sun::star::beans::PropertyState&)
SvxUnoTextRangeBase::_getPropertyState(SfxItemPropertyMapEntry const*, int)
SvxUnoTextRangeBase::_getPropertyState(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int)
SvxUnoTextRangeBase::_getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&, int)
SvxUnoTextRangeBase::_getPropertyValue(rtl::OUString const&, int)
SvxUnoTextRangeBase::_getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, int)
SvxUnoTextRangeBase::_setPropertyToDefault(SvxTextForwarder*, SfxItemPropertyMapEntry const*, int)
SvxUnoTextRangeBase::_setPropertyToDefault(rtl::OUString const&, int)
SvxUnoTextRangeBase::_setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&, int)
SvxUnoTextRangeBase::_setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, int)
SvxUnoTextRangeBase::getEnd()
SvxUnoTextRangeBase::getPropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&, SfxItemSet const&)
SvxUnoTextRangeBase::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvxUnoTextRangeBase::getStart()
SvxUnoTextRangeBase::getString()
SvxUnoTextRangeBase::getSupportedServiceNames()
SvxUnoTextRangeBase::getSupportedServiceNames_Static()
SvxUnoTextRangeBase::setPropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&, ESelection const&, SfxItemSet const&, SfxItemSet&)
SvxUnoTextRangeBase::setString(rtl::OUString const&)
SvxUnoTextRangeBase::~SvxUnoTextRangeBase()
SvxUnogetApiNameForItem(unsigned short, rtl::OUString const&)
SvxVerJustifyItem::Clone(SfxItemPool*) const
SvxVerJustifyItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxVerJustifyItem::GetValueCount() const
SvxVerJustifyItem::GetValueText(SvxCellVerJustify)
SvxVerJustifyItem::SvxVerJustifyItem(SvxCellVerJustify, unsigned short)
SvxVerJustifyItem::SvxVerJustifyItem(unsigned short)
SvxViewForwarder::~SvxViewForwarder()
SvxViewLayoutItem::Clone(SfxItemPool*) const
SvxViewLayoutItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxViewLayoutItem::SvxViewLayoutItem(SvxViewLayoutItem const&)
SvxViewLayoutItem::SvxViewLayoutItem(unsigned short, bool, unsigned short)
SvxViewLayoutItem::operator==(SfxPoolItem const&) const
SvxViewLayoutItem::~SvxViewLayoutItem()
SvxWeightItem::Clone(SfxItemPool*) const
SvxWeightItem::GetBoolValue() const
SvxWeightItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWeightItem::GetValueCount() const
SvxWeightItem::GetValueTextByPos(unsigned short)
SvxWeightItem::HasBoolValue() const
SvxWeightItem::SetBoolValue(bool)
SvxWeightItem::SvxWeightItem(FontWeight, unsigned short)
SvxWeightItem::dumpAsXml(_xmlTextWriter*) const
SvxWidowsItem::Clone(SfxItemPool*) const
SvxWidowsItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWidowsItem::SvxWidowsItem(unsigned char, unsigned short)
SvxWordLineModeItem::Clone(SfxItemPool*) const
SvxWordLineModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWordLineModeItem::SvxWordLineModeItem(bool, unsigned short)
SvxWritingModeItem::Clone(SfxItemPool*) const
SvxWritingModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWritingModeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxWritingModeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxWritingModeItem::SvxWritingModeItem(com::sun::star::text::WritingMode, unsigned short)
SvxWritingModeItem::~SvxWritingModeItem()
SvxXConnectionPreview::MouseButtonDown(MouseEvent const&)
SvxXConnectionPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXConnectionPreview::Resize()
SvxXConnectionPreview::SetDrawingArea(weld::DrawingArea*)
SvxXConnectionPreview::SvxXConnectionPreview()
SvxXConnectionPreview::~SvxXConnectionPreview()
SvxXLinePreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXLinePreview::Resize()
SvxXLinePreview::SetDrawingArea(weld::DrawingArea*)
SvxXLinePreview::SvxXLinePreview()
SvxXLinePreview::~SvxXLinePreview()
SvxXMLListStyleContext::CreateAndInsertAuto() const
SvxXMLListStyleContext::CreateAndInsertLate(bool)
SvxXMLListStyleContext::CreateNumRule(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SvxXMLListStyleContext::SetDefaultStyle(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&, short, bool)
SvxXMLListStyleContext::SvxXMLListStyleContext(SvXMLImport&, bool)
SvxXMLListStyleContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
SvxXMLListStyleContext::~SvxXMLListStyleContext()
SvxXMLNumRuleExport::SvxXMLNumRuleExport(SvXMLExport&)
SvxXMLNumRuleExport::exportNumberingRule(rtl::OUString const&, bool, com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&)
SvxXMLNumRuleExport::exportStyles(bool, XMLTextListAutoStylePool*, bool)
SvxXMLNumRuleExport::~SvxXMLNumRuleExport()
SvxXMeasurePreview::MouseButtonDown(MouseEvent const&)
SvxXMeasurePreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXMeasurePreview::Resize()
SvxXMeasurePreview::ResizeImpl(Size const&)
SvxXMeasurePreview::SetDrawingArea(weld::DrawingArea*)
SvxXMeasurePreview::SvxXMeasurePreview()
SvxXMeasurePreview::~SvxXMeasurePreview()
SvxXRectPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXRectPreview::Resize()
SvxXRectPreview::SetDrawingArea(weld::DrawingArea*)
SvxXRectPreview::SvxXRectPreview()
SvxXRectPreview::~SvxXRectPreview()
SvxXShadowPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXShadowPreview::SetDrawingArea(weld::DrawingArea*)
SvxXShadowPreview::SvxXShadowPreview()
SvxXShadowPreview::~SvxXShadowPreview()
SvxZoomItem::Clone(SfxItemPool*) const
SvxZoomItem::SvxZoomItem(SvxZoomType, unsigned short, unsigned short)
SvxZoomItem::operator==(SfxPoolItem const&) const
SvxZoomPageStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxZoomPageStatusBarControl::MouseButtonDown(MouseEvent const&)
SvxZoomPageStatusBarControl::Paint(UserDrawEvent const&)
SvxZoomPageStatusBarControl::SvxZoomPageStatusBarControl(unsigned short, unsigned short, StatusBar&)
SvxZoomSliderControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxZoomSliderControl::MouseButtonDown(MouseEvent const&)
SvxZoomSliderControl::MouseButtonUp(MouseEvent const&)
SvxZoomSliderControl::MouseMove(MouseEvent const&)
SvxZoomSliderControl::Offset2Zoom(long) const
SvxZoomSliderControl::Paint(UserDrawEvent const&)
SvxZoomSliderControl::SvxZoomSliderControl(unsigned short, unsigned short, StatusBar&)
SvxZoomSliderControl::Zoom2Offset(unsigned short) const
SvxZoomSliderControl::forceRepaint() const
SvxZoomSliderControl::repaintAndExecute()
SvxZoomSliderControl::~SvxZoomSliderControl()
SvxZoomSliderItem::Clone(SfxItemPool*) const
SvxZoomSliderItem::SvxZoomSliderItem(unsigned short, unsigned short, unsigned short, unsigned short)
SvxZoomSliderItem::operator==(SfxPoolItem const&) const
SvxZoomStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxZoomStatusBarControl::ImplUpdateItemText()
SvxZoomStatusBarControl::Paint(UserDrawEvent const&)
SwAddPrinterItem::Clone(SfxItemPool*) const
SwAddPrinterItem::SwAddPrinterItem()
SwAddPrinterItem::SwAddPrinterItem(SwPrintData const&)
SwAddPrinterItem::operator==(SfxPoolItem const&) const
SwAddressPreview::DrawText_Impl(OutputDevice&, rtl::OUString const&, Point const&, Size const&, bool)
SwAddressPreview::KeyInput(KeyEvent const&)
SwAddressPreview::MouseButtonDown(MouseEvent const&)
SwAddressPreview::Paint(OutputDevice&, tools::Rectangle const&)
SwAddressPreview::SwAddressPreview(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SwAddressPreview::UpdateScrollBar()
SwAddressPreview::~SwAddressPreview()
SwAnchoredObject::AddLastCharY(long)
SwAnchoredObject::AddLastTopOfLineY(long)
SwAnchoredObject::CheckCharRect(SwFormatAnchor const&, SwTextFrame const&)
SwAnchoredObject::CheckCharRectAndTopOfLine(bool)
SwAnchoredObject::CheckTopOfLine(SwFormatAnchor const&, SwTextFrame const&)
SwAnchoredObject::ChgAnchorFrame(SwFrame*)
SwAnchoredObject::ClearCharRectAndTopOfLine()
SwAnchoredObject::ClearTmpConsiderWrapInfluence()
SwAnchoredObject::ClearVertPosOrientFrame()
SwAnchoredObject::ClearedEnvironment() const
SwAnchoredObject::ConsiderForTextWrap() const
SwAnchoredObject::ConsiderObjWrapInfluenceOfOtherObjs() const
SwAnchoredObject::ConsiderObjWrapInfluenceOnObjPos() const
SwAnchoredObject::DynCastFlyFrame()
SwAnchoredObject::DynCastFlyFrame() const
SwAnchoredObject::FindAnchorCharFrame()
SwAnchoredObject::FindPageFrameOfAnchor()
SwAnchoredObject::GetAnchorFrameContainingAnchPos()
SwAnchoredObject::GetObjRectWithSpaces() const
SwAnchoredObject::GetRelCharX(SwFrame const*) const
SwAnchoredObject::GetRelCharY(SwFrame const*) const
SwAnchoredObject::GetRelPosToAnchorFrame() const
SwAnchoredObject::GetRelPosToChar() const
SwAnchoredObject::GetRelPosToLine() const
SwAnchoredObject::GetRelPosToPageFrame(bool, bool&) const
SwAnchoredObject::HasClearedEnvironment() const
SwAnchoredObject::InvalidateObjPosForConsiderWrapInfluence()
SwAnchoredObject::InvalidationOfPosAllowed() const
SwAnchoredObject::IsDraggingOffPageAllowed(SwFrameFormat const*)
SwAnchoredObject::IsFormatPossible() const
SwAnchoredObject::ObjectAttachedToAnchorFrame()
SwAnchoredObject::OverlapsPrevColumn() const
SwAnchoredObject::PositionLocked() const
SwAnchoredObject::ResetLastCharRectHeight()
SwAnchoredObject::RestartLayoutProcess() const
SwAnchoredObject::SetClearedEnvironment(bool)
SwAnchoredObject::SetConsiderForTextWrap(bool)
SwAnchoredObject::SetCurrRelPos(Point)
SwAnchoredObject::SetDrawObj(SdrObject&)
SwAnchoredObject::SetObjLeft(long)
SwAnchoredObject::SetObjTop(long)
SwAnchoredObject::SetPageFrame(SwPageFrame*)
SwAnchoredObject::SetRestartLayoutProcess(bool)
SwAnchoredObject::SetTmpConsiderWrapInfluence(bool)
SwAnchoredObject::SetTmpConsiderWrapInfluenceOfOtherObjs()
SwAnchoredObject::SetVertPosOrientFrame(SwLayoutFrame const&)
SwAnchoredObject::SwAnchoredObject()
SwAnchoredObject::UpdateLayoutDir()
SwAnchoredObject::UpdateObjInSortedList()
SwAnchoredObject::dumpAsXml(_xmlTextWriter*) const
SwAnchoredObject::~SwAnchoredObject()
SwAttrSet::Changed(SfxPoolItem const&, SfxPoolItem const&)
SwAttrSet::ClearItem_BC(unsigned short, SwAttrSet*, SwAttrSet*)
SwAttrSet::ClearItem_BC(unsigned short, unsigned short, SwAttrSet*, SwAttrSet*)
SwAttrSet::CopyToModify(sw::BroadcastingModify&) const
SwAttrSet::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&) const
SwAttrSet::Intersect_BC(SfxItemSet const&, SwAttrSet*, SwAttrSet*)
SwAttrSet::Put_BC(SfxItemSet const&, SwAttrSet*, SwAttrSet*)
SwAttrSet::Put_BC(SfxPoolItem const&, SwAttrSet*, SwAttrSet*)
SwAttrSet::SetModifyAtAttr(sw::BroadcastingModify const*)
SwAttrSet::SwAttrSet(SwAttrPool&, WhichRangesContainer const&)
SwAttrSet::SwAttrSet(SwAttrPool&, unsigned short, unsigned short)
SwAttrSet::SwAttrSet(SwAttrSet const&)
SwAuthenticator::getPassword()
SwAuthenticator::getUserName()
SwAuthenticator::~SwAuthenticator()
SwAuthorityField::ChgTyp(SwFieldType*)
SwAuthorityField::ConditionalExpandAuthIdentifier(SwRootFrame const*) const
SwAuthorityField::Copy() const
SwAuthorityField::ExpandImpl(SwRootFrame const*) const
SwAuthorityField::GetDescription() const
SwAuthorityField::GetFieldText(ToxAuthorityField) const
SwAuthorityField::HasURL() const
SwAuthorityField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwAuthorityField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwAuthorityField::SetPar1(rtl::OUString const&)
SwAuthorityField::SwAuthorityField(SwAuthorityFieldType*, SwAuthEntry*)
SwAuthorityField::SwAuthorityField(SwAuthorityFieldType*, rtl::OUString const&)
SwAuthorityField::dumpAsXml(_xmlTextWriter*) const
SwAuthorityField::~SwAuthorityField()
SwAuthorityFieldType::AddField(rtl::OUString const&)
SwAuthorityFieldType::AppendField(SwAuthEntry const&)
SwAuthorityFieldType::ChangeEntryContent(SwAuthEntry const*)
SwAuthorityFieldType::Copy() const
SwAuthorityFieldType::CreateTOXInternational() const
SwAuthorityFieldType::GetSequencePos(SwAuthEntry const*, SwRootFrame const*)
SwAuthorityFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwAuthorityFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwAuthorityFieldType::RemoveField(SwAuthEntry const*)
SwAuthorityFieldType::SetSortKeys(unsigned short, SwTOXSortKey const*)
SwAuthorityFieldType::SwAuthorityFieldType(SwDoc*)
SwAuthorityFieldType::SwClientNotify(SwModify const&, SfxHint const&)
SwAuthorityFieldType::dumpAsXml(_xmlTextWriter*) const
SwAuthorityFieldType::~SwAuthorityFieldType()
SwAutoCorrect::GetLongText(rtl::OUString const&, rtl::OUString&)
SwAutoCorrect::PutText(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, rtl::OUString const&, SfxObjectShell&, rtl::OUString&)
SwAutoCorrect::SwAutoCorrect(SvxAutoCorrect const&)
SwAutoCorrect::refreshBlockList(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SwAutoCorrect::~SwAutoCorrect()
SwBaseShell::CopyPaMRing(SwPaM&)
SwBaseShell::EditRegionDialog(SfxRequest const&)
SwBaseShell::ExecBckCol(SfxRequest&)
SwBaseShell::ExecClpbrd(SfxRequest&)
SwBaseShell::ExecDelete(SfxRequest&)
SwBaseShell::ExecDlg(SfxRequest&)
SwBaseShell::ExecField(SfxRequest const&)
SwBaseShell::ExecTextCtrl(SfxRequest&)
SwBaseShell::ExecUndo(SfxRequest&)
SwBaseShell::Execute(SfxRequest&)
SwBaseShell::ExecuteGallery(SfxRequest&)
SwBaseShell::GetBckColState(SfxItemSet&)
SwBaseShell::GetBorderState(SfxItemSet&)
SwBaseShell::GetGalleryState(SfxItemSet&)
SwBaseShell::GetInterface() const
SwBaseShell::GetShell()
SwBaseShell::GetShellPtr()
SwBaseShell::GetStaticInterface()
SwBaseShell::GetTextCtrlState(SfxItemSet&)
SwBaseShell::GetTextFontCtrlState(SfxItemSet&)
SwBaseShell::InitInterface_Impl()
SwBaseShell::InsertRegionDialog(SfxRequest&)
SwBaseShell::InsertTable(SfxRequest&)
SwBaseShell::InsertURLButton(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwBaseShell::RegisterInterface(SfxModule const*)
SwBaseShell::SetFrameMode(FlyMode, SwWrtShell*)
SwBaseShell::SetWrapMode(unsigned short)
SwBaseShell::StateClpbrd(SfxItemSet&)
SwBaseShell::StateDisableItems(SfxItemSet&)
SwBaseShell::StateStyle(SfxItemSet&)
SwBaseShell::StateUndo(SfxItemSet&)
SwBaseShell::SwBaseShell(SwView&)
SwBaseShell::~SwBaseShell()
SwBreakIt::Create_(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
SwBreakIt::Delete_()
SwBreakIt::GetAllScriptsOfText(rtl::OUString const&) const
SwBreakIt::GetForbidden_(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwBreakIt::GetLocale_(LanguageTag const&)
SwBreakIt::GetRealScriptOfText(rtl::OUString const&, int) const
SwBreakIt::SwBreakIt(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
SwBreakIt::getGraphemeCount(rtl::OUString const&, int, int) const
SwChapterField::ChangeExpansion(SwFrame const&, SwContentNode const*, bool)
SwChapterField::Copy() const
SwChapterField::ExpandImpl(SwRootFrame const*) const
SwChapterField::GetNumber(SwRootFrame const*) const
SwChapterField::GetTitle(SwRootFrame const*) const
SwChapterField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwChapterField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwChapterField::SwChapterField(SwChapterFieldType*, unsigned int)
SwChapterNumRules::CreateEmptyNumRule(unsigned short)
SwChapterNumRules::Init()
SwChapterNumRules::Save()
SwChapterNumRules::SwChapterNumRules()
SwChapterNumRules::~SwChapterNumRules()
SwCharFormat::SetLinkedParaFormat(SwTextFormatColl&)
SwCharFormat::dumpAsXml(_xmlTextWriter*) const
SwCharFormats::ContainsFormat(SwCharFormat const*) const
SwCharFormats::DeleteAndDestroyAll(bool)
SwCharFormats::GetPos(SwCharFormat const*) const
SwCharFormats::SetFormatNameAndReindex(SwCharFormat*, rtl::OUString const&)
SwCharFormats::SwCharFormats()
SwCharFormats::dumpAsXml(_xmlTextWriter*) const
SwCharFormats::erase(boost::multi_index::detail::rnd_node_iterator<boost::multi_index::detail::random_access_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<SwCharFormat*, std::allocator<SwCharFormat*> > > > > const&)
SwCharFormats::find(SwCharFormat const*) const
SwCharFormats::findByName(rtl::OUString const&) const
SwCharFormats::insert(SwCharFormat*)
SwCharFormats::~SwCharFormats()
SwClient::CheckRegistration(SfxPoolItem const*)
SwClient::CheckRegistrationFormat(SwFormat&)
SwClient::EndListeningAll()
SwClient::StartListeningToSameModifyAs(SwClient const&)
SwClient::SwClient(SwClient&&)
SwClient::~SwClient()
SwColExample::DrawPage(OutputDevice&, Point const&, bool, bool)
SwColMgr::SwColMgr(SfxItemSet const&)
SwColMgr::~SwColMgr()
SwCollCondition::RegisterToFormat(SwFormat&)
SwCollCondition::SetCondition(Master_CollCondition, unsigned long)
SwCollCondition::SwCollCondition(SwCollCondition const&)
SwCollCondition::SwCollCondition(SwTextFormatColl*, Master_CollCondition, unsigned long)
SwCollCondition::operator==(SwCollCondition const&) const
SwCollCondition::~SwCollCondition()
SwColumnOnlyExample::Paint(OutputDevice&, tools::Rectangle const&)
SwColumnOnlyExample::Resize()
SwColumnOnlyExample::SetDrawingArea(weld::DrawingArea*)
SwColumnOnlyExample::SwColumnOnlyExample()
SwCombinedCharField::Copy() const
SwCombinedCharField::ExpandImpl(SwRootFrame const*) const
SwCombinedCharField::GetPar1() const
SwCombinedCharField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwCombinedCharField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwCombinedCharField::SetPar1(rtl::OUString const&)
SwCombinedCharField::SwCombinedCharField(SwCombinedCharFieldType*, rtl::OUString const&)
SwCondCollItem::Clone(SfxItemPool*) const
SwCondCollItem::GetStyle(unsigned short) const
SwCondCollItem::SwCondCollItem()
SwCondCollItem::operator==(SfxPoolItem const&) const
SwCondCollItem::~SwCondCollItem()
SwConditionTextFormatColl::InsertCondition(SwCollCondition const&)
SwConditionTextFormatColl::RemoveCondition(SwCollCondition const&)
SwConditionTextFormatColl::SetConditions(std::vector<std::unique_ptr<SwCollCondition, std::default_delete<SwCollCondition> >, std::allocator<std::unique_ptr<SwCollCondition, std::default_delete<SwCollCondition> > > > const&)
SwConditionTextFormatColl::~SwConditionTextFormatColl()
SwConnectionContext::SwConnectionContext(rtl::OUString const&, short, rtl::OUString const&)
SwConnectionContext::getValueByName(rtl::OUString const&)
SwConnectionContext::~SwConnectionContext()
SwConnectionListener::connected(com::sun::star::lang::EventObject const&)
SwConnectionListener::disconnected(com::sun::star::lang::EventObject const&)
SwConnectionListener::disposing(com::sun::star::lang::EventObject const&)
SwConnectionListener::~SwConnectionListener()
SwContentNode::ChgFormatColl(SwFormatColl*)
SwContentNode::ChkCondColl(SwTextFormatColl const*)
SwContentNode::ClearItemsFromAttrSet(std::vector<unsigned short, std::allocator<unsigned short> > const&)
SwContentNode::CreateOLENodesArray(SwFormatColl const&, bool)
SwContentNode::DelFrames(SwRootFrame const*)
SwContentNode::GetInfo(SfxPoolItem&) const
SwContentNode::GetTextDirection(SwPosition const&, Point const*) const
SwContentNode::GoNext(SwIndex*, unsigned short) const
SwContentNode::GoPrevious(SwIndex*, unsigned short) const
SwContentNode::InvalidateNumRule()
SwContentNode::IsAnyCondition(SwCollCondition&) const
SwContentNode::JoinNext()
SwContentNode::Len() const
SwContentNode::MakeFramesForAdjacentContentNode(SwContentNode&)
SwContentNode::ResetAllAttr()
SwContentNode::ResetAttr(std::vector<unsigned short, std::allocator<unsigned short> > const&)
SwContentNode::ResetAttr(unsigned short, unsigned short)
SwContentNode::SetAttr(SfxItemSet const&)
SwContentNode::SetCondFormatColl(SwFormatColl*)
SwContentNode::SwClientNotify(SwModify const&, SfxHint const&)
SwContentNode::SwContentNode(SwNodeIndex const&, SwNodeType, SwFormatColl*)
SwContentNode::UpdateAttr(SwUpdateAttr const&)
SwContentNode::getSdrAllFillAttributesHelper() const
SwContentNode::~SwContentNode()
SwContrastGrf::Clone(SfxItemPool*) const
SwContrastGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwCreateDialogFactory
SwCropGrf::Clone(SfxItemPool*) const
SwCropGrf::SwCropGrf()
SwCropGrf::SwCropGrf(int, int, int, int)
SwCursor::Create(SwPaM*) const
SwCursor::DoSetBidiLevelLeftRight(bool&, bool, bool)
SwCursor::DoSetBidiLevelUpDown()
SwCursor::ExpandToSentenceBorders(SwRootFrame const*)
SwCursor::FillFindPos(SwDocPositions, SwPosition&) const
SwCursor::FindAll(SwFindParas&, SwDocPositions, SwDocPositions, FindRanges, bool&)
SwCursor::FindAttrs(SfxItemSet const&, bool, SwDocPositions, SwDocPositions, bool&, FindRanges, i18nutil::SearchOptions2 const*, SfxItemSet const*, SwRootFrame const*)
SwCursor::FindFormat(SwTextFormatColl const&, SwDocPositions, SwDocPositions, bool&, FindRanges, SwTextFormatColl const*, SwRootFrame const*)
SwCursor::GoEndWordWT(short, SwRootFrame const*)
SwCursor::GoNextWordWT(short, SwRootFrame const*)
SwCursor::GoPrevNextCell(bool, unsigned short)
SwCursor::GoPrevWordWT(short, SwRootFrame const*)
SwCursor::GoSentence(SwCursor::SentenceMoveType, SwRootFrame const*)
SwCursor::GoStartWordWT(short, SwRootFrame const*)
SwCursor::GotoFootnoteText()
SwCursor::GotoNextFootnoteAnchor()
SwCursor::GotoPrevFootnoteAnchor()
SwCursor::GotoRegion(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwCursor::GotoTable(rtl::OUString const&)
SwCursor::GotoTableBox(rtl::OUString const&)
SwCursor::IsAtLeftRightMargin(SwRootFrame const&, bool, bool) const
SwCursor::IsAtValidPos(bool) const
SwCursor::IsEndWordWT(short, SwRootFrame const*) const
SwCursor::IsInProtectTable(bool, bool)
SwCursor::IsInWordWT(short, SwRootFrame const*) const
SwCursor::IsNoContent() const
SwCursor::IsReadOnlyAvailable() const
SwCursor::IsSelOvr(SwCursorSelOverFlags)
SwCursor::IsSelOvrCheck(SwCursorSelOverFlags)
SwCursor::IsSkipOverHiddenSections() const
SwCursor::IsSkipOverProtectSections() const
SwCursor::IsStartEndSentence(bool, SwRootFrame const*) const
SwCursor::IsStartWordWT(short, SwRootFrame const*) const
SwCursor::LeftRight(bool, unsigned short, unsigned short, bool, bool, bool, SwRootFrame const*, bool)
SwCursor::LeftRightMargin(SwRootFrame const&, bool, bool)
SwCursor::MakeFindRange(SwDocPositions, SwDocPositions, SwPaM*) const
SwCursor::MaxReplaceArived()
SwCursor::MoveRegion(bool (*)(SwPaM&, SwMoveFnCollection const&, bool), SwMoveFnCollection const&)
SwCursor::MoveSection(bool (*)(SwPaM&, SwMoveFnCollection const&), SwMoveFnCollection const&)
SwCursor::MoveTable(bool (*)(SwPaM&, SwMoveFnCollection const&, bool), SwMoveFnCollection const&)
SwCursor::RestoreSavePos()
SwCursor::RestoreState()
SwCursor::SaveState()
SwCursor::SaveTableBoxContent(SwPosition const*)
SwCursor::SelectWord(SwViewShell const*, Point const*)
SwCursor::SelectWordWT(SwViewShell const*, short, Point const*)
SwCursor::SwCursor(SwCursor const&, SwPaM*)
SwCursor::SwCursor(SwPosition const&, SwPaM*)
SwCursor::UpDown(bool, unsigned short, Point const*, long, SwRootFrame&)
SwCursor::~SwCursor()
SwCursorShell::BlockCursorToCursor()
SwCursorShell::CallChgLnk()
SwCursorShell::CheckTableBoxContent(SwPosition const*)
SwCursorShell::ClearTableBoxContent()
SwCursorShell::ClearUpCursors()
SwCursorShell::Combine()
SwCursorShell::CompareCursorStackMkCurrPt() const
SwCursorShell::CreateNewShellCursor()
SwCursorShell::CursorToBlockCursor()
SwCursorShell::DocPtInsideInputField(Point const&) const
SwCursorShell::EndAllTableBoxEdit()
SwCursorShell::EndOfInputFieldAtPos(SwPosition const&)
SwCursorShell::ExpandToSentenceBorders()
SwCursorShell::ExtendSelection(bool, int)
SwCursorShell::ExtendedSelectAll(bool)
SwCursorShell::ExtendedSelectedAll()
SwCursorShell::FindAttrs(SfxItemSet const&, bool, SwDocPositions, SwDocPositions, bool&, FindRanges, i18nutil::SearchOptions2 const*, SfxItemSet const*)
SwCursorShell::FindFormat(SwTextFormatColl const&, SwDocPositions, SwDocPositions, bool&, FindRanges, SwTextFormatColl const*)
SwCursorShell::FindINetAttr(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwCursorShell::FindValidContentNode(bool)
SwCursorShell::FireColumnChangeEvent(unsigned short, unsigned short)
SwCursorShell::FirePageChangeEvent(unsigned short, unsigned short)
SwCursorShell::FireSectionChangeEvent(unsigned short, unsigned short)
SwCursorShell::GetBoxNms() const
SwCursorShell::GetChar(bool, long)
SwCursorShell::GetCharRectAt(SwRect&, SwPosition const*)
SwCursorShell::GetContentAtPos(Point const&, SwContentAtPos&, bool, SwRect*)
SwCursorShell::GetCurrentFieldmark()
SwCursorShell::GetCurrentShellCursor()
SwCursorShell::GetCursorDescr() const
SwCursorShell::GetFieldmarkAfter()
SwCursorShell::GetFieldmarkBefore()
SwCursorShell::GetNextPrevPageNum(bool)
SwCursorShell::GetPostItFieldAtCursor() const
SwCursorShell::GetShadowCursorPos(Point const&, SwFillMode, SwRect&, short&)
SwCursorShell::GetSmartTagRect(Point const&, SwRect&)
SwCursorShell::GetSmartTagTerm(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::container::XStringKeyMap> >&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange>&) const
SwCursorShell::GetTextFieldAtCursor(SwPaM const*, bool)
SwCursorShell::GetTextFieldAtPos(SwPosition const*, bool)
SwCursorShell::GoEndSentence()
SwCursorShell::GoEndWord()
SwCursorShell::GoNextBookmark()
SwCursorShell::GoNextCursor()
SwCursorShell::GoNextPrevCursorSetSearchLabel(bool)
SwCursorShell::GoNextSentence()
SwCursorShell::GoNextWord()
SwCursorShell::GoPrevBookmark()
SwCursorShell::GoPrevCell()
SwCursorShell::GoPrevCursor()
SwCursorShell::GoPrevWord()
SwCursorShell::GoStartSentence()
SwCursorShell::GoStartWord()
SwCursorShell::GotoFieldmark(sw::mark::IFieldmark const*)
SwCursorShell::GotoFlyAnchor()
SwCursorShell::GotoFooterText()
SwCursorShell::GotoFootnoteAnchor()
SwCursorShell::GotoFootnoteAnchor(SwTextFootnote const&)
SwCursorShell::GotoFormatField(SwFormatField const&)
SwCursorShell::GotoINetAttr(SwTextINetFormat const&)
SwCursorShell::GotoMark(sw::mark::IMark const*, bool)
SwCursorShell::GotoNextNum()
SwCursorShell::GotoNextOutline()
SwCursorShell::GotoNextTOXBase(rtl::OUString const*)
SwCursorShell::GotoNxtPrvTOXMark(bool)
SwCursorShell::GotoNxtPrvTableFormula(bool, bool)
SwCursorShell::GotoOutline(rtl::OUString const&)
SwCursorShell::GotoOutline(unsigned long)
SwCursorShell::GotoPage(unsigned short)
SwCursorShell::GotoPrevNum()
SwCursorShell::GotoPrevOutline()
SwCursorShell::GotoPrevTOXBase(rtl::OUString const*)
SwCursorShell::GotoRedline(unsigned long, bool)
SwCursorShell::GotoRefMark(rtl::OUString const&, unsigned short, unsigned short)
SwCursorShell::GotoRegion(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwCursorShell::GotoTOXMarkBase()
SwCursorShell::GotoTable(rtl::OUString const&)
SwCursorShell::HideCursors()
SwCursorShell::IsEndOfDoc() const
SwCursorShell::IsEndOfTable() const
SwCursorShell::IsEndSentence() const
SwCursorShell::IsEndWord(short) const
SwCursorShell::IsFormProtected()
SwCursorShell::IsInFrontOfLabel() const
SwCursorShell::IsInRightToLeftText() const
SwCursorShell::IsInVerticalText(Point const*) const
SwCursorShell::IsInWord(short) const
SwCursorShell::IsOverReadOnlyPos(Point const&) const
SwCursorShell::IsPageAtPos(Point const&) const
SwCursorShell::IsSelFullPara() const
SwCursorShell::IsSelOnePara() const
SwCursorShell::IsStartOfDoc() const
SwCursorShell::IsStartSentence() const
SwCursorShell::IsStartWord(short) const
SwCursorShell::IsTableComplexForChart()
SwCursorShell::KillPams()
SwCursorShell::MakeOutlineSel(unsigned long, unsigned long, bool, bool)
SwCursorShell::MakeSelVisible()
SwCursorShell::MoveColumn(SwLayoutFrame* (*)(SwLayoutFrame const*), SwContentFrame* (*)(SwLayoutFrame const*))
SwCursorShell::MoveFieldType(SwFieldType const*, bool, SwFieldIds, bool)
SwCursorShell::MovePage(SwLayoutFrame* (*)(SwLayoutFrame const*), SwContentFrame* (*)(SwLayoutFrame const*))
SwCursorShell::MoveRegion(bool (*)(SwPaM&, SwMoveFnCollection const&, bool), SwMoveFnCollection const&)
SwCursorShell::MoveSection(bool (*)(SwPaM&, SwMoveFnCollection const&), SwMoveFnCollection const&)
SwCursorShell::NotifyCursor(SfxViewShell*) const
SwCursorShell::Paint(OutputDevice&, tools::Rectangle const&)
SwCursorShell::ParkCursor(SwNodeIndex const&)
SwCursorShell::ParkTableCursor()
SwCursorShell::PosInsideInputField(SwPosition const&)
SwCursorShell::RefreshBlockCursor()
SwCursorShell::SaveTableBoxContent(SwPosition const*)
SwCursorShell::SelNextRedline()
SwCursorShell::SelPrevRedline()
SwCursorShell::SelTableBox()
SwCursorShell::SelectHiddenRange()
SwCursorShell::SelectNxtPrvHyperlink(bool)
SwCursorShell::SelectTextAttr(unsigned short, bool, SwTextAttr const*)
SwCursorShell::SelectWord(Point const*)
SwCursorShell::SetCursor(Point const&, bool, bool)
SwCursorShell::SetCursorInHdFt(unsigned long, bool)
SwCursorShell::SetInFrontOfLabel(bool)
SwCursorShell::SetReadOnlyAvailable(bool)
SwCursorShell::SetSelection(SwPaM const&)
SwCursorShell::SetVisibleCursor(Point const&)
SwCursorShell::ShellGetFocus()
SwCursorShell::ShellLoseFocus()
SwCursorShell::ShouldWait() const
SwCursorShell::ShowCursor()
SwCursorShell::ShowCursors(bool)
SwCursorShell::StartOfInputFieldAtPos(SwPosition const&)
SwCursorShell::StartsWithTable()
SwCursorShell::SwClientNotify(SwModify const&, SfxHint const&)
SwCursorShell::SwCursorShell(SwCursorShell&, vcl::Window*)
SwCursorShell::SwCursorShell(SwDoc&, vcl::Window*, SwViewOption const*)
SwCursorShell::TableCursorToCursor()
SwCursorShell::TestCurrPam(Point const&, bool)
SwCursorShell::UpdateCursorPos()
SwCursorShell::UpdateTableSelBoxes()
SwCursorShell::VisPortChgd(SwRect const&)
SwCursorShell::bColumnChange()
SwCursorShell::dumpAsXml(_xmlTextWriter*) const
SwCursorShell::getPageRectangles()
SwCursorShell::~SwCursorShell()
SwDBConfig::ImplCommit()
SwDBConfig::Load()
SwDBConfig::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwDBConfig::SwDBConfig()
SwDBConfig::~SwDBConfig()
SwDBField::ChgTyp(SwFieldType*)
SwDBField::Copy() const
SwDBField::Evaluate()
SwDBField::ExpandImpl(SwRootFrame const*) const
SwDBField::FormatValue(SvNumberFormatter const*, rtl::OUString const&, unsigned int, double&, int, SwDBField*)
SwDBField::GetFieldName() const
SwDBField::GetPar1() const
SwDBField::GetSubType() const
SwDBField::InitContent()
SwDBField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBField::SwDBField(SwDBFieldType*, unsigned int)
SwDBField::~SwDBField()
SwDBFieldType::Copy() const
SwDBFieldType::GetName() const
SwDBFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBFieldType::ReleaseRef()
SwDBFieldType::SwDBFieldType(SwDoc*, rtl::OUString const&, SwDBData const&)
SwDBFieldType::~SwDBFieldType()
SwDBManager::CloseAll(bool)
SwDBManager::ExecuteFormLetter(SwWrtShell&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwDBManager::FillCalcWithMergeData(SvNumberFormatter*, o3tl::strong_int<unsigned short, LanguageTypeTag>, SwCalc&)
SwDBManager::GetAddressDBName()
SwDBManager::GetColumnCnt(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString&, double*)
SwDBManager::GetColumnFormat(com::sun::star::uno::Reference<com::sun::star::sdbc::XDataSource> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, SvNumberFormatter*, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwDBManager::GetColumnFormat(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, SvNumberFormatter*, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwDBManager::GetColumnType(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwDBManager::GetConnection(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XDataSource>&, SwView const*)
SwDBManager::GetMergeColumnCnt(rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString&, double*)
SwDBManager::GetSelectedRecordId()
SwDBManager::GetSelectedRecordId(rtl::OUString const&, rtl::OUString const&, int)
SwDBManager::InsertText(SwWrtShell&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwDBManager::IsDataSourceOpen(rtl::OUString const&, rtl::OUString const&, bool)
SwDBManager::LoadAndRegisterEmbeddedDataSource(SwDBData const&, SwDocShell const&)
SwDBManager::Merge(SwMergeDescriptor const&)
SwDBManager::MergeCancel()
SwDBManager::OpenDataSource(rtl::OUString const&, rtl::OUString const&)
SwDBManager::RegisterConnection(rtl::OUString const&)
SwDBManager::RevokeNotUsedConnections()
SwDBManager::SetAsUsed(rtl::OUString const&)
SwDBManager::StoreEmbeddedDataSource(com::sun::star::uno::Reference<com::sun::star::frame::XStorable> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, rtl::OUString const&, bool)
SwDBManager::SwDBManager(SwDoc*)
SwDBManager::ToNextRecord(rtl::OUString const&, rtl::OUString const&)
SwDBManager::ToRecordId(int)
SwDBManager::getDataSourceAsParent(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
SwDBManager::getDoc() const
SwDBManager::getEmbeddedName() const
SwDBManager::releaseRevokeListener()
SwDBManager::setEmbeddedName(rtl::OUString const&, SwDocShell&)
SwDBManager::~SwDBManager()
SwDBNameInfField::GetFieldName() const
SwDBNameInfField::GetSubType() const
SwDBNameInfField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBNameInfField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBNameInfField::SetSubType(unsigned short)
SwDBNameInfField::SwDBNameInfField(SwFieldType*, SwDBData const&, unsigned int)
SwDBNextSetField::Copy() const
SwDBNextSetField::Evaluate(SwDoc const&)
SwDBNextSetField::ExpandImpl(SwRootFrame const*) const
SwDBNextSetField::GetPar1() const
SwDBNextSetField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBNextSetField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBNextSetField::SetPar1(rtl::OUString const&)
SwDBNextSetField::SwDBNextSetField(SwDBNextSetFieldType*, rtl::OUString const&, SwDBData const&)
SwDBNextSetFieldType::Copy() const
SwDBNextSetFieldType::SwDBNextSetFieldType()
SwDBSetNumberField::Copy() const
SwDBSetNumberField::Evaluate(SwDoc const&)
SwDBSetNumberField::ExpandImpl(SwRootFrame const*) const
SwDBSetNumberField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBSetNumberField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBSetNumberField::SwDBSetNumberField(SwDBSetNumberFieldType*, SwDBData const&, unsigned int)
SwDBSetNumberFieldType::Copy() const
SwDBSetNumberFieldType::SwDBSetNumberFieldType()
SwDBTreeList::SwDBTreeList(std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >)
SwDBTreeList::~SwDBTreeList()
SwDDEFieldType::Copy() const
SwDDEFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDDEFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDDEFieldType::SetDoc(SwDoc*)
SwDDEFieldType::SwDDEFieldType(rtl::OUString const&, rtl::OUString const&, SfxLinkUpdateMode)
SwDDEFieldType::UpdateDDE(bool)
SwDDEFieldType::~SwDDEFieldType()
SwDateTimeField::Copy() const
SwDateTimeField::ExpandImpl(SwRootFrame const*) const
SwDateTimeField::GetDate() const
SwDateTimeField::GetDateTime(SwDoc&, DateTime const&)
SwDateTimeField::GetPar2() const
SwDateTimeField::GetTime() const
SwDateTimeField::GetValue() const
SwDateTimeField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDateTimeField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDateTimeField::SetPar2(rtl::OUString const&)
SwDateTimeField::SwDateTimeField(SwDateTimeFieldType*, unsigned short, unsigned long, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwDoc::AddDrawUndo(std::unique_ptr<SdrUndoAction, std::default_delete<SdrUndoAction> >)
SwDoc::AddNumRule(SwNumRule*)
SwDoc::AddUsedDBToList(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, rtl::OUString const&)
SwDoc::AddUsedDBToList(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
SwDoc::AdjustCellWidth(SwCursor const&, bool, bool)
SwDoc::AppendDoc(SwDoc const&, unsigned short, bool, int, unsigned long)
SwDoc::AppendUndoForInsertFromDB(SwPaM const&, bool)
SwDoc::BalanceRowHeight(SwCursor const&, bool, bool)
SwDoc::BroadcastStyleOperation(rtl::OUString const&, SfxStyleFamily, SfxHintId)
SwDoc::CalculateNonBlankPages(SwRootFrame const&, unsigned short&, unsigned short&)
SwDoc::CalculatePagePairsForProspectPrinting(SwRootFrame const&, SwRenderData&, SwPrintUIOptions const&, int)
SwDoc::CalculatePagesForPrinting(SwRootFrame const&, SwRenderData&, SwPrintUIOptions const&, bool, int)
SwDoc::CallEvent(SvMacroItemId, SwCallMouseEvent const&, bool)
SwDoc::Chain(SwFrameFormat&, SwFrameFormat const&)
SwDoc::Chainable(SwFrameFormat const&, SwFrameFormat const&)
SwDoc::ChangeAuthorityData(SwAuthEntry const*)
SwDoc::ChangeDBFields(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, rtl::OUString const&)
SwDoc::ChangeTOX(SwTOXBase&, SwTOXBase const&)
SwDoc::CheckDefaultPageFormat()
SwDoc::CheckForUniqueItemForLineFillNameOrIndex(SfxItemSet&)
SwDoc::ChgAnchor(SdrMarkList const&, RndStdIds, bool, bool)
SwDoc::ChgDBData(SwDBData const&)
SwDoc::ChgNumRuleFormats(SwNumRule const&)
SwDoc::ChkBoxNumFormat(SwTableBox&, bool)
SwDoc::ChkCondColls()
SwDoc::ClearBoxNumAttrs(SwNodeIndex const&)
SwDoc::ClearDoc()
SwDoc::ClearLineNumAttrs(SwPosition const&)
SwDoc::CloneSdrObj(SdrObject const&, bool, bool)
SwDoc::CompareDoc(SwDoc const&)
SwDoc::ContainsHiddenChars() const
SwDoc::ContainsPageDesc(SwPageDesc const*, unsigned long*) const
SwDoc::ConvertFieldsToText(SwRootFrame const&)
SwDoc::CopyCharFormat(SwCharFormat const&)
SwDoc::CopyFormat(SwFormat const&, SwFormatsBase const&, SwFormat* (SwDoc::*)(rtl::OUString const&, SwFormat*, bool, bool), SwFormat const&)
SwDoc::CopyFormatArr(SwFormatsBase const&, SwFormatsBase const&, SwFormat* (SwDoc::*)(rtl::OUString const&, SwFormat*, bool, bool), SwFormat&)
SwDoc::CopyFrameFormat(SwFrameFormat const&)
SwDoc::CopyGrfColl(SwGrfFormatColl const&)
SwDoc::CopyMasterFooter(SwPageDesc const&, SwFormatFooter const&, SwPageDesc&, bool, bool)
SwDoc::CopyMasterHeader(SwPageDesc const&, SwFormatHeader const&, SwPageDesc&, bool, bool)
SwDoc::CopyTextColl(SwTextFormatColl const&)
SwDoc::CorrAbs(SwNodeIndex const&, SwNodeIndex const&, SwPosition const&, bool)
SwDoc::CorrAbs(SwNodeIndex const&, SwPosition const&, int, bool)
SwDoc::CorrAbs(SwPaM const&, SwPosition const&, bool)
SwDoc::CorrRel(SwNodeIndex const&, SwPosition const&, int, bool)
SwDoc::CountWords(SwPaM const&, SwDocStat&)
SwDoc::CreateCopy(bool, bool) const
SwDoc::CreateExtTextInput(SwPaM const&)
SwDoc::DelCharFormat(SwCharFormat const*, bool)
SwDoc::DelCharFormat(unsigned long, bool)
SwDoc::DelNumRules(SwPaM const&, SwRootFrame const*)
SwDoc::DelPageDesc(rtl::OUString const&, bool)
SwDoc::DelPageDesc(unsigned long, bool)
SwDoc::DelSectionFormat(SwSectionFormat*, bool)
SwDoc::DelTableFrameFormat(SwTableFormat*)
SwDoc::DelTextFormatColl(SwTextFormatColl const*, bool)
SwDoc::DelTextFormatColl(unsigned long, bool)
SwDoc::DeleteAutoCorrExceptWord()
SwDoc::DeleteCol(SwCursor const&)
SwDoc::DeleteExtTextInput(SwExtTextInput*)
SwDoc::DeleteRow(SwCursor const&)
SwDoc::DeleteRowCol(SwSelBoxes const&, SwDoc::RowColMode)
SwDoc::DeleteSelection(SwDrawView&)
SwDoc::DeleteTOX(SwTOXBase const&, bool)
SwDoc::DeleteTOXMark(SwTOXMark const*)
SwDoc::DoUpdateAllCharts()
SwDoc::DontExpandFormat(SwPosition const&, bool)
SwDoc::ExecMacro(SvxMacro const&, rtl::OUString*, SbxArray*)
SwDoc::FieldCanHideParaWeight(SwFieldIds) const
SwDoc::FieldHidesPara(SwField const&) const
SwDoc::FillRubyList(SwPaM const&, std::vector<std::unique_ptr<SwRubyListEntry, std::default_delete<SwRubyListEntry> >, std::allocator<std::unique_ptr<SwRubyListEntry, std::default_delete<SwRubyListEntry> > > >&)
SwDoc::FindFrameFormatByName(rtl::OUString const&) const
SwDoc::FindINetAttr(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwDoc::FindNumRule(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwDoc::FindUsedDBs(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, rtl::OUString const&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
SwDoc::GenerateGlobalDoc(rtl::OUString const&, SwTextFormatColl const*)
SwDoc::GenerateGlobalDoc(rtl::OUString const&, int)
SwDoc::GenerateHTMLDoc(rtl::OUString const&, SwTextFormatColl const*)
SwDoc::GenerateHTMLDoc(rtl::OUString const&, int)
SwDoc::GetAllDBNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
SwDoc::GetAllUsedDB(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*)
SwDoc::GetBoxAlign(SwCursor const&)
SwDoc::GetBoxAttr(SwCursor const&, std::unique_ptr<SfxPoolItem, std::default_delete<SfxPoolItem> >&)
SwDoc::GetCurTOXMark(SwPosition const&, std::vector<SwTOXMark*, std::allocator<SwTOXMark*> >&)
SwDoc::GetCurrSection(SwPosition const&)
SwDoc::GetDefaultTOXBase(TOXTypes, bool)
SwDoc::GetDocColors()
SwDoc::GetDocPattern(unsigned long) const
SwDoc::GetDocumentContentOperationsManager()
SwDoc::GetDocumentContentOperationsManager() const
SwDoc::GetDocumentDrawModelManager()
SwDoc::GetDocumentDrawModelManager() const
SwDoc::GetDocumentFieldsManager()
SwDoc::GetDocumentLayoutManager()
SwDoc::GetDocumentLayoutManager() const
SwDoc::GetDocumentLinksAdministrationManager()
SwDoc::GetDocumentLinksAdministrationManager() const
SwDoc::GetDocumentRedlineManager() const
SwDoc::GetDocumentSettingManager()
SwDoc::GetDocumentSettingManager() const
SwDoc::GetDocumentStatisticsManager()
SwDoc::GetDocumentStatisticsManager() const
SwDoc::GetEditShell() const
SwDoc::GetExtTextInput() const
SwDoc::GetExtTextInput(SwNode const&, int) const
SwDoc::GetFlyNum(unsigned long, FlyCntType, bool)
SwDoc::GetGCIterator() const
SwDoc::GetGrfNms(SwFlyFrameFormat const&, rtl::OUString*, rtl::OUString*)
SwDoc::GetIDocumentUndoRedo() const
SwDoc::GetIShellCursorSupplier()
SwDoc::GetNumRuleAtPos(SwPosition&, SwRootFrame const*)
SwDoc::GetPaMDescr(SwPaM const&)
SwDoc::GetRefMark(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwDoc::GetRefMark(unsigned short) const
SwDoc::GetRefMarks(std::vector<rtl::OUString, std::allocator<rtl::OUString> >*) const
SwDoc::GetRowBackground(SwCursor const&, std::unique_ptr<SvxBrushItem, std::default_delete<SvxBrushItem> >&)
SwDoc::GetRowHeight(SwCursor const&)
SwDoc::GetRowSplit(SwCursor const&)
SwDoc::GetTOIKeys(SwTOIKeyType, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, SwRootFrame const&) const
SwDoc::GetTOXBaseAttrSet(SwTOXBase const&)
SwDoc::GetTOXTypeCount(TOXTypes) const
SwDoc::GetTabBorders(SwCursor const&, SfxItemSet&)
SwDoc::GetTabCols(SwTabCols&, SwCellFrame const*)
SwDoc::GetTabRows(SwTabCols&, SwCellFrame const*)
SwDoc::GetTableAutoFormat(SwSelBoxes const&, SwTableAutoFormat&)
SwDoc::GetTableFrameFormat(unsigned long, bool) const
SwDoc::GetUndoManager() const
SwDoc::GetUniqueGrfName() const
SwDoc::GetUniqueOLEName() const
SwDoc::GetUniqueShapeName() const
SwDoc::GetUniqueTOXBaseName(SwTOXType const&, rtl::OUString const&) const
SwDoc::GetUniqueTableName() const
SwDoc::GetVbaEventProcessor()
SwDoc::GetXmlIdRegistry()
SwDoc::GotoNextNum(SwPosition&, SwRootFrame const*, bool, unsigned char*, unsigned char*)
SwDoc::GotoPrevNum(SwPosition&, SwRootFrame const*, bool)
SwDoc::GroupSelection(SdrView&)
SwDoc::HasInvisibleContent() const
SwDoc::HasTableAnyProtection(SwPosition const*, rtl::OUString const*, bool*)
SwDoc::Hyphenate(SwPaM*, Point const&, unsigned short*, unsigned short*)
SwDoc::InitTOXTypes()
SwDoc::InsCopyOfTable(SwPosition&, SwSelBoxes const&, SwTable const*, bool, bool, rtl::OUString const&)
SwDoc::InsertCol(SwCursor const&, unsigned short, bool)
SwDoc::InsertCol(SwSelBoxes const&, unsigned short, bool)
SwDoc::InsertDrawLabel(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, unsigned short, rtl::OUString const&, SdrObject&)
SwDoc::InsertGlossary(SwTextBlocks&, rtl::OUString const&, SwPaM&, SwCursorShell*)
SwDoc::InsertLabel(SwLabelType, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, unsigned short, o3tl::strong_int<int, Tag_SwNodeOffset>, rtl::OUString const&, bool)
SwDoc::InsertRow(SwCursor const&, unsigned short, bool)
SwDoc::InsertTOXType(SwTOXType const&)
SwDoc::InsertTableOf(SwPaM const&, SwTOXBase const&, SfxItemSet const*, bool, SwRootFrame const*)
SwDoc::InsertTableOf(o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, SwTOXBase const&, SfxItemSet const*)
SwDoc::InvalidateAutoCompleteFlag()
SwDoc::InvalidateNumRules()
SwDoc::IsFirstOfNumRuleAtPos(SwPosition const&, SwRootFrame const&)
SwDoc::IsIdxInTable(SwNodeIndex const&)
SwDoc::IsInHeaderFooter(SwNodeIndex const&) const
SwDoc::IsInsRegionAvailable(SwPaM const&, SwNode const**)
SwDoc::IsInsTableAlignNum() const
SwDoc::IsInsTableChangeNumFormat() const
SwDoc::IsInsTableFormatNum() const
SwDoc::IsNameInArray(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, rtl::OUString const&)
SwDoc::IsNumberFormat(rtl::OUString const&, unsigned int&, double&)
SwDoc::IsSplitVerticalByDefault() const
SwDoc::IsUsed(SwTableAutoFormat const&) const
SwDoc::IsUsed(sw::BroadcastingModify const&) const
SwDoc::IsVisitedURL(rtl::OUString const&)
SwDoc::MakeCharFormat_(rtl::OUString const&, SwFormat*, bool, bool)
SwDoc::MakeCondTextFormatColl(rtl::OUString const&, SwTextFormatColl*, bool)
SwDoc::MakeDrawFrameFormat(rtl::OUString const&, SwFrameFormat*)
SwDoc::MakeFlyAndMove(SwPaM const&, SfxItemSet const&, SwSelBoxes const*, SwFrameFormat*)
SwDoc::MakeFlyFrameFormat(rtl::OUString const&, SwFrameFormat*)
SwDoc::MakeFlySection_(SwPosition const&, SwContentNode const&, RndStdIds, SfxItemSet const*, SwFrameFormat*)
SwDoc::MakeFrameFormat(rtl::OUString const&, SwFrameFormat*, bool, bool)
SwDoc::MakeFrameFormat_(rtl::OUString const&, SwFormat*, bool, bool)
SwDoc::MakeGrfFormatColl(rtl::OUString const&, SwGrfFormatColl*)
SwDoc::MakeSectionFormat()
SwDoc::MakeTableBoxFormat()
SwDoc::MakeTableFrameFormat(rtl::OUString const&, SwFrameFormat*)
SwDoc::MakeTableLineFormat()
SwDoc::MakeTextFormatColl_(rtl::OUString const&, SwFormat*, bool, bool)
SwDoc::MakeUniqueNumRules(SwPaM const&)
SwDoc::MarkListLevel(rtl::OUString const&, int, bool)
SwDoc::MergeDoc(SwDoc const&)
SwDoc::MergeTable(SwPaM&)
SwDoc::MergeTable(SwPosition const&, bool, unsigned short)
SwDoc::MoveLeftMargin(SwPaM const&, bool, bool, SwRootFrame const*)
SwDoc::MoveOutlinePara(SwPaM const&, long)
SwDoc::MoveParagraph(SwPaM&, o3tl::strong_int<int, Tag_SwNodeOffset>, bool)
SwDoc::MoveParagraphImpl(SwPaM&, o3tl::strong_int<int, Tag_SwNodeOffset>, bool, SwRootFrame const*)
SwDoc::NoNum(SwPaM const&)
SwDoc::NumOrNoNum(SwNodeIndex const&, bool)
SwDoc::NumUpDown(SwPaM const&, bool, SwRootFrame const*)
SwDoc::OutlineUpDown(SwPaM const&, short, SwRootFrame const*)
SwDoc::PreDelPageDesc(SwPageDesc const*)
SwDoc::PrtOLENotify(bool)
SwDoc::ReadLayoutCache(SvStream&)
SwDoc::RemoveAllFormatLanguageDependencies()
SwDoc::RenameFormat(SwFormat&, rtl::OUString const&, bool)
SwDoc::RenameNumRule(rtl::OUString const&, rtl::OUString const&, bool)
SwDoc::ReplaceNumRule(SwPosition const&, rtl::OUString const&, rtl::OUString const&)
SwDoc::ReplaceStyles(SwDoc const&, bool)
SwDoc::ReplaceUsedDBs(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, rtl::OUString const&, rtl::OUString const&)
SwDoc::ReplaceUserDefinedDocumentProperties(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&)
SwDoc::ResetAttrAtFormat(unsigned short, SwFormat&)
SwDoc::ResetAttrs(SwPaM const&, bool, o3tl::sorted_vector<unsigned short, std::less<unsigned short>, o3tl::find_unique, true> const&, bool, SwRootFrame const*)
SwDoc::RestoreInvisibleContent()
SwDoc::RstTextAttrs(SwPaM const&, bool, bool, SwRootFrame const*)
SwDoc::SearchNumRule(SwPosition const&, bool, bool, bool, int, rtl::OUString&, SwRootFrame const*, bool)
SwDoc::SelectNextRubyChars(SwPaM&, SwRubyListEntry&)
SwDoc::SetAllUniqueFlyNames()
SwDoc::SetAttr(SfxItemSet const&, SwFormat&)
SwDoc::SetAutoCorrExceptWord(std::unique_ptr<SwAutoCorrExceptWord, std::default_delete<SwAutoCorrExceptWord> >)
SwDoc::SetBoxAlign(SwCursor const&, unsigned short)
SwDoc::SetBoxAttr(SwCursor const&, SfxPoolItem const&)
SwDoc::SetCalcFieldValueHdl(Outliner*)
SwDoc::SetColRowWidthHeight(SwTableBox&, TableChgWidthHeightType, long, long)
SwDoc::SetCounted(SwPaM const&, bool, SwRootFrame const*)
SwDoc::SetCurFootnote(SwPaM const&, rtl::OUString const&, bool)
SwDoc::SetDefault(SfxItemSet const&)
SwDoc::SetDefault(SfxPoolItem const&)
SwDoc::SetDefaultTOXBase(SwTOXBase const&)
SwDoc::SetDocPattern(rtl::OUString const&)
SwDoc::SetFlyFrameAnchor(SwFrameFormat&, SfxItemSet&, bool)
SwDoc::SetFlyFrameDescription(SwFlyFrameFormat&, rtl::OUString const&)
SwDoc::SetFlyFrameTitle(SwFlyFrameFormat&, rtl::OUString const&)
SwDoc::SetFlyName(SwFlyFrameFormat&, rtl::OUString const&)
SwDoc::SetFormatItemByAutoFormat(SwPaM const&, SfxItemSet const&)
SwDoc::SetFrameFormatToFly(SwFrameFormat&, SwFrameFormat&, SfxItemSet*, bool)
SwDoc::SetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>, unsigned short)
SwDoc::SetMissingDictionaries(bool)
SwDoc::SetNodeNumStart(SwPosition const&, unsigned short)
SwDoc::SetNumRule(SwPaM const&, SwNumRule const&, bool, SwRootFrame const*, rtl::OUString const&, bool, bool)
SwDoc::SetNumRuleStart(SwPosition const&, bool)
SwDoc::SetOLEObjModified()
SwDoc::SetPreviewPrtData(SwPagePreviewPrtData const*)
SwDoc::SetRowBackground(SwCursor const&, SvxBrushItem const&)
SwDoc::SetRowHeight(SwCursor const&, SwFormatFrameSize const&)
SwDoc::SetRowNotTracked(SwCursor const&, SvxPrintItem const&, bool)
SwDoc::SetRowSplit(SwCursor const&, SwFormatRowSplit const&)
SwDoc::SetRowsToRepeat(SwTable&, unsigned short)
SwDoc::SetRubyList(SwPaM const&, std::vector<std::unique_ptr<SwRubyListEntry, std::default_delete<SwRubyListEntry> >, std::allocator<std::unique_ptr<SwRubyListEntry, std::default_delete<SwRubyListEntry> > > > const&)
SwDoc::SetSplitVerticalByDefault(bool)
SwDoc::SetTOXBaseName(SwTOXBase const&, rtl::OUString const&)
SwDoc::SetTabBorders(SwCursor const&, SfxItemSet const&)
SwDoc::SetTabCols(SwTabCols const&, bool, SwCellFrame const*)
SwDoc::SetTabCols(SwTable&, SwTabCols const&, SwTabCols const&, SwTableBox const*, bool)
SwDoc::SetTabLineStyle(SwCursor const&, Color const*, bool, editeng::SvxBorderLine const*)
SwDoc::SetTabRows(SwTabCols const&, bool, SwCellFrame const*)
SwDoc::SetTableAutoFormat(SwSelBoxes const&, SwTableAutoFormat const&, bool, bool)
SwDoc::SetTableBoxFormulaAttrs(SwTableBox&, SfxItemSet const&)
SwDoc::SetTableName(SwFrameFormat&, rtl::OUString const&)
SwDoc::SetTextFormatCollByAutoFormat(SwPosition const&, unsigned short, SfxItemSet const*)
SwDoc::SortTable(SwSelBoxes const&, SwSortOptions const&)
SwDoc::SortText(SwPaM const&, SwSortOptions const&)
SwDoc::Spell(SwPaM&, com::sun::star::uno::Reference<com::sun::star::linguistic2::XSpellChecker1> const&, unsigned short*, unsigned short*, bool, SwRootFrame const*, SwConversionArgs*) const
SwDoc::SpellItAgainSam(bool, bool, bool)
SwDoc::SplitDoc(unsigned short, rtl::OUString const&, bool, SwTextFormatColl const*, int)
SwDoc::SplitTable(SwPosition const&, SplitTable_HeadlineOption, bool)
SwDoc::SplitTable(SwSelBoxes const&, bool, unsigned short, bool)
SwDoc::StartGrammarChecking(bool)
SwDoc::StopNumRuleAnimations(OutputDevice const*)
SwDoc::Summary(SwDoc&, unsigned char, unsigned char, bool)
SwDoc::SwDoc()
SwDoc::TableToText(SwTableNode const*, char16_t)
SwDoc::TextToTable(SwInsertTableOptions const&, SwPaM const&, char16_t, short, SwTableAutoFormat const*)
SwDoc::TextToTable(std::vector<std::vector<SwNodeRange, std::allocator<SwNodeRange> >, std::allocator<std::vector<SwNodeRange, std::allocator<SwNodeRange> > > > const&)
SwDoc::UnGroupSelection(SdrView&)
SwDoc::UnProtectCells(SwSelBoxes const&)
SwDoc::UnProtectCells(rtl::OUString const&)
SwDoc::UnProtectTableCells(SwTable&)
SwDoc::UnProtectTables(SwPaM const&)
SwDoc::Unchain(SwFrameFormat&)
SwDoc::UpdateCharts(rtl::OUString const&) const
SwDoc::UpdateCharts_(SwTable const&, SwViewShell const&) const
SwDoc::UpdateNumRule()
SwDoc::UpdatePagesForPrintingWithPostItData(SwRenderData&, SwPrintUIOptions const&, int)
SwDoc::UpdateParRsid(SwTextNode*, unsigned int)
SwDoc::UpdateRsid(SwPaM const&, int)
SwDoc::UpdateSection(unsigned long, SwSectionData&, SfxItemSet const*, bool)
SwDoc::WriteLayoutCache(SvStream&)
SwDoc::disposeXForms()
SwDoc::getIDocumentChartDataProviderAccess()
SwDoc::getIDocumentChartDataProviderAccess() const
SwDoc::getIDocumentContentOperations() const
SwDoc::getIDocumentDeviceAccess() const
SwDoc::getIDocumentExternalData() const
SwDoc::getIDocumentFieldsAccess() const
SwDoc::getIDocumentLinksAdministration() const
SwDoc::getIDocumentListItems()
SwDoc::getIDocumentListItems() const
SwDoc::getIDocumentListsAccess() const
SwDoc::getIDocumentOutlineNodes()
SwDoc::getIDocumentOutlineNodes() const
SwDoc::getIDocumentRedlineAccess() const
SwDoc::getIDocumentState() const
SwDoc::getIDocumentStatistics() const
SwDoc::getIDocumentStylePoolAccess() const
SwDoc::getIDocumentTimerAccess()
SwDoc::getIDocumentTimerAccess() const
SwDoc::getReferenceCount() const
SwDoc::getRsid() const
SwDoc::getRsidRoot() const
SwDoc::initXForms(bool)
SwDoc::isXForms() const
SwDoc::setRsid(unsigned int)
SwDoc::setRsidRoot(unsigned int)
SwDoc::~SwDoc()
SwDocDisplayItem::Clone(SfxItemPool*) const
SwDocDisplayItem::FillViewOptions(SwViewOption&) const
SwDocDisplayItem::SwDocDisplayItem()
SwDocDisplayItem::SwDocDisplayItem(SwViewOption const&)
SwDocFac::GetDoc()
SwDocFac::SwDocFac(SwDoc*)
SwDocFac::~SwDocFac()
SwDocInfoField::Copy() const
SwDocInfoField::ExpandImpl(SwRootFrame const*) const
SwDocInfoField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDocInfoField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDocInfoField::SetSubType(unsigned short)
SwDocInfoField::SwDocInfoField(SwDocInfoFieldType*, unsigned short, rtl::OUString const&, rtl::OUString const&, unsigned int)
SwDocInfoField::SwDocInfoField(SwDocInfoFieldType*, unsigned short, rtl::OUString const&, unsigned int)
SwDocShell::CallAutomationDocumentEventSinks(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
SwDocShell::CancelTransfers()
SwDocShell::DdeCreateLinkSource(rtl::OUString const&)
SwDocShell::DoFlushDocInfo()
SwDocShell::ExecStyleSheet(SfxRequest&)
SwDocShell::Execute(SfxRequest&)
SwDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
SwDocShell::GetController()
SwDocShell::GetDocColors()
SwDocShell::GetDocumentPrinter()
SwDocShell::GetDocumentRefDev()
SwDocShell::GetEventNames()
SwDocShell::GetHiddenInformationState(HiddenInformation)
SwDocShell::GetIPClient(svt::EmbeddedObjectRef const&)
SwDocShell::GetInterface() const
SwDocShell::GetProtectionHash(com::sun::star::uno::Sequence<signed char>&)
SwDocShell::GetState(SfxItemSet&)
SwDocShell::GetStaticInterface()
SwDocShell::GetStyleManager()
SwDocShell::GetStyleSheetPool()
SwDocShell::GetVisArea(unsigned short) const
SwDocShell::GetXmlIdRegistry() const
SwDocShell::HasChangeRecordProtection() const
SwDocShell::InitInterface_Impl()
SwDocShell::InvalidateModel()
SwDocShell::IsChangeRecording() const
SwDocShell::LoadStyles(SfxObjectShell&)
SwDocShell::LoadingFinished()
SwDocShell::LockAllViews()
SwDocShell::LockAllViewsGuard_Impl::LockAllViewsGuard_Impl(SwViewShell*)
SwDocShell::LockAllViewsGuard_Impl::~LockAllViewsGuard_Impl()
SwDocShell::OnDocumentPrinterChanged(Printer*)
SwDocShell::ReactivateModel()
SwDocShell::ReconnectDdeLink(SfxObjectShell&)
SwDocShell::RegisterInterface(SfxModule const*)
SwDocShell::ReloadFromHtml(rtl::OUString const&, SwSrcView*)
SwDocShell::Save()
SwDocShell::SetChangeRecording(bool, bool)
SwDocShell::SetModified(bool)
SwDocShell::SetProtectionPassword(rtl::OUString const&)
SwDocShell::SetVisArea(tools::Rectangle const&)
SwDocShell::StartConvertFrom(SfxMedium&, std::unique_ptr<SwReader, o3tl::default_delete<SwReader> >&, SwCursorShell const*, SwPaM*)
SwDocShell::StateStyleSheet(SfxItemSet&, SwWrtShell*)
SwDocShell::SwDocShell(SfxModelFlags)
SwDocShell::SwDocShell(SfxObjectCreateMode)
SwDocShell::SwDocShell(SwDoc&, SfxObjectCreateMode)
SwDocShell::ToggleLayoutMode(SwView*)
SwDocShell::UpdateChildWindows()
SwDocShell::UpdateFontList()
SwDocShell::UpdateLinks()
SwDocShell::getIDocumentChartDataProviderAccess()
SwDocShell::getIDocumentDeviceAccess()
SwDocShell::runAccessibilityCheck()
SwDocShell::~SwDocShell()
SwDocStat::Reset()
SwDocStat::SwDocStat()
SwDocStatField::ChangeExpansion(SwFrame const*)
SwDocStatField::Copy() const
SwDocStatField::ExpandImpl(SwRootFrame const*) const
SwDocStatField::GetSubType() const
SwDocStatField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDocStatField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDocStatField::SetSubType(unsigned short)
SwDocStatField::SwDocStatField(SwDocStatFieldType*, unsigned short, unsigned int)
SwDocStyleSheet::GetDescription(MapUnit)
SwDocStyleSheet::GetFollow() const
SwDocStyleSheet::GetFrameFormat()
SwDocStyleSheet::GetGrabBagItem(com::sun::star::uno::Any&) const
SwDocStyleSheet::GetHelpId(rtl::OUString&)
SwDocStyleSheet::GetItemSetForPreview()
SwDocStyleSheet::GetLink() const
SwDocStyleSheet::GetNumRule()
SwDocStyleSheet::GetPageDesc()
SwDocStyleSheet::GetParent() const
SwDocStyleSheet::GetTableFormat()
SwDocStyleSheet::GetUsedBy()
SwDocStyleSheet::HasClearParentSupport() const
SwDocStyleSheet::HasFollowSupport() const
SwDocStyleSheet::HasParentSupport() const
SwDocStyleSheet::IsHidden() const
SwDocStyleSheet::IsUsed() const
SwDocStyleSheet::PresetNameAndFamily(SfxStyleFamily, rtl::OUString const&)
SwDocStyleSheet::Reset()
SwDocStyleSheet::SetFollow(rtl::OUString const&)
SwDocStyleSheet::SetGrabBagItem(com::sun::star::uno::Any const&)
SwDocStyleSheet::SetHelpId(rtl::OUString const&, unsigned long)
SwDocStyleSheet::SetHidden(bool)
SwDocStyleSheet::SetLink(rtl::OUString const&)
SwDocStyleSheet::SetName(rtl::OUString const&, bool)
SwDocStyleSheet::SetNumRule(SwNumRule const&)
SwDocStyleSheet::SetParent(rtl::OUString const&)
SwDocStyleSheet::SetPhysical(bool)
SwDocStyleSheet::SwDocStyleSheet(SwDoc&, SwDocStyleSheetPool&)
SwDocStyleSheet::SwDocStyleSheet(SwDocStyleSheet const&)
SwDocStyleSheet::~SwDocStyleSheet()
SwDrawFrameFormat::DelFrames()
SwDrawFrameFormat::GetDescription() const
SwDrawFrameFormat::GetLayoutDir() const
SwDrawFrameFormat::GetPositionLayoutDir() const
SwDrawFrameFormat::MakeFrames()
SwDrawFrameFormat::MakeGraphic(ImageMap*, unsigned int, std::optional<Size> const&)
SwDrawFrameFormat::SetLayoutDir(SwFrameFormat::tLayoutDir)
SwDrawFrameFormat::SetPositionLayoutDir(short)
SwDrawFrameFormat::~SwDrawFrameFormat()
SwDrawModeGrf::Clone(SfxItemPool*) const
SwDrawModeGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwDrawModeGrf::GetValueCount() const
SwDrawModeGrf::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwDrawModeGrf::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwDrawTextInfo::Shift(o3tl::strong_int<short, FractionTag<10> >)
SwDropDownField::Copy() const
SwDropDownField::ExpandImpl(SwRootFrame const*) const
SwDropDownField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDropDownField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDropDownField::SetItems(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwDropDownField::SetPar2(rtl::OUString const&)
SwDropDownField::SwDropDownField(SwDropDownField const&)
SwDropDownField::SwDropDownField(SwFieldType*)
SwDropDownField::~SwDropDownField()
SwEditShell::AcceptRedlinesInSelection()
SwEditShell::ApplyAdvancedClassification(std::vector<svx::ClassificationResult, std::allocator<svx::ClassificationResult> > const&)
SwEditShell::ApplyAutoMark()
SwEditShell::ApplyChangedSentence(std::vector<svx::SpellPortion, std::allocator<svx::SpellPortion> > const&, bool)
SwEditShell::ApplyParagraphClassification(std::vector<svx::ClassificationResult, std::allocator<svx::ClassificationResult> >)
SwEditShell::ApplyViewOptions(SwViewOption const&)
SwEditShell::AutoCorrect(SvxAutoCorrect&, bool, char16_t)
SwEditShell::AutoFormat(SvxSwAutoFormatFlags const*)
SwEditShell::AutoFormatBySplitNode()
SwEditShell::Calculate()
SwEditShell::CanMergeTable(bool, bool*) const
SwEditShell::CanSpecialInsert() const
SwEditShell::ChangeIndentOfAllListLevels(int)
SwEditShell::ChgDBData(SwDBData const&)
SwEditShell::ChgNumRuleFormats(SwNumRule const&)
SwEditShell::ClassifyDocPerHighestParagraphClass()
SwEditShell::ClearAutomaticContour()
SwEditShell::CollectAdvancedClassification()
SwEditShell::CollectParagraphClassification()
SwEditShell::CompareDoc(SwDoc const&)
SwEditShell::ConvertFieldsToText()
SwEditShell::Copy(SwEditShell&)
SwEditShell::CopySelToDoc(SwDoc&)
SwEditShell::CreateExtTextInput(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwEditShell::CursorsLocked() const
SwEditShell::DelAllUndoObj()
SwEditShell::DelINetAttrWithText()
SwEditShell::DelNumRules()
SwEditShell::DeleteExtTextInput(bool)
SwEditShell::DeleteGlobalDocContent(SwGlblDocContents const&, unsigned long)
SwEditShell::DeleteTOXMark(SwTOXMark const*)
SwEditShell::DoGroupUndo(bool)
SwEditShell::DoSpecialInsert()
SwEditShell::DoesGroupUndo() const
SwEditShell::DontExpandFormat()
SwEditShell::FieldToText(SwFieldType const*)
SwEditShell::FillByEx(SwCharFormat*)
SwEditShell::FillByEx(SwTextFormatColl*)
SwEditShell::FindFlyByName(rtl::OUString const&) const
SwEditShell::FindRedlineOfData(SwRedlineData const&) const
SwEditShell::GCAttr()
SwEditShell::GetAnySection(bool, Point const*)
SwEditShell::GetAutoCompleteWords()
SwEditShell::GetChunkForAutoText()
SwEditShell::GetCntType() const
SwEditShell::GetCorrection(Point const*, SwRect&)
SwEditShell::GetCurCharFormat() const
SwEditShell::GetCurTOXMarks(std::vector<SwTOXMark*, std::allocator<SwTOXMark*> >&) const
SwEditShell::GetCurWord() const
SwEditShell::GetCurrRedline() const
SwEditShell::GetCurrentOutlineLevels(unsigned char&, unsigned char&)
SwEditShell::GetCurrentParaOutlineLevel() const
SwEditShell::GetDfltTextFormatColl() const
SwEditShell::GetFirstRedoInfo(rtl::OUString*, SwUndoId*, SwView const*) const
SwEditShell::GetFormatFromPool(unsigned short)
SwEditShell::GetGlobalDocContent(SwGlblDocContents&) const
SwEditShell::GetGrammarCorrection(com::sun::star::linguistic2::ProofreadingResult&, int&, int&, com::sun::star::uno::Sequence<rtl::OUString>&, Point const*, SwRect&)
SwEditShell::GetGraphic(bool) const
SwEditShell::GetGraphicAttr(GraphicAttr&) const
SwEditShell::GetGraphicObj() const
SwEditShell::GetGraphicPolygon() const
SwEditShell::GetGraphicType() const
SwEditShell::GetGrfNms(rtl::OUString*, rtl::OUString*, SwFlyFrameFormat const*) const
SwEditShell::GetIMapInventor() const
SwEditShell::GetINetAttrs(std::vector<SwGetINetAttr, std::allocator<SwGetINetAttr> >&)
SwEditShell::GetItemWithPaM(unsigned short)
SwEditShell::GetNodeNumStart(SwPaM*) const
SwEditShell::GetNumLevel() const
SwEditShell::GetNumRuleAtCurrentSelection() const
SwEditShell::GetPaMAttr(SwPaM*, SfxItemSet&, bool) const
SwEditShell::GetPaMParAttr(SwPaM*, SfxItemSet&) const
SwEditShell::GetPaMTextFormatColl(SwPaM*) const
SwEditShell::GetPrevAutoCorrWord(SvxAutoCorrect&)
SwEditShell::GetRedline(unsigned long) const
SwEditShell::GetRefMark(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwEditShell::GetRefMarks(std::vector<rtl::OUString, std::allocator<rtl::OUString> >*) const
SwEditShell::GetRepeatInfo(rtl::OUString*) const
SwEditShell::GetScalingOfSelectedText() const
SwEditShell::GetTableBoxFormulaAttrs(SfxItemSet&) const
SwEditShell::GetTableBoxText() const
SwEditShell::GetTableChgMode() const
SwEditShell::GetTableFrameFormat(unsigned long, bool) const
SwEditShell::GetTableFrameFormatCount(bool) const
SwEditShell::GetWatermark() const
SwEditShell::GotoGlobalDocContent(SwGlblDocContent const&)
SwEditShell::HandleCorrectionError(rtl::OUString const&, SwPosition, int, int, Point const*, SwRect&)
SwEditShell::HandleUndoRedoContext(sw::UndoRedoContext&)
SwEditShell::HasBullet() const
SwEditShell::HasConvIter()
SwEditShell::HasHyphIter()
SwEditShell::HasLastSentenceGotGrammarChecked()
SwEditShell::HasNumber() const
SwEditShell::HasOLEObj(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwEditShell::HasOtherCnt() const
SwEditShell::HyphContinue(unsigned short*, unsigned short*)
SwEditShell::HyphEnd()
SwEditShell::HyphIgnore()
SwEditShell::HyphStart(SwDocPositions, SwDocPositions)
SwEditShell::IgnoreGrammarErrorAt(SwPaM&)
SwEditShell::Insert(SwTOXMark const&)
SwEditShell::Insert(char16_t, bool)
SwEditShell::Insert2(SwField const&, bool)
SwEditShell::InsertDDETable(SwInsertTableOptions const&, SwDDEFieldType*, unsigned short, unsigned short)
SwEditShell::InsertGlobalDocContent(SwGlblDocContent const&)
SwEditShell::InsertGlobalDocContent(SwGlblDocContent const&, SwSectionData&)
SwEditShell::InsertGlobalDocContent(SwGlblDocContent const&, SwTOXBase const&)
SwEditShell::InsertGlossary(SwTextBlocks&, rtl::OUString const&)
SwEditShell::InsertSoftHyph(int)
SwEditShell::InsertTOXType(SwTOXType const&)
SwEditShell::InsertTableOf(SwTOXBase const&, SfxItemSet const*)
SwEditShell::InsertURL(SwFormatINetFormat const&, rtl::OUString const&, bool)
SwEditShell::IsAnyDatabaseFieldInDoc() const
SwEditShell::IsAnySectionInDoc() const
SwEditShell::IsCursorInParagraphMetadataField() const
SwEditShell::IsExpFieldsLocked() const
SwEditShell::IsFieldDataSourceAvailable(rtl::OUString&) const
SwEditShell::IsFirstOfNumRuleAtCursorPos() const
SwEditShell::IsGlblDocSaveLinks() const
SwEditShell::IsGlobalDoc() const
SwEditShell::IsLinkedGrfSwapOut() const
SwEditShell::IsMoveLeftMargin(bool, bool) const
SwEditShell::IsNoNum(bool) const
SwEditShell::IsNumRuleStart(SwPaM*) const
SwEditShell::IsOutlineCopyable(unsigned long) const
SwEditShell::IsOutlineMovable(unsigned long) const
SwEditShell::IsProtectedOutlinePara() const
SwEditShell::IsRedlineOn() const
SwEditShell::IsTOXBaseReadonly(SwTOXBase const&)
SwEditShell::IsTableBoxTextFormat() const
SwEditShell::IsTextToTableAvailable() const
SwEditShell::IsUpdateTOX() const
SwEditShell::MakeCharFormat(rtl::OUString const&)
SwEditShell::MakeGlossary(SwTextBlocks&, rtl::OUString const&, rtl::OUString const&, bool, rtl::OUString const*)
SwEditShell::MergeTable(bool)
SwEditShell::MoveContinuationPosToEndOfCheckedSentence()
SwEditShell::MoveGlobalDocContent(SwGlblDocContents const&, unsigned long, unsigned long, unsigned long)
SwEditShell::MoveLeftMargin(bool, bool)
SwEditShell::MoveNumParas(bool, bool)
SwEditShell::MoveOutlinePara(long)
SwEditShell::NoNum()
SwEditShell::NumUpDown(bool)
SwEditShell::OutlineUpDown(short)
SwEditShell::Overwrite(rtl::OUString const&)
SwEditShell::PutSpellingToSentenceStart()
SwEditShell::ReRead(rtl::OUString const&, rtl::OUString const&, Graphic const*)
SwEditShell::RejectRedlinesInSelection()
SwEditShell::RemoveFieldType(SwFieldIds, rtl::OUString const&)
SwEditShell::RemoveFieldType(unsigned long)
SwEditShell::RemoveParagraphMetadataFieldAtCursor()
SwEditShell::Repeat(unsigned short)
SwEditShell::Replace(rtl::OUString const&, bool)
SwEditShell::ReplaceDropText(rtl::OUString const&, SwPaM*)
SwEditShell::ReplaceNumRule(rtl::OUString const&, rtl::OUString const&)
SwEditShell::ResetAttr(o3tl::sorted_vector<unsigned short, std::less<unsigned short>, o3tl::find_unique, true> const&, SwPaM*)
SwEditShell::RestoreMetadataFieldsAndValidateParagraphSignatures()
SwEditShell::SaveGlossaryDoc(SwTextBlocks&, rtl::OUString const&, rtl::OUString const&, bool, bool)
SwEditShell::SearchNumRule(bool, rtl::OUString&)
SwEditShell::SelectionHasBullet() const
SwEditShell::SelectionHasNumber() const
SwEditShell::SetChartName(rtl::OUString const&)
SwEditShell::SetClassification(rtl::OUString const&, SfxClassificationPolicyType)
SwEditShell::SetCurNumRule(SwNumRule const&, bool, rtl::OUString const&, bool)
SwEditShell::SetExtTextInputData(CommandExtTextInputData const&)
SwEditShell::SetGlblDocSaveLinks(bool)
SwEditShell::SetGraphicPolygon(tools::PolyPolygon const*)
SwEditShell::SetIndent(short, SwPosition const&)
SwEditShell::SetLabelDoc(bool)
SwEditShell::SetLinguRange(SwDocPositions, SwDocPositions)
SwEditShell::SetNewDoc()
SwEditShell::SetNodeNumStart(unsigned short)
SwEditShell::SetNumRuleStart(bool, SwPaM*)
SwEditShell::SetNumberingRestart()
SwEditShell::SetRedlineComment(rtl::OUString const&)
SwEditShell::SetTOIAutoMarkURL(rtl::OUString const&)
SwEditShell::SetTOXBaseReadonly(SwTOXBase const&, bool)
SwEditShell::SetTableName(SwFrameFormat&, rtl::OUString const&)
SwEditShell::SetUpdateTOX(bool)
SwEditShell::SignParagraph()
SwEditShell::SpellContinue(unsigned short*, unsigned short*, SwConversionArgs const*)
SwEditShell::SpellEnd(SwConversionArgs const*, bool)
SwEditShell::SpellSentence(std::vector<svx::SpellPortion, std::allocator<svx::SpellPortion> >&, bool)
SwEditShell::SpellStart(SwDocPositions, SwDocPositions, SwDocPositions, SwConversionArgs*)
SwEditShell::SwEditShell(SwDoc&, vcl::Window*, SwViewOption const*)
SwEditShell::SwEditShell(SwEditShell&, vcl::Window*)
SwEditShell::TableToText(char16_t)
SwEditShell::TextToTable(SwInsertTableOptions const&, char16_t, SwTableAutoFormat const*)
SwEditShell::TransliterateText(TransliterationFlags)
SwEditShell::UpdateCharts(rtl::OUString const&)
SwEditShell::UpdateDocStat()
SwEditShell::UpdateTable()
SwEditShell::UpdateTableOf(SwTOXBase const&, SfxItemSet const*)
SwEditShell::ValidateAllParagraphSignatures(bool)
SwEditShell::ValidateCurrentParagraphSignatures(bool)
SwEditShell::ValidateParagraphSignatures(SwTextNode*, bool)
SwEditShell::~SwEditShell()
SwEditWin::AcceptDrop(AcceptDropEvent const&)
SwEditWin::ChangeDrawing(unsigned char)
SwEditWin::ChangeFly(unsigned char, bool)
SwEditWin::CleanupDropUserMarker()
SwEditWin::ClipLongToolTip(rtl::OUString const&)
SwEditWin::Command(CommandEvent const&)
SwEditWin::CreateAccessible()
SwEditWin::DataChanged(DataChangedEvent const&)
SwEditWin::DeleteSurroundingText(Selection const&)
SwEditWin::DragFinished()
SwEditWin::DropCleanup()
SwEditWin::EnterDrawMode(MouseEvent const&, Point const&)
SwEditWin::EnterDrawTextMode(Point const&)
SwEditWin::ExecuteDrop(ExecuteDropEvent const&)
SwEditWin::FinitStaticData()
SwEditWin::FlushInBuffer()
SwEditWin::GetDropDestination(Point const&, SdrObject**)
SwEditWin::GetFocus()
SwEditWin::GetFrameControlsManager()
SwEditWin::GetSurroundingText() const
SwEditWin::GetSurroundingTextSelection() const
SwEditWin::GetUITestFactory() const
SwEditWin::InitStaticData()
SwEditWin::InsFrame(unsigned short)
SwEditWin::IsDrawSelMode() const
SwEditWin::IsInHeaderFooter(Point const&, FrameControlType&) const
SwEditWin::IsInputSequenceCheckingRequired(rtl::OUString const&, SwPaM const&)
SwEditWin::IsOverHeaderFooterFly(Point const&, FrameControlType&, bool&, bool&) const
SwEditWin::JustifyAreaTimer()
SwEditWin::LeaveArea(Point const&)
SwEditWin::LogicInvalidate(tools::Rectangle const*)
SwEditWin::LogicMouseButtonDown(MouseEvent const&)
SwEditWin::LogicMouseButtonUp(MouseEvent const&)
SwEditWin::LogicMouseMove(MouseEvent const&)
SwEditWin::LoseFocus()
SwEditWin::MouseButtonDown(MouseEvent const&)
SwEditWin::MouseButtonUp(MouseEvent const&)
SwEditWin::MouseMove(MouseEvent const&)
SwEditWin::MoveCursor(SwWrtShell&, Point const&, bool, bool)
SwEditWin::Paint(OutputDevice&, tools::Rectangle const&)
SwEditWin::PrePaint(OutputDevice&)
SwEditWin::RequestHelp(HelpEvent const&)
SwEditWin::RstMBDownFlags()
SwEditWin::RulerColumnDrag(MouseEvent const&, bool)
SwEditWin::RulerMarginDrag(MouseEvent const&, bool)
SwEditWin::SelectMenuPosition(SwWrtShell&, Point const&)
SwEditWin::SetApplyTemplate(SwApplyTemplate const&)
SwEditWin::SetChainMode(bool)
SwEditWin::SetCursorTwipPosition(Point const&, bool, bool)
SwEditWin::SetGraphicTwipPosition(bool, Point const&)
SwEditWin::SetUseInputLanguage(bool)
SwEditWin::ShowAutoCorrectQuickHelp(rtl::OUString const&, SvxAutoCorrect&)
SwEditWin::ShowAutoText(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
SwEditWin::StartDDTimer()
SwEditWin::StartDrag(signed char, Point const&)
SwEditWin::StartExecuteDrag()
SwEditWin::StdDrawMode(SdrObjKind, bool)
SwEditWin::StopDDTimer(SwWrtShell*, Point const&)
SwEditWin::StopInsFrame()
SwEditWin::StopQuickHelp()
SwEditWin::SwEditWin(vcl::Window*, SwView&)
SwEditWin::ToggleOutlineContentVisibility(unsigned long, bool)
SwEditWin::UpdatePointer(Point const&, unsigned short)
SwEditWin::changeMousePointer(Point const&)
SwEditWin::dispose()
SwEditWin::~SwEditWin()
SwElemItem::Clone(SfxItemPool*) const
SwElemItem::FillViewOptions(SwViewOption&) const
SwElemItem::SwElemItem()
SwElemItem::SwElemItem(SwViewOption const&)
SwEndNoteInfo::DependsOn(SwPageDesc const*) const
SwEndNoteInfo::GetCurrentCharFormat(bool) const
SwEndNoteInfo::KnowsPageDesc() const
SwEndNoteInfo::SwEndNoteInfo()
SwEndNoteInfo::SwEndNoteInfo(SwEndNoteInfo const&)
SwEndNoteInfo::UpdateFormatOrAttr()
SwEndNoteInfo::operator=(SwEndNoteInfo const&)
SwEnvItem::Clone(SfxItemPool*) const
SwEnvItem::CreateDefault()
SwEnvItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwEnvItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwEnvItem::SwEnvItem()
SwEnvItem::operator=(SwEnvItem const&)
SwEnvItem::operator==(SfxPoolItem const&) const
SwExtraRedline::~SwExtraRedline()
SwFEShell::AdjustCellWidth(bool, bool)
SwFEShell::AlignAllFormulasToBaseline()
SwFEShell::AlignFormulaToBaseline(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
SwFEShell::BalanceRowHeight(bool, bool)
SwFEShell::BeginCreate(SdrObjKind, SdrInventor, Point const&)
SwFEShell::BeginDrag(Point const*, bool)
SwFEShell::BeginMark(Point const&)
SwFEShell::BreakCreate()
SwFEShell::BreakDrag()
SwFEShell::CanUnProtectCells() const
SwFEShell::Chain(SwFrameFormat&, Point const&)
SwFEShell::Chain(SwFrameFormat&, SwFrameFormat const&)
SwFEShell::Chainable(SwRect&, SwFrameFormat const&, Point const&) const
SwFEShell::CheckUnboundObjects()
SwFEShell::ChgCurPageDesc(SwPageDesc const&)
SwFEShell::CreateDefaultShape(SdrObjKind, tools::Rectangle const&, unsigned short)
SwFEShell::DeleteTable()
SwFEShell::DeleteTableSel()
SwFEShell::Drag(Point const*, bool)
SwFEShell::EndDrag()
SwFEShell::EndMark()
SwFEShell::FinishOLEObj()
SwFEShell::GetAnchorId() const
SwFEShell::GetAnchorObjDiff() const
SwFEShell::GetAutoSum(rtl::OUString&) const
SwFEShell::GetBestObject(bool, GotoObjFlags, bool, svx::ISdrObjectFilter const*)
SwFEShell::GetBoxAlign() const
SwFEShell::GetBoxBackground(std::unique_ptr<SvxBrushItem, std::default_delete<SvxBrushItem> >&) const
SwFEShell::GetBoxDirection(std::unique_ptr<SvxFrameDirectionItem, std::default_delete<SvxFrameDirectionItem> >&) const
SwFEShell::GetContentPos(Point const&, bool) const
SwFEShell::GetCurMouseColNum(Point const&) const
SwFEShell::GetCurMouseTabColNum(Point const&) const
SwFEShell::GetCurOutColNum() const
SwFEShell::GetCurTabColNum() const
SwFEShell::GetDragMode() const
SwFEShell::GetDrawObjGraphic(SotClipboardFormatId, Graphic&) const
SwFEShell::GetFlyFrameAttr(SfxItemSet&) const
SwFEShell::GetFlyFrameFormat() const
SwFEShell::GetFlyFrameFormats(FlyCntType, bool)
SwFEShell::GetFlyName() const
SwFEShell::GetFlyNum(unsigned long, FlyCntType, bool) const
SwFEShell::GetFormatFromAnyObj(Point const&) const
SwFEShell::GetFormatFromObj(Point const&, SwRect**) const
SwFEShell::GetGraphicDefaultSize() const
SwFEShell::GetGrfAtPos(Point const&, rtl::OUString&, bool&) const
SwFEShell::GetLayerId() const
SwFEShell::GetMousePageDesc(Point const&) const
SwFEShell::GetMouseTabCols(SwTabCols&, Point const&) const
SwFEShell::GetMouseTabRows(SwTabCols&, Point const&) const
SwFEShell::GetNumRuleNodeAtPos(Point const&)
SwFEShell::GetObjAbsPos() const
SwFEShell::GetObjAt(Point const&)
SwFEShell::GetObjAttr(SfxItemSet&) const
SwFEShell::GetObjCntType(Point const&, SdrObject*&) const
SwFEShell::GetObjCntType(SdrObject const&)
SwFEShell::GetObjCntTypeOfSelection() const
SwFEShell::GetObjDescription() const
SwFEShell::GetObjRect() const
SwFEShell::GetObjSize() const
SwFEShell::GetObjTitle() const
SwFEShell::GetOleRef() const
SwFEShell::GetPageNumber(Point const&) const
SwFEShell::GetPageObjs(std::vector<SwFrameFormat*, std::allocator<SwFrameFormat*> >&)
SwFEShell::GetPageOffset() const
SwFEShell::GetPasteListeners()
SwFEShell::GetRelativePagePosition(Point const&)
SwFEShell::GetRowBackground(std::unique_ptr<SvxBrushItem, std::default_delete<SvxBrushItem> >&) const
SwFEShell::GetRowSelectionFromTop() const
SwFEShell::GetRowSplit() const
SwFEShell::GetRowsToRepeat() const
SwFEShell::GetSelFrameType() const
SwFEShell::GetSelectedFrameFormat() const
SwFEShell::GetSelectedOrCurrFlyFrame() const
SwFEShell::GetShapeBackground() const
SwFEShell::GetTabBackground(std::unique_ptr<SvxBrushItem, std::default_delete<SvxBrushItem> >&) const
SwFEShell::GetTabBorders(SfxItemSet&) const
SwFEShell::GetTabCols(SwTabCols&) const
SwFEShell::GetTabRows(SwTabCols&) const
SwFEShell::GetTableAttr(SfxItemSet&) const
SwFEShell::GetVirtPageNum() const
SwFEShell::GotoFly(rtl::OUString const&, FlyCntType, bool)
SwFEShell::GroupSelection()
SwFEShell::HasBoxSelection() const
SwFEShell::HasTableAnyProtection(rtl::OUString const*, bool*)
SwFEShell::HasWholeTabSelection() const
SwFEShell::HideChainMarker()
SwFEShell::Insert(rtl::OUString const&, rtl::OUString const&, Graphic const*, SfxItemSet const*)
SwFEShell::InsertDrawObj(SdrObject&, Point const&)
SwFEShell::InsertLabel(SwLabelType, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, unsigned short, rtl::OUString const&, bool)
SwFEShell::InsertObject(svt::EmbeddedObjectRef const&, SfxItemSet*)
SwFEShell::IsAdjustCellWidthAllowed(bool) const
SwFEShell::IsAlignPossible() const
SwFEShell::IsColRightToLeft() const
SwFEShell::IsDrawCreate() const
SwFEShell::IsGroupAllowed() const
SwFEShell::IsGroupSelected()
SwFEShell::IsInsideSelectedObj(Point const&)
SwFEShell::IsLastCellInRow() const
SwFEShell::IsMouseTableRightToLeft(Point const&) const
SwFEShell::IsNumLabel(Point const&, int)
SwFEShell::IsObjSameLevelWithMarked(SdrObject const*) const
SwFEShell::IsObjSelectable(Point const&)
SwFEShell::IsObjSelected(SdrObject const&) const
SwFEShell::IsRotationOfSwGrfNodePossible() const
SwFEShell::IsSelContainsControl() const
SwFEShell::IsShapeDefaultHoriTextDirR2L() const
SwFEShell::IsTableVertical() const
SwFEShell::IsURLGrfAtPos(Point const&, rtl::OUString*, rtl::OUString*, rtl::OUString*) const
SwFEShell::IsUnGroupAllowed() const
SwFEShell::IsVerticalModeAtNdAndPos(SwTextNode const&, Point const&)
SwFEShell::MakeSelVisible()
SwFEShell::MergeTab()
SwFEShell::MirrorSelection(bool)
SwFEShell::MoveAnchor(SwMove)
SwFEShell::MoveMark(Point const&)
SwFEShell::MoveObjectIfActive(svt::EmbeddedObjectRef&, Point const&)
SwFEShell::ParkCursorInTab()
SwFEShell::Paste(Graphic const&, rtl::OUString const&)
SwFEShell::Paste(SvStream&, SwPasteSdr, Point const*)
SwFEShell::ReplaceSdrObj(rtl::OUString const&, Graphic const*)
SwFEShell::RequestObjectResize(SwRect const&, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
SwFEShell::ResetFlyFrameAttr(SfxItemSet const*)
SwFEShell::SelFlyGrabCursor()
SwFEShell::SelTableRowCol(Point const&, Point const*, bool)
SwFEShell::SelectFlyFrame(SwFlyFrame&)
SwFEShell::SelectionToBottom(bool)
SwFEShell::SelectionToHeaven()
SwFEShell::SelectionToHell()
SwFEShell::SelectionToTop(bool)
SwFEShell::SetBoxAlign(unsigned short)
SwFEShell::SetBoxDirection(SvxFrameDirectionItem const&)
SwFEShell::SetCalcFieldValueHdl(Outliner*)
SwFEShell::SetChainMarker()
SwFEShell::SetColRowWidthHeight(TableChgWidthHeightType, unsigned short)
SwFEShell::SetDragMode(SdrDragMode)
SwFEShell::SetDrawingAttr(SfxItemSet&)
SwFEShell::SetFrameFormat(SwFrameFormat*, bool, Point const*)
SwFEShell::SetLineEnds(SfxItemSet&, SdrObject const&, unsigned short)
SwFEShell::SetMouseTabCols(SwTabCols const&, bool, Point const&)
SwFEShell::SetMouseTabRows(SwTabCols const&, bool, Point const&)
SwFEShell::SetNewPageOffset(unsigned short)
SwFEShell::SetObjAttr(SfxItemSet const&)
SwFEShell::SetObjDescription(rtl::OUString const&)
SwFEShell::SetObjRect(SwRect const&)
SwFEShell::SetObjTitle(rtl::OUString const&)
SwFEShell::SetPageObjsNewPage(std::vector<SwFrameFormat*, std::allocator<SwFrameFormat*> >&)
SwFEShell::SetPageOffset(unsigned short)
SwFEShell::SetRowBackground(SvxBrushItem const&)
SwFEShell::SetRowSplit(SwFormatRowSplit const&)
SwFEShell::SetTabBackground(SvxBrushItem const&)
SwFEShell::SetTabBorders(SfxItemSet const&)
SwFEShell::SetTabCols(SwTabCols const&, bool)
SwFEShell::SetTabLineStyle(Color const*, bool, editeng::SvxBorderLine const*)
SwFEShell::SetTabRows(SwTabCols const&, bool)
SwFEShell::SetTableAttr(SfxItemSet const&)
SwFEShell::SetTableStyle(rtl::OUString const&)
SwFEShell::ShellGetFocus()
SwFEShell::ShouldObjectBeSelected(Point const&)
SwFEShell::SplitTab(bool, unsigned short, bool)
SwFEShell::StartCropImage()
SwFEShell::SwFEShell(SwDoc&, vcl::Window*, SwViewOption const*)
SwFEShell::SwFEShell(SwEditShell&, vcl::Window*)
SwFEShell::ToggleHeaderFooterEdit()
SwFEShell::UnGroupSelection()
SwFEShell::UnProtectTables()
SwFEShell::Unchain(SwFrameFormat&)
SwFEShell::UpdateTableStyleFormatting(SwTableNode*, bool, rtl::OUString const*)
SwFEShell::WhichMouseTabCol(Point const&) const
SwFEShell::WizardGetFly()
SwFEShell::makeItemSetFromFormatAnchor(SfxItemPool&, SwFormatAnchor const&)
SwFEShell::~SwFEShell()
SwField::ChangeFormat(unsigned int)
SwField::ChgTyp(SwFieldType*)
SwField::GetDescription() const
SwField::GetFormula() const
SwField::GetPar1() const
SwField::GetPar2() const
SwField::GetSubType() const
SwField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwField::SetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwField::SetPar1(rtl::OUString const&)
SwField::SetPar2(rtl::OUString const&)
SwField::SetSubType(unsigned short)
SwField::SwField(SwFieldType*, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>, bool)
SwField::dumpAsXml(_xmlTextWriter*) const
SwField::~SwField()
SwFieldMgr::GetCurTypeId() const
SwFieldMgr::GetDefaultFormat(SwFieldTypesEnum, bool, SvNumberFormatter*)
SwFieldMgr::SwFieldMgr(SwWrtShell*)
SwFieldMgr::~SwFieldMgr()
SwFieldType::CollectPostIts(std::vector<SwFormatField*, std::allocator<SwFormatField*> >&, IDocumentRedlineAccess const&, bool)
SwFieldType::FindFormatForPostItId(unsigned int) const
SwFieldType::GatherDdeTables(std::vector<SwDDETable*, std::allocator<SwDDETable*> >&) const
SwFieldType::GetFieldName_()
SwFieldType::GetName() const
SwFieldType::HasHiddenInformationNotes() const
SwFieldType::PrintHiddenPara()
SwFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwFieldType::SwFieldType(SwFieldIds)
SwFieldType::UpdateFields() const
SwFieldType::dumpAsXml(_xmlTextWriter*) const
SwFileNameField::Copy() const
SwFileNameField::ExpandImpl(SwRootFrame const*) const
SwFileNameField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwFileNameField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwFileNameField::SwFileNameField(SwFileNameFieldType*, unsigned int)
SwFilterOptions::GetValues(unsigned short, char const**, unsigned long*)
SwFilterOptions::ImplCommit()
SwFilterOptions::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwFilterOptions::SwFilterOptions(unsigned short, char const**, unsigned long*)
SwFltAnchor::Clone(SfxItemPool*) const
SwFltAnchor::SetFrameFormat(SwFrameFormat*)
SwFltAnchor::SwFltAnchor(SwFltAnchor const&)
SwFltAnchor::SwFltAnchor(SwFrameFormat*)
SwFltAnchor::operator==(SfxPoolItem const&) const
SwFltAnchor::~SwFltAnchor()
SwFltBookmark::Clone(SfxItemPool*) const
SwFltBookmark::SwFltBookmark(rtl::OUString const&, rtl::OUString const&, long, bool)
SwFltBookmark::operator==(SfxPoolItem const&) const
SwFltControlStack::SwFltControlStack(SwDoc&, unsigned long)
SwFltControlStack::~SwFltControlStack()
SwFltRDFMark::Clone(SfxItemPool*) const
SwFltRDFMark::GetAttributes() const
SwFltRDFMark::SwFltRDFMark()
SwFltRDFMark::operator==(SfxPoolItem const&) const
SwFltRedline::Clone(SfxItemPool*) const
SwFltRedline::operator==(SfxPoolItem const&) const
SwFltStackEntry::SwFltStackEntry(SwPosition const&, std::unique_ptr<SfxPoolItem, std::default_delete<SfxPoolItem> >)
SwFltStackEntry::~SwFltStackEntry()
SwFltTOX::Clone(SfxItemPool*) const
SwFltTOX::SwFltTOX(std::shared_ptr<SwTOXBase>)
SwFltTOX::operator==(SfxPoolItem const&) const
SwFlyDrawContact::CreateNewRef(SwFlyFrame*, SwFlyFrameFormat*, SwFrame const&)
SwFlyDrawContact::GetAnchoredObj(SdrObject const*) const
SwFlyDrawContact::GetAnchoredObj(SdrObject*)
SwFlyDrawContact::GetAnchoredObjs(std::vector<SwAnchoredObject*, std::allocator<SwAnchoredObject*> >&) const
SwFlyDrawContact::GetOrdNumForNewRef(SwFlyFrame const*, SwFrame const&)
SwFlyDrawContact::MoveObjToInvisibleLayer(SdrObject*)
SwFlyDrawContact::MoveObjToVisibleLayer(SdrObject*)
SwFlyDrawContact::SwClientNotify(SwModify const&, SfxHint const&)
SwFlyDrawContact::SwFlyDrawContact(SwFlyFrameFormat*, SdrModel&)
SwFlyDrawContact::~SwFlyDrawContact()
SwFlyFrame::Calc(OutputDevice*) const
SwFlyFrame::CalcContentHeight(SwBorderAttrs const*, long, long)
SwFlyFrame::CalcRel(SwFormatFrameSize const&) const
SwFlyFrame::Chain(SwFrame*)
SwFlyFrame::ChainFrames(SwFlyFrame*, SwFlyFrame*)
SwFlyFrame::CheckDirection(bool)
SwFlyFrame::ChgRelPos(Point const&)
SwFlyFrame::ChgSize(Size const&)
SwFlyFrame::Cut()
SwFlyFrame::DeleteCnt()
SwFlyFrame::DestroyImpl()
SwFlyFrame::DynCastFlyFrame()
SwFlyFrame::DynCastFlyFrame() const
SwFlyFrame::FindChainNeighbour(SwFrameFormat const&, SwFrame*)
SwFlyFrame::FindLastLower()
SwFlyFrame::FinitDrawObj()
SwFlyFrame::Format(OutputDevice*, SwBorderAttrs const*)
SwFlyFrame::FrameSizeChg(SwFormatFrameSize const&)
SwFlyFrame::GetAnchorFromPoolItem(SfxPoolItem const&)
SwFlyFrame::GetAnchoredObjects(std::vector<SwAnchoredObject*, std::allocator<SwAnchoredObject*> >&, SwFormat const&)
SwFlyFrame::GetContour(tools::PolyPolygon&, bool) const
SwFlyFrame::GetFormat()
SwFlyFrame::GetFormat() const
SwFlyFrame::GetFrameFormat()
SwFlyFrame::GetFrameFormat() const
SwFlyFrame::GetInfo(SfxPoolItem&) const
SwFlyFrame::GetModelPositionForViewPoint(SwPosition*, Point&, SwCursorMoveState*, bool) const
SwFlyFrame::GetObjBoundRect() const
SwFlyFrame::GetObjRect() const
SwFlyFrame::GetVirtDrawObj()
SwFlyFrame::GetVirtDrawObj() const
SwFlyFrame::Grow_(long, bool)
SwFlyFrame::InitDrawObj(SwFrame const&)
SwFlyFrame::InsertCnt()
SwFlyFrame::InsertColumns()
SwFlyFrame::InvalidateContentPos()
SwFlyFrame::InvalidateObjPos()
SwFlyFrame::Invalidate_(SwPageFrame const*)
SwFlyFrame::IsBackgroundTransparent() const
SwFlyFrame::IsFormatPossible() const
SwFlyFrame::IsLowerOf(SwLayoutFrame const*) const
SwFlyFrame::IsPaint(SdrObject*, SwViewShell const*)
SwFlyFrame::MakeContentPos(SwBorderAttrs const&)
SwFlyFrame::MakeObjPos()
SwFlyFrame::MakePrtArea(SwBorderAttrs const&)
SwFlyFrame::NotifyDrawObj()
SwFlyFrame::PaintDecorators() const
SwFlyFrame::PaintSwFrame(OutputDevice&, SwRect const&, SwPrintData const*) const
SwFlyFrame::RegisterAtCorrectPage()
SwFlyFrame::RegisterAtPage(SwPageFrame&)
SwFlyFrame::SelectionHasChanged(SwFEShell*)
SwFlyFrame::SetObjLeft_(long)
SwFlyFrame::SetObjTop_(long)
SwFlyFrame::Shrink_(long, bool)
SwFlyFrame::SwClientNotify(SwModify const&, SfxHint const&)
SwFlyFrame::SwFlyFrame(SwFlyFrameFormat*, SwFrame*, SwFrame*)
SwFlyFrame::Unchain()
SwFlyFrame::UnchainFrames(SwFlyFrame*, SwFlyFrame*)
SwFlyFrame::UpdateAttr_(SfxPoolItem const*, SfxPoolItem const*, SwFlyFrameInvFlags&, SwAttrSetChg*, SwAttrSetChg*)
SwFlyFrame::UpdateUnfloatButton(SwWrtShell*, bool) const
SwFlyFrame::getIDocumentDrawModelAccess()
SwFlyFrame::~SwFlyFrame()
SwFlyFrameAttrMgr::DelAttr(unsigned short)
SwFlyFrameAttrMgr::InsertFlyFrame()
SwFlyFrameAttrMgr::InsertFlyFrame(RndStdIds, Point const&, Size const&)
SwFlyFrameAttrMgr::SetAbsPos(Point const&)
SwFlyFrameAttrMgr::SetAnchor(RndStdIds)
SwFlyFrameAttrMgr::SetAttrSet(SfxItemSet const&)
SwFlyFrameAttrMgr::SetCol(SwFormatCol const&)
SwFlyFrameAttrMgr::SetHeightSizeType(SwFrameSize)
SwFlyFrameAttrMgr::SetHorzOrientation(short)
SwFlyFrameAttrMgr::SetLRSpace(long, long)
SwFlyFrameAttrMgr::SetPos(Point const&)
SwFlyFrameAttrMgr::SetRotation(o3tl::strong_int<short, FractionTag<10> >, o3tl::strong_int<short, FractionTag<10> >, Size const&)
SwFlyFrameAttrMgr::SetSize(Size const&)
SwFlyFrameAttrMgr::SetULSpace(long, long)
SwFlyFrameAttrMgr::SetVertOrientation(short)
SwFlyFrameAttrMgr::SwFlyFrameAttrMgr(bool, SwWrtShell*, Frmmgr_Type, SvGlobalName const*)
SwFlyFrameAttrMgr::SwFlyFrameAttrMgr(bool, SwWrtShell*, SfxItemSet const&)
SwFlyFrameAttrMgr::UpdateAttrMgr()
SwFlyFrameAttrMgr::UpdateFlyFrame()
SwFlyFrameFormat::GetAnchoredObj() const
SwFlyFrameFormat::GetFrame(Point const*) const
SwFlyFrameFormat::GetInfo(SfxPoolItem&) const
SwFlyFrameFormat::IsBackgroundBrushInherited() const
SwFlyFrameFormat::IsBackgroundTransparent() const
SwFlyFrameFormat::MakeGraphic(ImageMap*, unsigned int, std::optional<Size> const&)
SwFlyFrameFormat::SetObjDescription(rtl::OUString const&, bool)
SwFlyFrameFormat::SetObjTitle(rtl::OUString const&, bool)
SwFlyFrameFormat::SwFlyFrameFormat(SwAttrPool&, rtl::OUString const&, SwFrameFormat*)
SwFlyFrameFormat::~SwFlyFrameFormat()
SwFootnoteInfo::SwFootnoteInfo()
SwFootnoteInfo::SwFootnoteInfo(SwFootnoteInfo const&)
SwFootnoteInfo::operator=(SwFootnoteInfo const&)
SwForm::GetFormMaxLevel(TOXTypes)
SwForm::GetFormText()
SwForm::SwForm(SwForm const&)
SwForm::SwForm(TOXTypes)
SwFormat::CopyAttrs(SwFormat const&)
SwFormat::DelDiffs(SfxItemSet const&)
SwFormat::IsBackgroundTransparent() const
SwFormat::RemoveAllUnos()
SwFormat::ResetAllFormatAttr()
SwFormat::ResetFormatAttr(unsigned short, unsigned short)
SwFormat::SetGrabBagItem(com::sun::star::uno::Any const&)
SwFormat::SetName(rtl::OUString const&, bool)
SwFormat::SetPageFormatToDefault()
SwFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwFormat::SwFormat(SwAttrPool&, char const*, WhichRangesContainer const&, SwFormat*, unsigned short)
SwFormat::SwFormat(SwAttrPool&, rtl::OUString const&, WhichRangesContainer const&, SwFormat*, unsigned short)
SwFormat::SwFormat(SwFormat const&)
SwFormat::getIDocumentChartDataProviderAccess()
SwFormat::getIDocumentDrawModelAccess()
SwFormat::getIDocumentDrawModelAccess() const
SwFormat::getIDocumentFieldsAccess()
SwFormat::getIDocumentLayoutAccess()
SwFormat::getIDocumentLayoutAccess() const
SwFormat::getIDocumentTimerAccess()
SwFormat::getSdrAllFillAttributesHelper() const
SwFormat::operator=(SwFormat const&)
SwFormat::supportsFullDrawingLayerFillAttributeSet() const
SwFormat::~SwFormat()
SwFormatAnchor::Clone(SfxItemPool*) const
SwFormatAnchor::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatAnchor::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatAnchor::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatAnchor::SwFormatAnchor(RndStdIds, unsigned short)
SwFormatAnchor::SwFormatAnchor(SwFormatAnchor const&)
SwFormatAnchor::dumpAsXml(_xmlTextWriter*) const
SwFormatAnchor::operator=(SwFormatAnchor const&)
SwFormatAnchor::operator==(SfxPoolItem const&) const
SwFormatAnchor::~SwFormatAnchor()
SwFormatChain::Clone(SfxItemPool*) const
SwFormatChain::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatChain::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatChain::SwFormatChain(SwFormatChain const&)
SwFormatChain::operator==(SfxPoolItem const&) const
SwFormatCharFormat::Clone(SfxItemPool*) const
SwFormatCharFormat::GetInfo(SfxPoolItem&) const
SwFormatCharFormat::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatCharFormat::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatCharFormat::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatCharFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatCharFormat::SwFormatCharFormat(SwCharFormat*)
SwFormatCharFormat::SwFormatCharFormat(SwFormatCharFormat const&)
SwFormatCharFormat::operator==(SfxPoolItem const&) const
SwFormatCharFormat::~SwFormatCharFormat()
SwFormatCol::Clone(SfxItemPool*) const
SwFormatCol::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatCol::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatCol::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatCol::SetGutterWidth(unsigned short, unsigned short)
SwFormatCol::SwFormatCol()
SwFormatCol::SwFormatCol(SwFormatCol const&)
SwFormatCol::dumpAsXml(_xmlTextWriter*) const
SwFormatCol::operator==(SfxPoolItem const&) const
SwFormatCol::~SwFormatCol()
SwFormatDrop::Clone(SfxItemPool*) const
SwFormatDrop::CreateDefault()
SwFormatDrop::GetInfo(SfxPoolItem&) const
SwFormatDrop::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatDrop::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatDrop::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatDrop::SwFormatDrop()
SwFormatDrop::SwFormatDrop(SwFormatDrop const&)
SwFormatDrop::~SwFormatDrop()
SwFormatEditInReadonly::Clone(SfxItemPool*) const
SwFormatEditInReadonly::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatEditInReadonly::dumpAsXml(_xmlTextWriter*) const
SwFormatEndAtTextEnd::Clone(SfxItemPool*) const
SwFormatField::ClearTextField()
SwFormatField::GetInfo(SfxPoolItem&) const
SwFormatField::InvalidateField()
SwFormatField::IsFieldInDoc() const
SwFormatField::IsProtect() const
SwFormatField::SetField(std::unique_ptr<SwField, std::default_delete<SwField> >)
SwFormatField::SetTextField(SwTextField&)
SwFormatField::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatField::SwFormatField(SwField const&)
SwFormatField::SwFormatField(SwFormatField const&)
SwFormatField::SwFormatField(unsigned short)
SwFormatField::UpdateTextNode(SfxPoolItem const*, SfxPoolItem const*)
SwFormatField::dumpAsXml(_xmlTextWriter*) const
SwFormatField::operator==(SfxPoolItem const&) const
SwFormatField::~SwFormatField()
SwFormatFollowTextFlow::Clone(SfxItemPool*) const
SwFormatFollowTextFlow::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFollowTextFlow::dumpAsXml(_xmlTextWriter*) const
SwFormatFooter::Clone(SfxItemPool*) const
SwFormatFooter::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFooter::RegisterToFormat(SwFormat&)
SwFormatFooter::SwFormatFooter(SwFormatFooter const&)
SwFormatFooter::SwFormatFooter(SwFrameFormat*)
SwFormatFooter::SwFormatFooter(bool)
SwFormatFooter::operator==(SfxPoolItem const&) const
SwFormatFooter::~SwFormatFooter()
SwFormatFootnote::Clone(SfxItemPool*) const
SwFormatFootnote::GetFootnoteText(SwRootFrame const&) const
SwFormatFootnote::GetViewNumStr(SwDoc const&, SwRootFrame const*, bool) const
SwFormatFootnote::InvalidateFootnote()
SwFormatFootnote::SetEndNote(bool)
SwFormatFootnote::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatFootnote::SwFormatFootnote(bool)
SwFormatFootnote::getAnchor(SwDoc&) const
SwFormatFootnote::operator==(SfxPoolItem const&) const
SwFormatFootnote::~SwFormatFootnote()
SwFormatFootnoteAtTextEnd::Clone(SfxItemPool*) const
SwFormatFootnoteEndAtTextEnd::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFootnoteEndAtTextEnd::GetValueCount() const
SwFormatFootnoteEndAtTextEnd::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatFootnoteEndAtTextEnd::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatFootnoteEndAtTextEnd::operator==(SfxPoolItem const&) const
SwFormatFrameSize::Clone(SfxItemPool*) const
SwFormatFrameSize::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFrameSize::HasMetrics() const
SwFormatFrameSize::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatFrameSize::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatFrameSize::ScaleMetrics(long, long)
SwFormatFrameSize::SwFormatFrameSize(SwFrameSize, long, long)
SwFormatFrameSize::dumpAsXml(_xmlTextWriter*) const
SwFormatHeader::Clone(SfxItemPool*) const
SwFormatHeader::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatHeader::RegisterToFormat(SwFormat&)
SwFormatHeader::SwFormatHeader(SwFormatHeader const&)
SwFormatHeader::SwFormatHeader(SwFrameFormat*)
SwFormatHeader::SwFormatHeader(bool)
SwFormatHeader::operator==(SfxPoolItem const&) const
SwFormatHeader::~SwFormatHeader()
SwFormatHoriOrient::Clone(SfxItemPool*) const
SwFormatHoriOrient::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatHoriOrient::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatHoriOrient::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatHoriOrient::SwFormatHoriOrient(long, short, short, bool)
SwFormatHoriOrient::dumpAsXml(_xmlTextWriter*) const
SwFormatINetFormat::Clone(SfxItemPool*) const
SwFormatINetFormat::CreateDefault()
SwFormatINetFormat::GetMacro(SvMacroItemId) const
SwFormatINetFormat::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatINetFormat::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatINetFormat::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatINetFormat::SetMacro(SvMacroItemId, SvxMacro const&)
SwFormatINetFormat::SwFormatINetFormat()
SwFormatINetFormat::SwFormatINetFormat(SwFormatINetFormat const&)
SwFormatINetFormat::SwFormatINetFormat(rtl::OUString const&, rtl::OUString const&)
SwFormatINetFormat::operator==(SfxPoolItem const&) const
SwFormatINetFormat::~SwFormatINetFormat()
SwFormatLayoutSplit::Clone(SfxItemPool*) const
SwFormatLayoutSplit::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatLineNumber::Clone(SfxItemPool*) const
SwFormatLineNumber::CreateDefault()
SwFormatLineNumber::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatLineNumber::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatLineNumber::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatLineNumber::SwFormatLineNumber()
SwFormatLineNumber::operator==(SfxPoolItem const&) const
SwFormatLineNumber::~SwFormatLineNumber()
SwFormatNoBalancedColumns::Clone(SfxItemPool*) const
SwFormatNoBalancedColumns::dumpAsXml(_xmlTextWriter*) const
SwFormatPageDesc::Clone(SfxItemPool*) const
SwFormatPageDesc::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatPageDesc::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatPageDesc::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatPageDesc::RegisterToPageDesc(SwPageDesc&)
SwFormatPageDesc::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatPageDesc::SwFormatPageDesc(SwFormatPageDesc const&)
SwFormatPageDesc::SwFormatPageDesc(SwPageDesc const*)
SwFormatPageDesc::dumpAsXml(_xmlTextWriter*) const
SwFormatPageDesc::operator=(SwFormatPageDesc const&)
SwFormatPageDesc::operator==(SfxPoolItem const&) const
SwFormatPageDesc::~SwFormatPageDesc()
SwFormatRowSplit::Clone(SfxItemPool*) const
SwFormatRowSplit::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatRuby::Clone(SfxItemPool*) const
SwFormatRuby::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatRuby::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatRuby::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatRuby::SwFormatRuby(SwFormatRuby const&)
SwFormatRuby::SwFormatRuby(rtl::OUString const&)
SwFormatRuby::operator=(SwFormatRuby const&)
SwFormatRuby::operator==(SfxPoolItem const&) const
SwFormatRuby::~SwFormatRuby()
SwFormatSurround::Clone(SfxItemPool*) const
SwFormatSurround::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatSurround::GetValueCount() const
SwFormatSurround::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatSurround::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatSurround::SwFormatSurround(com::sun::star::text::WrapTextMode)
SwFormatSurround::dumpAsXml(_xmlTextWriter*) const
SwFormatURL::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatURL::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatURL::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatURL::SwFormatURL()
SwFormatURL::SwFormatURL(SwFormatURL const&)
SwFormatURL::operator==(SfxPoolItem const&) const
SwFormatURL::~SwFormatURL()
SwFormatVertOrient::Clone(SfxItemPool*) const
SwFormatVertOrient::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatVertOrient::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatVertOrient::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatVertOrient::SwFormatVertOrient(long, short, short)
SwFormatVertOrient::dumpAsXml(_xmlTextWriter*) const
SwFormatWrapInfluenceOnObjPos::Clone(SfxItemPool*) const
SwFormatWrapInfluenceOnObjPos::GetOverlapVertOffset() const
SwFormatWrapInfluenceOnObjPos::GetWrapInfluenceOnObjPos(bool) const
SwFormatWrapInfluenceOnObjPos::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatWrapInfluenceOnObjPos::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatWrapInfluenceOnObjPos::SetOverlapVertOffset(long)
SwFormatWrapInfluenceOnObjPos::SetWrapInfluenceOnObjPos(short)
SwFormatWrapInfluenceOnObjPos::SwFormatWrapInfluenceOnObjPos(short)
SwFormatWrapInfluenceOnObjPos::dumpAsXml(_xmlTextWriter*) const
SwFormatWrapInfluenceOnObjPos::~SwFormatWrapInfluenceOnObjPos()
SwFormatsBase::~SwFormatsBase()
SwFormulaField::GetExpandedFormula() const
SwFormulaField::SetExpandedFormula(rtl::OUString const&)
SwFormulaField::SwFormulaField(SwFormulaField const&)
SwFormulaField::SwFormulaField(SwValueFieldType*, unsigned int, double)
SwFrame::ActionOnInvalidation(SwFrame::InvalidationType)
SwFrame::AdjustNeighbourhood(long, bool)
SwFrame::AppendDrawObj(SwAnchoredObject&)
SwFrame::AppendFly(SwFlyFrame*)
SwFrame::Calc(OutputDevice*) const
SwFrame::CheckDir(SvxFrameDirection, bool, bool, bool)
SwFrame::CheckDirChange()
SwFrame::CheckDirection(bool)
SwFrame::CheckPageDescs(SwPageFrame*, bool, SwPageFrame**)
SwFrame::ChgSize(Size const&)
SwFrame::CreateProcessor2D() const
SwFrame::DestroyFrame(SwFrame*)
SwFrame::DestroyImpl()
SwFrame::DynCastTextFrame()
SwFrame::DynCastTextFrame() const
SwFrame::FillSelection(SwSelectionList&, SwRect const&) const
SwFrame::FindColFrame()
SwFrame::FindFooterOrHeader()
SwFrame::FindFootnoteBossFrame(bool)
SwFrame::FindNextCnt(bool)
SwFrame::FindNextCnt(bool) const
SwFrame::FindNextCnt_(bool)
SwFrame::FindNext_()
SwFrame::FindPrevCnt()
SwFrame::FindPrevCnt() const
SwFrame::FindPrevCnt_()
SwFrame::FindPrev_()
SwFrame::FindRowFrame()
SwFrame::Format(OutputDevice*, SwBorderAttrs const*)
SwFrame::GetAttrSet() const
SwFrame::GetBackgroundBrush(std::shared_ptr<drawinglayer::attribute::SdrAllFillAttributesHelper>&, SvxBrushItem const*&, std::optional<Color>&, SwRect&, bool, bool) const
SwFrame::GetBottomMargin() const
SwFrame::GetBreakItem() const
SwFrame::GetCharRect(SwRect&, SwPosition const&, SwCursorMoveState*, bool) const
SwFrame::GetFrameAnchorPos(bool) const
SwFrame::GetIndNext_()
SwFrame::GetIndPrev_() const
SwFrame::GetLeaf(MakePageType, bool)
SwFrame::GetLeaf(MakePageType, bool, SwFrame const*) const
SwFrame::GetLeftMargin() const
SwFrame::GetLower() const
SwFrame::GetModelPositionForViewPoint(SwPosition*, Point&, SwCursorMoveState*, bool) const
SwFrame::GetNextCellLeaf()
SwFrame::GetNextFootnoteLeaf(MakePageType)
SwFrame::GetNextLeaf(MakePageType)
SwFrame::GetNextSctLeaf(MakePageType)
SwFrame::GetPageDescItem() const
SwFrame::GetPhyPageNum() const
SwFrame::GetPrevCellLeaf()
SwFrame::GetPrevFootnoteLeaf(MakePageType)
SwFrame::GetPrevLeaf()
SwFrame::GetPrevSctLeaf()
SwFrame::GetPrtBottom() const
SwFrame::GetPrtLeft() const
SwFrame::GetPrtRight() const
SwFrame::GetPrtTop() const
SwFrame::GetRelPos() const
SwFrame::GetRightMargin() const
SwFrame::GetTopMargin() const
SwFrame::Grow(long, bool, bool)
SwFrame::ImplFindBodyFrame() const
SwFrame::ImplFindFlyFrame()
SwFrame::ImplFindFootnoteFrame()
SwFrame::ImplFindPageFrame()
SwFrame::ImplFindSctFrame()
SwFrame::ImplFindTabFrame()
SwFrame::ImplGetNextLayoutLeaf(bool) const
SwFrame::ImplInvalidateLineNum()
SwFrame::ImplInvalidateNextPos(bool)
SwFrame::ImplInvalidatePos()
SwFrame::ImplInvalidatePrt()
SwFrame::ImplInvalidateSize()
SwFrame::InsertBefore(SwLayoutFrame*, SwFrame*)
SwFrame::InsertBehind(SwLayoutFrame*, SwFrame*)
SwFrame::InsertGroupBefore(SwFrame*, SwFrame*, SwFrame*)
SwFrame::InsertPage(SwPageFrame*, bool)
SwFrame::InvalidateNextPrtArea()
SwFrame::InvalidateObjs(bool)
SwFrame::InvalidatePage(SwPageFrame const*) const
SwFrame::InvalidationAllowed(SwFrame::InvalidationType) const
SwFrame::IsCollapse() const
SwFrame::IsCoveredCell() const
SwFrame::IsFootnoteAllowed() const
SwFrame::IsInBalancedSection() const
SwFrame::IsInCoveredCell() const
SwFrame::IsInFollowFlowRow() const
SwFrame::IsInSplitTableRow() const
SwFrame::IsLeaveUpperAllowed() const
SwFrame::IsMoveable(SwLayoutFrame const*) const
SwFrame::IsProtected() const
SwFrame::KnowsFormat(SwFormat const&) const
SwFrame::MakeBelowPos(SwFrame const*, SwFrame const*, bool)
SwFrame::MakeLeftPos(SwFrame const*, SwFrame const*, bool)
SwFrame::MakePos()
SwFrame::MakeRightPos(SwFrame const*, SwFrame const*, bool)
SwFrame::OnFirstPage() const
SwFrame::OptPrepareMake()
SwFrame::PaintBaBo(SwRect const&, SwPageFrame const*, bool) const
SwFrame::PaintBorderLine(SwRect const&, SwRect const&, SwPageFrame const*, Color const*, SvxBorderLineStyle) const
SwFrame::PaintShadow(SwRect const&, SwRect&, SwBorderAttrs const&) const
SwFrame::PaintSwFrame(OutputDevice&, SwRect const&, SwPrintData const*) const
SwFrame::PaintSwFrameBackground(SwRect const&, SwPageFrame const*, SwBorderAttrs const&, bool, bool, bool) const
SwFrame::PaintSwFrameShadowAndBorder(SwRect const&, SwPageFrame const*, SwBorderAttrs const&) const
SwFrame::Prepare(PrepareHint, void const*, bool)
SwFrame::PrepareCursor()
SwFrame::PrepareMake(OutputDevice*)
SwFrame::ProcessPrimitives(drawinglayer::primitive2d::Primitive2DContainer const&) const
SwFrame::RegisterToFormat(SwFormat&)
SwFrame::ReinitializeFrameSizeAttrFlags()
SwFrame::RemoveDrawObj(SwAnchoredObject&)
SwFrame::RemoveFly(SwFlyFrame*)
SwFrame::RemoveFromLayout()
SwFrame::Retouch(SwPageFrame const*, SwRect const&) const
SwFrame::SetDirFlags(bool)
SwFrame::SetDrawObjsAsDeleted(bool)
SwFrame::SetInfFlags()
SwFrame::SetLeftRightMargins(long, long)
SwFrame::SetMaxBottom(long)
SwFrame::SetMaxRight(long)
SwFrame::SetMinLeft(long)
SwFrame::SetRightLeftMargins(long, long)
SwFrame::SetTopBottomMargins(long, long)
SwFrame::Shrink(long, bool, bool)
SwFrame::SwClientNotify(SwModify const&, SfxHint const&)
SwFrame::SwFrame(sw::BroadcastingModify*, SwFrame*)
SwFrame::UnionFrame(bool) const
SwFrame::UpdateAttrFrame(SfxPoolItem const*, SfxPoolItem const*, SwFrameInvFlags&)
SwFrame::ValidateThisAndAllLowers(unsigned short)
SwFrame::WannaRightPage() const
SwFrame::WrongPageDesc(SwPageFrame*)
SwFrame::dumpAsXml(_xmlTextWriter*) const
SwFrame::dumpAsXmlAttributes(_xmlTextWriter*) const
SwFrame::dumpChildrenAsXml(_xmlTextWriter*) const
SwFrame::dumpInfosAsXml(_xmlTextWriter*) const
SwFrame::dumpTopMostAsXml(_xmlTextWriter*) const
SwFrame::getIDocumentDrawModelAccess()
SwFrame::getSdrAllFillAttributesHelper() const
SwFrame::supportsFullDrawingLayerFillAttributeSet() const
SwFrame::~SwFrame()
SwFrameExample::CalcBoundRect_Impl(OutputDevice const&, tools::Rectangle&)
SwFrameExample::DrawInnerFrame_Impl(OutputDevice&, tools::Rectangle const&, Color const&, Color const&)
SwFrameExample::InitAllRects_Impl(OutputDevice&)
SwFrameExample::InitColors_Impl()
SwFrameExample::Paint(OutputDevice&, tools::Rectangle const&)
SwFrameExample::SetDrawingArea(weld::DrawingArea*)
SwFrameExample::StyleUpdated()
SwFrameExample::SwFrameExample()
SwFrameFormat::DelFrames()
SwFrameFormat::GetDescription() const
SwFrameFormat::GetIMapObject(Point const&, SwFlyFrame const*) const
SwFrameFormat::GetLayoutDir() const
SwFrameFormat::GetPositionLayoutDir() const
SwFrameFormat::IsLowerOf(SwFrameFormat const&) const
SwFrameFormat::MakeFrames()
SwFrameFormat::MakeGraphic(ImageMap*, unsigned int, std::optional<Size> const&)
SwFrameFormat::MoveTableBox(SwTableBox&, SwFrameFormat const*)
SwFrameFormat::RegisterToFormat(SwFormat&)
SwFrameFormat::SetLayoutDir(SwFrameFormat::tLayoutDir)
SwFrameFormat::SetName(rtl::OUString const&, bool)
SwFrameFormat::SetPositionLayoutDir(short)
SwFrameFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwFrameFormat::SwFrameFormat(SwAttrPool&, char const*, SwFrameFormat*, unsigned short, WhichRangesContainer const&)
SwFrameFormat::SwFrameFormat(SwAttrPool&, rtl::OUString const&, SwFrameFormat*, unsigned short, WhichRangesContainer const&)
SwFrameFormat::dumpAsXml(_xmlTextWriter*) const
SwFrameFormat::getSdrAllFillAttributesHelper() const
SwFrameFormat::supportsFullDrawingLayerFillAttributeSet() const
SwFrameFormat::~SwFrameFormat()
SwFrameFormats::ContainsFormat(SwFrameFormat const&) const
SwFrameFormats::DeleteAndDestroyAll(bool)
SwFrameFormats::FindFormatByName(rtl::OUString const&) const
SwFrameFormats::IsAlive(SwFrameFormat const*) const
SwFrameFormats::SwFrameFormats()
SwFrameFormats::dumpAsXml(_xmlTextWriter*, char const*) const
SwFrameFormats::erase(SwFrameFormat* const&)
SwFrameFormats::erase(boost::multi_index::detail::rnd_node_iterator<boost::multi_index::detail::random_access_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<SwFrameFormat*, std::allocator<SwFrameFormat*> > > > > const&)
SwFrameFormats::erase(unsigned long)
SwFrameFormats::findByTypeAndName(unsigned short, rtl::OUString const&) const
SwFrameFormats::findRangeByName(rtl::OUString const&) const
SwFrameFormats::newDefault(SwFrameFormat* const&)
SwFrameFormats::newDefault(boost::multi_index::detail::rnd_node_iterator<boost::multi_index::detail::random_access_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<SwFrameFormat*, std::allocator<SwFrameFormat*> > > > > const&)
SwFrameFormats::push_back(SwFrameFormat* const&)
SwFrameFormats::~SwFrameFormats()
SwGammaGrf::Clone(SfxItemPool*) const
SwGammaGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwGammaGrf::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwGammaGrf::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwGammaGrf::operator==(SfxPoolItem const&) const
SwGetExpField::ChangeExpansion(SwFrame const&, SwTextField const&)
SwGetExpField::ChgExpStr(rtl::OUString const&, SwRootFrame const*)
SwGetExpField::Copy() const
SwGetExpField::ExpandImpl(SwRootFrame const*) const
SwGetExpField::GetFieldName() const
SwGetExpField::GetPar2() const
SwGetExpField::GetSubType() const
SwGetExpField::GetValue(SwRootFrame const*) const
SwGetExpField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwGetExpField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwGetExpField::SetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwGetExpField::SetPar2(rtl::OUString const&)
SwGetExpField::SetSubType(unsigned short)
SwGetExpField::SetValue(double const&)
SwGetExpField::SetValue(double const&, SwRootFrame const*)
SwGetExpField::SwGetExpField(SwGetExpFieldType*, rtl::OUString const&, unsigned short, unsigned long)
SwGetRefField::ConvertProgrammaticToUIName()
SwGetRefField::Copy() const
SwGetRefField::ExpandImpl(SwRootFrame const*) const
SwGetRefField::GetDescription() const
SwGetRefField::GetFieldName() const
SwGetRefField::GetPar1() const
SwGetRefField::GetSubType() const
SwGetRefField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwGetRefField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwGetRefField::SetExpand(rtl::OUString const&)
SwGetRefField::SetPar1(rtl::OUString const&)
SwGetRefField::SwGetRefField(SwGetRefFieldType*, rtl::OUString const&, rtl::OUString const&, unsigned short, unsigned short, unsigned long)
SwGetRefField::UpdateField(SwTextField const*)
SwGetRefField::~SwGetRefField()
SwGlossaries::DelGroupDoc(rtl::OUString const&)
SwGlossaries::EditGroupDoc(rtl::OUString const&, rtl::OUString const&, bool)
SwGlossaries::FindGroupName(rtl::OUString&)
SwGlossaries::GetAutoTextEntry(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwGlossaries::GetAutoTextGroup(rtl::OUString const&)
SwGlossaries::GetCompleteGroupName(rtl::OUString const&)
SwGlossaries::GetExtension()
SwGlossaries::GetGroupCnt()
SwGlossaries::GetGroupName(unsigned long)
SwGlossaries::GetGroupTitle(rtl::OUString const&)
SwGlossaries::NewGroupDoc(rtl::OUString&, rtl::OUString const&)
SwGlossaries::RenameGroupDoc(rtl::OUString const&, rtl::OUString&, rtl::OUString const&)
SwGlossaries::SwGlossaries()
SwGlossaries::~SwGlossaries()
SwGlossaryHdl::ExpandGlossary(weld::Window*)
SwGlossaryHdl::FindGroupName(rtl::OUString&)
SwGlossaryHdl::GlossaryDlg()
SwGlossaryHdl::SwGlossaryHdl(SfxViewFrame*, SwWrtShell*)
SwGlossaryHdl::~SwGlossaryHdl()
SwGrfNode::ApplyInputStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
SwGrfNode::GetGraphicAttr(GraphicAttr&, SwFrame const*) const
SwGrfNode::GetReplacementGrfObj() const
SwGrfNode::InsertLink(rtl::OUString const&, rtl::OUString const&)
SwGrfNode::IsAsyncRetrieveInputStreamPossible() const
SwGrfNode::IsTransparent() const
SwGrfNode::MakeCopy(SwDoc&, SwNodeIndex const&, bool) const
SwGrfNode::ReRead(rtl::OUString const&, rtl::OUString const&, Graphic const*, bool)
SwGrfNode::ReleaseLink()
SwGrfNode::RestorePersistentData()
SwGrfNode::SavePersistentData()
SwGrfNode::ScaleImageMap()
SwGrfNode::SetGraphic(Graphic const&)
SwGrfNode::SetTwipSize(Size const&)
SwGrfNode::SwGrfNode(SwNodeIndex const&, GraphicObject const&, SwGrfFormatColl*, SwAttrSet const*)
SwGrfNode::SwGrfNode(SwNodeIndex const&, rtl::OUString const&, rtl::OUString const&, Graphic const*, SwGrfFormatColl*, SwAttrSet const*)
SwGrfNode::SwGrfNode(SwNodeIndex const&, rtl::OUString const&, rtl::OUString const&, SwGrfFormatColl*, SwAttrSet const*)
SwGrfNode::SwapIn(bool)
SwGrfNode::TriggerAsyncRetrieveInputStream()
SwGrfNode::TriggerGraphicArrived()
SwGrfNode::UpdateLinkWithInputStream()
SwGrfNode::onGraphicChanged()
SwGrfNode::~SwGrfNode()
SwHHCWrapper::ChangeText(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<int> const*, SwPaM*)
SwHHCWrapper::ChangeText_impl(rtl::OUString const&, bool)
SwHHCWrapper::ConvContinue_impl(SwConversionArgs*)
SwHHCWrapper::ConvEnd_impl(SwConversionArgs const*)
SwHHCWrapper::ConvNext_impl()
SwHHCWrapper::ConvStart_impl(SwConversionArgs*, SvxSpellArea)
SwHHCWrapper::FindConvText_impl()
SwHHCWrapper::GetNextPortion(rtl::OUString&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, bool)
SwHHCWrapper::HandleNewUnit(int, int)
SwHHCWrapper::HasRubySupport() const
SwHHCWrapper::ReplaceUnit(int, int, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<int> const&, editeng::HangulHanjaConversion::ReplacementAction, o3tl::strong_int<unsigned short, LanguageTypeTag>*)
SwHHCWrapper::SelectNewUnit_impl(int, int)
SwHHCWrapper::SwHHCWrapper(SwView*, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, o3tl::strong_int<unsigned short, LanguageTypeTag>, o3tl::strong_int<unsigned short, LanguageTypeTag>, vcl::Font const*, int, bool, bool, bool, bool)
SwHHCWrapper::~SwHHCWrapper()
SwHTMLWriter::AddLinkTarget(rtl::OUString const&)
SwHTMLWriter::ChangeParaToken(HtmlTokenId)
SwHTMLWriter::ClearNextNumInfo()
SwHTMLWriter::CollectFlyFrames()
SwHTMLWriter::CollectLinkTargets()
SwHTMLWriter::FillNextNumInfo()
SwHTMLWriter::GetCSS1ScriptForScriptType(unsigned short)
SwHTMLWriter::GetCSS1Selector(SwFormat const*, rtl::OString&, rtl::OUString&, unsigned short&, rtl::OUString*)
SwHTMLWriter::GetControls()
SwHTMLWriter::GetDefListLvl(rtl::OUString const&, unsigned short)
SwHTMLWriter::GetEEAttrsFromDrwObj(SfxItemSet&, SdrObject const*)
SwHTMLWriter::GetFootEndNoteSym(SwFormatFootnote const&)
SwHTMLWriter::GetHTMLControl(SwDrawFrameFormat const&)
SwHTMLWriter::GetHTMLDirection(SfxItemSet const&) const
SwHTMLWriter::GetHTMLDirection(SvxFrameDirection) const
SwHTMLWriter::GetHTMLFontSize(unsigned int) const
SwHTMLWriter::GetIndentString(unsigned short)
SwHTMLWriter::GetLangWhichIdFromScript(unsigned short)
SwHTMLWriter::GetMarqueeTextObj(SwDrawFrameFormat const&)
SwHTMLWriter::GetNamespace() const
SwHTMLWriter::GetNumFormat(unsigned short)
SwHTMLWriter::GetParentFormat(SwFormat const&, unsigned short)
SwHTMLWriter::GetTemplateFormat(unsigned short, IDocumentStylePoolAccess*)
SwHTMLWriter::GuessFrameType(SwFrameFormat const&, SdrObject const*&)
SwHTMLWriter::GuessOLENodeFrameType(SwNode const&)
SwHTMLWriter::HasControls() const
SwHTMLWriter::HasScriptDependentItems(SfxItemSet const&, bool)
SwHTMLWriter::MakeHeader(unsigned short&)
SwHTMLWriter::OutAnchor(rtl::OUString const&)
SwHTMLWriter::OutAndSetDefList(unsigned short)
SwHTMLWriter::OutBackground(SfxItemSet const&, bool)
SwHTMLWriter::OutBackground(SvxBrushItem const*, bool)
SwHTMLWriter::OutBasic(SwHTMLWriter const&)
SwHTMLWriter::OutBasicBodyEvents()
SwHTMLWriter::OutBookmarks()
SwHTMLWriter::OutCSS1_FrameFormatBackground(SwFrameFormat const&)
SwHTMLWriter::OutCSS1_FrameFormatOptions(SwFrameFormat const&, HtmlFrmOpts, SdrObject const*, SfxItemSet const*)
SwHTMLWriter::OutCSS1_PixelProperty(char const*, long, bool)
SwHTMLWriter::OutCSS1_Property(char const*, std::basic_string_view<char, std::char_traits<char> >, rtl::OUString const*)
SwHTMLWriter::OutCSS1_SectionFormatOptions(SwFrameFormat const&, SwFormatCol const*)
SwHTMLWriter::OutCSS1_SfxItemSet(SfxItemSet const&, bool)
SwHTMLWriter::OutCSS1_TableCellBordersAndBG(SwFrameFormat const&, SvxBrushItem const*)
SwHTMLWriter::OutCSS1_TableFrameFormatOptions(SwFrameFormat const&)
SwHTMLWriter::OutCSS1_UnitProperty(char const*, long)
SwHTMLWriter::OutDirection(SvxFrameDirection)
SwHTMLWriter::OutFlyFrame(o3tl::strong_int<int, Tag_SwNodeOffset>, int, HtmlPosition, HTMLOutContext*)
SwHTMLWriter::OutFootEndNoteInfo()
SwHTMLWriter::OutFootEndNoteSym(SwFormatFootnote const&, rtl::OUString const&, unsigned short)
SwHTMLWriter::OutFootEndNotes()
SwHTMLWriter::OutForm(bool, SwStartNode const*)
SwHTMLWriter::OutForm(bool, com::sun::star::uno::Reference<com::sun::star::container::XIndexContainer> const&)
SwHTMLWriter::OutFrameFormat(AllHtmlFlags, SwFrameFormat const&, SdrObject const*)
SwHTMLWriter::OutFrameFormatOptions(SwFrameFormat const&, rtl::OUString const&, HtmlFrmOpts)
SwHTMLWriter::OutHeaderAttrs()
SwHTMLWriter::OutHiddenControls(com::sun::star::uno::Reference<com::sun::star::container::XIndexContainer> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
SwHTMLWriter::OutHiddenForm(com::sun::star::uno::Reference<com::sun::star::form::XForm> const&)
SwHTMLWriter::OutHiddenForms()
SwHTMLWriter::OutHyperlinkHRefValue(rtl::OUString const&)
SwHTMLWriter::OutImplicitMark(std::basic_string_view<char16_t, std::char_traits<char16_t> >, char const*)
SwHTMLWriter::OutLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwHTMLWriter::OutNewLine(bool)
SwHTMLWriter::OutPointFieldmarks(SwPosition const&)
SwHTMLWriter::OutStyleSheet(SwPageDesc const&)
SwHTMLWriter::Out_SwDoc(SwPaM*)
SwHTMLWriter::PrepareFontList(SvxFontItem const&, rtl::OUString&, char16_t, bool)
SwHTMLWriter::ReleaseNextNumInfo()
SwHTMLWriter::SetNextNumInfo(std::unique_ptr<SwHTMLNumRuleInfo, std::default_delete<SwHTMLNumRuleInfo> >)
SwHTMLWriter::SetupFilterOptions(SfxMedium&)
SwHTMLWriter::SetupFilterOptions(rtl::OUString const&)
SwHTMLWriter::SubtractItemSet(SfxItemSet&, SfxItemSet const&, bool, bool, SfxItemSet const*)
SwHTMLWriter::SwHTMLWriter(rtl::OUString const&, rtl::OUString const&)
SwHTMLWriter::ToPixel(unsigned int, bool)
SwHTMLWriter::WriteStream()
SwHTMLWriter::convertDirection(SvxFrameDirection)
SwHTMLWriter::convertHyperlinkHRefValue(rtl::OUString const&)
SwHTMLWriter::indexOfDotLeaders(unsigned short, rtl::OUString const&)
SwHTMLWriter::writeFrameFormatOptions(HtmlWriter&, SwFrameFormat const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, HtmlFrmOpts)
SwHTMLWriter::~SwHTMLWriter()
SwHeaderAndFooterEatSpacingItem::Clone(SfxItemPool*) const
SwHeaderAndFooterEatSpacingItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwHiddenTextField::Copy() const
SwHiddenTextField::Evaluate(SwDoc&)
SwHiddenTextField::ExpandImpl(SwRootFrame const*) const
SwHiddenTextField::GetColumnName(rtl::OUString const&)
SwHiddenTextField::GetDBName(rtl::OUString const&, SwDoc&)
SwHiddenTextField::GetFieldName() const
SwHiddenTextField::GetPar1() const
SwHiddenTextField::GetPar2() const
SwHiddenTextField::GetSubType() const
SwHiddenTextField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwHiddenTextField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwHiddenTextField::SetPar1(rtl::OUString const&)
SwHiddenTextField::SetPar2(rtl::OUString const&)
SwHiddenTextField::SwHiddenTextField(SwHiddenTextFieldType*, bool, rtl::OUString const&, rtl::OUString const&, bool, SwFieldTypesEnum)
SwHiddenTextField::SwHiddenTextField(SwHiddenTextFieldType*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, SwFieldTypesEnum)
SwHyphWrapper::InsertHyphen(int)
SwHyphWrapper::SpellContinue()
SwHyphWrapper::SpellEnd()
SwHyphWrapper::SpellMore()
SwHyphWrapper::SpellStart(SvxSpellArea)
SwHyphWrapper::SwHyphWrapper(SwView*, com::sun::star::uno::Reference<com::sun::star::linguistic2::XHyphenator> const&, bool, bool, bool)
SwHyphWrapper::~SwHyphWrapper()
SwIndex::Init(int)
SwIndex::SetMark(sw::mark::IMark const*)
SwIndex::SwIndex(SwIndex const&)
SwIndex::SwIndex(SwIndex const&, short)
SwIndex::SwIndex(SwIndexReg*, int)
SwInputField::Copy() const
SwInputField::ExpandImpl(SwRootFrame const*) const
SwInputField::GetFieldName() const
SwInputField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwInputField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwInputField::SetFormatField(SwFormatField&)
SwInputField::SetPar2(rtl::OUString const&)
SwInputField::SetSubType(unsigned short)
SwInputField::SwInputField(SwInputFieldType*, rtl::OUString const&, rtl::OUString const&, unsigned short, unsigned long, bool)
SwInputField::applyFieldContent(rtl::OUString const&)
SwInputField::~SwInputField()
SwLabItem::Clone(SfxItemPool*) const
SwLabItem::SwLabItem()
SwLabItem::operator==(SfxPoolItem const&) const
SwLabelConfig::ImplCommit()
SwLabelConfig::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwLabelConfig::SwLabelConfig()
SwLabelConfig::~SwLabelConfig()
SwLayoutFrame::AdjustColumns(SwFormatCol const*, bool)
SwLayoutFrame::CalcRel(SwFormatFrameSize const&) const
SwLayoutFrame::ChgColumns(SwFormatCol const&, SwFormatCol const&, bool)
SwLayoutFrame::ChgLowersProp(Size const&)
SwLayoutFrame::ContainsAny(bool) const
SwLayoutFrame::ContainsContent() const
SwLayoutFrame::Cut()
SwLayoutFrame::DestroyImpl()
SwLayoutFrame::FillSelection(SwSelectionList&, SwRect const&) const
SwLayoutFrame::FirstCell() const
SwLayoutFrame::Format(OutputDevice*, SwBorderAttrs const*)
SwLayoutFrame::FormatWidthCols(SwBorderAttrs const&, long, long)
SwLayoutFrame::GetContentPos(Point&, bool, bool, SwCursorMoveState*, bool) const
SwLayoutFrame::GetFormat()
SwLayoutFrame::GetFormat() const
SwLayoutFrame::GetLastLower() const
SwLayoutFrame::GetModelPositionForViewPoint(SwPosition*, Point&, SwCursorMoveState*, bool) const
SwLayoutFrame::GrowFrame(long, bool, bool)
SwLayoutFrame::InnerHeight() const
SwLayoutFrame::InvaPercentLowers(long)
SwLayoutFrame::IsAnLower(SwFrame const*) const
SwLayoutFrame::IsBefore(SwLayoutFrame const*) const
SwLayoutFrame::MakeAll(OutputDevice*)
SwLayoutFrame::MoveLowerFootnotes(SwContentFrame*, SwFootnoteBossFrame*, SwFootnoteBossFrame*, bool)
SwLayoutFrame::NotifyLowerObjs(bool)
SwLayoutFrame::PaintBreak() const
SwLayoutFrame::PaintColLines(SwRect const&, SwFormatCol const&, SwPageFrame const*) const
SwLayoutFrame::PaintSubsidiaryLines(SwPageFrame const*, SwRect const&) const
SwLayoutFrame::PaintSwFrame(OutputDevice&, SwRect const&, SwPrintData const*) const
SwLayoutFrame::Paste(SwFrame*, SwFrame*)
SwLayoutFrame::RefreshExtraData(SwRect const&) const
SwLayoutFrame::RefreshLaySubsidiary(SwPageFrame const*, SwRect const&) const
SwLayoutFrame::SetFrameFormat(SwFrameFormat*)
SwLayoutFrame::ShrinkFrame(long, bool, bool)
SwLayoutFrame::SwLayoutFrame(SwFrameFormat*, SwFrame*)
SwLayoutFrame::~SwLayoutFrame()
SwLineLayout::Append(SwLinePortion*)
SwLineLayout::CalcLeftMargin()
SwLineLayout::CalcLine(SwTextFormatter&, SwTextFormatInfo&)
SwLineLayout::CreateSpaceAdd(long)
SwLineLayout::DeleteNext()
SwLineLayout::Format(SwTextFormatInfo&)
SwLineLayout::GetHangingMargin_() const
SwLineLayout::Height(long, bool)
SwLineLayout::Init(SwLinePortion*)
SwLineLayout::InitSpaceAdd()
SwLineLayout::Insert(SwLinePortion*)
SwLineLayout::MaxAscentDescent(long&, long&, long&, long&, SwLinePortion const*, bool) const
SwLineLayout::ResetFlags()
SwLineLayout::SwLineLayout()
SwLineLayout::dumpAsXml(_xmlTextWriter*) const
SwLineLayout::~SwLineLayout()
SwLineNumberInfo::SwClientNotify(SwModify const&, SfxHint const&)
SwLineNumberInfo::SwLineNumberInfo()
SwLineNumberInfo::SwLineNumberInfo(SwLineNumberInfo const&)
SwLineNumberInfo::operator=(SwLineNumberInfo const&)
SwLuminanceGrf::Clone(SfxItemPool*) const
SwLuminanceGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwMacroField::Copy() const
SwMacroField::CreateMacroString(rtl::OUString&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
SwMacroField::ExpandImpl(SwRootFrame const*) const
SwMacroField::GetFieldName() const
SwMacroField::GetLibName() const
SwMacroField::GetMacroName() const
SwMacroField::GetPar1() const
SwMacroField::GetPar2() const
SwMacroField::GetSvxMacro() const
SwMacroField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwMacroField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwMacroField::SetPar1(rtl::OUString const&)
SwMacroField::SetPar2(rtl::OUString const&)
SwMacroField::SwMacroField(SwMacroFieldType*, rtl::OUString const&, rtl::OUString const&)
SwMacroField::isScriptURL(rtl::OUString const&)
SwMailMergeConfigItem::AddMergedDocument(SwDocMergeInfo const&)
SwMailMergeConfigItem::DocumentReloaded()
SwMailMergeConfigItem::ExcludeRecord(int, bool)
SwMailMergeConfigItem::GetSelection() const
SwMailMergeConfigItem::IsRecordExcluded(unsigned int) const
SwMailMergeConfigItem::IsRecordIncluded(unsigned int) const
SwMailMergeConfigItem::IsResultSetFirstLast(bool&, bool&)
SwMailMergeConfigItem::SetCurrentDBData(SwDBData const&)
SwMailMergeConfigItem::SetSourceView(SwView*)
SwMailMergeConfigItem::SetTargetView(SwView*)
SwMailMergeConfigItem::SwMailMergeConfigItem()
SwMailMergeConfigItem::stopDBChangeListening()
SwMailMergeConfigItem::updateCurrentDBDataFromDocument()
SwMailMergeConfigItem::~SwMailMergeConfigItem()
SwMailMessage::SwMailMessage()
SwMailMessage::addAttachment(com::sun::star::mail::MailAttachment const&)
SwMailMessage::addBccRecipient(rtl::OUString const&)
SwMailMessage::addCcRecipient(rtl::OUString const&)
SwMailMessage::addRecipient(rtl::OUString const&)
SwMailMessage::getAttachments()
SwMailMessage::getBccRecipients()
SwMailMessage::getBody()
SwMailMessage::getCcRecipients()
SwMailMessage::getRecipients()
SwMailMessage::getReplyToAddress()
SwMailMessage::getSenderAddress()
SwMailMessage::getSenderName()
SwMailMessage::getSubject()
SwMailMessage::setBody(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&)
SwMailMessage::setReplyToAddress(rtl::OUString const&)
SwMailMessage::setSubject(rtl::OUString const&)
SwMailMessage::~SwMailMessage()
SwMailTransferable::SwMailTransferable(rtl::OUString const&, rtl::OUString const&)
SwMailTransferable::SwMailTransferable(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwMailTransferable::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwMailTransferable::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwMailTransferable::getPropertySetInfo()
SwMailTransferable::getPropertyValue(rtl::OUString const&)
SwMailTransferable::getTransferData(com::sun::star::datatransfer::DataFlavor const&)
SwMailTransferable::getTransferDataFlavors()
SwMailTransferable::isDataFlavorSupported(com::sun::star::datatransfer::DataFlavor const&)
SwMailTransferable::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwMailTransferable::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwMailTransferable::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SwMailTransferable::~SwMailTransferable()
SwMirrorGrf::Clone(SfxItemPool*) const
SwMirrorGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwMirrorGrf::GetValueCount() const
SwMirrorGrf::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwMirrorGrf::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwMirrorGrf::operator==(SfxPoolItem const&) const
SwModify::CallSwClientNotify(SfxHint const&) const
SwModify::GetInfo(SfxPoolItem&) const
SwModify::SwClientNotify(SwModify const&, SfxHint const&)
SwModify::~SwModify()
SwModule::ApplyItemSet(unsigned short, SfxItemSet const&)
SwModule::ApplyRulerMetric(FieldUnit, bool, bool)
SwModule::ApplyUserCharUnit(bool, bool)
SwModule::ApplyUserMetric(FieldUnit, bool)
SwModule::CallAutomationApplicationEventSinks(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
SwModule::CheckSpellChanges(bool, bool, bool, bool)
SwModule::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
SwModule::CreateItemSet(unsigned short)
SwModule::CreateTabPage(unsigned short, weld::Container*, weld::DialogController*, SfxItemSet const&)
SwModule::GetAccessibilityOptions()
SwModule::GetColorConfig()
SwModule::GetCompareMode() const
SwModule::GetDeletedAuthorAttr(unsigned long, SfxItemSet&)
SwModule::GetDocStatWordDelim() const
SwModule::GetFieldUpdateFlags() const
SwModule::GetFirstView()
SwModule::GetFormatAuthorAttr(unsigned long, SfxItemSet&)
SwModule::GetInsertAuthorAttr(unsigned long, SfxItemSet&)
SwModule::GetInterface() const
SwModule::GetLanguageGuesser()
SwModule::GetLinkUpdMode() const
SwModule::GetMetric(bool) const
SwModule::GetNavigationConfig()
SwModule::GetNextView(SwView const*)
SwModule::GetPieceLen() const
SwModule::GetPrtOptions(bool)
SwModule::GetRedlineAuthor()
SwModule::GetRedlineAuthorInfo(tools::JsonWriter&)
SwModule::GetRedlineMarkColor() const
SwModule::GetRedlineMarkPos() const
SwModule::GetScannerManager()
SwModule::GetStaticInterface()
SwModule::GetUserOptions()
SwModule::GetViewOption(bool)
SwModule::InitAttrPool()
SwModule::InitInterface_Impl()
SwModule::InsertEnv(SfxRequest&)
SwModule::InsertLab(SfxRequest&, bool)
SwModule::InsertRedlineAuthor(rtl::OUString const&)
SwModule::IsIgnorePieces() const
SwModule::IsInsTableAlignNum(bool) const
SwModule::IsInsTableChangeNumFormat(bool) const
SwModule::IsInsTableFormatNum(bool) const
SwModule::IsSplitVerticalByDefault(bool) const
SwModule::IsUseRsid() const
SwModule::Notify(SfxBroadcaster&, SfxHint const&)
SwModule::RegisterInterface(SfxModule const*)
SwModule::RemoveAttrPool()
SwModule::SetRedlineAuthor(rtl::OUString const&)
SwModule::SetSplitVerticalByDefault(bool, bool)
SwModule::ShowDBObj(SwView const&, SwDBData const&)
SwModule::StateOther(SfxItemSet&)
SwModule::SwModule(SfxObjectFactory*, SfxObjectFactory*, SfxObjectFactory*)
SwModule::~SwModule()
SwModuleOptions::ConvertWordDelimiter(rtl::OUString const&, bool)
SwModuleOptions::SwModuleOptions()
SwNoTextNode::CreateContour()
SwNoTextNode::GetContour(tools::PolyPolygon&) const
SwNoTextNode::GetContourAPI(tools::PolyPolygon&) const
SwNoTextNode::IsPixelContour() const
SwNoTextNode::MakeFrame(SwFrame*)
SwNoTextNode::NewAttrSet(SwAttrPool&)
SwNoTextNode::RestorePersistentData()
SwNoTextNode::SavePersistentData()
SwNoTextNode::SetContourAPI(tools::PolyPolygon const*)
SwNoTextNode::SetDescription(rtl::OUString const&)
SwNoTextNode::SetTitle(rtl::OUString const&)
SwNoTextNode::SwNoTextNode(SwNodeIndex const&, SwNodeType, SwGrfFormatColl*, SwAttrSet const*)
SwNoTextNode::~SwNoTextNode()
SwNode::AddAnchoredFly(SwFrameFormat*)
SwNode::FindOutlineNodeOfLevel(unsigned char, SwRootFrame const*) const
SwNode::GetSectionLevel() const
SwNode::IsInProtectSect() const
SwNode::IsInRedlines() const
SwNode::IsInVisibleArea(SwViewShell const*) const
SwNode::IsProtect() const
SwNode::RemoveAnchoredFly(SwFrameFormat*)
SwNode::SwNode(SwNodeIndex const&, SwNodeType)
SwNode::SwNode(SwNodes&, o3tl::strong_int<int, Tag_SwNodeOffset>, SwNodeType)
SwNode::dumpAsXml(_xmlTextWriter*) const
SwNode::getIDocumentContentOperations()
SwNode::getIDocumentDeviceAccess() const
SwNode::getIDocumentDrawModelAccess() const
SwNode::getIDocumentFieldsAccess()
SwNode::getIDocumentFieldsAccess() const
SwNode::getIDocumentLayoutAccess()
SwNode::getIDocumentLayoutAccess() const
SwNode::getIDocumentLinksAdministration()
SwNode::getIDocumentLinksAdministration() const
SwNode::getIDocumentListItems()
SwNode::getIDocumentMarkAccess() const
SwNode::getIDocumentRedlineAccess() const
SwNode::getIDocumentSettingAccess() const
SwNode::getIDocumentStyleAccess()
SwNode::getIDocumentStylePoolAccess() const
SwNode::~SwNode()
SwNodes::ChgNode(SwNodeIndex const&, o3tl::strong_int<int, Tag_SwNodeOffset>, SwNodeIndex&, bool)
SwNodes::CopyNodes(SwNodeRange const&, SwNodeIndex const&, bool, bool) const
SwNodes::DelDummyNodes(SwNodeRange const&)
SwNodes::DelNodes(SwNodeIndex const&, o3tl::strong_int<int, Tag_SwNodeOffset>)
SwNodes::Delete(SwNodeIndex const&, o3tl::strong_int<int, Tag_SwNodeOffset>)
SwNodes::DocumentSectionEndNode(SwNode*) const
SwNodes::DocumentSectionStartNode(SwNode*) const
SwNodes::ExpandRangeForTableBox(SwNodeRange const&)
SwNodes::FindPrvNxtFrameNode(SwNodeIndex&, SwNode const*) const
SwNodes::ForEach(SwNodeIndex const&, SwNodeIndex const&, bool (*)(SwNode*, void*), void*)
SwNodes::ForEach(o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, bool (*)(SwNode*, void*), void*)
SwNodes::GetSectionLevel(SwNodeIndex const&)
SwNodes::GoEndOfSection(SwNodeIndex*)
SwNodes::GoNextSection(SwNodeIndex*, bool, bool) const
SwNodes::GoPrevSection(SwNodeIndex*, bool, bool)
SwNodes::GoPrevious(SwNodeIndex*)
SwNodes::GoStartOfSection(SwNodeIndex*)
SwNodes::InsertNode(SwNode*, SwNodeIndex const&)
SwNodes::InsertNode(SwNode*, o3tl::strong_int<int, Tag_SwNodeOffset>)
SwNodes::InsertTable(SwNodeIndex const&, unsigned short, SwTextFormatColl*, unsigned short, unsigned short, SwTextFormatColl*, SwAttrSet const*)
SwNodes::InsertTextSection(SwNodeIndex const&, SwSectionFormat&, SwSectionData const&, SwTOXBase const*, SwNodeIndex const*, bool, bool)
SwNodes::MakeEmptySection(SwNodeIndex const&, SwStartNodeType)
SwNodes::MakeGrfNode(SwNodeIndex const&, GraphicObject const&, SwGrfFormatColl*)
SwNodes::MakeGrfNode(SwNodeIndex const&, rtl::OUString const&, rtl::OUString const&, Graphic const*, SwGrfFormatColl*, SwAttrSet const*)
SwNodes::MakeOLENode(SwNodeIndex const&, rtl::OUString const&, long, SwGrfFormatColl*, SwAttrSet const*)
SwNodes::MakeOLENode(SwNodeIndex const&, svt::EmbeddedObjectRef const&, SwGrfFormatColl*)
SwNodes::MergeTable(SwNodeIndex const&, bool, unsigned short)
SwNodes::MoveNodes(SwNodeRange const&, SwNodes&, SwNodeIndex const&, bool)
SwNodes::MoveRange(SwPaM&, SwPosition&, SwNodes&)
SwNodes::RemoveNode(o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, bool)
SwNodes::SectionDown(SwNodeRange*, SwStartNodeType)
SwNodes::SectionUp(SwNodeRange*)
SwNodes::SectionUpDown(SwNodeIndex const&, SwNodeIndex const&)
SwNodes::SplitTable(SwNodeIndex const&, bool, bool)
SwNodes::SwNodes(SwDoc&)
SwNodes::TableToText(SwNodeRange const&, char16_t, SwUndoTableToText*)
SwNodes::TextToTable(SwNodeRange const&, char16_t, SwTableFormat*, SwTableLineFormat*, SwTableBoxFormat*, SwTextFormatColl*, SwUndoTextToTable*)
SwNodes::TextToTable(std::vector<std::vector<SwNodeRange, std::allocator<SwNodeRange> >, std::allocator<std::vector<SwNodeRange, std::allocator<SwNodeRange> > > > const&, SwTableFormat*, SwTableLineFormat*, SwTableBoxFormat*)
SwNodes::UndoTableToText(o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, std::vector<std::unique_ptr<SwTableToTextSave, std::default_delete<SwTableToTextSave> >, std::allocator<std::unique_ptr<SwTableToTextSave, std::default_delete<SwTableToTextSave> > > > const&)
SwNodes::UpdateOutlineIdx(SwNode const&)
SwNodes::UpdateOutlineNode(SwNode&)
SwNodes::dumpAsXml(_xmlTextWriter*) const
SwNodes::~SwNodes()
SwNumFormat::GetCharFormatName() const
SwNumFormat::GetGraphicOrientation() const
SwNumFormat::IsEnumeration() const
SwNumFormat::IsItemize() const
SwNumFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwNumFormat::SwNumFormat()
SwNumFormat::SwNumFormat(SvxNumberFormat const&, SwDoc*)
SwNumFormat::SwNumFormat(SwNumFormat const&)
SwNumFormat::operator=(SwNumFormat const&)
SwNumFormat::~SwNumFormat()
SwNumFormatBase::Init()
SwNumFormatBase::SwNumFormatBase()
SwNumFormatBase::clear()
SwNumFormatTreeView::Init()
SwNumFormatTreeView::SwNumFormatTreeView(std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >)
SwNumRule::AddParagraphStyle(SwTextFormatColl&)
SwNumRule::AddTextNode(SwTextNode&)
SwNumRule::ChangeIndent(int)
SwNumRule::CheckCharFormats(SwDoc&)
SwNumRule::CopyNumRule(SwDoc&, SwNumRule const&)
SwNumRule::GetBullIndent(unsigned char)
SwNumRule::GetNumIndent(unsigned char)
SwNumRule::GetOutlineRuleName()
SwNumRule::GetParagraphStyleListSize() const
SwNumRule::GetTextNodeList(std::vector<SwTextNode*, std::allocator<SwTextNode*> >&) const
SwNumRule::GetTextNodeListSize() const
SwNumRule::MakeNumString(SwNodeNum const&, bool) const
SwNumRule::MakeParagraphStyleListString() const
SwNumRule::MakeRefNumString(SwNodeNum const&, bool, int) const
SwNumRule::MakeSvxNumRule() const
SwNumRule::RemoveParagraphStyle(SwTextFormatColl&)
SwNumRule::RemoveTextNode(SwTextNode&)
SwNumRule::Reset(rtl::OUString const&)
SwNumRule::Set(unsigned short, SwNumFormat const*)
SwNumRule::SetCountPhantoms(bool)
SwNumRule::SetGrabBagItem(com::sun::star::uno::Any const&)
SwNumRule::SetIndent(short, unsigned short)
SwNumRule::SetIndentOfFirstListLevelAndChangeOthers(short)
SwNumRule::SetInvalidRule(bool)
SwNumRule::SetName(rtl::OUString const&, IDocumentListsAccess&)
SwNumRule::SetNumRuleMap(std::unordered_map<rtl::OUString, SwNumRule*, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, SwNumRule*> > >*)
SwNumRule::SetSvxRule(SvxNumRule const&, SwDoc*)
SwNumRule::SwNumRule(SwNumRule const&)
SwNumRule::SwNumRule(rtl::OUString const&, SvxNumberFormat::SvxNumPositionAndSpaceMode, SwNumRuleType)
SwNumRule::Validate(SwDoc const&)
SwNumRule::dumpAsXml(_xmlTextWriter*) const
SwNumRule::~SwNumRule()
SwNumRuleItem::Clone(SfxItemPool*) const
SwNumRuleItem::CreateDefault()
SwNumRuleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwNumRuleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwNumRuleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwNumRuleItem::dumpAsXml(_xmlTextWriter*) const
SwNumRuleItem::operator==(SfxPoolItem const&) const
SwNumRulesWithName::GetNumFormat(unsigned long, SwNumFormat const*&, rtl::OUString const*&) const
SwNumRulesWithName::SetNumFormat(unsigned long, SwNumFormat const&, rtl::OUString const&)
SwNumRulesWithName::SwNumRulesWithName(SwNumRule const&, rtl::OUString const&)
SwNumRulesWithName::SwNumRulesWithName(SwNumRulesWithName const&)
SwNumRulesWithName::operator=(SwNumRulesWithName const&)
SwNumRulesWithName::~SwNumRulesWithName()
SwNumberingTypeListBox::SwNumberingTypeListBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SwNumberingTypeListBox::~SwNumberingTypeListBox()
SwOLENode::BreakFileLink_Impl()
SwOLENode::CheckFileLink_Impl()
SwOLENode::DisconnectFileLink_Impl()
SwOLENode::GetNewReplacement()
SwOLENode::IsChart() const
SwOLENode::IsInGlobalDocSection() const
SwOLENode::IsOLEObjectDeleted() const
SwOLENode::MakeCopy(SwDoc&, SwNodeIndex const&, bool) const
SwOLENode::RestorePersistentData()
SwOLENode::SavePersistentData()
SwOLENode::SetChanged()
SwOLENode::SwOLENode(SwNodeIndex const&, rtl::OUString const&, long, SwGrfFormatColl*, SwAttrSet const*)
SwOLENode::SwOLENode(SwNodeIndex const&, svt::EmbeddedObjectRef const&, SwGrfFormatColl*, SwAttrSet const*)
SwOLENode::UpdateLinkURL_Impl()
SwOLENode::dumpAsXml(_xmlTextWriter*) const
SwOLENode::~SwOLENode()
SwOLEObj::GetDescription()
SwOLEObj::GetStyleString()
SwOLEObj::IsOleRef() const
SwOLEObj::IsProtected() const
SwOLEObj::IsProtectedHdl(LinkParamNone*)
SwOLEObj::LinkStubIsProtectedHdl(void*, LinkParamNone*)
SwOLEObj::SetNode(SwOLENode*)
SwOLEObj::SwOLEObj(rtl::OUString const&, long)
SwOLEObj::SwOLEObj(svt::EmbeddedObjectRef const&)
SwOLEObj::UnloadObject()
SwOLEObj::UnloadObject(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, SwDoc const*, long)
SwOLEObj::dumpAsXml(_xmlTextWriter*) const
SwOLEObj::resetBufferedData()
SwOLEObj::tryToGetChartContentAsPrimitive2DSequence(basegfx::B2DRange&, bool)
SwOLEObj::~SwOLEObj()
SwOneExampleFrame::Command(CommandEvent const&)
SwOneExampleFrame::CreatePopup(Point const&)
SwOneExampleFrame::Paint(OutputDevice&, tools::Rectangle const&)
SwOneExampleFrame::PopupHdl(std::basic_string_view<char, std::char_traits<char> >)
SwOneExampleFrame::SetDrawingArea(weld::DrawingArea*)
SwOneExampleFrame::SwOneExampleFrame(unsigned int, Link<SwOneExampleFrame&, void> const*, rtl::OUString const*)
SwOneExampleFrame::~SwOneExampleFrame()
SwPaM::InvalidatePaM()
SwPaM::Normalize(bool)
SwPaM::SwPaM(SwNode const&, SwNode const&, o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, SwPaM*)
SwPaM::SwPaM(SwNode const&, int, SwNode const&, int, SwPaM*)
SwPaM::SwPaM(SwNode const&, int, SwPaM*)
SwPaM::SwPaM(SwNodeIndex const&, SwNodeIndex const&, o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, SwPaM*)
SwPaM::SwPaM(SwNodeIndex const&, int, SwNodeIndex const&, int, SwPaM*)
SwPaM::SwPaM(SwNodeIndex const&, int, SwPaM*)
SwPaM::SwPaM(SwPaM const&, SwPaM*)
SwPaM::SwPaM(SwPosition const&, SwPaM*)
SwPaM::SwPaM(SwPosition const&, SwPosition const&, SwPaM*)
SwPaM::dumpAsXml(_xmlTextWriter*) const
SwPaM::~SwPaM()
SwPageDesc::GetByName(SwDoc&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwPageDesc::GetInfo(SfxPoolItem&) const
SwPageDesc::GetLeftFormat(bool)
SwPageDesc::GetRegisterFormatColl() const
SwPageDesc::GetRightFormat(bool)
SwPageDesc::HasStashedFormat(bool, bool, bool)
SwPageDesc::RegisterChange()
SwPageDesc::RemoveStashedFormat(bool, bool, bool)
SwPageDesc::SetName(rtl::OUString const&)
SwPageDesc::SetRegisterFormatColl(SwTextFormatColl const*)
SwPageDesc::StashFrameFormat(SwFrameFormat const&, bool, bool, bool)
SwPageDesc::SwClientNotify(SwModify const&, SfxHint const&)
SwPageDesc::SwPageDesc(SwPageDesc const&)
SwPageDesc::dumpAsXml(_xmlTextWriter*) const
SwPageDesc::~SwPageDesc()
SwPageFootnoteInfo::SwPageFootnoteInfo()
SwPageFootnoteInfo::SwPageFootnoteInfo(SwPageFootnoteInfo const&)
SwPageFootnoteInfo::operator=(SwPageFootnoteInfo const&)
SwPageFootnoteInfo::operator==(SwPageFootnoteInfo const&) const
SwPageFootnoteInfoItem::Clone(SfxItemPool*) const
SwPageFootnoteInfoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwPageFootnoteInfoItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwPageFootnoteInfoItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwPageFootnoteInfoItem::SwPageFootnoteInfoItem(SwPageFootnoteInfo const&)
SwPageFootnoteInfoItem::~SwPageFootnoteInfoItem()
SwPageGridExample::DrawPage(OutputDevice&, Point const&, bool, bool)
SwPageGridExample::SwPageGridExample()
SwPageNumberField::ChangeExpansion(unsigned short, unsigned short)
SwPageNumberField::Copy() const
SwPageNumberField::ExpandImpl(SwRootFrame const*) const
SwPageNumberField::GetPar2() const
SwPageNumberField::GetSubType() const
SwPageNumberField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwPageNumberField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwPageNumberField::SetPar2(rtl::OUString const&)
SwPageNumberField::SwPageNumberField(SwPageNumberFieldType*, unsigned short, unsigned int, short, unsigned short, unsigned short)
SwPagePreview::ApplyAccessibilityOptions(SvtAccessibilityOptions const&)
SwPagePreview::CreateInstance(SfxViewFrame*, SfxViewShell*)
SwPagePreview::DocSzChgd(Size const&)
SwPagePreview::EnableHScrollbar(bool)
SwPagePreview::EnableVScrollbar(bool)
SwPagePreview::Execute(SfxRequest&)
SwPagePreview::GetDocShell()
SwPagePreview::GetInterface() const
SwPagePreview::GetState(SfxItemSet&)
SwPagePreview::GetStaticInterface()
SwPagePreview::HandleWheelCommands(CommandEvent const&)
SwPagePreview::InitFactory()
SwPagePreview::InitInterface_Impl()
SwPagePreview::InnerResizePixel(Point const&, Size const&, bool)
SwPagePreview::OuterResizePixel(Point const&, Size const&)
SwPagePreview::RegisterFactory(o3tl::strong_int<unsigned short, SfxInterfaceIdTag>)
SwPagePreview::RegisterInterface(SfxModule const*)
SwPagePreview::ScrollDocSzChg()
SwPagePreview::ScrollViewSzChg()
SwPagePreview::SetVScrollbarThumbPos(unsigned short)
SwPagePreview::SetVisArea(tools::Rectangle const&)
SwPagePreview::SetZoom(SvxZoomType, unsigned short)
SwPagePreview::ShowHScrollbar(bool)
SwPagePreview::ShowVScrollbar(bool)
SwPagePreview::StateUndo(SfxItemSet&)
SwPagePreview::SwPagePreview(SfxViewFrame*, SfxViewShell*)
SwPagePreview::~SwPagePreview()
SwPercentField::SwPercentField(std::unique_ptr<weld::MetricSpinButton, std::default_delete<weld::MetricSpinButton> >)
SwPosition::SwPosition(SwContentNode&, int)
SwPosition::SwPosition(SwNode const&)
SwPosition::SwPosition(SwNodeIndex const&)
SwPosition::SwPosition(SwNodeIndex const&, SwIndex const&)
SwPosition::dumpAsXml(_xmlTextWriter*) const
SwPosition::operator>=(SwPosition const&) const
SwPostItField::Copy() const
SwPostItField::ExpandImpl(SwRootFrame const*) const
SwPostItField::GetDescription() const
SwPostItField::GetNumberOfParagraphs() const
SwPostItField::GetPar2() const
SwPostItField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwPostItField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwPostItField::SetName(rtl::OUString const&)
SwPostItField::SetPar1(rtl::OUString const&)
SwPostItField::SetPar2(rtl::OUString const&)
SwPostItField::SetResolved(bool)
SwPostItField::SwPostItField(SwPostItFieldType*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, DateTime const&, bool, unsigned int)
SwPostItField::ToggleResolved()
SwPostItField::dumpAsXml(_xmlTextWriter*) const
SwPostItField::~SwPostItField()
SwPtrItem::Clone(SfxItemPool*) const
SwPtrItem::SwPtrItem(unsigned short, void*)
SwPtrItem::operator==(SfxPoolItem const&) const
SwRDFHelper::addStatement(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::addTextNodeStatement(rtl::OUString const&, rtl::OUString const&, SwTextNode&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::clearStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::cloneStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::getGraphNames(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&)
SwRDFHelper::getGraphNames(com::sun::star::uno::Reference<com::sun::star::rdf::XDocumentMetadataAccess> const&, com::sun::star::uno::Reference<com::sun::star::rdf::XURI> const&)
SwRDFHelper::getStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::rdf::XURI> > const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::getStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::hasMetadataGraph(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&)
SwRDFHelper::removeStatement(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::removeTextNodeStatement(rtl::OUString const&, SwTextNode&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::updateTextNodeStatement(rtl::OUString const&, rtl::OUString const&, SwTextNode&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwRangeRedline::CalcStartEnd(o3tl::strong_int<int, Tag_SwNodeOffset>, int&, int&) const
SwRangeRedline::CallDisplayFunc(unsigned long)
SwRangeRedline::CanCombine(SwRangeRedline const&) const
SwRangeRedline::CopyToSection()
SwRangeRedline::DelCopyOfSection(unsigned long)
SwRangeRedline::GetComment(unsigned short) const
SwRangeRedline::GetStackCount() const
SwRangeRedline::GetTimeStamp(unsigned short) const
SwRangeRedline::HasValidRange() const
SwRangeRedline::Hide(unsigned short, unsigned long, bool)
SwRangeRedline::InvalidateRange(SwRangeRedline::Invalidation)
SwRangeRedline::MaybeNotifyRedlinePositionModification(long)
SwRangeRedline::MoveFromSection(unsigned long)
SwRangeRedline::MoveToSection()
SwRangeRedline::PopData()
SwRangeRedline::PushData(SwRangeRedline const&, bool)
SwRangeRedline::SetContentIdx(SwNodeIndex const*)
SwRangeRedline::SetEnd(SwPosition const&, SwPosition*)
SwRangeRedline::SetStart(SwPosition const&, SwPosition*)
SwRangeRedline::Show(unsigned short, unsigned long, bool)
SwRangeRedline::ShowOriginal(unsigned short, unsigned long, bool)
SwRangeRedline::SwRangeRedline(RedlineType, SwPaM const&)
SwRangeRedline::SwRangeRedline(SwRangeRedline const&)
SwRangeRedline::SwRangeRedline(SwRedlineData const&, SwPaM const&)
SwRangeRedline::SwRangeRedline(SwRedlineData const&, SwPosition const&)
SwRangeRedline::dumpAsXml(_xmlTextWriter*) const
SwRangeRedline::operator<(SwRangeRedline const&) const
SwRangeRedline::~SwRangeRedline()
SwReader::HasGlossaries(Reader const&)
SwReader::SwReader(SfxMedium&, rtl::OUString const&, SwDoc*)
SwReader::SwReader(SfxMedium&, rtl::OUString const&, SwPaM&)
SwReader::SwReader(SvStream&, rtl::OUString const&, rtl::OUString const&, SwPaM&)
SwReader::SwReader(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, SwPaM&)
SwRect::AddBottom(long)
SwRect::AddHeight(long)
SwRect::AddLeft(long)
SwRect::AddRight(long)
SwRect::AddTop(long)
SwRect::AddWidth(long)
SwRect::Bottom_() const
SwRect::Bottom_(long)
SwRect::GetBottomDistance(long) const
SwRect::GetLeftDistance(long) const
SwRect::GetRightDistance(long) const
SwRect::GetTopDistance(long) const
SwRect::Height_() const
SwRect::Height_(long)
SwRect::Intersection(SwRect const&)
SwRect::Intersection_(SwRect const&)
SwRect::Justify()
SwRect::Left_() const
SwRect::Left_(long)
SwRect::OverStepBottom(long) const
SwRect::OverStepLeft(long) const
SwRect::OverStepRight(long) const
SwRect::OverStepTop(long) const
SwRect::Right_() const
SwRect::Right_(long)
SwRect::SetBottomAndHeight(long, long)
SwRect::SetLeftAndWidth(long, long)
SwRect::SetLowerLeftCorner(Point const&)
SwRect::SetPosX(long)
SwRect::SetPosY(long)
SwRect::SetRightAndWidth(long, long)
SwRect::SetTopAndHeight(long, long)
SwRect::SetUpperLeftCorner(Point const&)
SwRect::SetUpperRightCorner(Point const&)
SwRect::Size_() const
SwRect::SubLeft(long)
SwRect::SubTop(long)
SwRect::SwRect(tools::Rectangle const&)
SwRect::SwappedSize() const
SwRect::Top_() const
SwRect::Top_(long)
SwRect::Union(SwRect const&)
SwRect::Width_() const
SwRect::Width_(long)
SwRect::dumpAsXmlAttributes(_xmlTextWriter*) const
SwRedlineAcceptDlg::Init(unsigned long)
SwRedlineAcceptDlg::LinkStubFilterChangedHdl(void*, SvxTPFilter*)
SwRedlineAcceptDlg::SwRedlineAcceptDlg(std::shared_ptr<weld::Window> const&, weld::Builder*, weld::Container*, bool)
SwRedlineAcceptDlg::~SwRedlineAcceptDlg()
SwRedlineData::CanCombine(SwRedlineData const&) const
SwRedlineData::GetDescr() const
SwRedlineData::SetExtraData(SwRedlineExtraData const*)
SwRedlineData::SwRedlineData(RedlineType, unsigned long)
SwRedlineData::SwRedlineData(RedlineType, unsigned long, DateTime const&, rtl::OUString const&, SwRedlineData*)
SwRedlineData::SwRedlineData(SwRedlineData const&, bool)
SwRedlineData::~SwRedlineData()
SwRedlineExtraData::Reject(SwPaM&) const
SwRedlineExtraData::operator==(SwRedlineExtraData const&) const
SwRedlineExtraData::~SwRedlineExtraData()
SwRedlineExtraData_FormatColl::CreateNew() const
SwRedlineExtraData_FormatColl::Reject(SwPaM&) const
SwRedlineExtraData_FormatColl::SetItemSet(SfxItemSet const&)
SwRedlineExtraData_FormatColl::SwRedlineExtraData_FormatColl(rtl::OUString const&, unsigned short, SfxItemSet const*, bool)
SwRedlineExtraData_FormatColl::operator==(SwRedlineExtraData const&) const
SwRedlineExtraData_FormatColl::~SwRedlineExtraData_FormatColl()
SwRewriter::Apply(rtl::OUString const&) const
SwRewriter::GetPlaceHolder(SwUndoArg)
SwRewriter::SwRewriter()
SwRootFrame::AllAddPaintRect() const
SwRootFrame::AllCheckPageDescs() const
SwRootFrame::AllInvalidateAutoCompleteWords() const
SwRootFrame::AllInvalidateSmartTagsOrSpelling(bool) const
SwRootFrame::AllRemoveFootnotes()
SwRootFrame::AssertFlyPages()
SwRootFrame::AssertPageFlys(SwPageFrame*)
SwRootFrame::CalcFrameRects(SwShellCursor&)
SwRootFrame::CheckFootnotePageDescs(bool)
SwRootFrame::CheckViewLayout(SwViewOption const*, SwRect const*)
SwRootFrame::ChgSize(Size const&)
SwRootFrame::DeRegisterShell(SwViewShell*)
SwRootFrame::DeleteEmptySct_()
SwRootFrame::DestroyImpl()
SwRootFrame::EndAllAction(bool)
SwRootFrame::FillSelection(SwSelectionList&, SwRect const&) const
SwRootFrame::FlushVout()
SwRootFrame::GetCurrPage(SwPaM const*) const
SwRootFrame::GetNextPrevContentPos(Point const&, bool) const
SwRootFrame::GetPageAtPos(Point const&, Size const*, bool) const
SwRootFrame::GetPageByPageNum(unsigned short) const
SwRootFrame::GetPagePos(unsigned short) const
SwRootFrame::GrowFrame(long, bool, bool)
SwRootFrame::HasSameRect(SwRect const&)
SwRootFrame::ImplCalcBrowseWidth()
SwRootFrame::ImplInvalidateBrowseWidth()
SwRootFrame::Init(SwFrameFormat*)
SwRootFrame::InsertEmptySct(SwSectionFrame*)
SwRootFrame::InvalidateAllContent(SwInvalidateFlags)
SwRootFrame::InvalidateAllObjPos()
SwRootFrame::IsBetweenPages(Point const&) const
SwRootFrame::IsDummyPage(unsigned short) const
SwRootFrame::IsLeftToRightViewLayout() const
SwRootFrame::MakeAll(OutputDevice*)
SwRootFrame::MakeTableCursors(SwTableCursor&)
SwRootFrame::RemoveFootnotes(SwPageFrame*, bool, bool)
SwRootFrame::RemoveFromList_(SwSectionFrame*)
SwRootFrame::RemoveMasterObjs(SdrPage*)
SwRootFrame::RemovePage(SwPageFrame**, SwRemoveResult)
SwRootFrame::RemoveSuperfluous()
SwRootFrame::SetCurrPage(SwCursor*, unsigned short)
SwRootFrame::SetFieldmarkMode(sw::FieldmarkMode)
SwRootFrame::SetHideRedlines(bool)
SwRootFrame::ShrinkFrame(long, bool, bool)
SwRootFrame::StartAllAction()
SwRootFrame::SwRootFrame(SwFrameFormat*, SwViewShell*)
SwRootFrame::UnoRemoveAllActions()
SwRootFrame::UnoRestoreAllActions()
SwRootFrame::UpdateFootnoteNums()
SwRootFrame::~SwRootFrame()
SwScriptField::Copy() const
SwScriptField::ExpandImpl(SwRootFrame const*) const
SwScriptField::GetDescription() const
SwScriptField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwScriptField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwScriptField::SetPar1(rtl::OUString const&)
SwScriptField::SetPar2(rtl::OUString const&)
SwScriptField::SwScriptField(SwScriptFieldType*, rtl::OUString const&, rtl::OUString const&, bool)
SwSection::BreakLink()
SwSection::CalcHiddenFlag() const
SwSection::CreateLink(LinkCreateType)
SwSection::DataEquals(SwSectionData const&) const
SwSection::GetLinkFileName() const
SwSection::IsEditInReadonly() const
SwSection::MakeChildLinksVisible(SwSectionNode const&)
SwSection::SetCondHidden(bool)
SwSection::SetEditInReadonly(bool)
SwSection::SetHidden(bool)
SwSection::SetLinkFileName(rtl::OUString const&)
SwSection::SetProtect(bool)
SwSection::SetRefObject(SwServerObject*)
SwSection::SetSectionData(SwSectionData const&)
SwSection::SwClientNotify(SwModify const&, SfxHint const&)
SwSection::SwSection(SectionType, rtl::OUString const&, SwSectionFormat&)
SwSection::~SwSection()
SwSectionData::SwSectionData(SectionType, rtl::OUString const&)
SwSectionData::SwSectionData(SwSection const&)
SwSectionData::SwSectionData(SwSectionData const&)
SwSectionData::operator=(SwSectionData const&)
SwSectionData::operator==(SwSectionData const&) const
SwSectionFormat::DelFrames()
SwSectionFormat::GetGlobalDocSection() const
SwSectionFormat::GetInfo(SfxPoolItem&) const
SwSectionFormat::GetRegistry()
SwSectionFormat::IsInClipboard() const
SwSectionFormat::IsInContent() const
SwSectionFormat::IsInUndo() const
SwSectionFormat::MakeFrames()
SwSectionFormat::MakeUnoObject()
SwSectionFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwSectionFormat::SwSectionFormat(SwFrameFormat*, SwDoc*)
SwSectionFormat::dumpAsXml(_xmlTextWriter*) const
SwSectionFormat::supportsFullDrawingLayerFillAttributeSet() const
SwSectionFormat::~SwSectionFormat()
SwSeqFieldList::InsertSort(SeqFieldLstElem)
SwSetExpField::ChgExpStr(rtl::OUString const&, SwRootFrame const*)
SwSetExpField::Copy() const
SwSetExpField::ExpandImpl(SwRootFrame const*) const
SwSetExpField::GetExpStr(SwRootFrame const*) const
SwSetExpField::GetValue(SwRootFrame const*) const
SwSetExpField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwSetExpField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwSetExpField::SetFormatField(SwFormatField&)
SwSetExpField::SetValue(double const&)
SwSetExpField::SwSetExpField(SwSetExpFieldType*, rtl::OUString const&, unsigned long)
SwSetExpFieldType::Copy() const
SwSetExpFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwSetExpFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwSetExpFieldType::SetChapter(SwSetExpField&, SwNode const&, SwRootFrame const*)
SwSetExpFieldType::SetSeqFormat(unsigned long)
SwSetExpFieldType::SetSeqRefNo(SwSetExpField&)
SwSetExpFieldType::SwClientNotify(SwModify const&, SfxHint const&)
SwSetExpFieldType::SwSetExpFieldType(SwDoc*, rtl::OUString const&, unsigned short)
SwShadowCursorItem::Clone(SfxItemPool*) const
SwShadowCursorItem::FillViewOptions(SwViewOption&) const
SwShadowCursorItem::SwShadowCursorItem()
SwShadowCursorItem::SwShadowCursorItem(SwViewOption const&)
SwShadowCursorItem::operator==(SfxPoolItem const&) const
SwShellCursor::Create(SwPaM*) const
SwShellCursor::FillRects()
SwShellCursor::FillStartEnd(SwRect&, SwRect&) const
SwShellCursor::Hide()
SwShellCursor::Invalidate(SwRect const&)
SwShellCursor::IsAtValidPos(bool) const
SwShellCursor::IsReadOnlyAvailable() const
SwShellCursor::MaxReplaceArived()
SwShellCursor::SaveTableBoxContent(SwPosition const*)
SwShellCursor::SetMark()
SwShellCursor::Show(SfxViewShell const*)
SwShellCursor::SwShellCursor(SwCursorShell const&, SwPosition const&)
SwShellCursor::SwShellCursor(SwCursorShell const&, SwPosition const&, Point const&, SwPaM*)
SwShellCursor::SwShellCursor(SwShellCursor&)
SwShellCursor::UpDown(bool, unsigned short)
SwShellCursor::~SwShellCursor()
SwSortKey::SwSortKey()
SwSortKey::SwSortKey(unsigned short, rtl::OUString const&, SwSortOrder)
SwSortOptions::SwSortOptions()
SwSortOptions::SwSortOptions(SwSortOptions const&)
SwSortOptions::~SwSortOptions()
SwSortedObjs::Contains(SwAnchoredObject const&) const
SwSortedObjs::Insert(SwAnchoredObject&)
SwSortedObjs::ListPosOf(SwAnchoredObject const&) const
SwSortedObjs::Remove(SwAnchoredObject&)
SwSortedObjs::SwSortedObjs()
SwSortedObjs::Update(SwAnchoredObject&)
SwSortedObjs::UpdateAll()
SwSortedObjs::is_sorted() const
SwSortedObjs::~SwSortedObjs()
SwSpellPopup::Execute(tools::Rectangle const&, vcl::Window*)
SwSpellPopup::Execute(unsigned short)
SwSpellPopup::InitItemCommands(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwSpellPopup::SwSpellPopup(SwWrtShell*, com::sun::star::linguistic2::ProofreadingResult const&, int, com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&)
SwSpellPopup::SwSpellPopup(SwWrtShell*, com::sun::star::uno::Reference<com::sun::star::linguistic2::XSpellAlternatives> const&, rtl::OUString const&)
SwSpellPopup::checkRedline()
SwSpellPopup::fillLangPopupMenu(PopupMenu*, unsigned short, com::sun::star::uno::Sequence<rtl::OUString> const&, SwWrtShell*, std::map<short, rtl::OUString, std::less<short>, std::allocator<std::pair<short const, rtl::OUString> > >&)
SwSpellPopup::~SwSpellPopup()
SwStdFontConfig::ImplCommit()
SwStdFontConfig::IsFontDefault(unsigned short) const
SwStdFontConfig::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwStdFontConfig::SwStdFontConfig()
SwStdFontConfig::~SwStdFontConfig()
SwStyleNameMapper::GetProgName(unsigned short, rtl::OUString const&)
SwTOXBase::CopyTOXBase(SwDoc*, SwTOXBase const&)
SwTOXBase::GetAttrSet() const
SwTOXBase::IsTOXBaseInReadonly() const
SwTOXBase::SetBookmarkName(rtl::OUString const&)
SwTOXBase::SetTitle(rtl::OUString const&)
SwTOXBase::SwTOXBase(SwTOXBase const&, SwDoc*)
SwTOXBase::SwTOXBase(SwTOXType const*, SwForm const&, SwTOXElement, rtl::OUString const&)
SwTOXBase::operator=(SwTOXBase const&)
SwTOXBase::~SwTOXBase()
SwTOXMark::Clone(SfxItemPool*) const
SwTOXMark::InvalidateTOXMark()
SwTOXMark::Notify(SfxHint const&)
SwTOXMark::RegisterToTOXType(SwTOXType&)
SwTOXMark::SwTOXMark()
SwTOXMark::SwTOXMark(SwTOXMark const&)
SwTOXMark::SwTOXMark(SwTOXType const*)
SwTOXMark::operator==(SfxPoolItem const&) const
SwTOXMark::~SwTOXMark()
SwTOXMgr::SwTOXMgr(SwWrtShell*)
SwTabCols::Insert(long, long, long, bool, unsigned long)
SwTabCols::Remove(unsigned long, unsigned long)
SwTabCols::SwTabCols(SwTabCols const&)
SwTabCols::SwTabCols(unsigned short)
SwTabCols::operator=(SwTabCols const&)
SwTable::AdjustWidths(long, long)
SwTable::CanConvertSubtables() const
SwTable::CheckRowSpan(SwTableLine*&, bool) const
SwTable::CleanUpBottomRowSpan(unsigned short)
SwTable::CleanUpTopRowSpan(unsigned short)
SwTable::CollectBoxSelection(SwPaM const&) const
SwTable::ConvertSubtableBox(unsigned short, unsigned short)
SwTable::ConvertSubtables()
SwTable::CopyHeadlineIntoTable(SwTableNode&)
SwTable::CreateSelection(SwNode const*, SwNode const*, SwSelBoxes&, SwTable::SearchType, bool) const
SwTable::CreateSelection(SwPaM const&, SwSelBoxes&, SwTable::SearchType, bool) const
SwTable::DeleteSel(SwDoc*, SwSelBoxes const&, SwSelBoxes const*, SwUndo*, bool, bool)
SwTable::ExpandColumnSelection(SwSelBoxes&, long&, long&) const
SwTable::ExpandSelection(SwSelBoxes&) const
SwTable::FindSuperfluousRows_(SwSelBoxes&, SwTableLine*, SwTableLine*)
SwTable::GCLines()
SwTable::GetBoxNum(rtl::OUString&, bool, bool)
SwTable::GetInfo(SfxPoolItem&) const
SwTable::GetTableBox(o3tl::strong_int<int, Tag_SwNodeOffset>)
SwTable::HasDeletedRow() const
SwTable::InsNewTable(SwTable const&, SwSelBoxes const&, SwUndoTableCpyTable*)
SwTable::InsTable(SwTable const&, SwNodeIndex const&, SwUndoTableCpyTable*)
SwTable::InsTable(SwTable const&, SwSelBoxes const&, SwUndoTableCpyTable*)
SwTable::InsertCol(SwDoc&, SwSelBoxes const&, unsigned short, bool)
SwTable::InsertRow(SwDoc*, SwSelBoxes const&, unsigned short, bool)
SwTable::InsertRow_(SwDoc*, SwSelBoxes const&, unsigned short, bool)
SwTable::InsertSpannedRow(SwDoc&, unsigned short, unsigned short)
SwTable::IsDeleted() const
SwTable::IsHeadline(SwTableLine const&) const
SwTable::IsTableComplexForChart(rtl::OUString const&) const
SwTable::MakeCopy(SwDoc&, SwPosition const&, SwSelBoxes const&, bool, rtl::OUString const&) const
SwTable::NewInsertCol(SwDoc&, SwSelBoxes const&, unsigned short, bool)
SwTable::NewMerge(SwDoc*, SwSelBoxes const&, SwSelBoxes const&, SwUndoTableMerge*)
SwTable::NewSetTabCols(Parm&, SwTabCols const&, SwTabCols const&, SwTableBox const*, bool)
SwTable::NewSplitRow(SwDoc&, SwSelBoxes const&, unsigned short, bool)
SwTable::OldMerge(SwDoc*, SwSelBoxes const&, SwTableBox*, SwUndoTableMerge*)
SwTable::OldSplitRow(SwDoc&, SwSelBoxes const&, unsigned short, bool)
SwTable::PrepareDelBoxes(SwSelBoxes const&)
SwTable::PrepareDeleteCol(long, long)
SwTable::PrepareMerge(SwPaM const&, SwSelBoxes&, SwSelBoxes&, SwTableBox**, SwUndoTableMerge*)
SwTable::RegisterToFormat(SwFormat&)
SwTable::RestoreRowSpan(SwSaveRowSpan const&)
SwTable::SetColWidth(SwTableBox&, TableChgWidthHeightType, long, long, std::unique_ptr<SwUndo, std::default_delete<SwUndo> >*)
SwTable::SetHTMLTableLayout(std::shared_ptr<SwHTMLTableLayout> const&)
SwTable::SetRefObject(SwServerObject*)
SwTable::SetRowHeight(SwTableBox&, TableChgWidthHeightType, long, long, std::unique_ptr<SwUndo, std::default_delete<SwUndo> >*)
SwTable::SplitCol(SwDoc&, SwSelBoxes const&, unsigned short)
SwTable::SwClientNotify(SwModify const&, SfxHint const&)
SwTable::SwTable()
SwTable::SwTable(SwTable const&)
SwTable::UpdateCharts() const
SwTable::~SwTable()
SwTableAutoFormat::CountPos(unsigned int, unsigned int, unsigned int, unsigned int)
SwTableAutoFormat::FirstRowEndColumnIsRow()
SwTableAutoFormat::FirstRowStartColumnIsRow()
SwTableAutoFormat::GetBoxFormat(unsigned char) const
SwTableAutoFormat::GetDefaultBoxFormat()
SwTableAutoFormat::GetTableTemplateCellSubName(SwBoxAutoFormat const&) const
SwTableAutoFormat::GetTableTemplateMap()
SwTableAutoFormat::LastRowEndColumnIsRow()
SwTableAutoFormat::LastRowStartColumnIsRow()
SwTableAutoFormat::Load(SvStream&, SwAfVersions const&)
SwTableAutoFormat::RestoreTableProperties(SwTable&) const
SwTableAutoFormat::Save(SvStream&, unsigned short) const
SwTableAutoFormat::SetBoxFormat(SwBoxAutoFormat const&, unsigned char)
SwTableAutoFormat::StoreTableProperties(SwTable const&)
SwTableAutoFormat::SwTableAutoFormat(SwTableAutoFormat const&)
SwTableAutoFormat::SwTableAutoFormat(rtl::OUString const&)
SwTableAutoFormat::UpdateFromSet(unsigned char, SfxItemSet const&, SwTableAutoFormatUpdateFlags, SvNumberFormatter const*)
SwTableAutoFormat::UpdateToSet(unsigned char, bool, bool, SfxItemSet&, SwTableAutoFormatUpdateFlags, SvNumberFormatter*) const
SwTableAutoFormat::~SwTableAutoFormat()
SwTableAutoFormatTable::AddAutoFormat(SwTableAutoFormat const&)
SwTableAutoFormatTable::EraseAutoFormat(rtl::OUString const&)
SwTableAutoFormatTable::ReleaseAutoFormat(rtl::OUString const&)
SwTableAutoFormatTable::SwTableAutoFormatTable()
SwTableAutoFormatTable::operator[](unsigned long) const
SwTableAutoFormatTable::~SwTableAutoFormatTable()
SwTableBox::ActualiseValueBox()
SwTableBox::CheckBoxFormat(SwTableBoxFormat*)
SwTableBox::FindEndOfRowSpan(SwTable const&, unsigned short)
SwTableBox::FindNextBox(SwTable const&, SwTableBox const*, bool) const
SwTableBox::FindPreviousBox(SwTable const&, SwTableBox const*) const
SwTableBox::FindStartOfRowSpan(SwTable const&, unsigned short)
SwTableBox::GetName() const
SwTableBox::GetValue(SwTableCalcPara&) const
SwTableBox::HasNumContent(double&, unsigned int&, bool&) const
SwTableBox::IsEmpty() const
SwTableBox::IsInHeadline(SwTable const*) const
SwTableBox::IsNumberChanged() const
SwTableBox::IsValidNumTextNd(bool) const
SwTableBox::RegisterToFormat(SwFormat&)
SwTableBox::RemoveFromTable()
SwTableBox::SwTableBox(SwTableBoxFormat*, SwNodeIndex const&, SwTableLine*)
SwTableBox::SwTableBox(SwTableBoxFormat*, SwStartNode const&, SwTableLine*)
SwTableBox::SwTableBox(SwTableBoxFormat*, unsigned short, SwTableLine*)
SwTableBox::getDummyFlag() const
SwTableBox::setDummyFlag(bool)
SwTableBox::~SwTableBox()
SwTableBoxFormula::Calc(SwTableCalcPara&, double&)
SwTableBoxFormula::ChangeState(SfxPoolItem const*)
SwTableBoxFormula::GetNodeOfFormula() const
SwTableBoxFormula::GetTableBox()
SwTableBoxFormula::SwTableBoxFormula(rtl::OUString const&)
SwTableBoxFormula::operator==(SfxPoolItem const&) const
SwTableBoxNumFormat::Clone(SfxItemPool*) const
SwTableBoxNumFormat::SwTableBoxNumFormat(unsigned int)
SwTableBoxNumFormat::operator==(SfxPoolItem const&) const
SwTableBoxValue::Clone(SfxItemPool*) const
SwTableBoxValue::SwTableBoxValue()
SwTableBoxValue::SwTableBoxValue(double)
SwTableBoxValue::operator==(SfxPoolItem const&) const
SwTableCellInfo::Impl::getNext()
SwTableCellInfo::Impl::getNextCellFrame(SwFrame const*)
SwTableCellInfo::Impl::getNextFrameInTable(SwFrame const*)
SwTableCellInfo::Impl::getNextTableBoxsCellFrame(SwFrame const*)
SwTableCellInfo::SwTableCellInfo(SwTable const*)
SwTableCellInfo::getCellFrame() const
SwTableCellInfo::~SwTableCellInfo()
SwTableCellRedline::SwTableCellRedline(SwRedlineData const&, SwTableBox const&)
SwTableCellRedline::~SwTableCellRedline()
SwTableFUNC::ColWidthDlg(weld::Window*)
SwTableFUNC::InsertChart(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataProvider> const&, bool, rtl::OUString const&, SwFlyFrameFormat**)
SwTableFUNC::SwTableFUNC(SwWrtShell*)
SwTableFUNC::UpdateChart()
SwTableFUNC::~SwTableFUNC()
SwTableFormula::BoxNmToPtr(SwTable const*)
SwTableFormula::BoxNmsToPtr(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::BoxNmsToRelNm(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::FindTable(SwDoc&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwTableFormula::GetBoxes(SwTableBox const&, SwTableBox const&, SwSelBoxes&)
SwTableFormula::GetBoxesOfFormula(SwTable const&, SwSelBoxes&)
SwTableFormula::GetFormulaBoxes(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::GetLnPosInTable(SwTable const&, SwTableBox const*)
SwTableFormula::HasValidBoxes() const
SwTableFormula::HasValidBoxes_(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::MakeFormula_(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::PtrToBoxNms(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::RelBoxNmsToPtr(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::RelNmsToBoxNms(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::ScanString(void (SwTableFormula::*)(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const, SwTable const&, void*) const
SwTableFormula::SplitMergeBoxNm_(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::SwTableFormula(rtl::OUString const&)
SwTableFormula::ToRelBoxNm(SwTable const*)
SwTableFormula::ToSplitMergeBoxNm(SwTableFormulaUpdate&)
SwTableFormula::~SwTableFormula()
SwTableLine::ChgFrameFormat(SwTableLineFormat*)
SwTableLine::FindNextBox(SwTable const&, SwTableBox const*, bool) const
SwTableLine::FindPreviousBox(SwTable const&, SwTableBox const*, bool) const
SwTableLine::GetTableLineHeight(bool&) const
SwTableLine::IsDeleted(unsigned long&) const
SwTableLine::IsEmpty() const
SwTableLine::SwTableLine(SwTableLineFormat*, unsigned short, SwTableBox*)
SwTableLine::hasSoftPageBreak() const
SwTableLine::~SwTableLine()
SwTableNode::MakeCopy(SwDoc&, SwNodeIndex const&) const
SwTableNode::MakeFrame(SwFrame*)
SwTableNode::MakeFramesForAdjacentContentNode(SwNodeIndex const&)
SwTableNode::RemoveRedlines()
SwTableNode::SetNewTable(std::unique_ptr<SwTable, std::default_delete<SwTable> >, bool)
SwTableNode::SwTableNode(SwNodeIndex const&)
SwTableNode::~SwTableNode()
SwTableRep::FillTabCols(SwTabCols&) const
SwTableRep::SwTableRep(SwTabCols const&)
SwTableRep::~SwTableRep()
SwTableRowRedline::SwTableRowRedline(SwRedlineData const&, SwTableLine const&)
SwTableRowRedline::~SwTableRowRedline()
SwTemplNameField::Copy() const
SwTemplNameField::ExpandImpl(SwRootFrame const*) const
SwTemplNameField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwTemplNameField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwTemplNameField::SwTemplNameField(SwTemplNameFieldType*, unsigned int)
SwTextBlocks::BeginGetDoc(unsigned short)
SwTextBlocks::Delete(unsigned short)
SwTextBlocks::EndGetDoc()
SwTextBlocks::GetLongIndex(rtl::OUString const&) const
SwTextBlocks::GetMacroTable(unsigned short, SvxMacroTableDtor&)
SwTextBlocks::GetName() const
SwTextBlocks::GetShortName(unsigned short) const
SwTextBlocks::IsOnlyTextBlock(rtl::OUString const&) const
SwTextBlocks::IsOnlyTextBlock(unsigned short) const
SwTextBlocks::IsReadOnly() const
SwTextBlocks::PutText(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwTextBlocks::Rename(unsigned short, rtl::OUString const*, rtl::OUString const*)
SwTextBlocks::SetMacroTable(unsigned short, SvxMacroTableDtor const&)
SwTextBlocks::SetName(rtl::OUString const&)
SwTextBlocks::SwTextBlocks(rtl::OUString const&)
SwTextBlocks::~SwTextBlocks()
SwTextBoxHelper::DoTextBoxZOrderCorrection(SwFrameFormat*, SdrObject const*)
SwTextBoxHelper::changeAnchor(SwFrameFormat*, SdrObject*)
SwTextBoxHelper::destroy(SwFrameFormat const*, SdrObject const*)
SwTextBoxHelper::doTextBoxPositioning(SwFrameFormat*, SdrObject*)
SwTextBoxHelper::getByIndex(SdrPage const*, int)
SwTextBoxHelper::getOrdNum(SdrObject const*)
SwTextBoxHelper::getProperty(SwFrameFormat const*, rtl::OUString const&)
SwTextBoxHelper::getProperty(SwFrameFormat const*, unsigned short, unsigned char, com::sun::star::uno::Any&)
SwTextBoxHelper::getShapeWrapThrough(SwFrameFormat const*, bool&)
SwTextBoxHelper::getTextRectangle(SdrObject*, bool)
SwTextBoxHelper::hasTextFrame(SdrObject const*)
SwTextBoxHelper::isAnchorTypeDifferent(SwFrameFormat const*)
SwTextBoxHelper::isTextBoxShapeHasValidTextFrame(SwFrameFormat const*)
SwTextBoxHelper::mapAnchorType(RndStdIds const&)
SwTextBoxHelper::queryInterface(SwFrameFormat const*, com::sun::star::uno::Type const&)
SwTextBoxHelper::restoreLinks(std::set<ZSortFly, std::less<ZSortFly>, std::allocator<ZSortFly> >&, std::vector<SwFrameFormat*, std::allocator<SwFrameFormat*> >&, std::map<SwFrameFormat const*, SwFrameFormat const*, std::less<SwFrameFormat const*>, std::allocator<std::pair<SwFrameFormat const* const, SwFrameFormat const*> > >&)
SwTextBoxHelper::saveLinks(SwFrameFormats const&, std::map<SwFrameFormat const*, SwFrameFormat const*, std::less<SwFrameFormat const*>, std::allocator<std::pair<SwFrameFormat const* const, SwFrameFormat const*> > >&)
SwTextBoxHelper::setWrapThrough(SwFrameFormat*)
SwTextBoxHelper::syncFlyFrameAttr(SwFrameFormat&, SfxItemSet const&, SdrObject*)
SwTextBoxHelper::syncProperty(SwFrameFormat*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Any const&, SdrObject*)
SwTextBoxHelper::syncProperty(SwFrameFormat*, unsigned short, unsigned char, com::sun::star::uno::Any const&, SdrObject*)
SwTextBoxHelper::updateTextBoxMargin(SdrObject*)
SwTextFootnote::CheckCondColl()
SwTextFootnote::CopyFootnote(SwTextFootnote&, SwTextNode&) const
SwTextFootnote::DelFrames(SwRootFrame const*)
SwTextFootnote::InvalidateNumberInLayout()
SwTextFootnote::MakeNewTextSection(SwNodes&)
SwTextFootnote::SetSeqRefNo()
SwTextFootnote::SetStartNode(SwNodeIndex const*, bool)
SwTextFootnote::SetUniqueSeqRefNo(SwDoc&)
SwTextFootnote::SwTextFootnote(SwFormatFootnote&, int)
SwTextFootnote::dumpAsXml(_xmlTextWriter*) const
SwTextFootnote::~SwTextFootnote()
SwTextFormatColl::AreListLevelIndentsApplicable() const
SwTextFormatColl::GetAttrOutlineLevel() const
SwTextFormatColl::IsAtDocNodeSet() const
SwTextFormatColl::ResetAllFormatAttr()
SwTextFormatColl::ResetFormatAttr(unsigned short, unsigned short)
SwTextFormatColl::SetAttrOutlineLevel(int)
SwTextFormatColl::SetFormatAttr(SfxItemSet const&)
SwTextFormatColl::SetFormatAttr(SfxPoolItem const&)
SwTextFormatColl::SetLinkedCharFormat(SwCharFormat&)
SwTextFormatColl::SwClientNotify(SwModify const&, SfxHint const&)
SwTextFormatColl::dumpAsXml(_xmlTextWriter*) const
SwTextFormatColl::~SwTextFormatColl()
SwTextFrame::AdjustFollow_(SwTextFormatter&, o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>, unsigned char)
SwTextFrame::AdjustFrame(long, bool)
SwTextFrame::AutoSpell_(SwTextNode&, int)
SwTextFrame::CalcAdditionalFirstLineOffset()
SwTextFrame::CalcBaseOfstForFly()
SwTextFrame::CalcFitToContent()
SwTextFrame::CalcFlyPos(SwFrameFormat const*)
SwTextFrame::CalcFollow(o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::CalcFootnoteFlag()
SwTextFrame::CalcHeightOfLastLine(bool)
SwTextFrame::CalcLineSpace()
SwTextFrame::CalcPrepFootnoteAdjust()
SwTextFrame::CalcPreps()
SwTextFrame::ChangeOffset(SwTextFrame*, o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::CheckDirection(bool)
SwTextFrame::ChgThisLines()
SwTextFrame::ClearPara()
SwTextFrame::CollectAutoCmplWrds(SwTextNode&, int)
SwTextFrame::ConnectFootnote(SwTextFootnote*, long)
SwTextFrame::DestroyImpl()
SwTextFrame::EmptyHeight() const
SwTextFrame::FillCursorPos(SwFillData&) const
SwTextFrame::FillRegister(long&, unsigned short&)
SwTextFrame::FillSelection(SwSelectionList&, SwRect const&) const
SwTextFrame::FindBrk(rtl::OUString const&, o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::FindFootnoteRef(SwTextFootnote const*)
SwTextFrame::FindQuoVadisFrame()
SwTextFrame::FirstLineHeight() const
SwTextFrame::Format(OutputDevice*, SwBorderAttrs const*)
SwTextFrame::FormatAdjust(SwTextFormatter&, WidowsAndOrphans&, o3tl::strong_int<int, Tag_TextFrameIndex>, bool)
SwTextFrame::FormatEmpty()
SwTextFrame::FormatLine(SwTextFormatter&, bool)
SwTextFrame::FormatOnceMore(SwTextFormatter&, SwTextFormatInfo&)
SwTextFrame::FormatQuick(bool)
SwTextFrame::Format_(OutputDevice*, SwParaPortion*)
SwTextFrame::Format_(SwTextFormatter&, SwTextFormatInfo&, bool)
SwTextFrame::GetAutoPos(SwRect&, SwPosition const&) const
SwTextFrame::GetBaseVertOffsetForFly(bool) const
SwTextFrame::GetBreakItem() const
SwTextFrame::GetCharRect(SwRect&, SwPosition const&, SwCursorMoveState*, bool) const
SwTextFrame::GetCurWord(SwPosition const&) const
SwTextFrame::GetDoc() const
SwTextFrame::GetDropLen(o3tl::strong_int<int, Tag_TextFrameIndex>) const
SwTextFrame::GetDropRect_(SwRect&) const
SwTextFrame::GetFootnoteFrameHeight_() const
SwTextFrame::GetFootnoteLine(SwTextFootnote const*) const
SwTextFrame::GetFormatted(bool)
SwTextFrame::GetFrameAtOfst(o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::GetFrameAtPos(SwPosition const&)
SwTextFrame::GetInfo(SfxPoolItem&) const
SwTextFrame::GetLangOfChar(o3tl::strong_int<int, Tag_TextFrameIndex>, unsigned short, bool) const
SwTextFrame::GetLineCount(o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::GetLineSpace(bool) const
SwTextFrame::GetModelPositionForViewPoint_(SwPosition*, Point const&, bool, SwCursorMoveState*) const
SwTextFrame::GetPageDescItem() const
SwTextFrame::GetParHeight() const
SwTextFrame::GetScalingOfSelectedText(o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::GetScriptInfo() const
SwTextFrame::GetTabStopInfo(long)
SwTextFrame::GetText() const
SwTextFrame::GetTextNodeForParaProps() const
SwTextFrame::GetTopOfLine(long&, SwPosition const&) const
SwTextFrame::HangingMargin() const
SwTextFrame::HasPara_() const
SwTextFrame::HideAndShowObjects()
SwTextFrame::HideFootnotes(o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::HideHidden()
SwTextFrame::Hyphenate(SwInterHyphInfoTextFrame&)
SwTextFrame::Init()
SwTextFrame::InvalidateRange_(SwCharRange const&, long)
SwTextFrame::IsFootnoteNumFrame_() const
SwTextFrame::IsHiddenNow() const
SwTextFrame::IsIdxInside(o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>) const
SwTextFrame::IsSymbolAt(o3tl::strong_int<int, Tag_TextFrameIndex>) const
SwTextFrame::JoinFrame()
SwTextFrame::LeftMargin(SwPaM*) const
SwTextFrame::MakePos()
SwTextFrame::MapModelToView(SwTextNode const*, int) const
SwTextFrame::MapModelToViewPos(SwPosition const&) const
SwTextFrame::MapViewToModel(o3tl::strong_int<int, Tag_TextFrameIndex>) const
SwTextFrame::MapViewToModelPos(o3tl::strong_int<int, Tag_TextFrameIndex>) const
SwTextFrame::MoveFlyInCnt(SwTextFrame*, o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::PaintEmpty(SwRect const&, bool) const
SwTextFrame::PaintExtraData(SwRect const&) const
SwTextFrame::PaintOutlineContentVisibilityButton() const
SwTextFrame::PaintSwFrame(OutputDevice&, SwRect const&, SwPrintData const*) const
SwTextFrame::PrepWidows(unsigned short, bool)
SwTextFrame::Prepare(PrepareHint, void const*, bool)
SwTextFrame::PrepareVisualMove(o3tl::strong_int<int, Tag_TextFrameIndex>&, unsigned char&, bool&, bool)
SwTextFrame::RecalcAllLines()
SwTextFrame::RegisterToNode(SwTextNode&, bool)
SwTextFrame::RemoveFootnote(o3tl::strong_int<int, Tag_TextFrameIndex>, o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::RemoveFromCache()
SwTextFrame::ResetPreps()
SwTextFrame::RightMargin(SwPaM*, bool) const
SwTextFrame::SetHasRotatedPortions(bool)
SwTextFrame::SetMergedPara(std::unique_ptr<sw::MergedPara, std::default_delete<sw::MergedPara> >)
SwTextFrame::SetOffset_(o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::SetPara(SwParaPortion*, bool)
SwTextFrame::SmartTagScan(SwTextNode&)
SwTextFrame::SplitFrame(o3tl::strong_int<int, Tag_TextFrameIndex>)
SwTextFrame::StopAnimation(OutputDevice const*)
SwTextFrame::SwClientNotify(SwModify const&, SfxHint const&)
SwTextFrame::SwTextFrame(SwTextNode*, SwFrame*, sw::FrameMode)
SwTextFrame::SwitchHorizontalToVertical(Point&) const
SwTextFrame::SwitchHorizontalToVertical(SwRect&) const
SwTextFrame::SwitchHorizontalToVertical(long) const
SwTextFrame::SwitchLTRtoRTL(Point&) const
SwTextFrame::SwitchLTRtoRTL(SwRect&) const
SwTextFrame::SwitchVerticalToHorizontal(Point&) const
SwTextFrame::SwitchVerticalToHorizontal(long) const
SwTextFrame::TestFormat(SwFrame const*, long&, bool&)
SwTextFrame::UnitDown(SwPaM*, long, bool) const
SwTextFrame::UnitDown_(SwPaM*, long, bool) const
SwTextFrame::UnitUp(SwPaM*, long, bool) const
SwTextFrame::UnitUp_(SwPaM*, long, bool) const
SwTextFrame::UpdateOutlineContentVisibilityButton(SwWrtShell*) const
SwTextFrame::ValidateBodyFrame()
SwTextFrame::ValidateFrame()
SwTextFrame::WouldFit(long&, bool&, bool)
SwTextFrame::dumpAsXmlAttributes(_xmlTextWriter*) const
SwTextFrame::repaintTextFrames(SwTextNode const&)
SwTextFrame::~SwTextFrame()
SwTextGridItem::Clone(SfxItemPool*) const
SwTextGridItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwTextGridItem::Init()
SwTextGridItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwTextGridItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwTextGridItem::SwTextGridItem()
SwTextGridItem::SwitchPaperMode(bool)
SwTextGridItem::operator==(SfxPoolItem const&) const
SwTextGridItem::~SwTextGridItem()
SwTextINetFormat::GetInfo(SfxPoolItem&) const
SwTextINetFormat::IsProtect() const
SwTextINetFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwTextINetFormat::SwTextINetFormat(SwFormatINetFormat&, int, int)
SwTextINetFormat::~SwTextINetFormat()
SwTextNode::AddToList()
SwTextNode::AddToListRLHidden()
SwTextNode::AppendNode(SwPosition const&)
SwTextNode::ChgTextCollUpdateNum(SwTextFormatColl const*, SwTextFormatColl const*)
SwTextNode::ClearGrammarCheck()
SwTextNode::ClearLRSpaceItemDueToListLevelIndents(std::shared_ptr<SvxLRSpaceItem>&) const
SwTextNode::ClearSmartTags()
SwTextNode::ClearSwpHintsArr(bool)
SwTextNode::ClearWrong()
SwTextNode::CompareParRsid(SwTextNode const&) const
SwTextNode::CompareRsid(SwTextNode const&, int, int) const
SwTextNode::Convert(SwConversionArgs&)
SwTextNode::CopyExpandText(SwTextNode&, SwIndex const*, int, int, SwRootFrame const*, bool, bool, bool) const
SwTextNode::CopyText(SwTextNode*, SwIndex const&, SwIndex const&, int, bool)
SwTextNode::CopyText(SwTextNode*, SwIndex const&, int, bool)
SwTextNode::CountWords(SwDocStat&, int, int) const
SwTextNode::CutText(SwTextNode*, SwIndex const&, int)
SwTextNode::DelFrames_TextNodePart()
SwTextNode::DelSoftHyph(int, int)
SwTextNode::DeleteAttribute(SwTextAttr*)
SwTextNode::DeleteAttributes(unsigned short, int, int)
SwTextNode::DestroyAttr(SwTextAttr*)
SwTextNode::DoNum(std::function<void (SwNodeNum&)> const&)
SwTextNode::DontExpandFormat(SwIndex const&, bool, bool)
SwTextNode::EraseText(SwIndex const&, int, SwInsertFlags)
SwTextNode::FileLoadedInitHints()
SwTextNode::GCAttr()
SwTextNode::GetAdditionalIndentForStartingNewList() const
SwTextNode::GetAttrListLevel() const
SwTextNode::GetAttrListRestartValue() const
SwTextNode::GetAttrOutlineContentVisible(bool&)
SwTextNode::GetAttrOutlineLevel() const
SwTextNode::GetFieldTextAttrAt(int, bool) const
SwTextNode::GetFirstLineOfsWithNum(short&) const
SwTextNode::GetGrammarCheck()
SwTextNode::GetGrammarCheck() const
SwTextNode::GetLabelFollowedBy() const
SwTextNode::GetLeftMarginForTabCalculation() const
SwTextNode::GetLeftMarginWithNum(bool) const
SwTextNode::GetListTabStopPosition(long&) const
SwTextNode::GetMinMaxSize(o3tl::strong_int<int, Tag_SwNodeOffset>, unsigned long&, unsigned long&, unsigned long&) const
SwTextNode::GetNum(SwRootFrame const*) const
SwTextNode::GetNumberVector(SwRootFrame const*) const
SwTextNode::GetOverlappingInputField(SwTextAttr const&) const
SwTextNode::GetParRsid() const
SwTextNode::GetRegistry()
SwTextNode::GetRsid(int, int) const
SwTextNode::GetSmartTags()
SwTextNode::GetSmartTags() const
SwTextNode::GetTextAttrAt(int, unsigned short, SwTextNode::GetTextAttrMode) const
SwTextNode::GetTextAttrsAt(int, unsigned short) const
SwTextNode::GetWidthOfLeadingTabs() const
SwTextNode::GetWrong()
SwTextNode::GetWrong() const
SwTextNode::GetWrongDirty() const
SwTextNode::HasAttrListLevel() const
SwTextNode::HasAttrListRestartValue() const
SwTextNode::HasBullet() const
SwTextNode::HasMarkedLabel() const
SwTextNode::HasNumber() const
SwTextNode::HasVisibleNumberingOrBullet() const
SwTextNode::Hyphenate(SwInterHyphInfo&)
SwTextNode::InsertHint(SwTextAttr*, SetAttrMode)
SwTextNode::InsertText(rtl::OUString const&, SwIndex const&, SwInsertFlags)
SwTextNode::IsAutoCompleteWordDirty() const
SwTextNode::IsCollapse() const
SwTextNode::IsFirstOfNumRule(SwRootFrame const&) const
SwTextNode::IsGrammarCheckDirty() const
SwTextNode::IsHidden() const
SwTextNode::IsIgnoredCharFormatForNumbering(unsigned short, bool)
SwTextNode::IsInClipboard() const
SwTextNode::IsInContent() const
SwTextNode::IsInUndo() const
SwTextNode::IsNotifiable() const
SwTextNode::IsNotificationEnabled() const
SwTextNode::IsOutlineStateChanged() const
SwTextNode::IsSmartTagDirty() const
SwTextNode::IsSymbolAt(int) const
SwTextNode::IsWordCountDirty() const
SwTextNode::IsWrongDirty() const
SwTextNode::MakeCopy(SwDoc&, SwNodeIndex const&, bool) const
SwTextNode::MakeFrame(SwFrame*)
SwTextNode::MakeUnoObject()
SwTextNode::NumRuleChgd()
SwTextNode::ReleaseGrammarCheck()
SwTextNode::ReleaseSmartTags()
SwTextNode::ReleaseWrong()
SwTextNode::RemoveFromList()
SwTextNode::RemoveFromListRLHidden()
SwTextNode::ReplaceText(SwIndex const&, int, rtl::OUString const&)
SwTextNode::ReplaceTextOnly(int, int, rtl::OUString const&, com::sun::star::uno::Sequence<int> const&)
SwTextNode::ResetAllAttr()
SwTextNode::ResetAttr(std::vector<unsigned short, std::allocator<unsigned short> > const&)
SwTextNode::ResetEmptyListStyleDueToResetOutlineLevelAttr()
SwTextNode::SetAttr(SfxItemSet const&)
SwTextNode::SetAttr(SfxItemSet const&, int, int, SetAttrMode, SwTextAttr**)
SwTextNode::SetAttrOutlineContentVisible(bool)
SwTextNode::SetAttrOutlineLevel(int)
SwTextNode::SetAutoCompleteWordDirty(bool) const
SwTextNode::SetEmptyListStyleDueToSetOutlineLevelAttr()
SwTextNode::SetGrammarCheck(std::unique_ptr<SwGrammarMarkUp, std::default_delete<SwGrammarMarkUp> >)
SwTextNode::SetGrammarCheckDirty(bool) const
SwTextNode::SetInSwUndo(bool)
SwTextNode::SetListId(rtl::OUString const&)
SwTextNode::SetSmartTagDirty(bool) const
SwTextNode::SetSmartTags(std::unique_ptr<SwWrongList, std::default_delete<SwWrongList> >)
SwTextNode::SetWordCountDirty(bool) const
SwTextNode::SetWrong(std::unique_ptr<SwWrongList, std::default_delete<SwWrongList> >)
SwTextNode::SetWrongDirty(SwTextNode::WrongState) const
SwTextNode::Spell(SwSpellArgs*)
SwTextNode::SplitContentNode(SwPosition const&, std::function<void (SwTextNode*, sw::mark::RestoreMode, bool)> const*)
SwTextNode::SwClientNotify(SwModify const&, SfxHint const&)
SwTextNode::TransliterateText(utl::TransliterationWrapper&, int, int, SwUndoTransliterate*, bool)
SwTextNode::TriggerNodeUpdate(sw::LegacyModifyHint const&)
SwTextNode::Update(SwIndex const&, int, bool, bool)
SwTextNode::UpdateOutlineState()
SwTextNode::dumpAsXml(_xmlTextWriter*) const
SwTextNode::getSdrAllFillAttributesHelper() const
SwTextNode::~SwTextNode()
SwTextRuby::GetInfo(SfxPoolItem&) const
SwTextRuby::SwClientNotify(SwModify const&, SfxHint const&)
SwTextRuby::SwTextRuby(SwFormatRuby&, int, int)
SwTextRuby::~SwTextRuby()
SwTextShell::ExecBasicMove(SfxRequest&)
SwTextShell::ExecCharAttr(SfxRequest&)
SwTextShell::ExecCharAttrArgs(SfxRequest&)
SwTextShell::ExecDB(SfxRequest const&)
SwTextShell::ExecDelete(SfxRequest&)
SwTextShell::ExecEnterNum(SfxRequest&)
SwTextShell::ExecField(SfxRequest&)
SwTextShell::ExecGlossary(SfxRequest&)
SwTextShell::ExecIdx(SfxRequest const&)
SwTextShell::ExecInsert(SfxRequest&)
SwTextShell::ExecMove(SfxRequest&)
SwTextShell::ExecMoveCol(SfxRequest&)
SwTextShell::ExecMoveLingu(SfxRequest&)
SwTextShell::ExecMoveMisc(SfxRequest&)
SwTextShell::ExecMovePage(SfxRequest&)
SwTextShell::ExecParaAttr(SfxRequest&)
SwTextShell::ExecParaAttrArgs(SfxRequest&)
SwTextShell::ExecRotateTransliteration(SfxRequest const&)
SwTextShell::ExecSetNumber(SfxRequest const&)
SwTextShell::ExecTransliteration(SfxRequest const&)
SwTextShell::Execute(SfxRequest&)
SwTextShell::GetAttrState(SfxItemSet&)
SwTextShell::GetIdxState(SfxItemSet&)
SwTextShell::GetInterface() const
SwTextShell::GetState(SfxItemSet&)
SwTextShell::GetStaticInterface()
SwTextShell::InitInterface_Impl()
SwTextShell::InsertHyperlink(SvxHyperlinkItem const&)
SwTextShell::InsertMediaDlg(SfxRequest const&)
SwTextShell::InsertSymbol(SfxRequest&)
SwTextShell::RegisterInterface(SfxModule const*)
SwTextShell::StateField(SfxItemSet&)
SwTextShell::StateInsert(SfxItemSet&)
SwTextShell::SwTextShell(SwView&)
SwTextShell::~SwTextShell()
SwTransferable::AddSupportedFormats()
SwTransferable::CalculateAndCopy()
SwTransferable::CheckForURLOrLNKFile(TransferableDataHelper const&, rtl::OUString&, rtl::OUString*)
SwTransferable::ClearSelection(SwWrtShell const&, SwFrameShell const*)
SwTransferable::CopyGlossary(SwTextBlocks&, rtl::OUString const&)
SwTransferable::CreateSelection(SwWrtShell&, SwFrameShell const*)
SwTransferable::DeleteSelection()
SwTransferable::DragFinished(signed char)
SwTransferable::FillClipFormatItem(SwWrtShell const&, TransferableDataHelper const&, SvxClipboardFormatItem&)
SwTransferable::FindOLEObj(long&) const
SwTransferable::FindOLEReplacementGraphic() const
SwTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
SwTransferable::GetSotDestination(SwWrtShell const&)
SwTransferable::GetSwTransferable(TransferableDataHelper const&)
SwTransferable::InitOle(SfxObjectShell*)
SwTransferable::IsPaste(SwWrtShell const&, TransferableDataHelper const&)
SwTransferable::IsPasteOwnFormat(TransferableDataHelper const&)
SwTransferable::IsPasteSpecial(SwWrtShell const&, TransferableDataHelper const&)
SwTransferable::ObjectReleased()
SwTransferable::PasteAsHyperlink(TransferableDataHelper const&, SwWrtShell&, SotClipboardFormatId)
SwTransferable::PasteDBData(TransferableDataHelper const&, SwWrtShell&, SotClipboardFormatId, bool, Point const*, bool)
SwTransferable::PasteDDE(TransferableDataHelper const&, SwWrtShell&, bool, bool)
SwTransferable::PasteData(TransferableDataHelper&, SwWrtShell&, unsigned char, SotExchangeActionFlags, SotClipboardFormatId, SotExchangeDest, bool, bool, Point const*, signed char, bool, RndStdIds, bool, SwPasteContext*, PasteTableType)
SwTransferable::PasteFileContent(TransferableDataHelper const&, SwWrtShell&, SotClipboardFormatId, bool, bool)
SwTransferable::PasteFileList(TransferableDataHelper const&, SwWrtShell&, bool, Point const*, bool)
SwTransferable::PasteFileName(TransferableDataHelper&, SwWrtShell&, SotClipboardFormatId, SwPasteSdr, Point const*, SotExchangeActionFlags, bool*)
SwTransferable::PasteFormat(SwWrtShell&, TransferableDataHelper&, SotClipboardFormatId)
SwTransferable::PasteGrf(TransferableDataHelper const&, SwWrtShell&, SotClipboardFormatId, SwPasteSdr, Point const*, SotExchangeActionFlags, signed char, bool, RndStdIds)
SwTransferable::PasteImageMap(TransferableDataHelper const&, SwWrtShell&)
SwTransferable::PasteOLE(TransferableDataHelper&, SwWrtShell&, SotClipboardFormatId, SotExchangeActionFlags, bool)
SwTransferable::PasteSdrFormat(TransferableDataHelper const&, SwWrtShell&, SwPasteSdr, Point const*, SotExchangeActionFlags, bool)
SwTransferable::PasteTargetURL(TransferableDataHelper const&, SwWrtShell&, SwPasteSdr, Point const*, bool)
SwTransferable::PasteUnformatted(SwWrtShell&, TransferableDataHelper&)
SwTransferable::PrePasteSpecial(SwWrtShell const&, TransferableDataHelper&, VclPtr<SfxAbstractPasteDialog> const&)
SwTransferable::PrepareForCopy(bool)
SwTransferable::PrepareForCopyTextRange(SwPaM&)
SwTransferable::PrivateDrop(SwWrtShell&, Point const&, bool, bool)
SwTransferable::PrivatePaste(SwWrtShell&, SwPasteContext*, PasteTableType)
SwTransferable::RemoveDDELinkFormat(vcl::Window&)
SwTransferable::SetDataForDragAndDrop(Point const&)
SwTransferable::SetSelInShell(SwWrtShell&, bool, Point const*)
SwTransferable::StartDrag(vcl::Window*, Point const&)
SwTransferable::SwTransferable(SwWrtShell&)
SwTransferable::TestAllowedFormat(TransferableDataHelper const&, SotClipboardFormatId, SotExchangeDest)
SwTransferable::WriteObject(tools::SvRef<SotTempStream>&, void*, unsigned int, com::sun::star::datatransfer::DataFlavor const&)
SwTransferable::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SwTransferable::getUnoTunnelId()
SwTransferable::isComplex()
SwTransferable::~SwTransferable()
SwUINumRuleItem::Clone(SfxItemPool*) const
SwUINumRuleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwUINumRuleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwUINumRuleItem::SwUINumRuleItem(SwNumRule const&)
SwUINumRuleItem::SwUINumRuleItem(SwUINumRuleItem const&)
SwUINumRuleItem::operator==(SfxPoolItem const&) const
SwUINumRuleItem::~SwUINumRuleItem()
SwUnoCursorHelper::GetSelectableFromAny(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, SwDoc&, SwPaM*&, std::pair<rtl::OUString, FlyCntType>&, rtl::OUString&, SwUnoTableCursor const*&, sw::mark::IMark const*&, std::vector<SdrObject*, std::allocator<SdrObject*> >&)
SwUnoInternalPaM::SwUnoInternalPaM(SwDoc&)
SwUnoInternalPaM::operator=(SwPaM const&)
SwUnoInternalPaM::~SwUnoInternalPaM()
SwUserFieldType::Copy() const
SwUserFieldType::Expand(unsigned int, unsigned short, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwUserFieldType::GetValue(SwCalc&)
SwUserFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwUserFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwUserFieldType::SwClientNotify(SwModify const&, SfxHint const&)
SwUserFieldType::SwUserFieldType(SwDoc*, rtl::OUString const&)
SwUserFieldType::dumpAsXml(_xmlTextWriter*) const
SwValueField::ChgTyp(SwFieldType*)
SwValueField::GetValue() const
SwValueField::SetValue(double const&)
SwValueField::SwValueField(SwValueField const&)
SwValueField::SwValueField(SwValueFieldType*, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>, double)
SwValueField::dumpAsXml(_xmlTextWriter*) const
SwValueField::~SwValueField()
SwView::Activate(bool)
SwView::AddTransferable(SwTransferable&)
SwView::ApplyAccessibilityOptions(SvtAccessibilityOptions const&)
SwView::AreOnlyFormsSelected() const
SwView::AutoCaption(unsigned short, SvGlobalName const*)
SwView::ChangeTabMetric(FieldUnit)
SwView::ChangeVRulerMetric(FieldUnit)
SwView::CheckVisArea()
SwView::CreateInstance(SfxViewFrame*, SfxViewShell*)
SwView::CreateTab()
SwView::CreateTmpSelectionDoc()
SwView::CreateVRuler()
SwView::Deactivate(bool)
SwView::DoVerb(int)
SwView::DocSzChgd(Size const&)
SwView::EditLinkDlg()
SwView::EnableHScrollbar(bool)
SwView::EnableMailMerge()
SwView::EnableVScrollbar(bool)
SwView::EnsureMailMergeConfigItem(SfxItemSet const*)
SwView::EnterDrawTextMode(Point const&)
SwView::ExecColl(SfxRequest const&)
SwView::ExecDlg(SfxRequest const&)
SwView::ExecDlgExt(SfxRequest const&)
SwView::ExecDraw(SfxRequest const&)
SwView::ExecDrwTextSpellPopup(Point const&)
SwView::ExecFormatFootnote()
SwView::ExecFormatPaintbrush(SfxRequest const&)
SwView::ExecLingu(SfxRequest&)
SwView::ExecNumberingOutline(SfxItemPool&)
SwView::ExecSearch(SfxRequest&)
SwView::ExecSmartTagPopup(Point const&)
SwView::ExecSpellPopup(Point const&)
SwView::ExecTabWin(SfxRequest const&)
SwView::ExecViewOptions(SfxRequest&)
SwView::Execute(SfxRequest&)
SwView::ExecuteInsertDoc(SfxRequest&, SfxPoolItem const*)
SwView::ExecutePrint(SfxRequest&)
SwView::ExecuteScan(SfxRequest&)
SwView::ExecuteStatusLine(SfxRequest&)
SwView::ExitDraw()
SwView::GenerateFormLetter(bool)
SwView::GetDispatcher()
SwView::GetDrawState(SfxItemSet&)
SwView::GetDrawView() const
SwView::GetGlosHdl()
SwView::GetHRulerMetric(FieldUnit&) const
SwView::GetInterface() const
SwView::GetMoveType()
SwView::GetPageStr(unsigned short, unsigned short, rtl::OUString const&)
SwView::GetRedlineAuthor() const
SwView::GetSearchDialog()
SwView::GetSelectionText(bool)
SwView::GetShellMode() const
SwView::GetStaticInterface()
SwView::GetThesaurusLookUpText(bool) const
SwView::GetUNOObject()
SwView::GetVRulerMetric(FieldUnit&) const
SwView::GotFocus() const
SwView::HandleWheelCommands(CommandEvent const&)
SwView::HasOnlyObj(SdrObject const*, SdrInventor) const
SwView::HasSelection(bool) const
SwView::HasUIFeature(SfxShellFeature) const
SwView::ImpSetVerb(SelectionType)
SwView::InitFactory()
SwView::InitInterface_Impl()
SwView::InnerResizePixel(Point const&, Size const&, bool)
SwView::InsFrameMode(unsigned short)
SwView::InsertDoc(unsigned short, rtl::OUString const&, rtl::OUString const&, short)
SwView::InsertMedium(unsigned short, std::unique_ptr<SfxMedium, std::default_delete<SfxMedium> >, short)
SwView::InsertThesaurusSynonym(rtl::OUString const&, rtl::OUString const&, bool)
SwView::IsBezierEditMode() const
SwView::IsConditionalFastCall(SfxRequest const&)
SwView::IsDocumentBorder()
SwView::IsFormMode() const
SwView::IsHScrollbarVisible() const
SwView::IsPasteAllowed()
SwView::IsPasteSpecialAllowed()
SwView::IsPasteSpreadsheet(bool)
SwView::IsScroll(tools::Rectangle const&) const
SwView::IsVScrollbarVisible() const
SwView::IsValidSelectionForThesaurus() const
SwView::KillTab()
SwView::KillVRuler()
SwView::LinkStubAttrChangedNotify(void*, LinkParamNone*)
SwView::MarginChanged()
SwView::NoRotate()
SwView::NotifyCursor(SfxViewShell*) const
SwView::NotifyDBChanged()
SwView::OuterResizePixel(Point const&, Size const&)
SwView::PrepareClose(bool)
SwView::ReadUserData(rtl::OUString const&, bool)
SwView::ReadUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwView::RecheckBrowseMode()
SwView::RegisterFactory(o3tl::strong_int<unsigned short, SfxInterfaceIdTag>)
SwView::RegisterInterface(SfxModule const*)
SwView::ScannerEventHdl()
SwView::Scroll(tools::Rectangle const&, unsigned short, unsigned short)
SwView::SelectShell()
SwView::SelectShellForDrop()
SwView::SetActMark(int)
SwView::SetDrawFuncPtr(std::unique_ptr<SwDrawBase, std::default_delete<SwDrawBase> >)
SwView::SetHScrollMax(long)
SwView::SetMoveType(unsigned short)
SwView::SetOldDrwCat(rtl::OUString const&)
SwView::SetOldFrameCat(rtl::OUString const&)
SwView::SetOldGrfCat(rtl::OUString const&)
SwView::SetOldTabCat(rtl::OUString const&)
SwView::SetPrinter(SfxPrinter*, SfxPrinterChangeFlags)
SwView::SetSelDrawSlot()
SwView::SetVScrollMax(long)
SwView::SetVisArea(Point const&, bool)
SwView::SetVisArea(tools::Rectangle const&, bool)
SwView::SetZoom(SvxZoomType, short, bool)
SwView::SetZoomFactor(Fraction const&, Fraction const&)
SwView::ShowCursor(bool)
SwView::ShowHScrollbar(bool)
SwView::ShowUIElement(rtl::OUString const&) const
SwView::ShowVScrollbar(bool)
SwView::SpellError(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwView::StateFormatPaintbrush(SfxItemSet&)
SwView::StateSearch(SfxItemSet&)
SwView::StateStatusLine(SfxItemSet&)
SwView::StateTabWin(SfxItemSet&)
SwView::StateViewOptions(SfxItemSet&)
SwView::SwView(SfxViewFrame*, SfxViewShell*)
SwView::UpdateDocStats()
SwView::UpdatePageNums()
SwView::UpdateWordCount(SfxShell*, unsigned short)
SwView::WriteUserData(rtl::OUString&, bool)
SwView::WriteUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
SwView::dumpAsXml(_xmlTextWriter*) const
SwView::flushPendingLOKInvalidateTiles()
SwView::getLOKPayload(int, int, bool*) const
SwView::getLOKVisibleArea() const
SwView::getPart() const
SwView::isQRCodeSelected() const
SwView::isSignatureLineSelected() const
SwView::isSignatureLineSigned() const
SwView::~SwView()
SwViewOption::ApplyColorConfigValues(svtools::ColorConfig const&)
SwViewOption::DrawRect(OutputDevice*, SwRect const&, Color)
SwViewOption::DrawRectPrinter(OutputDevice*, SwRect const&)
SwViewOption::GetAppBackgroundColor()
SwViewOption::GetDefaultAnchorType() const
SwViewOption::GetDirectCursorColor()
SwViewOption::GetDocBoundariesColor()
SwViewOption::GetDocColor()
SwViewOption::GetFieldShadingsColor()
SwViewOption::GetHeaderFooterMarkColor()
SwViewOption::GetIndexShadingsColor()
SwViewOption::GetLinksColor()
SwViewOption::GetObjectBoundariesColor()
SwViewOption::GetPageBreakColor()
SwViewOption::GetPostItsWidth(OutputDevice const*)
SwViewOption::GetSectionBoundColor()
SwViewOption::GetShadowColor()
SwViewOption::GetSmarttagColor()
SwViewOption::GetSpellColor()
SwViewOption::GetTableBoundariesColor()
SwViewOption::GetTextGridColor()
SwViewOption::GetVisitedLinksColor()
SwViewOption::Init(OutputDevice const*)
SwViewOption::IsAppearanceFlag(ViewOptFlags)
SwViewOption::IsAutoCompleteWords()
SwViewOption::IsEqualFlags(SwViewOption const&) const
SwViewOption::IsIgnoreProtectedArea()
SwViewOption::IsShowOutlineContentVisibilityButton() const
SwViewOption::IsTreatSubOutlineLevelsAsContent() const
SwViewOption::PaintPostIts(OutputDevice*, SwRect const&, bool)
SwViewOption::SetAppearanceFlag(ViewOptFlags, bool, bool)
SwViewOption::SetOnlineSpell(bool)
SwViewOption::SwViewOption()
SwViewOption::SwViewOption(SwViewOption const&)
SwViewOption::operator=(SwViewOption const&)
SwViewOption::~SwViewOption()
SwViewShell::AddPaintRect(SwRect const&)
SwViewShell::AdjustOptionsForPagePreview(SwPrintData const&)
SwViewShell::ApplyAccessibilityOptions(SvtAccessibilityOptions const&)
SwViewShell::ApplyViewOptions(SwViewOption const&)
SwViewShell::CalcLayout()
SwViewShell::CalcPagesForPrint(unsigned short)
SwViewShell::CareChildWin(SwViewShell const&)
SwViewShell::ChgAllPageOrientation(Orientation)
SwViewShell::ChgAllPageSize(Size const&)
SwViewShell::ChgNumberDigits()
SwViewShell::CreateAccessible()
SwViewShell::CreateAccessiblePreview()
SwViewShell::DLPostPaint2(bool)
SwViewShell::DLPrePaint2(vcl::Region const&)
SwViewShell::DeleteReplacementBitmaps()
SwViewShell::DrawSelChanged()
SwViewShell::FillPrtDoc(SwDoc&, SfxPrinter const*)
SwViewShell::FlushPendingLOKInvalidateTiles()
SwViewShell::GetAccessibleMap()
SwViewShell::GetBrowseBorder() const
SwViewShell::GetBrowseWidth() const
SwViewShell::GetDocSize() const
SwViewShell::GetDrawViewWithValidMarkList()
SwViewShell::GetIDocumentUndoRedo()
SwViewShell::GetIDocumentUndoRedo() const
SwViewShell::GetNodes() const
SwViewShell::GetNumPages() const
SwViewShell::GetPageNumAndSetOffsetForPDF(OutputDevice&, SwRect const&) const
SwViewShell::GetPagePos(unsigned short) const
SwViewShell::GetRefDev() const
SwViewShell::GetReplacementBitmap(bool)
SwViewShell::GetRestoreActions() const
SwViewShell::HasCharts() const
SwViewShell::HasDrawView() const
SwViewShell::HasDrawViewDrag() const
SwViewShell::ImplLockPaint()
SwViewShell::ImplUnlockPaint(bool)
SwViewShell::InitPrt(OutputDevice*)
SwViewShell::InvalidateAccessibleFocus()
SwViewShell::InvalidateAccessibleParaAttrs(SwTextFrame const&)
SwViewShell::InvalidateAccessibleParaFlowRelation(SwTextFrame const*, SwTextFrame const*)
SwViewShell::InvalidateAccessibleParaTextSelection()
SwViewShell::InvalidateLayout(bool)
SwViewShell::InvalidateWindows(SwRect const&)
SwViewShell::IsAnyFieldInDoc() const
SwViewShell::IsDummyPage(unsigned short) const
SwViewShell::IsNewLayout() const
SwViewShell::LayoutIdle()
SwViewShell::MakeDrawView()
SwViewShell::MakeVisible(SwRect const&)
SwViewShell::OnGraphicArrived(SwRect const&)
SwViewShell::PagePreviewLayout()
SwViewShell::Paint(OutputDevice&, tools::Rectangle const&)
SwViewShell::PaintTile(VirtualDevice&, int, int, int, int, long, long)
SwViewShell::PrePaint()
SwViewShell::PrintOrPDFExport(OutputDevice*, SwPrintData const&, int, bool)
SwViewShell::PrintProspect(OutputDevice*, SwPrintData const&, int)
SwViewShell::PrtOle2(SwDoc*, SwViewOption const*, SwPrintData const&, OutputDevice&, tools::Rectangle const&)
SwViewShell::SetBrowseBorder(Size const&)
SwViewShell::SetFirstVisPageInvalid()
SwViewShell::SetPDFExportOption(bool)
SwViewShell::SetPrtFormatOption(bool)
SwViewShell::SetReadonlyOption(bool)
SwViewShell::SetReadonlySelectionOption(bool)
SwViewShell::SetRestoreActions(unsigned short)
SwViewShell::SetShowHeaderFooterSeparator(FrameControlType, bool)
SwViewShell::SetUIOptions(SwViewOption const&)
SwViewShell::ShowPreviewSelection(unsigned short)
SwViewShell::SizeChgNotify()
SwViewShell::SmoothScroll(long, long, tools::Rectangle const*)
SwViewShell::SwViewShell(SwDoc&, vcl::Window*, SwViewOption const*, OutputDevice*, long)
SwViewShell::SwViewShell(SwViewShell&, vcl::Window*, OutputDevice*, long)
SwViewShell::ToggleHeaderFooterEdit()
SwViewShell::UISizeNotify()
SwViewShell::UpdateAllCharts()
SwViewShell::VisArea() const
SwViewShell::VisPortChgd(SwRect const&)
SwViewShell::dumpAsXml(_xmlTextWriter*) const
SwViewShell::getIDocumentContentOperations()
SwViewShell::getIDocumentDeviceAccess() const
SwViewShell::getIDocumentDrawModelAccess()
SwViewShell::getIDocumentDrawModelAccess() const
SwViewShell::getIDocumentLayoutAccess()
SwViewShell::getIDocumentLayoutAccess() const
SwViewShell::getIDocumentMarkAccess() const
SwViewShell::getIDocumentRedlineAccess()
SwViewShell::getIDocumentRedlineAccess() const
SwViewShell::getIDocumentSettingAccess() const
SwViewShell::getIDocumentStatistics() const
SwViewShell::isOutputToWindow() const
SwViewShell::setOutputToWindow(bool)
SwViewShell::~SwViewShell()
SwVisibleCursor::Hide()
SwVisibleCursor::SetPosAndShow(SfxViewShell const*)
SwVisibleCursor::Show()
SwVisibleCursor::SwVisibleCursor(SwCursorShell const*)
SwVisibleCursor::getLOKPayload(int, int, bool*) const
SwVisibleCursor::~SwVisibleCursor()
SwWait::EnterWaitAndLockDispatcher()
SwWait::LeaveWaitAndUnlockDispatcher()
SwWait::SwWait(SwDocShell&, bool)
SwWait::~SwWait()
SwWebDocShell::Factory()
SwWebDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
SwWebDocShell::GetInterface() const
SwWebDocShell::GetStaticInterface()
SwWebDocShell::InitInterface_Impl()
SwWebDocShell::RegisterInterface(SfxModule const*)
SwWebDocShell::SwWebDocShell()
SwWebDocShell::~SwWebDocShell()
SwWebView::CreateInstance(SfxViewFrame*, SfxViewShell*)
SwWebView::GetInterface() const
SwWebView::GetStaticInterface()
SwWebView::InitFactory()
SwWebView::InitInterface_Impl()
SwWebView::RegisterFactory(o3tl::strong_int<unsigned short, SfxInterfaceIdTag>)
SwWebView::RegisterInterface(SfxModule const*)
SwWebView::SelectShell()
SwWebView::SwWebView(SfxViewFrame*, SfxViewShell*)
SwWebView::~SwWebView()
SwWriteTable::CollectTableRowsCols(long, unsigned int, long, unsigned int, SwTableLines const&, unsigned short)
SwWriteTable::FillTableRowsCols(long, unsigned short, unsigned int, unsigned short, long, unsigned int, SwTableLines const&, SvxBrushItem const*, unsigned short, unsigned short)
SwWriteTable::GetAbsHeight(long, unsigned long, unsigned short) const
SwWriteTable::GetAbsWidth(unsigned short, unsigned short) const
SwWriteTable::GetBoxWidth(SwTableBox const*)
SwWriteTable::GetLeftSpace(unsigned short) const
SwWriteTable::GetLineBrush(SwTableBox const*, SwWriteTableRow*)
SwWriteTable::GetLineHeight(SwTableBox const*)
SwWriteTable::GetLineHeight(SwTableLine const*)
SwWriteTable::GetPercentWidth(unsigned short, unsigned short) const
SwWriteTable::GetRawWidth(unsigned short, unsigned short) const
SwWriteTable::GetRelWidth(unsigned short, unsigned short) const
SwWriteTable::GetRightSpace(unsigned long, unsigned short) const
SwWriteTable::MergeBorders(editeng::SvxBorderLine const*, bool)
SwWriteTable::MergeBoxBorders(SwTableBox const*, unsigned long, unsigned long, unsigned short, unsigned short, unsigned short&, unsigned short&)
SwWriteTable::ShouldExpandSub(SwTableBox const*, bool, unsigned short) const
SwWriteTable::SwWriteTable(SwTable const*, SwHTMLTableLayout const*)
SwWriteTable::SwWriteTable(SwTable const*, SwTableLines const&, long, unsigned int, bool, unsigned short, unsigned short, unsigned short, unsigned int)
SwWriteTable::~SwWriteTable()
SwWriter::SwWriter(SfxMedium&, SwCursorShell&, bool)
SwWriter::SwWriter(SfxMedium&, SwDoc&)
SwWriter::SwWriter(SvStream&, SwCursorShell&, bool)
SwWriter::SwWriter(SvStream&, SwDoc&)
SwWriter::SwWriter(SvStream&, SwPaM&, bool)
SwWriter::SwWriter(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, SwDoc&)
SwWrtShell::AutoUpdateFrame(SwFrameFormat*, SfxItemSet const&)
SwWrtShell::AutoUpdatePara(SwTextFormatColl*, SfxItemSet const&, SwPaM*)
SwWrtShell::CalcAndSetScale(svt::EmbeddedObjectRef&, SwRect const*, SwRect const*, bool)
SwWrtShell::CallEvent(SvMacroItemId, SwCallMouseEvent const&, bool)
SwWrtShell::CanInsert()
SwWrtShell::ClickToField(SwField const&, bool)
SwWrtShell::ClickToINetAttr(SwFormatINetFormat const&, LoadUrlFlags)
SwWrtShell::ClickToINetGrf(Point const&, LoadUrlFlags)
SwWrtShell::ConnectObj(svt::EmbeddedObjectRef&, SwRect const&, SwRect const&)
SwWrtShell::DelLine()
SwWrtShell::DelNxtWord()
SwWrtShell::DelPrvWord()
SwWrtShell::DelToEndOfLine()
SwWrtShell::DelToEndOfPara()
SwWrtShell::DelToStartOfPara()
SwWrtShell::DelToStartOfSentence()
SwWrtShell::Do(SwWrtShell::DoType, unsigned short, unsigned short)
SwWrtShell::DrawSelChanged()
SwWrtShell::Edit()
SwWrtShell::EndNxtPg(bool)
SwWrtShell::EndOfColumn()
SwWrtShell::EndOfNextColumn()
SwWrtShell::EndOfPrevColumn()
SwWrtShell::EnterAddMode()
SwWrtShell::EnterBlockMode()
SwWrtShell::EnterExtMode()
SwWrtShell::ExecMacro(SvxMacro const&, rtl::OUString*, SbxArray*)
SwWrtShell::GetAttrOutlineContentVisible(unsigned long)
SwWrtShell::GetCurPageStyle() const
SwWrtShell::GetDoString(SwWrtShell::DoType) const
SwWrtShell::GetDoStrings(SwWrtShell::DoType, SfxStringListItem&) const
SwWrtShell::GetRepeatString() const
SwWrtShell::GetSelDescr() const
SwWrtShell::GetURLFromButton(rtl::OUString&, rtl::OUString&) const
SwWrtShell::GoNextBookmark()
SwWrtShell::GoPrevBookmark()
SwWrtShell::GotoDrawingObject(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwWrtShell::GotoFieldmark(sw::mark::IFieldmark const*)
SwWrtShell::GotoFootnoteAnchor(SwTextFootnote const&)
SwWrtShell::GotoFormatField(SwFormatField const&)
SwWrtShell::GotoINetAttr(SwTextINetFormat const&)
SwWrtShell::GotoMark(rtl::OUString const&)
SwWrtShell::GotoMark(sw::mark::IMark const*, bool)
SwWrtShell::GotoOutline(rtl::OUString const&)
SwWrtShell::GotoOutline(unsigned long)
SwWrtShell::GotoRedline(unsigned long, bool)
SwWrtShell::GotoRefMark(rtl::OUString const&, unsigned short, unsigned short)
SwWrtShell::GotoRegion(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwWrtShell::Insert(rtl::OUString const&, rtl::OUString const&, Graphic const&, SwFlyFrameAttrMgr*, RndStdIds)
SwWrtShell::InsertByWord(rtl::OUString const&)
SwWrtShell::InsertColumnBreak()
SwWrtShell::InsertOleObject(svt::EmbeddedObjectRef const&, SwFlyFrameFormat**)
SwWrtShell::InsertPostIt(SwFieldMgr&, SfxRequest const&)
SwWrtShell::InsertTableOf(SwTOXBase const&, SfxItemSet const*)
SwWrtShell::IntelligentCut(SelectionType, bool)
SwWrtShell::Invalidate()
SwWrtShell::InvalidateOutlineContentVisibility()
SwWrtShell::IsEndWrd()
SwWrtShell::IsOutlineContentVisible(unsigned long)
SwWrtShell::IsSplitVerticalByDefault() const
SwWrtShell::LeaveAddMode()
SwWrtShell::LeaveBlockMode()
SwWrtShell::LeaveExtMode()
SwWrtShell::LeftMargin(bool, bool)
SwWrtShell::MakeAllFoldedOutlineContentVisible(bool)
SwWrtShell::MakeOutlineContentVisible(unsigned long, bool)
SwWrtShell::MoveCursor(bool)
SwWrtShell::MoveObjectIfActive(svt::EmbeddedObjectRef&, Point const&)
SwWrtShell::NavigatorPaste(NaviContentBookmark const&, unsigned short)
SwWrtShell::NoEdit(bool)
SwWrtShell::NumOn()
SwWrtShell::NumOrBulletOff()
SwWrtShell::NumOrBulletOn(bool)
SwWrtShell::PageCursor(long, bool)
SwWrtShell::PopMode()
SwWrtShell::PushMode()
SwWrtShell::QuickUpdateStyle()
SwWrtShell::RightMargin(bool, bool)
SwWrtShell::SearchAttr(SfxItemSet const&, bool, SwDocPositions, SwDocPositions, FindRanges, i18nutil::SearchOptions2 const*, SfxItemSet const*)
SwWrtShell::SearchTempl(rtl::OUString const&, SwDocPositions, SwDocPositions, FindRanges, rtl::OUString const*)
SwWrtShell::SelNearestWrd()
SwWrtShell::SelSentence(Point const*)
SwWrtShell::SelectNextPrevHyperlink(bool)
SwWrtShell::SelectTableCell()
SwWrtShell::SelectTableCol()
SwWrtShell::SelectTableRow()
SwWrtShell::SelectTableRowCol(Point const&, Point const*, bool)
SwWrtShell::SetInsMode(bool)
SwWrtShell::SetPageStyle(rtl::OUString const&)
SwWrtShell::SetRedlineFlagsAndCheckInsMode(RedlineFlags)
SwWrtShell::SetShowHeaderFooterSeparator(FrameControlType, bool)
SwWrtShell::SetSplitVerticalByDefault(bool)
SwWrtShell::StartDropDownFieldDlg(SwField*, bool, bool, weld::Widget*, SwWrtShell::FieldDialogPressedButton*)
SwWrtShell::StartInputFieldDlg(SwField*, bool, bool, weld::Widget*, SwWrtShell::FieldDialogPressedButton*)
SwWrtShell::StartInsertRegionDialog(SwSectionData const&)
SwWrtShell::StartOfColumn()
SwWrtShell::StartOfNextColumn()
SwWrtShell::StartOfPrevColumn()
SwWrtShell::SttPrvPg(bool)
SwWrtShell::SttSelect()
SwWrtShell::SwWrtShell(SwDoc&, vcl::Window*, SwView&, SwViewOption const*)
SwWrtShell::SwWrtShell(SwWrtShell&, vcl::Window*, SwView&)
SwWrtShell::ToggleAddMode()
SwWrtShell::ToggleBlockMode()
SwWrtShell::ToggleExtMode()
SwWrtShell::TryRemoveIndent()
SwWrtShell::UpdateInputFields(SwInputFieldList*)
SwWrtShell::addCurrentPosition()
SwWrtShell::getLOKPayload(int, int, bool*) const
SwWrtShell::~SwWrtShell()
SwWrtShellItem::Clone(SfxItemPool*) const
SwWrtShellItem::SwWrtShellItem(SwWrtShell*)
SwWrtShellItem::operator==(SfxPoolItem const&) const
SwXTextDocument::CreateCursorForSearch(com::sun::star::uno::Reference<com::sun::star::text::XTextCursor>&)
SwXTextDocument::FindAny(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&, com::sun::star::uno::Reference<com::sun::star::text::XTextCursor>&, bool, int&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SwXTextDocument::GetNumberFormatter()
SwXTextDocument::GetPropertyHelper()
SwXTextDocument::GetRenderDoc(SfxViewShell*&, com::sun::star::uno::Any const&, bool)
SwXTextDocument::GetRenderView(bool&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, bool)
SwXTextDocument::GuessViewShell(bool&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
SwXTextDocument::InitNewDoc()
SwXTextDocument::Invalidate()
SwXTextDocument::NotifyRefreshListeners()
SwXTextDocument::Reactivate(SwDocShell*)
SwXTextDocument::SwXTextDocument(SwDocShell*)
SwXTextDocument::acquire()
SwXTextDocument::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SwXTextDocument::addPasteEventListener(com::sun::star::uno::Reference<com::sun::star::text::XPasteListener> const&)
SwXTextDocument::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextDocument::addRefreshListener(com::sun::star::uno::Reference<com::sun::star::util::XRefreshListener> const&)
SwXTextDocument::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextDocument::attachResource(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::close(unsigned char)
SwXTextDocument::connectController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
SwXTextDocument::create(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const*)
SwXTextDocument::createClone()
SwXTextDocument::createInstance(rtl::OUString const&)
SwXTextDocument::createInstanceWithArguments(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SwXTextDocument::createReplaceDescriptor()
SwXTextDocument::createSearchDescriptor()
SwXTextDocument::disconnectController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
SwXTextDocument::dispose()
SwXTextDocument::executeFromFieldEvent(std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
SwXTextDocument::findAll(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
SwXTextDocument::findFirst(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
SwXTextDocument::findNext(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
SwXTextDocument::getArgs()
SwXTextDocument::getAutoStyles()
SwXTextDocument::getAvailableServiceNames()
SwXTextDocument::getBookmarks()
SwXTextDocument::getChapterNumberingRules()
SwXTextDocument::getCurrentController()
SwXTextDocument::getCurrentSelection()
SwXTextDocument::getDocWindow()
SwXTextDocument::getDocumentIndexes()
SwXTextDocument::getDocumentLanguages(short, short)
SwXTextDocument::getDocumentSize()
SwXTextDocument::getDrawPage()
SwXTextDocument::getDrawPages()
SwXTextDocument::getEmbeddedObjects()
SwXTextDocument::getEndnoteSettings()
SwXTextDocument::getEndnotes()
SwXTextDocument::getFlatParagraphIterator(int, unsigned char)
SwXTextDocument::getFootnoteSettings()
SwXTextDocument::getFootnotes()
SwXTextDocument::getGraphicObjects()
SwXTextDocument::getImplementationName()
SwXTextDocument::getLineNumberingProperties()
SwXTextDocument::getLinks()
SwXTextDocument::getNumberingRules()
SwXTextDocument::getPagePrintSettings()
SwXTextDocument::getPart()
SwXTextDocument::getPartHash(int)
SwXTextDocument::getPartName(int)
SwXTextDocument::getPartPageRectangles()
SwXTextDocument::getParts()
SwXTextDocument::getPointer()
SwXTextDocument::getPostIts(tools::JsonWriter&)
SwXTextDocument::getPropertyDefault(rtl::OUString const&)
SwXTextDocument::getPropertySetInfo()
SwXTextDocument::getPropertyState(rtl::OUString const&)
SwXTextDocument::getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwXTextDocument::getPropertyValue(rtl::OUString const&)
SwXTextDocument::getRedlines()
SwXTextDocument::getReferenceMarks()
SwXTextDocument::getRenderer(int, com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::getRendererCount(com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::getRulerState(tools::JsonWriter&)
SwXTextDocument::getSdrModelFromUnoModel() const
SwXTextDocument::getSearchResultRectangles(char const*)
SwXTextDocument::getSelection()
SwXTextDocument::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SwXTextDocument::getStyleFamilies()
SwXTextDocument::getSupportedServiceNames()
SwXTextDocument::getText()
SwXTextDocument::getTextFieldMasters()
SwXTextDocument::getTextFields()
SwXTextDocument::getTextFrames()
SwXTextDocument::getTextSections()
SwXTextDocument::getTextTables()
SwXTextDocument::getTrackedChangeAuthors(tools::JsonWriter&)
SwXTextDocument::getTrackedChanges(tools::JsonWriter&)
SwXTextDocument::getTypes()
SwXTextDocument::getURL()
SwXTextDocument::getXForms()
SwXTextDocument::hasControllersLocked()
SwXTextDocument::initializeForTiledRendering(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::isMimeTypeSupported()
SwXTextDocument::lockControllers()
SwXTextDocument::paintTile(VirtualDevice&, int, int, int, int, long, long)
SwXTextDocument::paintTile(com::sun::star::uno::Any const&, int, int, int, int, int, int)
SwXTextDocument::postKeyEvent(int, int, int)
SwXTextDocument::postMouseEvent(int, int, int, int, int, int)
SwXTextDocument::printPages(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::queryInterface(com::sun::star::uno::Type const&)
SwXTextDocument::reformat()
SwXTextDocument::refresh()
SwXTextDocument::release()
SwXTextDocument::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SwXTextDocument::removePasteEventListener(com::sun::star::uno::Reference<com::sun::star::text::XPasteListener> const&)
SwXTextDocument::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextDocument::removeRefreshListener(com::sun::star::uno::Reference<com::sun::star::util::XRefreshListener> const&)
SwXTextDocument::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextDocument::render(int, com::sun::star::uno::Any const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::replaceAll(com::sun::star::uno::Reference<com::sun::star::util::XSearchDescriptor> const&)
SwXTextDocument::resetSelection()
SwXTextDocument::setClientVisibleArea(tools::Rectangle const&)
SwXTextDocument::setClientZoom(int, int, int, int)
SwXTextDocument::setClipboard(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&)
SwXTextDocument::setCurrentController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
SwXTextDocument::setGraphicSelection(int, int, int)
SwXTextDocument::setPagePrintSettings(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextDocument::setPart(int, bool)
SwXTextDocument::setPropertyToDefault(rtl::OUString const&)
SwXTextDocument::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SwXTextDocument::setTextSelection(int, int, int)
SwXTextDocument::supportsService(rtl::OUString const&)
SwXTextDocument::unlockControllers()
SwXTextDocument::updateLinks()
SwXTextDocument::~SwXTextDocument()
SwXTextRange::DeleteAndInsert(rtl::OUString const&, bool)
SwXTextRange::GetDoc()
SwXTextRange::GetDoc() const
SwXTextRange::Impl::Notify(SfxHint const&)
SwXTextRange::Invalidate()
SwXTextRange::SetPositions(SwPaM const&)
SwXTextRange::SwXTextRange(SwPaM const&, com::sun::star::uno::Reference<com::sun::star::text::XText> const&, SwXTextRange::RangePosition)
SwXTextRange::SwXTextRange(SwSectionFormat&)
SwXTextRange::SwXTextRange(SwTableFormat&)
SwXTextRange::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextRange::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextRange::createContentEnumeration(rtl::OUString const&)
SwXTextRange::createEnumeration()
SwXTextRange::getAvailableServiceNames()
SwXTextRange::getElementType()
SwXTextRange::getEnd()
SwXTextRange::getImplementationName()
SwXTextRange::getPropertyDefault(rtl::OUString const&)
SwXTextRange::getPropertySetInfo()
SwXTextRange::getPropertyState(rtl::OUString const&)
SwXTextRange::getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwXTextRange::getPropertyValue(rtl::OUString const&)
SwXTextRange::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SwXTextRange::getStart()
SwXTextRange::getString()
SwXTextRange::getSupportedServiceNames()
SwXTextRange::getText()
SwXTextRange::getUnoTunnelId()
SwXTextRange::hasElements()
SwXTextRange::makeRedline(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SwXTextRange::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextRange::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextRange::setPropertyToDefault(rtl::OUString const&)
SwXTextRange::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SwXTextRange::setString(rtl::OUString const&)
SwXTextRange::supportsService(rtl::OUString const&)
SwXTextRange::~SwXTextRange()
SwXTextTableCursor::GetCursor()
SwXTextTableCursor::GetCursor() const
SwXTextTableCursor::GetDoc()
SwXTextTableCursor::GetDoc() const
SwXTextTableCursor::GetPaM()
SwXTextTableCursor::GetPaM() const
SwXTextTableCursor::Notify(SfxHint const&)
SwXTextTableCursor::SwXTextTableCursor(SwFrameFormat&, SwTableCursor const*)
SwXTextTableCursor::SwXTextTableCursor(SwFrameFormat*, SwTableBox const*)
SwXTextTableCursor::acquire()
SwXTextTableCursor::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextTableCursor::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextTableCursor::getImplementationName()
SwXTextTableCursor::getPropertySetInfo()
SwXTextTableCursor::getPropertyValue(rtl::OUString const&)
SwXTextTableCursor::getRangeName()
SwXTextTableCursor::getSupportedServiceNames()
SwXTextTableCursor::goDown(short, unsigned char)
SwXTextTableCursor::goLeft(short, unsigned char)
SwXTextTableCursor::goRight(short, unsigned char)
SwXTextTableCursor::goUp(short, unsigned char)
SwXTextTableCursor::gotoCellByName(rtl::OUString const&, unsigned char)
SwXTextTableCursor::gotoEnd(unsigned char)
SwXTextTableCursor::gotoStart(unsigned char)
SwXTextTableCursor::mergeRange()
SwXTextTableCursor::queryInterface(com::sun::star::uno::Type const&)
SwXTextTableCursor::release()
SwXTextTableCursor::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextTableCursor::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextTableCursor::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SwXTextTableCursor::splitRange(short, unsigned char)
SwXTextTableCursor::supportsService(rtl::OUString const&)
SwXTextTables::SwXTextTables(SwDoc*)
SwXTextTables::getByIndex(int)
SwXTextTables::getByName(rtl::OUString const&)
SwXTextTables::getCount()
SwXTextTables::getElementNames()
SwXTextTables::getElementType()
SwXTextTables::getImplementationName()
SwXTextTables::getSupportedServiceNames()
SwXTextTables::hasByName(rtl::OUString const&)
SwXTextTables::hasElements()
SwXTextTables::supportsService(rtl::OUString const&)
SwXTextTables::~SwXTextTables()
SwpHints::Resort() const
SwpHints::ResortWhichMap() const
SyntaxHighlighter::SyntaxHighlighter(HighlighterLanguage)
SyntaxHighlighter::Tokenizer::Tokenizer(HighlighterLanguage)
SyntaxHighlighter::Tokenizer::getHighlightPortions(rtl::OUString const&, std::vector<HighlightPortion, std::allocator<HighlightPortion> >&) const
SyntaxHighlighter::Tokenizer::getNextToken(char16_t const*&, TokenType&, char16_t const*&, char16_t const*&) const
SyntaxHighlighter::Tokenizer::setKeyWords(char const**, unsigned short)
SyntaxHighlighter::~SyntaxHighlighter()
SystemChildWindow::GetOptimalSize() const
SystemChildWindow::GetSystemData() const
SystemChildWindow::SystemChildWindow(vcl::Window*, long)
SystemChildWindow::SystemChildWindow(vcl::Window*, long, SystemWindowData*, bool)
SystemChildWindow::dispose()
SystemChildWindow::~SystemChildWindow()
SystemWindow::CloseNotebookBar()
SystemWindow::GetCloseHdl() const
SystemWindow::GetMaxOutputSizePixel() const
SystemWindow::GetMenuBarHeight() const
SystemWindow::GetScreenNumber() const
SystemWindow::GetWindowState(WindowStateMask) const
SystemWindow::GetWindowStateData(WindowStateData&) const
SystemWindow::ImplData::ImplData()
SystemWindow::IsTitleButtonVisible(TitleButton) const
SystemWindow::SetApplicationID(rtl::OUString const&)
SystemWindow::SetMaxOutputSizePixel(Size const&)
SystemWindow::SetMenuBar(MenuBar*)
SystemWindow::SetNotebookBar(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, NotebookBarAddonsItem const&, bool)
SystemWindow::SetRepresentedURL(rtl::OUString const&)
SystemWindow::SetScreenNumber(unsigned int)
SystemWindow::SetWindowState(rtl::OString const&)
SystemWindow::SetWindowStateData(WindowStateData const&)
SystemWindow::ShowTitleButton(TitleButton, bool)
SystemWindow::SystemWindow(WindowType, char const*)
SystemWindow::UpdatePositionData()
SystemWindow::createScreenshot()
SystemWindow::isLayoutEnabled() const
SystemWindow::loadUI(vcl::Window*, rtl::OString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SystemWindow::setOptimalLayoutSize()
SystemWindow::~SystemWindow()
TB::TB()
TBCData::TBCData(TBCHeader const&)
TBCExtraInfo::Read(SvStream&)
TBCExtraInfo::TBCExtraInfo()
TBCExtraInfo::getOnAction() const
TBCGeneralInfo::ImportToolBarControlData(CustomToolBarImportHelper&, std::vector<com::sun::star::beans::PropertyValue, std::allocator<com::sun::star::beans::PropertyValue> >&)
TBCGeneralInfo::Read(SvStream&)
TBCGeneralInfo::TBCGeneralInfo()
TBCHeader::TBCHeader()
TBCHeader::~TBCHeader()
TBCMenuSpecific::Read(SvStream&)
TBCMenuSpecific::TBCMenuSpecific()
TBVisualData::TBVisualData()
TabBar::CalcWindowSizePixel() const
TabBar::GetPageBits(unsigned short) const
TabBar::MakeVisible(unsigned short)
TabBar::MovePage(unsigned short, unsigned short)
TabBar::RemovePage(unsigned short)
TabBar::SetFirstPageId(unsigned short)
TabBar::SetMirrored(bool)
TabBar::Split()
TabBar::TabBar(vcl::Window*, long)
TabBar::next()
TabBar::prev()
TabBar::seek(unsigned long)
TabBar::~TabBar()
TabControl::ActivatePage()
TabControl::Command(CommandEvent const&)
TabControl::DataChanged(DataChangedEvent const&)
TabControl::DeactivatePage()
TabControl::DumpAsPropertyTree(tools::JsonWriter&)
TabControl::EventNotify(NotifyEvent&)
TabControl::FillLayoutData() const
TabControl::GetCanonicalFont(StyleSettings const&) const
TabControl::GetCanonicalTextColor(StyleSettings const&) const
TabControl::GetFocus()
TabControl::GetHelpText(unsigned short) const
TabControl::GetOptimalSize() const
TabControl::GetPageIDs() const
TabControl::GetPageId(Point const&) const
TabControl::GetPageId(rtl::OString const&) const
TabControl::GetPageName(unsigned short) const
TabControl::GetUITestFactory() const
TabControl::ImplActivateTabPage(bool)
TabControl::ImplPlaceTabs(long)
TabControl::InsertPage(unsigned short, rtl::OUString const&, unsigned short)
TabControl::KeyInput(KeyEvent const&)
TabControl::LoseFocus()
TabControl::MouseButtonDown(MouseEvent const&)
TabControl::Paint(OutputDevice&, tools::Rectangle const&)
TabControl::PreNotify(NotifyEvent&)
TabControl::RemovePage(unsigned short)
TabControl::RequestHelp(HelpEvent const&)
TabControl::Resize()
TabControl::SetAccessibleDescription(unsigned short, rtl::OUString const&)
TabControl::SetAccessibleName(unsigned short, rtl::OUString const&)
TabControl::SetCurPageId(unsigned short)
TabControl::SetHelpText(unsigned short, rtl::OUString const&)
TabControl::SetPageEnabled(unsigned short, bool)
TabControl::SetPageImage(unsigned short, Image const&)
TabControl::SetPageName(unsigned short, rtl::OString const&) const
TabControl::SetPageText(unsigned short, rtl::OUString const&)
TabControl::SetPageVisible(unsigned short, bool)
TabControl::SetPosPixel(Point const&)
TabControl::SetPosSizePixel(Point const&, Size const&)
TabControl::SetSizePixel(Size const&)
TabControl::SetTabPage(unsigned short, TabPage*)
TabControl::SetTabPageSizePixel(Size const&)
TabControl::StateChanged(StateChangedType)
TabControl::TabControl(vcl::Window*, long)
TabControl::calculateRequisition() const
TabControl::dispose()
TabControl::queue_resize(StateChangedType)
TabControl::setAllocation(Size const&)
TabControl::~TabControl()
TabPage::DataChanged(DataChangedEvent const&)
TabPage::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
TabPage::GetOptimalSize() const
TabPage::Paint(OutputDevice&, tools::Rectangle const&)
TabPage::ResetScrollBars()
TabPage::Resize()
TabPage::SetPosPixel(Point const&)
TabPage::SetPosSizePixel(Point const&, Size const&)
TabPage::SetScrollHeight(long)
TabPage::SetScrollLeft(long)
TabPage::SetScrollTop(long)
TabPage::SetScrollWidth(long)
TabPage::SetSizePixel(Size const&)
TabPage::StateChanged(StateChangedType)
TabPage::TabPage(vcl::Window*, long)
TabPage::dispose()
TabPage::lcl_Scroll(long, long)
TabPage::~TabPage()
TabPaneValue::clone() const
Task::SetDeletionFlags()
Task::Start(bool)
Task::StartTimer(unsigned long)
Task::Task(Task const&)
Task::Task(char const*)
Task::operator=(Task const&)
Task::~Task()
TaskPaneList::FindNextFloat(vcl::Window*, bool)
TaskPaneList::FindNextSplitter(vcl::Window*)
TaskPaneList::HandleKeyEvent(KeyEvent const&)
TaskPaneList::IsCycleKey(vcl::KeyCode const&)
TaskPaneList::IsInList(vcl::Window*)
TaskPaneList::TaskPaneList()
TaskPaneList::~TaskPaneList()
TextAttrib::operator==(TextAttrib const&) const
TextAttrib::~TextAttrib()
TextAttribFontColor::Clone() const
TextAttribFontColor::SetFont(vcl::Font&) const
TextAttribFontColor::TextAttribFontColor(Color const&)
TextAttribFontColor::operator==(TextAttrib const&) const
TextAttribFontWeight::Clone() const
TextAttribFontWeight::SetFont(vcl::Font&) const
TextAttribFontWeight::TextAttribFontWeight(FontWeight)
TextAttribFontWeight::operator==(TextAttrib const&) const
TextEngine::CalcParaHeight(unsigned int) const
TextEngine::CalcTextHeight() const
TextEngine::CalcTextWidth(unsigned int)
TextEngine::CalcTextWidth(unsigned int, int, int)
TextEngine::CheckIdleFormatter()
TextEngine::ConnectContents(unsigned int)
TextEngine::CreateAndInsertEmptyLine(unsigned int)
TextEngine::CreateLines(unsigned int)
TextEngine::CreateTextPortions(unsigned int, int)
TextEngine::CursorMoved(unsigned int)
TextEngine::Draw(OutputDevice*, Point const&)
TextEngine::FindCharAttrib(TextPaM const&, unsigned short) const
TextEngine::FormatAndUpdate(TextView*)
TextEngine::FormatDoc()
TextEngine::FormatFullDoc()
TextEngine::GetBreakIterator()
TextEngine::GetCharPos(unsigned int, unsigned long, long)
TextEngine::GetEditCursor(TextPaM const&, bool, bool)
TextEngine::GetInvalidYOffsets(unsigned int)
TextEngine::GetText(LineEnd) const
TextEngine::GetText(TextSelection const&, LineEnd) const
TextEngine::GetTextLen() const
TextEngine::GetTextLen(TextSelection const&) const
TextEngine::GetTextLines(LineEnd) const
TextEngine::GetView(unsigned short) const
TextEngine::GetViewCount() const
TextEngine::IdleFormatAndUpdate(TextView*, unsigned short)
TextEngine::ImpBreakLine(unsigned int, TextLine*, int, long)
TextEngine::ImpCharsInserted(unsigned int, int, int)
TextEngine::ImpCharsRemoved(unsigned int, int, int)
TextEngine::ImpConnectParagraphs(unsigned int, unsigned int)
TextEngine::ImpDeleteText(TextSelection const&)
TextEngine::ImpFindIndex(unsigned int, Point const&)
TextEngine::ImpGetAlign() const
TextEngine::ImpGetLocaleDataWrapper()
TextEngine::ImpGetOutputOffset(unsigned int, TextLine*, int, int)
TextEngine::ImpGetPortionXOffset(unsigned int, TextLine const*, unsigned long)
TextEngine::ImpGetRightToLeft(unsigned int, int)
TextEngine::ImpGetXPos(unsigned int, TextLine*, int, bool)
TextEngine::ImpInitDoc()
TextEngine::ImpInitLayoutMode(OutputDevice*)
TextEngine::ImpInitWritingDirections(unsigned int)
TextEngine::ImpInsertParaBreak(TextPaM const&)
TextEngine::ImpInsertParaBreak(TextSelection const&)
TextEngine::ImpInsertText(TextSelection const&, char16_t, bool)
TextEngine::ImpInsertText(TextSelection const&, rtl::OUString const&)
TextEngine::ImpPaint(OutputDevice*, Point const&, tools::Rectangle const*, TextSelection const*)
TextEngine::ImpParagraphInserted(unsigned int)
TextEngine::ImpParagraphRemoved(unsigned int)
TextEngine::ImpRemoveChars(TextPaM const&, int)
TextEngine::ImpRemoveParagraph(unsigned int)
TextEngine::ImpRemoveText()
TextEngine::InsertContent(std::unique_ptr<TextNode, std::default_delete<TextNode> >, unsigned int)
TextEngine::InsertUndo(std::unique_ptr<TextUndo, std::default_delete<TextUndo> >, bool)
TextEngine::IsSimpleCharInput(KeyEvent const&)
TextEngine::RecalcTextPortion(unsigned int, int, int)
TextEngine::ReplaceText(TextSelection const&, rtl::OUString const&)
TextEngine::SeekCursor(unsigned int, int, vcl::Font&, OutputDevice*)
TextEngine::SetLeftMargin(unsigned short)
TextEngine::SetLocale(com::sun::star::lang::Locale const&)
TextEngine::SetMaxTextLen(int)
TextEngine::SetMaxTextWidth(long)
TextEngine::SetRightToLeft(bool)
TextEngine::SetText(rtl::OUString const&)
TextEngine::SetTextAlign(TxtAlign)
TextEngine::SplitContent(unsigned int, int)
TextEngine::SplitTextPortion(unsigned int, int)
TextEngine::TextEngine()
TextEngine::TextModified()
TextEngine::UndoActionEnd()
TextEngine::UndoActionStart(unsigned short)
TextEngine::UpdateViews(TextView*)
TextEngine::ValidatePaM(TextPaM&) const
TextEngine::ValidateSelection(TextSelection&) const
TextEngine::~TextEngine()
TextFilter::~TextFilter()
TextListenerMultiplexer::TextListenerMultiplexer(cppu::OWeakObject&)
TextListenerMultiplexer::acquire()
TextListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
TextListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
TextListenerMultiplexer::release()
TextListenerMultiplexer::textChanged(com::sun::star::awt::TextEvent const&)
TextRanger::GetBoundRect_() const
TextRanger::SetVertical(bool)
TextRanger::TextRanger(basegfx::B2DPolyPolygon const&, basegfx::B2DPolyPolygon const*, unsigned short, unsigned short, unsigned short, bool, bool, bool)
TextRanger::~TextRanger()
TextSelection::Justify()
TextSelection::TextSelection()
TextSelection::TextSelection(TextPaM const&)
TextSelection::TextSelection(TextPaM const&, TextPaM const&)
TextView::CenterPaM(TextPaM const&)
TextView::Copy(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&)
TextView::CursorDown(TextPaM const&)
TextView::CursorEndOfDoc()
TextView::CursorEndOfLine(TextPaM const&)
TextView::CursorEndOfParagraph(TextPaM const&)
TextView::CursorLeft(TextPaM const&, unsigned short)
TextView::CursorRight(TextPaM const&, unsigned short)
TextView::CursorStartOfDoc()
TextView::CursorStartOfLine(TextPaM const&)
TextView::CursorStartOfParagraph(TextPaM const&)
TextView::CursorUp(TextPaM const&)
TextView::CursorWordLeft(TextPaM const&)
TextView::CursorWordRight(TextPaM const&)
TextView::EnableCursor(bool)
TextView::GetDocPos(Point const&) const
TextView::GetSelected(LineEnd) const
TextView::GetSelection() const
TextView::GetWindowPos(Point const&) const
TextView::HideCursor()
TextView::HideSelection()
TextView::ImpDelete(unsigned char, unsigned char)
TextView::ImpGetOutputStartPos(Point const&) const
TextView::ImpHideDDCursor()
TextView::ImpIndentBlock(bool)
TextView::ImpMoveCursor(KeyEvent const&)
TextView::ImpPaint(OutputDevice&, Point const&, tools::Rectangle const*, TextSelection const*)
TextView::ImpPaint(OutputDevice&, tools::Rectangle const&)
TextView::ImpSetSelection(TextSelection const&)
TextView::ImpShowCursor(bool, bool, bool)
TextView::ImpShowDDCursor()
TextView::ImpShowHideSelection(TextSelection const*)
TextView::ImplCheckTextLen(rtl::OUString const&) const
TextView::ImplTruncateNewText(rtl::OUString&) const
TextView::IndentBlock()
TextView::Invalidate()
TextView::IsAutoScroll() const
TextView::IsCursorEnabled() const
TextView::IsInSelection(TextPaM const&) const
TextView::IsInsertMode() const
TextView::IsSelectionAtPoint(Point const&)
TextView::MatchGroup()
TextView::PageDown(TextPaM const&)
TextView::PageUp(TextPaM const&)
TextView::Paste(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&)
TextView::Read(SvStream&)
TextView::SetCursorAtPoint(Point const&)
TextView::SetInsertMode(bool)
TextView::SetPaintSelection(bool)
TextView::SetReadOnly(bool)
TextView::SetSelection(TextSelection const&, bool)
TextView::ShowSelection()
TextView::ShowSelection(TextSelection const&)
TextView::TextView(ExtTextEngine*, vcl::Window*)
TextView::UnindentBlock()
TextView::dragDropEnd(com::sun::star::datatransfer::dnd::DragSourceDropEvent const&)
TextView::dragEnter(com::sun::star::datatransfer::dnd::DropTargetDragEnterEvent const&)
TextView::dragExit(com::sun::star::datatransfer::dnd::DropTargetEvent const&)
TextView::dragGestureRecognized(com::sun::star::datatransfer::dnd::DragGestureEvent const&)
TextView::dragOver(com::sun::star::datatransfer::dnd::DropTargetDragEvent const&)
TextView::drop(com::sun::star::datatransfer::dnd::DropTargetDropEvent const&)
TextView::~TextView()
ThumbnailView::CalculateItemPositions(bool)
ThumbnailView::DrawItem(ThumbnailViewItem const*)
ThumbnailView::GetItemId(unsigned long) const
ThumbnailView::GetItemPos(unsigned short) const
ThumbnailView::ImplDeleteItems()
ThumbnailView::ImplFireAccessibleEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
ThumbnailView::ImplGetItem(Point const&) const
ThumbnailView::ImplGetItem(unsigned long)
ThumbnailView::ImplGetVisibleItem(unsigned short)
ThumbnailView::ImplGetVisibleItemCount() const
ThumbnailView::ImplHasAccessibleListeners() const
ThumbnailView::ImplInit()
ThumbnailView::IsItemSelected(unsigned short) const
ThumbnailView::MakeItemVisible(unsigned short)
ThumbnailView::RemoveItem(unsigned short)
ThumbnailView::ShowTooltips(bool)
ThumbnailView::ThumbnailView(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >, std::unique_ptr<weld::Menu, std::default_delete<weld::Menu> >)
ThumbnailView::UpdateColors()
ThumbnailView::filterItems(std::function<bool (ThumbnailViewItem const*)> const&)
ThumbnailView::getAccessible() const
ThumbnailView::getNextItemId() const
ThumbnailView::setItemMaxTextLength(unsigned int)
ThumbnailView::updateItems(std::vector<std::unique_ptr<ThumbnailViewItem, std::default_delete<ThumbnailViewItem> >, std::allocator<std::unique_ptr<ThumbnailViewItem, std::default_delete<ThumbnailViewItem> > > >)
ThumbnailView::~ThumbnailView()
ThumbnailViewItem::GetAccessible(bool)
ThumbnailViewItem::Paint(drawinglayer::processor2d::BaseProcessor2D*, ThumbnailItemAttributes const*)
ThumbnailViewItem::ThumbnailViewItem(ThumbnailView&, unsigned short)
ThumbnailViewItem::addTextPrimitives(rtl::OUString const&, ThumbnailItemAttributes const*, Point, drawinglayer::primitive2d::Primitive2DContainer&)
ThumbnailViewItem::calculateItemsPosition(long, long, unsigned int, ThumbnailItemAttributes const*)
ThumbnailViewItem::createBorderLine(basegfx::B2DPolygon const&)
ThumbnailViewItem::setDrawArea(tools::Rectangle const&)
ThumbnailViewItem::setHighlight(bool)
ThumbnailViewItem::setSelection(bool)
ThumbnailViewItem::setTitle(rtl::OUString const&)
ThumbnailViewItem::show(bool)
ThumbnailViewItem::updateHighlight(bool, Point const&)
ThumbnailViewItem::~ThumbnailViewItem()
TightBounds(SkPath const&, SkRect*)
Timer::Invoke(Timer*)
Timer::Timer(Timer const&)
Timer::Timer(bool, char const*)
Timer::~Timer()
ToolBox::AlwaysLocked()
ToolBox::CalcFloatingWindowSizePixel()
ToolBox::CalcFloatingWindowSizePixel(unsigned long)
ToolBox::CalcMinimumWindowSizePixel()
ToolBox::CalcPopupWindowSizePixel()
ToolBox::CalcWindowSizePixel(unsigned long, WindowAlign)
ToolBox::Clear()
ToolBox::CopyItem(ToolBox const&, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>)
ToolBox::DoubleClick()
ToolBox::EnableCustomize(bool)
ToolBox::ExecuteCustomMenu(tools::Rectangle const&)
ToolBox::GetDefaultImageSize() const
ToolBox::GetDefaultImageSize(ToolBoxButtonSize)
ToolBox::GetItemData(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetItemId(Point const&) const
ToolBox::GetItemImage(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetMenu() const
ToolBox::GetMenuType() const
ToolBox::GetOverflowRect() const
ToolBox::Highlight()
ToolBox::InsertBreak(unsigned long)
ToolBox::InsertItem(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&, ToolBoxItemBits, unsigned long)
ToolBox::InsertSpace()
ToolBox::IsItemClipped(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::IsMenuEnabled() const
ToolBox::Lock(bool)
ToolBox::RemoveItem(unsigned long)
ToolBox::SetAlign(WindowAlign)
ToolBox::SetHelpText(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
ToolBox::SetItemCommand(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
ToolBox::SetItemData(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, void*)
ToolBox::SetItemExpand(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, bool)
ToolBox::SetItemImageAngle(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, o3tl::strong_int<short, FractionTag<10> >)
ToolBox::SetItemImageMirrorMode(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, bool)
ToolBox::SetItemWindowNonInteractive(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, bool)
ToolBox::SetLineCount(unsigned long)
ToolBox::SetMenuExecuteHdl(Link<ToolBox*, void> const&)
ToolBox::SetMenuType(ToolBoxMenuType)
ToolBox::SetStyle(long)
ToolBox::SetToolBoxTextPosition(ToolBoxTextPosition)
ToolBox::SetToolboxButtonSize(ToolBoxButtonSize)
ToolBox::ShowLine(bool)
ToolBox::ToolBox(vcl::Window*, long)
ToolBox::ToolBox(vcl::Window*, rtl::OString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
ToolBox::UpdateCustomMenu()
ToolBox::WillUsePopupMode() const
ToolBox::WillUsePopupMode(bool)
ToolBox::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
ToolBox::~ToolBox()
ToolbarPopupContainer::ToolbarPopupContainer(weld::Widget*)
ToolbarPopupContainer::unsetPopover()
ToolbarPopupContainer::~ToolbarPopupContainer()
ToolbarUnoDispatcher::CreateController(rtl::OUString const&)
ToolbarUnoDispatcher::GetIconSize()
ToolbarUnoDispatcher::ToolbarUnoDispatcher(weld::Toolbar&, weld::Builder&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, bool)
ToolbarUnoDispatcher::dispose()
ToolbarUnoDispatcher::~ToolbarUnoDispatcher()
TopLevelWindowLocker::TopLevelWindowLocker()
TopLevelWindowLocker::~TopLevelWindowLocker()
TransferDataContainer::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
TransferDataContainer::StartDrag(vcl::Window*, signed char, Link<signed char, void> const&)
TransferDataContainer::~TransferDataContainer()
TransferableClipboardListener::TransferableClipboardListener(Link<TransferableDataHelper*, void> const&)
TransferableClipboardListener::changedContents(com::sun::star::datatransfer::clipboard::ClipboardEvent const&)
TransferableClipboardListener::disposing(com::sun::star::lang::EventObject const&)
TransferableClipboardListener::~TransferableClipboardListener()
TransferableDataHelper::FillDataFlavorExVector(com::sun::star::uno::Sequence<com::sun::star::datatransfer::DataFlavor> const&, std::vector<DataFlavorEx, std::allocator<DataFlavorEx> >&)
TransferableDataHelper::GetBitmapEx(com::sun::star::datatransfer::DataFlavor const&, BitmapEx&) const
TransferableDataHelper::GetFileList(FileList&) const
TransferableDataHelper::GetFormatDataFlavor(unsigned int) const
TransferableDataHelper::GetGDIMetaFile(com::sun::star::datatransfer::DataFlavor const&, GDIMetaFile&) const
TransferableDataHelper::GetGraphic(com::sun::star::datatransfer::DataFlavor const&, Graphic&) const
TransferableDataHelper::GetINetBookmark(com::sun::star::datatransfer::DataFlavor const&, INetBookmark&) const
TransferableDataHelper::GetINetImage(com::sun::star::datatransfer::DataFlavor const&, INetImage&) const
TransferableDataHelper::GetImageMap(com::sun::star::datatransfer::DataFlavor const&, ImageMap&) const
TransferableDataHelper::GetInputStream(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&) const
TransferableDataHelper::GetSequence(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&) const
TransferableDataHelper::GetString(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString&) const
TransferableDataHelper::GetTransferableObjectDescriptor(TransferableObjectDescriptor&)
TransferableDataHelper::InitFormats()
TransferableDataHelper::Rebind(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&)
TransferableDataHelper::StopClipboardListening()
TransferableDataHelper::TransferableDataHelper()
TransferableDataHelper::TransferableDataHelper(TransferableDataHelper const&)
TransferableDataHelper::TransferableDataHelper(TransferableDataHelper&&)
TransferableDataHelper::TransferableDataHelper(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&)
TransferableDataHelper::operator=(TransferableDataHelper const&)
TransferableDataHelper::~TransferableDataHelper()
TransferableHelper::CopyToSelection(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&) const
TransferableHelper::RemoveFormat(com::sun::star::datatransfer::DataFlavor const&)
TransferableHelper::~TransferableHelper()
TranslateNId::operator==(TranslateNId const&) const
TypeSerializer::TypeSerializer(SvStream&)
TypeSerializer::readGfxLink(GfxLink&)
TypeSerializer::writeGfxLink(GfxLink const&)
UCBStorage::Commit()
UCBStorage::CopyStorageElement_Impl(UCBStorageElement_Impl const&, BaseStorage*, rtl::OUString const&) const
UCBStorage::CopyTo(BaseStorage*) const
UCBStorage::CopyTo(rtl::OUString const&, BaseStorage*, rtl::OUString const&)
UCBStorage::Equals(BaseStorage const&) const
UCBStorage::FillInfoList(std::vector<SvStorageInfo, std::allocator<SvStorageInfo> >*) const
UCBStorage::FindElement_Impl(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
UCBStorage::GetClassId() const
UCBStorage::GetClassName()
UCBStorage::GetFormat()
UCBStorage::GetName() const
UCBStorage::GetUserName()
UCBStorage::IsContained(rtl::OUString const&) const
UCBStorage::IsRoot() const
UCBStorage::IsStorage(rtl::OUString const&) const
UCBStorage::IsStream(rtl::OUString const&) const
UCBStorage::OpenOLEStorage(rtl::OUString const&, StreamMode, bool)
UCBStorage::OpenStorage(rtl::OUString const&, StreamMode, bool)
UCBStorage::OpenStorage_Impl(rtl::OUString const&, StreamMode, bool, bool)
UCBStorage::OpenStream(rtl::OUString const&, StreamMode, bool)
UCBStorage::OpenUCBStorage(rtl::OUString const&, StreamMode, bool)
UCBStorage::Remove(rtl::OUString const&)
UCBStorage::Revert()
UCBStorage::SetClass(SvGlobalName const&, SotClipboardFormatId, rtl::OUString const&)
UCBStorage::SetClassId(SvGUID const&)
UCBStorage::SetDirty()
UCBStorage::UCBStorage(SvStream&, bool)
UCBStorage::UCBStorage(UCBStorage_Impl*)
UCBStorage::UCBStorage(rtl::OUString const&, StreamMode, bool, bool)
UCBStorage::UCBStorage(rtl::OUString const&, StreamMode, bool, bool, bool, com::sun::star::uno::Reference<com::sun::star::ucb::XProgressHandler> const&)
UCBStorage::UCBStorage(ucbhelper::Content const&, rtl::OUString const&, StreamMode, bool, bool)
UCBStorage::Validate(bool) const
UCBStorage::ValidateFAT()
UCBStorage::ValidateMode(StreamMode) const
UCBStorage::~UCBStorage()
UFlowChainedText::UFlowChainedText(Outliner const*, bool)
UIObject::execute(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
UIObject::get_state()
UIObject::~UIObject()
UITestLogger::UITestLogger()
UITestLogger::log(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
UITestLogger::logAction(VclPtr<Control> const&, VclEventId)
UITestLogger::logAction(vcl::Window* const&, VclEventId)
UITestLogger::logCommand(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
UITestLogger::logKeyInput(VclPtr<vcl::Window> const&, KeyEvent const&)
URIHelper::SetMaybeFileHdl(Link<rtl::OUString*, bool> const&)
UTIL_SetForkState@@NSSUTIL_3.12.3
UnoControl::GetComponentServiceName()
UnoControl::ImplCheckLocalize(rtl::OUString&)
UnoControl::ImplGetCompatiblePeer()
UnoControl::ImplLockPropertyChangeNotification(rtl::OUString const&, bool)
UnoControl::ImplLockPropertyChangeNotifications(com::sun::star::uno::Sequence<rtl::OUString> const&, bool)
UnoControl::UnoControl()
UnoControl::createPeer(com::sun::star::uno::Reference<com::sun::star::awt::XToolkit> const&, com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&)
UnoControl::getParentPeer() const
UnoControl::peerCreated()
UnoControl::~UnoControl()
UnoWrapperBase::SetUnoWrapper(UnoWrapperBase*)
VBACompression::VBACompression(SvStream&, SvMemoryStream&)
VBAEncryption::VBAEncryption(unsigned char const*, unsigned short, SvStream&, unsigned char)
VBAEncryption::write()
VBAEncryption::writeDataEnc()
VBAEncryption::writeDataLengthEnc()
VBAEncryption::writeIgnoredEnc()
VBAEncryption::writeProjKeyEnc()
VBAEncryption::writeSeed()
VBAEncryption::writeVersionEnc()
VCLUnoHelper::ConvertToAWTPoint(Point const&)
VCLUnoHelper::ConvertToAWTSize(Size const&)
VCLUnoHelper::ConvertToMapModeUnit(short)
VCLUnoHelper::ConvertToVCLPoint(com::sun::star::awt::Point const&)
VCLUnoHelper::ConvertToVCLSize(com::sun::star::awt::Size const&)
VCLUnoHelper::CreateFont(com::sun::star::uno::Reference<com::sun::star::awt::XFont> const&)
VCLUnoHelper::CreateFontMetric(FontMetric const&)
VCLUnoHelper::CreatePolygon(com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<int> const&)
VCLUnoHelper::GetOutputDevice(com::sun::star::uno::Reference<com::sun::star::awt::XDevice> const&)
VCLUnoHelper::GetOutputDevice(com::sun::star::uno::Reference<com::sun::star::awt::XGraphics> const&)
VCLUnoHelper::GetRegion(com::sun::star::uno::Reference<com::sun::star::awt::XRegion> const&)
VCLUnoHelper::GetWindow(com::sun::star::uno::Reference<com::sun::star::awt::XWindow2> const&)
VCLUnoHelper::IsZero(com::sun::star::awt::Rectangle const&)
VCLUnoHelper::VCL2UnoEmbedMapUnit(MapUnit)
VCLUnoHelper::createVCLKeyEvent(com::sun::star::awt::KeyEvent const&)
VCLUnoHelper::createVCLMouseEvent(com::sun::star::awt::MouseEvent const&)
VCLXAccessibleComponent::DisconnectEvents()
VCLXAccessibleComponent::getVclParent() const
VCLXAccessibleComponent::~VCLXAccessibleComponent()
VCLXCheckBox::CreateAccessibleContext()
VCLXCheckBox::ImplGetPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&)
VCLXCheckBox::ProcessWindowEvent(VclWindowEvent const&)
VCLXCheckBox::VCLXCheckBox()
VCLXCheckBox::addActionListener(com::sun::star::uno::Reference<com::sun::star::awt::XActionListener> const&)
VCLXCheckBox::addItemListener(com::sun::star::uno::Reference<com::sun::star::awt::XItemListener> const&)
VCLXCheckBox::calcAdjustedSize(com::sun::star::awt::Size const&)
VCLXCheckBox::dispose()
VCLXCheckBox::enableTriState(unsigned char)
VCLXCheckBox::getImplementationId()
VCLXCheckBox::getMinimumSize()
VCLXCheckBox::getPreferredSize()
VCLXCheckBox::getProperty(rtl::OUString const&)
VCLXCheckBox::getTypes()
VCLXCheckBox::queryInterface(com::sun::star::uno::Type const&)
VCLXCheckBox::removeActionListener(com::sun::star::uno::Reference<com::sun::star::awt::XActionListener> const&)
VCLXCheckBox::removeItemListener(com::sun::star::uno::Reference<com::sun::star::awt::XItemListener> const&)
VCLXCheckBox::setActionCommand(rtl::OUString const&)
VCLXCheckBox::setLabel(rtl::OUString const&)
VCLXCheckBox::setProperty(rtl::OUString const&, com::sun::star::uno::Any const&)
VCLXDevice::VCLXDevice()
VCLXDevice::getSomething(com::sun::star::uno::Sequence<signed char> const&)
VCLXDevice::~VCLXDevice()
VCLXFont::ImplAssertValidFontMetric()
VCLXFont::VCLXFont()
VCLXFont::getCharWidth(char16_t)
VCLXFont::getCharWidths(char16_t, char16_t)
VCLXFont::getFontDescriptor()
VCLXFont::getFontMetric()
VCLXFont::getKernPairs(com::sun::star::uno::Sequence<char16_t>&, com::sun::star::uno::Sequence<char16_t>&, com::sun::star::uno::Sequence<short>&)
VCLXFont::getSomething(com::sun::star::uno::Sequence<signed char> const&)
VCLXFont::getStringWidth(rtl::OUString const&)
VCLXFont::getStringWidthArray(rtl::OUString const&, com::sun::star::uno::Sequence<int>&)
VCLXFont::getUnoTunnelId()
VCLXFont::hasGlyphs(rtl::OUString const&)
VCLXFont::~VCLXFont()
VCLXMenu::ImplAddListener()
VCLXMenu::ImplCreateMenu(bool)
VCLXMenu::IsPopupMenu() const
VCLXMenu::VCLXMenu()
VCLXMenu::VCLXMenu(Menu*)
VCLXMenu::addMenuListener(com::sun::star::uno::Reference<com::sun::star::awt::XMenuListener> const&)
VCLXMenu::checkItem(short, unsigned char)
VCLXMenu::clear()
VCLXMenu::enableAutoMnemonics(unsigned char)
VCLXMenu::enableItem(short, unsigned char)
VCLXMenu::endExecute()
VCLXMenu::execute(com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&, com::sun::star::awt::Rectangle const&, short)
VCLXMenu::getAcceleratorKeyEvent(short)
VCLXMenu::getCommand(short)
VCLXMenu::getDefaultItem()
VCLXMenu::getHelpCommand(short)
VCLXMenu::getHelpText(short)
VCLXMenu::getImplementationId()
VCLXMenu::getImplementationName()
VCLXMenu::getItemCount()
VCLXMenu::getItemId(short)
VCLXMenu::getItemImage(short)
VCLXMenu::getItemPos(short)
VCLXMenu::getItemText(short)
VCLXMenu::getItemType(short)
VCLXMenu::getPopupMenu(short)
VCLXMenu::getSomething(com::sun::star::uno::Sequence<signed char> const&)
VCLXMenu::getSupportedServiceNames()
VCLXMenu::getTipHelpText(short)
VCLXMenu::getTypes()
VCLXMenu::hideDisabledEntries(unsigned char)
VCLXMenu::insertItem(short, rtl::OUString const&, short, short)
VCLXMenu::insertSeparator(short)
VCLXMenu::isInExecute()
VCLXMenu::isItemChecked(short)
VCLXMenu::isItemEnabled(short)
VCLXMenu::isPopupMenu()
VCLXMenu::queryInterface(com::sun::star::uno::Type const&)
VCLXMenu::removeItem(short, short)
VCLXMenu::removeMenuListener(com::sun::star::uno::Reference<com::sun::star::awt::XMenuListener> const&)
VCLXMenu::setAcceleratorKeyEvent(short, com::sun::star::awt::KeyEvent const&)
VCLXMenu::setCommand(short, rtl::OUString const&)
VCLXMenu::setDefaultItem(short)
VCLXMenu::setHelpCommand(short, rtl::OUString const&)
VCLXMenu::setHelpText(short, rtl::OUString const&)
VCLXMenu::setItemImage(short, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, unsigned char)
VCLXMenu::setItemText(short, rtl::OUString const&)
VCLXMenu::setPopupMenu(short, com::sun::star::uno::Reference<com::sun::star::awt::XPopupMenu> const&)
VCLXMenu::setTipHelpText(short, rtl::OUString const&)
VCLXMenu::supportsService(rtl::OUString const&)
VCLXMenu::~VCLXMenu()
VCLXPopupMenu::VCLXPopupMenu()
VCLXPopupMenu::VCLXPopupMenu(PopupMenu*)
VCLXRadioButton::CreateAccessibleContext()
VCLXRadioButton::ImplClickedOrToggled(bool)
VCLXRadioButton::ImplGetPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&)
VCLXRadioButton::ProcessWindowEvent(VclWindowEvent const&)
VCLXRadioButton::VCLXRadioButton()
VCLXRadioButton::addActionListener(com::sun::star::uno::Reference<com::sun::star::awt::XActionListener> const&)
VCLXRadioButton::addItemListener(com::sun::star::uno::Reference<com::sun::star::awt::XItemListener> const&)
VCLXRadioButton::calcAdjustedSize(com::sun::star::awt::Size const&)
VCLXRadioButton::dispose()
VCLXRadioButton::getImplementationId()
VCLXRadioButton::getMinimumSize()
VCLXRadioButton::getPreferredSize()
VCLXRadioButton::getProperty(rtl::OUString const&)
VCLXRadioButton::getTypes()
VCLXRadioButton::queryInterface(com::sun::star::uno::Type const&)
VCLXRadioButton::removeActionListener(com::sun::star::uno::Reference<com::sun::star::awt::XActionListener> const&)
VCLXRadioButton::removeItemListener(com::sun::star::uno::Reference<com::sun::star::awt::XItemListener> const&)
VCLXRadioButton::setActionCommand(rtl::OUString const&)
VCLXRadioButton::setLabel(rtl::OUString const&)
VCLXRadioButton::setProperty(rtl::OUString const&, com::sun::star::uno::Any const&)
VCLXScrollBar::CreateAccessibleContext()
VCLXScrollBar::ImplGetPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&)
VCLXScrollBar::ProcessWindowEvent(VclWindowEvent const&)
VCLXScrollBar::VCLXScrollBar()
VCLXScrollBar::addAdjustmentListener(com::sun::star::uno::Reference<com::sun::star::awt::XAdjustmentListener> const&)
VCLXScrollBar::dispose()
VCLXScrollBar::getBlockIncrement()
VCLXScrollBar::getImplementationId()
VCLXScrollBar::getLineIncrement()
VCLXScrollBar::getMinimum() const
VCLXScrollBar::getMinimumSize()
VCLXScrollBar::getProperty(rtl::OUString const&)
VCLXScrollBar::getTypes()
VCLXScrollBar::getVisibleSize()
VCLXScrollBar::implGetMinimumSize(vcl::Window const*)
VCLXScrollBar::queryInterface(com::sun::star::uno::Type const&)
VCLXScrollBar::removeAdjustmentListener(com::sun::star::uno::Reference<com::sun::star::awt::XAdjustmentListener> const&)
VCLXScrollBar::setBlockIncrement(int)
VCLXScrollBar::setLineIncrement(int)
VCLXScrollBar::setMaximum(int)
VCLXScrollBar::setMinimum(int)
VCLXScrollBar::setOrientation(int)
VCLXScrollBar::setProperty(rtl::OUString const&, com::sun::star::uno::Any const&)
VCLXScrollBar::setValues(int, int, int)
VCLXScrollBar::setVisibleSize(int)
VCLXWindow::GetContainerListeners()
VCLXWindow::GetPropHelper()
VCLXWindow::GetTopWindowListeners()
VCLXWindow::ImplCalcWindowSize(Size const&) const
VCLXWindow::ImplExecuteAsyncWithoutSolarLock(std::function<void ()> const&)
VCLXWindow::ImplGetPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&, bool)
VCLXWindow::IsDisposed() const
VCLXWindow::IsSynthesizingVCLEvent() const
VCLXWindow::PushPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&, int, ...)
VCLXWindow::SetSynthesizingVCLEvent(bool)
VCLXWindow::SetSystemParent_Impl(com::sun::star::uno::Any const&)
VCLXWindow::VCLXWindow(bool)
VCLXWindow::getAccessibleFactory()
VCLXWindow::notifyWindowRemoved(vcl::Window const&)
VCLXWindow::resumeVclEventListening()
VCLXWindow::suspendVclEventListening()
VCLXWindow::~VCLXWindow()
ValueSet::Format(OutputDevice const&)
ValueSet::GetLargestItemSize()
ValueSet::SetItemColor(unsigned short, Color const&)
ValueSet::~ValueSet()
VbaApplicationBase::VbaApplicationBase(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
VbaApplicationBase::~VbaApplicationBase()
VbaDialogsBase::Item(com::sun::star::uno::Any const&)
VbaDocumentBase::VbaDocumentBase(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
VbaDocumentBase::VbaDocumentBase(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
VbaDocumentBase::getNameFromModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
VbaDocumentsBase::VbaDocumentsBase(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, VbaDocumentsBase::DOCUMENT_TYPE)
VbaEventsHelperBase::VbaEventsHelperBase(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
VbaEventsHelperBase::ensureVBALibrary()
VbaEventsHelperBase::getEventHandlerInfo(int) const
VbaEventsHelperBase::getEventHandlerPath(VbaEventsHelperBase::EventHandlerInfo const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
VbaEventsHelperBase::getModuleType(rtl::OUString const&)
VbaEventsHelperBase::startListening()
VbaEventsHelperBase::stopListening()
VbaEventsHelperBase::updateModulePathMap(rtl::OUString const&)
VbaEventsHelperBase::~VbaEventsHelperBase()
VbaExport::VbaExport(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
VbaExport::getBasicLibrary() const
VbaExport::getLibraryContainer() const
VbaExport::getProjectName() const
VbaFontBase::VbaFontBase(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
VbaFontBase::~VbaFontBase()
VbaGlobalsBase::VbaGlobalsBase(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&)
VbaGlobalsBase::hasServiceName(rtl::OUString const&)
VbaGlobalsBase::~VbaGlobalsBase()
VbaPageSetupBase::VbaPageSetupBase(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
VbaTextFrame::VbaTextFrame(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
VbaTextFrame::getMargin(rtl::OUString const&)
VbaTextFrame::setAsMSObehavior()
VbaTextFrame::setMargin(rtl::OUString const&, float)
VbaWindowBase::VbaWindowBase(com::sun::star::uno::Reference<ooo::vba::XHelperInterface> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
VbaWindowBase::VbaWindowBase(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
VbaWindowBase::construct(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
VbaWindowBase::getWindow2() const
VclAbstractDialog::~VclAbstractDialog()
VclAbstractDialogFactory::~VclAbstractDialogFactory()
VclBox::accumulateMaxes(Size const&, Size&) const
VclBox::finalizeMaxes(Size const&, unsigned short) const
VclBuilder::MenuAndId::MenuAndId(rtl::OString const&, Menu*)
VclBuilder::ParserState::ParserState()
VclBuilder::VclBuilder(vcl::Window*, rtl::OUString const&, rtl::OUString const&, rtl::OString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, bool, NotebookBarAddonsItem const*)
VclBuilder::applyAtkProperties(vcl::Window*, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::applyPackingProperty(vcl::Window*, vcl::Window*, xmlreader::XmlReader&)
VclBuilder::cleanupWidgetOwnScrolling(vcl::Window*, vcl::Window*, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::collectAccelerator(xmlreader::XmlReader&, std::map<rtl::OString, std::pair<rtl::OString, rtl::OString>, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, std::pair<rtl::OString, rtl::OString> > > >&)
VclBuilder::collectAtkRelationAttribute(xmlreader::XmlReader&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::collectAtkRoleAttribute(xmlreader::XmlReader&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::collectPangoAttribute(xmlreader::XmlReader&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::collectProperty(xmlreader::XmlReader&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&) const
VclBuilder::connectFormattedFormatterAdjustment(rtl::OString const&, rtl::OUString const&)
VclBuilder::connectNumericFormatterAdjustment(rtl::OString const&, rtl::OUString const&)
VclBuilder::delete_by_name(rtl::OString const&)
VclBuilder::delete_by_window(vcl::Window*)
VclBuilder::disposeBuilder()
VclBuilder::drop_ownership(vcl::Window const*)
VclBuilder::extractAdjustmentToMap(rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&, std::vector<VclBuilder::UStringPair, std::allocator<VclBuilder::UStringPair> >&)
VclBuilder::extractBuffer(rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::extractButtonImage(rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&, bool)
VclBuilder::extractGroup(rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::extractMnemonicWidget(rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::extractModel(rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::getImageSize(std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::getStyleClass(xmlreader::XmlReader&)
VclBuilder::get_adjustment_by_name(rtl::OString const&) const
VclBuilder::get_buffer_by_name(rtl::OString const&) const
VclBuilder::get_by_name(std::basic_string_view<char, std::char_traits<char> >)
VclBuilder::get_by_window(vcl::Window const*) const
VclBuilder::get_model_by_name(rtl::OString const&) const
VclBuilder::get_widget_root()
VclBuilder::get_window_packing_data(vcl::Window const*) const
VclBuilder::handleActionWidget(xmlreader::XmlReader&)
VclBuilder::handleAtkObject(xmlreader::XmlReader&) const
VclBuilder::handleChild(vcl::Window*, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >*, xmlreader::XmlReader&)
VclBuilder::handleItems(xmlreader::XmlReader&) const
VclBuilder::handleListStore(xmlreader::XmlReader&, rtl::OString const&, std::basic_string_view<char, std::char_traits<char> >)
VclBuilder::handleMenu(xmlreader::XmlReader&, rtl::OString const&, bool)
VclBuilder::handleMenuChild(Menu*, xmlreader::XmlReader&)
VclBuilder::handleMenuObject(Menu*, xmlreader::XmlReader&)
VclBuilder::handleObject(vcl::Window*, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >*, xmlreader::XmlReader&)
VclBuilder::handlePacking(vcl::Window*, vcl::Window*, xmlreader::XmlReader&)
VclBuilder::handleRow(xmlreader::XmlReader&, rtl::OString const&)
VclBuilder::handleSizeGroup(xmlreader::XmlReader&)
VclBuilder::handleStyle(xmlreader::XmlReader&, int&)
VclBuilder::handleTabChild(vcl::Window*, xmlreader::XmlReader&)
VclBuilder::insertMenuObject(Menu*, PopupMenu*, rtl::OString const&, rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&, std::map<rtl::OString, std::pair<rtl::OString, rtl::OString>, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, std::pair<rtl::OString, rtl::OString> > > >&)
VclBuilder::insertObject(vcl::Window*, rtl::OString const&, rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::makeObject(vcl::Window*, rtl::OString const&, rtl::OString const&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > >&)
VclBuilder::mungeAdjustment(FormattedField&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::mungeAdjustment(NumericFormatter&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::mungeAdjustment(ScrollBar&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::mungeAdjustment(Slider&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::mungeModel(ComboBox&, VclBuilder::ListStore const&, unsigned short)
VclBuilder::mungeModel(ListBox&, VclBuilder::ListStore const&, unsigned short)
VclBuilder::mungeModel(SvTabListBox&, VclBuilder::ListStore const&, unsigned short)
VclBuilder::mungeTextBuffer(VclMultiLineEdit&, std::map<rtl::OString, rtl::OUString, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, rtl::OUString> > > const&)
VclBuilder::prepareWidgetOwnScrolling(vcl::Window*, long&)
VclBuilder::setDeferredProperties()
VclBuilder::set_response(std::basic_string_view<char, std::char_traits<char> >, short)
VclBuilder::set_window_packing_position(vcl::Window const*, int)
VclBuilder::sortIntoBestTabTraversalOrder::operator()(vcl::Window const*, vcl::Window const*) const
VclBuilder::~VclBuilder()
VclBuilderContainer::VclBuilderContainer()
VclBuilderContainer::disposeBuilder()
VclBuilderContainer::~VclBuilderContainer()
VclButtonBox::addReqGroups(VclButtonBox::Requisition const&) const
VclButtonBox::addSpacing(Size const&, unsigned short) const
VclButtonBox::calculatePrimarySecondaryRequisitions() const
VclContainer::VclContainer(vcl::Window*, long)
VclContainer::getLayoutRequisition(vcl::Window const&)
VclContainer::setLayoutPosSize(vcl::Window&, Point const&, Size const&)
VclDrawingArea::DeleteSurroundingText(Selection const&)
VclDrawingArea::DumpAsPropertyTree(tools::JsonWriter&)
VclDrawingArea::GetSurroundingText() const
VclDrawingArea::GetSurroundingTextSelection() const
VclDrawingArea::GetUITestFactory() const
VclDrawingArea::RequestHelp(HelpEvent const&)
VclDrawingArea::StartDrag(signed char, Point const&)
VclGrid::DumpAsPropertyTree(tools::JsonWriter&)
VclGrid::calculateRequisition() const
VclGrid::calculateRequisitionForSpacings(int, int) const
VclGrid::setAllocation(Size const&)
VclGrid::set_property(rtl::OString const&, rtl::OUString const&)
VclMenuEvent::VclMenuEvent(Menu*, VclEventId, unsigned short)
VclMenuEvent::~VclMenuEvent()
VclMultiLineEdit::ApplySettings(OutputDevice&)
VclMultiLineEdit::CalcAdjustedSize(Size const&) const
VclMultiLineEdit::CalcBlockSize(unsigned short, unsigned short) const
VclMultiLineEdit::CalcMinimumSize() const
VclMultiLineEdit::CanDown() const
VclMultiLineEdit::CanUp() const
VclMultiLineEdit::CaretChanged()
VclMultiLineEdit::Copy()
VclMultiLineEdit::Cut()
VclMultiLineEdit::DataChanged(DataChangedEvent const&)
VclMultiLineEdit::DeleteSelected()
VclMultiLineEdit::DisableSelectionOnFocus()
VclMultiLineEdit::Draw(OutputDevice*, Point const&, SystemTextColorFlags)
VclMultiLineEdit::DumpAsPropertyTree(tools::JsonWriter&)
VclMultiLineEdit::EnableCursor(bool)
VclMultiLineEdit::EnableFocusSelectionHide(bool)
VclMultiLineEdit::EventNotify(NotifyEvent&)
VclMultiLineEdit::GetFocus()
VclMultiLineEdit::GetMaxTextLen() const
VclMultiLineEdit::GetMaxVisColumnsAndLines(unsigned short&, unsigned short&) const
VclMultiLineEdit::GetSelected() const
VclMultiLineEdit::GetSelected(LineEnd) const
VclMultiLineEdit::GetSelection() const
VclMultiLineEdit::GetText() const
VclMultiLineEdit::GetText(LineEnd) const
VclMultiLineEdit::GetTextLines(LineEnd) const
VclMultiLineEdit::GetTextView() const
VclMultiLineEdit::GetTextWindow()
VclMultiLineEdit::GetUITestFactory() const
VclMultiLineEdit::GetVScrollBar() const
VclMultiLineEdit::ImplInitSettings(bool)
VclMultiLineEdit::ImplInitStyle(long)
VclMultiLineEdit::IsReadOnly() const
VclMultiLineEdit::Modify()
VclMultiLineEdit::Paste()
VclMultiLineEdit::PreNotify(NotifyEvent&)
VclMultiLineEdit::ReplaceSelected(rtl::OUString const&)
VclMultiLineEdit::Resize()
VclMultiLineEdit::SelectionChanged()
VclMultiLineEdit::SetMaxTextLen(int)
VclMultiLineEdit::SetMaxTextWidth(long)
VclMultiLineEdit::SetModifyFlag()
VclMultiLineEdit::SetReadOnly(bool)
VclMultiLineEdit::SetSelection(Selection const&)
VclMultiLineEdit::SetText(rtl::OUString const&)
VclMultiLineEdit::StateChanged(StateChangedType)
VclMultiLineEdit::VclMultiLineEdit(vcl::Window*, long)
VclMultiLineEdit::dispose()
VclMultiLineEdit::set_property(rtl::OString const&, rtl::OUString const&)
VclMultiLineEdit::~VclMultiLineEdit()
VclReferenceBase::VclReferenceBase()
VclReferenceBase::~VclReferenceBase()
VclWindowEvent::VclWindowEvent(vcl::Window*, VclEventId, void*)
VclWindowEvent::~VclWindowEvent()
VectorGraphicData::VectorGraphicData(BinaryDataContainer const&, VectorGraphicDataType, int)
VectorGraphicData::VectorGraphicData(rtl::OUString const&, VectorGraphicDataType)
VectorGraphicData::ensurePdfReplacement()
VectorGraphicData::ensureReplacement()
VectorGraphicData::ensureSequenceAndRange()
VectorGraphicData::getSizeBytes() const
VectorGraphicData::operator==(VectorGraphicData const&) const
VectorGraphicData::setWmfExternalHeader(WmfExternal const&)
VectorGraphicData::~VectorGraphicData()
VectorGraphicSearch::VectorGraphicSearch(Graphic const&)
VectorGraphicSearch::searchPDF(std::shared_ptr<VectorGraphicData> const&)
VectorGraphicSearch::~VectorGraphicSearch()
VersionCompatRead::VersionCompatRead(SvStream&)
VersionCompatRead::~VersionCompatRead()
VersionCompatWrite::VersionCompatWrite(SvStream&, unsigned short)
VersionCompatWrite::~VersionCompatWrite()
Viewport3D::GetViewPoint()
Viewport3D::SetDeviceWindow(tools::Rectangle const&)
Viewport3D::SetVPN(basegfx::B3DVector const&)
Viewport3D::SetVRP(basegfx::B3DPoint const&)
Viewport3D::SetVUV(basegfx::B3DVector const&)
Viewport3D::SetViewWindow(double, double, double, double)
Viewport3D::Viewport3D()
VirtualDevice::AcquireGraphics() const
VirtualDevice::CanEnableNativeWidget() const
VirtualDevice::GetBitCount() const
VirtualDevice::GetFontExtLeading() const
VirtualDevice::IsVirtual() const
VirtualDevice::ReleaseGraphics(bool)
VirtualDevice::SetReferenceDevice(int, int)
VirtualDevice::UsePolyPolygonForComplexGradient()
VirtualDevice::VirtualDevice(OutputDevice const*, DeviceFormat, DeviceFormat, OutDevType)
VirtualDevice::VirtualDevice(SystemGraphicsData const&, Size const&, DeviceFormat)
VirtualDevice::dispose()
VirtualDevice::~VirtualDevice()
WString::Read(SvStream&)
Wallpaper::GetBitmap() const
Wallpaper::GetGradient() const
Wallpaper::IsFixed() const
Wallpaper::IsRect() const
Wallpaper::IsScrollable() const
Wallpaper::SetBitmap(BitmapEx const&)
Wallpaper::SetColor(Color const&)
Wallpaper::SetGradient(Gradient const&)
Wallpaper::SetStyle(WallpaperStyle)
Wallpaper::Wallpaper()
Wallpaper::Wallpaper(BitmapEx const&)
Wallpaper::Wallpaper(Color const&)
Wallpaper::Wallpaper(Wallpaper const&)
Wallpaper::Wallpaper(Wallpaper&&)
Wallpaper::operator=(Wallpaper const&)
Wallpaper::operator==(Wallpaper const&) const
Wallpaper::~Wallpaper()
WeldEditView::SetModifyHdl(Link<LinkParamNone*, void> const&)
WeldEditView::WeldEditView()
WeldEditView::~WeldEditView()
WeldToolbarPopup::WeldToolbarPopup(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, weld::Widget*, rtl::OUString const&, rtl::OString const&)
WeldToolbarPopup::~WeldToolbarPopup()
WeldedTabbedNotebookbar::WeldedTabbedNotebookbar(VclPtr<vcl::Window> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, unsigned long)
WhichRangesContainer::WhichRangesContainer(WhichRangesContainer&&)
WhichRangesContainer::WhichRangesContainer(std::pair<unsigned short, unsigned short> const*, int)
WhichRangesContainer::WhichRangesContainer(unsigned short, unsigned short)
WhichRangesContainer::operator==(WhichRangesContainer const&) const
WhichRangesContainer::~WhichRangesContainer()
WildCard::ImpMatch(char16_t const*, char16_t const*)
WindowListenerMultiplexer::WindowListenerMultiplexer(cppu::OWeakObject&)
WindowListenerMultiplexer::acquire()
WindowListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
WindowListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
WindowListenerMultiplexer::release()
WindowListenerMultiplexer::windowHidden(com::sun::star::lang::EventObject const&)
WindowListenerMultiplexer::windowMoved(com::sun::star::awt::WindowEvent const&)
WindowListenerMultiplexer::windowResized(com::sun::star::awt::WindowEvent const&)
WindowListenerMultiplexer::windowShown(com::sun::star::lang::EventObject const&)
WindowUIObject::get_name() const
WindowUIObject::get_visible_child(rtl::OUString const&)
WmfExternal::WmfExternal()
WmfExternal::getSequence() const
WmfExternal::setSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
WorkWindow::SetPluginParent(SystemParentData*)
WorkWindow::ShowFullScreenMode(bool)
WorkWindow::WorkWindow(SystemParentData*)
WorkWindow::WorkWindow(WindowType)
WorkWindow::WorkWindow(vcl::Window*, com::sun::star::uno::Any const&, long)
WorkWindow::~WorkWindow()
WriteClipboardFormat(SvStream&, SotClipboardFormatId)
WriteJobSetup(SvStream&, JobSetup const&)
WriteSvGlobalName(SvStream&, SvGlobalName const&)
WriteSvtGraphicFill(SvStream&, SvtGraphicFill const&)
WriteSvtGraphicStroke(SvStream&, SvtGraphicStroke const&)
WriteTransferableObjectDescriptor(SvStream&, TransferableObjectDescriptor const&)
WriteWindowMetafileBits(SvStream&, GDIMetaFile const&)
Writer::AddFontItem(SfxItemPool&, SvxFontItem const&)
Writer::AddFontItems_(SfxItemPool&, unsigned short)
Writer::CopyLocalFileToINet(rtl::OUString&)
Writer::CopyNextPam(SwPaM**)
Writer::FindPos_Bkmk(SwPosition const&) const
Writer::PutEditEngFontsInAttrPool()
Writer::PutNumFormatFontsInAttrPool()
Writer::ResetWriter()
Writer::Write(SwPaM&, SvStream&, rtl::OUString const*)
Writer::Writer()
Writer::getIDocumentSettingAccess() const
Writer::getIDocumentStylePoolAccess()
Writer::getIDocumentStylePoolAccess() const
Writer::~Writer()
X11SalObject::CreateObject(SalFrame*, SystemWindowData*, bool)
X11SalObject::Dispatch(_XEvent*)
X11SkiaSalGraphicsImpl::Flush()
X11SkiaSalGraphicsImpl::Init()
X11SkiaSalGraphicsImpl::X11SkiaSalGraphicsImpl(X11SalGraphics&)
X11SkiaSalGraphicsImpl::avoidRecreateByResize() const
X11SkiaSalGraphicsImpl::createWindowContext(_XDisplay*, unsigned long, XVisualInfo const*, int, int, SkiaHelper::RenderMethod, bool)
X11SkiaSalGraphicsImpl::createWindowSurfaceInternal(bool)
X11SkiaSalGraphicsImpl::freeResources()
X11SkiaSalGraphicsImpl::prepareSkia()
XBitmapEntry::XBitmapEntry(GraphicObject const&, rtl::OUString const&)
XBitmapEntry::XBitmapEntry(XBitmapEntry const&)
XBitmapList::Create()
XBitmapList::CreateBitmap(long, Size const&) const
XBitmapList::CreateBitmapForUI(long)
XColorEntry::XColorEntry(Color const&, rtl::OUString const&)
XColorItem::Clone(SfxItemPool*) const
XColorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XColorItem::XColorItem(XColorItem const&)
XColorItem::XColorItem(unsigned short, Color const&)
XColorItem::XColorItem(unsigned short, int, Color const&)
XColorItem::XColorItem(unsigned short, rtl::OUString const&, Color const&)
XColorItem::dumpAsXml(_xmlTextWriter*) const
XColorList::Create()
XColorList::CreateBitmapForUI(long)
XColorList::Replace(long, std::unique_ptr<XColorEntry, std::default_delete<XColorEntry> >)
XColorList::createInstance()
XDash::CreateDotDashArray(std::vector<double, std::allocator<double> >&, double) const
XDash::XDash(com::sun::star::drawing::DashStyle, unsigned short, double, unsigned short, double, double)
XDash::operator==(XDash const&) const
XDashEntry::XDashEntry(XDash const&, rtl::OUString const&)
XDashEntry::XDashEntry(XDashEntry const&)
XDashList::Create()
XDashList::CreateBitmapForUI(long)
XDashList::GetBitmapForUISolidLine() const
XDashList::GetStringForUiNoLine() const
XDashList::GetStringForUiSolidLine() const
XDashList::ImpCreateBitmapForXDash(XDash const*)
XDashList::XDashList(rtl::OUString const&, rtl::OUString const&)
XDashList::createInstance()
XDashList::~XDashList()
XFillAttrSetItem::Clone(SfxItemPool*) const
XFillAttrSetItem::XFillAttrSetItem(SfxItemPool*)
XFillAttrSetItem::XFillAttrSetItem(SfxItemSet&&)
XFillAttrSetItem::XFillAttrSetItem(XFillAttrSetItem const&)
XFillAttrSetItem::XFillAttrSetItem(XFillAttrSetItem const&, SfxItemPool*)
XFillBackgroundItem::XFillBackgroundItem(bool)
XFillBitmapItem::Clone(SfxItemPool*) const
XFillBitmapItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillBitmapItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillBitmapItem::XFillBitmapItem(GraphicObject const&)
XFillBitmapItem::XFillBitmapItem(XFillBitmapItem const&)
XFillBitmapItem::XFillBitmapItem(rtl::OUString const&, GraphicObject const&)
XFillBitmapItem::dumpAsXml(_xmlTextWriter*) const
XFillBitmapItem::operator==(SfxPoolItem const&) const
XFillBmpPosItem::XFillBmpPosItem(RectPoint)
XFillBmpPosItem::dumpAsXml(_xmlTextWriter*) const
XFillBmpPosOffsetXItem::XFillBmpPosOffsetXItem(unsigned short)
XFillBmpPosOffsetYItem::XFillBmpPosOffsetYItem(unsigned short)
XFillBmpSizeLogItem::XFillBmpSizeLogItem(bool)
XFillBmpSizeXItem::XFillBmpSizeXItem(long)
XFillBmpSizeYItem::XFillBmpSizeYItem(long)
XFillBmpStretchItem::Clone(SfxItemPool*) const
XFillBmpStretchItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillBmpStretchItem::XFillBmpStretchItem(bool)
XFillBmpStretchItem::dumpAsXml(_xmlTextWriter*) const
XFillBmpTileItem::Clone(SfxItemPool*) const
XFillBmpTileItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillBmpTileItem::XFillBmpTileItem(bool)
XFillBmpTileItem::dumpAsXml(_xmlTextWriter*) const
XFillBmpTileOffsetXItem::XFillBmpTileOffsetXItem(unsigned short)
XFillBmpTileOffsetYItem::XFillBmpTileOffsetYItem(unsigned short)
XFillColorItem::Clone(SfxItemPool*) const
XFillColorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillColorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillColorItem::XFillColorItem(int, Color const&)
XFillColorItem::XFillColorItem(rtl::OUString const&, Color const&)
XFillColorItem::dumpAsJSON[abi:cxx11]() const
XFillColorItem::dumpAsXml(_xmlTextWriter*) const
XFillFloatTransparenceItem::Clone(SfxItemPool*) const
XFillFloatTransparenceItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillFloatTransparenceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillFloatTransparenceItem::XFillFloatTransparenceItem()
XFillFloatTransparenceItem::XFillFloatTransparenceItem(XFillFloatTransparenceItem const&)
XFillFloatTransparenceItem::XFillFloatTransparenceItem(XGradient const&, bool)
XFillFloatTransparenceItem::XFillFloatTransparenceItem(rtl::OUString const&, XGradient const&, bool)
XFillFloatTransparenceItem::dumpAsJSON[abi:cxx11]() const
XFillGradientItem::Clone(SfxItemPool*) const
XFillGradientItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillGradientItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillGradientItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillGradientItem::XFillGradientItem(XFillGradientItem const&)
XFillGradientItem::XFillGradientItem(XGradient const&)
XFillGradientItem::XFillGradientItem(int, XGradient const&)
XFillGradientItem::XFillGradientItem(rtl::OUString const&, XGradient const&, unsigned short)
XFillGradientItem::dumpAsJSON[abi:cxx11]() const
XFillGradientItem::operator==(SfxPoolItem const&) const
XFillHatchItem::Clone(SfxItemPool*) const
XFillHatchItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillHatchItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillHatchItem::HasMetrics() const
XFillHatchItem::ScaleMetrics(long, long)
XFillHatchItem::XFillHatchItem(XFillHatchItem const&)
XFillHatchItem::XFillHatchItem(XHatch const&)
XFillHatchItem::XFillHatchItem(rtl::OUString const&, XHatch const&)
XFillHatchItem::operator==(SfxPoolItem const&) const
XFillStyleItem::Clone(SfxItemPool*) const
XFillStyleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillStyleItem::GetValueCount() const
XFillStyleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillStyleItem::XFillStyleItem(com::sun::star::drawing::FillStyle)
XFillStyleItem::dumpAsJSON[abi:cxx11]() const
XFillStyleItem::dumpAsXml(_xmlTextWriter*) const
XFillTransparenceItem::Clone(SfxItemPool*) const
XFillTransparenceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillTransparenceItem::XFillTransparenceItem(unsigned short)
XFillTransparenceItem::dumpAsXml(_xmlTextWriter*) const
XFormTextAdjustItem::Clone(SfxItemPool*) const
XFormTextAdjustItem::GetValueCount() const
XFormTextAdjustItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XFormTextAdjustItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFormTextAdjustItem::XFormTextAdjustItem(XFormTextAdjust)
XFormTextDistanceItem::Clone(SfxItemPool*) const
XFormTextDistanceItem::XFormTextDistanceItem(long)
XFormTextHideFormItem::Clone(SfxItemPool*) const
XFormTextHideFormItem::XFormTextHideFormItem(bool)
XFormTextMirrorItem::Clone(SfxItemPool*) const
XFormTextMirrorItem::XFormTextMirrorItem(bool)
XFormTextOutlineItem::Clone(SfxItemPool*) const
XFormTextOutlineItem::XFormTextOutlineItem(bool)
XFormTextShadowColorItem::Clone(SfxItemPool*) const
XFormTextShadowColorItem::XFormTextShadowColorItem(rtl::OUString const&, Color const&)
XFormTextShadowItem::Clone(SfxItemPool*) const
XFormTextShadowItem::GetValueCount() const
XFormTextShadowItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XFormTextShadowItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFormTextShadowItem::XFormTextShadowItem(XFormTextShadow)
XFormTextShadowXValItem::Clone(SfxItemPool*) const
XFormTextShadowXValItem::XFormTextShadowXValItem(long)
XFormTextShadowYValItem::Clone(SfxItemPool*) const
XFormTextShadowYValItem::XFormTextShadowYValItem(long)
XFormTextStartItem::Clone(SfxItemPool*) const
XFormTextStartItem::XFormTextStartItem(long)
XFormTextStyleItem::Clone(SfxItemPool*) const
XFormTextStyleItem::GetValueCount() const
XFormTextStyleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XFormTextStyleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFormTextStyleItem::XFormTextStyleItem(XFormTextStyle)
XGradient::GradientStyleToString[abi:cxx11](com::sun::star::awt::GradientStyle)
XGradient::XGradient()
XGradient::XGradient(Color const&, Color const&, com::sun::star::awt::GradientStyle, o3tl::strong_int<short, FractionTag<10> >, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
XGradient::dumpAsJSON[abi:cxx11]() const
XGradient::operator==(XGradient const&) const
XGradientEntry::XGradientEntry(XGradient const&, rtl::OUString const&)
XGradientEntry::XGradientEntry(XGradientEntry const&)
XGradientList::Create()
XGradientList::CreateBitmap(long, Size const&) const
XGradientList::CreateBitmapForUI(long)
XGradientList::XGradientList(rtl::OUString const&, rtl::OUString const&)
XGradientList::createInstance()
XGradientList::~XGradientList()
XGradientStepCountItem::Clone(SfxItemPool*) const
XGradientStepCountItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XGradientStepCountItem::XGradientStepCountItem(unsigned short)
XHatch::XHatch(Color const&, com::sun::star::drawing::HatchStyle, long, o3tl::strong_int<short, FractionTag<10> >)
XHatch::operator==(XHatch const&) const
XHatchEntry::XHatchEntry(XHatch const&, rtl::OUString const&)
XHatchEntry::XHatchEntry(XHatchEntry const&)
XHatchList::Create()
XHatchList::CreateBitmap(long, Size const&) const
XHatchList::CreateBitmapForUI(long)
XHatchList::XHatchList(rtl::OUString const&, rtl::OUString const&)
XHatchList::createInstance()
XHatchList::~XHatchList()
XLineAttrSetItem::Clone(SfxItemPool*) const
XLineAttrSetItem::XLineAttrSetItem(SfxItemPool*)
XLineAttrSetItem::XLineAttrSetItem(SfxItemSet&&)
XLineAttrSetItem::XLineAttrSetItem(XLineAttrSetItem const&)
XLineAttrSetItem::XLineAttrSetItem(XLineAttrSetItem const&, SfxItemPool*)
XLineCapItem::Clone(SfxItemPool*) const
XLineCapItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineCapItem::GetValueCount() const
XLineCapItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineCapItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineCapItem::XLineCapItem(com::sun::star::drawing::LineCap)
XLineColorItem::Clone(SfxItemPool*) const
XLineColorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineColorItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineColorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineColorItem::XLineColorItem(int, Color const&)
XLineColorItem::XLineColorItem(rtl::OUString const&, Color const&)
XLineDashItem::Clone(SfxItemPool*) const
XLineDashItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XLineDashItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineDashItem::HasMetrics() const
XLineDashItem::ScaleMetrics(long, long)
XLineDashItem::XLineDashItem(XDash const&)
XLineDashItem::XLineDashItem(XLineDashItem const&)
XLineDashItem::XLineDashItem(rtl::OUString const&, XDash const&)
XLineEndCenterItem::Clone(SfxItemPool*) const
XLineEndCenterItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineEndCenterItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineEndCenterItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineEndCenterItem::XLineEndCenterItem(bool)
XLineEndEntry::XLineEndEntry(XLineEndEntry const&)
XLineEndEntry::XLineEndEntry(basegfx::B2DPolyPolygon const&, rtl::OUString const&)
XLineEndItem::Clone(SfxItemPool*) const
XLineEndItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineEndItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineEndItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineEndItem::XLineEndItem(XLineEndItem const&)
XLineEndItem::XLineEndItem(basegfx::B2DPolyPolygon const&)
XLineEndItem::XLineEndItem(int)
XLineEndItem::XLineEndItem(rtl::OUString const&, basegfx::B2DPolyPolygon const&)
XLineEndList::Create()
XLineEndList::CreateBitmapForUI(long)
XLineEndList::XLineEndList(rtl::OUString const&, rtl::OUString const&)
XLineEndList::createInstance()
XLineEndList::~XLineEndList()
XLineEndWidthItem::Clone(SfxItemPool*) const
XLineEndWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineEndWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineEndWidthItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineEndWidthItem::XLineEndWidthItem(long)
XLineJointItem::Clone(SfxItemPool*) const
XLineJointItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineJointItem::GetValueCount() const
XLineJointItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineJointItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineJointItem::XLineJointItem(com::sun::star::drawing::LineJoint)
XLineStartCenterItem::Clone(SfxItemPool*) const
XLineStartCenterItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStartCenterItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStartCenterItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStartCenterItem::XLineStartCenterItem(bool)
XLineStartItem::Clone(SfxItemPool*) const
XLineStartItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStartItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStartItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStartItem::XLineStartItem(XLineStartItem const&)
XLineStartItem::XLineStartItem(basegfx::B2DPolyPolygon const&)
XLineStartItem::XLineStartItem(int)
XLineStartItem::XLineStartItem(rtl::OUString const&, basegfx::B2DPolyPolygon const&)
XLineStartItem::operator==(SfxPoolItem const&) const
XLineStartWidthItem::Clone(SfxItemPool*) const
XLineStartWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStartWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStartWidthItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStartWidthItem::XLineStartWidthItem(long)
XLineStyleItem::Clone(SfxItemPool*) const
XLineStyleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStyleItem::GetValueCount() const
XLineStyleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStyleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStyleItem::XLineStyleItem(com::sun::star::drawing::LineStyle)
XLineTransparenceItem::Clone(SfxItemPool*) const
XLineTransparenceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineTransparenceItem::XLineTransparenceItem(unsigned short)
XLineWidthItem::Clone(SfxItemPool*) const
XLineWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineWidthItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineWidthItem::XLineWidthItem(long)
XMLBase64ImportContext::XMLBase64ImportContext(SvXMLImport&, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
XMLBase64ImportContext::characters(rtl::OUString const&)
XMLBase64ImportContext::endFastElement(int)
XMLBase64ImportContext::~XMLBase64ImportContext()
XMLCellStyleExport::exportStyleAttributes(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
XMLCellStyleExport::exportStyleContent(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
XMLCharContext::InsertControlCharacter(short)
XMLCharContext::InsertString(rtl::OUString const&)
XMLCharContext::XMLCharContext(SvXMLImport&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, char16_t, bool)
XMLCharContext::XMLCharContext(SvXMLImport&, short)
XMLCharContext::~XMLCharContext()
XMLConstantsPropertyHandler::exportXML(rtl::OUString&, com::sun::star::uno::Any const&, SvXMLUnitConverter const&) const
XMLConstantsPropertyHandler::importXML(rtl::OUString const&, com::sun::star::uno::Any&, SvXMLUnitConverter const&) const
XMLConstantsPropertyHandler::~XMLConstantsPropertyHandler()
XMLDashStyleExport::XMLDashStyleExport(SvXMLExport&)
XMLDashStyleExport::~XMLDashStyleExport()
XMLDashStyleImport::XMLDashStyleImport(SvXMLImport&)
XMLDashStyleImport::~XMLDashStyleImport()
XMLDocumentSettingsContext::XMLDocumentSettingsContext(SvXMLImport&)
XMLDocumentSettingsContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLDocumentSettingsContext::endFastElement(int)
XMLDocumentSettingsContext::~XMLDocumentSettingsContext()
XMLDocumentWrapper_XmlSecImpl::XMLDocumentWrapper_XmlSecImpl()
XMLDocumentWrapper_XmlSecImpl::buildIDAttr(_xmlNode*) const
XMLDocumentWrapper_XmlSecImpl::characters(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::checkElement(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::clearUselessData(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> > const&, com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::collapse(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::compressedCharacters(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::compressedEndDocument()
XMLDocumentWrapper_XmlSecImpl::compressedEndElement(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::compressedIgnorableWhitespace(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::compressedProcessingInstruction(rtl::OUString const&, rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::compressedSetDocumentLocator(int, int, rtl::OUString const&, rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::compressedStartDocument()
XMLDocumentWrapper_XmlSecImpl::compressedStartElement(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::xml::csax::XMLAttribute> const&)
XMLDocumentWrapper_XmlSecImpl::endDocument()
XMLDocumentWrapper_XmlSecImpl::endElement(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::generateSAXEvents(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&, com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::getCurrentElement()
XMLDocumentWrapper_XmlSecImpl::getImplementationName()
XMLDocumentWrapper_XmlSecImpl::getNextReservedNode()
XMLDocumentWrapper_XmlSecImpl::getNextSAXEvent()
XMLDocumentWrapper_XmlSecImpl::getNodeName(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::getNodeQName(_xmlNode*)
XMLDocumentWrapper_XmlSecImpl::getSupportedServiceNames()
XMLDocumentWrapper_XmlSecImpl::getTree(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&)
XMLDocumentWrapper_XmlSecImpl::ignorableWhitespace(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::isCurrent(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::isCurrentElementEmpty()
XMLDocumentWrapper_XmlSecImpl::processingInstruction(rtl::OUString const&, rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::rebuildIDLink(_xmlNode*) const
XMLDocumentWrapper_XmlSecImpl::rebuildIDLink(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::recursiveDelete(_xmlNode*)
XMLDocumentWrapper_XmlSecImpl::removeCurrentElement()
XMLDocumentWrapper_XmlSecImpl::removeNode(_xmlNode*) const
XMLDocumentWrapper_XmlSecImpl::sendEndElement(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, _xmlNode*)
XMLDocumentWrapper_XmlSecImpl::sendNode(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, _xmlNode*)
XMLDocumentWrapper_XmlSecImpl::sendStartElement(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, _xmlNode*)
XMLDocumentWrapper_XmlSecImpl::setCurrentElement(com::sun::star::uno::Reference<com::sun::star::xml::wrapper::XXMLElementWrapper> const&)
XMLDocumentWrapper_XmlSecImpl::setDocumentLocator(com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
XMLDocumentWrapper_XmlSecImpl::startDocument()
XMLDocumentWrapper_XmlSecImpl::startElement(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
XMLDocumentWrapper_XmlSecImpl::supportsService(rtl::OUString const&)
XMLDocumentWrapper_XmlSecImpl::~XMLDocumentWrapper_XmlSecImpl()
XMLDrawingPageStyleContext::FillPropertySet(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLDrawingPageStyleContext::XMLDrawingPageStyleContext(SvXMLImport&, SvXMLStylesContext&, ContextID_Index_Pair const*, XmlStyleFamily const*)
XMLEnumPropertyHdl::exportXML(rtl::OUString&, com::sun::star::uno::Any const&, SvXMLUnitConverter const&) const
XMLEnumPropertyHdl::importXML(rtl::OUString const&, com::sun::star::uno::Any&, SvXMLUnitConverter const&) const
XMLEnumPropertyHdl::~XMLEnumPropertyHdl()
XMLEventExport::AddHandler(rtl::OUString const&, std::unique_ptr<XMLEventExportHandler, std::default_delete<XMLEventExportHandler> >)
XMLEventExport::AddTranslationTable(XMLEventNameTranslation const*)
XMLEventExport::Export(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, bool)
XMLEventExport::Export(com::sun::star::uno::Reference<com::sun::star::container::XNameReplace> const&, bool)
XMLEventExport::Export(com::sun::star::uno::Reference<com::sun::star::document::XEventsSupplier> const&, bool)
XMLEventExport::XMLEventExport(SvXMLExport&)
XMLEventExport::~XMLEventExport()
XMLEventsImportContext::AddEventValues(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
XMLEventsImportContext::SetEvents(com::sun::star::uno::Reference<com::sun::star::container::XNameReplace> const&)
XMLEventsImportContext::SetEvents(com::sun::star::uno::Reference<com::sun::star::document::XEventsSupplier> const&)
XMLEventsImportContext::XMLEventsImportContext(SvXMLImport&)
XMLEventsImportContext::XMLEventsImportContext(SvXMLImport&, com::sun::star::uno::Reference<com::sun::star::container::XNameReplace> const&)
XMLEventsImportContext::XMLEventsImportContext(SvXMLImport&, com::sun::star::uno::Reference<com::sun::star::document::XEventsSupplier> const&)
XMLEventsImportContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLEventsImportContext::~XMLEventsImportContext()
XMLFontAutoStylePool::Find(rtl::OUString const&, rtl::OUString const&, FontFamily, FontPitch, unsigned short) const
XMLFontAutoStylePool::XMLFontAutoStylePool(SvXMLExport&, bool)
XMLFontAutoStylePool::embedFontFile(rtl::OUString const&, rtl::OUString const&)
XMLFontAutoStylePool::exportXML()
XMLFontAutoStylePool::getUsedFontList()
XMLFontAutoStylePool::~XMLFontAutoStylePool()
XMLFontStylesContext::CreateStyleChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLFontStylesContext::FillProperties(rtl::OUString const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, int, int, int, int, int) const
XMLFontStylesContext::XMLFontStylesContext(SvXMLImport&, unsigned short)
XMLFontStylesContext::~XMLFontStylesContext()
XMLGradientStyleExport::XMLGradientStyleExport(SvXMLExport&)
XMLGradientStyleExport::~XMLGradientStyleExport()
XMLGradientStyleImport::XMLGradientStyleImport(SvXMLImport&)
XMLGradientStyleImport::~XMLGradientStyleImport()
XMLGraphicsDefaultStyle::SetDefaults()
XMLGraphicsDefaultStyle::XMLGraphicsDefaultStyle(SvXMLImport&, SvXMLStylesContext&)
XMLGraphicsDefaultStyle::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLGraphicsDefaultStyle::~XMLGraphicsDefaultStyle()
XMLHatchStyleExport::XMLHatchStyleExport(SvXMLExport&)
XMLHatchStyleExport::~XMLHatchStyleExport()
XMLHatchStyleImport::XMLHatchStyleImport(SvXMLImport&)
XMLHatchStyleImport::~XMLHatchStyleImport()
XMLMarkerStyleExport::XMLMarkerStyleExport(SvXMLExport&)
XMLMarkerStyleExport::~XMLMarkerStyleExport()
XMLMarkerStyleImport::XMLMarkerStyleImport(SvXMLImport&)
XMLMarkerStyleImport::~XMLMarkerStyleImport()
XMLNamedBoolPropertyHdl::exportXML(rtl::OUString&, com::sun::star::uno::Any const&, SvXMLUnitConverter const&) const
XMLNamedBoolPropertyHdl::importXML(rtl::OUString const&, com::sun::star::uno::Any&, SvXMLUnitConverter const&) const
XMLNamedBoolPropertyHdl::~XMLNamedBoolPropertyHdl()
XMLNumberFormatAttributesExportHelper::GetCellType(int, bool&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
XMLNumberFormatAttributesExportHelper::GetCurrencySymbol(int, rtl::OUString&)
XMLNumberFormatAttributesExportHelper::GetCurrencySymbol(int, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
XMLNumberFormatAttributesExportHelper::SetNumberFormatAttributes(SvXMLExport&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, bool)
XMLNumberFormatAttributesExportHelper::WriteAttributes(SvXMLExport&, short, double const&, rtl::OUString const&, bool)
XMLNumberFormatAttributesExportHelper::WriteAttributes(short, double const&, rtl::OUString const&, bool, unsigned short)
XMLNumberFormatAttributesExportHelper::XMLNumberFormatAttributesExportHelper(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
XMLNumberFormatAttributesExportHelper::XMLNumberFormatAttributesExportHelper(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&, SvXMLExport&)
XMLNumberFormatAttributesExportHelper::~XMLNumberFormatAttributesExportHelper()
XMLPageExport::XMLPageExport(SvXMLExport&)
XMLPageExport::collectPageMasterAutoStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, XMLPageExportNameEntry&)
XMLPageExport::exportMasterPageContent(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLPageExport::exportStyle(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&, bool)
XMLPageExport::~XMLPageExport()
XMLPropStyleContext::XMLPropStyleContext(SvXMLImport&, SvXMLStylesContext&, XmlStyleFamily, bool)
XMLPropStyleContext::deactivateOldFillStyleDefinitions(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> > const&)
XMLPropStyleContext::doNewDrawingLayerFillStyleDefinitionsExist(rtl::OUString const&) const
XMLPropStyleContext::getFooterSet()
XMLPropStyleContext::getHeaderSet()
XMLPropStyleContext::getStandardSet()
XMLPropStyleContext::translateNameBasedDrawingLayerFillStyleDefinitionsToStyleDisplayNames()
XMLPropStyleContext::~XMLPropStyleContext()
XMLPropertyHandler::equals(com::sun::star::uno::Any const&, com::sun::star::uno::Any const&) const
XMLPropertyHandler::~XMLPropertyHandler()
XMLPropertyHandlerFactory::GetHdlCache(int) const
XMLPropertyHandlerFactory::XMLPropertyHandlerFactory()
XMLPropertyHandlerFactory::~XMLPropertyHandlerFactory()
XMLPropertySetMapper::GetEarliestODFVersionForExport(int) const
XMLPropertySetMapper::GetEntryFlags(int) const
XMLPropertySetMapper::GetEntryIndex(int, unsigned int, int) const
XMLPropertySetMapper::GetEntryType(int) const
XMLPropertySetMapper::GetPropertyHandler(int) const
XMLPropertySetMapper::RemoveEntry(int)
XMLPropertySetMapper::XMLPropertySetMapper(XMLPropertyMapEntry const*, rtl::Reference<XMLPropertyHandlerFactory> const&, bool)
XMLPropertySetMapper::exportXML(rtl::OUString&, XMLPropertyState const&, SvXMLUnitConverter const&) const
XMLPropertySetMapper::importXML(rtl::OUString const&, XMLPropertyState&, SvXMLUnitConverter const&) const
XMLPropertySetMapper::~XMLPropertySetMapper()
XMLScriptContext::XMLScriptContext(SvXMLImport&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
XMLScriptContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLScriptContext::~XMLScriptContext()
XMLSettingsExportHelper::CallTypeFunction(com::sun::star::uno::Any const&, rtl::OUString const&) const
XMLSettingsExportHelper::ManipulateSetting(com::sun::star::uno::Any&, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
XMLSettingsExportHelper::XMLSettingsExportHelper(xmloff::XMLSettingsExportContext&)
XMLSettingsExportHelper::exportBool(bool, rtl::OUString const&) const
XMLSettingsExportHelper::exportByte()
XMLSettingsExportHelper::exportDateTime(com::sun::star::util::DateTime const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportDouble(double, rtl::OUString const&) const
XMLSettingsExportHelper::exportForbiddenCharacters(com::sun::star::uno::Any const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportIndexAccess(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportInt(int, rtl::OUString const&) const
XMLSettingsExportHelper::exportLong(long, rtl::OUString const&) const
XMLSettingsExportHelper::exportMapEntry(com::sun::star::uno::Any const&, rtl::OUString const&, bool) const
XMLSettingsExportHelper::exportNameAccess(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportSequencePropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportShort(short, rtl::OUString const&) const
XMLSettingsExportHelper::exportString(rtl::OUString const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportSymbolDescriptors(com::sun::star::uno::Sequence<com::sun::star::formula::SymbolDescriptor> const&, rtl::OUString const&) const
XMLSettingsExportHelper::exportbase64Binary(com::sun::star::uno::Sequence<signed char> const&, rtl::OUString const&) const
XMLSettingsExportHelper::~XMLSettingsExportHelper()
XMLShapeExport::checkForCustomShapeReplacement(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
XMLShapeExport::collectShapesAutoStyles(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&)
XMLShapeExport::export3DLamps(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLShapeExport::export3DSceneAttributes(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLShapeExport::exportShapes(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, XMLShapeExportFlags, com::sun::star::awt::Point*)
XMLShapeExport::onExport(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
XMLShapeExport::~XMLShapeExport()
XMLShapeImportHelper::Create3DSceneChildContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&)
XMLShapeImportHelper::CreateFrameChildContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLShapeImportHelper::CreateFrameChildContext(SvXMLImportContext*, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLShapeImportHelper::CreateShapePropMapper(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, SvXMLImport&)
XMLShapeImportHelper::IsHandleProgressBarEnabled() const
XMLShapeImportHelper::IsPresentationShapesSupported() const
XMLShapeImportHelper::SetAutoStylesContext(SvXMLStylesContext*)
XMLShapeImportHelper::SetStylesContext(SvXMLStylesContext*)
XMLShapeImportHelper::addGluePointMapping(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, int, int)
XMLShapeImportHelper::addShapeConnection(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool, rtl::OUString const&, int)
XMLShapeImportHelper::addShapeEvents(SdXMLEventContextData&)
XMLShapeImportHelper::enableHandleProgressBar()
XMLShapeImportHelper::getGluePointId(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, int)
XMLShapeImportHelper::moveGluePointMapping(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, int)
XMLShapeImportHelper::restoreConnections()
XMLShapeImportHelper::shapeRemoved(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
XMLShapeImportHelper::~XMLShapeImportHelper()
XMLShapeStyleContext::FillPropertySet(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLShapeStyleContext::Finish(bool)
XMLShapeStyleContext::SetAttribute(int, rtl::OUString const&)
XMLShapeStyleContext::XMLShapeStyleContext(SvXMLImport&, SvXMLStylesContext&, XmlStyleFamily)
XMLShapeStyleContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLShapeStyleContext::~XMLShapeStyleContext()
XMLSignatureHelper::AddEncapsulatedX509Certificate(rtl::OUString const&)
XMLSignatureHelper::AddForSigning(int, rtl::OUString const&, bool, bool)
XMLSignatureHelper::CheckAndUpdateSignatureInformation(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XSecurityEnvironment> const&, SignatureInformation const&)
XMLSignatureHelper::CloseDocumentHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&)
XMLSignatureHelper::CreateAndWriteOOXMLSignature(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, int)
XMLSignatureHelper::CreateAndWriteSignature(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, bool)
XMLSignatureHelper::CreateDocumentHandlerWithHeader(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
XMLSignatureHelper::EndMission()
XMLSignatureHelper::EnsureSignaturesRelation(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, bool)
XMLSignatureHelper::ExportOOXMLSignature(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, SignatureInformation const&, int)
XMLSignatureHelper::ExportSignature(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&, SignatureInformation const&, bool)
XMLSignatureHelper::ExportSignatureContentTypes(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, int)
XMLSignatureHelper::ExportSignatureRelations(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, int)
XMLSignatureHelper::GetNewSecurityId()
XMLSignatureHelper::GetSignatureInformation(int) const
XMLSignatureHelper::GetSignatureInformations() const
XMLSignatureHelper::ReadAndVerifySignature(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
XMLSignatureHelper::ReadAndVerifySignatureStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, bool)
XMLSignatureHelper::ReadAndVerifySignatureStorageStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
XMLSignatureHelper::SetDateTime(int, DateTime const&)
XMLSignatureHelper::SetDescription(int, rtl::OUString const&)
XMLSignatureHelper::SetGpgCertificate(int, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
XMLSignatureHelper::SetSignatureLineId(int, rtl::OUString const&)
XMLSignatureHelper::SetSignatureLineInvalidGraphic(int, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
XMLSignatureHelper::SetSignatureLineValidGraphic(int, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
XMLSignatureHelper::SetStartVerifySignatureHdl(Link<LinkParamNone*, bool> const&)
XMLSignatureHelper::SetX509Certificate(int, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, svl::crypto::SignatureMethodAlgorithm)
XMLSignatureHelper::StartMission(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSecurityContext> const&)
XMLSignatureHelper::StartVerifySignatureElement()
XMLSignatureHelper::XMLSignatureHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
XMLSignatureHelper::~XMLSignatureHelper()
XMLSignature_GpgImpl::XMLSignature_GpgImpl()
XMLSignature_GpgImpl::generate(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSignatureTemplate> const&, com::sun::star::uno::Reference<com::sun::star::xml::crypto::XSecurityEnvironment> const&)
XMLSignature_GpgImpl::getImplementationName()
XMLSignature_GpgImpl::getSupportedServiceNames()
XMLSignature_GpgImpl::impl_createInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
XMLSignature_GpgImpl::impl_getImplementationName()
XMLSignature_GpgImpl::impl_getSupportedServiceNames()
XMLSignature_GpgImpl::supportsService(rtl::OUString const&)
XMLSignature_GpgImpl::validate(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSignatureTemplate> const&, com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSecurityContext> const&)
XMLSignature_GpgImpl::~XMLSignature_GpgImpl()
XMLStyleExport::XMLStyleExport(SvXMLExport&, SvXMLAutoStylePoolP*)
XMLStyleExport::exportStyle(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&, rtl::OUString const&, rtl::Reference<SvXMLExportPropertyMapper> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const*)
XMLStyleExport::exportStyleAttributes(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
XMLStyleExport::exportStyleFamily(char const*, rtl::OUString const&, rtl::Reference<SvXMLExportPropertyMapper> const&, bool, XmlStyleFamily, rtl::OUString const*)
XMLStyleExport::~XMLStyleExport()
XMLTableExport::ExportCell(com::sun::star::uno::Reference<com::sun::star::table::XCell> const&, std::shared_ptr<XMLTableInfo> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
XMLTableExport::ExportTableColumns(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, std::shared_ptr<XMLTableInfo> const&)
XMLTableExport::XMLTableExport(SvXMLExport&, rtl::Reference<SvXMLExportPropertyMapper> const&, rtl::Reference<XMLPropertyHandlerFactory> const&)
XMLTableExport::collectTableAutoStyles(com::sun::star::uno::Reference<com::sun::star::table::XColumnRowRange> const&)
XMLTableExport::exportAutoStyles()
XMLTableExport::exportTable(com::sun::star::uno::Reference<com::sun::star::table::XColumnRowRange> const&)
XMLTableExport::exportTableTemplates()
XMLTableExport::~XMLTableExport()
XMLTableImport::CreateTableContext(com::sun::star::uno::Reference<com::sun::star::table::XColumnRowRange> const&)
XMLTableImport::XMLTableImport(SvXMLImport&, rtl::Reference<XMLPropertySetMapper> const&, rtl::Reference<XMLPropertyHandlerFactory> const&)
XMLTableImport::addTableTemplate(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
XMLTableImport::finishStyles()
XMLTableImport::insertTabletemplate(rtl::OUString const&, bool)
XMLTableImport::~XMLTableImport()
XMLTextImportHelper::AddCrossRefHeadingMapping(rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::AddOutlineStyleCandidate(signed char, rtl::OUString const&)
XMLTextImportHelper::ClearLastImportedTextFrameName()
XMLTextImportHelper::ConnectFrameChains(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextImportHelper::ConvertStarFonts(rtl::OUString const&, rtl::OUString const&, unsigned char&, bool, SvXMLImport&) const
XMLTextImportHelper::CreateParaDefaultExtPropMapper(SvXMLImport&)
XMLTextImportHelper::CreateShapeExtPropMapper(SvXMLImport&)
XMLTextImportHelper::CreateTableChildContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLTextImportHelper::FindAndRemoveBookmarkStartRange(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange>&, rtl::OUString&, std::shared_ptr<xmloff::ParsedRDFaAttributes>&)
XMLTextImportHelper::FindAutoListStyle(rtl::OUString const&) const
XMLTextImportHelper::FindDrawingPage(rtl::OUString const&) const
XMLTextImportHelper::FindOutlineStyleName(rtl::OUString&, signed char)
XMLTextImportHelper::FindPageMaster(rtl::OUString const&) const
XMLTextImportHelper::FindSectionStyle(rtl::OUString const&) const
XMLTextImportHelper::GetChapterNumbering() const
XMLTextImportHelper::GetNumberingStyles() const
XMLTextImportHelper::GetPageStyles() const
XMLTextImportHelper::GetParaImportPropertySetMapper() const
XMLTextImportHelper::GetParaStyles() const
XMLTextImportHelper::GetRubyImportPropertySetMapper() const
XMLTextImportHelper::GetSectionImportPropertySetMapper() const
XMLTextImportHelper::GetTextListHelper()
XMLTextImportHelper::HasFrameByName(rtl::OUString const&) const
XMLTextImportHelper::InsertBookmarkStartRange(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, rtl::OUString const&, std::shared_ptr<xmloff::ParsedRDFaAttributes>&)
XMLTextImportHelper::InsertControlCharacter(short)
XMLTextImportHelper::InsertFootnoteID(rtl::OUString const&, short)
XMLTextImportHelper::InsertSequenceID(rtl::OUString const&, rtl::OUString const&, short)
XMLTextImportHelper::InsertString(rtl::OUString const&)
XMLTextImportHelper::InsertString(rtl::OUString const&, bool&)
XMLTextImportHelper::IsBlockMode() const
XMLTextImportHelper::IsDuplicateFrame(rtl::OUString const&, int, int, int, int) const
XMLTextImportHelper::IsInFrame() const
XMLTextImportHelper::IsInHeaderFooter() const
XMLTextImportHelper::IsInsideDeleteContext() const
XMLTextImportHelper::IsOrganizerMode() const
XMLTextImportHelper::IsProgress() const
XMLTextImportHelper::IsStylesOnlyMode() const
XMLTextImportHelper::MakeBackpatcherImpl()
XMLTextImportHelper::MapCrossRefHeadingFieldsHorribly()
XMLTextImportHelper::PopListContext()
XMLTextImportHelper::ProcessFootnoteReference(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextImportHelper::ProcessSequenceReference(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextImportHelper::PushListContext()
XMLTextImportHelper::RedlineAdd(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::util::DateTime const&, bool)
XMLTextImportHelper::RedlineAdjustStartNodeCursor()
XMLTextImportHelper::RedlineCreateText(com::sun::star::uno::Reference<com::sun::star::text::XTextCursor>&, rtl::OUString const&)
XMLTextImportHelper::RedlineSetCursor(rtl::OUString const&, bool, bool)
XMLTextImportHelper::SetChangesProtectionKey(com::sun::star::uno::Sequence<signed char> const&)
XMLTextImportHelper::SetHyperlink(SvXMLImport const&, com::sun::star::uno::Reference<com::sun::star::text::XTextCursor> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, XMLEventsImportContext*)
XMLTextImportHelper::SetInsideDeleteContext(bool)
XMLTextImportHelper::SetOpenRedlineId(rtl::OUString const&)
XMLTextImportHelper::SetRecordChanges(bool)
XMLTextImportHelper::SetRuby(SvXMLImport const&, com::sun::star::uno::Reference<com::sun::star::text::XTextCursor> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::SetShowChanges(bool)
XMLTextImportHelper::StoreLastImportedFrameName(rtl::OUString const&)
XMLTextImportHelper::XMLTextImportHelper(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, SvXMLImport&, bool, bool, bool, bool, bool)
XMLTextImportHelper::addFieldParam(rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::createAndInsertApplet(rtl::OUString const&, rtl::OUString const&, bool, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertFloatingFrame(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertOLEObject(SvXMLImport&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertOOoLink(SvXMLImport&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertPlugin(rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::dispose()
XMLTextImportHelper::endAppletOrPlugin(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, std::map<rtl::OUString const, rtl::OUString, std::less<rtl::OUString const>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
XMLTextImportHelper::getBookmarkCondition(rtl::OUString const&) const
XMLTextImportHelper::getBookmarkHidden(rtl::OUString const&) const
XMLTextImportHelper::getCurrentFieldType()
XMLTextImportHelper::hasCurrentFieldCtx() const
XMLTextImportHelper::popFieldCtx()
XMLTextImportHelper::pushFieldCtx(rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::setBookmarkAttributes(rtl::OUString const&, bool, rtl::OUString const&)
XMLTextImportHelper::setCurrentFieldParamsTo(com::sun::star::uno::Reference<com::sun::star::text::XFormField> const&)
XMLTextImportHelper::~XMLTextImportHelper()
XMLTextImportPropertyMapper::FontDefaultsCheck(XMLPropertyState const*, XMLPropertyState const*, XMLPropertyState const*, XMLPropertyState const*, XMLPropertyState const*, std::unique_ptr<XMLPropertyState, std::default_delete<XMLPropertyState> >*, std::unique_ptr<XMLPropertyState, std::default_delete<XMLPropertyState> >*, std::unique_ptr<XMLPropertyState, std::default_delete<XMLPropertyState> >*, std::unique_ptr<XMLPropertyState, std::default_delete<XMLPropertyState> >*) const
XMLTextImportPropertyMapper::FontFinished(XMLPropertyState*, XMLPropertyState*, XMLPropertyState*, XMLPropertyState*, XMLPropertyState*)
XMLTextImportPropertyMapper::XMLTextImportPropertyMapper(rtl::Reference<XMLPropertySetMapper> const&, SvXMLImport&)
XMLTextImportPropertyMapper::finished(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, int, int) const
XMLTextImportPropertyMapper::handleSpecialItem(XMLPropertyState&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, rtl::OUString const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&) const
XMLTextImportPropertyMapper::~XMLTextImportPropertyMapper()
XMLTextListAutoStylePool::Add(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&)
XMLTextListAutoStylePool::Find(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&) const
XMLTextListAutoStylePool::RegisterName(rtl::OUString const&)
XMLTextListAutoStylePool::XMLTextListAutoStylePool(SvXMLExport&)
XMLTextListAutoStylePool::exportXML() const
XMLTextListAutoStylePool::~XMLTextListAutoStylePool()
XMLTextMasterPageContext::CreateHeaderFooterContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, bool, bool, bool)
XMLTextMasterPageContext::XMLTextMasterPageContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, bool)
XMLTextMasterPageContext::~XMLTextMasterPageContext()
XMLTextMasterPageExport::exportHeaderFooterContent(com::sun::star::uno::Reference<com::sun::star::text::XText> const&, bool, bool)
XMLTextMasterPageExport::exportMasterPageContent(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLTextMasterPageExport::~XMLTextMasterPageExport()
XMLTextMasterStylesContext::XMLTextMasterStylesContext(SvXMLImport&)
XMLTextMasterStylesContext::~XMLTextMasterStylesContext()
XMLTextParagraphExport::Add(XmlStyleFamily, MultiPropertySetHelper&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextParagraphExport::CreateParaDefaultExtPropMapper(SvXMLExport&)
XMLTextParagraphExport::FindTextStyleAndHyperlink(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool&, bool&, bool&, XMLPropertyState const**) const
XMLTextParagraphExport::PopTextListsHelper()
XMLTextParagraphExport::PushNewTextListsHelper()
XMLTextParagraphExport::XMLTextParagraphExport(SvXMLExport&, SvXMLAutoStylePoolP&)
XMLTextParagraphExport::_collectTextEmbeddedAutoStyles(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextParagraphExport::_exportTextEmbedded(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&)
XMLTextParagraphExport::_exportTextFrame(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, bool)
XMLTextParagraphExport::_exportTextGraphic(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&)
XMLTextParagraphExport::addHyperlinkAttributes(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyState> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&)
XMLTextParagraphExport::exportAnyTextFrame(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, XMLTextParagraphExport::FrameType, bool, bool, bool, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*)
XMLTextParagraphExport::exportFrameFrames(bool, bool, com::sun::star::uno::Reference<com::sun::star::text::XTextFrame> const*)
XMLTextParagraphExport::exportListAndSectionChange(com::sun::star::uno::Reference<com::sun::star::text::XTextSection>&, MultiPropertySetHelper&, short, com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&, bool)
XMLTextParagraphExport::exportListAndSectionChange(com::sun::star::uno::Reference<com::sun::star::text::XTextSection>&, com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&, bool)
XMLTextParagraphExport::exportListAndSectionChange(com::sun::star::uno::Reference<com::sun::star::text::XTextSection>&, com::sun::star::uno::Reference<com::sun::star::text::XTextSection> const&, XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&, bool)
XMLTextParagraphExport::exportListChange(XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&)
XMLTextParagraphExport::exportMeta(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, bool, bool&)
XMLTextParagraphExport::exportNumStyles(bool)
XMLTextParagraphExport::exportParagraph(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, bool, bool, bool, MultiPropertySetHelper&, TextPNS)
XMLTextParagraphExport::exportRuby(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLTextParagraphExport::exportSoftPageBreak()
XMLTextParagraphExport::exportTable(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, bool, bool)
XMLTextParagraphExport::exportTableAutoStyles()
XMLTextParagraphExport::exportTextContentEnumeration(com::sun::star::uno::Reference<com::sun::star::container::XEnumeration> const&, bool, com::sun::star::uno::Reference<com::sun::star::text::XTextSection> const&, bool, bool, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, TextPNS)
XMLTextParagraphExport::exportTextField(com::sun::star::uno::Reference<com::sun::star::text::XTextField> const&, bool, bool, bool, bool*)
XMLTextParagraphExport::exportTextField(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, bool, bool, bool*)
XMLTextParagraphExport::exportTextFootnote(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, bool, bool)
XMLTextParagraphExport::exportTextFootnoteConfiguration()
XMLTextParagraphExport::exportTextFootnoteConfigurationHelper(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLTextParagraphExport::exportTextFootnoteHelper(com::sun::star::uno::Reference<com::sun::star::text::XFootnote> const&, com::sun::star::uno::Reference<com::sun::star::text::XText> const&, rtl::OUString const&, bool, bool, bool)
XMLTextParagraphExport::exportTextMark(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, xmloff::token::XMLTokenEnum const*, bool)
XMLTextParagraphExport::exportTextRange(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, bool, bool&, XMLTextParagraphExport::FieldmarkType&)
XMLTextParagraphExport::exportTextRangeEnumeration(com::sun::star::uno::Reference<com::sun::star::container::XEnumeration> const&, bool, bool, bool&)
XMLTextParagraphExport::exportTextRangeSpan(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo>&, bool, bool, rtl::OUString const&, bool&, XMLTextParagraphExport::FieldmarkType&)
XMLTextParagraphExport::exportTrackedChanges(com::sun::star::uno::Reference<com::sun::star::text::XText> const&, bool)
XMLTextParagraphExport::recordTrackedChangesForXText(com::sun::star::uno::Reference<com::sun::star::text::XText> const&)
XMLTextParagraphExport::recordTrackedChangesNoXText()
XMLTextParagraphExport::~XMLTextParagraphExport()
XMLTextPropertySetMapper::XMLTextPropertySetMapper(TextPropMap, bool)
XMLTextPropertySetMapper::getPropertyMapForType(TextPropMap)
XMLTextPropertySetMapper::~XMLTextPropertySetMapper()
XMLTextShapeImportHelper::XMLTextShapeImportHelper(SvXMLImport&)
XMLTextShapeImportHelper::~XMLTextShapeImportHelper()
XMLTextShapeStyleContext::CreateAndInsert(bool)
XMLTextShapeStyleContext::Finish(bool)
XMLTextShapeStyleContext::SetAttribute(int, rtl::OUString const&)
XMLTextShapeStyleContext::XMLTextShapeStyleContext(SvXMLImport&, SvXMLStylesContext&, XmlStyleFamily)
XMLTextShapeStyleContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLTextShapeStyleContext::~XMLTextShapeStyleContext()
XMLTextStyleContext::~XMLTextStyleContext()
XMLTextTableContext::XMLTextTableContext(SvXMLImport&)
XMLTextTableContext::~XMLTextTableContext()
XOBitmap::GetGraphicObject() const
XOBitmap::XOBitmap(BitmapEx const&)
XOBitmap::~XOBitmap()
XOutBitmap::ExportGraphic(Graphic const&, INetURLObject const&, GraphicFilter&, unsigned short, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
XOutBitmap::MirrorAnimation(Animation const&, bool, bool)
XOutBitmap::MirrorGraphic(Graphic const&, BmpMirrorFlags)
XPatternList::Create()
XPatternList::CreateBitmap(long, Size const&) const
XPatternList::CreateBitmapForUI(long)
XPatternList::createInstance()
XPolygon::CalcDistance(unsigned short, unsigned short)
XPolygon::CalcSmoothJoin(unsigned short, unsigned short, unsigned short)
XPolygon::CalcTangent(unsigned short, unsigned short, unsigned short)
XPolygon::CheckAngles(o3tl::strong_int<int, FractionTag<100> >&, o3tl::strong_int<int, FractionTag<100> >, o3tl::strong_int<int, FractionTag<100> >&, o3tl::strong_int<int, FractionTag<100> >&)
XPolygon::Distort(tools::Rectangle const&, XPolygon const&)
XPolygon::GenBezArc(Point const&, long, long, long, long, o3tl::strong_int<int, FractionTag<100> >, o3tl::strong_int<int, FractionTag<100> >, unsigned short, unsigned short)
XPolygon::GetBoundRect() const
XPolygon::GetFlags(unsigned short) const
XPolygon::GetPointCount() const
XPolygon::GetSize() const
XPolygon::Insert(unsigned short, XPolygon const&)
XPolygon::IsControl(unsigned short) const
XPolygon::IsSmooth(unsigned short) const
XPolygon::Move(long, long)
XPolygon::PointsToBezier(unsigned short)
XPolygon::Remove(unsigned short, unsigned short)
XPolygon::SetFlags(unsigned short, PolyFlags)
XPolygon::SetPointCount(unsigned short)
XPolygon::SubdivideBezier(unsigned short, bool, double)
XPolygon::XPolygon(Point const&, long, long, o3tl::strong_int<int, FractionTag<100> >, o3tl::strong_int<int, FractionTag<100> >, bool)
XPolygon::XPolygon(XPolygon const&)
XPolygon::XPolygon(XPolygon&&)
XPolygon::XPolygon(basegfx::B2DPolygon const&)
XPolygon::XPolygon(tools::Polygon const&)
XPolygon::XPolygon(tools::Rectangle const&, long, long)
XPolygon::XPolygon(unsigned short)
XPolygon::operator=(XPolygon const&)
XPolygon::operator=(XPolygon&&)
XPolygon::operator==(XPolygon const&) const
XPolygon::operator[](unsigned short)
XPolygon::operator[](unsigned short) const
XPolygon::~XPolygon()
XPropertyEntry::XPropertyEntry(rtl::OUString const&)
XPropertyEntry::~XPropertyEntry()
XPropertyList::Get(long) const
XPropertyList::GetIndex(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
XPropertyList::XPropertyList(XPropertyListType, rtl::OUString const&, rtl::OUString const&)
XPropertyList::isValidIdx(long) const
XPropertyList::~XPropertyList()
XSecondaryFillColorItem::XSecondaryFillColorItem(rtl::OUString const&, Color const&)
XmlSecStatusBarControl::Command(CommandEvent const&)
XmlSecStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
XmlSecStatusBarControl::Paint(UserDrawEvent const&)
XmlSecStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
XmlSecStatusBarControl::XmlSecStatusBarControl(unsigned short, unsigned short, StatusBar&)
XmlSecStatusBarControl::~XmlSecStatusBarControl()
ZCodec::AttemptDecompression(SvStream&, SvStream&)
ZCodec::ImplWriteBack()
ZCodec::InitCompress()
ZCodec::InitDecompress(SvStream&)
ZCodec::Write(SvStream&, unsigned char const*, unsigned int)
ZCodec::ZCodec(unsigned long, unsigned long)
ZCodec::~ZCodec()
ZipUtils::Deflater::Deflater(int, bool)
ZipUtils::Deflater::doDeflateBytes(com::sun::star::uno::Sequence<signed char>&, int, int)
ZipUtils::Deflater::doDeflateSegment(com::sun::star::uno::Sequence<signed char>&, int)
ZipUtils::Deflater::end()
ZipUtils::Deflater::finish()
ZipUtils::Deflater::getTotalIn() const
ZipUtils::Deflater::getTotalOut() const
ZipUtils::Deflater::init(int, bool)
ZipUtils::Deflater::needsInput() const
ZipUtils::Deflater::reset()
ZipUtils::Deflater::setInputSegment(com::sun::star::uno::Sequence<signed char> const&)
ZipUtils::Deflater::~Deflater()
ZipUtils::Inflater::Inflater(bool)
ZipUtils::Inflater::doInflateBytes(com::sun::star::uno::Sequence<signed char>&, int, int)
ZipUtils::Inflater::doInflateSegment(com::sun::star::uno::Sequence<signed char>&, int, int)
ZipUtils::Inflater::end()
ZipUtils::Inflater::setInput(com::sun::star::uno::Sequence<signed char> const&)
ZipUtils::Inflater::~Inflater()
accessibility::AccessibleComponentBase::AccessibleComponentBase()
accessibility::AccessibleComponentBase::getAccessibleAtPoint(com::sun::star::awt::Point const&)
accessibility::AccessibleComponentBase::getBackground()
accessibility::AccessibleComponentBase::getBounds()
accessibility::AccessibleComponentBase::getForeground()
accessibility::AccessibleComponentBase::getLocation()
accessibility::AccessibleComponentBase::getLocationOnScreen()
accessibility::AccessibleComponentBase::getSize()
accessibility::AccessibleComponentBase::~AccessibleComponentBase()
accessibility::AccessibleContextBase::AccessibleContextBase(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, short)
accessibility::AccessibleContextBase::CreateAccessibleName()
accessibility::AccessibleContextBase::FireEvent(com::sun::star::accessibility::AccessibleEventObject const&)
accessibility::AccessibleContextBase::GetState(short)
accessibility::AccessibleContextBase::SetAccessibleDescription(rtl::OUString const&, accessibility::AccessibleContextBase::StringOrigin)
accessibility::AccessibleContextBase::SetAccessibleRole(short)
accessibility::AccessibleContextBase::getAccessibleChild(int)
accessibility::AccessibleContextBase::getAccessibleChildCount()
accessibility::AccessibleContextBase::getImplementationName()
accessibility::AccessibleContextBase::getSupportedServiceNames()
accessibility::AccessibleContextBase::~AccessibleContextBase()
accessibility::AccessibleGraphicShape::AccessibleGraphicShape(accessibility::AccessibleShapeInfo const&, accessibility::AccessibleShapeTreeInfo const&)
accessibility::AccessibleGraphicShape::CreateAccessibleBaseName()
accessibility::AccessibleGraphicShape::getImplementationName()
accessibility::AccessibleGraphicShape::~AccessibleGraphicShape()
accessibility::AccessibleOLEShape::AccessibleOLEShape(accessibility::AccessibleShapeInfo const&, accessibility::AccessibleShapeTreeInfo const&)
accessibility::AccessibleOLEShape::CreateAccessibleBaseName()
accessibility::AccessibleOLEShape::getImplementationName()
accessibility::AccessibleOLEShape::~AccessibleOLEShape()
accessibility::AccessibleSelectionBase::AccessibleSelectionBase()
accessibility::AccessibleSelectionBase::~AccessibleSelectionBase()
accessibility::AccessibleShape::CreateAccessibleBaseName()
accessibility::AccessibleShape::GetFullAccessibleName(accessibility::AccessibleShape*)
accessibility::AccessibleShape::UpdateNameAndDescription()
accessibility::AccessibleShape::UpdateStates()
accessibility::AccessibleShape::disposing(com::sun::star::lang::EventObject const&)
accessibility::AccessibleShape::getImplementationName()
accessibility::AccessibleShape::~AccessibleShape()
accessibility::AccessibleShapeInfo::AccessibleShapeInfo(accessibility::AccessibleShapeInfo const&)
accessibility::AccessibleShapeInfo::AccessibleShapeInfo(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
accessibility::AccessibleShapeInfo::AccessibleShapeInfo(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, accessibility::IAccessibleParent*)
accessibility::AccessibleShapeInfo::~AccessibleShapeInfo()
accessibility::AccessibleShapeTreeInfo::AccessibleShapeTreeInfo()
accessibility::AccessibleShapeTreeInfo::AccessibleShapeTreeInfo(accessibility::AccessibleShapeTreeInfo const&)
accessibility::AccessibleShapeTreeInfo::dispose()
accessibility::AccessibleShapeTreeInfo::operator=(accessibility::AccessibleShapeTreeInfo const&)
accessibility::AccessibleShapeTreeInfo::~AccessibleShapeTreeInfo()
accessibility::AccessibleStaticTextBase::AccessibleStaticTextBase(std::unique_ptr<SvxEditSource, std::default_delete<SvxEditSource> >&&)
accessibility::AccessibleStaticTextBase::~AccessibleStaticTextBase()
accessibility::AccessibleTextHelper::AccessibleTextHelper(std::unique_ptr<SvxEditSource, std::default_delete<SvxEditSource> >&&)
accessibility::AccessibleTextHelper::HaveFocus()
accessibility::AccessibleTextHelper::~AccessibleTextHelper()
accessibility::ChildrenManager::ChildrenManager(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, accessibility::AccessibleShapeTreeInfo const&, accessibility::AccessibleContextBase&)
accessibility::ChildrenManager::~ChildrenManager()
accessibility::ShapeTypeHandler::CreateAccessibleBaseName(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
accessibility::ShapeTypeHandler::GetTypeId(rtl::OUString const&) const
accessibility::ShapeTypeHandler::ShapeTypeHandler()
accessibility::ShapeTypeHandler::~ShapeTypeHandler()
accumulate_for_scale
addCandidateVar
addUndoPresolve
add_GUB
add_SOS
add_artificial
add_column
add_columnex
add_constraint_name
add_constraintex
add_lag_con
add_row
addmpscolumn
allocCHAR
allocFREE
allocINT
allocLREAL
allocMYBOOL
allocREAL
appendBinaryPQExpBuffer
appendLink
appendPQExpBuffer
appendPQExpBufferChar
appendPQExpBufferStr
appendUndoPresolve
append_SOSgroup
append_SOSrec
append_columns
append_rows
appendmpsitem
apphelper::LifeTimeManager::LifeTimeManager(com::sun::star::lang::XComponent*)
apphelper::LifeTimeManager::~LifeTimeManager()
apphelper::MediaDescriptorHelper::MediaDescriptorHelper(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
auto_scale
avmedia::MediaFloater::MediaFloater(SfxBindings*, SfxChildWindow*, vcl::Window*)
avmedia::MediaFloater::Resize()
avmedia::MediaFloater::ToggleFloatingMode()
avmedia::MediaFloater::dispatchCurrentURL()
avmedia::MediaFloater::dispose()
avmedia::MediaFloater::~MediaFloater()
avmedia::MediaItem::Clone(SfxItemPool*) const
avmedia::MediaItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
avmedia::MediaItem::MediaItem(avmedia::MediaItem const&)
avmedia::MediaItem::MediaItem(unsigned short, AVMediaSetMask)
avmedia::MediaItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
avmedia::MediaItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
avmedia::MediaItem::getDuration() const
avmedia::MediaItem::getTime() const
avmedia::MediaItem::merge(avmedia::MediaItem const&)
avmedia::MediaItem::operator==(SfxPoolItem const&) const
avmedia::MediaItem::setDuration(double)
avmedia::MediaItem::setState(avmedia::MediaState)
avmedia::MediaItem::setTime(double)
avmedia::MediaItem::~MediaItem()
avmedia::MediaPlayer::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
avmedia::MediaPlayer::GetInfo() const
avmedia::MediaPlayer::MediaPlayer(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
avmedia::MediaPlayer::~MediaPlayer()
avmedia::MediaTempFile::~MediaTempFile()
avmedia::MediaToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
avmedia::MediaToolBoxControl::CreateItemWindow(vcl::Window*)
avmedia::MediaToolBoxControl::MediaToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
avmedia::MediaToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
avmedia::MediaToolBoxControl::~MediaToolBoxControl()
avmedia::MediaWindow::AcceptDrop(AcceptDropEvent const&)
avmedia::MediaWindow::Command(CommandEvent const&)
avmedia::MediaWindow::ExecuteDrop(ExecuteDropEvent const&)
avmedia::MediaWindow::KeyInput(KeyEvent const&)
avmedia::MediaWindow::KeyUp(KeyEvent const&)
avmedia::MediaWindow::MediaWindow(vcl::Window*, bool)
avmedia::MediaWindow::MouseButtonDown(MouseEvent const&)
avmedia::MediaWindow::MouseButtonUp(MouseEvent const&)
avmedia::MediaWindow::MouseMove(MouseEvent const&)
avmedia::MediaWindow::StartDrag(signed char, Point const&)
avmedia::MediaWindow::getURL() const
avmedia::MediaWindow::isValid() const
avmedia::MediaWindow::setURL(rtl::OUString const&, rtl::OUString const&)
avmedia::MediaWindow::start()
avmedia::MediaWindow::~MediaWindow()
basegfx::B2DCubicBezier::B2DCubicBezier()
basegfx::B2DCubicBezier::B2DCubicBezier(basegfx::B2DCubicBezier const&)
basegfx::B2DCubicBezier::B2DCubicBezier(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::B2DCubicBezier::adaptiveSubdivideByAngle(basegfx::B2DPolygon&, double) const
basegfx::B2DCubicBezier::adaptiveSubdivideByCount(basegfx::B2DPolygon&, unsigned int) const
basegfx::B2DCubicBezier::adaptiveSubdivideByDistance(basegfx::B2DPolygon&, double) const
basegfx::B2DCubicBezier::equal(basegfx::B2DCubicBezier const&) const
basegfx::B2DCubicBezier::fround()
basegfx::B2DCubicBezier::getAllExtremumPositions(std::vector<double, std::allocator<double> >&) const
basegfx::B2DCubicBezier::getControlPolygonLength() const
basegfx::B2DCubicBezier::getEdgeLength() const
basegfx::B2DCubicBezier::getMinimumExtremumPosition(double&) const
basegfx::B2DCubicBezier::getRange() const
basegfx::B2DCubicBezier::getSmallestDistancePointToBezierSegment(basegfx::B2DPoint const&, double&) const
basegfx::B2DCubicBezier::operator!=(basegfx::B2DCubicBezier const&) const
basegfx::B2DCubicBezier::operator=(basegfx::B2DCubicBezier const&)
basegfx::B2DCubicBezier::operator==(basegfx::B2DCubicBezier const&) const
basegfx::B2DCubicBezier::snippet(double, double) const
basegfx::B2DCubicBezier::transform(basegfx::B2DHomMatrix const&)
basegfx::B2DCubicBezier::~B2DCubicBezier()
basegfx::B2DCubicBezierHelper::B2DCubicBezierHelper(basegfx::B2DCubicBezier const&, unsigned int)
basegfx::B2DHomMatrix::B2DHomMatrix()
basegfx::B2DHomMatrix::B2DHomMatrix(basegfx::B2DHomMatrix const&)
basegfx::B2DHomMatrix::B2DHomMatrix(basegfx::B2DHomMatrix&&)
basegfx::B2DHomMatrix::B2DHomMatrix(double, double, double, double, double, double)
basegfx::B2DHomMatrix::isInvertible() const
basegfx::B2DHomMatrix::isLastLineDefault() const
basegfx::B2DHomMatrix::operator*=(double)
basegfx::B2DHomMatrix::operator+=(basegfx::B2DHomMatrix const&)
basegfx::B2DHomMatrix::operator-=(basegfx::B2DHomMatrix const&)
basegfx::B2DHomMatrix::operator/=(double)
basegfx::B2DHomMatrix::scale(basegfx::B2DTuple const&)
basegfx::B2DHomMatrix::set3x2(double, double, double, double, double, double)
basegfx::B2DHomMatrix::~B2DHomMatrix()
basegfx::B2DPolyPolygon::B2DPolyPolygon()
basegfx::B2DPolyPolygon::B2DPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::B2DPolyPolygon::B2DPolyPolygon(basegfx::B2DPolyPolygon&&)
basegfx::B2DPolyPolygon::B2DPolyPolygon(basegfx::B2DPolygon const&)
basegfx::B2DPolyPolygon::addOrReplaceSystemDependentDataInternal(std::shared_ptr<basegfx::SystemDependentData>&) const
basegfx::B2DPolyPolygon::getDefaultAdaptiveSubdivision() const
basegfx::B2DPolyPolygon::getSystemDependantDataInternal(unsigned long) const
basegfx::B2DPolyPolygon::hasDoublePoints() const
basegfx::B2DPolyPolygon::makeUnique()
basegfx::B2DPolyPolygon::~B2DPolyPolygon()
basegfx::B2DPolyRange::B2DPolyRange()
basegfx::B2DPolyRange::B2DPolyRange(basegfx::B2DPolyRange const&)
basegfx::B2DPolyRange::operator!=(basegfx::B2DPolyRange const&) const
basegfx::B2DPolyRange::operator==(basegfx::B2DPolyRange const&) const
basegfx::B2DPolyRange::transform(basegfx::B2DHomMatrix const&)
basegfx::B2DPolyRange::~B2DPolyRange()
basegfx::B2DPolygon::B2DPolygon()
basegfx::B2DPolygon::B2DPolygon(basegfx::B2DPolygon const&)
basegfx::B2DPolygon::B2DPolygon(basegfx::B2DPolygon const&, unsigned int, unsigned int)
basegfx::B2DPolygon::B2DPolygon(basegfx::B2DPolygon&&)
basegfx::B2DPolygon::B2DPolygon(std::initializer_list<basegfx::B2DPoint>)
basegfx::B2DPolygon::hasDoublePoints() const
basegfx::B2DPolygon::makeUnique()
basegfx::B2DPolygon::operator!=(basegfx::B2DPolygon const&) const
basegfx::B2DPolygon::reserve(unsigned int)
basegfx::B2DPolygon::~B2DPolygon()
basegfx::B2DRange::B2DRange(basegfx::B2IRange const&)
basegfx::B2DTuple::B2DTuple(basegfx::B2ITuple const&)
basegfx::B2DVector::getEmptyVector()
basegfx::B2IVector::operator*=(basegfx::B2DHomMatrix const&)
basegfx::B2IVector::operator=(basegfx::B2ITuple const&)
basegfx::B3DHomMatrix::B3DHomMatrix()
basegfx::B3DHomMatrix::B3DHomMatrix(basegfx::B3DHomMatrix const&)
basegfx::B3DHomMatrix::B3DHomMatrix(basegfx::B3DHomMatrix&&)
basegfx::B3DHomMatrix::determinant() const
basegfx::B3DHomMatrix::isLastLineDefault() const
basegfx::B3DHomMatrix::operator*=(double)
basegfx::B3DHomMatrix::operator+=(basegfx::B3DHomMatrix const&)
basegfx::B3DHomMatrix::operator-=(basegfx::B3DHomMatrix const&)
basegfx::B3DHomMatrix::operator/=(double)
basegfx::B3DHomMatrix::operator==(basegfx::B3DHomMatrix const&) const
basegfx::B3DHomMatrix::rotate(basegfx::B3DTuple const&)
basegfx::B3DHomMatrix::scale(basegfx::B3DTuple const&)
basegfx::B3DHomMatrix::shearXZ(double, double)
basegfx::B3DHomMatrix::translate(basegfx::B3DTuple const&)
basegfx::B3DHomMatrix::~B3DHomMatrix()
basegfx::B3DPolyPolygon::B3DPolyPolygon()
basegfx::B3DPolyPolygon::B3DPolyPolygon(basegfx::B3DPolyPolygon const&)
basegfx::B3DPolyPolygon::B3DPolyPolygon(basegfx::B3DPolyPolygon&&)
basegfx::B3DPolyPolygon::B3DPolyPolygon(basegfx::B3DPolygon const&)
basegfx::B3DPolyPolygon::append(basegfx::B3DPolyPolygon const&)
basegfx::B3DPolyPolygon::areBColorsUsed() const
basegfx::B3DPolyPolygon::areNormalsUsed() const
basegfx::B3DPolyPolygon::areTextureCoordinatesUsed() const
basegfx::B3DPolyPolygon::begin()
basegfx::B3DPolyPolygon::begin() const
basegfx::B3DPolyPolygon::clearBColors()
basegfx::B3DPolyPolygon::clearNormals()
basegfx::B3DPolyPolygon::clearTextureCoordinates()
basegfx::B3DPolyPolygon::end()
basegfx::B3DPolyPolygon::end() const
basegfx::B3DPolyPolygon::hasDoublePoints() const
basegfx::B3DPolyPolygon::operator==(basegfx::B3DPolyPolygon const&) const
basegfx::B3DPolyPolygon::remove(unsigned int, unsigned int)
basegfx::B3DPolyPolygon::removeDoublePoints()
basegfx::B3DPolyPolygon::transformNormals(basegfx::B3DHomMatrix const&)
basegfx::B3DPolyPolygon::transformTextureCoordinates(basegfx::B2DHomMatrix const&)
basegfx::B3DPolyPolygon::~B3DPolyPolygon()
basegfx::B3DPolygon::B3DPolygon()
basegfx::B3DPolygon::B3DPolygon(basegfx::B3DPolygon const&)
basegfx::B3DPolygon::B3DPolygon(basegfx::B3DPolygon&&)
basegfx::B3DPolygon::append(basegfx::B3DPolygon const&, unsigned int, unsigned int)
basegfx::B3DPolygon::areBColorsUsed() const
basegfx::B3DPolygon::areNormalsUsed() const
basegfx::B3DPolygon::areTextureCoordinatesUsed() const
basegfx::B3DPolygon::clear()
basegfx::B3DPolygon::clearBColors()
basegfx::B3DPolygon::clearNormals()
basegfx::B3DPolygon::clearTextureCoordinates()
basegfx::B3DPolygon::flip()
basegfx::B3DPolygon::getBColor(unsigned int) const
basegfx::B3DPolygon::getNormal(unsigned int) const
basegfx::B3DPolygon::getTextureCoordinate(unsigned int) const
basegfx::B3DPolygon::hasDoublePoints() const
basegfx::B3DPolygon::operator!=(basegfx::B3DPolygon const&) const
basegfx::B3DPolygon::operator=(basegfx::B3DPolygon&&)
basegfx::B3DPolygon::operator==(basegfx::B3DPolygon const&) const
basegfx::B3DPolygon::remove(unsigned int, unsigned int)
basegfx::B3DPolygon::removeDoublePoints()
basegfx::B3DPolygon::setB3DPoint(unsigned int, basegfx::B3DPoint const&)
basegfx::B3DPolygon::setBColor(unsigned int, basegfx::BColor const&)
basegfx::B3DPolygon::setClosed(bool)
basegfx::B3DPolygon::transform(basegfx::B3DHomMatrix const&)
basegfx::B3DPolygon::transformNormals(basegfx::B3DHomMatrix const&)
basegfx::B3DPolygon::transformTextureCoordinates(basegfx::B2DHomMatrix const&)
basegfx::B3DPolygon::~B3DPolygon()
basegfx::BColorModifier::~BColorModifier()
basegfx::BColorModifier_gray::getModifiedColor(basegfx::BColor const&) const
basegfx::BColorModifier_gray::operator==(basegfx::BColorModifier const&) const
basegfx::BColorModifier_gray::~BColorModifier_gray()
basegfx::BColorModifier_interpolate::getModifiedColor(basegfx::BColor const&) const
basegfx::BColorModifier_interpolate::operator==(basegfx::BColorModifier const&) const
basegfx::BColorModifier_interpolate::~BColorModifier_interpolate()
basegfx::BColorModifier_invert::getModifiedColor(basegfx::BColor const&) const
basegfx::BColorModifier_invert::operator==(basegfx::BColorModifier const&) const
basegfx::BColorModifier_invert::~BColorModifier_invert()
basegfx::BColorModifier_luminance_to_alpha::getModifiedColor(basegfx::BColor const&) const
basegfx::BColorModifier_luminance_to_alpha::operator==(basegfx::BColorModifier const&) const
basegfx::BColorModifier_luminance_to_alpha::~BColorModifier_luminance_to_alpha()
basegfx::BColorModifier_replace::getModifiedColor(basegfx::BColor const&) const
basegfx::BColorModifier_replace::operator==(basegfx::BColorModifier const&) const
basegfx::BColorModifier_replace::~BColorModifier_replace()
basegfx::SystemDependentData::SystemDependentData(basegfx::SystemDependentDataManager&)
basegfx::SystemDependentData::estimateUsageInBytes() const
basegfx::SystemDependentData::~SystemDependentData()
basegfx::SystemDependentDataHolder::SystemDependentDataHolder()
basegfx::SystemDependentDataHolder::addOrReplaceSystemDependentData(std::shared_ptr<basegfx::SystemDependentData>&)
basegfx::SystemDependentDataHolder::getSystemDependentData(unsigned long) const
basegfx::SystemDependentDataHolder::~SystemDependentDataHolder()
basegfx::SystemDependentDataManager::SystemDependentDataManager()
basegfx::SystemDependentDataManager::~SystemDependentDataManager()
basegfx::areParallel(basegfx::B3DVector const&, basegfx::B3DVector const&)
basegfx::computeSetDifference(std::vector<basegfx::B2IRange, std::allocator<basegfx::B2IRange> >&, basegfx::B2IRange const&, basegfx::B2IRange const&)
basegfx::createWaveLinePolygon(basegfx::B2DRange const&)
basegfx::fround(basegfx::B2DTuple const&)
basegfx::fround(basegfx::B3DTuple const&)
basegfx::getContinuity(basegfx::B2DVector const&, basegfx::B2DVector const&)
basegfx::getOrientation(basegfx::B2DVector const&, basegfx::B2DVector const&)
basegfx::getPerpendicular(basegfx::B2DVector const&)
basegfx::snapToNearestMultiple(double, double)
basegfx::triangulator::triangulate(basegfx::B2DPolyPolygon const&)
basegfx::unotools::UnoPolyPolygon::UnoPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::unotools::UnoPolyPolygon::addPolyPolygon(com::sun::star::geometry::RealPoint2D const&, com::sun::star::uno::Reference<com::sun::star::rendering::XPolyPolygon2D> const&)
basegfx::unotools::UnoPolyPolygon::getBezierSegment(int, int)
basegfx::unotools::UnoPolyPolygon::getBezierSegments(int, int, int, int)
basegfx::unotools::UnoPolyPolygon::getFillRule()
basegfx::unotools::UnoPolyPolygon::getImplementationName()
basegfx::unotools::UnoPolyPolygon::getNumberOfPolygonPoints(int)
basegfx::unotools::UnoPolyPolygon::getNumberOfPolygons()
basegfx::unotools::UnoPolyPolygon::getPoint(int, int)
basegfx::unotools::UnoPolyPolygon::getPoints(int, int, int, int)
basegfx::unotools::UnoPolyPolygon::getPolyPolygon() const
basegfx::unotools::UnoPolyPolygon::getSubsetPolyPolygon(int, int, int, int) const
basegfx::unotools::UnoPolyPolygon::getSupportedServiceNames()
basegfx::unotools::UnoPolyPolygon::isClosed(int)
basegfx::unotools::UnoPolyPolygon::setBezierSegment(com::sun::star::geometry::RealBezierSegment2D const&, int, int)
basegfx::unotools::UnoPolyPolygon::setBezierSegments(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::geometry::RealBezierSegment2D> > const&, int)
basegfx::unotools::UnoPolyPolygon::setClosed(int, unsigned char)
basegfx::unotools::UnoPolyPolygon::setFillRule(com::sun::star::rendering::FillRule)
basegfx::unotools::UnoPolyPolygon::setPoint(com::sun::star::geometry::RealPoint2D const&, int, int)
basegfx::unotools::UnoPolyPolygon::setPoints(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::geometry::RealPoint2D> > const&, int)
basegfx::unotools::UnoPolyPolygon::supportsService(rtl::OUString const&)
basegfx::unotools::affineMatrixFromHomMatrix3D(com::sun::star::geometry::AffineMatrix3D&, basegfx::B3DHomMatrix const&)
basegfx::unotools::b2DPointFromRealPoint2D(com::sun::star::geometry::RealPoint2D const&)
basegfx::unotools::b2DRectangleFromRealRectangle2D(com::sun::star::geometry::RealRectangle2D const&)
basegfx::unotools::b2DSurroundingIntegerRangeFromB2DRange(basegfx::B2DRange const&)
basegfx::unotools::b2IRectangleFromIntegerRectangle2D(com::sun::star::geometry::IntegerRectangle2D const&)
basegfx::unotools::b3DRectangleFromRealRectangle3D(com::sun::star::geometry::RealRectangle3D const&)
basegfx::unotools::bezierSequenceSequenceFromB2DPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::unotools::homMatrixFromAffineMatrix3D(com::sun::star::geometry::AffineMatrix3D const&)
basegfx::unotools::point2DFromB2DPoint(basegfx::B2DPoint const&)
basegfx::unotools::pointSequenceSequenceFromB2DPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::unotools::polygonFromBezier2DSequence(com::sun::star::uno::Sequence<com::sun::star::geometry::RealBezierSegment2D> const&)
basegfx::unotools::polygonFromPoint2DSequence(com::sun::star::uno::Sequence<com::sun::star::geometry::RealPoint2D> const&)
basegfx::unotools::rectangle2DFromB2DRectangle(basegfx::B2DRange const&)
basegfx::unotools::rectangle3DFromB3DRectangle(basegfx::B3DRange const&)
basegfx::unotools::size2DFromB2DSize(basegfx::B2DVector const&)
basegfx::unotools::xPolyPolygonFromB2DPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, basegfx::B2DPolygon const&)
basegfx::utils::B2DClipState::B2DClipState()
basegfx::utils::B2DClipState::B2DClipState(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DClipState::B2DClipState(basegfx::utils::B2DClipState const&)
basegfx::utils::B2DClipState::B2DClipState(basegfx::utils::B2DClipState&&)
basegfx::utils::B2DClipState::operator!=(basegfx::utils::B2DClipState const&) const
basegfx::utils::B2DClipState::operator=(basegfx::utils::B2DClipState const&)
basegfx::utils::B2DClipState::operator=(basegfx::utils::B2DClipState&&)
basegfx::utils::B2DClipState::operator==(basegfx::utils::B2DClipState const&) const
basegfx::utils::B2DClipState::subtractPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DClipState::transform(basegfx::B2DHomMatrix const&)
basegfx::utils::B2DClipState::unionPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DClipState::xorPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DClipState::~B2DClipState()
basegfx::utils::B2DPolygonToUnoPointSequence(basegfx::B2DPolygon const&, com::sun::star::uno::Sequence<com::sun::star::awt::Point>&)
basegfx::utils::B3DPolyPolygonToUnoPolyPolygonShape3D(basegfx::B3DPolyPolygon const&, com::sun::star::drawing::PolyPolygonShape3D&)
basegfx::utils::KeyStopLerp::KeyStopLerp(com::sun::star::uno::Sequence<double> const&)
basegfx::utils::KeyStopLerp::KeyStopLerp(std::vector<double, std::allocator<double> >&&)
basegfx::utils::UnoPointSequenceToB2DPolygon(com::sun::star::uno::Sequence<com::sun::star::awt::Point> const&)
basegfx::utils::UnoPolyPolygonShape3DToB3DPolyPolygon(com::sun::star::drawing::PolyPolygonShape3D const&)
basegfx::utils::adaptiveSubdivideByDistance(basegfx::B2DPolyPolygon const&, double)
basegfx::utils::adaptiveSubdivideByDistance(basegfx::B2DPolygon const&, double)
basegfx::utils::addPointsAtCuts(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::utils::addPointsAtCuts(basegfx::B2DPolygon const&, basegfx::B2DPolyPolygon const&)
basegfx::utils::addPointsAtCutsAndTouches(basegfx::B2DPolyPolygon const&)
basegfx::utils::addPointsAtCutsAndTouches(basegfx::B2DPolygon const&)
basegfx::utils::addTriangleFan(basegfx::B2DPolygon const&, std::vector<basegfx::triangulator::B2DTriangle, std::allocator<basegfx::triangulator::B2DTriangle> >&)
basegfx::utils::applyDefaultNormalsSphere(basegfx::B3DPolyPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::applyDefaultNormalsSphere(basegfx::B3DPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::applyDefaultTextureCoordinatesParallel(basegfx::B3DPolyPolygon const&, basegfx::B3DRange const&, bool, bool)
basegfx::utils::applyDefaultTextureCoordinatesParallel(basegfx::B3DPolygon const&, basegfx::B3DRange const&, bool, bool)
basegfx::utils::applyDefaultTextureCoordinatesSphere(basegfx::B3DPolyPolygon const&, basegfx::B3DPoint const&, bool, bool)
basegfx::utils::applyDefaultTextureCoordinatesSphere(basegfx::B3DPolygon const&, basegfx::B3DPoint const&, bool, bool)
basegfx::utils::applyLineDashing(basegfx::B3DPolygon const&, std::vector<double, std::allocator<double> > const&, basegfx::B3DPolyPolygon*, double)
basegfx::utils::applyLineDashing(basegfx::B3DPolygon const&, std::vector<double, std::allocator<double> > const&, std::function<void (basegfx::B3DPolygon const&)>, double)
basegfx::utils::arePointsOnSameSideOfLine(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool)
basegfx::utils::clipPolyPolygonOnParallelAxis(basegfx::B2DPolyPolygon const&, bool, bool, double, bool)
basegfx::utils::clipPolygonOnParallelAxis(basegfx::B2DPolygon const&, bool, bool, double, bool)
basegfx::utils::clipPolygonOnRange(basegfx::B2DPolygon const&, basegfx::B2DRange const&, bool, bool)
basegfx::utils::clipTriangleListOnRange(basegfx::B2DPolygon const&, basegfx::B2DRange const&)
basegfx::utils::correctOutmostPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::createAreaGeometryForLineStartEnd(basegfx::B2DPolygon const&, basegfx::B2DPolyPolygon const&, bool, double, double, double, double*, double)
basegfx::utils::createAxialODFGradientInfo(basegfx::B2DRange const&, unsigned int, double, double)
basegfx::utils::createB2DPolygonFromB3DPolygon(basegfx::B3DPolygon const&, basegfx::B3DHomMatrix const&)
basegfx::utils::createB3DPolygonFromB2DPolygon(basegfx::B2DPolygon const&, double)
basegfx::utils::createCubeFillPolyPolygonFromB3DRange(basegfx::B3DRange const&)
basegfx::utils::createEdgesOfGivenLength(basegfx::B2DPolygon const&, double, double, double)
basegfx::utils::createEllipticalODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double, double)
basegfx::utils::createLineTrapezoidFromB2DPolygon(std::vector<basegfx::B2DTrapezoid, std::allocator<basegfx::B2DTrapezoid> >&, basegfx::B2DPolygon const&, double)
basegfx::utils::createLineTrapezoidFromEdge(std::vector<basegfx::B2DTrapezoid, std::allocator<basegfx::B2DTrapezoid> >&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, double)
basegfx::utils::createLinearODFGradientInfo(basegfx::B2DRange const&, unsigned int, double, double)
basegfx::utils::createRadialODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double)
basegfx::utils::createRectangularODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double, double)
basegfx::utils::createRotateAroundCenterKeepAspectRatioStayInsideRange(basegfx::B2DRange const&, double)
basegfx::utils::createSinCosOrthogonal(double&, double&, double)
basegfx::utils::createSphereFillPolyPolygonFromB3DRange(basegfx::B3DRange const&, unsigned int, unsigned int, bool, double, double, double, double)
basegfx::utils::createSpherePolyPolygonFromB3DRange(basegfx::B3DRange const&, unsigned int, unsigned int, double, double, double, double)
basegfx::utils::createSquareODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double, double)
basegfx::utils::createUnitCubeFillPolyPolygon()
basegfx::utils::createUnitCubePolyPolygon()
basegfx::utils::createUnitSphereFillPolyPolygon(unsigned int, unsigned int, bool, double, double, double, double)
basegfx::utils::createUnitSpherePolyPolygon(unsigned int, unsigned int, double, double, double, double)
basegfx::utils::createWaveline(basegfx::B2DPolygon const&, double, double)
basegfx::utils::distort(basegfx::B2DPoint const&, basegfx::B2DRange const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::utils::distort(basegfx::B2DPolygon const&, basegfx::B2DRange const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::utils::exportToSvgPoints(basegfx::B2DPolygon const&)
basegfx::utils::getArea(basegfx::B2DPolyPolygon const&)
basegfx::utils::getArea(basegfx::B2DPolygon const&)
basegfx::utils::getAxialGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getCutBetweenLineAndPlane(basegfx::B3DVector const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, double&)
basegfx::utils::getEdgeLength(basegfx::B2DPolygon const&, unsigned int)
basegfx::utils::getEllipticalGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getIndexOfPredecessor(unsigned int, basegfx::B2DPolygon const&)
basegfx::utils::getIndexOfSuccessor(unsigned int, basegfx::B2DPolygon const&)
basegfx::utils::getIndexOfSuccessor(unsigned int, basegfx::B3DPolygon const&)
basegfx::utils::getLength(basegfx::B3DPolygon const&)
basegfx::utils::getLinearGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getOrientationForIndex(basegfx::B2DPolygon const&, unsigned int)
basegfx::utils::getRadialGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getRectangularGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getSignedArea(basegfx::B2DPolyPolygon const&)
basegfx::utils::getSignedArea(basegfx::B2DPolygon const&)
basegfx::utils::getSmallestDistancePointToEdge(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, double&)
basegfx::utils::getSmallestDistancePointToPolygon(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, unsigned int&, double&)
basegfx::utils::getSnippetAbsolute(basegfx::B2DPolygon const&, double, double, double)
basegfx::utils::getSquareGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::growInNormalDirection(basegfx::B2DPolygon const&, double)
basegfx::utils::hasNeutralPoints(basegfx::B2DPolygon const&)
basegfx::utils::infiniteLineFromParallelogram(basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DRange const&)
basegfx::utils::interpolate(basegfx::B2DPolyPolygon const&, basegfx::B2DPolyPolygon const&, double)
basegfx::utils::interpolate(basegfx::B2DPolygon const&, basegfx::B2DPolygon const&, double)
basegfx::utils::invertNormals(basegfx::B3DPolyPolygon const&)
basegfx::utils::invertNormals(basegfx::B3DPolygon const&)
basegfx::utils::isConvex(basegfx::B2DPolygon const&)
basegfx::utils::isInEpsilonRange(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, double)
basegfx::utils::isInEpsilonRange(basegfx::B2DPolyPolygon const&, basegfx::B2DPoint const&, double)
basegfx::utils::isInEpsilonRange(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, double)
basegfx::utils::isInside(basegfx::B2DPolyPolygon const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isInside(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isInside(basegfx::B2DPolygon const&, basegfx::B2DPolygon const&, bool)
basegfx::utils::isInside(basegfx::B3DPolyPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::isInside(basegfx::B3DPolygon const&, basegfx::B3DPoint const&, bool)
basegfx::utils::isPointInTriangle(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isPointOnEdge(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DVector const&, double*)
basegfx::utils::isPointOnLine(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isPointOnLine(basegfx::B3DPoint const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, bool)
basegfx::utils::isPointOnPolygon(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isPointOnPolygon(basegfx::B3DPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::number2PolyPolygon(double, int, int, bool)
basegfx::utils::reSegmentPolyPolygon(basegfx::B2DPolyPolygon const&, unsigned int)
basegfx::utils::reSegmentPolygon(basegfx::B2DPolygon const&, unsigned int)
basegfx::utils::simplifyCurveSegments(basegfx::B2DPolygon const&)
basegfx::utils::snapPointsOfHorizontalOrVerticalEdges(basegfx::B2DPolygon const&)
basegfx::utils::snapPointsOfHorizontalOrVerticalEdges(basegfx::B3DPolygon const&)
basegfx::utils::solveCrossovers(basegfx::B2DPolygon const&)
basegfx::utils::solveCrossovers(std::vector<basegfx::B2DRange, std::allocator<basegfx::B2DRange> > const&, std::vector<basegfx::B2VectorOrientation, std::allocator<basegfx::B2VectorOrientation> > const&)
basic::BasicManagerRepository::getApplicationBasicManager()
basic::BasicManagerRepository::getDocumentBasicManager(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
basic::BasicManagerRepository::resetApplicationBasicManager()
basic::vba::enableContainerWindowsOfAllDocuments(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, bool)
basic::vba::lockControllersOfAllDocuments(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, bool)
basic::vba::registerCurrentDirectory(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&)
basicide_choose_macro
basicide_handle_basic_error
basicide_macro_organizer
bb_better
bimprove
bin_count
blockWriteAMAT
blockWriteBMAT
blockWriteBOOL
blockWriteINT
blockWriteLREAL
blockWriteREAL
bsolve
bsolve_xA2
btran
canvas::CachedPrimitiveBase::CachedPrimitiveBase(com::sun::star::rendering::ViewState const&, com::sun::star::uno::Reference<com::sun::star::rendering::XCanvas> const&)
canvas::CachedPrimitiveBase::~CachedPrimitiveBase()
canvas::CanvasCustomSpriteHelper::CanvasCustomSpriteHelper()
canvas::CanvasCustomSpriteHelper::getUpdateArea(basegfx::B2DRange const&) const
canvas::CanvasCustomSpriteHelper::updateClipState(rtl::Reference<canvas::Sprite> const&)
canvas::ParametricPolyPolygon::ParametricPolyPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, basegfx::B2DPolygon const&, canvas::ParametricPolyPolygon::GradientType, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&, double)
canvas::ParametricPolyPolygon::ParametricPolyPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, canvas::ParametricPolyPolygon::GradientType, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&)
canvas::ParametricPolyPolygon::createEllipticalGradient(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&, double)
canvas::ParametricPolyPolygon::createLinearHorizontalGradient(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&)
canvas::ParametricPolyPolygon::createRectangularGradient(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&, double)
canvas::ParametricPolyPolygon::disposing()
canvas::ParametricPolyPolygon::getColor(double)
canvas::ParametricPolyPolygon::getColorSpace()
canvas::ParametricPolyPolygon::getImplementationName()
canvas::ParametricPolyPolygon::getOutline(double)
canvas::ParametricPolyPolygon::getPointColor(com::sun::star::geometry::RealPoint2D const&)
canvas::ParametricPolyPolygon::getSupportedServiceNames()
canvas::ParametricPolyPolygon::supportsService(rtl::OUString const&)
canvas::ParametricPolyPolygon::~ParametricPolyPolygon()
canvas::PropertySetHelper::PropertySetHelper()
canvas::PropertySetHelper::isPropertyName(rtl::OUString const&) const
canvas::SpriteRedrawManager::SpriteRedrawManager()
canvas::SpriteRedrawManager::isAreaUpdateNotOpaque(basegfx::B2DRange const&, std::pair<basegfx::B2DRange, canvas::SpriteRedrawManager::SpriteInfo> const&) const
canvas::createSurfaceProxyManager(std::shared_ptr<canvas::IRenderModule> const&)
canvas::tools::ElapsedTime::ElapsedTime()
canvas::tools::ElapsedTime::ElapsedTime(std::shared_ptr<canvas::tools::ElapsedTime> const&)
canvas::tools::ElapsedTime::getCurrentTime() const
canvas::tools::ElapsedTime::getElapsedTimeImpl() const
canvas::tools::ElapsedTime::getSystemTime()
canvas::tools::appendToRenderState(com::sun::star::rendering::RenderState&, basegfx::B2DHomMatrix const&)
canvas::tools::calcGradientStepCount(basegfx::B2DHomMatrix&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::rendering::Texture const&, int)
canvas::tools::calcRectToOriginTransform(basegfx::B2DHomMatrix&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
canvas::tools::colorToStdIntSequence(Color const&)
canvas::tools::extractExtraFontProperties(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, unsigned int&)
canvas::tools::getBoundMarksPolyPolygon(basegfx::B2DRange const&)
canvas::tools::getRenderStateTransform(basegfx::B2DHomMatrix&, com::sun::star::rendering::RenderState const&)
canvas::tools::getStdColorSpace()
canvas::tools::getStdColorSpaceWithoutAlpha()
canvas::tools::getStdMemoryLayout(com::sun::star::geometry::IntegerSize2D const&)
canvas::tools::getViewStateTransform(basegfx::B2DHomMatrix&, com::sun::star::rendering::ViewState const&)
canvas::tools::isInside(basegfx::B2DRange const&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
canvas::tools::prependToRenderState(com::sun::star::rendering::RenderState&, basegfx::B2DHomMatrix const&)
canvas::tools::setIdentityMatrix2D(com::sun::star::geometry::Matrix2D&)
canvas::tools::setViewStateTransform(com::sun::star::rendering::ViewState&, basegfx::B2DHomMatrix const&)
chart::AddPointToPoly(com::sun::star::drawing::PolyPolygonShape3D&, com::sun::star::drawing::Position3D const&, int)
chart::AxisHelper::checkDateAxis(com::sun::star::chart2::ScaleData&, chart::ExplicitCategoriesProvider*, bool)
chart::AxisHelper::createAxis(int, int, com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, chart::ReferenceSizeProvider*)
chart::AxisHelper::createDefaultScale()
chart::AxisHelper::getDateCheckedScale(com::sun::star::uno::Reference<com::sun::star::chart2::XAxis> const&, chart::ChartModel&)
chart::AxisHelper::getDimensionIndexOfAxis(com::sun::star::uno::Reference<com::sun::star::chart2::XAxis> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
chart::AxisHelper::getExplicitNumberFormatKeyForAxis(com::sun::star::uno::Reference<com::sun::star::chart2::XAxis> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, bool)
chart::AxisHelper::isSecondaryYAxisNeeded(com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&)
chart::AxisHelper::removeExplicitScaling(com::sun::star::chart2::ScaleData&)
chart::AxisHelper::shouldAxisBeDisplayed(com::sun::star::uno::Reference<com::sun::star::chart2::XAxis> const&, com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&)
chart::B2DHomMatrixToHomogenMatrix3(basegfx::B2DHomMatrix const&)
chart::B3DHomMatrixToHomogenMatrix(basegfx::B3DHomMatrix const&)
chart::B3DPointToPosition3D(basegfx::B3DPoint const&)
chart::B3DPointToSequence(basegfx::B3DPoint const&)
chart::BaseGFXHelper::B2IRectangleToAWTPoint(basegfx::B2IRange const&)
chart::BaseGFXHelper::B2IRectangleToAWTSize(basegfx::B2IRange const&)
chart::BaseGFXHelper::GetScaleFromMatrix(basegfx::B3DHomMatrix const&)
chart::BaseGFXHelper::getBoundVolume(com::sun::star::drawing::PolyPolygonShape3D const&)
chart::BaseGFXHelper::makeRectangle(com::sun::star::awt::Point const&, com::sun::star::awt::Size const&)
chart::BaseGFXHelper::makeRectangle(com::sun::star::awt::Rectangle const&)
chart::BezierToPoly(com::sun::star::drawing::PolyPolygonBezierCoords const&)
chart::CharacterProperties::AddDefaultsToMap(std::unordered_map<int, com::sun::star::uno::Any, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, com::sun::star::uno::Any> > >&)
chart::ChartModel::ChartModel(chart::ChartModel const&)
chart::ChartModel::ChartModel(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::ChartModel::addCloseListener(com::sun::star::uno::Reference<com::sun::star::util::XCloseListener> const&)
chart::ChartModel::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
chart::ChartModel::addModifyListener(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
chart::ChartModel::addStorageChangeListener(com::sun::star::uno::Reference<com::sun::star::document::XStorageChangeListener> const&)
chart::ChartModel::attachDataProvider(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataProvider> const&)
chart::ChartModel::attachNumberFormatsSupplier(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
chart::ChartModel::attachResource(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::close(unsigned char)
chart::ChartModel::connectController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
chart::ChartModel::createClone()
chart::ChartModel::createDefaultChart()
chart::ChartModel::createInstance(rtl::OUString const&)
chart::ChartModel::createInstanceWithArguments(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
chart::ChartModel::createInternalDataProvider(unsigned char)
chart::ChartModel::disconnectController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
chart::ChartModel::dispose()
chart::ChartModel::disposing(com::sun::star::lang::EventObject const&)
chart::ChartModel::dump()
chart::ChartModel::dumpAsXml(_xmlTextWriter*) const
chart::ChartModel::getArgs()
chart::ChartModel::getAvailableServiceNames()
chart::ChartModel::getChartTypeManager()
chart::ChartModel::getCurrentController()
chart::ChartModel::getCurrentSelection()
chart::ChartModel::getDataProvider()
chart::ChartModel::getDataSequences()
chart::ChartModel::getDocumentProperties()
chart::ChartModel::getDocumentStorage()
chart::ChartModel::getFirstDiagram()
chart::ChartModel::getImplementationName()
chart::ChartModel::getLocation()
chart::ChartModel::getMapUnit(long)
chart::ChartModel::getNumberFormatSettings()
chart::ChartModel::getNumberFormats()
chart::ChartModel::getNumberFormatsSupplier()
chart::ChartModel::getPageBackground()
chart::ChartModel::getParent()
chart::ChartModel::getPopupRequest()
chart::ChartModel::getPreferredVisualRepresentation(long)
chart::ChartModel::getRangeHighlighter()
chart::ChartModel::getSomething(com::sun::star::uno::Sequence<signed char> const&)
chart::ChartModel::getSupportedServiceNames()
chart::ChartModel::getTitleObject()
chart::ChartModel::getTransferData(com::sun::star::datatransfer::DataFlavor const&)
chart::ChartModel::getTransferDataFlavors()
chart::ChartModel::getTypes()
chart::ChartModel::getURL()
chart::ChartModel::getUndoManager()
chart::ChartModel::getUsedData()
chart::ChartModel::getUsedRangeRepresentations()
chart::ChartModel::getVisualAreaSize(long)
chart::ChartModel::hasControllersLocked()
chart::ChartModel::hasInternalDataProvider()
chart::ChartModel::hasLocation()
chart::ChartModel::impl_adjustAdditionalShapesPositionAndSize(com::sun::star::awt::Size const&)
chart::ChartModel::impl_createDefaultChartTypeTemplate()
chart::ChartModel::impl_createDefaultData()
chart::ChartModel::impl_createFilter(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::impl_g_getLocation()
chart::ChartModel::impl_getCurrentController()
chart::ChartModel::impl_isControllerConnected(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
chart::ChartModel::impl_load(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
chart::ChartModel::impl_loadGraphics(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
chart::ChartModel::impl_notifyCloseListeners()
chart::ChartModel::impl_notifyModifiedListeners()
chart::ChartModel::impl_notifyStorageChangeListeners()
chart::ChartModel::impl_store(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
chart::ChartModel::initNew()
chart::ChartModel::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
chart::ChartModel::insertDefaultChart()
chart::ChartModel::isDataFlavorSupported(com::sun::star::datatransfer::DataFlavor const&)
chart::ChartModel::isModified()
chart::ChartModel::isReadonly()
chart::ChartModel::load(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::loadFromStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::lockControllers()
chart::ChartModel::modified(com::sun::star::lang::EventObject const&)
chart::ChartModel::queryInterface(com::sun::star::uno::Type const&)
chart::ChartModel::removeCloseListener(com::sun::star::uno::Reference<com::sun::star::util::XCloseListener> const&)
chart::ChartModel::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
chart::ChartModel::removeModifyListener(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
chart::ChartModel::removeStorageChangeListener(com::sun::star::uno::Reference<com::sun::star::document::XStorageChangeListener> const&)
chart::ChartModel::setArguments(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::setChartTypeManager(com::sun::star::uno::Reference<com::sun::star::chart2::XChartTypeManager> const&)
chart::ChartModel::setCurrentController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
chart::ChartModel::setFirstDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
chart::ChartModel::setModified(unsigned char)
chart::ChartModel::setParent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
chart::ChartModel::setTitleObject(com::sun::star::uno::Reference<com::sun::star::chart2::XTitle> const&)
chart::ChartModel::setVisualAreaSize(long, com::sun::star::awt::Size const&)
chart::ChartModel::store()
chart::ChartModel::storeAsURL(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::storeSelf(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::storeToStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::storeToURL(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
chart::ChartModel::supportsService(rtl::OUString const&)
chart::ChartModel::switchToStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
chart::ChartModel::unlockControllers()
chart::ChartModel::update()
chart::ChartModel::~ChartModel()
chart::ChartModelHelper::createRangeHighlighter(com::sun::star::uno::Reference<com::sun::star::view::XSelectionSupplier> const&)
chart::ChartModelHelper::getDefaultPageSize()
chart::ChartModelHelper::getFirstCoordinateSystem(chart::ChartModel&)
chart::ChartTypeHelper::getRoleOfSequenceForYAxisNumberFormatDetection(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::ChartTypeHelper::isSeriesInFrontOfAxisLine(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::ChartTypeHelper::isSupportingComplexCategory(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::ChartTypeHelper::isSupportingOnlyDeepStackingFor3D(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::ChartTypeHelper::shiftCategoryPosAtXAxisPerDefault(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
chart::ControllerLockGuardUNO::ControllerLockGuardUNO(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
chart::ControllerLockGuardUNO::~ControllerLockGuardUNO()
chart::ControllerLockHelper::ControllerLockHelper(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
chart::ControllerLockHelper::~ControllerLockHelper()
chart::ControllerLockHelperGuard::ControllerLockHelperGuard(chart::ControllerLockHelper&)
chart::ControllerLockHelperGuard::~ControllerLockHelperGuard()
chart::DataSequenceToStringSequence(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&)
chart::DataSeriesHelper::getAllDataSequencesByRole(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::data::XLabeledDataSequence> > const&, rtl::OUString const&)
chart::DataSeriesHelper::getDataSource(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> > const&)
chart::DataSeriesHelper::getLabelForLabeledDataSequence(com::sun::star::uno::Reference<com::sun::star::chart2::data::XLabeledDataSequence> const&)
chart::DataSeriesHelper::hasUnhiddenData(com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> const&)
chart::DataSeriesHelper::makeLinesThickOrThin(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
chart::DataSeriesHelper::setStackModeAtSeries(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> > const&, com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, chart::StackMode)
chart::DataSeriesHelper::switchLinesOnOrOff(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
chart::DataSeriesHelper::switchSymbolsOnOrOff(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, int)
chart::DataSeriesHelper::translateIndexFromHiddenToFullSequence(int, com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&, bool)
chart::DataSourceHelper::createDataSource(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::data::XLabeledDataSequence> > const&)
chart::DataSourceHelper::getUsedData(chart::ChartModel&)
chart::DataSourceHelper::getUsedData(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
chart::DataSourceHelper::getUsedDataRanges(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
chart::DiagramHelper::getDataSeriesGroups(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
chart::DiagramHelper::getDateNumberFormat(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
chart::DiagramHelper::getPercentNumberFormat(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
chart::DiagramHelper::getStackModeFromChartType(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&, bool&, bool&, com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&)
chart::DiagramHelper::isDateNumberFormat(int, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormats> const&)
chart::DiagramHelper::isSupportingDateAxis(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
chart::Direction3DToAWTSize(com::sun::star::drawing::Direction3D const&)
chart::DrawModelWrapper::dumpAsXml(_xmlTextWriter*) const
chart::DrawModelWrapper::removeShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
chart::ErrorBar::ErrorBar()
chart::ExplicitCategoriesProvider::ExplicitCategoriesProvider(com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, chart::ChartModel&)
chart::ExplicitCategoriesProvider::convertCategoryAnysToText(com::sun::star::uno::Sequence<rtl::OUString>&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, chart::ChartModel&)
chart::ExplicitCategoriesProvider::getCategoriesByLevel(int)
chart::ExplicitCategoriesProvider::getCategoryLevelCount() const
chart::ExplicitCategoriesProvider::getDateCategories()
chart::ExplicitCategoriesProvider::getExplicitSimpleCategories(chart::SplitCategoriesProvider const&)
chart::ExplicitCategoriesProvider::getOriginalCategories()
chart::ExplicitCategoriesProvider::getSimpleCategories()
chart::ExplicitCategoriesProvider::init()
chart::ExplicitCategoriesProvider::isDateAxis()
chart::ExplicitCategoriesProvider::~ExplicitCategoriesProvider()
chart::ExplicitIncrementData::ExplicitIncrementData()
chart::ExplicitScaleData::ExplicitScaleData()
chart::HomogenMatrixToB3DHomMatrix(com::sun::star::drawing::HomogenMatrix const&)
chart::IgnoreZ(basegfx::B3DHomMatrix const&)
chart::ModifyListenerCallBack::ModifyListenerCallBack(Link<void*, void> const&)
chart::ModifyListenerCallBack::~ModifyListenerCallBack()
chart::NumberFormatterWrapper::NumberFormatterWrapper(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
chart::NumberFormatterWrapper::getNullDate() const
chart::NumberFormatterWrapper::~NumberFormatterWrapper()
chart::ObjectIdentifier::ObjectIdentifier()
chart::ObjectIdentifier::ObjectIdentifier(com::sun::star::uno::Any const&)
chart::ObjectIdentifier::ObjectIdentifier(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
chart::ObjectIdentifier::ObjectIdentifier(rtl::OUString const&)
chart::ObjectIdentifier::addChildParticle(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
chart::ObjectIdentifier::createChildParticleWithIndex(chart::ObjectType, int)
chart::ObjectIdentifier::createParticleForAxis(int, int)
chart::ObjectIdentifier::createParticleForCoordinateSystem(com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, chart::ChartModel&)
chart::ObjectIdentifier::createParticleForCoordinateSystem(com::sun::star::uno::Reference<com::sun::star::chart2::XCoordinateSystem> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
chart::ObjectIdentifier::createParticleForGrid(int, int)
chart::ObjectIdentifier::createParticleForLegend(chart::ChartModel&)
chart::ObjectIdentifier::createPieSegmentDragParameterString(int, com::sun::star::awt::Point const&, com::sun::star::awt::Point const&)
chart::ObjectIdentifier::createSeriesSubObjectStub(chart::ObjectType, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
chart::PolyToPointSequence(com::sun::star::drawing::PolyPolygonShape3D const&)
chart::PopupRequest::PopupRequest()
chart::PopupRequest::addCallback(com::sun::star::uno::Reference<com::sun::star::awt::XCallback> const&, com::sun::star::uno::Any const&)
chart::PopupRequest::disposing()
chart::PopupRequest::~PopupRequest()
chart::Position3DToAWTPoint(com::sun::star::drawing::Position3D const&)
chart::Position3DToB3DPoint(com::sun::star::drawing::Position3D const&)
chart::Position3DToSequence(com::sun::star::drawing::Position3D const&)
chart::PropertyHelper::setEmptyPropertyValueDefault(std::unordered_map<int, com::sun::star::uno::Any, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, com::sun::star::uno::Any> > >&, int)
chart::PropertyHelper::setPropertyValueAny(std::unordered_map<int, com::sun::star::uno::Any, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, com::sun::star::uno::Any> > >&, int, com::sun::star::uno::Any const&)
chart::PropertyHelper::setPropertyValueDefaultAny(std::unordered_map<int, com::sun::star::uno::Any, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, com::sun::star::uno::Any> > >&, int, com::sun::star::uno::Any const&)
chart::ReferenceSizeProvider::ReferenceSizeProvider(com::sun::star::awt::Size, com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
chart::RegressionCurveHelper::createRegressionCurveCalculatorByServiceName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
chart::RegressionCurveHelper::getRegressionCurveGenericName(com::sun::star::uno::Reference<com::sun::star::chart2::XRegressionCurve> const&)
chart::RegressionCurveHelper::getRegressionCurveSpecificName(com::sun::star::uno::Reference<com::sun::star::chart2::XRegressionCurve> const&)
chart::RegressionCurveHelper::getUINameForRegressionCurve(com::sun::star::uno::Reference<com::sun::star::chart2::XRegressionCurve> const&)
chart::RelativePositionHelper::getCenterOfAnchoredObject(com::sun::star::awt::Point, com::sun::star::awt::Size, com::sun::star::drawing::Alignment, double)
chart::RelativePositionHelper::getUpperLeftCornerOfAnchoredObject(com::sun::star::awt::Point, com::sun::star::awt::Size, com::sun::star::drawing::Alignment)
chart::RelativeSizeHelper::adaptFontSizes(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::awt::Size const&, com::sun::star::awt::Size const&)
chart::SceneProperties::AddDefaultsToMap(std::unordered_map<int, com::sun::star::uno::Any, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, com::sun::star::uno::Any> > >&)
chart::SequenceToPosition3D(com::sun::star::uno::Sequence<double> const&)
chart::StatisticsHelper::getErrorFromDataSource(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSource> const&, int, bool, bool)
chart::StatisticsHelper::getStandardDeviation(com::sun::star::uno::Sequence<double> const&)
chart::StatisticsHelper::getStandardError(com::sun::star::uno::Sequence<double> const&)
chart::StatisticsHelper::getVariance(com::sun::star::uno::Sequence<double> const&)
chart::ThreeDHelper::CameraDistanceToPerspective(double)
chart::ThreeDHelper::PerspectiveToCameraDistance(double)
chart::ThreeDHelper::getAutomaticCuboidPlanePositionForStandardBackWall(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
chart::ThreeDHelper::getAutomaticCuboidPlanePositionForStandardBottom(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
chart::ThreeDHelper::getAutomaticCuboidPlanePositionForStandardLeftWall(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
chart::ThreeDHelper::getCameraDistance(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
chart::ThreeDHelper::getDefaultCameraGeometry(bool)
chart::ThreeDHelper::setCameraDistance(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, double)
chart::ThreeDHelper::setDefaultIllumination(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
chart::ThreeDHelper::setDefaultRotation(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
chart::ThreeDHelper::setDefaultRotation(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
chart::TitleHelper::getTitle(chart::TitleHelper::eTitleType, chart::ChartModel&)
chart::TitleHelper::getTitleType(chart::TitleHelper::eTitleType&, com::sun::star::uno::Reference<com::sun::star::chart2::XTitle> const&, chart::ChartModel&)
chart::WrappedDefaultProperty::~WrappedDefaultProperty()
chart::WrappedDirectStateProperty::~WrappedDirectStateProperty()
chart::WrappedIgnoreProperty::WrappedIgnoreProperty(rtl::OUString const&, com::sun::star::uno::Any const&)
chart::WrappedIgnoreProperty::~WrappedIgnoreProperty()
chart::WrappedProperty::~WrappedProperty()
chart::WrappedPropertySet::WrappedPropertySet()
chart::WrappedPropertySet::~WrappedPropertySet()
chart::addPolygon(com::sun::star::drawing::PolyPolygonShape3D&, com::sun::star::drawing::PolyPolygonShape3D const&)
chart::appendPointSequence(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::awt::Point> >&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::awt::Point> >&)
chart::appendPoly(com::sun::star::drawing::PolyPolygonShape3D&, com::sun::star::drawing::PolyPolygonShape3D const&)
chart::createConfigColorScheme(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::createNameContainer(com::sun::star::uno::Type const&, rtl::OUString const&, rtl::OUString const&)
chart::getPointFromPoly(com::sun::star::drawing::PolyPolygonShape3D const&, int, int)
chart::operator+(com::sun::star::drawing::Position3D const&, com::sun::star::drawing::Direction3D const&)
chart::operator-(com::sun::star::drawing::Position3D const&, com::sun::star::drawing::Position3D const&)
check_degeneracy
check_if_less
check_int_sec_sos_free_decl
check_solution
chsign_bounds
cl_isalnum(unsigned long)
cl_isdigit(unsigned long)
cl_isletter(unsigned long)
cl_isspace(unsigned long)
cl_tcscasefold(wchar_t*, int)
cl_tcscasefoldcmp(wchar_t const*, wchar_t const*)
cl_tolower(wchar_t)
cl_toupper(wchar_t)
clean_SOSgroup
clean_realloc
clearRange(ScDocument*, ScRange const&)
clearSheet(ScDocument*, short)
clear_action
clear_artificials
clewErrorString
cloneINT
cloneLink
cloneMYBOOL
cloneREAL
colamd
colamd_recommended
colamd_report
colamd_set_defaults
coldual
collectMinorVar
colprim
column_in_lp
com_sun_star_comp_MemoryStream
com_sun_star_comp_SequenceInputStreamService
com_sun_star_comp_SequenceOutputStreamService
com_sun_star_comp_Xmloff_AnimationsImport
com_sun_star_comp_comphelper_OPropertyBag
com_sun_star_comp_dba_DataAccessDescriptorFactory
com_sun_star_comp_dba_OCommandDefinition
com_sun_star_comp_dba_OComponentDefinition
com_sun_star_comp_dba_ODatabaseDocument
com_sun_star_comp_dba_ODatabaseSource
com_sun_star_comp_embed_InstanceLocker
com_sun_star_comp_embed_OLESimpleStorage
com_sun_star_comp_extensions_ConsoleHandler
com_sun_star_comp_extensions_CsvFormatter
com_sun_star_comp_extensions_FileHandler
com_sun_star_comp_extensions_LoggerPool
com_sun_star_comp_extensions_PlainTextFormatter
com_sun_star_comp_extensions_SimpleTextFormatter
com_sun_star_comp_rendering_SimpleCanvas
com_sun_star_comp_task_OfficeRestartManager
com_sun_star_comp_util_OfficeInstallationDirectories
com_sun_star_comp_xmlscript_XMLBasicExporter
com_sun_star_comp_xmlscript_XMLOasisBasicExporter
compAggregate
compRedundant
compSparsity
comp_bits
compareBoundFlipVar
compareCHAR
compareINT
compareImprovementQS
compareImprovementVar
compareLink
compareREAL
compareSubstitutionQS
compareSubstitutionVar
compare_basis
comphelper::AnyEvent::AnyEvent()
comphelper::AnyEvent::~AnyEvent()
comphelper::AsyncEventNotifier::AsyncEventNotifier(char const*)
comphelper::AsyncEventNotifier::terminate()
comphelper::AsyncEventNotifierAutoJoin::terminate()
comphelper::AsyncEventNotifierBase::AsyncEventNotifierBase()
comphelper::AsyncEventNotifierBase::terminate()
comphelper::AttributeList::AttributeList()
comphelper::AttributeList::AttributeList(comphelper::AttributeList const&)
comphelper::AttributeList::createClone()
comphelper::AttributeList::getTypeByName(rtl::OUString const&)
comphelper::AttributeList::getValueByName(rtl::OUString const&)
comphelper::AttributeList::~AttributeList()
comphelper::Automation::AutomationInvokedZone::AutomationInvokedZone()
comphelper::Automation::AutomationInvokedZone::~AutomationInvokedZone()
comphelper::BackupFileHelper::BackupFileHelper()
comphelper::BackupFileHelper::fillDirFileInfo()
comphelper::BackupFileHelper::getCustomizationDirNames()
comphelper::BackupFileHelper::getCustomizationFileNames()
comphelper::BackupFileHelper::getInitialBaseURL()
comphelper::BackupFileHelper::getPackURL()
comphelper::BackupFileHelper::getSafeModeName()
comphelper::BackupFileHelper::getUserProfileWorkURL()
comphelper::BackupFileHelper::isPopPossible()
comphelper::BackupFileHelper::isPopPossibleExtensionInfo() const
comphelper::BackupFileHelper::isPopPossible_extensionInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::isPopPossible_file(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::isPopPossible_files(std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::isTryDeinstallUserExtensionsPossible()
comphelper::BackupFileHelper::isTryDisableAllExtensionsPossible()
comphelper::BackupFileHelper::isTryResetBundledExtensionsPossible()
comphelper::BackupFileHelper::isTryResetCustomizationsPossible()
comphelper::BackupFileHelper::isTryResetSharedExtensionsPossible()
comphelper::BackupFileHelper::tryDeinstallUserExtensions()
comphelper::BackupFileHelper::tryDisableAllExtensions()
comphelper::BackupFileHelper::tryDisableHWAcceleration()
comphelper::BackupFileHelper::tryPop()
comphelper::BackupFileHelper::tryPopExtensionInfo()
comphelper::BackupFileHelper::tryPop_extensionInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryPop_file(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryPop_files(std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
comphelper::BackupFileHelper::tryPush_Files(std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
comphelper::BackupFileHelper::tryPush_extensionInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryPush_file(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryResetBundledExtensions()
comphelper::BackupFileHelper::tryResetCustomizations()
comphelper::BackupFileHelper::tryResetSharedExtensions()
comphelper::BackupFileHelper::tryResetUserProfile()
comphelper::ChainablePropertySet::ChainablePropertySet(comphelper::ChainablePropertySetInfo*, comphelper::SolarMutex*)
comphelper::ChainablePropertySet::~ChainablePropertySet()
comphelper::ChainablePropertySetInfo::ChainablePropertySetInfo(comphelper::PropertyInfo const*)
comphelper::ChainablePropertySetInfo::getProperties()
comphelper::ChainablePropertySetInfo::getPropertyByName(rtl::OUString const&)
comphelper::ChainablePropertySetInfo::hasPropertyByName(rtl::OUString const&)
comphelper::ChainablePropertySetInfo::~ChainablePropertySetInfo()
comphelper::ComponentBase::getComponent()
comphelper::ConfigurationChanges::~ConfigurationChanges()
comphelper::ConfigurationHelper::flush(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::ConfigurationHelper::makeSureSetNodeExists(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString const&)
comphelper::ConfigurationHelper::readDirectKey(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, comphelper::EConfigurationModes)
comphelper::ConfigurationHelper::writeRelativeKey(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Any const&)
comphelper::ConfigurationListener::disposing(com::sun::star::lang::EventObject const&)
comphelper::ConfigurationListener::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
comphelper::DirectoryHelper::moveDirContent(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&)
comphelper::DirectoryHelper::scanDirsAndFiles(rtl::OUString const&, std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> >&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > >&)
comphelper::DirectoryHelper::splitAtLastToken(rtl::OUString const&, char16_t, rtl::OUString&)
comphelper::DocPasswordHelper::GenerateNewModifyPasswordInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GenerateNewModifyPasswordInfoOOXML(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GenerateStd97Key(rtl::OUString const&, com::sun::star::uno::Sequence<signed char> const&)
comphelper::DocPasswordHelper::GenerateStd97Key(unsigned short const*, com::sun::star::uno::Sequence<signed char> const&)
comphelper::DocPasswordHelper::GenerateStd97Key(unsigned short const*, unsigned char const*)
comphelper::DocPasswordHelper::GetOoxHashAsSequence(rtl::OUString const&, rtl::OUString const&, unsigned int, comphelper::Hash::IterCount, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GetWordHashAsUINT32(rtl::OUString const&)
comphelper::DocPasswordHelper::GetXLHashAsUINT16(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short)
comphelper::DocPasswordHelper::IsModifyPasswordCorrect(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
comphelper::DocPasswordHelper::decryptGpgSession(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> > const&)
comphelper::DocPasswordRequest::DocPasswordRequest(comphelper::DocPasswordRequestType, com::sun::star::task::PasswordRequestMode, rtl::OUString const&, bool)
comphelper::DocPasswordRequest::getContinuations()
comphelper::DocPasswordRequest::getPasswordToModify() const
comphelper::DocPasswordRequest::getRecommendReadOnly() const
comphelper::DocPasswordRequest::getRequest()
comphelper::DocPasswordRequest::~DocPasswordRequest()
comphelper::EmbeddedObjectContainer::CloseEmbeddedObjects()
comphelper::EmbeddedObjectContainer::CommitImageSubStorage()
comphelper::EmbeddedObjectContainer::EmbeddedObjectContainer()
comphelper::EmbeddedObjectContainer::EmbeddedObjectContainer(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
comphelper::EmbeddedObjectContainer::EmbeddedObjectContainer(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::EmbeddedObjectContainer::GetGraphicReplacementStream(long, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, rtl::OUString*)
comphelper::EmbeddedObjectContainer::Get_Impl(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, rtl::OUString const*)
comphelper::EmbeddedObjectContainer::InsertGraphicStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&, rtl::OUString const&)
comphelper::EmbeddedObjectContainer::ReleaseImageSubStorage()
comphelper::EmbeddedObjectContainer::RemoveGraphicStream(rtl::OUString const&)
comphelper::EmbeddedObjectContainer::TryToCopyGraphReplacement(comphelper::EmbeddedObjectContainer&, rtl::OUString const&, rtl::OUString const&)
comphelper::EmbeddedObjectContainer::~EmbeddedObjectContainer()
comphelper::EventLogger::EventLogger(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, char const*)
comphelper::GraphicMimeTypeHelper::GetMimeTypeForImageStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
comphelper::Hash::Hash(comphelper::HashType)
comphelper::Hash::calculateHash(rtl::OUString const&, std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned int, comphelper::Hash::IterCount, comphelper::HashType)
comphelper::Hash::getLength() const
comphelper::Hash::~Hash()
comphelper::IDocPasswordVerifier::~IDocPasswordVerifier()
comphelper::IndexAccessIterator::~IndexAccessIterator()
comphelper::JoinAsyncEventNotifiers()
comphelper::LibreOfficeKit::getDPIScale()
comphelper::LibreOfficeKit::getLocale()
comphelper::LibreOfficeKit::isAllowlistedLanguage(rtl::OUString const&)
comphelper::LibreOfficeKit::isLocalRendering()
comphelper::LibreOfficeKit::statusIndicatorFinish()
comphelper::LibreOfficeKit::statusIndicatorSetValue(int)
comphelper::LibreOfficeKit::statusIndicatorStart(rtl::OUString const&)
comphelper::LifecycleProxy::LifecycleProxy()
comphelper::LifecycleProxy::commitStorages()
comphelper::LifecycleProxy::~LifecycleProxy()
comphelper::MasterPropertySet::MasterPropertySet(comphelper::MasterPropertySetInfo*, comphelper::SolarMutex*)
comphelper::MasterPropertySet::~MasterPropertySet()
comphelper::MasterPropertySetInfo::MasterPropertySetInfo(comphelper::PropertyInfo const*)
comphelper::MasterPropertySetInfo::add(std::unordered_map<rtl::OUString, comphelper::PropertyInfo const*, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, comphelper::PropertyInfo const*> > >&, unsigned char)
comphelper::MasterPropertySetInfo::getProperties()
comphelper::MasterPropertySetInfo::getPropertyByName(rtl::OUString const&)
comphelper::MasterPropertySetInfo::hasPropertyByName(rtl::OUString const&)
comphelper::MasterPropertySetInfo::~MasterPropertySetInfo()
comphelper::MimeConfigurationHelper::GetConfigurationByPath(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetConfigurationByPathImpl(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetDocServiceNameFromFilter(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetFactoryNameByDocumentName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::MimeConfigurationHelper::GetFactoryNameByStringClassID(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetFilterFactory()
comphelper::MimeConfigurationHelper::GetMediaTypeConfiguration()
comphelper::MimeConfigurationHelper::GetObjPropsFromConfigEntry(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
comphelper::MimeConfigurationHelper::GetObjectPropsByStringClassID(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetStringClassIDRepresentation(com::sun::star::uno::Sequence<signed char> const&)
comphelper::MimeConfigurationHelper::GetVerbByShortcut(rtl::OUString const&, com::sun::star::embed::VerbDescriptor&)
comphelper::MimeConfigurationHelper::GetVerbsConfiguration()
comphelper::MimeConfigurationHelper::MimeConfigurationHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::MimeConfigurationHelper::SearchForFilter(com::sun::star::uno::Reference<com::sun::star::container::XContainerQuery> const&, com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&, SfxFilterFlags, SfxFilterFlags)
comphelper::ModifyPropertyAttributes(com::sun::star::uno::Sequence<com::sun::star::beans::Property>&, rtl::OUString const&, short, short)
comphelper::NamedValueCollection::NamedValueCollection(com::sun::star::uno::Any const&)
comphelper::NamedValueCollection::NamedValueCollection(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::NamedValueCollection::NamedValueCollection(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
comphelper::NamedValueCollection::NamedValueCollection(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
comphelper::NamedValueCollection::canExtractFrom(com::sun::star::uno::Any const&)
comphelper::NamedValueCollection::impl_assign(com::sun::star::uno::Any const&)
comphelper::NamedValueCollection::impl_assign(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
comphelper::NamedValueCollection::size() const
comphelper::NumberedCollection::NumberedCollection()
comphelper::NumberedCollection::getUntitledPrefix()
comphelper::NumberedCollection::impl_cleanUpDeadItems(std::unordered_map<long, comphelper::NumberedCollection::TNumberedItem, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<long const, comphelper::NumberedCollection::TNumberedItem> > >&, std::vector<long, std::allocator<long> > const&)
comphelper::NumberedCollection::impl_searchFreeNumber()
comphelper::NumberedCollection::leaseNumber(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::NumberedCollection::releaseNumber(int)
comphelper::NumberedCollection::releaseNumberForComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::NumberedCollection::~NumberedCollection()
comphelper::OAccessibleComponentHelper::OAccessibleComponentHelper()
comphelper::OAccessibleContextHelper::OAccessibleContextHelper()
comphelper::OAccessibleContextHelper::getAccessibleCreator() const
comphelper::OAccessibleContextHelper::implGetParentContext()
comphelper::OAccessibleContextHelper::lateInit(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
comphelper::OAccessibleContextHelper::~OAccessibleContextHelper()
comphelper::OAccessibleContextWrapper::OAccessibleContextWrapper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleContext> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
comphelper::OAccessibleContextWrapper::getAccessibleIndexInParent()
comphelper::OAccessibleContextWrapper::~OAccessibleContextWrapper()
comphelper::OAccessibleContextWrapperHelper::OAccessibleContextWrapperHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleContext> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
comphelper::OAccessibleContextWrapperHelper::getImplementationId()
comphelper::OAccessibleContextWrapperHelper::getTypes()
comphelper::OAccessibleContextWrapperHelper::queryInterface(com::sun::star::uno::Type const&)
comphelper::OAccessibleContextWrapperHelper::~OAccessibleContextWrapperHelper()
comphelper::OAccessibleExtendedComponentHelper::OAccessibleExtendedComponentHelper()
comphelper::OAccessibleImplementationAccess::OAccessibleImplementationAccess()
comphelper::OAccessibleImplementationAccess::~OAccessibleImplementationAccess()
comphelper::OAccessibleKeyBindingHelper::OAccessibleKeyBindingHelper()
comphelper::OAccessibleKeyBindingHelper::OAccessibleKeyBindingHelper(comphelper::OAccessibleKeyBindingHelper const&)
comphelper::OAccessibleKeyBindingHelper::getAccessibleKeyBinding(int)
comphelper::OAccessibleKeyBindingHelper::getAccessibleKeyBindingCount()
comphelper::OAccessibleKeyBindingHelper::~OAccessibleKeyBindingHelper()
comphelper::OAccessibleTextHelper::OAccessibleTextHelper()
comphelper::OAccessibleTextHelper::acquire()
comphelper::OAccessibleTextHelper::getImplementationId()
comphelper::OAccessibleTextHelper::getTypes()
comphelper::OAccessibleTextHelper::queryInterface(com::sun::star::uno::Type const&)
comphelper::OAccessibleTextHelper::release()
comphelper::OAccessibleWrapper::OAccessibleWrapper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&, com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
comphelper::OAccessibleWrapper::acquire()
comphelper::OAccessibleWrapper::createAccessibleContext(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessibleContext> const&)
comphelper::OAccessibleWrapper::getImplementationId()
comphelper::OAccessibleWrapper::getTypes()
comphelper::OAccessibleWrapper::queryInterface(com::sun::star::uno::Type const&)
comphelper::OAccessibleWrapper::release()
comphelper::OAccessibleWrapper::~OAccessibleWrapper()
comphelper::OAnyEnumeration::OAnyEnumeration(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
comphelper::OAnyEnumeration::hasMoreElements()
comphelper::OAnyEnumeration::nextElement()
comphelper::OAnyEnumeration::~OAnyEnumeration()
comphelper::OCommonAccessibleComponent::OCommonAccessibleComponent()
comphelper::OCommonAccessibleComponent::containsPoint(com::sun::star::awt::Point const&)
comphelper::OCommonAccessibleComponent::getBounds()
comphelper::OCommonAccessibleComponent::getLocation()
comphelper::OCommonAccessibleComponent::getLocationOnScreen()
comphelper::OCommonAccessibleComponent::getSize()
comphelper::OCommonAccessibleComponent::~OCommonAccessibleComponent()
comphelper::OCommonAccessibleSelection::OCommonAccessibleSelection()
comphelper::OCommonAccessibleSelection::~OCommonAccessibleSelection()
comphelper::OCommonAccessibleText::OCommonAccessibleText()
comphelper::OCommonAccessibleText::implGetBreakIterator()
comphelper::OCommonAccessibleText::implGetCharacterClassification()
comphelper::OCommonAccessibleText::implGetGlyphBoundary(rtl::OUString const&, com::sun::star::i18n::Boundary&, int)
comphelper::OCommonAccessibleText::implGetSentenceBoundary(rtl::OUString const&, com::sun::star::i18n::Boundary&, int)
comphelper::OCommonAccessibleText::~OCommonAccessibleText()
comphelper::OComponentProxyAggregation::OComponentProxyAggregation(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&)
comphelper::OComponentProxyAggregation::acquire()
comphelper::OComponentProxyAggregation::getImplementationId()
comphelper::OComponentProxyAggregation::getTypes()
comphelper::OComponentProxyAggregation::queryInterface(com::sun::star::uno::Type const&)
comphelper::OComponentProxyAggregation::release()
comphelper::OComponentProxyAggregation::~OComponentProxyAggregation()
comphelper::OContainerListener::OContainerListener(osl::Mutex&)
comphelper::OContainerListener::_elementInserted(com::sun::star::container::ContainerEvent const&)
comphelper::OContainerListener::_elementRemoved(com::sun::star::container::ContainerEvent const&)
comphelper::OContainerListener::_elementReplaced(com::sun::star::container::ContainerEvent const&)
comphelper::OContainerListener::setAdapter(comphelper::OContainerListenerAdapter*)
comphelper::OContainerListener::~OContainerListener()
comphelper::OContainerListenerAdapter::OContainerListenerAdapter(comphelper::OContainerListener*, com::sun::star::uno::Reference<com::sun::star::container::XContainer> const&)
comphelper::OContainerListenerAdapter::disposing(com::sun::star::lang::EventObject const&)
comphelper::OContainerListenerAdapter::elementInserted(com::sun::star::container::ContainerEvent const&)
comphelper::OContainerListenerAdapter::elementRemoved(com::sun::star::container::ContainerEvent const&)
comphelper::OContainerListenerAdapter::elementReplaced(com::sun::star::container::ContainerEvent const&)
comphelper::OContainerListenerAdapter::~OContainerListenerAdapter()
comphelper::OEnumerationByIndex::OEnumerationByIndex(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&)
comphelper::OEnumerationByIndex::disposing(com::sun::star::lang::EventObject const&)
comphelper::OEnumerationByIndex::hasMoreElements()
comphelper::OEnumerationByIndex::nextElement()
comphelper::OEnumerationByIndex::~OEnumerationByIndex()
comphelper::OEnumerationByName::OEnumerationByName(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
comphelper::OEnumerationByName::OEnumerationByName(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
comphelper::OEnumerationByName::disposing(com::sun::star::lang::EventObject const&)
comphelper::OEnumerationByName::hasMoreElements()
comphelper::OEnumerationByName::nextElement()
comphelper::OEnumerationByName::~OEnumerationByName()
comphelper::OInteractionRequest::OInteractionRequest(com::sun::star::uno::Any const&)
comphelper::OInteractionRequest::OInteractionRequest(com::sun::star::uno::Any const&, std::vector<com::sun::star::uno::Reference<com::sun::star::task::XInteractionContinuation>, std::allocator<com::sun::star::uno::Reference<com::sun::star::task::XInteractionContinuation> > >&&)
comphelper::OInteractionRequest::getContinuations()
comphelper::OInteractionRequest::getRequest()
comphelper::OInterfaceContainerHelper2::OInterfaceContainerHelper2(osl::Mutex&)
comphelper::OInterfaceContainerHelper2::copyAndResetInUse()
comphelper::OInterfaceContainerHelper2::~OInterfaceContainerHelper2()
comphelper::OInterfaceIteratorHelper2::OInterfaceIteratorHelper2(comphelper::OInterfaceContainerHelper2&)
comphelper::OInterfaceIteratorHelper2::~OInterfaceIteratorHelper2()
comphelper::OListenerContainer::OListenerContainer(osl::Mutex&)
comphelper::OListenerContainer::~OListenerContainer()
comphelper::OMultiTypeInterfaceContainerHelper2::OMultiTypeInterfaceContainerHelper2(osl::Mutex&)
comphelper::OMultiTypeInterfaceContainerHelper2::clear()
comphelper::OMultiTypeInterfaceContainerHelper2::findType(com::sun::star::uno::Type const&)
comphelper::OMultiTypeInterfaceContainerHelper2::findType(com::sun::star::uno::Type const&) const
comphelper::OMultiTypeInterfaceContainerHelper2::getContainedTypes() const
comphelper::OMultiTypeInterfaceContainerHelper2::~OMultiTypeInterfaceContainerHelper2()
comphelper::OPropertyArrayAggregationHelper::OPropertyArrayAggregationHelper(com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, comphelper::IPropertyInfoService*, int)
comphelper::OPropertyArrayAggregationHelper::fillAggregatePropertyInfoByHandle(rtl::OUString*, int*, int) const
comphelper::OPropertyArrayAggregationHelper::fillHandles(int*, com::sun::star::uno::Sequence<rtl::OUString> const&)
comphelper::OPropertyArrayAggregationHelper::fillPropertyMembersByHandle(rtl::OUString*, short*, int)
comphelper::OPropertyArrayAggregationHelper::findPropertyByName(rtl::OUString const&) const
comphelper::OPropertyArrayAggregationHelper::getHandleByName(rtl::OUString const&)
comphelper::OPropertyArrayAggregationHelper::getProperties()
comphelper::OPropertyArrayAggregationHelper::getPropertyByHandle(int, com::sun::star::beans::Property&) const
comphelper::OPropertyArrayAggregationHelper::getPropertyByName(rtl::OUString const&)
comphelper::OPropertyArrayAggregationHelper::hasPropertyByName(rtl::OUString const&)
comphelper::OPropertyChangeListener::setAdapter(comphelper::OPropertyChangeMultiplexer*)
comphelper::OPropertyChangeListener::~OPropertyChangeListener()
comphelper::OPropertyChangeMultiplexer::OPropertyChangeMultiplexer(comphelper::OPropertyChangeListener*, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
comphelper::OPropertyChangeMultiplexer::disposing(com::sun::star::lang::EventObject const&)
comphelper::OPropertyChangeMultiplexer::lock()
comphelper::OPropertyChangeMultiplexer::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
comphelper::OPropertyChangeMultiplexer::unlock()
comphelper::OPropertyChangeMultiplexer::~OPropertyChangeMultiplexer()
comphelper::OPropertyContainer::OPropertyContainer(cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&)
comphelper::OPropertyContainer::~OPropertyContainer()
comphelper::OPropertyContainerHelper::OPropertyContainerHelper()
comphelper::OPropertyContainerHelper::isRegisteredProperty(rtl::OUString const&) const
comphelper::OPropertyContainerHelper::revokeProperty(int)
comphelper::OPropertyContainerHelper::~OPropertyContainerHelper()
comphelper::OPropertyStateContainer::OPropertyStateContainer(cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&)
comphelper::OPropertyStateContainer::getHandleForName(rtl::OUString const&)
comphelper::OPropertyStateContainer::getPropertyStateByHandle(int) const
comphelper::OPropertyStateContainer::setPropertyToDefaultByHandle(int)
comphelper::OSLInputStreamWrapper::OSLInputStreamWrapper(osl::File&)
comphelper::OSLOutputStreamWrapper::OSLOutputStreamWrapper(osl::File&)
comphelper::OSeekableInputWrapper::OSeekableInputWrapper(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OSeekableInputWrapper::available()
comphelper::OSeekableInputWrapper::closeInput()
comphelper::OSeekableInputWrapper::getLength()
comphelper::OSeekableInputWrapper::getPosition()
comphelper::OSeekableInputWrapper::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::OSeekableInputWrapper::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::OSeekableInputWrapper::seek(long)
comphelper::OSeekableInputWrapper::skipBytes(int)
comphelper::OSeekableInputWrapper::~OSeekableInputWrapper()
comphelper::OSelectionChangeListener::_disposing(com::sun::star::lang::EventObject const&)
comphelper::OSelectionChangeListener::~OSelectionChangeListener()
comphelper::OSelectionChangeMultiplexer::OSelectionChangeMultiplexer(comphelper::OSelectionChangeListener*, com::sun::star::uno::Reference<com::sun::star::view::XSelectionSupplier> const&)
comphelper::OSelectionChangeMultiplexer::disposing(com::sun::star::lang::EventObject const&)
comphelper::OSelectionChangeMultiplexer::selectionChanged(com::sun::star::lang::EventObject const&)
comphelper::OSelectionChangeMultiplexer::~OSelectionChangeMultiplexer()
comphelper::OStorageHelper::CreateGpgPackageEncryptionData()
comphelper::OStorageHelper::GetFileSystemStorageFactory(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OStorageHelper::GetStorageFromURL2(rtl::OUString const&, int, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OStorageHelper::IsValidZipEntryFileName(char16_t const*, int, bool)
comphelper::OStorageHelper::IsValidZipEntryFileName(rtl::OUString const&, bool)
comphelper::OWeakTypeObject::OWeakTypeObject()
comphelper::OWeakTypeObject::~OWeakTypeObject()
comphelper::PropertySetHelper::PropertySetHelper(rtl::Reference<comphelper::PropertySetInfo> const&)
comphelper::PropertySetHelper::~PropertySetHelper()
comphelper::PropertySetInfo::PropertySetInfo()
comphelper::PropertySetInfo::PropertySetInfo(com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&)
comphelper::PropertySetInfo::PropertySetInfo(comphelper::PropertyMapEntry const*)
comphelper::PropertySetInfo::addImpl(comphelper::PropertyMapEntry const*)
comphelper::PropertySetInfo::getProperties()
comphelper::PropertySetInfo::getPropertyByName(rtl::OUString const&)
comphelper::PropertySetInfo::hasPropertyByName(rtl::OUString const&)
comphelper::PropertySetInfo::~PropertySetInfo()
comphelper::RefCountedMutex::~RefCountedMutex()
comphelper::RemoveProperty(com::sun::star::uno::Sequence<com::sun::star::beans::Property>&, rtl::OUString const&)
comphelper::SequenceAsHashMap::SequenceAsHashMap()
comphelper::SequenceAsHashMap::SequenceAsHashMap(com::sun::star::uno::Any const&)
comphelper::SequenceAsHashMap::SequenceAsHashMap(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::SequenceAsHashMap::SequenceAsHashMap(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
comphelper::SequenceAsHashMap::SequenceAsHashMap(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
comphelper::SequenceAsHashMap::getAsConstAny(bool) const
comphelper::SequenceAsHashMap::match(comphelper::SequenceAsHashMap const&) const
comphelper::SequenceAsHashMap::operator<<(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::SequenceInputStream::SequenceInputStream(com::sun::star::uno::Sequence<signed char> const&)
comphelper::SequenceInputStream::available()
comphelper::SequenceInputStream::closeInput()
comphelper::SequenceInputStream::getLength()
comphelper::SequenceInputStream::getPosition()
comphelper::SequenceInputStream::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::SequenceInputStream::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::SequenceInputStream::seek(long)
comphelper::SequenceInputStream::skipBytes(int)
comphelper::SharedMutex::SharedMutex()
comphelper::SimpleFileAccessInteraction::SimpleFileAccessInteraction(com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&)
comphelper::SimpleFileAccessInteraction::intercepted(ucbhelper::InterceptedInteraction::InterceptedRequest const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
comphelper::SimpleFileAccessInteraction::~SimpleFileAccessInteraction()
comphelper::SimplePasswordRequest::SimplePasswordRequest()
comphelper::SimplePasswordRequest::getContinuations()
comphelper::SimplePasswordRequest::getRequest()
comphelper::SimplePasswordRequest::~SimplePasswordRequest()
comphelper::SolarMutex::SolarMutex()
comphelper::SolarMutex::~SolarMutex()
comphelper::ThreadPool::ThreadPool(int)
comphelper::ThreadPool::decBusyWorker()
comphelper::ThreadPool::incBusyWorker()
comphelper::ThreadPool::popWorkLocked(std::unique_lock<std::mutex>&, bool)
comphelper::ThreadPool::shutdownLocked(std::unique_lock<std::mutex>&)
comphelper::ThreadPool::~ThreadPool()
comphelper::ThreadTask::ThreadTask(std::shared_ptr<comphelper::ThreadTaskTag> const&)
comphelper::ThreadTask::exec()
comphelper::UnoInterfaceToUniqueIdentifierMapper::UnoInterfaceToUniqueIdentifierMapper()
comphelper::UnoInterfaceToUniqueIdentifierMapper::findIdentifier(rtl::OUString const&, std::_Rb_tree_const_iterator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> > >&) const
comphelper::UnoInterfaceToUniqueIdentifierMapper::findReference(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, std::_Rb_tree_const_iterator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> > >&) const
comphelper::UnoInterfaceToUniqueIdentifierMapper::findReserved(rtl::OUString const&) const
comphelper::UnoInterfaceToUniqueIdentifierMapper::findReserved(rtl::OUString const&, std::_Deque_iterator<rtl::OUString, rtl::OUString const&, rtl::OUString const*>&) const
comphelper::UnoInterfaceToUniqueIdentifierMapper::getReference(rtl::OUString const&) const
comphelper::UnoInterfaceToUniqueIdentifierMapper::registerReference(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::UnoInterfaceToUniqueIdentifierMapper::registerReservedReference(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::UnoInterfaceToUniqueIdentifierMapper::reserveIdentifier(rtl::OUString const&)
comphelper::anyLess(com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
comphelper::createEventAttacherManager(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::detail::ConfigurationWrapper::createChanges() const
comphelper::detail::ConfigurationWrapper::getGroupReadWrite(std::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&)
comphelper::detail::ConfigurationWrapper::getLocalizedPropertyValue(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
comphelper::detail::ConfigurationWrapper::setLocalizedPropertyValue(std::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&, com::sun::star::uno::Any const&)
comphelper::getStandardLessPredicate(com::sun::star::uno::Type const&, com::sun::star::uno::Reference<com::sun::star::i18n::XCollator> const&)
comphelper::isAssignableFrom(com::sun::star::uno::Type const&, com::sun::star::uno::Type const&)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, bool)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, com::sun::star::awt::FontDescriptor const&)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, int)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, rtl::OUString const&)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, short)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, unsigned int)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, unsigned short)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, bool&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, com::sun::star::awt::FontDescriptor&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, int&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, rtl::OUString&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, short&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, unsigned int&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, unsigned short&)
comphelper::service_decl::ServiceDecl::Factory::createInstanceWithArgumentsAndContext(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::service_decl::ServiceDecl::Factory::createInstanceWithContext(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::service_decl::ServiceDecl::Factory::getImplementationName()
comphelper::service_decl::ServiceDecl::Factory::getSupportedServiceNames()
comphelper::service_decl::ServiceDecl::Factory::supportsService(rtl::OUString const&)
comphelper::service_decl::ServiceDecl::Factory::~Factory()
comphelper::service_decl::ServiceDecl::getFactory(char const*) const
comphelper::service_decl::ServiceDecl::getImplementationName() const
comphelper::service_decl::ServiceDecl::getSupportedServiceNames() const
comphelper::service_decl::ServiceDecl::supportsService(rtl::OUString const&) const
comphelper::service_decl::component_getFactoryHelper(char const*, std::initializer_list<comphelper::service_decl::ServiceDecl const*>)
comphelper::string::NaturalStringSorter::NaturalStringSorter(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::lang::Locale const&)
comphelper::xml::makeXMLChaff()
comphelper::xmlsec::parseDN(rtl::OUString const&)
compileExtensionHelp(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, rtl::OUString const*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, HelpProcessingErrorInfo&)
component_getImplementationEnvironment
compute_dualslacks
compute_feasibilitygap
compute_reducedcosts
compute_theta
compute_violation
connectivity::BlobHelper::BlobHelper(com::sun::star::uno::Sequence<signed char> const&)
connectivity::BlobHelper::getBinaryStream()
connectivity::BlobHelper::getBytes(long, int)
connectivity::BlobHelper::length()
connectivity::BlobHelper::position(com::sun::star::uno::Sequence<signed char> const&, long)
connectivity::BlobHelper::positionOfBlob(com::sun::star::uno::Reference<com::sun::star::sdbc::XBlob> const&, long)
connectivity::DriversConfig::DriversConfig(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
connectivity::DriversConfig::DriversConfig(connectivity::DriversConfig const&)
connectivity::DriversConfig::impl_get(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int) const
connectivity::DriversConfig::operator=(connectivity::DriversConfig const&)
connectivity::DriversConfig::~DriversConfig()
connectivity::OColumnsHelper::OColumnsHelper(cppu::OWeakObject&, bool, osl::Mutex&, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, bool)
connectivity::OColumnsHelper::createDescriptor()
connectivity::OColumnsHelper::~OColumnsHelper()
connectivity::OConnectionWrapper::OConnectionWrapper()
connectivity::OConnectionWrapper::getUnoTunnelId()
connectivity::OConnectionWrapper::queryInterface(com::sun::star::uno::Type const&)
connectivity::OConnectionWrapper::~OConnectionWrapper()
connectivity::ODatabaseMetaDataBase::ODatabaseMetaDataBase(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::ODatabaseMetaDataBase::getTablePrivileges(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::ODatabaseMetaDataBase::~ODatabaseMetaDataBase()
connectivity::ODatabaseMetaDataResultSet::ODatabaseMetaDataResultSet()
connectivity::ODatabaseMetaDataResultSet::ODatabaseMetaDataResultSet(connectivity::ODatabaseMetaDataResultSet::MetaDataResultSetType)
connectivity::ODatabaseMetaDataResultSet::absolute(int)
connectivity::ODatabaseMetaDataResultSet::acquire()
connectivity::ODatabaseMetaDataResultSet::afterLast()
connectivity::ODatabaseMetaDataResultSet::beforeFirst()
connectivity::ODatabaseMetaDataResultSet::cancel()
connectivity::ODatabaseMetaDataResultSet::checkIndex(int)
connectivity::ODatabaseMetaDataResultSet::clearWarnings()
connectivity::ODatabaseMetaDataResultSet::close()
connectivity::ODatabaseMetaDataResultSet::construct()
connectivity::ODatabaseMetaDataResultSet::createArrayHelper() const
connectivity::ODatabaseMetaDataResultSet::disposing()
connectivity::ODatabaseMetaDataResultSet::findColumn(rtl::OUString const&)
connectivity::ODatabaseMetaDataResultSet::first()
connectivity::ODatabaseMetaDataResultSet::getArray(int)
connectivity::ODatabaseMetaDataResultSet::getBinaryStream(int)
connectivity::ODatabaseMetaDataResultSet::getBlob(int)
connectivity::ODatabaseMetaDataResultSet::getBoolean(int)
connectivity::ODatabaseMetaDataResultSet::getByte(int)
connectivity::ODatabaseMetaDataResultSet::getBytes(int)
connectivity::ODatabaseMetaDataResultSet::getCharacterStream(int)
connectivity::ODatabaseMetaDataResultSet::getClob(int)
connectivity::ODatabaseMetaDataResultSet::getDate(int)
connectivity::ODatabaseMetaDataResultSet::getDouble(int)
connectivity::ODatabaseMetaDataResultSet::getFloat(int)
connectivity::ODatabaseMetaDataResultSet::getImplementationName()
connectivity::ODatabaseMetaDataResultSet::getInfoHelper()
connectivity::ODatabaseMetaDataResultSet::getInt(int)
connectivity::ODatabaseMetaDataResultSet::getLong(int)
connectivity::ODatabaseMetaDataResultSet::getMetaData()
connectivity::ODatabaseMetaDataResultSet::getObject(int, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
connectivity::ODatabaseMetaDataResultSet::getPropertySetInfo()
connectivity::ODatabaseMetaDataResultSet::getRef(int)
connectivity::ODatabaseMetaDataResultSet::getRow()
connectivity::ODatabaseMetaDataResultSet::getShort(int)
connectivity::ODatabaseMetaDataResultSet::getStatement()
connectivity::ODatabaseMetaDataResultSet::getString(int)
connectivity::ODatabaseMetaDataResultSet::getSupportedServiceNames()
connectivity::ODatabaseMetaDataResultSet::getTime(int)
connectivity::ODatabaseMetaDataResultSet::getTimestamp(int)
connectivity::ODatabaseMetaDataResultSet::getTypes()
connectivity::ODatabaseMetaDataResultSet::getValue(int)
connectivity::ODatabaseMetaDataResultSet::getWarnings()
connectivity::ODatabaseMetaDataResultSet::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
connectivity::ODatabaseMetaDataResultSet::isAfterLast()
connectivity::ODatabaseMetaDataResultSet::isBeforeFirst()
connectivity::ODatabaseMetaDataResultSet::isFirst()
connectivity::ODatabaseMetaDataResultSet::isLast()
connectivity::ODatabaseMetaDataResultSet::last()
connectivity::ODatabaseMetaDataResultSet::next()
connectivity::ODatabaseMetaDataResultSet::previous()
connectivity::ODatabaseMetaDataResultSet::queryInterface(com::sun::star::uno::Type const&)
connectivity::ODatabaseMetaDataResultSet::refreshRow()
connectivity::ODatabaseMetaDataResultSet::relative(int)
connectivity::ODatabaseMetaDataResultSet::release()
connectivity::ODatabaseMetaDataResultSet::rowDeleted()
connectivity::ODatabaseMetaDataResultSet::rowInserted()
connectivity::ODatabaseMetaDataResultSet::rowUpdated()
connectivity::ODatabaseMetaDataResultSet::setBestRowIdentifierMap()
connectivity::ODatabaseMetaDataResultSet::setCatalogsMap()
connectivity::ODatabaseMetaDataResultSet::setColumnPrivilegesMap()
connectivity::ODatabaseMetaDataResultSet::setColumnsMap()
connectivity::ODatabaseMetaDataResultSet::setCrossReferenceMap()
connectivity::ODatabaseMetaDataResultSet::setExportedKeysMap()
connectivity::ODatabaseMetaDataResultSet::setImportedKeysMap()
connectivity::ODatabaseMetaDataResultSet::setIndexInfoMap()
connectivity::ODatabaseMetaDataResultSet::setPrimaryKeysMap()
connectivity::ODatabaseMetaDataResultSet::setProcedureColumnsMap()
connectivity::ODatabaseMetaDataResultSet::setProceduresMap()
connectivity::ODatabaseMetaDataResultSet::setSchemasMap()
connectivity::ODatabaseMetaDataResultSet::setTablePrivilegesMap()
connectivity::ODatabaseMetaDataResultSet::setTableTypes()
connectivity::ODatabaseMetaDataResultSet::setTablesMap()
connectivity::ODatabaseMetaDataResultSet::setType(connectivity::ODatabaseMetaDataResultSet::MetaDataResultSetType)
connectivity::ODatabaseMetaDataResultSet::setTypeInfoMap()
connectivity::ODatabaseMetaDataResultSet::setUDTsMap()
connectivity::ODatabaseMetaDataResultSet::setVersionColumnsMap()
connectivity::ODatabaseMetaDataResultSet::supportsService(rtl::OUString const&)
connectivity::ODatabaseMetaDataResultSet::wasNull()
connectivity::ODatabaseMetaDataResultSet::~ODatabaseMetaDataResultSet()
connectivity::OKeyValue::OKeyValue(int)
connectivity::OKeyValue::~OKeyValue()
connectivity::OKeysHelper::cloneDescriptorColumns(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::OMetaConnection::OMetaConnection()
connectivity::OResultSetPrivileges::OResultSetPrivileges(com::sun::star::uno::Reference<com::sun::star::sdbc::XDatabaseMetaData> const&, com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::OResultSetPrivileges::disposing()
connectivity::OResultSetPrivileges::getValue(int)
connectivity::OResultSetPrivileges::next()
connectivity::ORowSetValue::fill(int, com::sun::star::uno::Reference<com::sun::star::sdb::XColumn> const&)
connectivity::ORowSetValue::getUInt8() const
connectivity::ORowSetValue::impl_fill(int, bool, connectivity::detail::IValueSource const&)
connectivity::OSQLParseNode::OSQLParseNode(char const*, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::OSQLParseNode(connectivity::OSQLParseNode const&)
connectivity::OSQLParseNode::OSQLParseNode(rtl::OUString const&, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::OSQLParseNode(std::basic_string_view<char, std::char_traits<char> >, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::addDateValue(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::append(connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::convertDateString(connectivity::SQLParseNodeParameter const&, rtl::OUString const&)
connectivity::OSQLParseNode::convertDateTimeString(connectivity::SQLParseNodeParameter const&, rtl::OUString const&)
connectivity::OSQLParseNode::convertTimeString(connectivity::SQLParseNodeParameter const&, rtl::OUString const&)
connectivity::OSQLParseNode::eraseBraces(connectivity::OSQLParseNode*&)
connectivity::OSQLParseNode::getTableComponents(connectivity::OSQLParseNode const*, com::sun::star::uno::Any&, rtl::OUString&, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::sdbc::XDatabaseMetaData> const&)
connectivity::OSQLParseNode::impl_parseLikeNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&, bool) const
connectivity::OSQLParseNode::impl_parseNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&, bool) const
connectivity::OSQLParseNode::impl_parseTableNameNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::impl_parseTableRangeNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::insert(unsigned int, connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::operator=(connectivity::OSQLParseNode const&)
connectivity::OSQLParseNode::parseLeaf(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::parseNodeToStr(rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, com::sun::star::lang::Locale const&, connectivity::IParseContext const*, bool, bool, rtl::OUString, bool) const
connectivity::OSQLParseNode::removeAt(unsigned int)
connectivity::OSQLParseNode::replace(connectivity::OSQLParseNode*, connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::substituteParameterNames(connectivity::OSQLParseNode const*)
connectivity::OSQLParseNode::~OSQLParseNode()
connectivity::OSQLParseTreeIterator::OSQLParseTreeIterator(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, connectivity::OSQLParser const&)
connectivity::OSQLParseTreeIterator::OSQLParseTreeIterator(connectivity::OSQLParseTreeIterator const&, connectivity::OSQLParser const&, connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::appendColumns(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> const&)
connectivity::OSQLParseTreeIterator::findColumn(rtl::OUString const&, rtl::OUString&, bool)
connectivity::OSQLParseTreeIterator::findColumn(std::map<rtl::OUString, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> > > > const&, rtl::OUString const&, rtl::OUString&)
connectivity::OSQLParseTreeIterator::findSelectColumn(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::OSQLParseTreeIterator::getColumnRange(connectivity::OSQLParseNode const*, rtl::OUString&, rtl::OUString&, rtl::OUString&) const
connectivity::OSQLParseTreeIterator::getFunctionReturnType(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::getGroupByTree() const
connectivity::OSQLParseTreeIterator::getHavingTree() const
connectivity::OSQLParseTreeIterator::getQualified_join(std::map<rtl::OUString, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> > > >&, connectivity::OSQLParseNode const*, rtl::OUString&)
connectivity::OSQLParseTreeIterator::getSelectColumnNames() const
connectivity::OSQLParseTreeIterator::getSelect_statement(std::map<rtl::OUString, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> > > >&, connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::getTableNode(std::map<rtl::OUString, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> > > >&, connectivity::OSQLParseNode const*, rtl::OUString&)
connectivity::OSQLParseTreeIterator::getUniqueColumnName(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, rtl::OUString const&) const
connectivity::OSQLParseTreeIterator::impl_appendError(com::sun::star::sdbc::SQLException const&)
connectivity::OSQLParseTreeIterator::impl_appendError(connectivity::IParseContext::ErrorCode, rtl::OUString const*, rtl::OUString const*)
connectivity::OSQLParseTreeIterator::impl_createTableObject(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::OSQLParseTreeIterator::impl_fillJoinConditions(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::impl_getQueryParameterColumns(com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> const&)
connectivity::OSQLParseTreeIterator::impl_locateRecordSource(rtl::OUString const&)
connectivity::OSQLParseTreeIterator::impl_traverse(connectivity::TraversalParts)
connectivity::OSQLParseTreeIterator::isTableNode(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::setGroupByColumnName(rtl::OUString const&, rtl::OUString&)
connectivity::OSQLParseTreeIterator::setOrderByColumnName(rtl::OUString const&, rtl::OUString&, bool)
connectivity::OSQLParseTreeIterator::setSelectColumnName(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, int, bool)
connectivity::OSQLParseTreeIterator::traverseByColumnNames(connectivity::OSQLParseNode const*, bool)
connectivity::OSQLParseTreeIterator::traverseCreateColumns(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseGroupByColumnNames(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseOnePredicate(connectivity::OSQLParseNode const*, rtl::OUString&, connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseOneTableName(std::map<rtl::OUString, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> > > >&, connectivity::OSQLParseNode const*, rtl::OUString const&)
connectivity::OSQLParseTreeIterator::traverseOrderByColumnNames(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseParameter(connectivity::OSQLParseNode const*, connectivity::OSQLParseNode const*, rtl::OUString const&, rtl::OUString&, rtl::OUString const&)
connectivity::OSQLParseTreeIterator::traverseParameters(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseSearchCondition(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseSelectColumnNames(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseSelectionCriteria(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseTableNames(std::map<rtl::OUString, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> > > >&)
connectivity::OSQLParseTreeIterator::~OSQLParseTreeIterator()
connectivity::OSQLParser::OSQLParser(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, connectivity::IParseContext const*)
connectivity::OSQLParser::RuleIDToRule(unsigned int)
connectivity::OSQLParser::SQLlex()
connectivity::OSQLParser::StrToRuleID(rtl::OString const&)
connectivity::OSQLParser::buildComparisonRule(connectivity::OSQLParseNode*&, connectivity::OSQLParseNode*)
connectivity::OSQLParser::buildDate(int, connectivity::OSQLParseNode*&)
connectivity::OSQLParser::buildLikeRule(connectivity::OSQLParseNode*, connectivity::OSQLParseNode*&, connectivity::OSQLParseNode const*)
connectivity::OSQLParser::buildNode(connectivity::OSQLParseNode*&, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*)
connectivity::OSQLParser::buildNode_Date(double const&, int)
connectivity::OSQLParser::buildNode_STR_NUM(connectivity::OSQLParseNode*&)
connectivity::OSQLParser::buildPredicateRule(connectivity::OSQLParseNode*&, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*)
connectivity::OSQLParser::buildStringNodes(connectivity::OSQLParseNode*&)
connectivity::OSQLParser::convertNode(int, connectivity::OSQLParseNode*)
connectivity::OSQLParser::error(char const*)
connectivity::OSQLParser::extractDate(connectivity::OSQLParseNode const*, double&)
connectivity::OSQLParser::getErrorHelper() const
connectivity::OSQLParser::getFunctionParameterType(unsigned int, unsigned int)
connectivity::OSQLParser::getMutex()
connectivity::OSQLParser::killThousandSeparator(connectivity::OSQLParseNode*)
connectivity::OSQLParser::reduceLiteral(connectivity::OSQLParseNode*&, bool)
connectivity::OSQLParser::setParseTree(connectivity::OSQLParseNode*)
connectivity::OSQLParser::stringToDouble(rtl::OUString const&, short)
connectivity::OSQLParser::~OSQLParser()
connectivity::OSkipDeletedSet::OSkipDeletedSet(connectivity::IResultSetHelper*)
connectivity::OSkipDeletedSet::moveAbsolute(int, bool)
connectivity::OSkipDeletedSet::~OSkipDeletedSet()
connectivity::OSortIndex::Freeze()
connectivity::OSortIndex::OSortIndex(std::vector<connectivity::OKeyType, std::allocator<connectivity::OKeyType> >&&, std::vector<connectivity::TAscendingOrder, std::allocator<connectivity::TAscendingOrder> >&&)
connectivity::OSortIndex::~OSortIndex()
connectivity::OTableHelper::OTableHelper(connectivity::sdbcx::OCollection*, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, bool)
connectivity::OTableHelper::OTableHelper(connectivity::sdbcx::OCollection*, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::OTableHelper::addKey(rtl::OUString const&, std::shared_ptr<connectivity::sdbcx::KeyProperties> const&)
connectivity::OTableHelper::getColumnDescription(rtl::OUString const&) const
connectivity::OTableHelper::getIndexService() const
connectivity::OTableHelper::getKeyProperties(rtl::OUString const&) const
connectivity::OTableHelper::getKeyService() const
connectivity::OTableHelper::refreshForeignKeys(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
connectivity::OTableHelper::refreshPrimaryKeys(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
connectivity::OTableHelper::~OTableHelper()
connectivity::SQLError::SQLError()
connectivity::SQLError::raiseException(int) const
connectivity::SQLError::~SQLError()
connectivity::SharedResources::SharedResources()
connectivity::SharedResources::~SharedResources()
connectivity::component::OComponentDatabaseMetaData::OComponentDatabaseMetaData(connectivity::file::OConnection*)
connectivity::component::OComponentDatabaseMetaData::~OComponentDatabaseMetaData()
connectivity::component::OComponentPreparedStatement::createResultSet()
connectivity::component::OComponentPreparedStatement::getImplementationName()
connectivity::component::OComponentPreparedStatement::getSupportedServiceNames()
connectivity::component::OComponentPreparedStatement::supportsService(rtl::OUString const&)
connectivity::component::OComponentStatement::createResultSet()
connectivity::component::OComponentStatement::getImplementationName()
connectivity::component::OComponentStatement::getSupportedServiceNames()
connectivity::component::OComponentStatement::supportsService(rtl::OUString const&)
connectivity::component::OComponentTable::OComponentTable(connectivity::sdbcx::OCollection*, connectivity::file::OConnection*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::file::OBoolOperator::Exec(std::stack<connectivity::file::OOperand*, std::deque<connectivity::file::OOperand*, std::allocator<connectivity::file::OOperand*> > >&)
connectivity::file::OBoolOperator::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OCode::~OCode()
connectivity::file::OColumns::createObject(rtl::OUString const&)
connectivity::file::OConnection::OConnection(connectivity::file::OFileDriver*)
connectivity::file::OConnection::createCatalog()
connectivity::file::OConnection::createStatement()
connectivity::file::OConnection::getImplementationName()
connectivity::file::OConnection::getMetaData()
connectivity::file::OConnection::getSupportedServiceNames()
connectivity::file::OConnection::getUnoTunnelId()
connectivity::file::OConnection::prepareCall(rtl::OUString const&)
connectivity::file::OConnection::prepareStatement(rtl::OUString const&)
connectivity::file::OConnection::supportsService(rtl::OUString const&)
connectivity::file::OConnection::throwUrlNotValid(rtl::OUString const&, rtl::OUString const&)
connectivity::file::OConnection::~OConnection()
connectivity::file::ODatabaseMetaData::ODatabaseMetaData(connectivity::file::OConnection*)
connectivity::file::ODatabaseMetaData::getColumns(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::file::ODatabaseMetaData::getURL()
connectivity::file::ODatabaseMetaData::impl_getTypeInfo_throw()
connectivity::file::ODatabaseMetaData::~ODatabaseMetaData()
connectivity::file::OFileCatalog::OFileCatalog(connectivity::file::OConnection*)
connectivity::file::OFileCatalog::refreshTables()
connectivity::file::OFileDriver::OFileDriver(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
connectivity::file::OFileDriver::acceptsURL(rtl::OUString const&)
connectivity::file::OFileDriver::connect(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::file::OFileDriver::getImplementationName()
connectivity::file::OFileDriver::getPropertyInfo(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::file::OFileTable::OFileTable(connectivity::sdbcx::OCollection*, connectivity::file::OConnection*)
connectivity::file::OFileTable::OFileTable(connectivity::sdbcx::OCollection*, connectivity::file::OConnection*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::file::OFileTable::disposing()
connectivity::file::OFileTable::getSomething(com::sun::star::uno::Sequence<signed char> const&)
connectivity::file::OFileTable::getUnoTunnelId()
connectivity::file::OFileTable::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OFileTable::refreshColumns()
connectivity::file::OFileTable::~OFileTable()
connectivity::file::OOp_ISNOTNULL::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OOp_ISNULL::Exec(std::stack<connectivity::file::OOperand*, std::deque<connectivity::file::OOperand*, std::allocator<connectivity::file::OOperand*> > >&)
connectivity::file::OOp_ISNULL::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OOp_LIKE::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OPreparedStatement::AddParameter(connectivity::OSQLParseNode const*, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::file::OPreparedStatement::OPreparedStatement(connectivity::file::OConnection*)
connectivity::file::OPreparedStatement::checkAndResizeParameters(int)
connectivity::file::OPreparedStatement::createResultSet()
connectivity::file::OPreparedStatement::describeColumn(connectivity::OSQLParseNode const*, connectivity::OSQLParseNode const*, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> const&)
connectivity::file::OPreparedStatement::describeParameter()
connectivity::file::OPreparedStatement::getImplementationName()
connectivity::file::OPreparedStatement::getSupportedServiceNames()
connectivity::file::OPreparedStatement::initResultSet(connectivity::file::OResultSet*)
connectivity::file::OPreparedStatement::makeResultSet()
connectivity::file::OPreparedStatement::scanParameter(connectivity::OSQLParseNode*, std::vector<connectivity::OSQLParseNode*, std::allocator<connectivity::OSQLParseNode*> >&)
connectivity::file::OPreparedStatement::setParameter(int, connectivity::ORowSetValue const&)
connectivity::file::OPreparedStatement::supportsService(rtl::OUString const&)
connectivity::file::OPreparedStatement::~OPreparedStatement()
connectivity::file::OResultSet::ExecuteRow(connectivity::IResultSetHelper::Movement, int, bool, bool)
connectivity::file::OResultSet::GetOrderbyKeyValue(rtl::Reference<connectivity::OValueRefVector> const&)
connectivity::file::OResultSet::OResultSet(connectivity::file::OStatement_Base*, connectivity::OSQLParseTreeIterator&)
connectivity::file::OResultSet::OpenImpl()
connectivity::file::OResultSet::acquire()
connectivity::file::OResultSet::checkIndex(int)
connectivity::file::OResultSet::clearInsertRow()
connectivity::file::OResultSet::construct()
connectivity::file::OResultSet::createArrayHelper() const
connectivity::file::OResultSet::doTableSpecials(com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> const&)
connectivity::file::OResultSet::getImplementationName()
connectivity::file::OResultSet::getInfoHelper()
connectivity::file::OResultSet::getPropertySetInfo()
connectivity::file::OResultSet::getSupportedServiceNames()
connectivity::file::OResultSet::getTypes()
connectivity::file::OResultSet::getValue(int)
connectivity::file::OResultSet::initializeRow(rtl::Reference<connectivity::OValueRefVector>&, int)
connectivity::file::OResultSet::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OResultSet::release()
connectivity::file::OResultSet::setBoundedColumns(rtl::Reference<connectivity::OValueRefVector> const&, rtl::Reference<connectivity::OValueRefVector> const&, rtl::Reference<connectivity::ORefVector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > const&, com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, bool, com::sun::star::uno::Reference<com::sun::star::sdbc::XDatabaseMetaData> const&, std::vector<int, std::allocator<int> >&)
connectivity::file::OResultSet::sortRows()
connectivity::file::OResultSet::supportsService(rtl::OUString const&)
connectivity::file::OResultSet::updateValue(int, connectivity::ORowSetValue const&)
connectivity::file::OResultSet::~OResultSet()
connectivity::file::OStatement::createResultSet()
connectivity::file::OStatement::getImplementationName()
connectivity::file::OStatement::getSupportedServiceNames()
connectivity::file::OStatement::supportsService(rtl::OUString const&)
connectivity::file::OStatement_BASE2::release()
connectivity::file::OStatement_Base::GetAssignValues()
connectivity::file::OStatement_Base::OStatement_Base(connectivity::file::OConnection*)
connectivity::file::OStatement_Base::ParseAssignValues(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, connectivity::OSQLParseNode*, int)
connectivity::file::OStatement_Base::SetAssignValue(rtl::OUString const&, rtl::OUString const&, bool, unsigned int)
connectivity::file::OStatement_Base::acquire()
connectivity::file::OStatement_Base::analyzeSQL()
connectivity::file::OStatement_Base::closeResultSet()
connectivity::file::OStatement_Base::createColumnMapping()
connectivity::file::OStatement_Base::disposeResultSet()
connectivity::file::OStatement_Base::disposing()
connectivity::file::OStatement_Base::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OStatement_Base::setOrderbyColumn(connectivity::OSQLParseNode const*, connectivity::OSQLParseNode const*)
connectivity::file::OStatement_Base::~OStatement_Base()
connectivity::file::OTables::createObject(rtl::OUString const&)
connectivity::find(__gnu_cxx::__normal_iterator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > >, __gnu_cxx::__normal_iterator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > > const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, comphelper::UStringMixEqual const&)
connectivity::odbc::OConnection::Construct(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::odbc::OConnection::OConnection(void*, connectivity::odbc::ODBCDriver*)
connectivity::odbc::OConnection::OpenConnection(rtl::OUString const&, int, bool)
connectivity::odbc::OConnection::clearWarnings()
connectivity::odbc::OConnection::close()
connectivity::odbc::OConnection::commit()
connectivity::odbc::OConnection::createStatement()
connectivity::odbc::OConnection::createStatementHandle()
connectivity::odbc::OConnection::disposing()
connectivity::odbc::OConnection::freeStatementHandle(void*&)
connectivity::odbc::OConnection::getAutoCommit()
connectivity::odbc::OConnection::getCatalog()
connectivity::odbc::OConnection::getImplementationName()
connectivity::odbc::OConnection::getMetaData()
connectivity::odbc::OConnection::getOdbcFunction(ODBC3SQLFunctionId) const
connectivity::odbc::OConnection::getSupportedServiceNames()
connectivity::odbc::OConnection::getTransactionIsolation()
connectivity::odbc::OConnection::getTypeMap()
connectivity::odbc::OConnection::getWarnings()
connectivity::odbc::OConnection::isClosed()
connectivity::odbc::OConnection::isReadOnly()
connectivity::odbc::OConnection::nativeSQL(rtl::OUString const&)
connectivity::odbc::OConnection::prepareCall(rtl::OUString const&)
connectivity::odbc::OConnection::prepareStatement(rtl::OUString const&)
connectivity::odbc::OConnection::rollback()
connectivity::odbc::OConnection::setAutoCommit(unsigned char)
connectivity::odbc::OConnection::setCatalog(rtl::OUString const&)
connectivity::odbc::OConnection::setReadOnly(unsigned char)
connectivity::odbc::OConnection::setTransactionIsolation(int)
connectivity::odbc::OConnection::setTypeMap(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
connectivity::odbc::OConnection::supportsService(rtl::OUString const&)
connectivity::odbc::OConnection::~OConnection()
connectivity::odbc::ODBCDriver::ODBCDriver(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
connectivity::odbc::ODBCDriver::acceptsURL(rtl::OUString const&)
connectivity::odbc::ODBCDriver::connect(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::odbc::ODBCDriver::disposing()
connectivity::odbc::ODBCDriver::getImplementationName()
connectivity::odbc::ODBCDriver::getMajorVersion()
connectivity::odbc::ODBCDriver::getMinorVersion()
connectivity::odbc::ODBCDriver::getPropertyInfo(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::odbc::ODBCDriver::getSupportedServiceNames()
connectivity::odbc::ODBCDriver::supportsService(rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::ODatabaseMetaData(void*, connectivity::odbc::OConnection*)
connectivity::odbc::ODatabaseMetaData::allProceduresAreCallable()
connectivity::odbc::ODatabaseMetaData::allTablesAreSelectable()
connectivity::odbc::ODatabaseMetaData::dataDefinitionCausesTransactionCommit()
connectivity::odbc::ODatabaseMetaData::dataDefinitionIgnoredInTransactions()
connectivity::odbc::ODatabaseMetaData::deletesAreDetected(int)
connectivity::odbc::ODatabaseMetaData::doesMaxRowSizeIncludeBlobs()
connectivity::odbc::ODatabaseMetaData::getBestRowIdentifier(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, int, unsigned char)
connectivity::odbc::ODatabaseMetaData::getCatalogTerm()
connectivity::odbc::ODatabaseMetaData::getCatalogs()
connectivity::odbc::ODatabaseMetaData::getColumnPrivileges(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getColumns(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getCrossReference(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getDatabaseProductName()
connectivity::odbc::ODatabaseMetaData::getDatabaseProductVersion()
connectivity::odbc::ODatabaseMetaData::getDefaultTransactionIsolation()
connectivity::odbc::ODatabaseMetaData::getDriverMajorVersion()
connectivity::odbc::ODatabaseMetaData::getDriverMinorVersion()
connectivity::odbc::ODatabaseMetaData::getDriverName()
connectivity::odbc::ODatabaseMetaData::getDriverVersion()
connectivity::odbc::ODatabaseMetaData::getExportedKeys(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getExtraNameCharacters()
connectivity::odbc::ODatabaseMetaData::getImportedKeys(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getIndexInfo(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, unsigned char, unsigned char)
connectivity::odbc::ODatabaseMetaData::getMaxBinaryLiteralLength()
connectivity::odbc::ODatabaseMetaData::getMaxCatalogNameLength()
connectivity::odbc::ODatabaseMetaData::getMaxCharLiteralLength()
connectivity::odbc::ODatabaseMetaData::getMaxColumnNameLength()
connectivity::odbc::ODatabaseMetaData::getMaxColumnsInGroupBy()
connectivity::odbc::ODatabaseMetaData::getMaxColumnsInIndex()
connectivity::odbc::ODatabaseMetaData::getMaxColumnsInOrderBy()
connectivity::odbc::ODatabaseMetaData::getMaxColumnsInSelect()
connectivity::odbc::ODatabaseMetaData::getMaxColumnsInTable()
connectivity::odbc::ODatabaseMetaData::getMaxConnections()
connectivity::odbc::ODatabaseMetaData::getMaxCursorNameLength()
connectivity::odbc::ODatabaseMetaData::getMaxIndexLength()
connectivity::odbc::ODatabaseMetaData::getMaxProcedureNameLength()
connectivity::odbc::ODatabaseMetaData::getMaxRowSize()
connectivity::odbc::ODatabaseMetaData::getMaxSchemaNameLength()
connectivity::odbc::ODatabaseMetaData::getMaxStatementLength()
connectivity::odbc::ODatabaseMetaData::getMaxTableNameLength()
connectivity::odbc::ODatabaseMetaData::getMaxUserNameLength()
connectivity::odbc::ODatabaseMetaData::getNumericFunctions()
connectivity::odbc::ODatabaseMetaData::getPrimaryKeys(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getProcedureColumns(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getProcedureTerm()
connectivity::odbc::ODatabaseMetaData::getProcedures(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getSQLKeywords()
connectivity::odbc::ODatabaseMetaData::getSchemaTerm()
connectivity::odbc::ODatabaseMetaData::getSchemas()
connectivity::odbc::ODatabaseMetaData::getSearchStringEscape()
connectivity::odbc::ODatabaseMetaData::getStringFunctions()
connectivity::odbc::ODatabaseMetaData::getSystemFunctions()
connectivity::odbc::ODatabaseMetaData::getTablePrivileges(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::getTableTypes()
connectivity::odbc::ODatabaseMetaData::getTables(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
connectivity::odbc::ODatabaseMetaData::getTimeDateFunctions()
connectivity::odbc::ODatabaseMetaData::getUDTs(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<int> const&)
connectivity::odbc::ODatabaseMetaData::getURL()
connectivity::odbc::ODatabaseMetaData::getURLImpl()
connectivity::odbc::ODatabaseMetaData::getUserName()
connectivity::odbc::ODatabaseMetaData::getVersionColumns(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaData::impl_getCatalogSeparator_throw()
connectivity::odbc::ODatabaseMetaData::impl_getIdentifierQuoteString_throw()
connectivity::odbc::ODatabaseMetaData::impl_getMaxStatements_throw()
connectivity::odbc::ODatabaseMetaData::impl_getMaxTablesInSelect_throw()
connectivity::odbc::ODatabaseMetaData::impl_getTypeInfo_throw()
connectivity::odbc::ODatabaseMetaData::impl_isCatalogAtStart_throw()
connectivity::odbc::ODatabaseMetaData::impl_storesMixedCaseQuotedIdentifiers_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsAlterTableWithAddColumn_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsAlterTableWithDropColumn_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsCatalogsInDataManipulation_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsCatalogsInTableDefinitions_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsMixedCaseQuotedIdentifiers_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsSchemasInDataManipulation_throw()
connectivity::odbc::ODatabaseMetaData::impl_supportsSchemasInTableDefinitions_throw()
connectivity::odbc::ODatabaseMetaData::insertsAreDetected(int)
connectivity::odbc::ODatabaseMetaData::isReadOnly()
connectivity::odbc::ODatabaseMetaData::nullPlusNonNullIsNull()
connectivity::odbc::ODatabaseMetaData::nullsAreSortedAtEnd()
connectivity::odbc::ODatabaseMetaData::nullsAreSortedAtStart()
connectivity::odbc::ODatabaseMetaData::nullsAreSortedHigh()
connectivity::odbc::ODatabaseMetaData::nullsAreSortedLow()
connectivity::odbc::ODatabaseMetaData::othersDeletesAreVisible(int)
connectivity::odbc::ODatabaseMetaData::othersInsertsAreVisible(int)
connectivity::odbc::ODatabaseMetaData::othersUpdatesAreVisible(int)
connectivity::odbc::ODatabaseMetaData::ownDeletesAreVisible(int)
connectivity::odbc::ODatabaseMetaData::ownInsertsAreVisible(int)
connectivity::odbc::ODatabaseMetaData::ownUpdatesAreVisible(int)
connectivity::odbc::ODatabaseMetaData::storesLowerCaseIdentifiers()
connectivity::odbc::ODatabaseMetaData::storesLowerCaseQuotedIdentifiers()
connectivity::odbc::ODatabaseMetaData::storesMixedCaseIdentifiers()
connectivity::odbc::ODatabaseMetaData::storesUpperCaseIdentifiers()
connectivity::odbc::ODatabaseMetaData::storesUpperCaseQuotedIdentifiers()
connectivity::odbc::ODatabaseMetaData::supportsANSI92EntryLevelSQL()
connectivity::odbc::ODatabaseMetaData::supportsANSI92FullSQL()
connectivity::odbc::ODatabaseMetaData::supportsANSI92IntermediateSQL()
connectivity::odbc::ODatabaseMetaData::supportsBatchUpdates()
connectivity::odbc::ODatabaseMetaData::supportsCatalogsInIndexDefinitions()
connectivity::odbc::ODatabaseMetaData::supportsCatalogsInPrivilegeDefinitions()
connectivity::odbc::ODatabaseMetaData::supportsCatalogsInProcedureCalls()
connectivity::odbc::ODatabaseMetaData::supportsColumnAliasing()
connectivity::odbc::ODatabaseMetaData::supportsConvert(int, int)
connectivity::odbc::ODatabaseMetaData::supportsCoreSQLGrammar()
connectivity::odbc::ODatabaseMetaData::supportsCorrelatedSubqueries()
connectivity::odbc::ODatabaseMetaData::supportsDataDefinitionAndDataManipulationTransactions()
connectivity::odbc::ODatabaseMetaData::supportsDataManipulationTransactionsOnly()
connectivity::odbc::ODatabaseMetaData::supportsDifferentTableCorrelationNames()
connectivity::odbc::ODatabaseMetaData::supportsExpressionsInOrderBy()
connectivity::odbc::ODatabaseMetaData::supportsExtendedSQLGrammar()
connectivity::odbc::ODatabaseMetaData::supportsFullOuterJoins()
connectivity::odbc::ODatabaseMetaData::supportsGroupBy()
connectivity::odbc::ODatabaseMetaData::supportsGroupByBeyondSelect()
connectivity::odbc::ODatabaseMetaData::supportsGroupByUnrelated()
connectivity::odbc::ODatabaseMetaData::supportsIntegrityEnhancementFacility()
connectivity::odbc::ODatabaseMetaData::supportsLikeEscapeClause()
connectivity::odbc::ODatabaseMetaData::supportsLimitedOuterJoins()
connectivity::odbc::ODatabaseMetaData::supportsMinimumSQLGrammar()
connectivity::odbc::ODatabaseMetaData::supportsMixedCaseIdentifiers()
connectivity::odbc::ODatabaseMetaData::supportsMultipleResultSets()
connectivity::odbc::ODatabaseMetaData::supportsMultipleTransactions()
connectivity::odbc::ODatabaseMetaData::supportsNonNullableColumns()
connectivity::odbc::ODatabaseMetaData::supportsOpenCursorsAcrossCommit()
connectivity::odbc::ODatabaseMetaData::supportsOpenCursorsAcrossRollback()
connectivity::odbc::ODatabaseMetaData::supportsOpenStatementsAcrossCommit()
connectivity::odbc::ODatabaseMetaData::supportsOpenStatementsAcrossRollback()
connectivity::odbc::ODatabaseMetaData::supportsOrderByUnrelated()
connectivity::odbc::ODatabaseMetaData::supportsOuterJoins()
connectivity::odbc::ODatabaseMetaData::supportsPositionedDelete()
connectivity::odbc::ODatabaseMetaData::supportsPositionedUpdate()
connectivity::odbc::ODatabaseMetaData::supportsResultSetConcurrency(int, int)
connectivity::odbc::ODatabaseMetaData::supportsResultSetType(int)
connectivity::odbc::ODatabaseMetaData::supportsSchemasInIndexDefinitions()
connectivity::odbc::ODatabaseMetaData::supportsSchemasInPrivilegeDefinitions()
connectivity::odbc::ODatabaseMetaData::supportsSchemasInProcedureCalls()
connectivity::odbc::ODatabaseMetaData::supportsSelectForUpdate()
connectivity::odbc::ODatabaseMetaData::supportsStoredProcedures()
connectivity::odbc::ODatabaseMetaData::supportsSubqueriesInComparisons()
connectivity::odbc::ODatabaseMetaData::supportsSubqueriesInExists()
connectivity::odbc::ODatabaseMetaData::supportsSubqueriesInIns()
connectivity::odbc::ODatabaseMetaData::supportsSubqueriesInQuantifieds()
connectivity::odbc::ODatabaseMetaData::supportsTableCorrelationNames()
connectivity::odbc::ODatabaseMetaData::supportsTransactionIsolationLevel(int)
connectivity::odbc::ODatabaseMetaData::supportsTransactions()
connectivity::odbc::ODatabaseMetaData::supportsTypeConversion()
connectivity::odbc::ODatabaseMetaData::supportsUnion()
connectivity::odbc::ODatabaseMetaData::supportsUnionAll()
connectivity::odbc::ODatabaseMetaData::updatesAreDetected(int)
connectivity::odbc::ODatabaseMetaData::usesLocalFilePerTable()
connectivity::odbc::ODatabaseMetaData::usesLocalFiles()
connectivity::odbc::ODatabaseMetaData::~ODatabaseMetaData()
connectivity::odbc::ODatabaseMetaDataResultSet::ODatabaseMetaDataResultSet(connectivity::odbc::OConnection*)
connectivity::odbc::ODatabaseMetaDataResultSet::absolute(int)
connectivity::odbc::ODatabaseMetaDataResultSet::acquire()
connectivity::odbc::ODatabaseMetaDataResultSet::afterLast()
connectivity::odbc::ODatabaseMetaDataResultSet::beforeFirst()
connectivity::odbc::ODatabaseMetaDataResultSet::cancel()
connectivity::odbc::ODatabaseMetaDataResultSet::checkColumnCount()
connectivity::odbc::ODatabaseMetaDataResultSet::clearWarnings()
connectivity::odbc::ODatabaseMetaDataResultSet::close()
connectivity::odbc::ODatabaseMetaDataResultSet::convertFastPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, int, com::sun::star::uno::Any const&)
connectivity::odbc::ODatabaseMetaDataResultSet::createArrayHelper() const
connectivity::odbc::ODatabaseMetaDataResultSet::disposing()
connectivity::odbc::ODatabaseMetaDataResultSet::findColumn(rtl::OUString const&)
connectivity::odbc::ODatabaseMetaDataResultSet::first()
connectivity::odbc::ODatabaseMetaDataResultSet::getArray(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getBinaryStream(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getBlob(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getBoolean(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getByte(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getBytes(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getCharacterStream(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getClob(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getCursorName()
connectivity::odbc::ODatabaseMetaDataResultSet::getDate(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getDouble(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getFastPropertyValue(com::sun::star::uno::Any&, int) const
connectivity::odbc::ODatabaseMetaDataResultSet::getFetchSize()
connectivity::odbc::ODatabaseMetaDataResultSet::getFloat(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getInfoHelper()
connectivity::odbc::ODatabaseMetaDataResultSet::getInt(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getLong(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getMetaData()
connectivity::odbc::ODatabaseMetaDataResultSet::getObject(int, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
connectivity::odbc::ODatabaseMetaDataResultSet::getPropertySetInfo()
connectivity::odbc::ODatabaseMetaDataResultSet::getRef(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getRow()
connectivity::odbc::ODatabaseMetaDataResultSet::getShort(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getStatement()
connectivity::odbc::ODatabaseMetaDataResultSet::getString(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getTime(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getTimestamp(int)
connectivity::odbc::ODatabaseMetaDataResultSet::getTypes()
connectivity::odbc::ODatabaseMetaDataResultSet::getWarnings()
connectivity::odbc::ODatabaseMetaDataResultSet::impl_getColumnType_nothrow(int)
connectivity::odbc::ODatabaseMetaDataResultSet::isAfterLast()
connectivity::odbc::ODatabaseMetaDataResultSet::isBeforeFirst()
connectivity::odbc::ODatabaseMetaDataResultSet::isFirst()
connectivity::odbc::ODatabaseMetaDataResultSet::isLast()
connectivity::odbc::ODatabaseMetaDataResultSet::last()
connectivity::odbc::ODatabaseMetaDataResultSet::mapColumn(int)
connectivity::odbc::ODatabaseMetaDataResultSet::next()
connectivity::odbc::ODatabaseMetaDataResultSet::openBestRowIdentifier(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, bool)
connectivity::odbc::ODatabaseMetaDataResultSet::openCatalogs()
connectivity::odbc::ODatabaseMetaDataResultSet::openColumnPrivileges(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::openColumns(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::openExportedKeys(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaDataResultSet::openForeignKeys(com::sun::star::uno::Any const&, rtl::OUString const*, rtl::OUString const*, com::sun::star::uno::Any const&, rtl::OUString const*, rtl::OUString const*)
connectivity::odbc::ODatabaseMetaDataResultSet::openImportedKeys(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::odbc::ODatabaseMetaDataResultSet::openIndexInfo(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, bool)
connectivity::odbc::ODatabaseMetaDataResultSet::openPrimaryKeys(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::openProcedureColumns(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::openProcedures(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::openSchemas()
connectivity::odbc::ODatabaseMetaDataResultSet::openSpecialColumns(bool, com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, bool)
connectivity::odbc::ODatabaseMetaDataResultSet::openTablePrivileges(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::openTables(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<rtl::OUString> const&)
connectivity::odbc::ODatabaseMetaDataResultSet::openTablesTypes()
connectivity::odbc::ODatabaseMetaDataResultSet::openTypeInfo()
connectivity::odbc::ODatabaseMetaDataResultSet::openVersionColumns(com::sun::star::uno::Any const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::ODatabaseMetaDataResultSet::previous()
connectivity::odbc::ODatabaseMetaDataResultSet::queryInterface(com::sun::star::uno::Type const&)
connectivity::odbc::ODatabaseMetaDataResultSet::refreshRow()
connectivity::odbc::ODatabaseMetaDataResultSet::relative(int)
connectivity::odbc::ODatabaseMetaDataResultSet::release()
connectivity::odbc::ODatabaseMetaDataResultSet::rowDeleted()
connectivity::odbc::ODatabaseMetaDataResultSet::rowInserted()
connectivity::odbc::ODatabaseMetaDataResultSet::rowUpdated()
connectivity::odbc::ODatabaseMetaDataResultSet::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
connectivity::odbc::ODatabaseMetaDataResultSet::wasNull()
connectivity::odbc::ODatabaseMetaDataResultSet::~ODatabaseMetaDataResultSet()
connectivity::odbc::OPreparedStatement::FreeParams()
connectivity::odbc::OPreparedStatement::OPreparedStatement(connectivity::odbc::OConnection*, rtl::OUString const&)
connectivity::odbc::OPreparedStatement::acquire()
connectivity::odbc::OPreparedStatement::addBatch()
connectivity::odbc::OPreparedStatement::allocBindBuf(int, int)
connectivity::odbc::OPreparedStatement::checkParameterIndex(int)
connectivity::odbc::OPreparedStatement::clearBatch()
connectivity::odbc::OPreparedStatement::clearParameters()
connectivity::odbc::OPreparedStatement::close()
connectivity::odbc::OPreparedStatement::createResultSet()
connectivity::odbc::OPreparedStatement::execute()
connectivity::odbc::OPreparedStatement::executeBatch()
connectivity::odbc::OPreparedStatement::executeQuery()
connectivity::odbc::OPreparedStatement::executeUpdate()
connectivity::odbc::OPreparedStatement::getConnection()
connectivity::odbc::OPreparedStatement::getImplementationName()
connectivity::odbc::OPreparedStatement::getLengthBuf(int)
connectivity::odbc::OPreparedStatement::getMetaData()
connectivity::odbc::OPreparedStatement::getSupportedServiceNames()
connectivity::odbc::OPreparedStatement::getTypes()
connectivity::odbc::OPreparedStatement::initBoundParam()
connectivity::odbc::OPreparedStatement::prepareStatement()
connectivity::odbc::OPreparedStatement::putParamData(int)
connectivity::odbc::OPreparedStatement::queryInterface(com::sun::star::uno::Type const&)
connectivity::odbc::OPreparedStatement::release()
connectivity::odbc::OPreparedStatement::setArray(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XArray> const&)
connectivity::odbc::OPreparedStatement::setBinaryStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, int)
connectivity::odbc::OPreparedStatement::setBlob(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XBlob> const&)
connectivity::odbc::OPreparedStatement::setBoolean(int, unsigned char)
connectivity::odbc::OPreparedStatement::setByte(int, signed char)
connectivity::odbc::OPreparedStatement::setBytes(int, com::sun::star::uno::Sequence<signed char> const&)
connectivity::odbc::OPreparedStatement::setCharacterStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, int)
connectivity::odbc::OPreparedStatement::setClob(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XClob> const&)
connectivity::odbc::OPreparedStatement::setDate(int, com::sun::star::util::Date const&)
connectivity::odbc::OPreparedStatement::setDouble(int, double)
connectivity::odbc::OPreparedStatement::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
connectivity::odbc::OPreparedStatement::setFloat(int, float)
connectivity::odbc::OPreparedStatement::setInt(int, int)
connectivity::odbc::OPreparedStatement::setLong(int, long)
connectivity::odbc::OPreparedStatement::setNull(int, int)
connectivity::odbc::OPreparedStatement::setObject(int, com::sun::star::uno::Any const&)
connectivity::odbc::OPreparedStatement::setObjectNull(int, int, rtl::OUString const&)
connectivity::odbc::OPreparedStatement::setObjectWithInfo(int, com::sun::star::uno::Any const&, int, int)
connectivity::odbc::OPreparedStatement::setParameter(int, int, com::sun::star::uno::Sequence<signed char> const&)
connectivity::odbc::OPreparedStatement::setParameter(int, int, short, rtl::OUString const&)
connectivity::odbc::OPreparedStatement::setParameter(int, int, unsigned long, int, void const*, unsigned long, long)
connectivity::odbc::OPreparedStatement::setParameterPre(int)
connectivity::odbc::OPreparedStatement::setRef(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XRef> const&)
connectivity::odbc::OPreparedStatement::setShort(int, short)
connectivity::odbc::OPreparedStatement::setStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, long, int)
connectivity::odbc::OPreparedStatement::setString(int, rtl::OUString const&)
connectivity::odbc::OPreparedStatement::setTime(int, com::sun::star::util::Time const&)
connectivity::odbc::OPreparedStatement::setTimestamp(int, com::sun::star::util::DateTime const&)
connectivity::odbc::OPreparedStatement::supportsService(rtl::OUString const&)
connectivity::odbc::OPreparedStatement::~OPreparedStatement()
connectivity::odbc::OResultSet::OResultSet(void*, connectivity::odbc::OStatement_Base*)
connectivity::odbc::OResultSet::absolute(int)
connectivity::odbc::OResultSet::acquire()
connectivity::odbc::OResultSet::afterLast()
connectivity::odbc::OResultSet::allocBindColumn(int, int)
connectivity::odbc::OResultSet::allocBuffer()
connectivity::odbc::OResultSet::beforeFirst()
connectivity::odbc::OResultSet::cancel()
connectivity::odbc::OResultSet::cancelRowUpdates()
connectivity::odbc::OResultSet::clearWarnings()
connectivity::odbc::OResultSet::close()
connectivity::odbc::OResultSet::compareBookmarks(com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
connectivity::odbc::OResultSet::construct()
connectivity::odbc::OResultSet::convertFastPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, int, com::sun::star::uno::Any const&)
connectivity::odbc::OResultSet::createArrayHelper() const
connectivity::odbc::OResultSet::deleteRow()
connectivity::odbc::OResultSet::deleteRows(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
connectivity::odbc::OResultSet::disposing()
connectivity::odbc::OResultSet::ensureCacheForColumn(int)
connectivity::odbc::OResultSet::fillColumn(int)
connectivity::odbc::OResultSet::fillNeededData(short)
connectivity::odbc::OResultSet::findColumn(rtl::OUString const&)
connectivity::odbc::OResultSet::first()
connectivity::odbc::OResultSet::getArray(int)
connectivity::odbc::OResultSet::getBinaryStream(int)
connectivity::odbc::OResultSet::getBlob(int)
connectivity::odbc::OResultSet::getBookmark()
connectivity::odbc::OResultSet::getBoolean(int)
connectivity::odbc::OResultSet::getByte(int)
connectivity::odbc::OResultSet::getBytes(int)
connectivity::odbc::OResultSet::getCharacterStream(int)
connectivity::odbc::OResultSet::getClob(int)
connectivity::odbc::OResultSet::getCursorName() const
connectivity::odbc::OResultSet::getDate(int)
connectivity::odbc::OResultSet::getDouble(int)
connectivity::odbc::OResultSet::getDriverPos() const
connectivity::odbc::OResultSet::getFastPropertyValue(com::sun::star::uno::Any&, int) const
connectivity::odbc::OResultSet::getFetchSize() const
connectivity::odbc::OResultSet::getFloat(int)
connectivity::odbc::OResultSet::getImplementationName()
connectivity::odbc::OResultSet::getInfoHelper()
connectivity::odbc::OResultSet::getInt(int)
connectivity::odbc::OResultSet::getLong(int)
connectivity::odbc::OResultSet::getMetaData()
connectivity::odbc::OResultSet::getObject(int, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
connectivity::odbc::OResultSet::getPropertySetInfo()
connectivity::odbc::OResultSet::getRef(int)
connectivity::odbc::OResultSet::getResultSetConcurrency() const
connectivity::odbc::OResultSet::getResultSetType() const
connectivity::odbc::OResultSet::getRow()
connectivity::odbc::OResultSet::getShort(int)
connectivity::odbc::OResultSet::getStatement()
connectivity::odbc::OResultSet::getString(int)
connectivity::odbc::OResultSet::getSupportedServiceNames()
connectivity::odbc::OResultSet::getTime(int)
connectivity::odbc::OResultSet::getTimestamp(int)
connectivity::odbc::OResultSet::getTypes()
connectivity::odbc::OResultSet::getWarnings()
connectivity::odbc::OResultSet::hasOrderedBookmarks()
connectivity::odbc::OResultSet::hashBookmark(com::sun::star::uno::Any const&)
connectivity::odbc::OResultSet::impl_getBookmark()
connectivity::odbc::OResultSet::impl_getBoolean(int)
connectivity::odbc::OResultSet::impl_getBytes(int)
connectivity::odbc::OResultSet::impl_getColumnType_nothrow(int)
connectivity::odbc::OResultSet::impl_getDate(int)
connectivity::odbc::OResultSet::impl_getLong(int)
connectivity::odbc::OResultSet::impl_getString(int)
connectivity::odbc::OResultSet::impl_getTime(int)
connectivity::odbc::OResultSet::impl_getTimestamp(int)
connectivity::odbc::OResultSet::insertRow()
connectivity::odbc::OResultSet::invalidateCache()
connectivity::odbc::OResultSet::isAfterLast()
connectivity::odbc::OResultSet::isBeforeFirst()
connectivity::odbc::OResultSet::isBookmarkable() const
connectivity::odbc::OResultSet::isFirst()
connectivity::odbc::OResultSet::isLast()
connectivity::odbc::OResultSet::isRowDeleted() const
connectivity::odbc::OResultSet::last()
connectivity::odbc::OResultSet::move(connectivity::IResultSetHelper::Movement, int, bool)
connectivity::odbc::OResultSet::moveImpl(connectivity::IResultSetHelper::Movement, int)
connectivity::odbc::OResultSet::moveRelativeToBookmark(com::sun::star::uno::Any const&, int)
connectivity::odbc::OResultSet::moveToBookmark(com::sun::star::uno::Any const&)
connectivity::odbc::OResultSet::moveToCurrentRow()
connectivity::odbc::OResultSet::moveToInsertRow()
connectivity::odbc::OResultSet::next()
connectivity::odbc::OResultSet::previous()
connectivity::odbc::OResultSet::queryInterface(com::sun::star::uno::Type const&)
connectivity::odbc::OResultSet::refreshRow()
connectivity::odbc::OResultSet::relative(int)
connectivity::odbc::OResultSet::release()
connectivity::odbc::OResultSet::releaseBuffer()
connectivity::odbc::OResultSet::rowDeleted()
connectivity::odbc::OResultSet::rowInserted()
connectivity::odbc::OResultSet::rowUpdated()
connectivity::odbc::OResultSet::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
connectivity::odbc::OResultSet::setFetchDirection(int)
connectivity::odbc::OResultSet::setFetchSize(int)
connectivity::odbc::OResultSet::supportsService(rtl::OUString const&)
connectivity::odbc::OResultSet::unbind(bool)
connectivity::odbc::OResultSet::updateBinaryStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, int)
connectivity::odbc::OResultSet::updateBoolean(int, unsigned char)
connectivity::odbc::OResultSet::updateByte(int, signed char)
connectivity::odbc::OResultSet::updateBytes(int, com::sun::star::uno::Sequence<signed char> const&)
connectivity::odbc::OResultSet::updateCharacterStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, int)
connectivity::odbc::OResultSet::updateDate(int, com::sun::star::util::Date const&)
connectivity::odbc::OResultSet::updateDouble(int, double)
connectivity::odbc::OResultSet::updateFloat(int, float)
connectivity::odbc::OResultSet::updateInt(int, int)
connectivity::odbc::OResultSet::updateLong(int, long)
connectivity::odbc::OResultSet::updateNull(int)
connectivity::odbc::OResultSet::updateNumericObject(int, com::sun::star::uno::Any const&, int)
connectivity::odbc::OResultSet::updateObject(int, com::sun::star::uno::Any const&)
connectivity::odbc::OResultSet::updateRow()
connectivity::odbc::OResultSet::updateShort(int, short)
connectivity::odbc::OResultSet::updateString(int, rtl::OUString const&)
connectivity::odbc::OResultSet::updateTime(int, com::sun::star::util::Time const&)
connectivity::odbc::OResultSet::updateTimestamp(int, com::sun::star::util::DateTime const&)
connectivity::odbc::OResultSet::updateValue(int, short, void const*)
connectivity::odbc::OResultSet::wasNull()
connectivity::odbc::OResultSet::~OResultSet()
connectivity::odbc::OResultSetMetaData::getCatalogName(int)
connectivity::odbc::OResultSetMetaData::getCharColAttrib(int, int)
connectivity::odbc::OResultSetMetaData::getColumnCount()
connectivity::odbc::OResultSetMetaData::getColumnDisplaySize(int)
connectivity::odbc::OResultSetMetaData::getColumnLabel(int)
connectivity::odbc::OResultSetMetaData::getColumnName(int)
connectivity::odbc::OResultSetMetaData::getColumnODBCType(connectivity::odbc::OConnection const*, void*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, int)
connectivity::odbc::OResultSetMetaData::getColumnServiceName(int)
connectivity::odbc::OResultSetMetaData::getColumnType(int)
connectivity::odbc::OResultSetMetaData::getColumnTypeName(int)
connectivity::odbc::OResultSetMetaData::getNumColAttrib(connectivity::odbc::OConnection const*, void*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, int, int)
connectivity::odbc::OResultSetMetaData::getNumColAttrib(int, int)
connectivity::odbc::OResultSetMetaData::getPrecision(int)
connectivity::odbc::OResultSetMetaData::getScale(int)
connectivity::odbc::OResultSetMetaData::getSchemaName(int)
connectivity::odbc::OResultSetMetaData::getTableName(int)
connectivity::odbc::OResultSetMetaData::isAutoIncrement(int)
connectivity::odbc::OResultSetMetaData::isCaseSensitive(int)
connectivity::odbc::OResultSetMetaData::isCurrency(int)
connectivity::odbc::OResultSetMetaData::isDefinitelyWritable(int)
connectivity::odbc::OResultSetMetaData::isNullable(int)
connectivity::odbc::OResultSetMetaData::isReadOnly(int)
connectivity::odbc::OResultSetMetaData::isSearchable(int)
connectivity::odbc::OResultSetMetaData::isSigned(int)
connectivity::odbc::OResultSetMetaData::isWritable(int)
connectivity::odbc::OResultSetMetaData::~OResultSetMetaData()
connectivity::odbc::OStatement::acquire()
connectivity::odbc::OStatement::addBatch(rtl::OUString const&)
connectivity::odbc::OStatement::clearBatch()
connectivity::odbc::OStatement::executeBatch()
connectivity::odbc::OStatement::getImplementationName()
connectivity::odbc::OStatement::getSupportedServiceNames()
connectivity::odbc::OStatement::queryInterface(com::sun::star::uno::Type const&)
connectivity::odbc::OStatement::release()
connectivity::odbc::OStatement::supportsService(rtl::OUString const&)
connectivity::odbc::OStatement_BASE2::disposing()
connectivity::odbc::OStatement_Base::OStatement_Base(connectivity::odbc::OConnection*)
connectivity::odbc::OStatement_Base::acquire()
connectivity::odbc::OStatement_Base::cancel()
connectivity::odbc::OStatement_Base::clearMyResultSet()
connectivity::odbc::OStatement_Base::clearWarnings()
connectivity::odbc::OStatement_Base::close()
connectivity::odbc::OStatement_Base::convertFastPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, int, com::sun::star::uno::Any const&)
connectivity::odbc::OStatement_Base::createArrayHelper() const
connectivity::odbc::OStatement_Base::createResultSet()
connectivity::odbc::OStatement_Base::disposeResultSet()
connectivity::odbc::OStatement_Base::disposing()
connectivity::odbc::OStatement_Base::execute(rtl::OUString const&)
connectivity::odbc::OStatement_Base::executeQuery(rtl::OUString const&)
connectivity::odbc::OStatement_Base::executeUpdate(rtl::OUString const&)
connectivity::odbc::OStatement_Base::getColumnCount()
connectivity::odbc::OStatement_Base::getConnection()
connectivity::odbc::OStatement_Base::getCursorName() const
connectivity::odbc::OStatement_Base::getCursorProperties(int, bool)
connectivity::odbc::OStatement_Base::getEscapeProcessing() const
connectivity::odbc::OStatement_Base::getFastPropertyValue(com::sun::star::uno::Any&, int) const
connectivity::odbc::OStatement_Base::getFetchDirection() const
connectivity::odbc::OStatement_Base::getFetchSize() const
connectivity::odbc::OStatement_Base::getGeneratedValues()
connectivity::odbc::OStatement_Base::getInfoHelper()
connectivity::odbc::OStatement_Base::getMaxFieldSize() const
connectivity::odbc::OStatement_Base::getMaxRows() const
connectivity::odbc::OStatement_Base::getMoreResults()
connectivity::odbc::OStatement_Base::getPropertySetInfo()
connectivity::odbc::OStatement_Base::getQueryTimeOut() const
connectivity::odbc::OStatement_Base::getResultSet()
connectivity::odbc::OStatement_Base::getResultSet(bool)
connectivity::odbc::OStatement_Base::getResultSetConcurrency() const
connectivity::odbc::OStatement_Base::getResultSetType() const
connectivity::odbc::OStatement_Base::getRowCount()
connectivity::odbc::OStatement_Base::getTypes()
connectivity::odbc::OStatement_Base::getUpdateCount()
connectivity::odbc::OStatement_Base::getWarnings()
connectivity::odbc::OStatement_Base::isUsingBookmarks() const
connectivity::odbc::OStatement_Base::lockIfNecessary(rtl::OUString const&)
connectivity::odbc::OStatement_Base::queryInterface(com::sun::star::uno::Type const&)
connectivity::odbc::OStatement_Base::release()
connectivity::odbc::OStatement_Base::reset()
connectivity::odbc::OStatement_Base::setCursorName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::odbc::OStatement_Base::setEscapeProcessing(bool)
connectivity::odbc::OStatement_Base::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
connectivity::odbc::OStatement_Base::setFetchDirection(int)
connectivity::odbc::OStatement_Base::setFetchSize(int)
connectivity::odbc::OStatement_Base::setMaxFieldSize(long)
connectivity::odbc::OStatement_Base::setMaxRows(long)
connectivity::odbc::OStatement_Base::setQueryTimeOut(long)
connectivity::odbc::OStatement_Base::setResultSetConcurrency(int)
connectivity::odbc::OStatement_Base::setResultSetType(int)
connectivity::odbc::OStatement_Base::setUsingBookmarks(bool)
connectivity::odbc::OStatement_Base::setWarning(com::sun::star::sdbc::SQLWarning const&)
connectivity::odbc::OStatement_Base::~OStatement_Base()
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, int&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, unsigned short)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, unsigned int&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, unsigned short&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::MapOdbcType2Jdbc(short)
connectivity::odbc::OTools::ThrowException(connectivity::odbc::OConnection const*, short, void*, short, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, bool)
connectivity::odbc::OTools::bindValue(connectivity::odbc::OConnection const*, void*, int, short, short, void const*, void*, long*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, unsigned short, bool)
connectivity::odbc::OTools::getBindTypes(bool, bool, short, short&, short&)
connectivity::odbc::OTools::getBytesValue(connectivity::odbc::OConnection const*, void*, int, short, bool&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::getStringValue(connectivity::odbc::OConnection const*, void*, int, short, bool&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, unsigned short)
connectivity::odbc::OTools::getValue(connectivity::odbc::OConnection const*, void*, int, short, bool&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, void*, long)
connectivity::odbc::OTools::jdbcTypeToOdbc(int)
connectivity::parse::OParseColumn::OParseColumn(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
connectivity::parse::OParseColumn::OParseColumn(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int, int, int, bool, bool, bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::parse::OParseColumn::construct()
connectivity::parse::OParseColumn::createArrayHelper() const
connectivity::parse::OParseColumn::getInfoHelper()
connectivity::parse::OParseColumn::~OParseColumn()
connectivity::sdbcx::OCatalog::OCatalog(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
connectivity::sdbcx::OCatalog::~OCatalog()
connectivity::sdbcx::OCollection::OCollection(cppu::OWeakObject&, bool, osl::Mutex&, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, bool, bool)
connectivity::sdbcx::OCollection::disposeElements()
connectivity::sdbcx::OCollection::dropImpl(int, bool)
connectivity::sdbcx::OCollection::notifyElementRemoved(rtl::OUString const&)
connectivity::sdbcx::OCollection::~OCollection()
connectivity::sdbcx::OColumn::OColumn(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int, int, int, bool, bool, bool, bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::sdbcx::OColumn::construct()
connectivity::sdbcx::OColumn::createArrayHelper(int) const
connectivity::sdbcx::OColumn::getInfoHelper()
connectivity::sdbcx::OColumn::getSupportedServiceNames()
connectivity::sdbcx::OColumn::~OColumn()
connectivity::sdbcx::ODescriptor::ODescriptor(cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, bool, bool)
connectivity::sdbcx::ODescriptor::getTypes()
connectivity::sdbcx::ODescriptor::getUnoTunnelId()
connectivity::sdbcx::ODescriptor::queryInterface(com::sun::star::uno::Type const&)
connectivity::sdbcx::ODescriptor::setNew(bool)
connectivity::sdbcx::ODescriptor::~ODescriptor()
connectivity::sdbcx::OGroup::OGroup(bool)
connectivity::sdbcx::OGroup::OGroup(rtl::OUString const&, bool)
connectivity::sdbcx::OGroup::acquire()
connectivity::sdbcx::OGroup::createArrayHelper() const
connectivity::sdbcx::OGroup::disposing()
connectivity::sdbcx::OGroup::getGrantablePrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OGroup::getImplementationName()
connectivity::sdbcx::OGroup::getInfoHelper()
connectivity::sdbcx::OGroup::getName()
connectivity::sdbcx::OGroup::getPrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OGroup::getPropertySetInfo()
connectivity::sdbcx::OGroup::getSupportedServiceNames()
connectivity::sdbcx::OGroup::getTypes()
connectivity::sdbcx::OGroup::getUsers()
connectivity::sdbcx::OGroup::grantPrivileges(rtl::OUString const&, int, int)
connectivity::sdbcx::OGroup::queryInterface(com::sun::star::uno::Type const&)
connectivity::sdbcx::OGroup::release()
connectivity::sdbcx::OGroup::revokePrivileges(rtl::OUString const&, int, int)
connectivity::sdbcx::OGroup::setName(rtl::OUString const&)
connectivity::sdbcx::OGroup::supportsService(rtl::OUString const&)
connectivity::sdbcx::OGroup::~OGroup()
connectivity::sdbcx::OIndex::OIndex(bool)
connectivity::sdbcx::OIndex::OIndex(rtl::OUString const&, rtl::OUString const&, bool, bool, bool, bool)
connectivity::sdbcx::OIndex::getImplementationName()
connectivity::sdbcx::OIndex::getSupportedServiceNames()
connectivity::sdbcx::OIndex::refreshColumns()
connectivity::sdbcx::OIndex::supportsService(rtl::OUString const&)
connectivity::sdbcx::OIndex::~OIndex()
connectivity::sdbcx::OIndexColumn::OIndexColumn(bool)
connectivity::sdbcx::OIndexColumn::OIndexColumn(bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int, int, int, bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::sdbcx::OIndexColumn::construct()
connectivity::sdbcx::OIndexColumn::createArrayHelper(int) const
connectivity::sdbcx::OIndexColumn::getImplementationName()
connectivity::sdbcx::OIndexColumn::getInfoHelper()
connectivity::sdbcx::OIndexColumn::getSupportedServiceNames()
connectivity::sdbcx::OIndexColumn::supportsService(rtl::OUString const&)
connectivity::sdbcx::OKey::OKey(bool)
connectivity::sdbcx::OKey::OKey(rtl::OUString const&, std::shared_ptr<connectivity::sdbcx::KeyProperties> const&, bool)
connectivity::sdbcx::OKey::acquire()
connectivity::sdbcx::OKey::construct()
connectivity::sdbcx::OKey::createArrayHelper(int) const
connectivity::sdbcx::OKey::createDataDescriptor()
connectivity::sdbcx::OKey::disposing()
connectivity::sdbcx::OKey::getColumns()
connectivity::sdbcx::OKey::getImplementationName()
connectivity::sdbcx::OKey::getInfoHelper()
connectivity::sdbcx::OKey::getName()
connectivity::sdbcx::OKey::getPropertySetInfo()
connectivity::sdbcx::OKey::getSupportedServiceNames()
connectivity::sdbcx::OKey::getTypes()
connectivity::sdbcx::OKey::queryInterface(com::sun::star::uno::Type const&)
connectivity::sdbcx::OKey::release()
connectivity::sdbcx::OKey::setName(rtl::OUString const&)
connectivity::sdbcx::OKey::supportsService(rtl::OUString const&)
connectivity::sdbcx::OKey::~OKey()
connectivity::sdbcx::OTable::OTable(connectivity::sdbcx::OCollection*, bool)
connectivity::sdbcx::OTable::OTable(connectivity::sdbcx::OCollection*, bool, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::sdbcx::OTable::disposing()
connectivity::sdbcx::OTable::getName()
connectivity::sdbcx::OTable::refreshColumns()
connectivity::sdbcx::OTable::refreshIndexes()
connectivity::sdbcx::OTable::refreshKeys()
connectivity::sdbcx::OTable::~OTable()
connectivity::sdbcx::OUser::OUser(bool)
connectivity::sdbcx::OUser::OUser(rtl::OUString const&, bool)
connectivity::sdbcx::OUser::changePassword(rtl::OUString const&, rtl::OUString const&)
connectivity::sdbcx::OUser::getGrantablePrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OUser::getPrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OUser::~OUser()
connectivity::sdbcx::OView::OView(bool, com::sun::star::uno::Reference<com::sun::star::sdbc::XDatabaseMetaData> const&)
connectivity::sdbcx::OView::acquire()
connectivity::sdbcx::OView::getTypes()
connectivity::sdbcx::OView::queryInterface(com::sun::star::uno::Type const&)
connectivity::sdbcx::OView::release()
connectivity::sdbcx::OView::~OView()
connectivity_calc_ODriver
connectivity_dbase_ODriver
connectivity_flat_ODriver
connectivity_hsqldb_ODriverDelegator_implementation
connectivity_writer_ODriver
construct_duals
construct_sensitivity_duals
construct_sensitivity_obj
construct_solution
copyToClip(ScDocument*, ScRange const&, ScDocument*)
copy_field(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
copy_hash_table
copy_lp
countActiveLink
countInactiveLink
countsUndoLadder
covariant return thunk to ScEditWindow::GetEditEngine() const
cppcanvas::VCLFactory::createBitmapCanvas(com::sun::star::uno::Reference<com::sun::star::rendering::XBitmapCanvas> const&)
cppu_Any_extraction_failure_msg@@UDK_3.1
cppu_unsatisfied_iquery_msg@@UDK_3_0_0
cppu_unsatisfied_iset_msg@@UDK_3.3
cppunitTestPlugIn
cpuid::getCpuInstructionSetFlags()
crash_basis
createAllObjectProperties(SbxObject*)
createBlendFrame(Size const&, unsigned char, Color, Color)
createLink
createPQExpBuffer
createPackedVector
createUndoLadder
createUndoPaste(ScDocShell&, ScRange const&, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >)
create_BB
create_SOSgroup
create_SOSrec
create_SalInstance
create_hash_table
css_comp_Impress_oox_PowerPointExport
cutToClip(ScDocShell&, ScRange const&, ScDocument*, bool)
daxpy
dbaccess::OAuthenticationContinuation::OAuthenticationContinuation()
dbaccess::OAuthenticationContinuation::canSetAccount()
dbaccess::OAuthenticationContinuation::canSetPassword()
dbaccess::OAuthenticationContinuation::canSetRealm()
dbaccess::OAuthenticationContinuation::canSetUserName()
dbaccess::OAuthenticationContinuation::getRememberAccountModes(com::sun::star::ucb::RememberAuthentication&)
dbaccess::OAuthenticationContinuation::getRememberPasswordModes(com::sun::star::ucb::RememberAuthentication&)
dbaccess::OAuthenticationContinuation::setAccount(rtl::OUString const&)
dbaccess::OAuthenticationContinuation::setPassword(rtl::OUString const&)
dbaccess::OAuthenticationContinuation::setRealm(rtl::OUString const&)
dbaccess::OAuthenticationContinuation::setRememberAccount(com::sun::star::ucb::RememberAuthentication)
dbaccess::OAuthenticationContinuation::setRememberPassword(com::sun::star::ucb::RememberAuthentication)
dbaccess::OAuthenticationContinuation::setUserName(rtl::OUString const&)
dbaccess::ODsnTypeCollection::ODsnTypeCollection(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
dbaccess::ODsnTypeCollection::TypeIterator::TypeIterator(dbaccess::ODsnTypeCollection const*, int)
dbaccess::ODsnTypeCollection::TypeIterator::TypeIterator(dbaccess::ODsnTypeCollection::TypeIterator const&)
dbaccess::ODsnTypeCollection::TypeIterator::~TypeIterator()
dbaccess::ODsnTypeCollection::~ODsnTypeCollection()
dbaccess::ResourceManager::loadString(TranslateId, char const*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, char const*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbahsql::CreateStmtParser::CreateStmtParser()
dbahsql::CreateStmtParser::parseColumnPart(rtl::OUString const&)
dbahsql::CreateStmtParser::parsePrimaryKeys(rtl::OUString const&)
dbahsql::FbCreateStmtParser::appendPrimaryKeyPart(rtl::OUStringBuffer&) const
dbahsql::FbCreateStmtParser::ensureProperTableLengths() const
dbahsql::HsqlImporter::HsqlImporter(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection>&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
dbahsql::HsqlImporter::insertRow(std::vector<com::sun::star::uno::Any, std::allocator<com::sun::star::uno::Any> > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<dbahsql::ColumnDefinition, std::allocator<dbahsql::ColumnDefinition> > const&)
dbahsql::HsqlImporter::parseTableRows(std::vector<int, std::allocator<int> > const&, std::vector<dbahsql::ColumnDefinition, std::allocator<dbahsql::ColumnDefinition> > const&, rtl::OUString const&)
dbahsql::HsqlImporter::processTree(dbahsql::HsqlBinaryNode&, dbahsql::HsqlRowInputStream&, std::vector<dbahsql::ColumnDefinition, std::allocator<dbahsql::ColumnDefinition> > const&, rtl::OUString const&, int)
dbaui::DBSubComponentController::DBSubComponentController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
dbaui::DBSubComponentController::appendError(rtl::OUString const&)
dbaui::DBSubComponentController::attachModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
dbaui::DBSubComponentController::clearError()
dbaui::DBSubComponentController::connectionLostMessage() const
dbaui::DBSubComponentController::disconnect()
dbaui::DBSubComponentController::displayError()
dbaui::DBSubComponentController::disposing(com::sun::star::lang::EventObject const&)
dbaui::DBSubComponentController::getCurrentStartNumber() const
dbaui::DBSubComponentController::getDataSource() const
dbaui::DBSubComponentController::getDataSourceName() const
dbaui::DBSubComponentController::getDatabaseDocument() const
dbaui::DBSubComponentController::getError() const
dbaui::DBSubComponentController::getMetaData() const
dbaui::DBSubComponentController::getNumberFormatter() const
dbaui::DBSubComponentController::getSdbMetaData() const
dbaui::DBSubComponentController::getTitle()
dbaui::DBSubComponentController::getTypes()
dbaui::DBSubComponentController::hasError() const
dbaui::DBSubComponentController::haveDataSource() const
dbaui::DBSubComponentController::initializeConnection(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbaui::DBSubComponentController::isReadOnly() const
dbaui::DBSubComponentController::queryInterface(com::sun::star::uno::Type const&)
dbaui::DBSubComponentController::suspend(unsigned char)
dbaui::DBSubComponentController::~DBSubComponentController()
dbaui::ODataView::ODataView(vcl::Window*, dbaui::IController&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, long)
dbaui::ODataView::attachFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
dbaui::ODataView::~ODataView()
dbaui::OGenericUnoController::Execute(unsigned short, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
dbaui::OGenericUnoController::ImplBroadcastFeatureState(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XStatusListener> const&, bool)
dbaui::OGenericUnoController::ImplInvalidateFeature(int, com::sun::star::uno::Reference<com::sun::star::frame::XStatusListener> const&, bool)
dbaui::OGenericUnoController::InvalidateAll_Impl()
dbaui::OGenericUnoController::InvalidateFeature_Impl()
dbaui::OGenericUnoController::OGenericUnoController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
dbaui::OGenericUnoController::acquire()
dbaui::OGenericUnoController::attachModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
dbaui::OGenericUnoController::closeTask()
dbaui::OGenericUnoController::connect(com::sun::star::uno::Reference<com::sun::star::sdbc::XDataSource> const&)
dbaui::OGenericUnoController::connect(rtl::OUString const&, rtl::OUString const&, dbtools::SQLExceptionInfo*)
dbaui::OGenericUnoController::disposing()
dbaui::OGenericUnoController::disposing(com::sun::star::lang::EventObject const&)
dbaui::OGenericUnoController::fillSupportedFeatures()
dbaui::OGenericUnoController::getLayoutManager(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
dbaui::OGenericUnoController::getModel()
dbaui::OGenericUnoController::getTitle()
dbaui::OGenericUnoController::getTopMostContainerWindow() const
dbaui::OGenericUnoController::getViewData()
dbaui::OGenericUnoController::impl_getTitleHelper_throw()
dbaui::OGenericUnoController::impl_initialize()
dbaui::OGenericUnoController::isFeatureSupported(int)
dbaui::OGenericUnoController::isUserDefinedFeature(rtl::OUString const&) const
dbaui::OGenericUnoController::isUserDefinedFeature(unsigned short)
dbaui::OGenericUnoController::onLoadedMenu(com::sun::star::uno::Reference<com::sun::star::frame::XLayoutManager> const&)
dbaui::OGenericUnoController::release()
dbaui::OGenericUnoController::releaseNumberForComponent()
dbaui::OGenericUnoController::restoreViewData(com::sun::star::uno::Any const&)
dbaui::OGenericUnoController::startConnectionListening(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbaui::OGenericUnoController::stopConnectionListening(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbaui::OGenericUnoController::~OGenericUnoController()
dbaui::UndoManager::UndoManager(cppu::OWeakObject&, osl::Mutex&)
dbaui::UndoManager::acquire()
dbaui::UndoManager::addUndoAction(com::sun::star::uno::Reference<com::sun::star::document::XUndoAction> const&)
dbaui::UndoManager::addUndoManagerListener(com::sun::star::uno::Reference<com::sun::star::document::XUndoManagerListener> const&)
dbaui::UndoManager::clear()
dbaui::UndoManager::clearRedo()
dbaui::UndoManager::disposing()
dbaui::UndoManager::enterHiddenUndoContext()
dbaui::UndoManager::enterUndoContext(rtl::OUString const&)
dbaui::UndoManager::getAllRedoActionTitles()
dbaui::UndoManager::getAllUndoActionTitles()
dbaui::UndoManager::getCurrentRedoActionTitle()
dbaui::UndoManager::getCurrentUndoActionTitle()
dbaui::UndoManager::getParent()
dbaui::UndoManager::isLocked()
dbaui::UndoManager::isRedoPossible()
dbaui::UndoManager::isUndoPossible()
dbaui::UndoManager::leaveUndoContext()
dbaui::UndoManager::lock()
dbaui::UndoManager::redo()
dbaui::UndoManager::release()
dbaui::UndoManager::removeUndoManagerListener(com::sun::star::uno::Reference<com::sun::star::document::XUndoManagerListener> const&)
dbaui::UndoManager::reset()
dbaui::UndoManager::setParent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
dbaui::UndoManager::undo()
dbaui::UndoManager::unlock()
dbaui::UndoManager::~UndoManager()
dbtools::CharsetIteratorDerefHelper::CharsetIteratorDerefHelper(dbtools::CharsetIteratorDerefHelper const&)
dbtools::CharsetIteratorDerefHelper::CharsetIteratorDerefHelper(unsigned short, rtl::OUString const&)
dbtools::DBTypeConversion::getNsFromTime(com::sun::star::util::Time const&)
dbtools::DBTypeConversion::setValue(com::sun::star::uno::Reference<com::sun::star::sdb::XColumnUpdate> const&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, com::sun::star::util::Date const&, rtl::OUString const&, int, short, short)
dbtools::DBTypeConversion::setValue(com::sun::star::uno::Reference<com::sun::star::sdb::XColumnUpdate> const&, com::sun::star::util::Date const&, double const&, short)
dbtools::DatabaseMetaData::DatabaseMetaData()
dbtools::DatabaseMetaData::DatabaseMetaData(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbtools::DatabaseMetaData::DatabaseMetaData(dbtools::DatabaseMetaData const&)
dbtools::DatabaseMetaData::DatabaseMetaData(dbtools::DatabaseMetaData&&)
dbtools::DatabaseMetaData::generateASBeforeCorrelationName() const
dbtools::DatabaseMetaData::getCatalogSeparator() const
dbtools::DatabaseMetaData::getIdentifierQuoteString() const
dbtools::DatabaseMetaData::isConnected() const
dbtools::DatabaseMetaData::operator=(dbtools::DatabaseMetaData const&)
dbtools::DatabaseMetaData::shouldEscapeDateTime() const
dbtools::DatabaseMetaData::shouldSubstituteParameterNames() const
dbtools::DatabaseMetaData::~DatabaseMetaData()
dbtools::FilterManager::FilterManager()
dbtools::FilterManager::appendFilterComponent(rtl::OUStringBuffer&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbtools::FilterManager::getComposedFilter() const
dbtools::FilterManager::getComposedHaving() const
dbtools::FilterManager::isThereAtMostOneFilterComponent(rtl::OUString&) const
dbtools::FilterManager::isThereAtMostOneHavingComponent(rtl::OUString&) const
dbtools::FilterManager::setApplyPublicFilter(bool)
dbtools::FormattedColumnValue::FormattedColumnValue(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XRowSet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::FormattedColumnValue::FormattedColumnValue(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::FormattedColumnValue::getColumn() const
dbtools::FormattedColumnValue::getKeyType() const
dbtools::FormattedColumnValue::setFormattedValue(rtl::OUString const&) const
dbtools::FormattedColumnValue::~FormattedColumnValue()
dbtools::OAutoConnectionDisposer::OAutoConnectionDisposer(com::sun::star::uno::Reference<com::sun::star::sdbc::XRowSet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbtools::OAutoConnectionDisposer::clearConnection()
dbtools::OAutoConnectionDisposer::cursorMoved(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::disposing(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
dbtools::OAutoConnectionDisposer::rowChanged(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::rowSetChanged(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::startPropertyListening(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::OAutoConnectionDisposer::startRowSetListening()
dbtools::OAutoConnectionDisposer::stopPropertyListening(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::OAutoConnectionDisposer::stopRowSetListening()
dbtools::OCharsetMap::CharsetIterator::CharsetIterator(dbtools::OCharsetMap const*, std::_Rb_tree_const_iterator<unsigned short> const&)
dbtools::OCharsetMap::CharsetIterator::operator--()
dbtools::OCharsetMap::lateConstruct()
dbtools::OCharsetMap::~OCharsetMap()
dbtools::OPredicateInputController::OPredicateInputController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, connectivity::IParseContext const*)
dbtools::OPredicateInputController::getSeparatorChars(com::sun::star::lang::Locale const&, char16_t&, char16_t&) const
dbtools::OPredicateInputController::implParseNode(std::unique_ptr<connectivity::OSQLParseNode, std::default_delete<connectivity::OSQLParseNode> >, bool) const
dbtools::OPredicateInputController::implPredicateTree(rtl::OUString&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&) const
dbtools::OPropertyMap::OPropertyMap()
dbtools::ParameterManager::ParameterManager(osl::Mutex&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
dbtools::ParameterManager::addParameterListener(com::sun::star::uno::Reference<com::sun::star::form::XDatabaseParameterListener> const&)
dbtools::ParameterManager::analyzeFieldLinks(dbtools::FilterManager&, bool&)
dbtools::ParameterManager::cacheConnectionInfo()
dbtools::ParameterManager::classifyLinks(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
dbtools::ParameterManager::collectInnerParameters(bool)
dbtools::ParameterManager::completeParameters(com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbtools::ParameterManager::consultParameterListeners(osl::ResettableGuard<osl::Mutex>&)
dbtools::ParameterManager::createFilterConditionFromColumnLink(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString&)
dbtools::ParameterManager::createOuterParameters()
dbtools::ParameterManager::externalParameterVisited(int)
dbtools::ParameterManager::fillLinkedParameters(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
dbtools::ParameterManager::getColumns(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess>&, bool)
dbtools::ParameterManager::getConnection(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection>&)
dbtools::ParameterManager::getParentColumns(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess>&, bool)
dbtools::ParameterManager::initializeComposerByComponent(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::ParameterManager::removeParameterListener(com::sun::star::uno::Reference<com::sun::star::form::XDatabaseParameterListener> const&)
dbtools::ParameterManager::resetParameterValues()
dbtools::ParameterManager::setAllParametersNull()
dbtools::SQLExceptionInfo::SQLExceptionInfo()
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::sdb::SQLContext const&)
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::sdbc::SQLException const&)
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::sdbc::SQLWarning const&)
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::uno::Any const&)
dbtools::SQLExceptionInfo::SQLExceptionInfo(rtl::OUString const&)
dbtools::SQLExceptionInfo::implDetermineType()
dbtools::SQLExceptionInfo::isKindOf(dbtools::SQLExceptionInfo::TYPE) const
dbtools::SQLExceptionInfo::operator=(com::sun::star::sdb::SQLErrorEvent const&)
dbtools::SQLExceptionIteratorHelper::SQLExceptionIteratorHelper(com::sun::star::sdbc::SQLException const&)
dbtools::SQLExceptionIteratorHelper::SQLExceptionIteratorHelper(dbtools::SQLExceptionInfo const&)
dbtools::SQLExceptionIteratorHelper::current(dbtools::SQLExceptionInfo&) const
dbtools::SQLExceptionIteratorHelper::next()
dbtools::StatementComposer::StatementComposer(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&, int, bool)
dbtools::StatementComposer::getQuery()
dbtools::StatementComposer::setFilter(rtl::OUString const&)
dbtools::StatementComposer::setHavingClause(rtl::OUString const&)
dbtools::StatementComposer::setOrder(rtl::OUString const&)
dbtools::StatementComposer::~StatementComposer()
dbtools::canDelete(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::collectColumnInformation(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::multimap<rtl::OUString, std::pair<std::pair<bool, bool>, int>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, std::pair<std::pair<bool, bool>, int> > > >&)
dbtools::createSDBCXColumn(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&, bool, bool, bool, bool, int)
dbtools::createStandardCreateStatement(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, dbtools::ISQLStatementHelper*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbtools::getBooleanDataSourceSetting(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
dbtools::getTableFields(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
dbtools::isAggregateColumn(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::isAggregateColumn(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const&)
dbtools::isDataSourcePropertyEnabled(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, bool)
dbtools::param::ParameterWrapperContainer::ParameterWrapperContainer()
dbtools::param::ParameterWrapperContainer::ParameterWrapperContainer(com::sun::star::uno::Reference<com::sun::star::sdb::XSingleSelectQueryAnalyzer> const&)
dbtools::param::ParameterWrapperContainer::createEnumeration()
dbtools::param::ParameterWrapperContainer::disposing()
dbtools::param::ParameterWrapperContainer::getByIndex(int)
dbtools::param::ParameterWrapperContainer::getCount()
dbtools::param::ParameterWrapperContainer::getElementType()
dbtools::param::ParameterWrapperContainer::hasElements()
dbtools::param::ParameterWrapperContainer::impl_checkDisposed_throw()
dbtools::param::ParameterWrapperContainer::~ParameterWrapperContainer()
dbtools::throwFeatureNotImplementedRuntimeException(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
dcopy
ddot
ddrand
debug_print
debug_print_bounds
debug_print_solution
decrementUndoLadder
default_basis
del_column
del_columnex
del_constraint
del_constraintex
del_splitvars
del_varnameex
delete_SOSrec
der_alloc
desktop::CallbackFlushHandler::CallbackData::getJson[abi:cxx11]() const
desktop::CallbackFlushHandler::CallbackData::getPayload[abi:cxx11]() const
desktop::CallbackFlushHandler::CallbackData::getRectangleAndPart() const
desktop::CallbackFlushHandler::CallbackData::getViewId() const
desktop::CallbackFlushHandler::CallbackData::setJson(boost::property_tree::basic_ptree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
desktop::CallbackFlushHandler::CallbackData::setJson(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
desktop::CallbackFlushHandler::CallbackData::updateRectangleAndPart(desktop::RectangleAndPart const&)
desktop::CallbackFlushHandler::CallbackData::validate() const
desktop::CallbackFlushHandler::CallbackFlushHandler(_LibreOfficeKitDocument*, void (*)(int, char const*, void*), void*)
desktop::CallbackFlushHandler::Invoke()
desktop::CallbackFlushHandler::TimeoutIdle::Invoke()
desktop::CallbackFlushHandler::TimeoutIdle::TimeoutIdle(desktop::CallbackFlushHandler*)
desktop::CallbackFlushHandler::addViewStates(int)
desktop::CallbackFlushHandler::enqueueUpdatedType(int, SfxViewShell const*, int)
desktop::CallbackFlushHandler::enqueueUpdatedTypes()
desktop::CallbackFlushHandler::libreOfficeKitViewCallback(int, char const*)
desktop::CallbackFlushHandler::libreOfficeKitViewCallbackWithViewId(int, char const*, int)
desktop::CallbackFlushHandler::libreOfficeKitViewInvalidateTilesCallback(tools::Rectangle const*, int)
desktop::CallbackFlushHandler::libreOfficeKitViewUpdatedCallback(int)
desktop::CallbackFlushHandler::libreOfficeKitViewUpdatedCallbackPerViewId(int, int, int)
desktop::CallbackFlushHandler::processInvalidateTilesEvent(int, desktop::CallbackFlushHandler::CallbackData&)
desktop::CallbackFlushHandler::processWindowEvent(int, desktop::CallbackFlushHandler::CallbackData&)
desktop::CallbackFlushHandler::queue(int, desktop::CallbackFlushHandler::CallbackData&)
desktop::CallbackFlushHandler::removeAll(int)
desktop::CallbackFlushHandler::removeAll(int, std::function<bool (desktop::CallbackFlushHandler::CallbackData const&)> const&)
desktop::CallbackFlushHandler::removeViewStates(int)
desktop::CallbackFlushHandler::resetUpdatedType(int)
desktop::CallbackFlushHandler::resetUpdatedTypePerViewId(int, int)
desktop::CallbackFlushHandler::setUpdatedType(int, bool)
desktop::CallbackFlushHandler::setUpdatedTypePerViewId(int, int, int, bool)
desktop::CallbackFlushHandler::toQueue2(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
desktop::CallbackFlushHandler::toQueue2(std::reverse_iterator<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >)
desktop::CallbackFlushHandler::~CallbackFlushHandler()
desktop::LibLODocument_Impl::LibLODocument_Impl(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&, int)
desktop::LibLODocument_Impl::~LibLODocument_Impl()
desktop::LibLibreOffice_Impl::LibLibreOffice_Impl()
desktop::LibLibreOffice_Impl::~LibLibreOffice_Impl()
desktop::Lockfile::Lockfile(bool)
desktop::Lockfile::isStale() const
desktop::Lockfile::syncToFile() const
desktop::Lockfile::~Lockfile()
destroyPQExpBuffer
displayException(com::sun::star::sdb::SQLContext const&, com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&)
dl_cairo_surface_set_device_scale(_cairo_surface*, double, double)
dload
dnormi
dp_misc::DescriptionInfoset::DescriptionInfoset(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::xml::dom::XNode> const&)
dp_misc::DescriptionInfoset::getDependencies() const
dp_misc::DescriptionInfoset::getIconURL(bool) const
dp_misc::DescriptionInfoset::getLocalizedDescriptionURL() const
dp_misc::DescriptionInfoset::getLocalizedDisplayName() const
dp_misc::DescriptionInfoset::getLocalizedLicenseURL() const
dp_misc::DescriptionInfoset::getSimpleLicenseAttributes() const
dp_misc::DescriptionInfoset::getSupportedPlatforms() const
dp_misc::DescriptionInfoset::getUpdateInformationUrls() const
dp_misc::DescriptionInfoset::~DescriptionInfoset()
dp_misc::expandUnoRcTerm(rtl::OUString const&)
dp_misc::expandUnoRcUrl(rtl::OUString const&)
dp_misc::generateIdentifier(std::optional<rtl::OUString> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::generateLegacyIdentifier(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::getDescriptionInfoset(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::getExtensionDefaultUpdateURL()
dp_misc::getHighestVersion(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
dp_misc::getOfficeLanguageTag()
dp_misc::getPlatformString()
dp_misc::hasValidPlatform(com::sun::star::uno::Sequence<rtl::OUString> const&)
dp_misc::interactContinuation(com::sun::star::uno::Any const&, com::sun::star::uno::Type const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, bool*, bool*)
dp_misc::makeRcTerm(rtl::OUString const&)
dp_misc::makeURLAppendSysPathSegment(rtl::OUString const&, rtl::OUString const&)
dp_misc::platform_fits(rtl::OUString const&)
dp_misc::readFile(ucbhelper::Content&)
dp_misc::readLine(rtl::OUString*, rtl::OUString const&, ucbhelper::Content&, unsigned short)
dp_misc::readProperties(std::vector<std::pair<rtl::OUString, rtl::OUString>, std::allocator<std::pair<rtl::OUString, rtl::OUString> > >&, ucbhelper::Content&)
drawinglayer::Primitive2dXmlDump::Primitive2dXmlDump()
drawinglayer::Primitive2dXmlDump::decomposeAndWrite(drawinglayer::primitive2d::Primitive2DContainer const&, tools::XmlWriter&)
drawinglayer::Primitive2dXmlDump::dump(drawinglayer::primitive2d::Primitive2DContainer const&, rtl::OUString const&)
drawinglayer::Primitive2dXmlDump::~Primitive2dXmlDump()
drawinglayer::animation::AnimationEntry::AnimationEntry()
drawinglayer::animation::AnimationEntry::~AnimationEntry()
drawinglayer::animation::AnimationEntryFixed::AnimationEntryFixed(double, double)
drawinglayer::animation::AnimationEntryFixed::clone() const
drawinglayer::animation::AnimationEntryFixed::getDuration() const
drawinglayer::animation::AnimationEntryFixed::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryFixed::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryFixed::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryFixed::~AnimationEntryFixed()
drawinglayer::animation::AnimationEntryLinear::AnimationEntryLinear(double, double, double, double)
drawinglayer::animation::AnimationEntryLinear::clone() const
drawinglayer::animation::AnimationEntryLinear::getDuration() const
drawinglayer::animation::AnimationEntryLinear::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryLinear::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryLinear::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryLinear::~AnimationEntryLinear()
drawinglayer::animation::AnimationEntryList::AnimationEntryList()
drawinglayer::animation::AnimationEntryList::clone() const
drawinglayer::animation::AnimationEntryList::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryList::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryList::impGetIndexAtTime(double, double&) const
drawinglayer::animation::AnimationEntryList::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryList::~AnimationEntryList()
drawinglayer::animation::AnimationEntryLoop::AnimationEntryLoop(unsigned int)
drawinglayer::animation::AnimationEntryLoop::clone() const
drawinglayer::animation::AnimationEntryLoop::getDuration() const
drawinglayer::animation::AnimationEntryLoop::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryLoop::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryLoop::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryLoop::~AnimationEntryLoop()
drawinglayer::attribute::FillGradientAttribute::FillGradientAttribute()
drawinglayer::attribute::FillGradientAttribute::FillGradientAttribute(drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::attribute::FillGradientAttribute::FillGradientAttribute(drawinglayer::attribute::FillGradientAttribute&&)
drawinglayer::attribute::FillGradientAttribute::FillGradientAttribute(drawinglayer::attribute::GradientStyle, double, double, double, double, basegfx::BColor const&, basegfx::BColor const&, unsigned short)
drawinglayer::attribute::FillGradientAttribute::getAngle() const
drawinglayer::attribute::FillGradientAttribute::getBorder() const
drawinglayer::attribute::FillGradientAttribute::getOffsetX() const
drawinglayer::attribute::FillGradientAttribute::getOffsetY() const
drawinglayer::attribute::FillGradientAttribute::getSteps() const
drawinglayer::attribute::FillGradientAttribute::getStyle() const
drawinglayer::attribute::FillGradientAttribute::~FillGradientAttribute()
drawinglayer::attribute::FillGraphicAttribute::FillGraphicAttribute(Graphic const&, basegfx::B2DRange const&, bool, double, double)
drawinglayer::attribute::FillGraphicAttribute::FillGraphicAttribute(drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::attribute::FillGraphicAttribute::getGraphic() const
drawinglayer::attribute::FillGraphicAttribute::getGraphicRange() const
drawinglayer::attribute::FillGraphicAttribute::getOffsetX() const
drawinglayer::attribute::FillGraphicAttribute::getOffsetY() const
drawinglayer::attribute::FillGraphicAttribute::getTiling() const
drawinglayer::attribute::FillGraphicAttribute::isDefault() const
drawinglayer::attribute::FillGraphicAttribute::operator=(drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::attribute::FillGraphicAttribute::operator==(drawinglayer::attribute::FillGraphicAttribute const&) const
drawinglayer::attribute::FillGraphicAttribute::~FillGraphicAttribute()
drawinglayer::attribute::FillHatchAttribute::FillHatchAttribute()
drawinglayer::attribute::FillHatchAttribute::FillHatchAttribute(drawinglayer::attribute::FillHatchAttribute const&)
drawinglayer::attribute::FillHatchAttribute::FillHatchAttribute(drawinglayer::attribute::FillHatchAttribute&&)
drawinglayer::attribute::FillHatchAttribute::FillHatchAttribute(drawinglayer::attribute::HatchStyle, double, double, basegfx::BColor const&, unsigned int, bool)
drawinglayer::attribute::FillHatchAttribute::getAngle() const
drawinglayer::attribute::FillHatchAttribute::getDistance() const
drawinglayer::attribute::FillHatchAttribute::getMinimalDiscreteDistance() const
drawinglayer::attribute::FillHatchAttribute::getStyle() const
drawinglayer::attribute::FillHatchAttribute::operator=(drawinglayer::attribute::FillHatchAttribute const&)
drawinglayer::attribute::FillHatchAttribute::operator==(drawinglayer::attribute::FillHatchAttribute const&) const
drawinglayer::attribute::FillHatchAttribute::~FillHatchAttribute()
drawinglayer::attribute::FontAttribute::FontAttribute()
drawinglayer::attribute::FontAttribute::FontAttribute(drawinglayer::attribute::FontAttribute const&)
drawinglayer::attribute::FontAttribute::FontAttribute(drawinglayer::attribute::FontAttribute&&)
drawinglayer::attribute::FontAttribute::FontAttribute(rtl::OUString const&, rtl::OUString const&, unsigned short, bool, bool, bool, bool, bool, bool, bool)
drawinglayer::attribute::FontAttribute::getBiDiStrong() const
drawinglayer::attribute::FontAttribute::getFamilyName() const
drawinglayer::attribute::FontAttribute::getItalic() const
drawinglayer::attribute::FontAttribute::getMonospaced() const
drawinglayer::attribute::FontAttribute::getOutline() const
drawinglayer::attribute::FontAttribute::getRTL() const
drawinglayer::attribute::FontAttribute::getStyleName() const
drawinglayer::attribute::FontAttribute::getSymbol() const
drawinglayer::attribute::FontAttribute::getVertical() const
drawinglayer::attribute::FontAttribute::getWeight() const
drawinglayer::attribute::FontAttribute::operator=(drawinglayer::attribute::FontAttribute const&)
drawinglayer::attribute::FontAttribute::operator==(drawinglayer::attribute::FontAttribute const&) const
drawinglayer::attribute::FontAttribute::~FontAttribute()
drawinglayer::attribute::LineAttribute::LineAttribute()
drawinglayer::attribute::LineAttribute::LineAttribute(basegfx::BColor const&, double, basegfx::B2DLineJoin, com::sun::star::drawing::LineCap, double)
drawinglayer::attribute::LineAttribute::LineAttribute(drawinglayer::attribute::LineAttribute const&)
drawinglayer::attribute::LineAttribute::getColor() const
drawinglayer::attribute::LineAttribute::getLineCap() const
drawinglayer::attribute::LineAttribute::getLineJoin() const
drawinglayer::attribute::LineAttribute::getMiterMinimumAngle() const
drawinglayer::attribute::LineAttribute::isDefault() const
drawinglayer::attribute::LineAttribute::operator=(drawinglayer::attribute::LineAttribute const&)
drawinglayer::attribute::LineAttribute::~LineAttribute()
drawinglayer::attribute::LineStartEndAttribute::LineStartEndAttribute()
drawinglayer::attribute::LineStartEndAttribute::LineStartEndAttribute(double, basegfx::B2DPolyPolygon const&, bool)
drawinglayer::attribute::LineStartEndAttribute::LineStartEndAttribute(drawinglayer::attribute::LineStartEndAttribute const&)
drawinglayer::attribute::LineStartEndAttribute::getB2DPolyPolygon() const
drawinglayer::attribute::LineStartEndAttribute::getWidth() const
drawinglayer::attribute::LineStartEndAttribute::isActive() const
drawinglayer::attribute::LineStartEndAttribute::isCentered() const
drawinglayer::attribute::LineStartEndAttribute::isDefault() const
drawinglayer::attribute::LineStartEndAttribute::operator=(drawinglayer::attribute::LineStartEndAttribute const&)
drawinglayer::attribute::LineStartEndAttribute::operator==(drawinglayer::attribute::LineStartEndAttribute const&) const
drawinglayer::attribute::LineStartEndAttribute::~LineStartEndAttribute()
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D()
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D(basegfx::BColor const&)
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D(basegfx::BColor const&, basegfx::BColor const&, basegfx::BColor const&, unsigned short)
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D(drawinglayer::attribute::MaterialAttribute3D const&)
drawinglayer::attribute::MaterialAttribute3D::getColor() const
drawinglayer::attribute::MaterialAttribute3D::getEmission() const
drawinglayer::attribute::MaterialAttribute3D::getSpecular() const
drawinglayer::attribute::MaterialAttribute3D::getSpecularIntensity() const
drawinglayer::attribute::MaterialAttribute3D::operator=(drawinglayer::attribute::MaterialAttribute3D const&)
drawinglayer::attribute::MaterialAttribute3D::operator==(drawinglayer::attribute::MaterialAttribute3D const&) const
drawinglayer::attribute::MaterialAttribute3D::~MaterialAttribute3D()
drawinglayer::attribute::Sdr3DLightAttribute::Sdr3DLightAttribute(basegfx::BColor const&, basegfx::B3DVector const&, bool)
drawinglayer::attribute::Sdr3DLightAttribute::Sdr3DLightAttribute(drawinglayer::attribute::Sdr3DLightAttribute const&)
drawinglayer::attribute::Sdr3DLightAttribute::getColor() const
drawinglayer::attribute::Sdr3DLightAttribute::getSpecular() const
drawinglayer::attribute::Sdr3DLightAttribute::operator=(drawinglayer::attribute::Sdr3DLightAttribute const&)
drawinglayer::attribute::Sdr3DLightAttribute::operator==(drawinglayer::attribute::Sdr3DLightAttribute const&) const
drawinglayer::attribute::Sdr3DLightAttribute::~Sdr3DLightAttribute()
drawinglayer::attribute::Sdr3DObjectAttribute::Sdr3DObjectAttribute(com::sun::star::drawing::NormalsKind, com::sun::star::drawing::TextureProjectionMode, com::sun::star::drawing::TextureProjectionMode, com::sun::star::drawing::TextureKind2, com::sun::star::drawing::TextureMode, drawinglayer::attribute::MaterialAttribute3D const&, bool, bool, bool, bool, bool)
drawinglayer::attribute::Sdr3DObjectAttribute::Sdr3DObjectAttribute(drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::attribute::Sdr3DObjectAttribute::getDoubleSided() const
drawinglayer::attribute::Sdr3DObjectAttribute::getMaterial() const
drawinglayer::attribute::Sdr3DObjectAttribute::getNormalsInvert() const
drawinglayer::attribute::Sdr3DObjectAttribute::getNormalsKind() const
drawinglayer::attribute::Sdr3DObjectAttribute::getReducedLineGeometry() const
drawinglayer::attribute::Sdr3DObjectAttribute::getShadow3D() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureFilter() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureKind() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureMode() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureProjectionX() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureProjectionY() const
drawinglayer::attribute::Sdr3DObjectAttribute::operator=(drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::attribute::Sdr3DObjectAttribute::operator==(drawinglayer::attribute::Sdr3DObjectAttribute const&) const
drawinglayer::attribute::Sdr3DObjectAttribute::~Sdr3DObjectAttribute()
drawinglayer::attribute::SdrAllFillAttributesHelper::SdrAllFillAttributesHelper(Color const&)
drawinglayer::attribute::SdrAllFillAttributesHelper::SdrAllFillAttributesHelper(SfxItemSet const&)
drawinglayer::attribute::SdrAllFillAttributesHelper::createPrimitive2DSequence(basegfx::B2DRange const&, basegfx::B2DRange const&)
drawinglayer::attribute::SdrAllFillAttributesHelper::getFillGradientAttribute() const
drawinglayer::attribute::SdrAllFillAttributesHelper::~SdrAllFillAttributesHelper()
drawinglayer::attribute::SdrFillAttribute::SdrFillAttribute()
drawinglayer::attribute::SdrFillAttribute::SdrFillAttribute(double, basegfx::BColor const&, drawinglayer::attribute::FillGradientAttribute const&, drawinglayer::attribute::FillHatchAttribute const&, drawinglayer::attribute::SdrFillGraphicAttribute const&)
drawinglayer::attribute::SdrFillAttribute::SdrFillAttribute(drawinglayer::attribute::SdrFillAttribute const&)
drawinglayer::attribute::SdrFillAttribute::SdrFillAttribute(drawinglayer::attribute::SdrFillAttribute&&)
drawinglayer::attribute::SdrFillAttribute::~SdrFillAttribute()
drawinglayer::attribute::SdrFillGraphicAttribute::SdrFillGraphicAttribute()
drawinglayer::attribute::SdrFillGraphicAttribute::SdrFillGraphicAttribute(Graphic const&, basegfx::B2DVector const&, basegfx::B2DVector const&, basegfx::B2DVector const&, basegfx::B2DVector const&, basegfx::B2DVector const&, bool, bool, bool)
drawinglayer::attribute::SdrFillGraphicAttribute::SdrFillGraphicAttribute(drawinglayer::attribute::SdrFillGraphicAttribute const&)
drawinglayer::attribute::SdrFillGraphicAttribute::SdrFillGraphicAttribute(drawinglayer::attribute::SdrFillGraphicAttribute&&)
drawinglayer::attribute::SdrFillGraphicAttribute::getGraphicLogicSize() const
drawinglayer::attribute::SdrFillGraphicAttribute::getOffset() const
drawinglayer::attribute::SdrFillGraphicAttribute::getOffsetPosition() const
drawinglayer::attribute::SdrFillGraphicAttribute::getRectPoint() const
drawinglayer::attribute::SdrFillGraphicAttribute::getSize() const
drawinglayer::attribute::SdrFillGraphicAttribute::getTiling() const
drawinglayer::attribute::SdrFillGraphicAttribute::operator=(drawinglayer::attribute::SdrFillGraphicAttribute const&)
drawinglayer::attribute::SdrFillGraphicAttribute::operator==(drawinglayer::attribute::SdrFillGraphicAttribute const&) const
drawinglayer::attribute::SdrFillGraphicAttribute::~SdrFillGraphicAttribute()
drawinglayer::attribute::SdrGlowAttribute::SdrGlowAttribute()
drawinglayer::attribute::SdrGlowAttribute::SdrGlowAttribute(drawinglayer::attribute::SdrGlowAttribute const&)
drawinglayer::attribute::SdrGlowAttribute::SdrGlowAttribute(drawinglayer::attribute::SdrGlowAttribute&&)
drawinglayer::attribute::SdrGlowAttribute::SdrGlowAttribute(int, Color const&)
drawinglayer::attribute::SdrGlowAttribute::operator=(drawinglayer::attribute::SdrGlowAttribute&&)
drawinglayer::attribute::SdrGlowAttribute::~SdrGlowAttribute()
drawinglayer::attribute::SdrLightingAttribute::SdrLightingAttribute()
drawinglayer::attribute::SdrLightingAttribute::SdrLightingAttribute(basegfx::BColor const&, std::vector<drawinglayer::attribute::Sdr3DLightAttribute, std::allocator<drawinglayer::attribute::Sdr3DLightAttribute> >&&)
drawinglayer::attribute::SdrLightingAttribute::SdrLightingAttribute(drawinglayer::attribute::SdrLightingAttribute const&)
drawinglayer::attribute::SdrLightingAttribute::SdrLightingAttribute(drawinglayer::attribute::SdrLightingAttribute&&)
drawinglayer::attribute::SdrLightingAttribute::getAmbientLightColor() const
drawinglayer::attribute::SdrLightingAttribute::operator=(drawinglayer::attribute::SdrLightingAttribute const&)
drawinglayer::attribute::SdrLightingAttribute::operator==(drawinglayer::attribute::SdrLightingAttribute const&) const
drawinglayer::attribute::SdrLightingAttribute::solveColorModel(basegfx::B3DVector const&, basegfx::BColor const&, basegfx::BColor const&, basegfx::BColor const&, unsigned short) const
drawinglayer::attribute::SdrLightingAttribute::~SdrLightingAttribute()
drawinglayer::attribute::SdrLineAttribute::SdrLineAttribute()
drawinglayer::attribute::SdrLineAttribute::SdrLineAttribute(basegfx::B2DLineJoin, double, double, basegfx::BColor const&, com::sun::star::drawing::LineCap, std::vector<double, std::allocator<double> >&&, double)
drawinglayer::attribute::SdrLineAttribute::SdrLineAttribute(drawinglayer::attribute::SdrLineAttribute const&)
drawinglayer::attribute::SdrLineAttribute::SdrLineAttribute(drawinglayer::attribute::SdrLineAttribute&&)
drawinglayer::attribute::SdrLineAttribute::~SdrLineAttribute()
drawinglayer::attribute::SdrLineFillShadowAttribute3D::SdrLineFillShadowAttribute3D()
drawinglayer::attribute::SdrLineFillShadowAttribute3D::SdrLineFillShadowAttribute3D(drawinglayer::attribute::SdrLineAttribute const&, drawinglayer::attribute::SdrFillAttribute const&, drawinglayer::attribute::SdrLineStartEndAttribute const&, drawinglayer::attribute::SdrShadowAttribute const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::attribute::SdrLineFillShadowAttribute3D::operator==(drawinglayer::attribute::SdrLineFillShadowAttribute3D const&) const
drawinglayer::attribute::SdrLineStartEndAttribute::SdrLineStartEndAttribute()
drawinglayer::attribute::SdrLineStartEndAttribute::SdrLineStartEndAttribute(basegfx::B2DPolyPolygon const&, basegfx::B2DPolyPolygon const&, double, double, bool, bool, bool, bool)
drawinglayer::attribute::SdrLineStartEndAttribute::SdrLineStartEndAttribute(drawinglayer::attribute::SdrLineStartEndAttribute const&)
drawinglayer::attribute::SdrLineStartEndAttribute::SdrLineStartEndAttribute(drawinglayer::attribute::SdrLineStartEndAttribute&&)
drawinglayer::attribute::SdrLineStartEndAttribute::~SdrLineStartEndAttribute()
drawinglayer::attribute::SdrSceneAttribute::SdrSceneAttribute()
drawinglayer::attribute::SdrSceneAttribute::SdrSceneAttribute(double, double, com::sun::star::drawing::ProjectionMode, com::sun::star::drawing::ShadeMode, bool)
drawinglayer::attribute::SdrSceneAttribute::SdrSceneAttribute(drawinglayer::attribute::SdrSceneAttribute const&)
drawinglayer::attribute::SdrSceneAttribute::SdrSceneAttribute(drawinglayer::attribute::SdrSceneAttribute&&)
drawinglayer::attribute::SdrSceneAttribute::getShadeMode() const
drawinglayer::attribute::SdrSceneAttribute::getTwoSidedLighting() const
drawinglayer::attribute::SdrSceneAttribute::operator=(drawinglayer::attribute::SdrSceneAttribute const&)
drawinglayer::attribute::SdrSceneAttribute::operator==(drawinglayer::attribute::SdrSceneAttribute const&) const
drawinglayer::attribute::SdrSceneAttribute::~SdrSceneAttribute()
drawinglayer::attribute::SdrShadowAttribute::SdrShadowAttribute()
drawinglayer::attribute::SdrShadowAttribute::SdrShadowAttribute(basegfx::B2DVector const&, basegfx::B2DVector const&, double, int, basegfx::BColor const&)
drawinglayer::attribute::SdrShadowAttribute::SdrShadowAttribute(drawinglayer::attribute::SdrShadowAttribute const&)
drawinglayer::attribute::SdrShadowAttribute::SdrShadowAttribute(drawinglayer::attribute::SdrShadowAttribute&&)
drawinglayer::attribute::SdrShadowAttribute::~SdrShadowAttribute()
drawinglayer::attribute::StrokeAttribute::StrokeAttribute()
drawinglayer::attribute::StrokeAttribute::StrokeAttribute(drawinglayer::attribute::StrokeAttribute const&)
drawinglayer::attribute::StrokeAttribute::StrokeAttribute(drawinglayer::attribute::StrokeAttribute&&)
drawinglayer::attribute::StrokeAttribute::StrokeAttribute(std::vector<double, std::allocator<double> >&&, double)
drawinglayer::attribute::StrokeAttribute::getDotDashArray() const
drawinglayer::attribute::StrokeAttribute::getFullDotDashLen() const
drawinglayer::attribute::StrokeAttribute::isDefault() const
drawinglayer::attribute::StrokeAttribute::operator=(drawinglayer::attribute::StrokeAttribute const&)
drawinglayer::attribute::StrokeAttribute::operator=(drawinglayer::attribute::StrokeAttribute&&)
drawinglayer::attribute::StrokeAttribute::~StrokeAttribute()
drawinglayer::convertToBitmapEx(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::geometry::ViewInformation2D const&, unsigned int, unsigned int, unsigned int)
drawinglayer::geometry::ViewInformation2D::ViewInformation2D()
drawinglayer::geometry::ViewInformation2D::ViewInformation2D(basegfx::B2DHomMatrix const&, basegfx::B2DHomMatrix const&, basegfx::B2DRange const&, com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&, double, bool)
drawinglayer::geometry::ViewInformation2D::ViewInformation2D(drawinglayer::geometry::ViewInformation2D const&)
drawinglayer::geometry::ViewInformation2D::ViewInformation2D(drawinglayer::geometry::ViewInformation2D&&)
drawinglayer::geometry::ViewInformation2D::getDiscreteViewport() const
drawinglayer::geometry::ViewInformation2D::getReducedDisplayQuality() const
drawinglayer::geometry::ViewInformation2D::operator==(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::geometry::ViewInformation2D::~ViewInformation2D()
drawinglayer::geometry::ViewInformation3D::ViewInformation3D()
drawinglayer::geometry::ViewInformation3D::ViewInformation3D(basegfx::B3DHomMatrix const&, basegfx::B3DHomMatrix const&, basegfx::B3DHomMatrix const&, basegfx::B3DHomMatrix const&, double, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::geometry::ViewInformation3D::ViewInformation3D(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::geometry::ViewInformation3D::ViewInformation3D(drawinglayer::geometry::ViewInformation3D const&)
drawinglayer::geometry::ViewInformation3D::ViewInformation3D(drawinglayer::geometry::ViewInformation3D&&)
drawinglayer::geometry::ViewInformation3D::operator==(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::geometry::ViewInformation3D::~ViewInformation3D()
drawinglayer::primitive2d::AnimatedBlinkPrimitive2D::AnimatedBlinkPrimitive2D(drawinglayer::animation::AnimationEntry const&, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::AnimatedBlinkPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::AnimatedBlinkPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::AnimatedInterpolatePrimitive2D::AnimatedInterpolatePrimitive2D(std::vector<basegfx::B2DHomMatrix, std::allocator<basegfx::B2DHomMatrix> > const&, drawinglayer::animation::AnimationEntry const&, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::AnimatedInterpolatePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::AnimatedInterpolatePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::AnimatedSwitchPrimitive2D(drawinglayer::animation::AnimationEntry const&, drawinglayer::primitive2d::Primitive2DContainer&&, bool)
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::setAnimationEntry(drawinglayer::animation::AnimationEntry const&)
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::~AnimatedSwitchPrimitive2D()
drawinglayer::primitive2d::BackgroundColorPrimitive2D::BackgroundColorPrimitive2D(basegfx::BColor const&, double)
drawinglayer::primitive2d::BackgroundColorPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::BasePrimitive2D::BasePrimitive2D()
drawinglayer::primitive2d::BasePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BasePrimitive2D::~BasePrimitive2D()
drawinglayer::primitive2d::BitmapPrimitive2D::BitmapPrimitive2D(com::sun::star::uno::Reference<com::sun::star::awt::XBitmap> const&, basegfx::B2DHomMatrix const&)
drawinglayer::primitive2d::BitmapPrimitive2D::estimateUsage()
drawinglayer::primitive2d::BitmapPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BitmapPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::BitmapPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::BorderLine::BorderLine(double)
drawinglayer::primitive2d::BorderLine::BorderLine(drawinglayer::attribute::LineAttribute const&, double, double, double, double)
drawinglayer::primitive2d::BorderLine::operator==(drawinglayer::primitive2d::BorderLine const&) const
drawinglayer::primitive2d::BorderLine::~BorderLine()
drawinglayer::primitive2d::BorderLinePrimitive2D::BorderLinePrimitive2D(basegfx::B2DPoint const&, basegfx::B2DPoint const&, std::vector<drawinglayer::primitive2d::BorderLine, std::allocator<drawinglayer::primitive2d::BorderLine> >&&, drawinglayer::attribute::StrokeAttribute const&)
drawinglayer::primitive2d::BorderLinePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BorderLinePrimitive2D::getFullWidth() const
drawinglayer::primitive2d::BorderLinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::BorderLinePrimitive2D::isHorizontalOrVertical(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BorderLinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::BufferedDecompositionPrimitive2D::BufferedDecompositionPrimitive2D()
drawinglayer::primitive2d::ControlPrimitive2D::ControlPrimitive2D(basegfx::B2DHomMatrix const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
drawinglayer::primitive2d::ControlPrimitive2D::ControlPrimitive2D(basegfx::B2DHomMatrix const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, com::sun::star::uno::Reference<com::sun::star::awt::XControl> const&)
drawinglayer::primitive2d::ControlPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::createBitmapDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::createPlaceholderDecomposition() const
drawinglayer::primitive2d::ControlPrimitive2D::createXControl()
drawinglayer::primitive2d::ControlPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ControlPrimitive2D::getXControl() const
drawinglayer::primitive2d::ControlPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::DiscreteBitmapPrimitive2D(BitmapEx const&, basegfx::B2DPoint const&)
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::DiscreteShadow::DiscreteShadow(BitmapEx const&)
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::DiscreteShadowPrimitive2D(basegfx::B2DHomMatrix const&, drawinglayer::primitive2d::DiscreteShadow const&)
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::Embedded3DPrimitive2D::Embedded3DPrimitive2D(drawinglayer::primitive3d::Primitive3DContainer const&, basegfx::B2DHomMatrix const&, drawinglayer::geometry::ViewInformation3D const&, basegfx::B3DVector const&, double, basegfx::B3DRange const&)
drawinglayer::primitive2d::Embedded3DPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::Embedded3DPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::Embedded3DPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::Embedded3DPrimitive2D::impGetShadow3D() const
drawinglayer::primitive2d::Embedded3DPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::FillGradientPrimitive2D(basegfx::B2DRange const&, basegfx::B2DRange const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::FillGradientPrimitive2D::FillGradientPrimitive2D(basegfx::B2DRange const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::FillGradientPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::createFill(drawinglayer::primitive2d::Primitive2DContainer&, bool) const
drawinglayer::primitive2d::FillGradientPrimitive2D::createNonOverlappingFill(drawinglayer::primitive2d::Primitive2DContainer&, std::vector<drawinglayer::texture::B2DHomMatrixAndBColor, std::allocator<drawinglayer::texture::B2DHomMatrixAndBColor> > const&, basegfx::BColor const&, basegfx::B2DPolygon const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::createOverlappingFill(drawinglayer::primitive2d::Primitive2DContainer&, std::vector<drawinglayer::texture::B2DHomMatrixAndBColor, std::allocator<drawinglayer::texture::B2DHomMatrixAndBColor> > const&, basegfx::BColor const&, basegfx::B2DPolygon const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::generateMatricesAndColors(std::vector<drawinglayer::texture::B2DHomMatrixAndBColor, std::allocator<drawinglayer::texture::B2DHomMatrixAndBColor> >&, basegfx::BColor&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::FillGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::FillGraphicPrimitive2D::FillGraphicPrimitive2D(basegfx::B2DHomMatrix const&, drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::primitive2d::FillGraphicPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGraphicPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGraphicPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::FillGraphicPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::GlowPrimitive2D(Color const&, double, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::GlowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GlowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GraphicPrimitive2D::GraphicPrimitive2D(basegfx::B2DHomMatrix const&, GraphicObject const&)
drawinglayer::primitive2d::GraphicPrimitive2D::GraphicPrimitive2D(basegfx::B2DHomMatrix const&, GraphicObject const&, GraphicAttr const&)
drawinglayer::primitive2d::GraphicPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GraphicPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GraphicPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GraphicPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::GridPrimitive2D(basegfx::B2DHomMatrix const&, double, double, double, double, unsigned int, unsigned int, basegfx::BColor const&, BitmapEx const&)
drawinglayer::primitive2d::GridPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GridPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GroupPrimitive2D::GroupPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::GroupPrimitive2D::estimateUsage()
drawinglayer::primitive2d::GroupPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GroupPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GroupPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::HelplinePrimitive2D::HelplinePrimitive2D(basegfx::B2DPoint const&, basegfx::B2DVector const&, drawinglayer::primitive2d::HelplineStyle2D, basegfx::BColor const&, basegfx::BColor const&, double)
drawinglayer::primitive2d::HelplinePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HelplinePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HelplinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::HelplinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::HiddenGeometryPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::InvertPrimitive2D::InvertPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::InvertPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::LocalesAreEqual(com::sun::star::lang::Locale const&, com::sun::star::lang::Locale const&)
drawinglayer::primitive2d::MarkerArrayPrimitive2D::MarkerArrayPrimitive2D(std::vector<basegfx::B2DPoint, std::allocator<basegfx::B2DPoint> >&&, BitmapEx const&)
drawinglayer::primitive2d::MarkerArrayPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MarkerArrayPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MarkerArrayPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MarkerArrayPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::MaskPrimitive2D::MaskPrimitive2D(basegfx::B2DPolyPolygon const&, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::MaskPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MaskPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MaskPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::MediaPrimitive2D::MediaPrimitive2D(basegfx::B2DHomMatrix const&, rtl::OUString const&, basegfx::BColor const&, unsigned int, Graphic const&)
drawinglayer::primitive2d::MediaPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MediaPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MediaPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MediaPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::MetafilePrimitive2D::MetafilePrimitive2D(basegfx::B2DHomMatrix const&, GDIMetaFile const&)
drawinglayer::primitive2d::MetafilePrimitive2D::accessMetafile(GDIMetaFile&) const
drawinglayer::primitive2d::MetafilePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MetafilePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MetafilePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MetafilePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ModifiedColorPrimitive2D::ModifiedColorPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&, std::shared_ptr<basegfx::BColorModifier> const&)
drawinglayer::primitive2d::ModifiedColorPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ModifiedColorPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ObjectAndViewTransformationDependentPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ObjectInfoPrimitive2D::ObjectInfoPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
drawinglayer::primitive2d::ObjectInfoPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ObjectInfoPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PageHierarchyPrimitive2D::PageHierarchyPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::PageHierarchyPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PagePreviewPrimitive2D::PagePreviewPrimitive2D(com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&, basegfx::B2DHomMatrix const&, double, double, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::PagePreviewPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PagePreviewPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PagePreviewPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PagePreviewPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::PatternFillPrimitive2D(basegfx::B2DPolyPolygon const&, drawinglayer::primitive2d::Primitive2DContainer&&, basegfx::B2DRange const&)
drawinglayer::primitive2d::PatternFillPrimitive2D::calculateNeededDiscreteBufferSize(unsigned int&, unsigned int&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::createContent(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::createTileImage(unsigned int, unsigned int) const
drawinglayer::primitive2d::PatternFillPrimitive2D::estimateUsage()
drawinglayer::primitive2d::PatternFillPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PatternFillPrimitive2D::getTileSize(unsigned int&, unsigned int&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::PolyPolygonColorPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::BColor const&)
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::PolyPolygonGradientPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::PolyPolygonGradientPrimitive2D(basegfx::B2DPolyPolygon const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::PolyPolygonGraphicPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&, drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::PolyPolygonHairlinePrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::BColor const&)
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::PolyPolygonHatchPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&, basegfx::BColor const&, drawinglayer::attribute::FillHatchAttribute const&)
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::PolyPolygonHatchPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::BColor const&, drawinglayer::attribute::FillHatchAttribute const&)
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::PolyPolygonMarkerPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::BColor const&, basegfx::BColor const&, double)
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::PolyPolygonSelectionPrimitive2D(basegfx::B2DPolyPolygon const&, basegfx::BColor const&, double, double, bool)
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::PolyPolygonStrokePrimitive2D(basegfx::B2DPolyPolygon const&, drawinglayer::attribute::LineAttribute const&)
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::PolyPolygonStrokePrimitive2D(basegfx::B2DPolyPolygon const&, drawinglayer::attribute::LineAttribute const&, drawinglayer::attribute::StrokeAttribute const&)
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::PolygonHairlinePrimitive2D(basegfx::B2DPolygon const&, basegfx::BColor const&)
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::PolygonMarkerPrimitive2D(basegfx::B2DPolygon const&, basegfx::BColor const&, basegfx::BColor const&, double)
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::PolygonStrokeArrowPrimitive2D(basegfx::B2DPolygon const&, drawinglayer::attribute::LineAttribute const&, drawinglayer::attribute::LineStartEndAttribute const&, drawinglayer::attribute::LineStartEndAttribute const&)
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::PolygonStrokeArrowPrimitive2D(basegfx::B2DPolygon const&, drawinglayer::attribute::LineAttribute const&, drawinglayer::attribute::StrokeAttribute const&, drawinglayer::attribute::LineStartEndAttribute const&, drawinglayer::attribute::LineStartEndAttribute const&)
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::PolygonStrokePrimitive2D(basegfx::B2DPolygon const&, drawinglayer::attribute::LineAttribute const&)
drawinglayer::primitive2d::PolygonStrokePrimitive2D::PolygonStrokePrimitive2D(basegfx::B2DPolygon const&, drawinglayer::attribute::LineAttribute const&, drawinglayer::attribute::StrokeAttribute const&)
drawinglayer::primitive2d::PolygonStrokePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::Primitive2DContainer::maybeInvert(bool) const
drawinglayer::primitive2d::Primitive2DContainer::~Primitive2DContainer()
drawinglayer::primitive2d::ScenePrimitive2D::ScenePrimitive2D(drawinglayer::primitive3d::Primitive3DContainer const&, drawinglayer::attribute::SdrSceneAttribute const&, drawinglayer::attribute::SdrLightingAttribute const&, basegfx::B2DHomMatrix const&, drawinglayer::geometry::ViewInformation3D const&)
drawinglayer::primitive2d::ScenePrimitive2D::calculateDiscreteSizes(drawinglayer::geometry::ViewInformation2D const&, basegfx::B2DRange&, basegfx::B2DRange&, basegfx::B2DRange&) const
drawinglayer::primitive2d::ScenePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::getGeometry2D() const
drawinglayer::primitive2d::ScenePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ScenePrimitive2D::getShadow2D() const
drawinglayer::primitive2d::ScenePrimitive2D::impGetShadow3D() const
drawinglayer::primitive2d::ScenePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::tryToCheckLastVisualisationDirectHit(basegfx::B2DPoint const&, bool&) const
drawinglayer::primitive2d::SdrFrameBorderData::SdrConnectStyleData::SdrConnectStyleData(svx::frame::Style const&, basegfx::B2DVector const&, bool)
drawinglayer::primitive2d::SdrFrameBorderData::SdrConnectStyleData::operator==(drawinglayer::primitive2d::SdrFrameBorderData::SdrConnectStyleData const&) const
drawinglayer::primitive2d::SdrFrameBorderData::SdrFrameBorderData(basegfx::B2DPoint const&, basegfx::B2DVector const&, svx::frame::Style const&, Color const*)
drawinglayer::primitive2d::SdrFrameBorderData::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, double) const
drawinglayer::primitive2d::SdrFrameBorderData::getMinimalNonZeroBorderWidth() const
drawinglayer::primitive2d::SdrFrameBorderData::operator==(drawinglayer::primitive2d::SdrFrameBorderData const&) const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::SdrFrameBorderPrimitive2D(std::shared_ptr<std::vector<drawinglayer::primitive2d::SdrFrameBorderData, std::allocator<drawinglayer::primitive2d::SdrFrameBorderData> > >&, bool)
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::ShadowPrimitive2D(basegfx::B2DHomMatrix const&, basegfx::BColor const&, double, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::ShadowPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ShadowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::SoftEdgePrimitive2D(double, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::SoftEdgePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SoftEdgePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::StructureTagPrimitive2D::StructureTagPrimitive2D(vcl::PDFWriter::StructElement const&, bool, bool, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::StructureTagPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::StructureTagPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::SvgLinearGradientPrimitive2D(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&, std::vector<drawinglayer::primitive2d::SvgGradientEntry, std::allocator<drawinglayer::primitive2d::SvgGradientEntry> >&&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool, drawinglayer::primitive2d::SpreadMethod)
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::checkPreconditions()
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::createAtom(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SvgGradientEntry const&, drawinglayer::primitive2d::SvgGradientEntry const&, int, int) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::~SvgLinearGradientPrimitive2D()
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::SvgRadialGradientPrimitive2D(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&, std::vector<drawinglayer::primitive2d::SvgGradientEntry, std::allocator<drawinglayer::primitive2d::SvgGradientEntry> >&&, basegfx::B2DPoint const&, double, bool, drawinglayer::primitive2d::SpreadMethod, basegfx::B2DPoint const*)
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::checkPreconditions()
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::createAtom(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SvgGradientEntry const&, drawinglayer::primitive2d::SvgGradientEntry const&, int, int) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::~SvgRadialGradientPrimitive2D()
drawinglayer::primitive2d::TextBreakupHelper::TextBreakupHelper(drawinglayer::primitive2d::TextSimplePortionPrimitive2D const&)
drawinglayer::primitive2d::TextBreakupHelper::allowChange(unsigned int, basegfx::B2DHomMatrix&, unsigned int, unsigned int)
drawinglayer::primitive2d::TextBreakupHelper::breakup(drawinglayer::primitive2d::BreakupUnit)
drawinglayer::primitive2d::TextBreakupHelper::breakupPortion(drawinglayer::primitive2d::Primitive2DContainer&, int, int, bool)
drawinglayer::primitive2d::TextBreakupHelper::~TextBreakupHelper()
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::TextDecoratedPortionPrimitive2D(basegfx::B2DHomMatrix const&, rtl::OUString const&, int, int, std::vector<double, std::allocator<double> >&&, drawinglayer::attribute::FontAttribute const&, com::sun::star::lang::Locale const&, basegfx::BColor const&, Color const&, basegfx::BColor const&, basegfx::BColor const&, drawinglayer::primitive2d::TextLine, drawinglayer::primitive2d::TextLine, bool, drawinglayer::primitive2d::TextStrikeout, bool, drawinglayer::primitive2d::TextEmphasisMark, bool, bool, drawinglayer::primitive2d::TextRelief, bool)
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::impCreateGeometryContent(std::vector<com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive2D>, std::allocator<com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive2D> > >&, basegfx::utils::B2DHomMatrixBufferedOnDemandDecompose const&, rtl::OUString const&, int, int, std::vector<double, std::allocator<double> > const&, drawinglayer::attribute::FontAttribute const&) const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TextHierarchyBlockPrimitive2D::TextHierarchyBlockPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::TextHierarchyBlockPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyBulletPrimitive2D::TextHierarchyBulletPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::TextHierarchyBulletPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyEditPrimitive2D::TextHierarchyEditPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::TextHierarchyEditPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyFieldPrimitive2D::TextHierarchyFieldPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::primitive2d::FieldType const&, std::vector<std::pair<rtl::OUString, rtl::OUString>, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const*)
drawinglayer::primitive2d::TextHierarchyFieldPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyFieldPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TextHierarchyLinePrimitive2D::TextHierarchyLinePrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::TextHierarchyLinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyParagraphPrimitive2D::TextHierarchyParagraphPrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&, short)
drawinglayer::primitive2d::TextHierarchyParagraphPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyParagraphPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TextLayouterDevice::TextLayouterDevice()
drawinglayer::primitive2d::TextLayouterDevice::addTextRectActions(tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, GDIMetaFile&) const
drawinglayer::primitive2d::TextLayouterDevice::getCaretPositions(rtl::OUString const&, unsigned int, unsigned int) const
drawinglayer::primitive2d::TextLayouterDevice::getFontAscent() const
drawinglayer::primitive2d::TextLayouterDevice::getFontDescent() const
drawinglayer::primitive2d::TextLayouterDevice::getOverlineHeight() const
drawinglayer::primitive2d::TextLayouterDevice::getStrikeoutOffset() const
drawinglayer::primitive2d::TextLayouterDevice::getTextOutlines(std::vector<basegfx::B2DPolyPolygon, std::allocator<basegfx::B2DPolyPolygon> >&, rtl::OUString const&, unsigned int, unsigned int, std::vector<double, std::allocator<double> > const&) const
drawinglayer::primitive2d::TextLayouterDevice::getUnderlineHeight() const
drawinglayer::primitive2d::TextLayouterDevice::~TextLayouterDevice()
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::TextSimplePortionPrimitive2D(basegfx::B2DHomMatrix const&, rtl::OUString const&, int, int, std::vector<double, std::allocator<double> >&&, drawinglayer::attribute::FontAttribute const&, com::sun::star::lang::Locale const&, basegfx::BColor const&, bool, long, Color const&)
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TransformPrimitive2D::TransformPrimitive2D(basegfx::B2DHomMatrix const&, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::TransformPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TransformPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TransformPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TransparencePrimitive2D::TransparencePrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::primitive2d::Primitive2DContainer&&)
drawinglayer::primitive2d::TransparencePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TransparencePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::UnifiedTransparencePrimitive2D(drawinglayer::primitive2d::Primitive2DContainer&&, double)
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ViewTransformationDependentPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::WrongSpellPrimitive2D::WrongSpellPrimitive2D(basegfx::B2DHomMatrix const&, double, double, basegfx::BColor const&)
drawinglayer::primitive2d::WrongSpellPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::WrongSpellPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::WrongSpellPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::createEmbeddedGlowPrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::attribute::SdrGlowAttribute const&)
drawinglayer::primitive2d::createEmbeddedShadowPrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::attribute::SdrShadowAttribute const&, basegfx::B2DHomMatrix const&, drawinglayer::primitive2d::Primitive2DContainer const*)
drawinglayer::primitive2d::createEmbeddedSoftEdgePrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, int)
drawinglayer::primitive2d::createHiddenGeometryPrimitives2D(bool, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
drawinglayer::primitive2d::createNewSdrFillAttribute(SfxItemSet const&)
drawinglayer::primitive2d::createNewSdrLineAttribute(SfxItemSet const&)
drawinglayer::primitive2d::createNewSdrLineStartEndAttribute(SfxItemSet const&, double)
drawinglayer::primitive2d::createNewTransparenceGradientAttribute(SfxItemSet const&)
drawinglayer::primitive2d::createPolyPolygonFillPrimitive(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&, drawinglayer::attribute::SdrFillAttribute const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::createPolyPolygonFillPrimitive(basegfx::B2DPolyPolygon const&, drawinglayer::attribute::SdrFillAttribute const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::createPolygonLinePrimitive(basegfx::B2DPolygon const&, drawinglayer::attribute::SdrLineAttribute const&, drawinglayer::attribute::SdrLineStartEndAttribute const&)
drawinglayer::primitive2d::createTextPrimitive(basegfx::B2DPolyPolygon const&, basegfx::B2DHomMatrix const&, drawinglayer::attribute::SdrTextAttribute const&, drawinglayer::attribute::SdrLineAttribute const&, bool, bool)
drawinglayer::primitive2d::getVclFontFromFontAttribute(drawinglayer::attribute::FontAttribute const&, double, double, double, com::sun::star::lang::Locale const&)
drawinglayer::primitive2d::idToString(unsigned int)
drawinglayer::primitive2d::mapTextLineToFontLineStyle(drawinglayer::primitive2d::TextLine)
drawinglayer::primitive2d::mapTextStrikeoutToFontStrikeout(drawinglayer::primitive2d::TextStrikeout)
drawinglayer::primitive3d::BasePrimitive3D::BasePrimitive3D()
drawinglayer::primitive3d::BasePrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::BasePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::BasePrimitive3D::getDecomposition(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::primitive3d::BasePrimitive3D::getRange(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::primitive3d::BasePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::BasePrimitive3D::~BasePrimitive3D()
drawinglayer::primitive3d::BufferedDecompositionPrimitive3D::BufferedDecompositionPrimitive3D()
drawinglayer::primitive3d::BufferedDecompositionPrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::BufferedDecompositionPrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::GroupPrimitive3D::GroupPrimitive3D(drawinglayer::primitive3d::Primitive3DContainer const&)
drawinglayer::primitive3d::GroupPrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::GroupPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::GroupPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::ModifiedColorPrimitive3D::ModifiedColorPrimitive3D(drawinglayer::primitive3d::Primitive3DContainer const&, std::shared_ptr<basegfx::BColorModifier> const&)
drawinglayer::primitive3d::ModifiedColorPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::ModifiedColorPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::PolyPolygonMaterialPrimitive3D(basegfx::B3DPolyPolygon const&, drawinglayer::attribute::MaterialAttribute3D const&, bool)
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::PolygonHairlinePrimitive3D(basegfx::B3DPolygon const&, basegfx::BColor const&)
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrCubePrimitive3D::SdrCubePrimitive3D(basegfx::B3DHomMatrix const&, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D const&, drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::primitive3d::SdrCubePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrCubePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrCubePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::SdrExtrudePrimitive3D(basegfx::B3DHomMatrix const&, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D const&, drawinglayer::attribute::Sdr3DObjectAttribute const&, basegfx::B2DPolyPolygon const&, double, double, double, bool, bool, bool, bool, bool)
drawinglayer::primitive3d::SdrExtrudePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::getSlices() const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::impCreateSlices()
drawinglayer::primitive3d::SdrExtrudePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::~SdrExtrudePrimitive3D()
drawinglayer::primitive3d::SdrLathePrimitive3D::SdrLathePrimitive3D(basegfx::B3DHomMatrix const&, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D const&, drawinglayer::attribute::Sdr3DObjectAttribute const&, basegfx::B2DPolyPolygon const&, unsigned int, unsigned int, double, double, double, bool, bool, bool, bool, bool)
drawinglayer::primitive3d::SdrLathePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrLathePrimitive3D::getSlices() const
drawinglayer::primitive3d::SdrLathePrimitive3D::impCreateSlices()
drawinglayer::primitive3d::SdrLathePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::~SdrLathePrimitive3D()
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::SdrPolyPolygonPrimitive3D(basegfx::B3DPolyPolygon const&, basegfx::B3DHomMatrix const&, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D const&, drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrPrimitive3D::SdrPrimitive3D(basegfx::B3DHomMatrix const&, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D const&, drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::primitive3d::SdrPrimitive3D::get3DRangeFromSlices(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&) const
drawinglayer::primitive3d::SdrPrimitive3D::getStandard3DRange() const
drawinglayer::primitive3d::SdrPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrSpherePrimitive3D::SdrSpherePrimitive3D(basegfx::B3DHomMatrix const&, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D const&, drawinglayer::attribute::Sdr3DObjectAttribute const&, unsigned int, unsigned int)
drawinglayer::primitive3d::SdrSpherePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrSpherePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrSpherePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrSpherePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::TransformPrimitive3D::TransformPrimitive3D(basegfx::B3DHomMatrix const&, drawinglayer::primitive3d::Primitive3DContainer const&)
drawinglayer::primitive3d::TransformPrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::TransformPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::TransformPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::arePrimitive3DReferencesEqual(com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive3D> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive3D> const&)
drawinglayer::primitive3d::createExtrudeSlices(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> >&, basegfx::B2DPolyPolygon const&, double, double, double, bool, bool, bool)
drawinglayer::primitive3d::createLatheSlices(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> >&, basegfx::B2DPolyPolygon const&, double, double, double, unsigned int, bool, bool, bool)
drawinglayer::primitive3d::createReducedOutlines(drawinglayer::geometry::ViewInformation3D const&, basegfx::B3DHomMatrix const&, basegfx::B3DPolygon const&, basegfx::B3DPolygon const&, basegfx::B3DPolyPolygon&)
drawinglayer::primitive3d::extractHorizontalLinesFromSlice(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&, bool)
drawinglayer::primitive3d::extractPlanesFromSlice(std::vector<basegfx::B3DPolyPolygon, std::allocator<basegfx::B3DPolyPolygon> >&, std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&, bool, bool, bool, bool, double, double, bool, basegfx::B2DHomMatrix const&)
drawinglayer::primitive3d::extractVerticalLinesFromSlice(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&)
drawinglayer::primitive3d::getB3DRangeFromPrimitive3DReference(com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive3D> const&, drawinglayer::geometry::ViewInformation3D const&)
drawinglayer::primitive3d::idToString(unsigned int)
drawinglayer::processor2d::BaseProcessor2D::BaseProcessor2D(drawinglayer::geometry::ViewInformation2D const&)
drawinglayer::processor2d::BaseProcessor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::BaseProcessor2D::~BaseProcessor2D()
drawinglayer::processor2d::ContourExtractor2D::ContourExtractor2D(drawinglayer::geometry::ViewInformation2D const&, bool)
drawinglayer::processor2d::ContourExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::ContourExtractor2D::~ContourExtractor2D()
drawinglayer::processor2d::HitTestProcessor2D::HitTestProcessor2D(drawinglayer::geometry::ViewInformation2D const&, basegfx::B2DPoint const&, double, bool)
drawinglayer::processor2d::HitTestProcessor2D::check3DHit(drawinglayer::primitive2d::ScenePrimitive2D const&)
drawinglayer::processor2d::HitTestProcessor2D::checkFillHitWithTolerance(basegfx::B2DPolyPolygon const&, double) const
drawinglayer::processor2d::HitTestProcessor2D::checkHairlineHitWithTolerance(basegfx::B2DPolygon const&, double) const
drawinglayer::processor2d::HitTestProcessor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::HitTestProcessor2D::~HitTestProcessor2D()
drawinglayer::processor2d::LineGeometryExtractor2D::LineGeometryExtractor2D(drawinglayer::geometry::ViewInformation2D const&)
drawinglayer::processor2d::LineGeometryExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::LineGeometryExtractor2D::~LineGeometryExtractor2D()
drawinglayer::processor2d::ObjectInfoPrimitiveExtractor2D::ObjectInfoPrimitiveExtractor2D(drawinglayer::geometry::ViewInformation2D const&)
drawinglayer::processor2d::ObjectInfoPrimitiveExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::ObjectInfoPrimitiveExtractor2D::~ObjectInfoPrimitiveExtractor2D()
drawinglayer::processor2d::TextAsPolygonExtractor2D::TextAsPolygonExtractor2D(drawinglayer::geometry::ViewInformation2D const&)
drawinglayer::processor2d::TextAsPolygonExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::TextAsPolygonExtractor2D::~TextAsPolygonExtractor2D()
drawinglayer::processor3d::BaseProcessor3D::BaseProcessor3D(drawinglayer::geometry::ViewInformation3D const&)
drawinglayer::processor3d::BaseProcessor3D::processBasePrimitive3D(drawinglayer::primitive3d::BasePrimitive3D const&)
drawinglayer::processor3d::BaseProcessor3D::~BaseProcessor3D()
drawinglayer::processor3d::CutFindProcessor::CutFindProcessor(drawinglayer::geometry::ViewInformation3D const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, bool)
drawinglayer::processor3d::CutFindProcessor::processBasePrimitive3D(drawinglayer::primitive3d::BasePrimitive3D const&)
drawinglayer_XPrimitive2DRenderer
drophash
dscal
dswap
dualize_lp
dualloop
editeng::CustomPropertyField::Clone() const
editeng::CustomPropertyField::CustomPropertyField(rtl::OUString const&, rtl::OUString const&)
editeng::CustomPropertyField::createBeginComment() const
editeng::CustomPropertyField::operator==(SvxFieldData const&) const
editeng::CustomPropertyField::~CustomPropertyField()
editeng::FieldUpdater::FieldUpdater(EditTextObject&)
editeng::FieldUpdater::FieldUpdater(editeng::FieldUpdater const&)
editeng::FieldUpdater::~FieldUpdater()
editeng::HangulHanjaConversion::HangulHanjaConversion(weld::Widget*, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::lang::Locale const&, com::sun::star::lang::Locale const&, vcl::Font const*, int, bool)
editeng::HangulHanjaConversion::IsUseSavedConversionDirectionState()
editeng::HangulHanjaConversion::~HangulHanjaConversion()
editeng::SvxBorderLine::GetValueString(MapUnit, MapUnit, IntlWrapper const*, bool) const
editeng::SvxBorderLine::ScaleMetrics(long, long)
editeng::SvxBorderLine::SvxBorderLine(Color const*, long, SvxBorderLineStyle, Color (*)(Color), Color (*)(Color))
editeng::Trie::Trie()
editeng::Trie::~Trie()
eliminate_artificials
endlu(SvStream&)
enlargePQExpBuffer
epoxy_egl_version
epoxy_extension_in_string
epoxy_glsl_version
epoxy_glx_version
epoxy_has_egl
epoxy_has_egl_extension
epoxy_has_glx
epoxy_has_glx_extension
epoxy_is_desktop_gl
epoxy_set_resolver_failure_handler
eventattacher_EventAttacher
expand_column
explain
feasibilityOffset
feasiblePhase1
fieldlen(char const*)
fillLink
fillbranches_BB
fimprove
finalize_scaling
findAnti_artificial
findBasicArtificial
findBasicFixedvar
findBasisPos
findImprovementVar
findIndex
findIndexEx
findLoadedDocShellByName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
findNonBasicSlack
findSubstitutionVar
find_int_bbvar
find_row
find_rowReplacement
find_sc_bbvar
find_sos_bbvar
find_var
findhash
findnode_BB
findself_BB
firebird_plugin
firstActiveLink
firstInactiveLink
firstfunc
formWeights
formula::DoubleVectorRefToken::Clone() const
formula::DoubleVectorRefToken::DoubleVectorRefToken(std::vector<formula::VectorRefArray, std::allocator<formula::VectorRefArray> >&&, unsigned long, unsigned long, bool, bool)
formula::FormEditData::FormEditData(formula::FormEditData const&)
formula::FormEditData::SaveValues()
formula::FormEditData::operator=(formula::FormEditData const&)
formula::FormEditData::~FormEditData()
formula::FormulaByteToken::GetByte() const
formula::FormulaByteToken::GetInForceArray() const
formula::FormulaByteToken::SetByte(unsigned char)
formula::FormulaByteToken::SetInForceArray(formula::ParamClass)
formula::FormulaByteToken::operator==(formula::FormulaToken const&) const
formula::FormulaCompiler::AddSubLine()
formula::FormulaCompiler::CheckSetForceArrayParameter(boost::intrusive_ptr<formula::FormulaToken> const&, unsigned char)
formula::FormulaCompiler::CompareLine()
formula::FormulaCompiler::ConcatLine()
formula::FormulaCompiler::CreateStringFromDoubleRef(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromExternal(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromIndex(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromMatrix(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromSingleRef(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::Expression()
formula::FormulaCompiler::ExtendRangeReference(formula::FormulaToken&, formula::FormulaToken&)
formula::FormulaCompiler::Factor()
formula::FormulaCompiler::FindAddInFunction(rtl::OUString const&, bool) const
formula::FormulaCompiler::ForceArrayOperator(boost::intrusive_ptr<formula::FormulaToken> const&)
formula::FormulaCompiler::GetForceArrayParameter(formula::FormulaToken const*, unsigned short) const
formula::FormulaCompiler::HandleColRowName()
formula::FormulaCompiler::HandleDbData()
formula::FormulaCompiler::HandleExternalReference(formula::FormulaToken const&)
formula::FormulaCompiler::HandleRange()
formula::FormulaCompiler::HandleTableRef()
formula::FormulaCompiler::InitSymbolsAPI() const
formula::FormulaCompiler::InitSymbolsEnglish() const
formula::FormulaCompiler::InitSymbolsEnglishXL() const
formula::FormulaCompiler::InitSymbolsNative() const
formula::FormulaCompiler::InitSymbolsODFF() const
formula::FormulaCompiler::InitSymbolsOOXML() const
formula::FormulaCompiler::InitSymbolsPODF() const
formula::FormulaCompiler::IntersectionLine()
formula::FormulaCompiler::IsMatrixFunction(OpCode)
formula::FormulaCompiler::LocalizeString(rtl::OUString&) const
formula::FormulaCompiler::MergeRangeReference(formula::FormulaToken**, formula::FormulaToken* const*)
formula::FormulaCompiler::MulDivLine()
formula::FormulaCompiler::NextToken()
formula::FormulaCompiler::OpCodeMap::copyFrom(formula::FormulaCompiler::OpCodeMap const&)
formula::FormulaCompiler::OpCodeMap::createSequenceOfAvailableMappings(formula::FormulaCompiler const&, int) const
formula::FormulaCompiler::OpCodeMap::createSequenceOfFormulaTokens(formula::FormulaCompiler const&, com::sun::star::uno::Sequence<rtl::OUString> const&) const
formula::FormulaCompiler::OpCodeMap::putCopyOpCode(rtl::OUString const&, OpCode)
formula::FormulaCompiler::OpCodeMap::putOpCode(rtl::OUString const&, OpCode, CharClass const*)
formula::FormulaCompiler::PopTokenArray()
formula::FormulaCompiler::PostOpLine()
formula::FormulaCompiler::PowLine()
formula::FormulaCompiler::PutCode(boost::intrusive_ptr<formula::FormulaToken>&)
formula::FormulaCompiler::RangeLine()
formula::FormulaCompiler::SetError(FormulaError)
formula::FormulaCompiler::UnaryLine()
formula::FormulaCompiler::UnionLine()
formula::FormulaCompiler::fillAddInToken(std::vector<com::sun::star::sheet::FormulaOpCodeMapEntry, std::allocator<com::sun::star::sheet::FormulaOpCodeMapEntry> >&, bool) const
formula::FormulaCompiler::fillFromAddInCollectionEnglishName(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&) const
formula::FormulaCompiler::fillFromAddInCollectionUpperName(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&) const
formula::FormulaCompiler::fillFromAddInMap(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&, formula::FormulaGrammar::Grammar) const
formula::FormulaCompiler::loadSymbols(std::pair<char const*, int> const*, formula::FormulaGrammar::Grammar, std::shared_ptr<formula::FormulaCompiler::OpCodeMap>&, formula::FormulaCompiler::SeparatorType) const
formula::FormulaCompiler::~FormulaCompiler()
formula::FormulaDlg::FormulaDlg(SfxBindings*, SfxChildWindow*, weld::Window*, formula::IFunctionManager const*, formula::IControlReferenceHandler*)
formula::FormulaDlg::~FormulaDlg()
formula::FormulaDoubleToken::GetDouble() const
formula::FormulaDoubleToken::GetDoubleAsReference()
formula::FormulaDoubleToken::GetDoubleType() const
formula::FormulaDoubleToken::operator==(formula::FormulaToken const&) const
formula::FormulaErrorToken::GetError() const
formula::FormulaErrorToken::SetError(FormulaError)
formula::FormulaErrorToken::operator==(formula::FormulaToken const&) const
formula::FormulaExternalToken::GetExternal() const
formula::FormulaExternalToken::operator==(formula::FormulaToken const&) const
formula::FormulaFAPToken::GetFAPOrigToken() const
formula::FormulaFAPToken::operator==(formula::FormulaToken const&) const
formula::FormulaGrammar::isSupported(formula::FormulaGrammar::Grammar)
formula::FormulaGrammar::setEnglishBit(formula::FormulaGrammar::Grammar, bool)
formula::FormulaHelper::FillArgStrings(rtl::OUString const&, int, unsigned short, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&) const
formula::FormulaHelper::FormulaHelper(formula::IFunctionManager const*)
formula::FormulaHelper::GetArgStrings(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, rtl::OUString const&, int, unsigned short) const
formula::FormulaHelper::GetCategoryCount() const
formula::FormulaHelper::GetFunctionEnd(rtl::OUString const&, int) const
formula::FormulaIndexToken::GetIndex() const
formula::FormulaIndexToken::GetSheet() const
formula::FormulaIndexToken::SetIndex(unsigned short)
formula::FormulaIndexToken::SetSheet(short)
formula::FormulaIndexToken::operator==(formula::FormulaToken const&) const
formula::FormulaJumpToken::GetInForceArray() const
formula::FormulaJumpToken::GetJump() const
formula::FormulaJumpToken::SetInForceArray(formula::ParamClass)
formula::FormulaJumpToken::operator==(formula::FormulaToken const&) const
formula::FormulaJumpToken::~FormulaJumpToken()
formula::FormulaMissingToken::GetDouble() const
formula::FormulaMissingToken::GetString() const
formula::FormulaMissingToken::operator==(formula::FormulaToken const&) const
formula::FormulaModalDialog::FormulaModalDialog(weld::Window*, formula::IFunctionManager const*, formula::IControlReferenceHandler*)
formula::FormulaModalDialog::~FormulaModalDialog()
formula::FormulaOpCodeMapperObj::FormulaOpCodeMapperObj(std::unique_ptr<formula::FormulaCompiler, std::default_delete<formula::FormulaCompiler> >&&)
formula::FormulaOpCodeMapperObj::~FormulaOpCodeMapperObj()
formula::FormulaSpaceToken::GetByte() const
formula::FormulaSpaceToken::GetChar() const
formula::FormulaSpaceToken::operator==(formula::FormulaToken const&) const
formula::FormulaStringOpToken::Clone() const
formula::FormulaStringOpToken::FormulaStringOpToken(OpCode, svl::SharedString const&)
formula::FormulaStringOpToken::FormulaStringOpToken(formula::FormulaStringOpToken const&)
formula::FormulaStringOpToken::GetString() const
formula::FormulaStringOpToken::SetString(svl::SharedString const&)
formula::FormulaStringOpToken::operator==(formula::FormulaToken const&) const
formula::FormulaStringToken::Clone() const
formula::FormulaStringToken::FormulaStringToken(formula::FormulaStringToken const&)
formula::FormulaStringToken::FormulaStringToken(svl::SharedString const&)
formula::FormulaStringToken::GetString() const
formula::FormulaStringToken::SetString(svl::SharedString const&)
formula::FormulaStringToken::operator==(formula::FormulaToken const&) const
formula::FormulaToken::FormulaToken(formula::FormulaToken const&)
formula::FormulaToken::IsRef() const
formula::FormulaToken::~FormulaToken()
formula::FormulaTokenArray::AddOpCode(OpCode)
formula::FormulaTokenArray::AddStringXML(rtl::OUString const&)
formula::FormulaTokenArray::CheckAllRPNTokens()
formula::FormulaTokenArray::CheckToken(formula::FormulaToken const&)
formula::FormulaTokenArray::FormulaTokenArray(formula::FormulaTokenArray const&)
formula::FormulaTokenArray::FormulaTokenArray(formula::FormulaTokenArray&&)
formula::FormulaTokenArray::MergeArray()
formula::FormulaTokenArray::NeedsOoxmlRewrite()
formula::FormulaTokenArray::NeedsPodfRewrite(formula::MissingConventionODF const&)
formula::FormulaTokenArray::RemoveToken(unsigned short, unsigned short)
formula::FormulaTokenArray::RewriteMissing(formula::MissingConvention const&)
formula::FormulaTokenArray::operator=(formula::FormulaTokenArray const&)
formula::FormulaTokenArray::operator=(formula::FormulaTokenArray&&)
formula::FormulaTokenArray::~FormulaTokenArray()
formula::FormulaTokenArrayPlainIterator::AfterRemoveToken(unsigned short, unsigned short)
formula::FormulaTokenArrayPlainIterator::PeekNext()
formula::FormulaTokenArrayPlainIterator::PrevRPN()
formula::FormulaTokenIterator::FormulaTokenIterator(formula::FormulaTokenArray const&)
formula::FormulaTokenIterator::GetNonEndOfPathToken(short) const
formula::FormulaTokenIterator::Item::Item(formula::FormulaTokenArray const*, short, short)
formula::FormulaTokenIterator::Push(formula::FormulaTokenArray const*)
formula::FormulaTokenIterator::~FormulaTokenIterator()
formula::FormulaTypedDoubleToken::GetDoubleType() const
formula::FormulaTypedDoubleToken::SetDoubleType(short)
formula::FormulaTypedDoubleToken::operator==(formula::FormulaToken const&) const
formula::FormulaUnknownToken::operator==(formula::FormulaToken const&) const
formula::RefButton::LinkStubClick(void*, weld::Button&)
formula::RefButton::RefButton(std::unique_ptr<weld::Button, std::default_delete<weld::Button> >)
formula::RefButton::~RefButton()
formula::RefEdit::GetFocus()
formula::RefEdit::LoseFocus()
formula::RefEdit::~RefEdit()
formula::SingleVectorRefToken::Clone() const
formula::SingleVectorRefToken::SingleVectorRefToken(formula::VectorRefArray const&, unsigned long)
formula::VectorRefArray::VectorRefArray()
formula::VectorRefArray::VectorRefArray(_rtl_uString**)
formula::VectorRefArray::VectorRefArray(double const*)
formula::VectorRefArray::VectorRefArray(double const*, _rtl_uString**)
formula::VectorRefArray::VectorRefArray(formula::VectorRefArray::InitInvalid)
framework::ActionTriggerHelper::FillActionTriggerContainerFromMenu(com::sun::star::uno::Reference<com::sun::star::container::XIndexContainer> const&, Menu const*)
framework::CreateDockingWindow(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&)
framework::CreateStatusBarController(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, StatusBar*, unsigned short, rtl::OUString const&)
framework::CreateToolBoxController(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
framework::CreateWeldToolBoxController(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, weld::Toolbar*, weld::Builder*, rtl::OUString const&)
framework::Desktop::Desktop(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
framework::Desktop::activate()
framework::Desktop::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
framework::Desktop::addFrameActionListener(com::sun::star::uno::Reference<com::sun::star::frame::XFrameActionListener> const&)
framework::Desktop::addTerminateListener(com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> const&)
framework::Desktop::constructorInit()
framework::Desktop::contextChanged()
framework::Desktop::convertFastPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, int, com::sun::star::uno::Any const&)
framework::Desktop::deactivate()
framework::Desktop::dispatchFinished(com::sun::star::frame::DispatchResultEvent const&)
framework::Desktop::disposing()
framework::Desktop::disposing(com::sun::star::lang::EventObject const&)
framework::Desktop::findFrame(rtl::OUString const&, int)
framework::Desktop::getActiveFrame()
framework::Desktop::getActiveTask()
framework::Desktop::getComponentWindow()
framework::Desktop::getComponents()
framework::Desktop::getContainerWindow()
framework::Desktop::getController()
framework::Desktop::getCreator()
framework::Desktop::getCurrentComponent()
framework::Desktop::getCurrentFrame()
framework::Desktop::getFastPropertyValue(com::sun::star::uno::Any&, int) const
framework::Desktop::getFrames()
framework::Desktop::getImplementationName()
framework::Desktop::getInfoHelper()
framework::Desktop::getName()
framework::Desktop::getPropertySetInfo()
framework::Desktop::getSupportedServiceNames()
framework::Desktop::getTasks()
framework::Desktop::getTypes()
framework::Desktop::getUntitledPrefix()
framework::Desktop::handle(com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
framework::Desktop::impl_closeFrames(bool)
framework::Desktop::impl_getFrameComponent(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&) const
framework::Desktop::impl_sendCancelTerminationEvent(std::vector<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> > > const&)
framework::Desktop::impl_sendNotifyTerminationEvent()
framework::Desktop::impl_sendQueryTerminationEvent(std::vector<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> > >&)
framework::Desktop::impl_sendTerminateToClipboard()
framework::Desktop::initialize(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&)
framework::Desktop::isActive()
framework::Desktop::isTop()
framework::Desktop::leaseNumber(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::Desktop::loadComponentFromURL(rtl::OUString const&, rtl::OUString const&, int, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
framework::Desktop::queryDispatch(com::sun::star::util::URL const&, rtl::OUString const&, int)
framework::Desktop::queryDispatches(com::sun::star::uno::Sequence<com::sun::star::frame::DispatchDescriptor> const&)
framework::Desktop::queryInterface(com::sun::star::uno::Type const&)
framework::Desktop::registerDispatchProviderInterceptor(com::sun::star::uno::Reference<com::sun::star::frame::XDispatchProviderInterceptor> const&)
framework::Desktop::releaseDispatchProviderInterceptor(com::sun::star::uno::Reference<com::sun::star::frame::XDispatchProviderInterceptor> const&)
framework::Desktop::releaseNumber(int)
framework::Desktop::releaseNumberForComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::Desktop::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
framework::Desktop::removeFrameActionListener(com::sun::star::uno::Reference<com::sun::star::frame::XFrameActionListener> const&)
framework::Desktop::removeTerminateListener(com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> const&)
framework::Desktop::setActiveFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
framework::Desktop::setComponent(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
framework::Desktop::setCreator(com::sun::star::uno::Reference<com::sun::star::frame::XFramesSupplier> const&)
framework::Desktop::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
framework::Desktop::setName(rtl::OUString const&)
framework::Desktop::supportsService(rtl::OUString const&)
framework::Desktop::terminate()
framework::Desktop::terminateQuickstarterToo()
framework::Desktop::~Desktop()
framework::DocumentUndoGuard::DocumentUndoGuard(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::DocumentUndoGuard::~DocumentUndoGuard()
framework::GenericToolbarController::GenericToolbarController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
framework::GenericToolbarController::GenericToolbarController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, weld::Toolbar&, rtl::OUString const&)
framework::GenericToolbarController::dispose()
framework::GenericToolbarController::execute(short)
framework::GenericToolbarController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
framework::GenericToolbarController::~GenericToolbarController()
framework::GetFirstListenerWith(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, std::function<bool (com::sun::star::uno::Reference<com::sun::star::ui::XContextChangeEventListener> const&)> const&)
framework::IsDockingWindowVisible(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&)
framework::RefreshToolbars(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
framework::SetDockingWindowCreator(void (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&))
framework::SetIsDockingWindowVisible(bool (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&))
framework::SetRefreshToolbars(void (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&))
framework::SetStatusBarControllerCreator(rtl::Reference<svt::StatusbarController> (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, StatusBar*, unsigned short, rtl::OUString const&))
framework::SetToolBoxControllerCreator(rtl::Reference<svt::ToolboxController> (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&))
framework::SetWeldToolBoxControllerCreator(com::sun::star::uno::Reference<com::sun::star::frame::XToolbarController> (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, weld::Toolbar*, weld::Builder*, rtl::OUString const&))
framework::TitleHelper::TitleHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Reference<com::sun::star::frame::XUntitledNumbers> const&)
framework::TitleHelper::addTitleChangeListener(com::sun::star::uno::Reference<com::sun::star::frame::XTitleChangeListener> const&)
framework::TitleHelper::disposing(com::sun::star::lang::EventObject const&)
framework::TitleHelper::documentEventOccured(com::sun::star::document::DocumentEvent const&)
framework::TitleHelper::frameAction(com::sun::star::frame::FrameActionEvent const&)
framework::TitleHelper::getTitle()
framework::TitleHelper::impl_appendComponentTitle(rtl::OUStringBuffer&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::TitleHelper::impl_appendDebugVersion(rtl::OUStringBuffer&)
framework::TitleHelper::impl_appendModuleName(rtl::OUStringBuffer&)
framework::TitleHelper::impl_appendProductName(rtl::OUStringBuffer&)
framework::TitleHelper::impl_appendSafeMode(rtl::OUStringBuffer&)
framework::TitleHelper::impl_convertURL2Title(rtl::OUString const&)
framework::TitleHelper::impl_sendTitleChangedEvent()
framework::TitleHelper::impl_setSubTitle(com::sun::star::uno::Reference<com::sun::star::frame::XTitle> const&)
framework::TitleHelper::impl_startListeningForController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
framework::TitleHelper::impl_startListeningForFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
framework::TitleHelper::impl_startListeningForModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
framework::TitleHelper::impl_updateListeningForFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
framework::TitleHelper::impl_updateTitle(bool)
framework::TitleHelper::impl_updateTitleForController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&, bool)
framework::TitleHelper::impl_updateTitleForFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, bool)
framework::TitleHelper::impl_updateTitleForModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel3> const&, bool)
framework::TitleHelper::removeTitleChangeListener(com::sun::star::uno::Reference<com::sun::star::frame::XTitleChangeListener> const&)
framework::TitleHelper::setTitle(rtl::OUString const&)
framework::TitleHelper::titleChanged(com::sun::star::frame::TitleChangedEvent const&)
framework::TitleHelper::~TitleHelper()
framework::UndoManagerHelper::UndoManagerHelper(framework::IUndoManagerImplementation&)
framework::UndoManagerHelper::~UndoManagerHelper()
freeLink
freePackedVector
freePricer
freeUndoLadder
freeWeights
free_BB
free_SOSgroup
free_SOSrec
free_duals
free_hash_item
free_hash_table
free_lp
free_pseudoclass
free_pseudocost
free_utf_tbl()
freecuts_BB
fsolve
ftran
gcd
getBasicObjectTypeName(SbxObject*)
getBasicTypeName(SbxDataType)
getDIBV5HeaderSize()
getDataArea
getExistMark
getFollowPageWords_af_NA
getFollowPageWords_af_ZA
getFollowPageWords_ak_GH
getFollowPageWords_am_ET
getFollowPageWords_an_ES
getFollowPageWords_ar_AE
getFollowPageWords_ar_BH
getFollowPageWords_ar_DZ
getFollowPageWords_ar_EG
getFollowPageWords_ar_IQ
getFollowPageWords_ar_JO
getFollowPageWords_ar_KW
getFollowPageWords_ar_LB
getFollowPageWords_ar_LY
getFollowPageWords_ar_MA
getFollowPageWords_ar_OM
getFollowPageWords_ar_QA
getFollowPageWords_ar_SA
getFollowPageWords_ar_SY
getFollowPageWords_ar_TN
getFollowPageWords_ar_YE
getFollowPageWords_ast_ES
getFollowPageWords_axk_CG
getFollowPageWords_az_AZ
getFollowPageWords_be_BY
getFollowPageWords_beq_CG
getFollowPageWords_bg_BG
getFollowPageWords_bkw_CG
getFollowPageWords_bm_ML
getFollowPageWords_bn_BD
getFollowPageWords_bn_IN
getFollowPageWords_bo_CN
getFollowPageWords_bo_IN
getFollowPageWords_br_FR
getFollowPageWords_bs_BA
getFollowPageWords_bvx_CG
getFollowPageWords_ca_ES
getFollowPageWords_ca_ES_valencia
getFollowPageWords_cs_CZ
getFollowPageWords_cu_RU
getFollowPageWords_cv_RU
getFollowPageWords_cy_GB
getFollowPageWords_da_DK
getFollowPageWords_dde_CG
getFollowPageWords_de_AT
getFollowPageWords_de_CH
getFollowPageWords_de_DE
getFollowPageWords_de_LI
getFollowPageWords_de_LU
getFollowPageWords_dsb_DE
getFollowPageWords_dz_BT
getFollowPageWords_ebo_CG
getFollowPageWords_ee_GH
getFollowPageWords_el_GR
getFollowPageWords_en_AU
getFollowPageWords_en_BW
getFollowPageWords_en_BZ
getFollowPageWords_en_CA
getFollowPageWords_en_DK
getFollowPageWords_en_GH
getFollowPageWords_en_GM
getFollowPageWords_en_HK
getFollowPageWords_en_IE
getFollowPageWords_en_IL
getFollowPageWords_en_IN
getFollowPageWords_en_JM
getFollowPageWords_en_KE
getFollowPageWords_en_LK
getFollowPageWords_en_MW
getFollowPageWords_en_MY
getFollowPageWords_en_NA
getFollowPageWords_en_NG
getFollowPageWords_en_NZ
getFollowPageWords_en_PH
getFollowPageWords_en_TT
getFollowPageWords_en_ZA
getFollowPageWords_en_ZM
getFollowPageWords_en_ZW
getFollowPageWords_eo
getFollowPageWords_es_AR
getFollowPageWords_es_BO
getFollowPageWords_es_CL
getFollowPageWords_es_CO
getFollowPageWords_es_CR
getFollowPageWords_es_DO
getFollowPageWords_es_EC
getFollowPageWords_es_ES
getFollowPageWords_es_GT
getFollowPageWords_es_HN
getFollowPageWords_es_MX
getFollowPageWords_es_NI
getFollowPageWords_es_PA
getFollowPageWords_es_PE
getFollowPageWords_es_PR
getFollowPageWords_es_PY
getFollowPageWords_es_SV
getFollowPageWords_es_UY
getFollowPageWords_es_VE
getFollowPageWords_et_EE
getFollowPageWords_eu_ES
getFollowPageWords_fa_IR
getFollowPageWords_fi_FI
getFollowPageWords_fo_FO
getFollowPageWords_fr_BE
getFollowPageWords_fr_BF
getFollowPageWords_fr_BJ
getFollowPageWords_fr_CA
getFollowPageWords_fr_CH
getFollowPageWords_fr_CI
getFollowPageWords_fr_FR
getFollowPageWords_fr_LU
getFollowPageWords_fr_MC
getFollowPageWords_fr_ML
getFollowPageWords_fr_NE
getFollowPageWords_fr_SN
getFollowPageWords_fr_TG
getFollowPageWords_fur_IT
getFollowPageWords_fy_NL
getFollowPageWords_ga_IE
getFollowPageWords_gd_GB
getFollowPageWords_gl_ES
getFollowPageWords_gsc_FR
getFollowPageWords_gu_IN
getFollowPageWords_gug_PY
getFollowPageWords_ha_Latn_GH
getFollowPageWords_ha_Latn_NG
getFollowPageWords_haw_US
getFollowPageWords_he_IL
getFollowPageWords_hi_IN
getFollowPageWords_hil_PH
getFollowPageWords_hr_HR
getFollowPageWords_hsb_DE
getFollowPageWords_ht_HT
getFollowPageWords_hu_HU
getFollowPageWords_hy_AM
getFollowPageWords_ia
getFollowPageWords_id_ID
getFollowPageWords_ilo_PH
getFollowPageWords_is_IS
getFollowPageWords_it_CH
getFollowPageWords_it_IT
getFollowPageWords_iyx_CG
getFollowPageWords_ja_JP
getFollowPageWords_jbo
getFollowPageWords_ka_GE
getFollowPageWords_kab_DZ
getFollowPageWords_kk_KZ
getFollowPageWords_kkw_CG
getFollowPageWords_kl_GL
getFollowPageWords_km_KH
getFollowPageWords_kmr_Latn_TR
getFollowPageWords_kn_IN
getFollowPageWords_kng_CG
getFollowPageWords_ko_KR
getFollowPageWords_ky_KG
getFollowPageWords_la_VA
getFollowPageWords_lb_LU
getFollowPageWords_ldi_CG
getFollowPageWords_lg_UG
getFollowPageWords_lgr_SB
getFollowPageWords_lif_NP
getFollowPageWords_lij_IT
getFollowPageWords_lld_IT
getFollowPageWords_ln_CD
getFollowPageWords_lo_LA
getFollowPageWords_lt_LT
getFollowPageWords_ltg_LV
getFollowPageWords_lv_LV
getFollowPageWords_mai_IN
getFollowPageWords_mdw_CG
getFollowPageWords_min_ID
getFollowPageWords_mk_MK
getFollowPageWords_mkw_CG
getFollowPageWords_ml_IN
getFollowPageWords_mn_Cyrl_MN
getFollowPageWords_mos_BF
getFollowPageWords_mr_IN
getFollowPageWords_ms_MY
getFollowPageWords_mt_MT
getFollowPageWords_my_MM
getFollowPageWords_myv_RU
getFollowPageWords_nb_NO
getFollowPageWords_nds_DE
getFollowPageWords_ne_NP
getFollowPageWords_ngz_CG
getFollowPageWords_njx_CG
getFollowPageWords_njy_CG
getFollowPageWords_nl_BE
getFollowPageWords_nl_NL
getFollowPageWords_nn_NO
getFollowPageWords_no_NO
getFollowPageWords_nr_ZA
getFollowPageWords_nso_ZA
getFollowPageWords_ny_MW
getFollowPageWords_oc_FR
getFollowPageWords_om_ET
getFollowPageWords_or_IN
getFollowPageWords_pa_IN
getFollowPageWords_pap_BQ
getFollowPageWords_pap_CW
getFollowPageWords_pjt_AU
getFollowPageWords_pl_PL
getFollowPageWords_plt_MG
getFollowPageWords_pt_AO
getFollowPageWords_pt_BR
getFollowPageWords_pt_PT
getFollowPageWords_pui_CO
getFollowPageWords_puu_CG
getFollowPageWords_ro_RO
getFollowPageWords_ru_RU
getFollowPageWords_rue_SK
getFollowPageWords_rw_RW
getFollowPageWords_sc_IT
getFollowPageWords_sdj_CG
getFollowPageWords_sg_CF
getFollowPageWords_shs_CA
getFollowPageWords_sid_ET
getFollowPageWords_sk_SK
getFollowPageWords_sl_SI
getFollowPageWords_so_SO
getFollowPageWords_sr_CS
getFollowPageWords_sr_Latn_CS
getFollowPageWords_sr_Latn_ME
getFollowPageWords_sr_Latn_RS
getFollowPageWords_sr_ME
getFollowPageWords_sr_RS
getFollowPageWords_ss_ZA
getFollowPageWords_st_ZA
getFollowPageWords_sun_ID
getFollowPageWords_sv_FI
getFollowPageWords_sv_SE
getFollowPageWords_sw_TZ
getFollowPageWords_szl_PL
getFollowPageWords_ta_IN
getFollowPageWords_te_IN
getFollowPageWords_tek_CG
getFollowPageWords_tg_TJ
getFollowPageWords_th_TH
getFollowPageWords_ti_ER
getFollowPageWords_ti_ET
getFollowPageWords_tk_TM
getFollowPageWords_tn_ZA
getFollowPageWords_tpi_PG
getFollowPageWords_tr_TR
getFollowPageWords_ts_ZA
getFollowPageWords_tsa_CG
getFollowPageWords_tt_RU
getFollowPageWords_tyx_CG
getFollowPageWords_ug_CN
getFollowPageWords_uk_UA
getFollowPageWords_ur_PK
getFollowPageWords_uz_UZ
getFollowPageWords_ve_ZA
getFollowPageWords_vec_IT
getFollowPageWords_vi_VN
getFollowPageWords_vif_CG
getFollowPageWords_vro_EE
getFollowPageWords_wa_BE
getFollowPageWords_xh_ZA
getFollowPageWords_xku_CG
getFollowPageWords_yi_US
getFollowPageWords_yom_CG
getFollowPageWords_zh_CN
getFollowPageWords_zh_HK
getFollowPageWords_zh_MO
getFollowPageWords_zh_SG
getFollowPageWords_zh_TW
getFollowPageWords_zu_ZA
getFormula(ScDocument*, short, int, short)
getHangul2HanjaData
getHangul2HanjaIndex
getHangul2HanjaIndexCount
getHanja2HangulData
getHanja2HangulIndex
getIndex1
getIndex2
getLabelName(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
getLenArray
getMDO
getPreviewStripSize(OutputDevice const&)
getPricer
getRangeByName(ScDocument*, rtl::OUString const&)
getStandardAccessibleFactory
getStarBasicAccess(BasicManager*)
getSvtAccessibilityComponentFactory
get_Lrows
get_Ncolumns
get_Norig_columns
get_Norig_rows
get_Nrows
get_OF_active
get_anti_degen
get_artificialRow
get_basis
get_basisOF
get_basiscolumn
get_basiscrash
get_bb_depthlimit
get_bb_floorfirst
get_bb_rule
get_bounds
get_bounds_tighter
get_break_at_value
get_ca_charset
get_ca_charset_length
get_captype(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cs_info*)
get_captype_utf8(std::vector<w_char, std::allocator<w_char> > const&, int)
get_casechars[abi:cxx11](char const*)
get_colIndexA
get_col_name
get_column
get_columnex
get_constr_class
get_constr_type
get_constr_value
get_constraints
get_cu_charset
get_cu_charset_length
get_current_cs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
get_desktop_environment
get_dual_solution
get_dv_lower
get_dv_upper
get_dz_charset
get_dz_charset_length
get_encoding_name_for_icu
get_epsb
get_epsd
get_epsel
get_epsint
get_epsperturb
get_epspivot
get_hu_charset
get_hu_charset_length
get_improve
get_indexdata_ko_dict
get_indexdata_zh_TW_radical
get_indexdata_zh_TW_stroke
get_indexdata_zh_pinyin
get_indexdata_zh_radical
get_indexdata_zh_stroke
get_indexdata_zh_zhuyin
get_infinite
get_ja_charset
get_ja_charset_length
get_ja_phonetic_alphanumeric_first
get_ja_phonetic_alphanumeric_first_length
get_ja_phonetic_alphanumeric_last
get_ja_phonetic_alphanumeric_last_length
get_ko_phonetic
get_ku_alphanumeric
get_ku_alphanumeric_length
get_lambda
get_lang_num(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
get_ln_charset
get_ln_charset_length
get_lowbo
get_lp_index
get_lp_name
get_mat
get_mat_byindex
get_max_level
get_maxpivot
get_mip_gap
get_multiprice
get_my_dictionary
get_my_dictionary_length
get_nameindex
get_ne_charset
get_ne_charset_length
get_negrange
get_nonzeros
get_obj_bound
get_orig_index
get_origcol_name
get_origrow_name
get_partialprice
get_piv_rule
get_pivoting
get_presolve
get_presolveloops
get_primal_solution
get_print_sol
get_pseudobranchcost
get_pseudocosts
get_pseudonodecost
get_pseudorange
get_ptr_constraints
get_ptr_dual_solution
get_ptr_lambda
get_ptr_primal_solution
get_ptr_sensitivity_obj
get_ptr_sensitivity_objex
get_ptr_sensitivity_rhs
get_refactfrequency
get_rh
get_rh_lower
get_rh_range
get_rh_upper
get_row
get_row_name
get_rowex
get_scalelimit
get_scaling
get_sensitivity_obj
get_sensitivity_objex
get_sensitivity_rhs
get_sid_charset
get_sid_charset_length
get_simplextype
get_solutioncount
get_solutionlimit
get_status
get_statustext
get_stored_pointer(char const*)
get_str_constr_class
get_str_constr_type
get_str_piv_rule
get_timeout
get_total_iter
get_total_nodes
get_upbo
get_var_branch
get_var_dualresult
get_var_primalresult
get_var_priority
get_variables
get_verbose
get_vro_alphanumeric
get_vro_alphanumeric_length
get_working_objective
get_zh_TW_charset
get_zh_TW_charset_length
get_zh_TW_radical
get_zh_TW_radical_length
get_zh_TW_stroke
get_zh_TW_stroke_length
get_zh_charset
get_zh_charset_length
get_zh_pinyin
get_zh_pinyin_length
get_zh_radical
get_zh_radical_length
get_zh_stroke
get_zh_stroke_length
get_zh_zhuyin
get_zh_zhuyin_length
getpeereid
getvaluePackedVector
guess_basis
has_BFP
has_XLI
hashval
heuristics
hnj_fopen
hnj_free
hnj_hyphen_free
hnj_hyphen_hyph_
hnj_hyphen_hyphenate
hnj_hyphen_hyphenate2
hnj_hyphen_hyphenate3
hnj_hyphen_hyphword
hnj_hyphen_lhmin
hnj_hyphen_load
hnj_hyphen_load_file
hnj_hyphen_load_line
hnj_hyphen_norm
hnj_hyphen_rhmin
hnj_hyphen_strnlen
hnj_ligature
hnj_malloc
hnj_realloc
hnj_strchomp
hpsort
hpsortex
idamax
identify_GUB
impose_bounds
inc_col_space
inc_columns
inc_lag_space
inc_mat_space
inc_matcol_space
inc_matrow_space
inc_presolve_space
inc_row_space
inc_rowcol_space
inc_rows
includeMDO
incrementUndoLadder
ini_close
ini_create
ini_open
ini_readdata
ini_writecomment
ini_writedata
ini_writeheader
initPQExpBuffer
initPricer
init_BLAS
init_phonet_hash(phonetable&)
init_pseudocost
init_rowcol_names
initbranches_BB
initcuts_BB
initialize_solution
initialize_utf_tbl()
insertLink
insertRangeData(ScDocument*, ScAddress const&, std::vector<std::vector<char const*, std::allocator<char const*> >, std::allocator<std::vector<char const*, std::allocator<char const*> > > > const&)
insertRangeNames(ScDocument*, ScRangeName*, RangeNameDef const*, RangeNameDef const*)
intpow
invert
isActiveLink
isBasisVarFeasible
isDegenerateBasis
isDualFeasible
isINT
isLayoutEnabled(vcl::Window const*)
isOrigFixed
isP1extra
isPhase1
isPrimalFeasible
isPrimalSimplex
is_BasisReady
is_OF_nz
is_SOS_var
is_action
is_add_rowmode
is_anti_degen
is_bb_mode
is_binary
is_break_at_first
is_chsign
is_constr_type
is_debug
is_encoding_supported_by_icu
is_feasible
is_fixedvar
is_infinite
is_int
is_integerscaling
is_lag_trace
is_maxim
is_nativeBFP
is_nativeBLAS
is_nativeXLI
is_negative
is_obj_in_basis
is_piv_mode
is_piv_rule
is_presolve
is_sc_violated
is_scalemode
is_scaletype
is_semicont
is_slackbasis
is_splitvar
is_trace
is_unbounded
is_use_names
isnz_origobj
jvmaccess::UnoVirtualMachine::CreationException::CreationException()
jvmaccess::UnoVirtualMachine::CreationException::CreationException(jvmaccess::UnoVirtualMachine::CreationException const&)
jvmaccess::UnoVirtualMachine::CreationException::operator=(jvmaccess::UnoVirtualMachine::CreationException const&)
jvmaccess::UnoVirtualMachine::CreationException::~CreationException()
jvmaccess::UnoVirtualMachine::UnoVirtualMachine(rtl::Reference<jvmaccess::VirtualMachine> const&, void*)
jvmaccess::UnoVirtualMachine::~UnoVirtualMachine()
jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException()
jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException(jvmaccess::VirtualMachine::AttachGuard::CreationException const&)
jvmaccess::VirtualMachine::AttachGuard::CreationException::operator=(jvmaccess::VirtualMachine::AttachGuard::CreationException const&)
jvmaccess::VirtualMachine::AttachGuard::CreationException::~CreationException()
jvmaccess::VirtualMachine::VirtualMachine(JavaVM_*, int, bool, JNIEnv_ const*)
jvmaccess::VirtualMachine::attachThread(bool*) const
jvmaccess::VirtualMachine::detachThread() const
jvmaccess::VirtualMachine::~VirtualMachine()
lag_solve
lastActiveLink
lastInactiveLink
ldif_close
ldif_countlines
ldif_fetch_url
ldif_getline
ldif_is_not_printable
ldif_must_b64_encode_register
ldif_must_b64_encode_release
ldif_open
ldif_open_url
ldif_parse_line
ldif_parse_line2
ldif_put
ldif_put_wrap
ldif_read_record
ldif_sput
ldif_sput_wrap
legacy::CntInt32::Create(CntInt32Item&, SvStream&, unsigned short)
legacy::CntInt32::GetVersion(unsigned short)
legacy::CntInt32::Store(CntInt32Item const&, SvStream&, unsigned short)
legacy::SfxBool::Create(SfxBoolItem&, SvStream&, unsigned short)
legacy::SfxBool::GetVersion(unsigned short)
legacy::SfxBool::Store(SfxBoolItem const&, SvStream&, unsigned short)
legacy_AddSecmodDB@@NSSDBM_3.12
legacy_DeleteSecmodDB@@NSSDBM_3.12
legacy_Open@@NSSDBM_3.12
legacy_ReadSecmodDB@@NSSDBM_3.12
legacy_ReleaseSecmodDBData@@NSSDBM_3.12
legacy_SetCryptFunctions@@NSSDBM_3.12
legacy_Shutdown@@NSSDBM_3.12
lenfield
lex_fatal_error
libVersionPoint
libabw::AbiDocument::isFileFormatSupported(librevenge::RVNGInputStream*)
libabw::AbiDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGTextInterface*)
libcdr::CDRDocument::isSupported(librevenge::RVNGInputStream*)
libcdr::CDRDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libcdr::CMXDocument::isSupported(librevenge::RVNGInputStream*)
libcdr::CMXDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libebook::EBOOKDocument::isSupported(librevenge::RVNGInputStream*, libebook::EBOOKDocument::Type*)
libebook::EBOOKDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGTextInterface*, char const*)
libebook::EBOOKDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGTextInterface*, libebook::EBOOKDocument::Type, char const*)
libepubgen::EPUBTextGenerator::EPUBTextGenerator(libepubgen::EPUBEmbeddingContact&, libepubgen::EPUBPackage*)
libepubgen::EPUBTextGenerator::EPUBTextGenerator(libepubgen::EPUBPackage*, int)
libepubgen::EPUBTextGenerator::Impl::Impl(libepubgen::EPUBPackage*, int)
libepubgen::EPUBTextGenerator::Impl::endHtmlFile()
libepubgen::EPUBTextGenerator::Impl::startHtmlFile()
libepubgen::EPUBTextGenerator::closeComment()
libepubgen::EPUBTextGenerator::closeEndnote()
libepubgen::EPUBTextGenerator::closeFooter()
libepubgen::EPUBTextGenerator::closeFootnote()
libepubgen::EPUBTextGenerator::closeFrame()
libepubgen::EPUBTextGenerator::closeGroup()
libepubgen::EPUBTextGenerator::closeHeader()
libepubgen::EPUBTextGenerator::closeLink()
libepubgen::EPUBTextGenerator::closeListElement()
libepubgen::EPUBTextGenerator::closeOrderedListLevel()
libepubgen::EPUBTextGenerator::closePageSpan()
libepubgen::EPUBTextGenerator::closeParagraph()
libepubgen::EPUBTextGenerator::closeSection()
libepubgen::EPUBTextGenerator::closeSpan()
libepubgen::EPUBTextGenerator::closeTable()
libepubgen::EPUBTextGenerator::closeTableCell()
libepubgen::EPUBTextGenerator::closeTableRow()
libepubgen::EPUBTextGenerator::closeTextBox()
libepubgen::EPUBTextGenerator::closeUnorderedListLevel()
libepubgen::EPUBTextGenerator::defineCharacterStyle(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::defineEmbeddedFont(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::defineGraphicStyle(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::definePageStyle(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::defineParagraphStyle(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::defineSectionStyle(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::drawConnector(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::drawEllipse(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::drawPath(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::drawPolygon(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::drawPolyline(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::drawRectangle(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::endDocument()
libepubgen::EPUBTextGenerator::insertBinaryObject(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::insertCoveredTableCell(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::insertEquation(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::insertField(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::insertLineBreak()
libepubgen::EPUBTextGenerator::insertSpace()
libepubgen::EPUBTextGenerator::insertTab()
libepubgen::EPUBTextGenerator::insertText(librevenge::RVNGString const&)
libepubgen::EPUBTextGenerator::openComment(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openEndnote(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openFooter(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openFootnote(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openFrame(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openGroup(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openHeader(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openLink(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openListElement(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openOrderedListLevel(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openPageSpan(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openParagraph(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openSection(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openSpan(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openTable(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openTableCell(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openTableRow(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openTextBox(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::openUnorderedListLevel(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::registerEmbeddedImageHandler(librevenge::RVNGString const&, bool (*)(librevenge::RVNGBinaryData const&, librevenge::RVNGBinaryData&, libepubgen::EPUBImageType&))
libepubgen::EPUBTextGenerator::registerEmbeddedObjectHandler(librevenge::RVNGString const&, bool (*)(librevenge::RVNGBinaryData const&, libepubgen::EPUBEmbeddingContact const&))
libepubgen::EPUBTextGenerator::setDocumentMetaData(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::setOption(int, int)
libepubgen::EPUBTextGenerator::setSplitHeadingLevel(unsigned int)
libepubgen::EPUBTextGenerator::setSplitSize(unsigned int)
libepubgen::EPUBTextGenerator::startDocument(librevenge::RVNGPropertyList const&)
libepubgen::EPUBTextGenerator::~EPUBTextGenerator()
libfreehand::FreeHandDocument::isSupported(librevenge::RVNGInputStream*)
libfreehand::FreeHandDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libmspub::MSPUBDocument::isSupported(librevenge::RVNGInputStream*)
libmspub::MSPUBDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libpagemaker::PMDocument::isSupported(librevenge::RVNGInputStream*)
libpagemaker::PMDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libqxp::QXPDocument::isSupported(librevenge::RVNGInputStream*, libqxp::QXPDocument::Type*)
libqxp::QXPDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*, libqxp::QXPPathResolver*)
libreofficekit_hook
libreofficekit_hook_2
libvisio::VisioDocument::isSupported(librevenge::RVNGInputStream*)
libvisio::VisioDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libvisio::VisioDocument::parseStencils(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libzmf::ZMFDocument::isSupported(librevenge::RVNGInputStream*, libzmf::ZMFDocument::Type*, libzmf::ZMFDocument::Kind*)
libzmf::ZMFDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
lin_solve
line_tok(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)
line_uniq(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
line_uniq_app(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
linguistic::GetLinguMutex()
linguistic::GetLinguProperties()
linguistic::GetPosInWordToCheck(rtl::OUString const&, int)
linguistic::HasDigits(rtl::OUString const&)
linguistic::IsNumeric(rtl::OUString const&)
linguistic::IsUpper(rtl::OUString const&, int, int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
linguistic::LinguIsUnspecified(o3tl::strong_int<unsigned short, LanguageTypeTag>)
linguistic::LinguIsUnspecified(rtl::OUString const&)
linguistic::LinguLanguageToLocale(o3tl::strong_int<unsigned short, LanguageTypeTag>)
linguistic::LinguLocaleToLanguage(com::sun::star::lang::Locale const&)
linguistic::capitalType(rtl::OUString const&, CharClass const*)
load_BLAS
longdual_testset
lower_utf(w_char, int)
lp_solve_version
lp_yy_create_buffer
lp_yy_delete_buffer
lp_yy_flush_buffer
lp_yy_init_buffer
lp_yy_load_buffer_state
lp_yy_scan_buffer
lp_yy_scan_bytes
lp_yy_scan_string
lp_yy_switch_to_buffer
lp_yylex
lp_yyparse
lp_yyrestart
lucene::analysis::Analyzer::Analyzer()
lucene::analysis::Analyzer::getPositionIncrementGap(wchar_t const*)
lucene::analysis::Analyzer::getPreviousTokenStream()
lucene::analysis::Analyzer::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::Analyzer::setPreviousTokenStream(lucene::analysis::TokenStream*)
lucene::analysis::Analyzer::~Analyzer()
lucene::analysis::CharTokenizer::CharTokenizer(lucene::util::Reader*)
lucene::analysis::CharTokenizer::next(lucene::analysis::Token*)
lucene::analysis::CharTokenizer::normalize(wchar_t) const
lucene::analysis::CharTokenizer::reset(lucene::util::Reader*)
lucene::analysis::CharTokenizer::~CharTokenizer()
lucene::analysis::ISOLatin1AccentFilter::ISOLatin1AccentFilter(lucene::analysis::TokenStream*, bool)
lucene::analysis::ISOLatin1AccentFilter::next(lucene::analysis::Token*)
lucene::analysis::ISOLatin1AccentFilter::~ISOLatin1AccentFilter()
lucene::analysis::KeywordAnalyzer::KeywordAnalyzer()
lucene::analysis::KeywordAnalyzer::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::KeywordAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::KeywordAnalyzer::~KeywordAnalyzer()
lucene::analysis::KeywordTokenizer::KeywordTokenizer(lucene::util::Reader*, int)
lucene::analysis::KeywordTokenizer::next(lucene::analysis::Token*)
lucene::analysis::KeywordTokenizer::reset(lucene::util::Reader*)
lucene::analysis::KeywordTokenizer::~KeywordTokenizer()
lucene::analysis::LanguageBasedAnalyzer::LanguageBasedAnalyzer(wchar_t const*, bool)
lucene::analysis::LanguageBasedAnalyzer::setLanguage(wchar_t const*)
lucene::analysis::LanguageBasedAnalyzer::setStem(bool)
lucene::analysis::LanguageBasedAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::LanguageBasedAnalyzer::~LanguageBasedAnalyzer()
lucene::analysis::LengthFilter::LengthFilter(lucene::analysis::TokenStream*, unsigned long, unsigned long)
lucene::analysis::LengthFilter::next(lucene::analysis::Token*)
lucene::analysis::LetterTokenizer::LetterTokenizer(lucene::util::Reader*)
lucene::analysis::LetterTokenizer::isTokenChar(wchar_t) const
lucene::analysis::LetterTokenizer::~LetterTokenizer()
lucene::analysis::LowerCaseFilter::LowerCaseFilter(lucene::analysis::TokenStream*, bool)
lucene::analysis::LowerCaseFilter::next(lucene::analysis::Token*)
lucene::analysis::LowerCaseFilter::~LowerCaseFilter()
lucene::analysis::LowerCaseTokenizer::LowerCaseTokenizer(lucene::util::Reader*)
lucene::analysis::LowerCaseTokenizer::normalize(wchar_t) const
lucene::analysis::LowerCaseTokenizer::~LowerCaseTokenizer()
lucene::analysis::PerFieldAnalyzerWrapper::PerFieldAnalyzerWrapper(lucene::analysis::Analyzer*)
lucene::analysis::PerFieldAnalyzerWrapper::addAnalyzer(wchar_t const*, lucene::analysis::Analyzer*)
lucene::analysis::PerFieldAnalyzerWrapper::getPositionIncrementGap(wchar_t const*)
lucene::analysis::PerFieldAnalyzerWrapper::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::PerFieldAnalyzerWrapper::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::PerFieldAnalyzerWrapper::~PerFieldAnalyzerWrapper()
lucene::analysis::PorterStemmer::PorterStemmer(wchar_t*)
lucene::analysis::PorterStemmer::cons(unsigned long)
lucene::analysis::PorterStemmer::cvc(unsigned long)
lucene::analysis::PorterStemmer::doublec(unsigned long)
lucene::analysis::PorterStemmer::ends(wchar_t const*)
lucene::analysis::PorterStemmer::getResultBuffer()
lucene::analysis::PorterStemmer::getResultLength()
lucene::analysis::PorterStemmer::m()
lucene::analysis::PorterStemmer::r(wchar_t const*)
lucene::analysis::PorterStemmer::setto(wchar_t const*)
lucene::analysis::PorterStemmer::stem()
lucene::analysis::PorterStemmer::step1()
lucene::analysis::PorterStemmer::step2()
lucene::analysis::PorterStemmer::step3()
lucene::analysis::PorterStemmer::step4()
lucene::analysis::PorterStemmer::step5()
lucene::analysis::PorterStemmer::step6()
lucene::analysis::PorterStemmer::vowelinstem()
lucene::analysis::PorterStemmer::~PorterStemmer()
lucene::analysis::SimpleAnalyzer::SimpleAnalyzer()
lucene::analysis::SimpleAnalyzer::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::SimpleAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::SimpleAnalyzer::~SimpleAnalyzer()
lucene::analysis::StopAnalyzer::StopAnalyzer()
lucene::analysis::StopAnalyzer::StopAnalyzer(char const*, char const*)
lucene::analysis::StopAnalyzer::StopAnalyzer(lucene::util::Reader*, bool)
lucene::analysis::StopAnalyzer::StopAnalyzer(wchar_t const**)
lucene::analysis::StopAnalyzer::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::StopAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::StopAnalyzer::~StopAnalyzer()
lucene::analysis::StopFilter::StopFilter(lucene::analysis::TokenStream*, bool, lucene::util::CLSetList<wchar_t*, lucene::util::Compare::WChar, lucene::util::Deletor::tcArray>*, bool)
lucene::analysis::StopFilter::StopFilter(lucene::analysis::TokenStream*, bool, wchar_t const**, bool)
lucene::analysis::StopFilter::fillStopTable(lucene::util::CLSetList<wchar_t*, lucene::util::Compare::WChar, lucene::util::Deletor::tcArray>*, wchar_t const**, bool)
lucene::analysis::StopFilter::getEnablePositionIncrements() const
lucene::analysis::StopFilter::getEnablePositionIncrementsDefault()
lucene::analysis::StopFilter::next(lucene::analysis::Token*)
lucene::analysis::StopFilter::setEnablePositionIncrements(bool)
lucene::analysis::StopFilter::setEnablePositionIncrementsDefault(bool)
lucene::analysis::StopFilter::~StopFilter()
lucene::analysis::Token::Token()
lucene::analysis::Token::Token(wchar_t const*, int, int, wchar_t const*)
lucene::analysis::Token::bufferLength()
lucene::analysis::Token::clear()
lucene::analysis::Token::endOffset() const
lucene::analysis::Token::getDefaultType()
lucene::analysis::Token::getPayload()
lucene::analysis::Token::getPositionIncrement() const
lucene::analysis::Token::growBuffer(unsigned long)
lucene::analysis::Token::resetTermTextLen()
lucene::analysis::Token::resizeTermBuffer(unsigned long)
lucene::analysis::Token::set(wchar_t const*, int, int, wchar_t const*)
lucene::analysis::Token::setEndOffset(int)
lucene::analysis::Token::setPayload(lucene::index::Payload*)
lucene::analysis::Token::setPositionIncrement(int)
lucene::analysis::Token::setStartOffset(int)
lucene::analysis::Token::setTermLength(int)
lucene::analysis::Token::setText(wchar_t const*, int)
lucene::analysis::Token::setType(wchar_t const*)
lucene::analysis::Token::startOffset() const
lucene::analysis::Token::termBuffer() const
lucene::analysis::Token::termLength()
lucene::analysis::Token::termText() const
lucene::analysis::Token::termTextLength()
lucene::analysis::Token::toString() const
lucene::analysis::Token::type() const
lucene::analysis::Token::~Token()
lucene::analysis::TokenFilter::TokenFilter(lucene::analysis::TokenStream*, bool)
lucene::analysis::TokenFilter::close()
lucene::analysis::TokenFilter::~TokenFilter()
lucene::analysis::TokenStream::next()
lucene::analysis::TokenStream::reset()
lucene::analysis::TokenStream::~TokenStream()
lucene::analysis::Tokenizer::Tokenizer()
lucene::analysis::Tokenizer::Tokenizer(lucene::util::Reader*)
lucene::analysis::Tokenizer::close()
lucene::analysis::Tokenizer::reset(lucene::util::Reader*)
lucene::analysis::Tokenizer::~Tokenizer()
lucene::analysis::WhitespaceAnalyzer::WhitespaceAnalyzer()
lucene::analysis::WhitespaceAnalyzer::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::WhitespaceAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::WhitespaceAnalyzer::~WhitespaceAnalyzer()
lucene::analysis::WhitespaceTokenizer::WhitespaceTokenizer(lucene::util::Reader*)
lucene::analysis::WhitespaceTokenizer::isTokenChar(wchar_t) const
lucene::analysis::WhitespaceTokenizer::~WhitespaceTokenizer()
lucene::analysis::WordlistLoader::getWordSet(char const*, char const*, lucene::util::CLSetList<wchar_t*, lucene::util::Compare::WChar, lucene::util::Deletor::tcArray>*)
lucene::analysis::WordlistLoader::getWordSet(lucene::util::Reader*, lucene::util::CLSetList<wchar_t*, lucene::util::Compare::WChar, lucene::util::Deletor::tcArray>*, bool)
lucene::analysis::cjk::CJKTokenizer::CJKTokenizer(lucene::util::Reader*)
lucene::analysis::cjk::CJKTokenizer::next(lucene::analysis::Token*)
lucene::analysis::snowball::SnowballAnalyzer::SnowballAnalyzer(wchar_t const*)
lucene::analysis::snowball::SnowballAnalyzer::SnowballAnalyzer(wchar_t const*, wchar_t const**)
lucene::analysis::snowball::SnowballAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::snowball::SnowballAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*, bool)
lucene::analysis::snowball::SnowballAnalyzer::~SnowballAnalyzer()
lucene::analysis::snowball::SnowballFilter::SnowballFilter(lucene::analysis::TokenStream*, wchar_t const*, bool)
lucene::analysis::snowball::SnowballFilter::next(lucene::analysis::Token*)
lucene::analysis::snowball::SnowballFilter::~SnowballFilter()
lucene::analysis::standard::StandardAnalyzer::StandardAnalyzer()
lucene::analysis::standard::StandardAnalyzer::StandardAnalyzer(char const*, char const*)
lucene::analysis::standard::StandardAnalyzer::StandardAnalyzer(lucene::util::Reader*, bool)
lucene::analysis::standard::StandardAnalyzer::StandardAnalyzer(wchar_t const**)
lucene::analysis::standard::StandardAnalyzer::reusableTokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::standard::StandardAnalyzer::tokenStream(wchar_t const*, lucene::util::Reader*)
lucene::analysis::standard::StandardAnalyzer::~StandardAnalyzer()
lucene::analysis::standard::StandardFilter::StandardFilter(lucene::analysis::TokenStream*, bool)
lucene::analysis::standard::StandardFilter::next(lucene::analysis::Token*)
lucene::analysis::standard::StandardFilter::~StandardFilter()
lucene::analysis::standard::StandardTokenizer::ReadAlphaNum(wchar_t, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::ReadApostrophe(lucene::util::StringBuffer*, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::ReadAt(lucene::util::StringBuffer*, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::ReadCJK(wchar_t, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::ReadCompany(lucene::util::StringBuffer*, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::ReadDotted(lucene::util::StringBuffer*, lucene::analysis::standard::TokenTypes, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::ReadNumber(wchar_t const*, wchar_t, lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::StandardTokenizer(lucene::util::BufferedReader*, bool)
lucene::analysis::standard::StandardTokenizer::next(lucene::analysis::Token*)
lucene::analysis::standard::StandardTokenizer::readChar()
lucene::analysis::standard::StandardTokenizer::reset(lucene::util::Reader*)
lucene::analysis::standard::StandardTokenizer::unReadChar()
lucene::analysis::standard::StandardTokenizer::~StandardTokenizer()
lucene::document::DateField::stringToTime(wchar_t const*)
lucene::document::DateField::timeToString(long)
lucene::document::DateField::timeToString(long, wchar_t*)
lucene::document::DateField::~DateField()
lucene::document::DateTools::getISOFormat(long)
lucene::document::DateTools::getISOFormat(unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
lucene::document::DateTools::getTime(unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
lucene::document::DateTools::strCatDate(wchar_t*, int, int)
lucene::document::DateTools::stringToDate(wchar_t const*)
lucene::document::DateTools::stringToTime(wchar_t const*)
lucene::document::DateTools::timeMakeInclusive(long)
lucene::document::DateTools::timeToString(long, lucene::document::DateTools::Resolution)
lucene::document::DateTools::timeToString(long, lucene::document::DateTools::Resolution, wchar_t*, unsigned long)
lucene::document::DateTools::~DateTools()
lucene::document::Document::Document()
lucene::document::Document::fields()
lucene::document::Document::getBoost() const
lucene::document::Document::getField(wchar_t const*) const
lucene::document::Document::getFields() const
lucene::document::Document::getValues(wchar_t const*)
lucene::document::Document::removeField(wchar_t const*)
lucene::document::Document::removeFields(wchar_t const*)
lucene::document::Document::setBoost(float)
lucene::document::Document::toString() const
lucene::document::Document::~Document()
lucene::document::DocumentFieldEnumeration::DocumentFieldEnumeration(__gnu_cxx::__normal_iterator<lucene::document::Field**, std::vector<lucene::document::Field*, std::allocator<lucene::document::Field*> > >, __gnu_cxx::__normal_iterator<lucene::document::Field**, std::vector<lucene::document::Field*, std::allocator<lucene::document::Field*> > >)
lucene::document::DocumentFieldEnumeration::hasMoreElements() const
lucene::document::DocumentFieldEnumeration::nextElement()
lucene::document::DocumentFieldEnumeration::~DocumentFieldEnumeration()
lucene::document::Field::Field(wchar_t const*, int)
lucene::document::Field::Field(wchar_t const*, lucene::util::Reader*, int)
lucene::document::Field::Field(wchar_t const*, lucene::util::ValueArray<unsigned char>*, int, bool)
lucene::document::Field::Field(wchar_t const*, wchar_t const*, int, bool)
lucene::document::Field::_resetValue()
lucene::document::Field::binaryValue()
lucene::document::Field::getBoost() const
lucene::document::Field::getClassName()
lucene::document::Field::getObjectName() const
lucene::document::Field::getOmitNorms() const
lucene::document::Field::isBinary() const
lucene::document::Field::isCompressed() const
lucene::document::Field::isIndexed() const
lucene::document::Field::isLazy() const
lucene::document::Field::isStoreOffsetWithTermVector() const
lucene::document::Field::isStorePositionWithTermVector() const
lucene::document::Field::isStored() const
lucene::document::Field::isTermVectorStored() const
lucene::document::Field::isTokenized() const
lucene::document::Field::name() const
lucene::document::Field::readerValue()
lucene::document::Field::setBoost(float)
lucene::document::Field::setConfig(unsigned int)
lucene::document::Field::setOmitNorms(bool)
lucene::document::Field::setValue(lucene::analysis::TokenStream*)
lucene::document::Field::setValue(lucene::util::Reader*)
lucene::document::Field::setValue(lucene::util::ValueArray<unsigned char>*)
lucene::document::Field::setValue(wchar_t*, bool)
lucene::document::Field::stringValue()
lucene::document::Field::toString()
lucene::document::Field::tokenStreamValue()
lucene::document::Field::~Field()
lucene::document::FieldSelector::~FieldSelector()
lucene::document::LoadFirstFieldSelector::accept(wchar_t const*) const
lucene::document::LoadFirstFieldSelector::~LoadFirstFieldSelector()
lucene::document::MapFieldSelector::MapFieldSelector()
lucene::document::MapFieldSelector::MapFieldSelector(lucene::util::ArrayBase<wchar_t const*>&)
lucene::document::MapFieldSelector::MapFieldSelector(std::vector<wchar_t const*, std::allocator<wchar_t const*> >&)
lucene::document::MapFieldSelector::accept(wchar_t const*) const
lucene::document::MapFieldSelector::add(wchar_t const*, lucene::document::FieldSelector::FieldSelectorResult)
lucene::document::MapFieldSelector::~MapFieldSelector()
lucene::document::NumberTools::longToString(long)
lucene::document::NumberTools::stringToLong(wchar_t const*)
lucene::document::NumberTools::~NumberTools()
lucene::index::DirectoryIndexReader::DirectoryIndexReader()
lucene::index::DirectoryIndexReader::acquireWriteLock()
lucene::index::DirectoryIndexReader::directory()
lucene::index::DirectoryIndexReader::doClose()
lucene::index::DirectoryIndexReader::doCommit()
lucene::index::DirectoryIndexReader::getVersion()
lucene::index::DirectoryIndexReader::init(lucene::store::Directory*, lucene::index::SegmentInfos*, bool)
lucene::index::DirectoryIndexReader::isCurrent()
lucene::index::DirectoryIndexReader::isOptimized()
lucene::index::DirectoryIndexReader::reopen()
lucene::index::DirectoryIndexReader::setDeletionPolicy(lucene::index::IndexDeletionPolicy*)
lucene::index::DirectoryIndexReader::~DirectoryIndexReader()
lucene::index::FieldInfos::FieldInfos()
lucene::index::FieldInfos::FieldInfos(lucene::store::Directory*, char const*)
lucene::index::FieldInfos::add(lucene::document::Document const*)
lucene::index::FieldInfos::add(wchar_t const**, bool, bool, bool, bool, bool, bool)
lucene::index::FieldInfos::add(wchar_t const*, bool, bool, bool, bool, bool, bool)
lucene::index::FieldInfos::addIndexed(wchar_t const**, bool, bool, bool)
lucene::index::FieldInfos::addInternal(wchar_t const*, bool, bool, bool, bool, bool, bool)
lucene::index::FieldInfos::clone()
lucene::index::FieldInfos::fieldInfo(int) const
lucene::index::FieldInfos::fieldInfo(wchar_t const*) const
lucene::index::FieldInfos::fieldName(int) const
lucene::index::FieldInfos::fieldNumber(wchar_t const*) const
lucene::index::FieldInfos::hasVectors() const
lucene::index::FieldInfos::read(lucene::store::IndexInput*)
lucene::index::FieldInfos::size() const
lucene::index::FieldInfos::write(lucene::store::Directory*, char const*) const
lucene::index::FieldInfos::write(lucene::store::IndexOutput*) const
lucene::index::FieldInfos::~FieldInfos()
lucene::index::IndexCommitPoint::~IndexCommitPoint()
lucene::index::IndexDeletionPolicy::~IndexDeletionPolicy()
lucene::index::IndexFileNames::COMPOUND_EXTENSIONS()
lucene::index::IndexFileNames::INDEX_EXTENSIONS()
lucene::index::IndexFileNames::INDEX_EXTENSIONS_IN_COMPOUND_FILE()
lucene::index::IndexFileNames::NON_STORE_INDEX_EXTENSIONS()
lucene::index::IndexFileNames::STORE_INDEX_EXTENSIONS()
lucene::index::IndexFileNames::VECTOR_EXTENSIONS()
lucene::index::IndexFileNames::fileNameFromGeneration[abi:cxx11](char const*, char const*, long)
lucene::index::IndexFileNames::isDocStoreFile(char const*)
lucene::index::IndexModifier::IndexModifier(char const*, lucene::analysis::Analyzer*, bool)
lucene::index::IndexModifier::IndexModifier(lucene::store::Directory*, lucene::analysis::Analyzer*, bool)
lucene::index::IndexModifier::addDocument(lucene::document::Document*, lucene::analysis::Analyzer*)
lucene::index::IndexModifier::assureOpen() const
lucene::index::IndexModifier::close()
lucene::index::IndexModifier::createIndexReader()
lucene::index::IndexModifier::createIndexWriter(bool)
lucene::index::IndexModifier::deleteDocument(int)
lucene::index::IndexModifier::deleteDocuments(lucene::index::Term*)
lucene::index::IndexModifier::docCount()
lucene::index::IndexModifier::document(int)
lucene::index::IndexModifier::document(int, lucene::document::Document&)
lucene::index::IndexModifier::document(int, lucene::document::Document*)
lucene::index::IndexModifier::flush()
lucene::index::IndexModifier::getCurrentVersion() const
lucene::index::IndexModifier::getDirectory()
lucene::index::IndexModifier::getMaxBufferedDocs()
lucene::index::IndexModifier::getMaxFieldLength()
lucene::index::IndexModifier::getMergeFactor()
lucene::index::IndexModifier::getUseCompoundFile()
lucene::index::IndexModifier::init(lucene::store::Directory*, lucene::analysis::Analyzer*, bool)
lucene::index::IndexModifier::optimize()
lucene::index::IndexModifier::setMaxBufferedDocs(int)
lucene::index::IndexModifier::setMaxFieldLength(int)
lucene::index::IndexModifier::setMergeFactor(int)
lucene::index::IndexModifier::setUseCompoundFile(bool)
lucene::index::IndexModifier::termDocs(lucene::index::Term*)
lucene::index::IndexModifier::terms(lucene::index::Term*)
lucene::index::IndexModifier::toString[abi:cxx11]() const
lucene::index::IndexModifier::~IndexModifier()
lucene::index::IndexReader::IndexReader()
lucene::index::IndexReader::IndexReader(lucene::store::Directory*)
lucene::index::IndexReader::acquireWriteLock()
lucene::index::IndexReader::addCloseCallback(void (*)(lucene::index::IndexReader*, void*), void*)
lucene::index::IndexReader::deleteDoc(int)
lucene::index::IndexReader::deleteDocument(int)
lucene::index::IndexReader::deleteDocuments(lucene::index::Term*)
lucene::index::IndexReader::deleteTerm(lucene::index::Term*)
lucene::index::IndexReader::directory()
lucene::index::IndexReader::document(int)
lucene::index::IndexReader::document(int, lucene::document::Document&)
lucene::index::IndexReader::document(int, lucene::document::Document*)
lucene::index::IndexReader::ensureOpen()
lucene::index::IndexReader::flush()
lucene::index::IndexReader::getCurrentVersion(char const*)
lucene::index::IndexReader::getCurrentVersion(lucene::store::Directory*)
lucene::index::IndexReader::getDirectory()
lucene::index::IndexReader::getTermInfosIndexDivisor()
lucene::index::IndexReader::getVersion()
lucene::index::IndexReader::hasNorms(wchar_t const*)
lucene::index::IndexReader::indexExists(char const*)
lucene::index::IndexReader::indexExists(lucene::store::Directory const*)
lucene::index::IndexReader::isCurrent()
lucene::index::IndexReader::isLocked(char const*)
lucene::index::IndexReader::isLocked(lucene::store::Directory*)
lucene::index::IndexReader::isLuceneFile(char const*)
lucene::index::IndexReader::isOptimized()
lucene::index::IndexReader::lastModified(char const*)
lucene::index::IndexReader::lastModified(lucene::store::Directory*)
lucene::index::IndexReader::open(lucene::store::Directory*, bool, lucene::index::IndexDeletionPolicy*)
lucene::index::IndexReader::reopen()
lucene::index::IndexReader::setNorm(int, wchar_t const*, float)
lucene::index::IndexReader::setNorm(int, wchar_t const*, unsigned char)
lucene::index::IndexReader::setTermInfosIndexDivisor(int)
lucene::index::IndexReader::termDocs(lucene::index::Term*)
lucene::index::IndexReader::termPositions(lucene::index::Term*)
lucene::index::IndexReader::undeleteAll()
lucene::index::IndexReader::unlock(char const*)
lucene::index::IndexReader::unlock(lucene::store::Directory*)
lucene::index::IndexReader::~IndexReader()
lucene::index::IndexWriter::IndexWriter(char const*, lucene::analysis::Analyzer*, bool)
lucene::index::IndexWriter::IndexWriter(lucene::store::Directory*, bool, lucene::analysis::Analyzer*, bool, lucene::index::IndexDeletionPolicy*, bool)
lucene::index::IndexWriter::IndexWriter(lucene::store::Directory*, bool, lucene::analysis::Analyzer*, lucene::index::IndexDeletionPolicy*, bool)
lucene::index::IndexWriter::IndexWriter(lucene::store::Directory*, lucene::analysis::Analyzer*, bool, bool)
lucene::index::IndexWriter::Internal::applyDeletes(lucene::util::CLHashMap<lucene::index::Term*, lucene::index::DocumentsWriter::Num*, lucene::index::Term_Compare, lucene::index::Term_Equals, lucene::util::Deletor::Object<lucene::index::Term>, lucene::util::Deletor::Object<lucene::index::DocumentsWriter::Num> > const&, lucene::index::IndexReader*)
lucene::index::IndexWriter::Internal::applyDeletesSelectively(lucene::util::CLHashMap<lucene::index::Term*, lucene::index::DocumentsWriter::Num*, lucene::index::Term_Compare, lucene::index::Term_Equals, lucene::util::Deletor::Object<lucene::index::Term>, lucene::util::Deletor::Object<lucene::index::DocumentsWriter::Num> > const&, std::vector<int, std::allocator<int> > const&, lucene::index::IndexReader*)
lucene::index::IndexWriter::_mergeInit(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::abort()
lucene::index::IndexWriter::addIndexes(lucene::util::ArrayBase<lucene::store::Directory*>&)
lucene::index::IndexWriter::addIndexesNoOptimize(lucene::util::ArrayBase<lucene::store::Directory*>&)
lucene::index::IndexWriter::addMergeException(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::applyDeletes(bool)
lucene::index::IndexWriter::checkpoint()
lucene::index::IndexWriter::close(bool)
lucene::index::IndexWriter::closeInternal(bool)
lucene::index::IndexWriter::commitMerge(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::commitTransaction()
lucene::index::IndexWriter::copyExternalSegments()
lucene::index::IndexWriter::decrefMergeSegments(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::deinit(bool)
lucene::index::IndexWriter::deleteDocuments(lucene::index::Term*)
lucene::index::IndexWriter::deleteDocuments(lucene::util::ArrayBase<lucene::index::Term*> const*)
lucene::index::IndexWriter::deletePartialSegmentsFile()
lucene::index::IndexWriter::doAfterFlush()
lucene::index::IndexWriter::doFlush(bool)
lucene::index::IndexWriter::docCount()
lucene::index::IndexWriter::ensureContiguousMerge(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::ensureOpen()
lucene::index::IndexWriter::finishMerges(bool)
lucene::index::IndexWriter::flush()
lucene::index::IndexWriter::flush(bool, bool)
lucene::index::IndexWriter::flushDocStores()
lucene::index::IndexWriter::getAnalyzer()
lucene::index::IndexWriter::getBufferedDeleteTermsSize()
lucene::index::IndexWriter::getDefaultInfoStream()
lucene::index::IndexWriter::getDefaultWriteLockTimeout()
lucene::index::IndexWriter::getDirectory()
lucene::index::IndexWriter::getDocCount(int)
lucene::index::IndexWriter::getInfoStream()
lucene::index::IndexWriter::getLogMergePolicy() const
lucene::index::IndexWriter::getMaxBufferedDeleteTerms()
lucene::index::IndexWriter::getMaxBufferedDocs()
lucene::index::IndexWriter::getMaxFieldLength()
lucene::index::IndexWriter::getMaxMergeDocs() const
lucene::index::IndexWriter::getMergeFactor() const
lucene::index::IndexWriter::getMergePolicy()
lucene::index::IndexWriter::getMergeScheduler()
lucene::index::IndexWriter::getNextMerge()
lucene::index::IndexWriter::getNumBufferedDeleteTerms()
lucene::index::IndexWriter::getNumBufferedDocuments()
lucene::index::IndexWriter::getRAMBufferSizeMB()
lucene::index::IndexWriter::getSegmentCount()
lucene::index::IndexWriter::getSimilarity()
lucene::index::IndexWriter::getTermIndexInterval()
lucene::index::IndexWriter::getUseCompoundFile()
lucene::index::IndexWriter::getWriteLockTimeout()
lucene::index::IndexWriter::init(lucene::store::Directory*, lucene::analysis::Analyzer*, bool, bool, lucene::index::IndexDeletionPolicy*, bool)
lucene::index::IndexWriter::init(lucene::store::Directory*, lucene::analysis::Analyzer*, bool, lucene::index::IndexDeletionPolicy*, bool)
lucene::index::IndexWriter::maybeMerge()
lucene::index::IndexWriter::maybeMerge(bool)
lucene::index::IndexWriter::maybeMerge(int, bool)
lucene::index::IndexWriter::merge(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::mergeFinish(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::mergeInit(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::mergeMiddle(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
lucene::index::IndexWriter::messageState()
lucene::index::IndexWriter::newSegmentName[abi:cxx11]()
lucene::index::IndexWriter::newestSegment()
lucene::index::IndexWriter::numRamDocs()
lucene::index::IndexWriter::optimize(int, bool)
lucene::index::IndexWriter::optimizeMergesPending()
lucene::index::IndexWriter::pushMaxBufferedDocs()
lucene::index::IndexWriter::ramSizeInBytes()
lucene::index::IndexWriter::registerMerge(lucene::index::MergePolicy::OneMerge*)
lucene::index::IndexWriter::resetMergeExceptions()
lucene::index::IndexWriter::rollbackTransaction()
lucene::index::IndexWriter::segString[abi:cxx11]()
lucene::index::IndexWriter::setDefaultInfoStream(std::basic_ostream<char, std::char_traits<char> >*)
lucene::index::IndexWriter::setDefaultWriteLockTimeout(long)
lucene::index::IndexWriter::setInfoStream(std::basic_ostream<char, std::char_traits<char> >*)
lucene::index::IndexWriter::setMaxBufferedDeleteTerms(int)
lucene::index::IndexWriter::setMaxBufferedDocs(int)
lucene::index::IndexWriter::setMaxMergeDocs(int)
lucene::index::IndexWriter::setMergeFactor(int)
lucene::index::IndexWriter::setMergePolicy(lucene::index::MergePolicy*)
lucene::index::IndexWriter::setMergeScheduler(lucene::index::MergeScheduler*)
lucene::index::IndexWriter::setMessageID()
lucene::index::IndexWriter::setRAMBufferSizeMB(float)
lucene::index::IndexWriter::setSimilarity(lucene::search::Similarity*)
lucene::index::IndexWriter::setTermIndexInterval(int)
lucene::index::IndexWriter::setUseCompoundFile(bool)
lucene::index::IndexWriter::setWriteLockTimeout(long)
lucene::index::IndexWriter::startTransaction()
lucene::index::IndexWriter::testPoint(char const*)
lucene::index::IndexWriter::updateDocument(lucene::index::Term*, lucene::document::Document*)
lucene::index::IndexWriter::updateDocument(lucene::index::Term*, lucene::document::Document*, lucene::analysis::Analyzer*)
lucene::index::IndexWriter::updatePendingMerges(int, bool)
lucene::index::IndexWriter::waitForClose()
lucene::index::IndexWriter::~IndexWriter()
lucene::index::KeepOnlyLastCommitDeletionPolicy::getClassName()
lucene::index::KeepOnlyLastCommitDeletionPolicy::getObjectName() const
lucene::index::KeepOnlyLastCommitDeletionPolicy::onCommit(std::vector<lucene::index::IndexCommitPoint*, std::allocator<lucene::index::IndexCommitPoint*> >&)
lucene::index::KeepOnlyLastCommitDeletionPolicy::onInit(std::vector<lucene::index::IndexCommitPoint*, std::allocator<lucene::index::IndexCommitPoint*> >&)
lucene::index::KeepOnlyLastCommitDeletionPolicy::~KeepOnlyLastCommitDeletionPolicy()
lucene::index::LogByteSizeMergePolicy::LogByteSizeMergePolicy()
lucene::index::LogByteSizeMergePolicy::getClassName()
lucene::index::LogByteSizeMergePolicy::getMaxMergeMB()
lucene::index::LogByteSizeMergePolicy::getMinMergeMB()
lucene::index::LogByteSizeMergePolicy::getObjectName() const
lucene::index::LogByteSizeMergePolicy::setMaxMergeMB(float)
lucene::index::LogByteSizeMergePolicy::setMinMergeMB(float)
lucene::index::LogByteSizeMergePolicy::size(lucene::index::SegmentInfo*)
lucene::index::LogDocMergePolicy::LogDocMergePolicy()
lucene::index::LogDocMergePolicy::getClassName()
lucene::index::LogDocMergePolicy::getMinMergeDocs()
lucene::index::LogDocMergePolicy::getObjectName() const
lucene::index::LogDocMergePolicy::setMinMergeDocs(int)
lucene::index::LogDocMergePolicy::size(lucene::index::SegmentInfo*)
lucene::index::LogMergePolicy::LogMergePolicy()
lucene::index::LogMergePolicy::close()
lucene::index::LogMergePolicy::findMerges(lucene::index::SegmentInfos*, lucene::index::IndexWriter*)
lucene::index::LogMergePolicy::findMergesForOptimize(lucene::index::SegmentInfos*, lucene::index::IndexWriter*, int, std::vector<lucene::index::SegmentInfo*, std::allocator<lucene::index::SegmentInfo*> >&)
lucene::index::LogMergePolicy::getClassName()
lucene::index::LogMergePolicy::getMaxMergeDocs()
lucene::index::LogMergePolicy::getMergeFactor()
lucene::index::LogMergePolicy::getObjectName() const
lucene::index::LogMergePolicy::getUseCompoundDocStore()
lucene::index::LogMergePolicy::getUseCompoundFile()
lucene::index::LogMergePolicy::instanceOf(char const*) const
lucene::index::LogMergePolicy::isOptimized(lucene::index::IndexWriter*, lucene::index::SegmentInfo*)
lucene::index::LogMergePolicy::isOptimized(lucene::index::SegmentInfos*, lucene::index::IndexWriter*, int, std::vector<lucene::index::SegmentInfo*, std::allocator<lucene::index::SegmentInfo*> >&)
lucene::index::LogMergePolicy::message(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
lucene::index::LogMergePolicy::setMaxMergeDocs(int)
lucene::index::LogMergePolicy::setMergeFactor(int)
lucene::index::LogMergePolicy::setUseCompoundDocStore(bool)
lucene::index::LogMergePolicy::setUseCompoundFile(bool)
lucene::index::LogMergePolicy::useCompoundDocStore(lucene::index::SegmentInfos*)
lucene::index::LogMergePolicy::useCompoundFile(lucene::index::SegmentInfos*, lucene::index::SegmentInfo*)
lucene::index::MergePolicy::MergeSpecification::MergeSpecification()
lucene::index::MergePolicy::MergeSpecification::add(lucene::index::MergePolicy::OneMerge*)
lucene::index::MergePolicy::MergeSpecification::segString[abi:cxx11](lucene::store::Directory*)
lucene::index::MergePolicy::MergeSpecification::~MergeSpecification()
lucene::index::MergePolicy::OneMerge::OneMerge(lucene::index::SegmentInfos*, bool)
lucene::index::MergePolicy::OneMerge::abort()
lucene::index::MergePolicy::OneMerge::checkAborted(lucene::store::Directory*)
lucene::index::MergePolicy::OneMerge::getClassName()
lucene::index::MergePolicy::OneMerge::getException()
lucene::index::MergePolicy::OneMerge::getObjectName() const
lucene::index::MergePolicy::OneMerge::isAborted()
lucene::index::MergePolicy::OneMerge::segString[abi:cxx11](lucene::store::Directory*) const
lucene::index::MergePolicy::OneMerge::setException(CLuceneError&)
lucene::index::MergePolicy::OneMerge::~OneMerge()
lucene::index::MultiReader::MultiReader(lucene::util::ArrayBase<lucene::index::IndexReader*> const*, bool)
lucene::index::MultiReader::doClose()
lucene::index::MultiReader::doCommit()
lucene::index::MultiReader::doDelete(int)
lucene::index::MultiReader::doSetNorm(int, wchar_t const*, unsigned char)
lucene::index::MultiReader::doUndeleteAll()
lucene::index::MultiReader::docFreq(lucene::index::Term const*)
lucene::index::MultiReader::document(int, lucene::document::Document&, lucene::document::FieldSelector const*)
lucene::index::MultiReader::fakeNorms()
lucene::index::MultiReader::getClassName()
lucene::index::MultiReader::getFieldNames(lucene::index::IndexReader::FieldOption, lucene::util::CLVector<wchar_t*, lucene::util::Deletor::tcArray>&)
lucene::index::MultiReader::getObjectName() const
lucene::index::MultiReader::getSubReaders() const
lucene::index::MultiReader::getTermFreqVector(int, lucene::index::TermVectorMapper*)
lucene::index::MultiReader::getTermFreqVector(int, wchar_t const*)
lucene::index::MultiReader::getTermFreqVector(int, wchar_t const*, lucene::index::TermVectorMapper*)
lucene::index::MultiReader::getTermFreqVectors(int)
lucene::index::MultiReader::getVersion()
lucene::index::MultiReader::hasDeletions() const
lucene::index::MultiReader::hasNorms(wchar_t const*)
lucene::index::MultiReader::init(lucene::util::ArrayBase<lucene::index::IndexReader*> const*, bool)
lucene::index::MultiReader::isCurrent()
lucene::index::MultiReader::isDeleted(int)
lucene::index::MultiReader::isOptimized()
lucene::index::MultiReader::maxDoc() const
lucene::index::MultiReader::norms(wchar_t const*)
lucene::index::MultiReader::norms(wchar_t const*, unsigned char*)
lucene::index::MultiReader::numDocs()
lucene::index::MultiReader::readerIndex(int) const
lucene::index::MultiReader::reopen()
lucene::index::MultiReader::termDocs()
lucene::index::MultiReader::termPositions()
lucene::index::MultiReader::terms()
lucene::index::MultiReader::terms(lucene::index::Term const*)
lucene::index::MultiReader::~MultiReader()
lucene::index::MultipleTermPositions::MultipleTermPositions(lucene::index::IndexReader*, lucene::util::ArrayBase<lucene::index::Term*> const*)
lucene::index::MultipleTermPositions::__asTermDocs()
lucene::index::MultipleTermPositions::__asTermPositions()
lucene::index::MultipleTermPositions::close()
lucene::index::MultipleTermPositions::doc() const
lucene::index::MultipleTermPositions::freq() const
lucene::index::MultipleTermPositions::getPayload(unsigned char*)
lucene::index::MultipleTermPositions::getPayloadLength() const
lucene::index::MultipleTermPositions::isPayloadAvailable() const
lucene::index::MultipleTermPositions::next()
lucene::index::MultipleTermPositions::nextPosition()
lucene::index::MultipleTermPositions::read(int*, int*, int)
lucene::index::MultipleTermPositions::seek(lucene::index::Term*)
lucene::index::MultipleTermPositions::seek(lucene::index::TermEnum*)
lucene::index::MultipleTermPositions::skipTo(int)
lucene::index::MultipleTermPositions::~MultipleTermPositions()
lucene::index::Payload::Payload()
lucene::index::Payload::Payload(lucene::util::ValueArray<unsigned char>&, int, int, bool)
lucene::index::Payload::Payload(unsigned char*, int, bool)
lucene::index::Payload::byteAt(int) const
lucene::index::Payload::clone() const
lucene::index::Payload::copyTo(unsigned char*, int) const
lucene::index::Payload::getData() const
lucene::index::Payload::getOffset() const
lucene::index::Payload::length() const
lucene::index::Payload::setData(lucene::util::ValueArray<unsigned char>&, int, int, bool)
lucene::index::Payload::setData(unsigned char*, int, bool)
lucene::index::Payload::toByteArray() const
lucene::index::Payload::~Payload()
lucene::index::SerialMergeScheduler::close()
lucene::index::SerialMergeScheduler::getClassName()
lucene::index::SerialMergeScheduler::getObjectName() const
lucene::index::SerialMergeScheduler::merge(lucene::index::IndexWriter*)
lucene::index::Term::Term()
lucene::index::Term::Term(lucene::index::Term const*, wchar_t const*)
lucene::index::Term::Term(wchar_t const*, wchar_t const*)
lucene::index::Term::Term(wchar_t const*, wchar_t const*, bool)
lucene::index::Term::compareTo(lucene::index::Term const*) const
lucene::index::Term::equals(lucene::index::Term const*) const
lucene::index::Term::field() const
lucene::index::Term::hashCode()
lucene::index::Term::hashedCompareTo(lucene::index::Term*)
lucene::index::Term::set(lucene::index::Term const*, wchar_t const*)
lucene::index::Term::set(wchar_t const*, wchar_t const*, bool)
lucene::index::Term::text() const
lucene::index::Term::textLength() const
lucene::index::Term::toString() const
lucene::index::Term::~Term()
lucene::index::TermDocs::~TermDocs()
lucene::index::TermEnum::skipTo(lucene::index::Term*)
lucene::index::TermEnum::~TermEnum()
lucene::index::TermPositions::~TermPositions()
lucene::index::TermVectorMapper::TermVectorMapper()
lucene::index::TermVectorMapper::TermVectorMapper(bool, bool)
lucene::index::TermVectorMapper::isIgnoringOffsets() const
lucene::index::TermVectorMapper::isIgnoringPositions() const
lucene::index::TermVectorMapper::setDocumentNumber(int)
lucene::index::TermVectorOffsetInfo::TermVectorOffsetInfo()
lucene::index::TermVectorOffsetInfo::TermVectorOffsetInfo(int, int)
lucene::index::TermVectorOffsetInfo::equals(lucene::index::TermVectorOffsetInfo*)
lucene::index::TermVectorOffsetInfo::getEndOffset() const
lucene::index::TermVectorOffsetInfo::getStartOffset() const
lucene::index::TermVectorOffsetInfo::hashCode() const
lucene::index::TermVectorOffsetInfo::setEndOffset(int)
lucene::index::TermVectorOffsetInfo::setStartOffset(int)
lucene::index::TermVectorOffsetInfo::~TermVectorOffsetInfo()
lucene::index::TermVectorsReader::TermVectorsReader(lucene::index::TermVectorsReader const&)
lucene::index::TermVectorsReader::TermVectorsReader(lucene::store::Directory*, char const*, lucene::index::FieldInfos*, int, int, int)
lucene::index::TermVectorsReader::checkValidFormat(lucene::store::IndexInput*)
lucene::index::TermVectorsReader::clone() const
lucene::index::TermVectorsReader::close()
lucene::index::TermVectorsReader::get(int)
lucene::index::TermVectorsReader::get(int, lucene::index::TermVectorMapper*)
lucene::index::TermVectorsReader::get(int, wchar_t const*)
lucene::index::TermVectorsReader::get(int, wchar_t const*, lucene::index::TermVectorMapper*)
lucene::index::TermVectorsReader::readTermVector(wchar_t const*, long, lucene::index::TermVectorMapper*)
lucene::index::TermVectorsReader::readTermVectors(int, wchar_t const**, long const*, int)
lucene::index::TermVectorsReader::readTermVectors(wchar_t const**, long const*, int, lucene::index::TermVectorMapper*)
lucene::index::TermVectorsReader::size() const
lucene::index::TermVectorsReader::~TermVectorsReader()
lucene::queryParser::MultiFieldQueryParser::MultiFieldQueryParser(wchar_t const**, lucene::analysis::Analyzer*, lucene::util::CLHashMap<wchar_t*, float, lucene::util::Compare::WChar, lucene::util::Equals::TChar, lucene::util::Deletor::Dummy, lucene::util::Deletor::DummyFloat>*)
lucene::queryParser::MultiFieldQueryParser::getFieldQuery(wchar_t const*, wchar_t*, int)
lucene::queryParser::MultiFieldQueryParser::getFuzzyQuery(wchar_t const*, wchar_t*, float)
lucene::queryParser::MultiFieldQueryParser::getPrefixQuery(wchar_t const*, wchar_t*)
lucene::queryParser::MultiFieldQueryParser::getRangeQuery(wchar_t const*, wchar_t*, wchar_t*, bool)
lucene::queryParser::MultiFieldQueryParser::getWildcardQuery(wchar_t const*, wchar_t*)
lucene::queryParser::MultiFieldQueryParser::parse(wchar_t const**, wchar_t const**, lucene::analysis::Analyzer*)
lucene::queryParser::MultiFieldQueryParser::parse(wchar_t const**, wchar_t const**, unsigned char const*, lucene::analysis::Analyzer*)
lucene::queryParser::MultiFieldQueryParser::parse(wchar_t const*, wchar_t const**, unsigned char const*, lucene::analysis::Analyzer*)
lucene::queryParser::MultiFieldQueryParser::~MultiFieldQueryParser()
lucene::queryParser::QueryParser::Conjunction()
lucene::queryParser::QueryParser::JJCalls::JJCalls()
lucene::queryParser::QueryParser::JJCalls::~JJCalls()
lucene::queryParser::QueryParser::Modifiers()
lucene::queryParser::QueryParser::QueryParser(lucene::queryParser::CharStream*)
lucene::queryParser::QueryParser::QueryParser(lucene::queryParser::QueryParserTokenManager*)
lucene::queryParser::QueryParser::QueryParser(wchar_t const*, lucene::analysis::Analyzer*)
lucene::queryParser::QueryParser::ReInit(lucene::queryParser::CharStream*)
lucene::queryParser::QueryParser::ReInit(lucene::queryParser::QueryParserTokenManager*)
lucene::queryParser::QueryParser::TopLevelQuery(wchar_t*)
lucene::queryParser::QueryParser::_deleteTokens()
lucene::queryParser::QueryParser::_init(lucene::queryParser::CharStream*)
lucene::queryParser::QueryParser::addClause(std::vector<lucene::search::BooleanClause*, std::allocator<lucene::search::BooleanClause*> >&, int, int, lucene::search::Query*)
lucene::queryParser::QueryParser::discardEscapeChar(wchar_t*, wchar_t*)
lucene::queryParser::QueryParser::escape(wchar_t const*)
lucene::queryParser::QueryParser::fClause(wchar_t*)
lucene::queryParser::QueryParser::fQuery(wchar_t*)
lucene::queryParser::QueryParser::fTerm(wchar_t const*)
lucene::queryParser::QueryParser::f_jj_ntk()
lucene::queryParser::QueryParser::generateParseException()
lucene::queryParser::QueryParser::getAllowLeadingWildcard() const
lucene::queryParser::QueryParser::getAnalyzer() const
lucene::queryParser::QueryParser::getBooleanQuery(std::vector<lucene::search::BooleanClause*, std::allocator<lucene::search::BooleanClause*> >&, bool)
lucene::queryParser::QueryParser::getDateResolution(wchar_t const*) const
lucene::queryParser::QueryParser::getDefaultOperator() const
lucene::queryParser::QueryParser::getEnablePositionIncrements() const
lucene::queryParser::QueryParser::getField() const
lucene::queryParser::QueryParser::getFieldQuery(wchar_t const*, wchar_t*)
lucene::queryParser::QueryParser::getFieldQuery(wchar_t const*, wchar_t*, int)
lucene::queryParser::QueryParser::getFuzzyMinSim() const
lucene::queryParser::QueryParser::getFuzzyPrefixLength() const
lucene::queryParser::QueryParser::getFuzzyQuery(wchar_t const*, wchar_t*, float)
lucene::queryParser::QueryParser::getLowercaseExpandedTerms() const
lucene::queryParser::QueryParser::getNextToken()
lucene::queryParser::QueryParser::getParseExceptionMessage(lucene::queryParser::QueryToken*, lucene::util::CLVector<lucene::util::ValueArray<int>*, lucene::util::Deletor::Object<lucene::util::ValueArray<int> > >*, wchar_t const**)
lucene::queryParser::QueryParser::getPhraseSlop() const
lucene::queryParser::QueryParser::getPrefixQuery(wchar_t const*, wchar_t*)
lucene::queryParser::QueryParser::getRangeQuery(wchar_t const*, wchar_t*, wchar_t*, bool)
lucene::queryParser::QueryParser::getToken(int)
lucene::queryParser::QueryParser::getUseOldRangeQuery() const
lucene::queryParser::QueryParser::getWildcardQuery(wchar_t const*, wchar_t*)
lucene::queryParser::QueryParser::hexToInt(wchar_t)
lucene::queryParser::QueryParser::jj_2_1(int)
lucene::queryParser::QueryParser::jj_3R_2()
lucene::queryParser::QueryParser::jj_3R_3()
lucene::queryParser::QueryParser::jj_3_1()
lucene::queryParser::QueryParser::jj_add_error_token(int, int)
lucene::queryParser::QueryParser::jj_consume_token(int)
lucene::queryParser::QueryParser::jj_rescan_token()
lucene::queryParser::QueryParser::jj_save(int, int)
lucene::queryParser::QueryParser::jj_scan_token(int)
lucene::queryParser::QueryParser::parse(wchar_t const*)
lucene::queryParser::QueryParser::parse(wchar_t const*, wchar_t const*, lucene::analysis::Analyzer*)
lucene::queryParser::QueryParser::setAllowLeadingWildcard(bool)
lucene::queryParser::QueryParser::setDateResolution(lucene::document::DateTools::Resolution)
lucene::queryParser::QueryParser::setDateResolution(wchar_t const*, lucene::document::DateTools::Resolution)
lucene::queryParser::QueryParser::setDefaultOperator(lucene::queryParser::QueryParser::Operator)
lucene::queryParser::QueryParser::setEnablePositionIncrements(bool)
lucene::queryParser::QueryParser::setFuzzyMinSim(float)
lucene::queryParser::QueryParser::setFuzzyPrefixLength(int)
lucene::queryParser::QueryParser::setLowercaseExpandedTerms(bool)
lucene::queryParser::QueryParser::setPhraseSlop(int)
lucene::queryParser::QueryParser::setUseOldRangeQuery(bool)
lucene::queryParser::QueryParser::~QueryParser()
lucene::queryParser::QueryParserConstants::addEscapes(wchar_t*)
lucene::queryParser::QueryParserTokenManager::QueryParserTokenManager(lucene::queryParser::CharStream*, int)
lucene::queryParser::QueryParserTokenManager::ReInit(lucene::queryParser::CharStream*)
lucene::queryParser::QueryParserTokenManager::ReInit(lucene::queryParser::CharStream*, int)
lucene::queryParser::QueryParserTokenManager::ReInitRounds()
lucene::queryParser::QueryParserTokenManager::SwitchTo(int)
lucene::queryParser::QueryParserTokenManager::getLexicalError(bool, int, int, int, wchar_t*, wchar_t)
lucene::queryParser::QueryParserTokenManager::getNextToken()
lucene::queryParser::QueryParserTokenManager::jjAddStates(int, int)
lucene::queryParser::QueryParserTokenManager::jjCanMove_0(int, int, int, long, long)
lucene::queryParser::QueryParserTokenManager::jjCheckNAdd(int)
lucene::queryParser::QueryParserTokenManager::jjCheckNAddStates(int)
lucene::queryParser::QueryParserTokenManager::jjCheckNAddStates(int, int)
lucene::queryParser::QueryParserTokenManager::jjCheckNAddTwoStates(int, int)
lucene::queryParser::QueryParserTokenManager::jjFillToken()
lucene::queryParser::QueryParserTokenManager::jjMoveNfa_0(int, int)
lucene::queryParser::QueryParserTokenManager::jjMoveNfa_1(int, int)
lucene::queryParser::QueryParserTokenManager::jjMoveNfa_2(int, int)
lucene::queryParser::QueryParserTokenManager::jjMoveNfa_3(int, int)
lucene::queryParser::QueryParserTokenManager::jjMoveStringLiteralDfa0_0()
lucene::queryParser::QueryParserTokenManager::jjMoveStringLiteralDfa0_1()
lucene::queryParser::QueryParserTokenManager::jjMoveStringLiteralDfa0_2()
lucene::queryParser::QueryParserTokenManager::jjMoveStringLiteralDfa0_3()
lucene::queryParser::QueryParserTokenManager::jjMoveStringLiteralDfa1_1(long)
lucene::queryParser::QueryParserTokenManager::jjMoveStringLiteralDfa1_2(long)
lucene::queryParser::QueryParserTokenManager::jjStartNfaWithStates_1(int, int, int)
lucene::queryParser::QueryParserTokenManager::jjStartNfaWithStates_2(int, int, int)
lucene::queryParser::QueryParserTokenManager::jjStartNfaWithStates_3(int, int, int)
lucene::queryParser::QueryParserTokenManager::jjStartNfa_1(int, long)
lucene::queryParser::QueryParserTokenManager::jjStartNfa_2(int, long)
lucene::queryParser::QueryParserTokenManager::jjStartNfa_3(int, long)
lucene::queryParser::QueryParserTokenManager::jjStopAtPos(int, int)
lucene::queryParser::QueryParserTokenManager::jjStopStringLiteralDfa_1(int, long)
lucene::queryParser::QueryParserTokenManager::jjStopStringLiteralDfa_2(int, long)
lucene::queryParser::QueryParserTokenManager::jjStopStringLiteralDfa_3(int, long)
lucene::queryParser::QueryParserTokenManager::~QueryParserTokenManager()
lucene::queryParser::QueryToken::QueryToken()
lucene::queryParser::QueryToken::newToken(int)
lucene::queryParser::QueryToken::toString() const
lucene::queryParser::QueryToken::~QueryToken()
lucene::queryParser::legacy::MultiFieldQueryParser::GetFieldQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::MultiFieldQueryParser::GetFieldQuery(wchar_t const*, wchar_t*, int)
lucene::queryParser::legacy::MultiFieldQueryParser::GetFuzzyQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::MultiFieldQueryParser::GetPrefixQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::MultiFieldQueryParser::GetRangeQuery(wchar_t const*, wchar_t*, wchar_t*, bool)
lucene::queryParser::legacy::MultiFieldQueryParser::GetWildcardQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::MultiFieldQueryParser::MultiFieldQueryParser(wchar_t const**, lucene::analysis::Analyzer*, lucene::util::CLHashMap<wchar_t const*, float, lucene::util::Compare::WChar, lucene::util::Equals::TChar, lucene::util::Deletor::Dummy, lucene::util::Deletor::DummyFloat>*)
lucene::queryParser::legacy::MultiFieldQueryParser::parse(wchar_t const*)
lucene::queryParser::legacy::MultiFieldQueryParser::parse(wchar_t const*, wchar_t const**, lucene::analysis::Analyzer*)
lucene::queryParser::legacy::MultiFieldQueryParser::parse(wchar_t const*, wchar_t const**, unsigned char const*, lucene::analysis::Analyzer*)
lucene::queryParser::legacy::MultiFieldQueryParser::~MultiFieldQueryParser()
lucene::queryParser::legacy::QueryParser::ExtractAndDeleteToken()
lucene::queryParser::legacy::QueryParser::MatchClause(wchar_t const*)
lucene::queryParser::legacy::QueryParser::MatchConjunction()
lucene::queryParser::legacy::QueryParser::MatchModifier()
lucene::queryParser::legacy::QueryParser::MatchQuery(wchar_t const*)
lucene::queryParser::legacy::QueryParser::MatchQueryToken(lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryParser::MatchTerm(wchar_t const*)
lucene::queryParser::legacy::QueryParser::QueryParser(wchar_t const*, lucene::analysis::Analyzer*)
lucene::queryParser::legacy::QueryParser::parse(lucene::util::BufferedReader*)
lucene::queryParser::legacy::QueryParser::parse(wchar_t const*)
lucene::queryParser::legacy::QueryParser::parse(wchar_t const*, wchar_t const*, lucene::analysis::Analyzer*)
lucene::queryParser::legacy::QueryParser::~QueryParser()
lucene::queryParser::legacy::QueryParserBase::AddClause(std::vector<lucene::search::BooleanClause*, std::allocator<lucene::search::BooleanClause*> >&, int, int, lucene::search::Query*)
lucene::queryParser::legacy::QueryParserBase::GetBooleanQuery(std::vector<lucene::search::BooleanClause*, std::allocator<lucene::search::BooleanClause*> >&)
lucene::queryParser::legacy::QueryParserBase::GetBooleanQuery(std::vector<lucene::search::BooleanClause*, std::allocator<lucene::search::BooleanClause*> >&, bool)
lucene::queryParser::legacy::QueryParserBase::GetFieldQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::QueryParserBase::GetFieldQuery(wchar_t const*, wchar_t*, int)
lucene::queryParser::legacy::QueryParserBase::GetFuzzyQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::QueryParserBase::GetPrefixQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::QueryParserBase::GetRangeQuery(wchar_t const*, wchar_t*, wchar_t*, bool)
lucene::queryParser::legacy::QueryParserBase::GetWildcardQuery(wchar_t const*, wchar_t*)
lucene::queryParser::legacy::QueryParserBase::ParseRangeQuery(wchar_t const*, wchar_t*, bool)
lucene::queryParser::legacy::QueryParserBase::QueryParserBase(lucene::analysis::Analyzer*)
lucene::queryParser::legacy::QueryParserBase::discardEscapeChar(wchar_t*) const
lucene::queryParser::legacy::QueryParserBase::getDefaultOperator() const
lucene::queryParser::legacy::QueryParserBase::getLowercaseExpandedTerms() const
lucene::queryParser::legacy::QueryParserBase::setDefaultOperator(int)
lucene::queryParser::legacy::QueryParserBase::setLowercaseExpandedTerms(bool)
lucene::queryParser::legacy::QueryParserBase::throwParserException(wchar_t const*, wchar_t, int, int)
lucene::queryParser::legacy::QueryParserBase::~QueryParserBase()
lucene::queryParser::legacy::QueryToken::QueryToken()
lucene::queryParser::legacy::QueryToken::QueryToken(lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryToken::QueryToken(wchar_t const*, int, int, lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryToken::QueryToken(wchar_t const*, lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryToken::set(lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryToken::set(wchar_t const*, int, int, lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryToken::set(wchar_t const*, lucene::queryParser::legacy::QueryToken::Types)
lucene::queryParser::legacy::QueryToken::~QueryToken()
lucene::search::AbstractCachingFilter::AbstractCachingFilter()
lucene::search::AbstractCachingFilter::AbstractCachingFilter(lucene::search::AbstractCachingFilter const&)
lucene::search::AbstractCachingFilter::bits(lucene::index::IndexReader*)
lucene::search::AbstractCachingFilter::closeCallback(lucene::index::IndexReader*, void*)
lucene::search::AbstractCachingFilter::~AbstractCachingFilter()
lucene::search::BooleanClause::BooleanClause(lucene::search::BooleanClause const&)
lucene::search::BooleanClause::BooleanClause(lucene::search::Query*, bool, bool, bool)
lucene::search::BooleanClause::BooleanClause(lucene::search::Query*, bool, lucene::search::BooleanClause::Occur)
lucene::search::BooleanClause::clone() const
lucene::search::BooleanClause::equals(lucene::search::BooleanClause const*) const
lucene::search::BooleanClause::getOccur() const
lucene::search::BooleanClause::getQuery() const
lucene::search::BooleanClause::hashCode() const
lucene::search::BooleanClause::isProhibited() const
lucene::search::BooleanClause::isRequired() const
lucene::search::BooleanClause::setFields(lucene::search::BooleanClause::Occur)
lucene::search::BooleanClause::setOccur(lucene::search::BooleanClause::Occur)
lucene::search::BooleanClause::setQuery(lucene::search::Query*)
lucene::search::BooleanClause::toString() const
lucene::search::BooleanClause::~BooleanClause()
lucene::search::BooleanQuery::BooleanQuery(bool)
lucene::search::BooleanQuery::BooleanQuery(lucene::search::BooleanQuery const&)
lucene::search::BooleanQuery::_createWeight(lucene::search::Searcher*)
lucene::search::BooleanQuery::add(lucene::search::BooleanClause*)
lucene::search::BooleanQuery::add(lucene::search::Query*, bool, bool, bool)
lucene::search::BooleanQuery::add(lucene::search::Query*, bool, lucene::search::BooleanClause::Occur)
lucene::search::BooleanQuery::clone() const
lucene::search::BooleanQuery::equals(lucene::search::Query*) const
lucene::search::BooleanQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::BooleanQuery::getAllowDocsOutOfOrder()
lucene::search::BooleanQuery::getClassName()
lucene::search::BooleanQuery::getClauseCount() const
lucene::search::BooleanQuery::getClauses() const
lucene::search::BooleanQuery::getClauses(lucene::search::BooleanClause**) const
lucene::search::BooleanQuery::getMaxClauseCount()
lucene::search::BooleanQuery::getMinNrShouldMatch()
lucene::search::BooleanQuery::getObjectName() const
lucene::search::BooleanQuery::getSimilarity(lucene::search::Searcher*)
lucene::search::BooleanQuery::getUseScorer14()
lucene::search::BooleanQuery::hashCode() const
lucene::search::BooleanQuery::isCoordDisabled()
lucene::search::BooleanQuery::rewrite(lucene::index::IndexReader*)
lucene::search::BooleanQuery::setAllowDocsOutOfOrder(bool)
lucene::search::BooleanQuery::setCoordDisabled(bool)
lucene::search::BooleanQuery::setMaxClauseCount(unsigned long)
lucene::search::BooleanQuery::setUseScorer14(bool)
lucene::search::BooleanQuery::toString(wchar_t const*) const
lucene::search::BooleanQuery::~BooleanQuery()
lucene::search::BooleanScorer2::BooleanScorer2(lucene::search::Similarity*, int, bool)
lucene::search::BooleanScorer2::add(lucene::search::Scorer*, bool, bool)
lucene::search::BooleanScorer2::doc() const
lucene::search::BooleanScorer2::explain(int)
lucene::search::BooleanScorer2::next()
lucene::search::BooleanScorer2::score()
lucene::search::BooleanScorer2::score(lucene::search::HitCollector*)
lucene::search::BooleanScorer2::score(lucene::search::HitCollector*, int)
lucene::search::BooleanScorer2::skipTo(int)
lucene::search::BooleanScorer2::toString()
lucene::search::BooleanScorer2::~BooleanScorer2()
lucene::search::CachingWrapperFilter::CachingWrapperFilter(lucene::search::CachingWrapperFilter const&)
lucene::search::CachingWrapperFilter::CachingWrapperFilter(lucene::search::Filter*, bool)
lucene::search::CachingWrapperFilter::clone() const
lucene::search::CachingWrapperFilter::doBits(lucene::index::IndexReader*)
lucene::search::CachingWrapperFilter::doShouldDeleteBitSet(lucene::util::BitSet*)
lucene::search::CachingWrapperFilter::toString()
lucene::search::CachingWrapperFilter::~CachingWrapperFilter()
lucene::search::ChainedFilter::ChainedFilter(lucene::search::ChainedFilter const&)
lucene::search::ChainedFilter::ChainedFilter(lucene::search::Filter**, int)
lucene::search::ChainedFilter::ChainedFilter(lucene::search::Filter**, int*)
lucene::search::ChainedFilter::bits(lucene::index::IndexReader*)
lucene::search::ChainedFilter::bits(lucene::index::IndexReader*, int)
lucene::search::ChainedFilter::bits(lucene::index::IndexReader*, int*)
lucene::search::ChainedFilter::clone() const
lucene::search::ChainedFilter::doChain(lucene::util::BitSet*, lucene::index::IndexReader*, int, lucene::search::Filter*)
lucene::search::ChainedFilter::doUserChain(lucene::util::BitSet*, lucene::util::BitSet*, int)
lucene::search::ChainedFilter::getLogicString(int)
lucene::search::ChainedFilter::toString()
lucene::search::ChainedFilter::~ChainedFilter()
lucene::search::ComplexExplanation::ComplexExplanation()
lucene::search::ComplexExplanation::ComplexExplanation(bool, float, wchar_t const*)
lucene::search::ComplexExplanation::ComplexExplanation(lucene::search::ComplexExplanation const&)
lucene::search::ComplexExplanation::clone() const
lucene::search::ComplexExplanation::getMatch() const
lucene::search::ComplexExplanation::getSummary()
lucene::search::ComplexExplanation::isMatch() const
lucene::search::ComplexExplanation::setMatch(bool)
lucene::search::ComplexExplanation::~ComplexExplanation()
lucene::search::ConstantScoreQuery::ConstantScoreQuery(lucene::search::ConstantScoreQuery const&)
lucene::search::ConstantScoreQuery::ConstantScoreQuery(lucene::search::Filter*)
lucene::search::ConstantScoreQuery::_createWeight(lucene::search::Searcher*)
lucene::search::ConstantScoreQuery::clone() const
lucene::search::ConstantScoreQuery::equals(lucene::search::Query*) const
lucene::search::ConstantScoreQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::ConstantScoreQuery::getFilter() const
lucene::search::ConstantScoreQuery::getObjectName() const
lucene::search::ConstantScoreQuery::hashCode() const
lucene::search::ConstantScoreQuery::rewrite(lucene::index::IndexReader*)
lucene::search::ConstantScoreQuery::toString(wchar_t const*) const
lucene::search::ConstantScoreQuery::~ConstantScoreQuery()
lucene::search::ConstantScoreRangeQuery::ConstantScoreRangeQuery(lucene::search::ConstantScoreRangeQuery const&)
lucene::search::ConstantScoreRangeQuery::ConstantScoreRangeQuery(wchar_t const*, wchar_t const*, wchar_t const*, bool, bool)
lucene::search::ConstantScoreRangeQuery::clone() const
lucene::search::ConstantScoreRangeQuery::equals(lucene::search::Query*) const
lucene::search::ConstantScoreRangeQuery::getObjectName() const
lucene::search::ConstantScoreRangeQuery::hashCode() const
lucene::search::ConstantScoreRangeQuery::rewrite(lucene::index::IndexReader*)
lucene::search::ConstantScoreRangeQuery::toString(wchar_t const*) const
lucene::search::ConstantScoreRangeQuery::~ConstantScoreRangeQuery()
lucene::search::DateFilter::After(wchar_t const*, long)
lucene::search::DateFilter::Before(wchar_t const*, long)
lucene::search::DateFilter::DateFilter(lucene::search::DateFilter const&)
lucene::search::DateFilter::DateFilter(wchar_t const*, long, long)
lucene::search::DateFilter::bits(lucene::index::IndexReader*)
lucene::search::DateFilter::clone() const
lucene::search::DateFilter::toString()
lucene::search::DateFilter::~DateFilter()
lucene::search::DefaultSimilarity::DefaultSimilarity()
lucene::search::DefaultSimilarity::coord(int, int)
lucene::search::DefaultSimilarity::idf(int, int)
lucene::search::DefaultSimilarity::lengthNorm(wchar_t const*, int)
lucene::search::DefaultSimilarity::queryNorm(float)
lucene::search::DefaultSimilarity::sloppyFreq(int)
lucene::search::DefaultSimilarity::~DefaultSimilarity()
lucene::search::Explanation::Explanation()
lucene::search::Explanation::Explanation(float, wchar_t const*)
lucene::search::Explanation::Explanation(lucene::search::Explanation const&)
lucene::search::Explanation::addDetail(lucene::search::Explanation*)
lucene::search::Explanation::clone() const
lucene::search::Explanation::getDescription() const
lucene::search::Explanation::getDetail(unsigned long)
lucene::search::Explanation::getDetails(lucene::search::Explanation**)
lucene::search::Explanation::getDetailsLength() const
lucene::search::Explanation::getSummary()
lucene::search::Explanation::getValue() const
lucene::search::Explanation::isMatch() const
lucene::search::Explanation::set(lucene::search::Explanation const&)
lucene::search::Explanation::setDescription(wchar_t const*)
lucene::search::Explanation::setValue(float)
lucene::search::Explanation::toHtml()
lucene::search::Explanation::toString()
lucene::search::Explanation::toString(int)
lucene::search::Explanation::~Explanation()
lucene::search::FieldCache::DEFAULT()
lucene::search::FieldCache::StringIndex::StringIndex(int*, wchar_t**, int)
lucene::search::FieldCache::StringIndex::~StringIndex()
lucene::search::FieldCacheAuto::FieldCacheAuto(int, int)
lucene::search::FieldCacheAuto::~FieldCacheAuto()
lucene::search::FieldDoc::FieldDoc(int, float)
lucene::search::FieldDoc::FieldDoc(int, float, lucene::util::Comparable**)
lucene::search::FieldDoc::~FieldDoc()
lucene::search::FieldSortedHitQueue::FieldSortedHitQueue(lucene::index::IndexReader*, lucene::search::SortField**, int)
lucene::search::FieldSortedHitQueue::closeCallback(lucene::index::IndexReader*, void*)
lucene::search::FieldSortedHitQueue::comparatorAuto(lucene::index::IndexReader*, wchar_t const*)
lucene::search::FieldSortedHitQueue::comparatorFloat(lucene::index::IndexReader*, wchar_t const*)
lucene::search::FieldSortedHitQueue::comparatorInt(lucene::index::IndexReader*, wchar_t const*)
lucene::search::FieldSortedHitQueue::comparatorString(lucene::index::IndexReader*, wchar_t const*)
lucene::search::FieldSortedHitQueue::fillFields(lucene::search::FieldDoc*) const
lucene::search::FieldSortedHitQueue::getCachedComparator(lucene::index::IndexReader*, wchar_t const*, int, lucene::search::SortComparatorSource*)
lucene::search::FieldSortedHitQueue::lessThan(lucene::search::FieldDoc*, lucene::search::FieldDoc*)
lucene::search::FieldSortedHitQueue::lookup(lucene::index::IndexReader*, wchar_t const*, int, lucene::search::SortComparatorSource*)
lucene::search::FieldSortedHitQueue::store(lucene::index::IndexReader*, wchar_t const*, int, lucene::search::SortComparatorSource*, lucene::search::ScoreDocComparator*)
lucene::search::FieldSortedHitQueue::~FieldSortedHitQueue()
lucene::search::FilteredTermEnum::FilteredTermEnum()
lucene::search::FilteredTermEnum::close()
lucene::search::FilteredTermEnum::docFreq() const
lucene::search::FilteredTermEnum::next()
lucene::search::FilteredTermEnum::setEnum(lucene::index::TermEnum*)
lucene::search::FilteredTermEnum::term(bool)
lucene::search::FilteredTermEnum::~FilteredTermEnum()
lucene::search::FuzzyQuery::FuzzyQuery(lucene::index::Term*, float, unsigned long)
lucene::search::FuzzyQuery::FuzzyQuery(lucene::search::FuzzyQuery const&)
lucene::search::FuzzyQuery::clone() const
lucene::search::FuzzyQuery::equals(lucene::search::Query*) const
lucene::search::FuzzyQuery::getClassName()
lucene::search::FuzzyQuery::getEnum(lucene::index::IndexReader*)
lucene::search::FuzzyQuery::getMinSimilarity() const
lucene::search::FuzzyQuery::getObjectName() const
lucene::search::FuzzyQuery::getPrefixLength() const
lucene::search::FuzzyQuery::hashCode() const
lucene::search::FuzzyQuery::rewrite(lucene::index::IndexReader*)
lucene::search::FuzzyQuery::toString(wchar_t const*) const
lucene::search::FuzzyQuery::~FuzzyQuery()
lucene::search::FuzzyTermEnum::FuzzyTermEnum(lucene::index::IndexReader*, lucene::index::Term*, float, unsigned long)
lucene::search::FuzzyTermEnum::calculateMaxDistance(unsigned long) const
lucene::search::FuzzyTermEnum::close()
lucene::search::FuzzyTermEnum::difference()
lucene::search::FuzzyTermEnum::endEnum()
lucene::search::FuzzyTermEnum::getClassName()
lucene::search::FuzzyTermEnum::getMaxDistance(unsigned long)
lucene::search::FuzzyTermEnum::getObjectName() const
lucene::search::FuzzyTermEnum::initializeMaxDistances()
lucene::search::FuzzyTermEnum::similarity(wchar_t const*, unsigned long)
lucene::search::FuzzyTermEnum::termCompare(lucene::index::Term*)
lucene::search::FuzzyTermEnum::~FuzzyTermEnum()
lucene::search::HitDoc::HitDoc(float, int)
lucene::search::HitDoc::~HitDoc()
lucene::search::Hits::Hits(lucene::search::Searcher*, lucene::search::Query*, lucene::search::Filter*, lucene::search::Sort const*)
lucene::search::Hits::addToFront(lucene::search::HitDoc*)
lucene::search::Hits::countDeletions(lucene::search::Searcher*)
lucene::search::Hits::getHitDoc(unsigned long)
lucene::search::Hits::getMoreDocs(unsigned long)
lucene::search::Hits::id(int)
lucene::search::Hits::remove(lucene::search::HitDoc const*)
lucene::search::Hits::~Hits()
lucene::search::IndexSearcher::IndexSearcher(char const*)
lucene::search::IndexSearcher::IndexSearcher(lucene::index::IndexReader*)
lucene::search::IndexSearcher::IndexSearcher(lucene::store::Directory*)
lucene::search::IndexSearcher::_search(lucene::search::Query*, lucene::search::Filter*, int)
lucene::search::IndexSearcher::_search(lucene::search::Query*, lucene::search::Filter*, int, lucene::search::Sort const*)
lucene::search::IndexSearcher::_search(lucene::search::Query*, lucene::search::Filter*, lucene::search::HitCollector*)
lucene::search::IndexSearcher::close()
lucene::search::IndexSearcher::doc(int)
lucene::search::IndexSearcher::doc(int, lucene::document::Document&)
lucene::search::IndexSearcher::doc(int, lucene::document::Document*)
lucene::search::IndexSearcher::docFreq(lucene::index::Term const*) const
lucene::search::IndexSearcher::explain(lucene::search::Query*, int, lucene::search::Explanation*)
lucene::search::IndexSearcher::getClassName()
lucene::search::IndexSearcher::getObjectName() const
lucene::search::IndexSearcher::getReader()
lucene::search::IndexSearcher::maxDoc() const
lucene::search::IndexSearcher::rewrite(lucene::search::Query*)
lucene::search::IndexSearcher::~IndexSearcher()
lucene::search::MatchAllDocsQuery::MatchAllDocsQuery()
lucene::search::MatchAllDocsQuery::MatchAllDocsQuery(lucene::search::MatchAllDocsQuery const&)
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::MatchAllDocsWeight(lucene::search::MatchAllDocsQuery*, lucene::search::Searcher*)
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::explain(lucene::index::IndexReader*, int)
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::getQuery()
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::getValue()
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::normalize(float)
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::scorer(lucene::index::IndexReader*)
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::sumOfSquaredWeights()
lucene::search::MatchAllDocsQuery::MatchAllDocsWeight::toString()
lucene::search::MatchAllDocsQuery::MatchAllScorer::MatchAllScorer(lucene::index::IndexReader*, lucene::search::Similarity*, lucene::search::Weight*)
lucene::search::MatchAllDocsQuery::MatchAllScorer::doc() const
lucene::search::MatchAllDocsQuery::MatchAllScorer::explain(int)
lucene::search::MatchAllDocsQuery::MatchAllScorer::next()
lucene::search::MatchAllDocsQuery::MatchAllScorer::score()
lucene::search::MatchAllDocsQuery::MatchAllScorer::skipTo(int)
lucene::search::MatchAllDocsQuery::MatchAllScorer::toString()
lucene::search::MatchAllDocsQuery::_createWeight(lucene::search::Searcher*)
lucene::search::MatchAllDocsQuery::clone() const
lucene::search::MatchAllDocsQuery::equals(lucene::search::Query*) const
lucene::search::MatchAllDocsQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::MatchAllDocsQuery::getClassName()
lucene::search::MatchAllDocsQuery::getObjectName() const
lucene::search::MatchAllDocsQuery::hashCode() const
lucene::search::MatchAllDocsQuery::toString(wchar_t const*) const
lucene::search::MatchAllDocsQuery::~MatchAllDocsQuery()
lucene::search::MultiPhraseQuery::MultiPhraseQuery()
lucene::search::MultiPhraseQuery::MultiPhraseQuery(lucene::search::MultiPhraseQuery const&)
lucene::search::MultiPhraseQuery::_createWeight(lucene::search::Searcher*)
lucene::search::MultiPhraseQuery::add(lucene::index::Term*)
lucene::search::MultiPhraseQuery::add(lucene::util::ArrayBase<lucene::index::Term*> const*)
lucene::search::MultiPhraseQuery::add(lucene::util::ArrayBase<lucene::index::Term*> const*, int)
lucene::search::MultiPhraseQuery::clone() const
lucene::search::MultiPhraseQuery::equals(lucene::search::Query*) const
lucene::search::MultiPhraseQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::MultiPhraseQuery::getPositions(lucene::util::ValueArray<int>&) const
lucene::search::MultiPhraseQuery::getSlop() const
lucene::search::MultiPhraseQuery::getTermArrays()
lucene::search::MultiPhraseQuery::hashCode() const
lucene::search::MultiPhraseQuery::rewrite(lucene::index::IndexReader*)
lucene::search::MultiPhraseQuery::setSlop(int)
lucene::search::MultiPhraseQuery::toString(wchar_t const*) const
lucene::search::MultiPhraseQuery::~MultiPhraseQuery()
lucene::search::MultiSearcher::MultiSearcher(lucene::search::Searchable**)
lucene::search::MultiSearcher::_search(lucene::search::Query*, lucene::search::Filter*, int)
lucene::search::MultiSearcher::_search(lucene::search::Query*, lucene::search::Filter*, int, lucene::search::Sort const*)
lucene::search::MultiSearcher::_search(lucene::search::Query*, lucene::search::Filter*, lucene::search::HitCollector*)
lucene::search::MultiSearcher::close()
lucene::search::MultiSearcher::doc(int, lucene::document::Document*)
lucene::search::MultiSearcher::docFreq(lucene::index::Term const*) const
lucene::search::MultiSearcher::explain(lucene::search::Query*, int, lucene::search::Explanation*)
lucene::search::MultiSearcher::getLength()
lucene::search::MultiSearcher::getStarts()
lucene::search::MultiSearcher::maxDoc() const
lucene::search::MultiSearcher::rewrite(lucene::search::Query*)
lucene::search::MultiSearcher::searcherIndex(int) const
lucene::search::MultiSearcher::subDoc(int) const
lucene::search::MultiSearcher::subSearcher(int) const
lucene::search::MultiSearcher::~MultiSearcher()
lucene::search::MultiTermQuery::MultiTermQuery(lucene::index::Term*)
lucene::search::MultiTermQuery::MultiTermQuery(lucene::search::MultiTermQuery const&)
lucene::search::MultiTermQuery::combine(lucene::util::ArrayBase<lucene::search::Query*>*)
lucene::search::MultiTermQuery::getTerm(bool) const
lucene::search::MultiTermQuery::rewrite(lucene::index::IndexReader*)
lucene::search::MultiTermQuery::toString(wchar_t const*) const
lucene::search::MultiTermQuery::~MultiTermQuery()
lucene::search::PhraseQuery::PhraseQuery()
lucene::search::PhraseQuery::PhraseQuery(lucene::search::PhraseQuery const&)
lucene::search::PhraseQuery::_createWeight(lucene::search::Searcher*)
lucene::search::PhraseQuery::add(lucene::index::Term*)
lucene::search::PhraseQuery::add(lucene::index::Term*, int)
lucene::search::PhraseQuery::clone() const
lucene::search::PhraseQuery::equals(lucene::search::Query*) const
lucene::search::PhraseQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::PhraseQuery::getClassName()
lucene::search::PhraseQuery::getFieldName() const
lucene::search::PhraseQuery::getObjectName() const
lucene::search::PhraseQuery::getPositions(lucene::util::ValueArray<int>&) const
lucene::search::PhraseQuery::getSlop() const
lucene::search::PhraseQuery::getTerms() const
lucene::search::PhraseQuery::hashCode() const
lucene::search::PhraseQuery::setSlop(int)
lucene::search::PhraseQuery::toString(wchar_t const*) const
lucene::search::PhraseQuery::~PhraseQuery()
lucene::search::PrefixFilter::PrefixFilter(lucene::index::Term*)
lucene::search::PrefixFilter::PrefixFilter(lucene::search::PrefixFilter const&)
lucene::search::PrefixFilter::bits(lucene::index::IndexReader*)
lucene::search::PrefixFilter::clone() const
lucene::search::PrefixFilter::getPrefix() const
lucene::search::PrefixFilter::toString()
lucene::search::PrefixFilter::~PrefixFilter()
lucene::search::PrefixQuery::PrefixQuery(lucene::index::Term*)
lucene::search::PrefixQuery::PrefixQuery(lucene::search::PrefixQuery const&)
lucene::search::PrefixQuery::clone() const
lucene::search::PrefixQuery::combine(lucene::util::ArrayBase<lucene::search::Query*>*)
lucene::search::PrefixQuery::equals(lucene::search::Query*) const
lucene::search::PrefixQuery::getClassName()
lucene::search::PrefixQuery::getObjectName() const
lucene::search::PrefixQuery::getPrefix(bool)
lucene::search::PrefixQuery::hashCode() const
lucene::search::PrefixQuery::rewrite(lucene::index::IndexReader*)
lucene::search::PrefixQuery::toString(wchar_t const*) const
lucene::search::PrefixQuery::~PrefixQuery()
lucene::search::Query::Query()
lucene::search::Query::Query(lucene::search::Query const&)
lucene::search::Query::_createWeight(lucene::search::Searcher*)
lucene::search::Query::combine(lucene::util::ArrayBase<lucene::search::Query*>*)
lucene::search::Query::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::Query::getBoost() const
lucene::search::Query::getQueryName() const
lucene::search::Query::getSimilarity(lucene::search::Searcher*)
lucene::search::Query::mergeBooleanQueries(lucene::util::ArrayBase<lucene::search::Query*>*)
lucene::search::Query::rewrite(lucene::index::IndexReader*)
lucene::search::Query::setBoost(float)
lucene::search::Query::toString() const
lucene::search::Query::weight(lucene::search::Searcher*)
lucene::search::Query::~Query()
lucene::search::QueryFilter::QueryFilter(lucene::search::Query const*)
lucene::search::QueryFilter::QueryFilter(lucene::search::Query*, bool)
lucene::search::QueryFilter::QueryFilter(lucene::search::QueryFilter const&)
lucene::search::QueryFilter::bits(lucene::index::IndexReader*)
lucene::search::QueryFilter::clone() const
lucene::search::QueryFilter::toString()
lucene::search::QueryFilter::~QueryFilter()
lucene::search::RangeFilter::Less(wchar_t const*, wchar_t const*)
lucene::search::RangeFilter::More(wchar_t const*, wchar_t const*)
lucene::search::RangeFilter::RangeFilter(lucene::search::RangeFilter const&)
lucene::search::RangeFilter::RangeFilter(wchar_t const*, wchar_t const*, wchar_t const*, bool, bool)
lucene::search::RangeFilter::bits(lucene::index::IndexReader*)
lucene::search::RangeFilter::clone() const
lucene::search::RangeFilter::toString()
lucene::search::RangeFilter::~RangeFilter()
lucene::search::RangeQuery::RangeQuery(lucene::index::Term*, lucene::index::Term*, bool)
lucene::search::RangeQuery::RangeQuery(lucene::search::RangeQuery const&)
lucene::search::RangeQuery::clone() const
lucene::search::RangeQuery::combine(lucene::util::ArrayBase<lucene::search::Query*>*)
lucene::search::RangeQuery::equals(lucene::search::Query*) const
lucene::search::RangeQuery::getClassName()
lucene::search::RangeQuery::getField() const
lucene::search::RangeQuery::getLowerTerm(bool) const
lucene::search::RangeQuery::getObjectName() const
lucene::search::RangeQuery::getUpperTerm(bool) const
lucene::search::RangeQuery::hashCode() const
lucene::search::RangeQuery::isInclusive() const
lucene::search::RangeQuery::rewrite(lucene::index::IndexReader*)
lucene::search::RangeQuery::toString(wchar_t const*) const
lucene::search::RangeQuery::~RangeQuery()
lucene::search::ScoreDocComparator::INDEXORDER()
lucene::search::ScoreDocComparator::RELEVANCE()
lucene::search::ScoreDocComparator::~ScoreDocComparator()
lucene::search::ScoreDocComparators::Float::Float(float*, int)
lucene::search::ScoreDocComparators::Float::compare(lucene::search::ScoreDoc*, lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::Float::sortType()
lucene::search::ScoreDocComparators::Float::sortValue(lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::IndexOrder::IndexOrder()
lucene::search::ScoreDocComparators::IndexOrder::compare(lucene::search::ScoreDoc*, lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::IndexOrder::sortType()
lucene::search::ScoreDocComparators::IndexOrder::sortValue(lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::Int32::Int32(int*, int)
lucene::search::ScoreDocComparators::Int32::compare(lucene::search::ScoreDoc*, lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::Int32::sortType()
lucene::search::ScoreDocComparators::Int32::sortValue(lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::Relevance::compare(lucene::search::ScoreDoc*, lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::Relevance::sortType()
lucene::search::ScoreDocComparators::Relevance::sortValue(lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::ScoreDocComparators()
lucene::search::ScoreDocComparators::String::String(lucene::search::FieldCache::StringIndex*, int)
lucene::search::ScoreDocComparators::String::compare(lucene::search::ScoreDoc*, lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::String::sortType()
lucene::search::ScoreDocComparators::String::sortValue(lucene::search::ScoreDoc*)
lucene::search::ScoreDocComparators::~ScoreDocComparators()
lucene::search::Scorer::Scorer(lucene::search::Similarity*)
lucene::search::Scorer::getSimilarity() const
lucene::search::Scorer::score(lucene::search::HitCollector*)
lucene::search::Scorer::score(lucene::search::HitCollector*, int)
lucene::search::Scorer::sort(lucene::search::Scorer const*, lucene::search::Scorer const*)
lucene::search::Scorer::~Scorer()
lucene::search::Searchable::doc(int)
lucene::search::Searchable::~Searchable()
lucene::search::Searcher::Searcher()
lucene::search::Searcher::_search(lucene::search::Query*, lucene::search::HitCollector*)
lucene::search::Searcher::getClassName()
lucene::search::Searcher::getObjectName() const
lucene::search::Searcher::getSimilarity()
lucene::search::Searcher::search(lucene::search::Query*, lucene::search::Filter*)
lucene::search::Searcher::search(lucene::search::Query*, lucene::search::Filter*, lucene::search::Sort const*)
lucene::search::Searcher::search(lucene::search::Query*, lucene::search::Sort const*)
lucene::search::Searcher::setSimilarity(lucene::search::Similarity*)
lucene::search::Searcher::~Searcher()
lucene::search::Similarity::byteToFloat(unsigned char)
lucene::search::Similarity::decodeNorm(unsigned char)
lucene::search::Similarity::encodeNorm(float)
lucene::search::Similarity::floatToByte(float)
lucene::search::Similarity::getDefault()
lucene::search::Similarity::idf(lucene::index::Term*, lucene::search::Searcher*)
lucene::search::Similarity::idf(lucene::util::CLVector<lucene::index::Term*, lucene::util::Deletor::Dummy>*, lucene::search::Searcher*)
lucene::search::Similarity::setDefault(lucene::search::Similarity*)
lucene::search::Similarity::~Similarity()
lucene::search::Sort::INDEXORDER()
lucene::search::Sort::RELEVANCE()
lucene::search::Sort::Sort()
lucene::search::Sort::Sort(lucene::search::SortField*)
lucene::search::Sort::Sort(lucene::search::SortField**)
lucene::search::Sort::Sort(wchar_t const**)
lucene::search::Sort::Sort(wchar_t const*, bool)
lucene::search::Sort::clear()
lucene::search::Sort::setSort(lucene::search::SortField*)
lucene::search::Sort::setSort(lucene::search::SortField**)
lucene::search::Sort::setSort(wchar_t const**)
lucene::search::Sort::setSort(wchar_t const*, bool)
lucene::search::Sort::toString() const
lucene::search::Sort::~Sort()
lucene::search::SortComparator::SortComparator()
lucene::search::SortComparator::newComparator(lucene::index::IndexReader*, wchar_t const*)
lucene::search::SortComparator::~SortComparator()
lucene::search::SortField::FIELD_DOC()
lucene::search::SortField::FIELD_SCORE()
lucene::search::SortField::SortField(lucene::search::SortField const&)
lucene::search::SortField::SortField(wchar_t const*)
lucene::search::SortField::SortField(wchar_t const*, int, bool)
lucene::search::SortField::SortField(wchar_t const*, lucene::search::SortComparatorSource*, bool)
lucene::search::SortField::clone() const
lucene::search::SortField::getFactory() const
lucene::search::SortField::getField() const
lucene::search::SortField::getReverse() const
lucene::search::SortField::getType() const
lucene::search::SortField::toString() const
lucene::search::SortField::~SortField()
lucene::search::SpanQueryFilter::SpanQueryFilter()
lucene::search::SpanQueryFilter::SpanQueryFilter(lucene::search::SpanQueryFilter const&)
lucene::search::SpanQueryFilter::SpanQueryFilter(lucene::search::spans::SpanQuery const*)
lucene::search::SpanQueryFilter::SpanQueryFilter(lucene::search::spans::SpanQuery*, bool)
lucene::search::SpanQueryFilter::bitSpans(lucene::index::IndexReader*)
lucene::search::SpanQueryFilter::bits(lucene::index::IndexReader*)
lucene::search::SpanQueryFilter::clone() const
lucene::search::SpanQueryFilter::toString()
lucene::search::SpanQueryFilter::~SpanQueryFilter()
lucene::search::TermQuery::TermQuery(lucene::index::Term*)
lucene::search::TermQuery::TermQuery(lucene::search::TermQuery const&)
lucene::search::TermQuery::_createWeight(lucene::search::Searcher*)
lucene::search::TermQuery::clone() const
lucene::search::TermQuery::equals(lucene::search::Query*) const
lucene::search::TermQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::TermQuery::getClassName()
lucene::search::TermQuery::getObjectName() const
lucene::search::TermQuery::getTerm(bool) const
lucene::search::TermQuery::hashCode() const
lucene::search::TermQuery::toString(wchar_t const*) const
lucene::search::TermQuery::~TermQuery()
lucene::search::TopDocs::TopDocs(int, lucene::search::ScoreDoc*, int)
lucene::search::TopDocs::~TopDocs()
lucene::search::Weight::toString()
lucene::search::Weight::~Weight()
lucene::search::WildcardFilter::WildcardFilter(lucene::index::Term*)
lucene::search::WildcardFilter::WildcardFilter(lucene::search::WildcardFilter const&)
lucene::search::WildcardFilter::bits(lucene::index::IndexReader*)
lucene::search::WildcardFilter::clone() const
lucene::search::WildcardFilter::toString()
lucene::search::WildcardFilter::~WildcardFilter()
lucene::search::WildcardQuery::WildcardQuery(lucene::index::Term*)
lucene::search::WildcardQuery::WildcardQuery(lucene::search::WildcardQuery const&)
lucene::search::WildcardQuery::clone() const
lucene::search::WildcardQuery::equals(lucene::search::Query*) const
lucene::search::WildcardQuery::getClassName()
lucene::search::WildcardQuery::getEnum(lucene::index::IndexReader*)
lucene::search::WildcardQuery::getObjectName() const
lucene::search::WildcardQuery::hashCode() const
lucene::search::WildcardQuery::rewrite(lucene::index::IndexReader*)
lucene::search::WildcardQuery::~WildcardQuery()
lucene::search::WildcardTermEnum::WildcardTermEnum(lucene::index::IndexReader*, lucene::index::Term*)
lucene::search::WildcardTermEnum::close()
lucene::search::WildcardTermEnum::difference()
lucene::search::WildcardTermEnum::endEnum()
lucene::search::WildcardTermEnum::getClassName()
lucene::search::WildcardTermEnum::getObjectName() const
lucene::search::WildcardTermEnum::termCompare(lucene::index::Term*)
lucene::search::WildcardTermEnum::wildcardEquals(wchar_t const*, int, int, wchar_t const*, int, int)
lucene::search::WildcardTermEnum::~WildcardTermEnum()
lucene::search::spans::SpanFirstQuery::SpanFirstQuery(lucene::search::spans::SpanFirstQuery const&)
lucene::search::spans::SpanFirstQuery::SpanFirstQuery(lucene::search::spans::SpanQuery*, int, bool)
lucene::search::spans::SpanFirstQuery::SpanFirstQuerySpans::SpanFirstQuerySpans(lucene::search::spans::SpanFirstQuery*, lucene::index::IndexReader*)
lucene::search::spans::SpanFirstQuery::SpanFirstQuerySpans::next()
lucene::search::spans::SpanFirstQuery::SpanFirstQuerySpans::skipTo(int)
lucene::search::spans::SpanFirstQuery::SpanFirstQuerySpans::toString() const
lucene::search::spans::SpanFirstQuery::SpanFirstQuerySpans::~SpanFirstQuerySpans()
lucene::search::spans::SpanFirstQuery::clone() const
lucene::search::spans::SpanFirstQuery::equals(lucene::search::Query*) const
lucene::search::spans::SpanFirstQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::spans::SpanFirstQuery::getClassName()
lucene::search::spans::SpanFirstQuery::getEnd() const
lucene::search::spans::SpanFirstQuery::getField() const
lucene::search::spans::SpanFirstQuery::getMatch() const
lucene::search::spans::SpanFirstQuery::getObjectName() const
lucene::search::spans::SpanFirstQuery::getSpans(lucene::index::IndexReader*)
lucene::search::spans::SpanFirstQuery::hashCode() const
lucene::search::spans::SpanFirstQuery::rewrite(lucene::index::IndexReader*)
lucene::search::spans::SpanFirstQuery::toString(wchar_t const*) const
lucene::search::spans::SpanFirstQuery::~SpanFirstQuery()
lucene::search::spans::SpanNearQuery::SpanNearQuery(lucene::search::spans::SpanNearQuery const&)
lucene::search::spans::SpanNearQuery::clone() const
lucene::search::spans::SpanNearQuery::equals(lucene::search::Query*) const
lucene::search::spans::SpanNearQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::spans::SpanNearQuery::getClassName()
lucene::search::spans::SpanNearQuery::getClauses() const
lucene::search::spans::SpanNearQuery::getClausesCount() const
lucene::search::spans::SpanNearQuery::getField() const
lucene::search::spans::SpanNearQuery::getObjectName() const
lucene::search::spans::SpanNearQuery::getSlop() const
lucene::search::spans::SpanNearQuery::getSpans(lucene::index::IndexReader*)
lucene::search::spans::SpanNearQuery::hashCode() const
lucene::search::spans::SpanNearQuery::isInOrder() const
lucene::search::spans::SpanNearQuery::rewrite(lucene::index::IndexReader*)
lucene::search::spans::SpanNearQuery::setField(wchar_t const*)
lucene::search::spans::SpanNearQuery::toString(wchar_t const*) const
lucene::search::spans::SpanNearQuery::~SpanNearQuery()
lucene::search::spans::SpanNotQuery::SpanNotQuery(lucene::search::spans::SpanNotQuery const&)
lucene::search::spans::SpanNotQuery::SpanNotQuery(lucene::search::spans::SpanQuery*, lucene::search::spans::SpanQuery*, bool)
lucene::search::spans::SpanNotQuery::SpanNotQuerySpans::SpanNotQuerySpans(lucene::search::spans::SpanNotQuery*, lucene::index::IndexReader*)
lucene::search::spans::SpanNotQuery::SpanNotQuerySpans::next()
lucene::search::spans::SpanNotQuery::SpanNotQuerySpans::skipTo(int)
lucene::search::spans::SpanNotQuery::SpanNotQuerySpans::toString() const
lucene::search::spans::SpanNotQuery::SpanNotQuerySpans::~SpanNotQuerySpans()
lucene::search::spans::SpanNotQuery::clone() const
lucene::search::spans::SpanNotQuery::equals(lucene::search::Query*) const
lucene::search::spans::SpanNotQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::spans::SpanNotQuery::getClassName()
lucene::search::spans::SpanNotQuery::getExclude() const
lucene::search::spans::SpanNotQuery::getField() const
lucene::search::spans::SpanNotQuery::getInclude() const
lucene::search::spans::SpanNotQuery::getObjectName() const
lucene::search::spans::SpanNotQuery::getSpans(lucene::index::IndexReader*)
lucene::search::spans::SpanNotQuery::hashCode() const
lucene::search::spans::SpanNotQuery::rewrite(lucene::index::IndexReader*)
lucene::search::spans::SpanNotQuery::toString(wchar_t const*) const
lucene::search::spans::SpanNotQuery::~SpanNotQuery()
lucene::search::spans::SpanOrQuery::SpanOrQuery(lucene::search::spans::SpanOrQuery const&)
lucene::search::spans::SpanOrQuery::SpanOrQuerySpans::SpanOrQuerySpans(lucene::search::spans::SpanOrQuery*, lucene::index::IndexReader*)
lucene::search::spans::SpanOrQuery::SpanOrQuerySpans::initSpanQueue(int)
lucene::search::spans::SpanOrQuery::SpanOrQuerySpans::next()
lucene::search::spans::SpanOrQuery::SpanOrQuerySpans::skipTo(int)
lucene::search::spans::SpanOrQuery::SpanOrQuerySpans::toString() const
lucene::search::spans::SpanOrQuery::SpanOrQuerySpans::~SpanOrQuerySpans()
lucene::search::spans::SpanOrQuery::clone() const
lucene::search::spans::SpanOrQuery::equals(lucene::search::Query*) const
lucene::search::spans::SpanOrQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::spans::SpanOrQuery::getClassName()
lucene::search::spans::SpanOrQuery::getClauses() const
lucene::search::spans::SpanOrQuery::getClausesCount() const
lucene::search::spans::SpanOrQuery::getField() const
lucene::search::spans::SpanOrQuery::getObjectName() const
lucene::search::spans::SpanOrQuery::getSpans(lucene::index::IndexReader*)
lucene::search::spans::SpanOrQuery::hashCode() const
lucene::search::spans::SpanOrQuery::rewrite(lucene::index::IndexReader*)
lucene::search::spans::SpanOrQuery::setField(wchar_t const*)
lucene::search::spans::SpanOrQuery::toString(wchar_t const*) const
lucene::search::spans::SpanOrQuery::~SpanOrQuery()
lucene::search::spans::SpanScorer::SpanScorer(lucene::search::spans::Spans*, lucene::search::Weight*, lucene::search::Similarity*, unsigned char*)
lucene::search::spans::SpanScorer::doc() const
lucene::search::spans::SpanScorer::explain(int)
lucene::search::spans::SpanScorer::next()
lucene::search::spans::SpanScorer::score()
lucene::search::spans::SpanScorer::setFreqCurrentDoc()
lucene::search::spans::SpanScorer::skipTo(int)
lucene::search::spans::SpanScorer::toString()
lucene::search::spans::SpanScorer::~SpanScorer()
lucene::search::spans::SpanTermQuery::SpanTermQuery(lucene::index::Term*)
lucene::search::spans::SpanTermQuery::SpanTermQuery(lucene::search::spans::SpanTermQuery const&)
lucene::search::spans::SpanTermQuery::clone() const
lucene::search::spans::SpanTermQuery::equals(lucene::search::Query*) const
lucene::search::spans::SpanTermQuery::extractTerms(std::set<lucene::index::Term*, lucene::index::Term_UnorderedCompare, std::allocator<lucene::index::Term*> >*) const
lucene::search::spans::SpanTermQuery::getClassName()
lucene::search::spans::SpanTermQuery::getField() const
lucene::search::spans::SpanTermQuery::getObjectName() const
lucene::search::spans::SpanTermQuery::getSpans(lucene::index::IndexReader*)
lucene::search::spans::SpanTermQuery::getTerm(bool) const
lucene::search::spans::SpanTermQuery::hashCode() const
lucene::search::spans::SpanTermQuery::toString(wchar_t const*) const
lucene::search::spans::SpanTermQuery::~SpanTermQuery()
lucene::search::spans::SpanWeight::SpanWeight(lucene::search::spans::SpanQuery*, lucene::search::Searcher*)
lucene::search::spans::SpanWeight::explain(lucene::index::IndexReader*, int)
lucene::search::spans::SpanWeight::getQuery()
lucene::search::spans::SpanWeight::getValue()
lucene::search::spans::SpanWeight::normalize(float)
lucene::search::spans::SpanWeight::scorer(lucene::index::IndexReader*)
lucene::search::spans::SpanWeight::sumOfSquaredWeights()
lucene::search::spans::SpanWeight::~SpanWeight()
lucene::store::BufferedIndexInput::BufferedIndexInput(int)
lucene::store::BufferedIndexInput::BufferedIndexInput(lucene::store::BufferedIndexInput const&)
lucene::store::BufferedIndexInput::close()
lucene::store::BufferedIndexInput::getClassName()
lucene::store::BufferedIndexInput::getFilePointer() const
lucene::store::BufferedIndexInput::getObjectName()
lucene::store::BufferedIndexInput::readBytes(unsigned char*, int)
lucene::store::BufferedIndexInput::readBytes(unsigned char*, int, bool)
lucene::store::BufferedIndexInput::refill()
lucene::store::BufferedIndexInput::seek(long)
lucene::store::BufferedIndexInput::setBufferSize(int)
lucene::store::BufferedIndexInput::~BufferedIndexInput()
lucene::store::BufferedIndexOutput::BufferedIndexOutput()
lucene::store::BufferedIndexOutput::close()
lucene::store::BufferedIndexOutput::flush()
lucene::store::BufferedIndexOutput::getFilePointer() const
lucene::store::BufferedIndexOutput::seek(long)
lucene::store::BufferedIndexOutput::writeByte(unsigned char)
lucene::store::BufferedIndexOutput::writeBytes(unsigned char const*, int)
lucene::store::BufferedIndexOutput::~BufferedIndexOutput()
lucene::store::Directory::Directory()
lucene::store::Directory::clearLock(char const*)
lucene::store::Directory::deleteFile(char const*, bool)
lucene::store::Directory::getLockFactory()
lucene::store::Directory::getLockID[abi:cxx11]()
lucene::store::Directory::list() const
lucene::store::Directory::list(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) const
lucene::store::Directory::makeLock(char const*)
lucene::store::Directory::openInput(char const*, int)
lucene::store::Directory::setLockFactory(lucene::store::LockFactory*)
lucene::store::Directory::~Directory()
lucene::store::FSDirectory::FSDirectory()
lucene::store::FSDirectory::FSIndexInput::FSIndexInput(lucene::store::FSDirectory::FSIndexInput const&)
lucene::store::FSDirectory::FSIndexInput::SharedHandle::SharedHandle(char const*)
lucene::store::FSDirectory::FSIndexInput::SharedHandle::~SharedHandle()
lucene::store::FSDirectory::FSIndexInput::clone() const
lucene::store::FSDirectory::FSIndexInput::close()
lucene::store::FSDirectory::FSIndexInput::open(char const*, lucene::store::IndexInput*&, CLuceneError&, int)
lucene::store::FSDirectory::FSIndexInput::readInternal(unsigned char*, int)
lucene::store::FSDirectory::FSIndexInput::seekInternal(long)
lucene::store::FSDirectory::FSIndexInput::~FSIndexInput()
lucene::store::FSDirectory::FSIndexOutput::FSIndexOutput(char const*, int)
lucene::store::FSDirectory::FSIndexOutput::close()
lucene::store::FSDirectory::FSIndexOutput::flushBuffer(unsigned char const*, int)
lucene::store::FSDirectory::FSIndexOutput::length() const
lucene::store::FSDirectory::FSIndexOutput::seek(long)
lucene::store::FSDirectory::FSIndexOutput::~FSIndexOutput()
lucene::store::FSDirectory::close()
lucene::store::FSDirectory::create()
lucene::store::FSDirectory::createOutput(char const*)
lucene::store::FSDirectory::doDeleteFile(char const*)
lucene::store::FSDirectory::fileExists(char const*) const
lucene::store::FSDirectory::fileLength(char const*) const
lucene::store::FSDirectory::fileModified(char const*) const
lucene::store::FSDirectory::fileModified(char const*, char const*)
lucene::store::FSDirectory::getClassName()
lucene::store::FSDirectory::getDirName() const
lucene::store::FSDirectory::getDirectory(char const*, bool, lucene::store::LockFactory*)
lucene::store::FSDirectory::getDirectory(char const*, lucene::store::LockFactory*)
lucene::store::FSDirectory::getDisableLocks()
lucene::store::FSDirectory::getFileMode()
lucene::store::FSDirectory::getLockDir()
lucene::store::FSDirectory::getLockPrefix() const
lucene::store::FSDirectory::getObjectName() const
lucene::store::FSDirectory::getUseMMap() const
lucene::store::FSDirectory::init(char const*, lucene::store::LockFactory*)
lucene::store::FSDirectory::list(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) const
lucene::store::FSDirectory::openInput(char const*, lucene::store::IndexInput*&, CLuceneError&, int)
lucene::store::FSDirectory::priv_getFN(char*, char const*) const
lucene::store::FSDirectory::renameFile(char const*, char const*)
lucene::store::FSDirectory::setDisableLocks(bool)
lucene::store::FSDirectory::setFileMode(int)
lucene::store::FSDirectory::setUseMMap(bool)
lucene::store::FSDirectory::toString[abi:cxx11]() const
lucene::store::FSDirectory::touchFile(char const*)
lucene::store::FSDirectory::~FSDirectory()
lucene::store::FSLockFactory::FSLockFactory(char const*, int)
lucene::store::FSLockFactory::clearLock(char const*)
lucene::store::FSLockFactory::makeLock(char const*)
lucene::store::FSLockFactory::setLockDir(char const*)
lucene::store::FSLockFactory::~FSLockFactory()
lucene::store::IndexInput::IndexInput()
lucene::store::IndexInput::IndexInput(lucene::store::IndexInput const&)
lucene::store::IndexInput::readBytes(unsigned char*, int, bool)
lucene::store::IndexInput::readChars(wchar_t*, int, int)
lucene::store::IndexInput::readInt()
lucene::store::IndexInput::readLong()
lucene::store::IndexInput::readString()
lucene::store::IndexInput::readString(char*, int)
lucene::store::IndexInput::readString(wchar_t*, int)
lucene::store::IndexInput::readVInt()
lucene::store::IndexInput::readVLong()
lucene::store::IndexInput::skipChars(int)
lucene::store::IndexInput::~IndexInput()
lucene::store::IndexOutput::IndexOutput()
lucene::store::IndexOutput::copyBytes(lucene::store::IndexInput*, long)
lucene::store::IndexOutput::writeChars(wchar_t const*, int)
lucene::store::IndexOutput::writeInt(int)
lucene::store::IndexOutput::writeLong(long)
lucene::store::IndexOutput::writeString(char const*, int)
lucene::store::IndexOutput::writeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
lucene::store::IndexOutput::writeString(wchar_t const*, int)
lucene::store::IndexOutput::writeVInt(int)
lucene::store::IndexOutput::writeVLong(long)
lucene::store::IndexOutput::~IndexOutput()
lucene::store::LockFactory::LockFactory()
lucene::store::LockFactory::getLockPrefix()
lucene::store::LockFactory::setLockPrefix(char const*)
lucene::store::LockFactory::~LockFactory()
lucene::store::LuceneLock::obtain(long)
lucene::store::LuceneLock::~LuceneLock()
lucene::store::NoLockFactory::clearLock(char const*)
lucene::store::NoLockFactory::getNoLockFactory()
lucene::store::NoLockFactory::makeLock(char const*)
lucene::store::RAMDirectory::RAMDirectory()
lucene::store::RAMDirectory::RAMDirectory(char const*)
lucene::store::RAMDirectory::RAMDirectory(lucene::store::Directory*)
lucene::store::RAMDirectory::_copyFromDir(lucene::store::Directory*, bool)
lucene::store::RAMDirectory::close()
lucene::store::RAMDirectory::createOutput(char const*)
lucene::store::RAMDirectory::doDeleteFile(char const*)
lucene::store::RAMDirectory::fileExists(char const*) const
lucene::store::RAMDirectory::fileLength(char const*) const
lucene::store::RAMDirectory::fileModified(char const*) const
lucene::store::RAMDirectory::getClassName()
lucene::store::RAMDirectory::getObjectName() const
lucene::store::RAMDirectory::list(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) const
lucene::store::RAMDirectory::openInput(char const*, lucene::store::IndexInput*&, CLuceneError&, int)
lucene::store::RAMDirectory::renameFile(char const*, char const*)
lucene::store::RAMDirectory::toString[abi:cxx11]() const
lucene::store::RAMDirectory::touchFile(char const*)
lucene::store::RAMDirectory::~RAMDirectory()
lucene::store::RAMFile::RAMFile(lucene::store::RAMDirectory*)
lucene::store::RAMFile::addBuffer(int)
lucene::store::RAMFile::getBuffer(int)
lucene::store::RAMFile::getLastModified()
lucene::store::RAMFile::getLength()
lucene::store::RAMFile::getSizeInBytes() const
lucene::store::RAMFile::newBuffer(int)
lucene::store::RAMFile::numBuffers() const
lucene::store::RAMFile::setLastModified(unsigned long)
lucene::store::RAMFile::setLength(long)
lucene::store::RAMFile::~RAMFile()
lucene::store::RAMInputStream::RAMInputStream(lucene::store::RAMFile*)
lucene::store::RAMInputStream::RAMInputStream(lucene::store::RAMInputStream const&)
lucene::store::RAMInputStream::clone() const
lucene::store::RAMInputStream::close()
lucene::store::RAMInputStream::getClassName()
lucene::store::RAMInputStream::getDirectoryType() const
lucene::store::RAMInputStream::getFilePointer() const
lucene::store::RAMInputStream::getObjectName() const
lucene::store::RAMInputStream::length() const
lucene::store::RAMInputStream::readByte()
lucene::store::RAMInputStream::readBytes(unsigned char*, int)
lucene::store::RAMInputStream::seek(long)
lucene::store::RAMInputStream::switchCurrentBuffer()
lucene::store::RAMInputStream::~RAMInputStream()
lucene::store::RAMOutputStream::RAMOutputStream()
lucene::store::RAMOutputStream::RAMOutputStream(lucene::store::RAMFile*)
lucene::store::RAMOutputStream::close()
lucene::store::RAMOutputStream::flush()
lucene::store::RAMOutputStream::getFilePointer() const
lucene::store::RAMOutputStream::length() const
lucene::store::RAMOutputStream::reset()
lucene::store::RAMOutputStream::seek(long)
lucene::store::RAMOutputStream::setFileLength()
lucene::store::RAMOutputStream::switchCurrentBuffer()
lucene::store::RAMOutputStream::writeByte(unsigned char)
lucene::store::RAMOutputStream::writeBytes(unsigned char const*, int)
lucene::store::RAMOutputStream::writeTo(lucene::store::IndexOutput*)
lucene::store::RAMOutputStream::~RAMOutputStream()
lucene::store::SingleInstanceLockFactory::SingleInstanceLockFactory()
lucene::store::SingleInstanceLockFactory::clearLock(char const*)
lucene::store::SingleInstanceLockFactory::makeLock(char const*)
lucene::store::SingleInstanceLockFactory::~SingleInstanceLockFactory()
lucene::util::AStringReader::AStringReader(char const*, int)
lucene::util::AStringReader::AStringReader(char*, int, bool)
lucene::util::AStringReader::position()
lucene::util::AStringReader::read(signed char const*&, int, int)
lucene::util::AStringReader::read(unsigned char const*&, int, int)
lucene::util::AStringReader::reset(long)
lucene::util::AStringReader::setMinBufSize(int)
lucene::util::AStringReader::size()
lucene::util::AStringReader::skip(long)
lucene::util::AStringReader::~AStringReader()
lucene::util::AbstractDeletor::~AbstractDeletor()
lucene::util::BitSet::BitSet(int)
lucene::util::BitSet::BitSet(lucene::store::Directory*, char const*)
lucene::util::BitSet::BitSet(lucene::util::BitSet const&)
lucene::util::BitSet::clone() const
lucene::util::BitSet::count()
lucene::util::BitSet::isSparse()
lucene::util::BitSet::nextSetBit(int) const
lucene::util::BitSet::readBits(lucene::store::IndexInput*)
lucene::util::BitSet::readDgaps(lucene::store::IndexInput*)
lucene::util::BitSet::set(int, bool)
lucene::util::BitSet::size() const
lucene::util::BitSet::write(lucene::store::Directory*, char const*)
lucene::util::BitSet::writeBits(lucene::store::IndexOutput*)
lucene::util::BitSet::writeDgaps(lucene::store::IndexOutput*)
lucene::util::BitSet::~BitSet()
lucene::util::Compare::Char::Char()
lucene::util::Compare::Char::Char(char const*)
lucene::util::Compare::Char::compareTo(lucene::util::NamedObject*)
lucene::util::Compare::Char::getClassName()
lucene::util::Compare::Char::getObjectName() const
lucene::util::Compare::Char::getValue() const
lucene::util::Compare::Char::operator()(char const*) const
lucene::util::Compare::Char::operator()(char const*, char const*) const
lucene::util::Compare::Float::Float(float)
lucene::util::Compare::Float::compareTo(lucene::util::NamedObject*)
lucene::util::Compare::Float::getClassName()
lucene::util::Compare::Float::getObjectName() const
lucene::util::Compare::Float::getValue() const
lucene::util::Compare::Int32::Int32()
lucene::util::Compare::Int32::Int32(int)
lucene::util::Compare::Int32::compareTo(lucene::util::NamedObject*)
lucene::util::Compare::Int32::getClassName()
lucene::util::Compare::Int32::getObjectName() const
lucene::util::Compare::Int32::getValue() const
lucene::util::Compare::Int32::operator()(int) const
lucene::util::Compare::Int32::operator()(int, int) const
lucene::util::Compare::WChar::WChar()
lucene::util::Compare::WChar::WChar(wchar_t const*)
lucene::util::Compare::WChar::compareTo(lucene::util::NamedObject*)
lucene::util::Compare::WChar::getClassName()
lucene::util::Compare::WChar::getObjectName() const
lucene::util::Compare::WChar::getValue() const
lucene::util::Compare::WChar::operator()(wchar_t const*) const
lucene::util::Compare::WChar::operator()(wchar_t const*, wchar_t const*) const
lucene::util::Equals::Char::operator()(char const*, char const*) const
lucene::util::Equals::Int32::operator()(int, int) const
lucene::util::Equals::WChar::operator()(wchar_t const*, wchar_t const*) const
lucene::util::FileInputStream::FileInputStream(char const*, int)
lucene::util::FileInputStream::position()
lucene::util::FileInputStream::read(signed char const*&, int, int)
lucene::util::FileInputStream::reset(long)
lucene::util::FileInputStream::setMinBufSize(int)
lucene::util::FileInputStream::size()
lucene::util::FileInputStream::skip(long)
lucene::util::FileInputStream::~FileInputStream()
lucene::util::FileReader::FileReader(char const*, char const*, int)
lucene::util::FileReader::FileReader(char const*, int, int)
lucene::util::FileReader::~FileReader()
lucene::util::FilteredBufferedInputStream::FilteredBufferedInputStream(lucene::util::CLStream<signed char>*, bool)
lucene::util::FilteredBufferedInputStream::position()
lucene::util::FilteredBufferedInputStream::read(signed char const*&, int, int)
lucene::util::FilteredBufferedInputStream::reset(long)
lucene::util::FilteredBufferedInputStream::setMinBufSize(int)
lucene::util::FilteredBufferedInputStream::size()
lucene::util::FilteredBufferedInputStream::skip(long)
lucene::util::FilteredBufferedInputStream::~FilteredBufferedInputStream()
lucene::util::FilteredBufferedReader::FilteredBufferedReader(lucene::util::Reader*, bool)
lucene::util::FilteredBufferedReader::position()
lucene::util::FilteredBufferedReader::read(wchar_t const*&, int, int)
lucene::util::FilteredBufferedReader::reset(long)
lucene::util::FilteredBufferedReader::setMinBufSize(int)
lucene::util::FilteredBufferedReader::size()
lucene::util::FilteredBufferedReader::skip(long)
lucene::util::FilteredBufferedReader::~FilteredBufferedReader()
lucene::util::Misc::_charToWide(char const*)
lucene::util::Misc::_cpycharToWide(char const*, wchar_t*, unsigned long)
lucene::util::Misc::_cpywideToChar(wchar_t const*, char*, unsigned long)
lucene::util::Misc::_wideToChar(wchar_t const*)
lucene::util::Misc::ahashCode(char const*)
lucene::util::Misc::ahashCode(char const*, unsigned long)
lucene::util::Misc::ajoin(char const*, char const*, char const*, char const*, char const*, char const*)
lucene::util::Misc::base36ToLong(char const*)
lucene::util::Misc::currentTimeMillis()
lucene::util::Misc::deflate(unsigned char const*, unsigned long, std::basic_ostream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int, int)
lucene::util::Misc::dir_Exists(char const*)
lucene::util::Misc::file_Size(char const*)
lucene::util::Misc::file_Unlink(char const*, int)
lucene::util::Misc::filelength(int)
lucene::util::Misc::inflate(unsigned char const*, unsigned long, std::basic_ostream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int)
lucene::util::Misc::join(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
lucene::util::Misc::listFiles(char const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool)
lucene::util::Misc::longToBase(long, int, char*)
lucene::util::Misc::priv_isDotDir(wchar_t const*)
lucene::util::Misc::replace_all(wchar_t const*, wchar_t const*, wchar_t const*)
lucene::util::Misc::segmentname(char*, int, char const*, char const*, int)
lucene::util::Misc::segmentname[abi:cxx11](char const*, char const*, int)
lucene::util::Misc::sleep(int)
lucene::util::Misc::stringDifference(wchar_t const*, int, wchar_t const*, int)
lucene::util::Misc::stringTrim(wchar_t*)
lucene::util::Misc::toString[abi:cxx11](bool)
lucene::util::Misc::toString[abi:cxx11](float)
lucene::util::Misc::toString[abi:cxx11](int)
lucene::util::Misc::toString[abi:cxx11](long)
lucene::util::Misc::toString[abi:cxx11](unsigned long)
lucene::util::Misc::toString[abi:cxx11](wchar_t const*, int)
lucene::util::Misc::whashCode(wchar_t const*)
lucene::util::Misc::whashCode(wchar_t const*, unsigned long)
lucene::util::Misc::wordTrim(wchar_t*)
lucene::util::Misc::zerr(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
lucene::util::NamedObject::instanceOf(char const*) const
lucene::util::NamedObject::~NamedObject()
lucene::util::ScorerDocQueue::HeapedScorerDoc::HeapedScorerDoc(lucene::search::Scorer*)
lucene::util::ScorerDocQueue::HeapedScorerDoc::HeapedScorerDoc(lucene::search::Scorer*, int)
lucene::util::ScorerDocQueue::HeapedScorerDoc::adjust()
lucene::util::ScorerDocQueue::HeapedScorerDoc::~HeapedScorerDoc()
lucene::util::ScorerDocQueue::ScorerDocQueue(int)
lucene::util::ScorerDocQueue::adjustTop()
lucene::util::ScorerDocQueue::checkAdjustElsePop(bool)
lucene::util::ScorerDocQueue::clear()
lucene::util::ScorerDocQueue::downHeap()
lucene::util::ScorerDocQueue::insert(lucene::search::Scorer*)
lucene::util::ScorerDocQueue::pop()
lucene::util::ScorerDocQueue::popNoResult()
lucene::util::ScorerDocQueue::put(lucene::search::Scorer*)
lucene::util::ScorerDocQueue::size()
lucene::util::ScorerDocQueue::top()
lucene::util::ScorerDocQueue::topDoc()
lucene::util::ScorerDocQueue::topNextAndAdjustElsePop()
lucene::util::ScorerDocQueue::topScore()
lucene::util::ScorerDocQueue::topSkipToAndAdjustElsePop(int)
lucene::util::ScorerDocQueue::upHeap()
lucene::util::ScorerDocQueue::~ScorerDocQueue()
lucene::util::SimpleInputStreamReader::SimpleInputStreamReader()
lucene::util::SimpleInputStreamReader::SimpleInputStreamReader(lucene::util::CLStream<signed char>*, int)
lucene::util::SimpleInputStreamReader::init(lucene::util::CLStream<signed char>*, int)
lucene::util::SimpleInputStreamReader::position()
lucene::util::SimpleInputStreamReader::read(wchar_t const*&, int, int)
lucene::util::SimpleInputStreamReader::reset(long)
lucene::util::SimpleInputStreamReader::setMinBufSize(int)
lucene::util::SimpleInputStreamReader::size()
lucene::util::SimpleInputStreamReader::skip(long)
lucene::util::SimpleInputStreamReader::~SimpleInputStreamReader()
lucene::util::StringBuffer::StringBuffer()
lucene::util::StringBuffer::StringBuffer(unsigned long)
lucene::util::StringBuffer::StringBuffer(wchar_t const*)
lucene::util::StringBuffer::StringBuffer(wchar_t*, unsigned long, bool)
lucene::util::StringBuffer::append(wchar_t const*)
lucene::util::StringBuffer::append(wchar_t const*, unsigned long)
lucene::util::StringBuffer::appendBool(bool)
lucene::util::StringBuffer::appendBoost(float)
lucene::util::StringBuffer::appendChar(wchar_t)
lucene::util::StringBuffer::appendFloat(float, unsigned long)
lucene::util::StringBuffer::appendInt(long, int)
lucene::util::StringBuffer::charAt(unsigned long)
lucene::util::StringBuffer::clear()
lucene::util::StringBuffer::deleteCharAt(unsigned long)
lucene::util::StringBuffer::deleteChars(unsigned long, unsigned long)
lucene::util::StringBuffer::getBuffer()
lucene::util::StringBuffer::giveBuffer()
lucene::util::StringBuffer::growBuffer(unsigned long, unsigned long)
lucene::util::StringBuffer::insert(unsigned long, wchar_t const*, unsigned long)
lucene::util::StringBuffer::insert(unsigned long, wchar_t)
lucene::util::StringBuffer::length() const
lucene::util::StringBuffer::prepend(wchar_t const*)
lucene::util::StringBuffer::prepend(wchar_t const*, unsigned long)
lucene::util::StringBuffer::reserve(unsigned long)
lucene::util::StringBuffer::setCharAt(unsigned long, wchar_t)
lucene::util::StringBuffer::substringEquals(unsigned long, unsigned long, wchar_t const*, unsigned long) const
lucene::util::StringBuffer::toLower()
lucene::util::StringBuffer::toString()
lucene::util::StringBuffer::~StringBuffer()
lucene::util::StringReader::StringReader(wchar_t const*, int, bool)
lucene::util::StringReader::init(wchar_t const*, int, bool)
lucene::util::StringReader::position()
lucene::util::StringReader::read(wchar_t const*&, int, int)
lucene::util::StringReader::reset(long)
lucene::util::StringReader::setMinBufSize(int)
lucene::util::StringReader::size()
lucene::util::StringReader::skip(long)
lucene::util::StringReader::~StringReader()
lucene::util::atomic_threads::atomic_decrement(unsigned int*)
lucene::util::atomic_threads::atomic_increment(unsigned int*)
lucene::util::mutexGuard::mutexGuard(lucene::util::mutexGuard const&)
lucene::util::mutexGuard::mutexGuard(lucene::util::mutex_thread&)
lucene::util::mutexGuard::~mutexGuard()
lucene::util::mutex_thread::CreateThread(void* (*)(void*), void*)
lucene::util::mutex_thread::JoinThread(unsigned long)
lucene::util::mutex_thread::_GetCurrentThreadId()
lucene::util::mutex_thread::lock()
lucene::util::mutex_thread::mutex_thread()
lucene::util::mutex_thread::mutex_thread(lucene::util::mutex_thread const&)
lucene::util::mutex_thread::unlock()
lucene::util::mutex_thread::~mutex_thread()
lucene::util::shared_condition::NotifyAll()
lucene::util::shared_condition::Wait(lucene::util::mutex_thread*)
lucene::util::shared_condition::shared_condition()
lucene::util::shared_condition::~shared_condition()
lucene_i64tot(long, wchar_t*, int)
lucene_snwprintf(wchar_t*, unsigned long, wchar_t const*, ...)
lucene_tcscasecmp(wchar_t const*, wchar_t const*)
lucene_tcslwr(wchar_t*)
lucene_utf8charlen(unsigned char)
lucene_utf8towc(wchar_t&, char const*)
lucene_utf8towcs(wchar_t*, char const*, unsigned long)
lucene_vsnwprintf(wchar_t*, unsigned long, wchar_t const*, __va_list_tag (&) [1])
lucene_wcstoutf8(char*, wchar_t const*, unsigned long)
lucene_wcstoutf8string[abi:cxx11](wchar_t const*, unsigned long)
lucene_wctoutf8(char*, wchar_t)
lucene_wprintf(wchar_t const*, ...)
main
makeNotebookbarTabControl
makeNotebookbarToolBox
makePriceLoop
makeRepresentativeTextForFont(short, vcl::Font const&)
make_SOSchain
make_lag
mat_additem
mat_appendcol
mat_appendrow
mat_appendvalue
mat_checkcounts
mat_colcompact
mat_collength
mat_computemax
mat_create
mat_equalRows
mat_expandcolumn
mat_extractmat
mat_findcolumn
mat_findelm
mat_findins
mat_free
mat_get_data
mat_getitem
mat_indexrange
mat_mapreplace
mat_memopt
mat_mergemat
mat_multadd
mat_multcol
mat_multrow
mat_nonzeros
mat_nz_unused
mat_rowcompact
mat_rowlength
mat_set_rowmap
mat_setcol
mat_setitem
mat_setrow
mat_setvalue
mat_shiftcols
mat_shiftrows
mat_transpose
mat_validate
mat_zerocompact
mdo_calloc
mdo_free
memopt_lp
mempool_create
mempool_free
mempool_obtainVector
mempool_releaseVector
minmax_to_scale
mkallcap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkallcap_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mkallsmall(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkallsmall_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mkinitcap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkinitcap_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mkinitsmall(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkinitsmall_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mm_is_valid
mm_read_banner
mm_read_mtx_array_size
mm_read_mtx_crd
mm_read_mtx_crd_data
mm_read_mtx_crd_entry
mm_read_mtx_crd_size
mm_read_unsymmetric_sparse
mm_typecode_to_str
mm_write_banner
mm_write_mtx_array_size
mm_write_mtx_crd
mm_write_mtx_crd_size
mod
modifyOF1
modifyUndoLadder
msfilter::EncryptionStandardHeader::EncryptionStandardHeader()
msfilter::EncryptionVerifierAES::EncryptionVerifierAES()
msfilter::EncryptionVerifierRC4::EncryptionVerifierRC4()
msfilter::MSCodec97::MSCodec97(unsigned long, rtl::OUString const&)
msfilter::MSCodec97::~MSCodec97()
msfilter::MSCodec_CryptoAPI::GetDigestFromSalt(unsigned char const*, unsigned char*)
msfilter::MSCodec_CryptoAPI::GetEncryptionData()
msfilter::MSCodec_CryptoAPI::InitCipher(unsigned int)
msfilter::MSCodec_CryptoAPI::InitKey(unsigned short const*, unsigned char const*)
msfilter::MSCodec_CryptoAPI::MSCodec_CryptoAPI()
msfilter::MSCodec_Std97::GetDigestFromSalt(unsigned char const*, unsigned char*)
msfilter::MSCodec_Std97::MSCodec_Std97()
msfilter::MSCodec_Std97::~MSCodec_Std97()
msfilter::MSCodec_Xor95::MSCodec_Xor95(int)
msfilter::MSCodec_Xor95::~MSCodec_Xor95()
msfilter::rtfutil::OutChar(char16_t, int*, unsigned short, bool*, bool)
msfilter::util::GETVMLShapeType(rtl::OString const&)
msfilter::util::WW8ReadFieldParams::WW8ReadFieldParams(rtl::OUString const&)
multi_create
multi_enteringtheta
multi_enteringvar
multi_free
multi_getvar
multi_indexSet
multi_mustupdate
multi_populateSet
multi_recompute
multi_removevar
multi_resize
multi_restart
multi_size
multi_truncatingvar
multi_used
multi_valueInit
multi_valueList
my_daxpy
my_dcopy
my_ddot
my_dload
my_dnormi
my_dscal
my_dswap
my_idamax
mychomp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
myopen(std::basic_ifstream<char, std::char_traits<char> >&, char const*, std::_Ios_Openmode)
mystrdup(char const*)
mystrrep(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
mystrsep(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
namecpy
negate_constraint
nextActiveLink
nextInactiveLink
nextbranch_BB
normalizeVector
nss_DumpCertificateCacheInfo@@NSS_3.4
null_tmp_store
obtain_column
ooo::vba::ConcreteXShapeGeometryAttributes::ConcreteXShapeGeometryAttributes(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
ooo::vba::ConcreteXShapeGeometryAttributes::getHeight() const
ooo::vba::ConcreteXShapeGeometryAttributes::getLeft() const
ooo::vba::ConcreteXShapeGeometryAttributes::getTop() const
ooo::vba::ConcreteXShapeGeometryAttributes::getWidth() const
ooo::vba::ConcreteXShapeGeometryAttributes::setHeight(double)
ooo::vba::ConcreteXShapeGeometryAttributes::setLeft(double)
ooo::vba::ConcreteXShapeGeometryAttributes::setTop(double)
ooo::vba::ConcreteXShapeGeometryAttributes::setWidth(double)
ooo::vba::ConcreteXShapeGeometryAttributes::~ConcreteXShapeGeometryAttributes()
ooo::vba::ContainerUtilities::FieldInList(com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&)
ooo::vba::DebugHelper::basicexception(com::sun::star::uno::Exception const&, ErrCode, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ooo::vba::Millimeter::Millimeter()
ooo::vba::Millimeter::Millimeter(double)
ooo::vba::Millimeter::getInHundredthsOfOneMillimeter() const
ooo::vba::Millimeter::setInPoints(double)
ooo::vba::ShapeHelper::ShapeHelper(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
ooo::vba::UserFormGeometryHelper::UserFormGeometryHelper(com::sun::star::uno::Reference<com::sun::star::awt::XControl> const&, double, double)
ooo::vba::UserFormGeometryHelper::getHeight() const
ooo::vba::UserFormGeometryHelper::getInnerHeight() const
ooo::vba::UserFormGeometryHelper::getInnerWidth() const
ooo::vba::UserFormGeometryHelper::getLeft() const
ooo::vba::UserFormGeometryHelper::getOffsetX() const
ooo::vba::UserFormGeometryHelper::getOffsetY() const
ooo::vba::UserFormGeometryHelper::getTop() const
ooo::vba::UserFormGeometryHelper::getWidth() const
ooo::vba::UserFormGeometryHelper::implGetPos(bool) const
ooo::vba::UserFormGeometryHelper::implGetSize(bool, bool) const
ooo::vba::UserFormGeometryHelper::implSetPos(double, bool)
ooo::vba::UserFormGeometryHelper::implSetSize(double, bool, bool)
ooo::vba::UserFormGeometryHelper::setHeight(double)
ooo::vba::UserFormGeometryHelper::setInnerHeight(double)
ooo::vba::UserFormGeometryHelper::setInnerWidth(double)
ooo::vba::UserFormGeometryHelper::setLeft(double)
ooo::vba::UserFormGeometryHelper::setTop(double)
ooo::vba::UserFormGeometryHelper::setWidth(double)
ooo::vba::executeMacro(SfxObjectShell*, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&, com::sun::star::uno::Any&, com::sun::star::uno::Any const&)
ooo::vba::getDefaultProjectName(SfxObjectShell const*)
ooo::vba::getPixelTo100thMillimeterConversionFactor(com::sun::star::uno::Reference<com::sun::star::awt::XDevice> const&, bool)
ooo::vba::resolveVBAMacro(SfxObjectShell const*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
ooo::vba::setPropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, rtl::OUString const&, com::sun::star::uno::Any const&)
oox::AttributeConversion::decodeHyper(rtl::OUString const&)
oox::AttributeConversion::decodeInteger(rtl::OUString const&)
oox::AttributeConversion::decodeIntegerHex(rtl::OUString const&)
oox::AttributeConversion::decodeUnsigned(rtl::OUString const&)
oox::AttributeConversion::decodeXString(rtl::OUString const&)
oox::AttributeList::AttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::AttributeList::getAttribList() const
oox::AttributeList::getBool(int) const
oox::AttributeList::getDateTime(int) const
oox::AttributeList::getDouble(int) const
oox::AttributeList::getHighlightColor(int) const
oox::AttributeList::getHyper(int) const
oox::AttributeList::getInteger(int) const
oox::AttributeList::getIntegerHex(int) const
oox::AttributeList::getString(int) const
oox::AttributeList::getToken(int) const
oox::AttributeList::getTokenList(int) const
oox::AttributeList::getUnsigned(int) const
oox::AttributeList::getXString(int) const
oox::BinaryInputStream::copyToStream(oox::BinaryOutputStream&)
oox::BinaryInputStream::readCharArray(int)
oox::BinaryInputStream::readCharArrayUC(int, unsigned short)
oox::BinaryInputStream::readCompressedUnicodeArray(int, bool)
oox::BinaryInputStream::readNulUnicodeArray()
oox::BinaryStreamBase::alignToBlock(int, long)
oox::BinaryStreamBase::~BinaryStreamBase()
oox::BinaryXInputStream::BinaryXInputStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
oox::BinaryXInputStream::close()
oox::BinaryXInputStream::readData(com::sun::star::uno::Sequence<signed char>&, int, unsigned long)
oox::BinaryXInputStream::readMemory(void*, int, unsigned long)
oox::BinaryXInputStream::skip(int, unsigned long)
oox::BinaryXInputStream::~BinaryXInputStream()
oox::BinaryXOutputStream::BinaryXOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, bool)
oox::BinaryXOutputStream::close()
oox::BinaryXOutputStream::writeData(com::sun::star::uno::Sequence<signed char> const&, unsigned long)
oox::BinaryXOutputStream::writeMemory(void const*, int, unsigned long)
oox::BinaryXOutputStream::~BinaryXOutputStream()
oox::FormulaExportBase::FormulaExportBase()
oox::FormulaImportBase::FormulaImportBase()
oox::GrabBagStack::GrabBagStack(rtl::OUString const&)
oox::GrabBagStack::isStackEmpty() const
oox::GrabBagStack::~GrabBagStack()
oox::GraphicHelper::convertHmmToAppFont(com::sun::star::awt::Point const&) const
oox::GraphicHelper::convertHmmToAppFont(com::sun::star::awt::Size const&) const
oox::GraphicHelper::convertHmmToScreenPixel(com::sun::star::awt::Point const&) const
oox::GraphicHelper::convertHmmToScreenPixel(com::sun::star::awt::Size const&) const
oox::GraphicHelper::convertHmmToScreenPixelX(int) const
oox::GraphicHelper::convertHmmToScreenPixelY(int) const
oox::GraphicHelper::convertScreenPixelToHmm(com::sun::star::awt::Size const&) const
oox::GraphicHelper::convertScreenPixelXToHmm(double) const
oox::GraphicHelper::convertScreenPixelYToHmm(double) const
oox::GraphicHelper::getDefaultChartAreaLineStyle()
oox::GraphicHelper::getDefaultChartAreaLineWidth()
oox::GraphicHelper::getOriginalSize(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&) const
oox::GraphicHelper::getPaletteColor(int) const
oox::GraphicHelper::getSchemeColor(int) const
oox::GraphicHelper::importGraphic(com::sun::star::uno::Sequence<signed char> const&) const
oox::GraphicHelper::initializeGraphicMapperIfNeeded() const
oox::GraphicHelper::setGraphicMapper(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphicMapper> const&)
oox::GraphicHelper::~GraphicHelper()
oox::IProgressBar::~IProgressBar()
oox::ISegmentProgressBar::~ISegmentProgressBar()
oox::ModelObjectHelper::ModelObjectHelper(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
oox::ModelObjectHelper::getFillBitmap(rtl::OUString const&)
oox::ModelObjectHelper::hasLineMarker(rtl::OUString const&) const
oox::ModelObjectHelper::insertFillBitmapXGraphic(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
oox::ModelObjectHelper::insertFillGradient(com::sun::star::awt::Gradient const&)
oox::ModelObjectHelper::insertFillHatch(com::sun::star::drawing::Hatch const&)
oox::ModelObjectHelper::insertLineDash(com::sun::star::drawing::LineDash const&)
oox::ModelObjectHelper::insertLineMarker(rtl::OUString const&, com::sun::star::drawing::PolyPolygonBezierCoords const&)
oox::ModelObjectHelper::insertTransGrandient(com::sun::star::awt::Gradient const&)
oox::ObjectContainer::ObjectContainer(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString const&)
oox::ObjectContainer::createContainer() const
oox::ObjectContainer::getObject(rtl::OUString const&) const
oox::ObjectContainer::hasObject(rtl::OUString const&) const
oox::ObjectContainer::insertObject(rtl::OUString const&, com::sun::star::uno::Any const&, bool)
oox::ObjectContainer::~ObjectContainer()
oox::ProgressBar::ProgressBar(com::sun::star::uno::Reference<com::sun::star::task::XStatusIndicator> const&, rtl::OUString const&)
oox::ProgressBar::getPosition() const
oox::ProgressBar::setPosition(double)
oox::ProgressBar::~ProgressBar()
oox::PropertyMap::PropertyMap()
oox::PropertyMap::assignAll(oox::PropertyMap const&)
oox::PropertyMap::assignUsed(oox::PropertyMap const&)
oox::PropertyMap::empty() const
oox::PropertyMap::erase(int)
oox::PropertyMap::fillPropertyNameMap(std::map<rtl::OUString, com::sun::star::uno::Any, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Any> > >&) const
oox::PropertyMap::fillSequences(com::sun::star::uno::Sequence<rtl::OUString>&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&) const
oox::PropertyMap::getPropertyName(int)
oox::PropertyMap::hasProperty(int) const
oox::PropertyMap::makePropertySet() const
oox::PropertyMap::setAnyProperty(int, com::sun::star::uno::Any const&)
oox::PropertySet::hasProperty(int) const
oox::PropertySet::implGetPropertyValue(com::sun::star::uno::Any&, rtl::OUString const&) const
oox::PropertySet::implSetPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
oox::PropertySet::setProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
oox::SegmentProgressBar::SegmentProgressBar(com::sun::star::uno::Reference<com::sun::star::task::XStatusIndicator> const&, rtl::OUString const&)
oox::SegmentProgressBar::getPosition() const
oox::SegmentProgressBar::setPosition(double)
oox::SequenceInputStream::SequenceInputStream(com::sun::star::uno::Sequence<signed char> const&)
oox::SequenceInputStream::readData(com::sun::star::uno::Sequence<signed char>&, int, unsigned long)
oox::SequenceInputStream::readMemory(void*, int, unsigned long)
oox::SequenceInputStream::skip(int, unsigned long)
oox::SequenceSeekableStream::SequenceSeekableStream(com::sun::star::uno::Sequence<signed char> const&)
oox::SequenceSeekableStream::close()
oox::SequenceSeekableStream::seek(long)
oox::SequenceSeekableStream::size() const
oox::SequenceSeekableStream::tell() const
oox::StorageBase::StorageBase(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
oox::StorageBase::StorageBase(com::sun::star::uno::Reference<com::sun::star::io::XStream> const&, bool)
oox::StorageBase::StorageBase(oox::StorageBase const&, rtl::OUString const&, bool)
oox::StorageBase::copyStorageToStorage(oox::StorageBase&)
oox::StorageBase::copyToStorage(oox::StorageBase&, rtl::OUString const&)
oox::StorageBase::getElementNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&) const
oox::StorageBase::getPath() const
oox::StorageBase::getSubStorage(rtl::OUString const&, bool)
oox::StorageBase::getXStorage() const
oox::StorageBase::isRootStorage() const
oox::StorageBase::openInputStream(rtl::OUString const&)
oox::StorageBase::~StorageBase()
oox::core::ContextHandler2::ContextHandler2(oox::core::ContextHandler2Helper const&)
oox::core::ContextHandler2::~ContextHandler2()
oox::core::ContextHandler2Helper::ContextHandler2Helper(bool, oox::core::XmlFilterBase&)
oox::core::ContextHandler2Helper::ContextHandler2Helper(oox::core::ContextHandler2Helper const&)
oox::core::ContextHandler2Helper::implCharacters(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::core::ContextHandler2Helper::implCreateChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler2Helper::implCreateRecordContext(int, oox::SequenceInputStream&)
oox::core::ContextHandler2Helper::implEndElement(int)
oox::core::ContextHandler2Helper::implEndRecord(int)
oox::core::ContextHandler2Helper::implStartElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler2Helper::implStartRecord(int, oox::SequenceInputStream&)
oox::core::ContextHandler2Helper::popElementInfo()
oox::core::ContextHandler2Helper::prepareMceContext(int, oox::AttributeList const&)
oox::core::ContextHandler2Helper::processCollectedChars()
oox::core::ContextHandler2Helper::pushElementInfo(int)
oox::core::ContextHandler2Helper::~ContextHandler2Helper()
oox::core::ContextHandler::ContextHandler(oox::core::ContextHandler const&)
oox::core::ContextHandler::ContextHandler(std::shared_ptr<oox::core::FragmentBaseData> const&)
oox::core::ContextHandler::characters(rtl::OUString const&)
oox::core::ContextHandler::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler::createRecordContext(int, oox::SequenceInputStream&)
oox::core::ContextHandler::endFastElement(int)
oox::core::ContextHandler::endRecord(int)
oox::core::ContextHandler::getFragmentPath() const
oox::core::ContextHandler::implSetLocator(com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
oox::core::ContextHandler::startFastElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler::startRecord(int, oox::SequenceInputStream&)
oox::core::ContextHandler::~ContextHandler()
oox::core::FastParser::FastParser()
oox::core::FastParser::clearDocumentHandler()
oox::core::FastParser::parseStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&)
oox::core::FastParser::parseStream(com::sun::star::xml::sax::InputSource const&, bool)
oox::core::FastParser::parseStream(oox::StorageBase&, rtl::OUString const&)
oox::core::FastParser::registerNamespace(int)
oox::core::FastParser::setDocumentHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastDocumentHandler> const&)
oox::core::FastParser::~FastParser()
oox::core::FastTokenHandler::FastTokenHandler()
oox::core::FastTokenHandler::getImplementationName()
oox::core::FastTokenHandler::getSupportedServiceNames()
oox::core::FastTokenHandler::getTokenDirect(char const*, int) const
oox::core::FastTokenHandler::getTokenFromUTF8(com::sun::star::uno::Sequence<signed char> const&)
oox::core::FastTokenHandler::getUTF8Identifier(int)
oox::core::FastTokenHandler::supportsService(rtl::OUString const&)
oox::core::FastTokenHandler::~FastTokenHandler()
oox::core::FilterBase::FilterBase(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
oox::core::FilterBase::getFilterData() const
oox::core::FilterBase::getMainDocumentStream() const
oox::core::FilterBase::getModelObjectHelper() const
oox::core::FilterBase::getModelObjectHelperForModel(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&) const
oox::core::FilterBase::getOleObjectHelper() const
oox::core::FilterBase::implFinalizeExport(utl::MediaDescriptor&)
oox::core::FilterBase::implGetInputStream(utl::MediaDescriptor&) const
oox::core::FilterBase::implGetOutputStream(utl::MediaDescriptor&) const
oox::core::FilterBase::openOutputStream(rtl::OUString const&) const
oox::core::FilterBase::setMediaDescriptor(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
oox::core::FilterBase::~FilterBase()
oox::core::FilterDetect::FilterDetect(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
oox::core::FilterDetect::detect(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
oox::core::FilterDetect::getImplementationName()
oox::core::FilterDetect::getSupportedServiceNames()
oox::core::FilterDetect::supportsService(rtl::OUString const&)
oox::core::FilterDetect::~FilterDetect()
oox::core::FragmentHandler2::FragmentHandler2(oox::core::XmlFilterBase&, rtl::OUString const&, bool)
oox::core::FragmentHandler2::~FragmentHandler2()
oox::core::FragmentHandler::FragmentHandler(oox::core::XmlFilterBase&, rtl::OUString const&)
oox::core::FragmentHandler::FragmentHandler(oox::core::XmlFilterBase&, rtl::OUString const&, std::shared_ptr<oox::core::Relations>)
oox::core::FragmentHandler::characters(rtl::OUString const&)
oox::core::FragmentHandler::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::FragmentHandler::endDocument()
oox::core::FragmentHandler::endFastElement(int)
oox::core::FragmentHandler::startDocument()
oox::core::FragmentHandler::startFastElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::FragmentHandler::~FragmentHandler()
oox::core::Relations::Relations(rtl::OUString const&)
oox::core::Relations::getFragmentPathFromFirstType(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::core::Relations::getFragmentPathFromFirstTypeFromOfficeDoc(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::core::Relations::getFragmentPathFromRelation(oox::core::Relation const&) const
oox::core::Relations::getInternalTargetFromRelId(rtl::OUString const&) const
oox::core::Relations::getRelationFromFirstType(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::core::XmlFilterBase::XmlFilterBase(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
oox::core::XmlFilterBase::checkDocumentProperties(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&)
oox::core::XmlFilterBase::getDiagramFontHeights()
oox::core::XmlFilterBase::getTextFieldStack() const
oox::core::XmlFilterBase::importCustomFragments(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
oox::core::XmlFilterBase::importFragment(rtl::OUString const&)
oox::core::XmlFilterBase::importFragment(rtl::Reference<oox::core::FragmentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastSAXSerializable> const&)
oox::core::XmlFilterBase::importRelations(rtl::OUString const&)
oox::core::XmlFilterBase::isMSO2007Document() const
oox::core::XmlFilterBase::setDiagramFontHeights(std::map<rtl::OUString, std::map<std::shared_ptr<oox::drawingml::Shape>, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>, std::less<std::shared_ptr<oox::drawingml::Shape> >, std::allocator<std::pair<std::shared_ptr<oox::drawingml::Shape> const, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> > > >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::map<std::shared_ptr<oox::drawingml::Shape>, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>, std::less<std::shared_ptr<oox::drawingml::Shape> >, std::allocator<std::pair<std::shared_ptr<oox::drawingml::Shape> const, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> > > > > > >*)
oox::core::XmlFilterBase::setMissingExtDrawing()
oox::core::XmlFilterBase::~XmlFilterBase()
oox::crypto::AgileEngine::AgileEngine()
oox::crypto::AgileEngine::calculateBlock(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&)
oox::crypto::AgileEngine::calculateHashFinal(rtl::OUString const&, std::vector<unsigned char, std::allocator<unsigned char> >&)
oox::crypto::AgileEngine::cryptoType(oox::crypto::AgileEncryptionInfo const&)
oox::crypto::AgileEngine::decryptEncryptionKey(rtl::OUString const&)
oox::crypto::AgileEngine::decryptHmacKey()
oox::crypto::AgileEngine::decryptHmacValue()
oox::crypto::AgileEngine::encryptBlock(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&)
oox::crypto::AgileEngine::encryptEncryptionKey(rtl::OUString const&)
oox::crypto::AgileEngine::encryptHmacKey()
oox::crypto::AgileEngine::encryptHmacValue()
oox::crypto::AgileEngine::setupEncryptionKey(rtl::OUString const&)
oox::crypto::Crypto::Crypto()
oox::crypto::Crypto::~Crypto()
oox::crypto::CryptoHash::CryptoHash(std::vector<unsigned char, std::allocator<unsigned char> >&, oox::crypto::CryptoHashType)
oox::crypto::Standard2007Engine::calculateEncryptionKey(rtl::OUString const&)
oox::crypto::Standard2007Engine::checkDataIntegrity()
oox::crypto::Standard2007Engine::generateEncryptionKey(rtl::OUString const&)
oox::crypto::Standard2007Engine::generateVerifier()
oox::crypto::Standard2007Engine::readEncryptionInfo(com::sun::star::uno::Reference<com::sun::star::io::XInputStream>&)
oox::drawingml::ChartExport::ChartExport(int, std::shared_ptr<sax_fastparser::FastSerializerHelper>, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, oox::core::XmlFilterBase*, oox::drawingml::DocumentType)
oox::drawingml::ChartExport::ExportContent_()
oox::drawingml::ChartExport::InitPlotArea()
oox::drawingml::ChartExport::InitRangeSegmentationProperties(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
oox::drawingml::ChartExport::_exportAxis(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, int, char const*, oox::drawingml::AxisIdPair const&)
oox::drawingml::ChartExport::exportAdditionalShapes(com::sun::star::uno::Reference<com::sun::star::chart::XChartDocument> const&)
oox::drawingml::ChartExport::exportAllSeries(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&, bool&)
oox::drawingml::ChartExport::exportAreaChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportAxes()
oox::drawingml::ChartExport::exportAxesId(bool, bool)
oox::drawingml::ChartExport::exportAxis(oox::drawingml::AxisIdPair const&)
oox::drawingml::ChartExport::exportBarChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportBitmapFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportBubbleChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportCandleStickSeries(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> > const&, bool&)
oox::drawingml::ChartExport::exportChart(com::sun::star::uno::Reference<com::sun::star::chart::XChartDocument> const&)
oox::drawingml::ChartExport::exportChartSpace(com::sun::star::uno::Reference<com::sun::star::chart::XChartDocument> const&, bool)
oox::drawingml::ChartExport::exportDataLabels(com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> const&, int, int, oox::drawingml::DataLabelsRange&)
oox::drawingml::ChartExport::exportDataPoints(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, int, int)
oox::drawingml::ChartExport::exportDataTable()
oox::drawingml::ChartExport::exportDoughnutChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportErrorBar(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
oox::drawingml::ChartExport::exportExternalData(com::sun::star::uno::Reference<com::sun::star::chart::XChartDocument> const&)
oox::drawingml::ChartExport::exportFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportFirstSliceAng()
oox::drawingml::ChartExport::exportGradientFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportGrouping(bool)
oox::drawingml::ChartExport::exportHatch(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportHiLowLines()
oox::drawingml::ChartExport::exportLegend(com::sun::star::uno::Reference<com::sun::star::chart::XChartDocument> const&)
oox::drawingml::ChartExport::exportLineChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportManualLayout(com::sun::star::chart2::RelativePosition const&, com::sun::star::chart2::RelativeSize const&, bool)
oox::drawingml::ChartExport::exportMarker(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportMissingValueTreatment(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportPieChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportPlotArea(com::sun::star::uno::Reference<com::sun::star::chart::XChartDocument> const&)
oox::drawingml::ChartExport::exportRadarChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportScatterChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportScatterChartSeries(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> > const*)
oox::drawingml::ChartExport::exportSeries(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> > const&, bool&)
oox::drawingml::ChartExport::exportSeriesCategory(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&, int)
oox::drawingml::ChartExport::exportSeriesText(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&)
oox::drawingml::ChartExport::exportSeriesValues(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&, int)
oox::drawingml::ChartExport::exportShapeProps(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportSmooth()
oox::drawingml::ChartExport::exportSolidFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportStockChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportSurfaceChart(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportTextProps(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ChartExport::exportTitle(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, rtl::OUString const*)
oox::drawingml::ChartExport::exportTrendlines(com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> const&)
oox::drawingml::ChartExport::exportUpDownBars(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportVaryColors(com::sun::star::uno::Reference<com::sun::star::chart2::XChartType> const&)
oox::drawingml::ChartExport::exportView3D()
oox::drawingml::ChartExport::getChartType()
oox::drawingml::ChartExport::getNumberFormatCode(int) const
oox::drawingml::ChartExport::getSplitCategoriesList(rtl::OUString const&)
oox::drawingml::ChartExport::isDeep3dChart()
oox::drawingml::ChartExport::parseFormula(rtl::OUString const&)
oox::drawingml::ClrScheme::ToAny(com::sun::star::uno::Any&) const
oox::drawingml::ClrScheme::setColor(int, Color)
oox::drawingml::Color::addChartTintTransformation(double)
oox::drawingml::Color::addTransformation(int, int)
oox::drawingml::Color::clearTransparence()
oox::drawingml::Color::equals(oox::drawingml::Color const&, oox::GraphicHelper const&, Color) const
oox::drawingml::Color::getColorTransformationName(int)
oox::drawingml::Color::getColorTransformationToken(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::drawingml::Color::getDmlPresetColor(int, Color)
oox::drawingml::Color::getHighlightColor(int, Color)
oox::drawingml::Color::getLumMod()
oox::drawingml::Color::getLumOff()
oox::drawingml::Color::getSchemeColorIndex() const
oox::drawingml::Color::getTintOrShade()
oox::drawingml::Color::getTransparency() const
oox::drawingml::Color::hasTransparency() const
oox::drawingml::Color::setHighlight(int)
oox::drawingml::Color::setHslClr(int, int, int)
oox::drawingml::Color::setPrstClr(int)
oox::drawingml::Color::setResolvedRgb(Color) const
oox::drawingml::Color::setScrgbClr(int, int, int)
oox::drawingml::Color::setSysClr(int, int)
oox::drawingml::Color::setUnused()
oox::drawingml::Color::toCrgb() const
oox::drawingml::Color::toHsl() const
oox::drawingml::Color::toRgb() const
oox::drawingml::ConnectorShapeContext::ConnectorShapeContext(oox::core::ContextHandler2Helper const&, std::shared_ptr<oox::drawingml::Shape> const&, std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::ConnectorShapeContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ConnectorShapeContext::~ConnectorShapeContext()
oox::drawingml::DrawingML::ColorWithIntensity(unsigned int, unsigned int)
oox::drawingml::DrawingML::CreateOutputStream(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, char const*, char const*, rtl::OUString*)
oox::drawingml::DrawingML::EqualGradients(com::sun::star::awt::Gradient, com::sun::star::awt::Gradient)
oox::drawingml::DrawingML::GetAlignment(com::sun::star::style::ParagraphAdjust)
oox::drawingml::DrawingML::GetComponentDir() const
oox::drawingml::DrawingML::GetCustomGeometryPointValue(com::sun::star::drawing::EnhancedCustomShapeParameter const&, SdrObjCustomShape const&)
oox::drawingml::DrawingML::GetDatetimeTypeFromDate(SvxDateFormat)
oox::drawingml::DrawingML::GetDatetimeTypeFromTime(SvxTimeFormat)
oox::drawingml::DrawingML::GetFieldValue(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, bool&)
oox::drawingml::DrawingML::GetProperty(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
oox::drawingml::DrawingML::GetPropertyAndState(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyState> const&, rtl::OUString const&, com::sun::star::beans::PropertyState&)
oox::drawingml::DrawingML::GetRelationCompPrefix() const
oox::drawingml::DrawingML::GetScriptType(rtl::OUString const&)
oox::drawingml::DrawingML::HasEnhancedCustomShapeSegmentCommand(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, short)
oox::drawingml::DrawingML::IsFontworkShape(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::IsGroupShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::DrawingML::SubstituteBullet(char16_t, com::sun::star::awt::FontDescriptor&)
oox::drawingml::DrawingML::WriteArtisticEffect(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteBlipFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, int)
oox::drawingml::DrawingML::WriteBlipOrNormalFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
oox::drawingml::DrawingML::WriteColor(Color, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, int)
oox::drawingml::DrawingML::WriteColor(Color, int)
oox::drawingml::DrawingML::WriteColor(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, int)
oox::drawingml::DrawingML::WriteColorTransformations(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, int)
oox::drawingml::DrawingML::WriteConnectorConnections(EscherConnectorListEntry&, int, int)
oox::drawingml::DrawingML::WriteCustomGeometry(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, SdrObjCustomShape const&)
oox::drawingml::DrawingML::WriteCustomGeometryPoint(com::sun::star::drawing::EnhancedCustomShapeParameterPair const&, SdrObjCustomShape const&)
oox::drawingml::DrawingML::WriteFromTo(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Size const&, std::shared_ptr<sax_fastparser::FastSerializerHelper> const&)
oox::drawingml::DrawingML::WriteGlowEffect(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteGrabBagGradientFill(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::awt::Gradient)
oox::drawingml::DrawingML::WriteGradientFill(com::sun::star::awt::Gradient, com::sun::star::awt::Gradient, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteGradientStop(unsigned short, Color, int)
oox::drawingml::DrawingML::WriteGraphicCropProperties(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, Size const&, MapMode const&)
oox::drawingml::DrawingML::WriteImageBrightnessContrastTransparence(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteLineArrow(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
oox::drawingml::DrawingML::WriteLinespacing(com::sun::star::style::LineSpacing const&)
oox::drawingml::DrawingML::WriteLstStyles(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, bool&, int&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteMediaNonVisualProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::DrawingML::WriteParagraph(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, bool&, int&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteParagraphNumbering(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, float, short)
oox::drawingml::DrawingML::WriteParagraphProperties(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, float, int)
oox::drawingml::DrawingML::WriteParagraphTabStops(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WritePattFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WritePattFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::drawing::Hatch const&)
oox::drawingml::DrawingML::WritePolyPolygon(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool)
oox::drawingml::DrawingML::WritePolyPolygon(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, tools::PolyPolygon const&, bool)
oox::drawingml::DrawingML::WritePresetShape(char const*, MSO_SPT, bool, com::sun::star::beans::PropertyValue const&)
oox::drawingml::DrawingML::WritePresetShape(char const*, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >&)
oox::drawingml::DrawingML::WriteRun(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, bool&, int&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteRunProperties(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, int, bool, bool&, int&, short, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteShapeEffect(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
oox::drawingml::DrawingML::WriteShapeStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteSoftEdgeEffect(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteSolidFill(Color, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, int)
oox::drawingml::DrawingML::WriteSolidFill(Color, int)
oox::drawingml::DrawingML::WriteSolidFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::DrawingML::WriteSolidFill(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, int)
oox::drawingml::DrawingML::WriteSrcRectXGraphic(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
oox::drawingml::DrawingML::WriteStyleProperties(int, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
oox::drawingml::DrawingML::WriteText(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, bool, bool, int, bool)
oox::drawingml::DrawingML::WriteTransformation(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, tools::Rectangle const&, int, bool, bool, int, bool)
oox::drawingml::DrawingML::WriteWdpPicture(rtl::OUString const&, com::sun::star::uno::Sequence<signed char> const&)
oox::drawingml::DrawingML::WriteXGraphicBlip(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, bool)
oox::drawingml::DrawingML::WriteXGraphicBlipFill(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, int, bool, bool)
oox::drawingml::DrawingML::WriteXGraphicBlipMode(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
oox::drawingml::DrawingML::WriteXGraphicStretch(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
oox::drawingml::DrawingML::getBulletMarginIndentation(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, short, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::drawingml::DrawingML::writeDiagramRels(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::uno::Any> > const&, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int)
oox::drawingml::GraphicShapeContext::GraphicShapeContext(oox::core::ContextHandler2Helper const&, std::shared_ptr<oox::drawingml::Shape> const&, std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::GraphicShapeContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::GraphicalObjectFrameContext::GraphicalObjectFrameContext(oox::core::ContextHandler2Helper&, std::shared_ptr<oox::drawingml::Shape> const&, std::shared_ptr<oox::drawingml::Shape> const&, bool)
oox::drawingml::GraphicalObjectFrameContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::GraphicalObjectFrameContext::onEndElement()
oox::drawingml::Shape::Shape(std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::Shape::addChildren(oox::core::XmlFilterBase&, oox::drawingml::Shape&, oox::drawingml::Theme const*, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, std::map<rtl::OUString, std::shared_ptr<oox::drawingml::Shape>, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::shared_ptr<oox::drawingml::Shape> > > >*, basegfx::B2DHomMatrix const&)
oox::drawingml::Shape::applyShapeReference(oox::drawingml::Shape const&, bool)
oox::drawingml::Shape::cloneFillProperties()
oox::drawingml::Shape::convertSmartArtToMetafile(oox::core::XmlFilterBase const&)
oox::drawingml::Shape::createAndInsert(oox::core::XmlFilterBase&, rtl::OUString const&, oox::drawingml::Theme const*, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, bool, bool, basegfx::B2DHomMatrix&, oox::drawingml::FillProperties const&, std::shared_ptr<oox::drawingml::Shape>)
oox::drawingml::Shape::finalizeServiceName(oox::core::XmlFilterBase&, rtl::OUString const&, com::sun::star::awt::Rectangle const&)
oox::drawingml::Shape::getActualEffectProperties(oox::drawingml::Theme const*) const
oox::drawingml::Shape::getActualFillProperties(oox::drawingml::Theme const*, oox::drawingml::FillProperties const*) const
oox::drawingml::Shape::getActualLineProperties(oox::drawingml::Theme const*) const
oox::drawingml::Shape::getShapeStyleRef(int) const
oox::drawingml::Shape::getTableProperties()
oox::drawingml::Shape::keepDiagramCompatibilityInfo()
oox::drawingml::Shape::keepDiagramDrawing(oox::core::XmlFilterBase&, rtl::OUString const&)
oox::drawingml::Shape::putPropertiesToGrabBag(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
oox::drawingml::Shape::putPropertyToGrabBag(com::sun::star::beans::PropertyValue const&)
oox::drawingml::Shape::putPropertyToGrabBag(rtl::OUString const&, com::sun::star::uno::Any const&)
oox::drawingml::Shape::renderDiagramToGraphic(oox::core::XmlFilterBase const&)
oox::drawingml::Shape::resolveRelationshipsOfTypeFromOfficeDoc(oox::core::XmlFilterBase&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::drawingml::Shape::setChartType(bool)
oox::drawingml::Shape::setDefaults(bool)
oox::drawingml::Shape::setDiagramType()
oox::drawingml::Shape::setLockedCanvas(bool)
oox::drawingml::Shape::setMasterTextListStyle(std::shared_ptr<oox::drawingml::TextListStyle> const&)
oox::drawingml::Shape::setOleObjectType()
oox::drawingml::Shape::setServiceName(char const*)
oox::drawingml::Shape::setTableType()
oox::drawingml::Shape::setTextBody(std::shared_ptr<oox::drawingml::TextBody> const&)
oox::drawingml::Shape::setTextBox(bool)
oox::drawingml::Shape::setWps(bool)
oox::drawingml::Shape::syncDiagramFontHeights()
oox::drawingml::Shape::~Shape()
oox::drawingml::ShapeContext::ShapeContext(oox::core::ContextHandler2Helper const&, std::shared_ptr<oox::drawingml::Shape> const&, std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::ShapeContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ShapeContext::~ShapeContext()
oox::drawingml::ShapeExport::GetNewShapeID(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::GetNewShapeID(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, oox::core::XmlFilterBase*)
oox::drawingml::ShapeExport::GetShapeID(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::GetShapeName(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::MapSize(com::sun::star::awt::Size const&) const
oox::drawingml::ShapeExport::NonEmptyText(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
oox::drawingml::ShapeExport::WriteBorderLine(int, com::sun::star::table::BorderLine2 const&)
oox::drawingml::ShapeExport::WriteClosedPolyPolygonShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteConnectorShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteCustomShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteEllipseShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteGraphicObjectShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteGraphicObjectShapePart(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, Graphic const*)
oox::drawingml::ShapeExport::WriteGroupShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteLineShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteMathShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteNonVisualProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteOLE2Shape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteOpenPolyPolygonShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WritePolyPolygonShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool)
oox::drawingml::ShapeExport::WriteRectangleShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteTable(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteTableCellBorders(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ShapeExport::WriteTableCellProperties(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ShapeExport::WriteTableShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteUnknownShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeGroupContext::ShapeGroupContext(oox::core::FragmentHandler2 const&, std::shared_ptr<oox::drawingml::Shape> const&, std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::ShapeGroupContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ShapeGroupContext::~ShapeGroupContext()
oox::drawingml::ShapePropertyInfo::ShapePropertyInfo(o3tl::enumarray<oox::drawingml::ShapeProperty, int> const&, bool, bool, bool, bool, bool)
oox::drawingml::ShapePropertyMap::ShapePropertyMap(oox::ModelObjectHelper&, oox::drawingml::ShapePropertyInfo const&)
oox::drawingml::ShapePropertyMap::hasNamedLineMarkerInTable(rtl::OUString const&) const
oox::drawingml::ShapePropertyMap::setAnyProperty(oox::drawingml::ShapeProperty, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillBitmap(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillBitmapName(com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillGradient(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillHatch(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setGradientTrans(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setLineDash(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setLineMarker(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::supportsProperty(oox::drawingml::ShapeProperty) const
oox::drawingml::Theme::addTheme(com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&) const
oox::drawingml::Theme::getEffectStyle(int) const
oox::drawingml::Theme::getFillStyle(int) const
oox::drawingml::Theme::getFontStyle(int) const
oox::drawingml::Theme::getLineStyle(int) const
oox::drawingml::Theme::resolveFont(rtl::OUString const&) const
oox::drawingml::ThemeFragmentHandler::ThemeFragmentHandler(oox::core::XmlFilterBase&, rtl::OUString const&, oox::drawingml::Theme&)
oox::drawingml::ThemeFragmentHandler::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ThemeFragmentHandler::~ThemeFragmentHandler()
oox::drawingml::URLTransformer::~URLTransformer()
oox::drawingml::chart::ChartConverter::convertFromModel(oox::core::XmlFilterBase&, oox::drawingml::chart::ChartSpaceModel&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::awt::Point const&, com::sun::star::awt::Size const&)
oox::drawingml::chart::ChartConverter::createDataProvider(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
oox::drawingml::chart::ChartConverter::createDataSequence(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataProvider> const&, oox::drawingml::chart::DataSequenceModel const&, rtl::OUString const&, rtl::OUString const&)
oox::drawingml::chart::ChartConverter::~ChartConverter()
oox::formulaimport::XmlStream::Tag::Tag(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::formulaimport::XmlStream::Tag::Tag(int, oox::formulaimport::XmlStream::AttributeList const&)
oox::formulaimport::XmlStream::XmlStream()
oox::formulaimport::XmlStream::checkTag(int, bool)
oox::formulaimport::XmlStream::currentTag() const
oox::formulaimport::XmlStream::findTagInternal(int, bool)
oox::formulaimport::XmlStream::moveToNextTag()
oox::formulaimport::XmlStream::skipElementInternal(int, bool)
oox::ole::AxCheckBoxModel::AxCheckBoxModel()
oox::ole::AxCheckBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxCheckBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxCheckBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxCheckBoxModel::getControlType() const
oox::ole::AxComboBoxModel::AxComboBoxModel()
oox::ole::AxComboBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxComboBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxComboBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxComboBoxModel::getControlType() const
oox::ole::AxCommandButtonModel::AxCommandButtonModel()
oox::ole::AxCommandButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxCommandButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxCommandButtonModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxCommandButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxCommandButtonModel::getControlType() const
oox::ole::AxCommandButtonModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxCommandButtonModel::importPictureData(int, oox::BinaryInputStream&)
oox::ole::AxCommandButtonModel::importProperty(int, rtl::OUString const&)
oox::ole::AxContainerModelBase::AxContainerModelBase(bool)
oox::ole::AxContainerModelBase::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxContainerModelBase::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxContainerModelBase::importClassTable(oox::BinaryInputStream&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
oox::ole::AxContainerModelBase::importProperty(int, rtl::OUString const&)
oox::ole::AxControlModelBase::AxControlModelBase()
oox::ole::AxControlModelBase::importProperty(int, rtl::OUString const&)
oox::ole::AxFontData::AxFontData()
oox::ole::AxFontData::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxFontData::getHeightPoints() const
oox::ole::AxFontData::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxFontData::importGuidAndFont(oox::BinaryInputStream&)
oox::ole::AxFontData::importStdFont(oox::BinaryInputStream&)
oox::ole::AxFontDataModel::AxFontDataModel(bool)
oox::ole::AxFontDataModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxFontDataModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxFontDataModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxFontDataModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxFontDataModel::importProperty(int, rtl::OUString const&)
oox::ole::AxFrameModel::AxFrameModel()
oox::ole::AxFrameModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxFrameModel::getControlType() const
oox::ole::AxImageModel::AxImageModel()
oox::ole::AxImageModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxImageModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxImageModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxImageModel::getControlType() const
oox::ole::AxImageModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxImageModel::importPictureData(int, oox::BinaryInputStream&)
oox::ole::AxImageModel::importProperty(int, rtl::OUString const&)
oox::ole::AxLabelModel::AxLabelModel()
oox::ole::AxLabelModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxLabelModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxLabelModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxLabelModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxLabelModel::getControlType() const
oox::ole::AxLabelModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxLabelModel::importProperty(int, rtl::OUString const&)
oox::ole::AxListBoxModel::AxListBoxModel()
oox::ole::AxListBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxListBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxListBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxListBoxModel::getControlType() const
oox::ole::AxMorphDataModelBase::AxMorphDataModelBase()
oox::ole::AxMorphDataModelBase::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxMorphDataModelBase::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxMorphDataModelBase::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxMorphDataModelBase::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxMorphDataModelBase::importPictureData(int, oox::BinaryInputStream&)
oox::ole::AxMorphDataModelBase::importProperty(int, rtl::OUString const&)
oox::ole::AxMultiPageModel::AxMultiPageModel()
oox::ole::AxMultiPageModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxMultiPageModel::getControlType() const
oox::ole::AxMultiPageModel::importPageAndMultiPageProperties(oox::BinaryInputStream&, int)
oox::ole::AxNumericFieldModel::AxNumericFieldModel()
oox::ole::AxNumericFieldModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxNumericFieldModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxNumericFieldModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxNumericFieldModel::getControlType() const
oox::ole::AxOptionButtonModel::AxOptionButtonModel()
oox::ole::AxOptionButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxOptionButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxOptionButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxOptionButtonModel::getControlType() const
oox::ole::AxPageModel::AxPageModel()
oox::ole::AxPageModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxPageModel::getControlType() const
oox::ole::AxScrollBarModel::AxScrollBarModel()
oox::ole::AxScrollBarModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxScrollBarModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxScrollBarModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxScrollBarModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxScrollBarModel::getControlType() const
oox::ole::AxScrollBarModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxScrollBarModel::importProperty(int, rtl::OUString const&)
oox::ole::AxSpinButtonModel::AxSpinButtonModel()
oox::ole::AxSpinButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxSpinButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxSpinButtonModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxSpinButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxSpinButtonModel::getControlType() const
oox::ole::AxSpinButtonModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxSpinButtonModel::importProperty(int, rtl::OUString const&)
oox::ole::AxTabStripModel::AxTabStripModel()
oox::ole::AxTabStripModel::getControlType() const
oox::ole::AxTabStripModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxTextBoxModel::AxTextBoxModel()
oox::ole::AxTextBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxTextBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxTextBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxTextBoxModel::getControlType() const
oox::ole::AxToggleButtonModel::AxToggleButtonModel()
oox::ole::AxToggleButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxToggleButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxToggleButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxToggleButtonModel::getControlType() const
oox::ole::AxUserFormModel::AxUserFormModel()
oox::ole::AxUserFormModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxUserFormModel::getControlType() const
oox::ole::ControlConverter::ControlConverter(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, oox::GraphicHelper const&, bool)
oox::ole::ControlConverter::convertAxBackground(oox::PropertyMap&, unsigned int, unsigned int, oox::ole::ApiTransparencyMode) const
oox::ole::ControlConverter::convertAxBorder(oox::PropertyMap&, unsigned int, int, int) const
oox::ole::ControlConverter::convertAxOrientation(oox::PropertyMap&, std::pair<int, int> const&, int)
oox::ole::ControlConverter::convertAxPicture(oox::PropertyMap&, com::sun::star::uno::Sequence<signed char> const&, int) const
oox::ole::ControlConverter::convertAxPicture(oox::PropertyMap&, com::sun::star::uno::Sequence<signed char> const&, unsigned int) const
oox::ole::ControlConverter::convertAxState(oox::PropertyMap&, rtl::OUString const&, int, oox::ole::ApiDefaultStateMode, bool)
oox::ole::ControlConverter::convertAxVisualEffect(oox::PropertyMap&, int)
oox::ole::ControlConverter::convertColor(oox::PropertyMap&, int, unsigned int) const
oox::ole::ControlConverter::convertOrientation(oox::PropertyMap&, bool)
oox::ole::ControlConverter::convertPicture(oox::PropertyMap&, com::sun::star::uno::Sequence<signed char> const&) const
oox::ole::ControlConverter::convertPosition(oox::PropertyMap&, std::pair<int, int> const&) const
oox::ole::ControlConverter::convertScrollBar(oox::PropertyMap&, int, int, int, int, int, bool)
oox::ole::ControlConverter::convertScrollabilitySettings(oox::PropertyMap&, std::pair<int, int> const&, std::pair<int, int> const&, int) const
oox::ole::ControlConverter::convertSize(oox::PropertyMap&, std::pair<int, int> const&) const
oox::ole::ControlConverter::convertToAxBorder(oox::PropertySet const&, unsigned int&, int&, int&)
oox::ole::ControlConverter::convertToAxOrientation(oox::PropertySet const&, int&)
oox::ole::ControlConverter::convertToAxState(oox::PropertySet const&, rtl::OUString&, int&, oox::ole::ApiDefaultStateMode)
oox::ole::ControlConverter::convertToAxVisualEffect(oox::PropertySet const&, int&)
oox::ole::ControlConverter::convertToMSColor(oox::PropertySet const&, int, unsigned int&, unsigned int)
oox::ole::ControlConverter::convertToMSOrientation(oox::PropertySet const&, bool&)
oox::ole::ControlConverter::convertVerticalAlign(oox::PropertyMap&, int)
oox::ole::ControlConverter::~ControlConverter()
oox::ole::ControlModelBase::ControlModelBase()
oox::ole::ControlModelBase::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::ControlModelBase::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::ControlModelBase::convertSize(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::ControlModelBase::getServiceName() const
oox::ole::ControlModelBase::importPictureData(int, oox::BinaryInputStream&)
oox::ole::ControlModelBase::importProperty(int, rtl::OUString const&)
oox::ole::ControlModelBase::~ControlModelBase()
oox::ole::EmbeddedControl::EmbeddedControl(rtl::OUString const&)
oox::ole::EmbeddedControl::convertFromProperties(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, oox::ole::ControlConverter const&)
oox::ole::EmbeddedControl::convertProperties(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, oox::ole::ControlConverter const&) const
oox::ole::EmbeddedControl::createModelFromGuid(rtl::OUString const&)
oox::ole::EmbeddedControl::getServiceName() const
oox::ole::MSConvertOCXControls::importControlFromStream(oox::BinaryInputStream&, com::sun::star::uno::Reference<com::sun::star::form::XFormComponent>&, rtl::OUString const&)
oox::ole::MSConvertOCXControls::importControlFromStream(oox::BinaryInputStream&, com::sun::star::uno::Reference<com::sun::star::form::XFormComponent>&, rtl::OUString const&, int)
oox::ole::MSConvertOCXControls::~MSConvertOCXControls()
oox::ole::OleFormCtrlExportHelper::OleFormCtrlExportHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
oox::ole::OleFormCtrlExportHelper::exportCompObj(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
oox::ole::OleFormCtrlExportHelper::exportName(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
oox::ole::OleFormCtrlExportHelper::~OleFormCtrlExportHelper()
oox::ole::OleHelper::decodeOleColor(oox::GraphicHelper const&, unsigned int, bool)
oox::ole::OleHelper::exportGuid(oox::BinaryOutputStream&, SvGlobalName const&)
oox::ole::OleHelper::importGuid(oox::BinaryInputStream&)
oox::ole::OleHelper::importStdFont(oox::ole::StdFontInfo&, oox::BinaryInputStream&, bool)
oox::ole::OleHelper::importStdPic(com::sun::star::uno::Sequence<signed char>&, oox::BinaryInputStream&)
oox::ole::OleStorage::OleStorage(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
oox::ole::OleStorage::OleStorage(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::io::XStream> const&, bool)
oox::ole::OleStorage::OleStorage(oox::ole::OleStorage const&, com::sun::star::uno::Reference<com::sun::star::container::XNameContainer> const&, rtl::OUString const&, bool)
oox::ole::OleStorage::OleStorage(oox::ole::OleStorage const&, com::sun::star::uno::Reference<com::sun::star::io::XStream> const&, rtl::OUString const&)
oox::ole::OleStorage::implCommit() const
oox::ole::OleStorage::implGetElementNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&) const
oox::ole::OleStorage::implGetXStorage() const
oox::ole::OleStorage::implIsStorage() const
oox::ole::OleStorage::implOpenInputStream(rtl::OUString const&)
oox::ole::OleStorage::implOpenOutputStream(rtl::OUString const&)
oox::ole::OleStorage::implOpenSubStorage(rtl::OUString const&, bool)
oox::ole::OleStorage::initStorage(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
oox::ole::OleStorage::initStorage(com::sun::star::uno::Reference<com::sun::star::io::XStream> const&)
oox::ole::OleStorage::~OleStorage()
oox::ole::VbaMacroAttacherBase::VbaMacroAttacherBase(rtl::OUString const&)
oox::ole::VbaMacroAttacherBase::resolveAndAttachMacro(com::sun::star::uno::Reference<com::sun::star::script::vba::XVBAMacroResolver> const&)
oox::ole::VbaMacroAttacherBase::~VbaMacroAttacherBase()
oox::ole::VbaProject::copyStorage(oox::StorageBase&)
oox::ole::VbaProject::createBasicLibrary()
oox::ole::VbaProject::createDialogLibrary()
oox::ole::VbaProject::getLibraryContainer(int)
oox::ole::VbaProject::importVba(oox::StorageBase&, oox::GraphicHelper const&)
oox::ole::VbaProject::openLibrary(int)
oox::ole::VbaProject::prepareImport()
oox::ole::VbaProject::~VbaProject()
oox::shape::ShapeContextHandler::ShapeContextHandler(rtl::Reference<oox::shape::ShapeFilterBase> const&)
oox::shape::ShapeContextHandler::characters(rtl::OUString const&)
oox::shape::ShapeContextHandler::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::shape::ShapeContextHandler::createUnknownChildContext(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::shape::ShapeContextHandler::endFastElement(int)
oox::shape::ShapeContextHandler::endUnknownElement(rtl::OUString const&, rtl::OUString const&)
oox::shape::ShapeContextHandler::getChartShapeContext(int)
oox::shape::ShapeContextHandler::getContextHandler(int)
oox::shape::ShapeContextHandler::getDiagramShapeContext()
oox::shape::ShapeContextHandler::getDrawingShapeContext()
oox::shape::ShapeContextHandler::getGraphicShapeContext(int)
oox::shape::ShapeContextHandler::getLockedCanvasContext(int)
oox::shape::ShapeContextHandler::getWpgContext(int)
oox::shape::ShapeContextHandler::getWpsContext(int, int)
oox::shape::ShapeContextHandler::startFastElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::shape::ShapeContextHandler::startUnknownElement(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::shape::ShapeContextHandler::~ShapeContextHandler()
oox::shape::ShapeFilterBase::ShapeFilterBase(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
oox::shape::ShapeFilterBase::getChartConverter()
oox::shape::ShapeFilterBase::getCurrentTheme() const
oox::shape::ShapeFilterBase::getImplementationName()
oox::shape::ShapeFilterBase::getSchemeColor(int) const
oox::shape::ShapeFilterBase::getTableStyles()
oox::shape::ShapeFilterBase::getVmlDrawing()
oox::shape::ShapeFilterBase::implCreateGraphicHelper() const
oox::shape::ShapeFilterBase::implCreateVbaProject() const
oox::shape::ShapeFilterBase::setCurrentTheme(std::shared_ptr<oox::drawingml::Theme> const&)
oox::shape::ShapeFilterBase::~ShapeFilterBase()
oox::vml::ControlInfo::ControlInfo()
oox::vml::ConversionHelper::decodeBool(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::vml::ConversionHelper::decodeMeasureToEmu(oox::GraphicHelper const&, rtl::OUString const&, int, bool, bool)
oox::vml::ConversionHelper::decodeMeasureToHmm(oox::GraphicHelper const&, rtl::OUString const&, int, bool, bool)
oox::vml::ConversionHelper::decodeMeasureToTwip(oox::GraphicHelper const&, rtl::OUString const&, int, bool, bool)
oox::vml::ConversionHelper::decodePercent(rtl::OUString const&, double)
oox::vml::ConversionHelper::decodeRotation(rtl::OUString const&)
oox::vml::ConversionHelper::decodeVmlPath(std::vector<std::vector<com::sun::star::awt::Point, std::allocator<com::sun::star::awt::Point> >, std::allocator<std::vector<com::sun::star::awt::Point, std::allocator<com::sun::star::awt::Point> > > >&, std::vector<std::vector<com::sun::star::drawing::PolygonFlags, std::allocator<com::sun::star::drawing::PolygonFlags> >, std::allocator<std::vector<com::sun::star::drawing::PolygonFlags, std::allocator<com::sun::star::drawing::PolygonFlags> > > >&, rtl::OUString const&)
oox::vml::ConversionHelper::separatePair(rtl::OUString&, rtl::OUString&, rtl::OUString const&, char16_t)
oox::vml::Drawing::Drawing(oox::core::XmlFilterBase&, com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&, oox::vml::DrawingType)
oox::vml::Drawing::convertClientAnchor(com::sun::star::awt::Rectangle&, rtl::OUString const&) const
oox::vml::Drawing::createAndInsertClientXShape(oox::vml::ShapeBase const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::awt::Rectangle const&) const
oox::vml::Drawing::createAndInsertXShape(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::awt::Rectangle const&) const
oox::vml::Drawing::finalizeFragmentImport()
oox::vml::Drawing::getControlInfo(rtl::OUString const&) const
oox::vml::Drawing::getLocalShapeIndex(rtl::OUString const&) const
oox::vml::Drawing::isShapeSupported(oox::vml::ShapeBase const&) const
oox::vml::Drawing::notifyXShapeInserted(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Rectangle const&, oox::vml::ShapeBase const&, bool)
oox::vml::Drawing::registerBlockId(int)
oox::vml::Drawing::~Drawing()
oox::vml::DrawingFragment::DrawingFragment(oox::core::XmlFilterBase&, rtl::OUString const&, oox::vml::Drawing&)
oox::vml::FillModel::assignUsed(oox::vml::FillModel const&)
oox::vml::OleObjectInfo::OleObjectInfo(bool)
oox::vml::ShadowModel::ShadowModel()
oox::vml::ShapeBase::ShapeBase(oox::vml::Drawing&)
oox::vml::ShapeBase::calcShapeRectangle(oox::vml::ShapeParentAnchor const*) const
oox::vml::ShapeBase::convertAndInsert(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, oox::vml::ShapeParentAnchor const*) const
oox::vml::ShapeBase::convertShapeProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&) const
oox::vml::ShapeBase::finalizeFragmentImport()
oox::vml::ShapeBase::getChildById(rtl::OUString const&) const
oox::vml::ShapeBase::getChildTypeById(rtl::OUString const&) const
oox::vml::ShapeBase::getContainer() const
oox::vml::ShapeBase::setContainer(oox::vml::ShapeContainer*)
oox::vml::TextBox::TextBox(oox::vml::ShapeTypeModel&)
oox::vml::TextBox::appendPortion(oox::vml::TextParagraphModel const&, oox::vml::TextFontModel const&, rtl::OUString const&)
oox::vml::TextBox::convert(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&) const
oox::vml::TextFontModel::TextFontModel()
oox::vml::VMLExport::AddFlipXY()
oox::vml::VMLExport::AddLineDimensions(tools::Rectangle const&)
oox::vml::VMLExport::AddRectangleDimensions(rtl::OStringBuffer&, tools::Rectangle const&, bool)
oox::vml::VMLExport::ShapeIdString(unsigned int)
oox::vml::VMLExport::~VMLExport()
openclwrapper::errorString(int)
openclwrapper::setOpenCLCmdQueuePosition(int)
operator+(DateTime const&, int)
operator+(DateTime const&, tools::Time const&)
operator-(DateTime const&, int)
operator-(DateTime const&, tools::Time const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, CodeCompleteDataCache const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpCode const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLConfig const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLConfig::ImplMatcher const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLDeviceInfo const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLPlatformInfo const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, ScRangeList const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, SwIndex const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, SwPaM const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, std::set<OpenCLConfig::ImplMatcher, std::less<OpenCLConfig::ImplMatcher>, std::allocator<OpenCLConfig::ImplMatcher> > const&)
operator<=(Fraction const&, Fraction const&)
operator==(BigInt const&, BigInt const&)
operator==(SkMatrix const&, SkMatrix const&)
operator==(SkPaint const&, SkPaint const&)
operator==(SkPath const&, SkPath const&)
operator>=(Fraction const&, Fraction const&)
operator>>(SvStream&, SvGlobalName&)
org_libreoffice_chart2_Chart2ToolboxController
org_libreoffice_comp_chart2_sidebar_ChartPanelFactory
org_openoffice_comp_abp_OAddressBookSourcePilot
org_openoffice_comp_comphelper_EnumerableMap
parse_array(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<w_char, std::allocator<w_char> >&, int, int)
parse_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int)
partial_activeBlocks
partial_blockEnd
partial_blockNextPos
partial_blockStart
partial_blockStep
partial_countBlocks
partial_createBlocks
partial_findBlocks
partial_freeBlocks
partial_isVarActive
pasteFromClip(ScDocument*, ScRange const&, ScDocument*)
pasteOneCellFromClip(ScDocument*, ScRange const&, ScDocument*, InsertDeleteFlags)
performiteration
perturb_bounds
pgtls_close
pgtls_get_peer_certificate_hash
pgtls_init
pgtls_init_library
pgtls_open_client
pgtls_read
pgtls_read_pending
pgtls_verify_peer_name_matches_certificate_guts
pgtls_write
phonet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, phonetable&)
popPackedVector
pop_BB
pop_basis
posmat
post_BB
post_MIPOBJ
postprocess
postsolve
pre_BB
pre_MIPOBJ
prepareMDO
prepare_GUB
preprocess
presolve
prevActiveLink
prevInactiveLink
primloop
printFormula(ScDocument*, short, int, short, char const*)
printRange(ScDocument*, ScRange const&, char const*, bool)
printRange(ScDocument*, ScRange const&, rtl::OString const&, bool)
print_L0
print_constraints
print_debugdump
print_duals
print_indent
print_lp
print_objective
print_scales
print_solution
print_str
print_tableau
printfPQExpBuffer
printmatSQ
printmatUT
printvec
privateSnippetExecutor
probe_BB
prod_Ax
prod_xA
prod_xA2
psp::JobData::constructFromStreamBuffer(void const*, unsigned int, psp::JobData&)
psp::JobData::getStreamBuffer(void*&, unsigned int&)
psp::JobData::resolveDefaultBackend()
psp::JobData::setCollate(bool)
psp::JobData::setDefaultBackend(bool)
psp::JobData::setPaper(int, int)
psp::JobData::setPaperBin(int)
psp::PrintFontManager::PrintFontManager()
psp::PrintFontManager::Substitute(vcl::font::FontSelectPattern&, rtl::OUString&)
psp::PrintFontManager::addFontFile(rtl::OUString const&)
psp::PrintFontManager::addFontconfigDir(rtl::OString const&)
psp::PrintFontManager::analyzeFontFile(int, rtl::OString const&, char const*) const
psp::PrintFontManager::analyzeSfntFamilyName(void const*, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
psp::PrintFontManager::analyzeSfntFile(psp::PrintFontManager::PrintFont&) const
psp::PrintFontManager::convertSfntName(void*)
psp::PrintFontManager::countFontconfigFonts(std::unordered_map<rtl::OString, int, std::hash<rtl::OString>, std::equal_to<rtl::OString>, std::allocator<std::pair<rtl::OString const, int> > >&)
psp::PrintFontManager::createFontSubset(FontSubsetInfo&, int, rtl::OUString const&, unsigned short const*, unsigned char const*, int*, int)
psp::PrintFontManager::deinitFontconfig()
psp::PrintFontManager::fillPrintFontInfo(psp::PrintFontManager::PrintFont const&, psp::FastPrintFontInfo&)
psp::PrintFontManager::fillPrintFontInfo(psp::PrintFontManager::PrintFont&, psp::PrintFontInfo&) const
psp::PrintFontManager::findFontFileID(int, rtl::OString const&, int, int) const
psp::PrintFontManager::findFontFileIDs(int, rtl::OString const&) const
psp::PrintFontManager::getDirectory(int) const
psp::PrintFontManager::getDirectoryAtom(rtl::OString const&)
psp::PrintFontManager::getFontAscend(int)
psp::PrintFontManager::getFontBoundingBox(int, int&, int&, int&, int&)
psp::PrintFontManager::getFontDescend(int)
psp::PrintFontManager::getFontInfo(int, psp::PrintFontInfo&) const
psp::PrintFontManager::getFontOptions(FontAttributes const&, int)
psp::PrintFontManager::getGlyphWidths(int, bool, std::vector<int, std::allocator<int> >&, std::map<char16_t, unsigned int, std::less<char16_t>, std::allocator<std::pair<char16_t const, unsigned int> > >&)
psp::PrintFontManager::getPSName(int)
psp::PrintFontManager::initFontconfig()
psp::PrintFontManager::initialize()
psp::PrintFontManager::matchFamilyName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
psp::PrintFontManager::~PrintFontManager()
psp::PrinterInfoManager::PrinterInfoManager(psp::PrinterInfoManager::Type)
psp::PrinterInfoManager::checkFeatureToken(rtl::OUString const&, char const*) const
psp::PrinterInfoManager::checkPrintersChanged(bool)
psp::PrinterInfoManager::endSpool(rtl::OUString const&, rtl::OUString const&, _IO_FILE*, psp::JobData const&, bool, rtl::OUString const&)
psp::PrinterInfoManager::initialize()
psp::PrinterInfoManager::release()
psp::PrinterInfoManager::setDefaultPaper(psp::PPDContext&) const
psp::PrinterInfoManager::setupJobContextData(psp::JobData&)
psp::PrinterInfoManager::startSpool(rtl::OUString const&, bool)
psp::PrinterInfoManager::~PrinterInfoManager()
pushPackedVector
push_BB
push_basis
put_abortfunc
put_bb_branchfunc
put_bb_nodefunc
put_logfunc
put_msgfunc
puthash
pyuno::PyThreadAttach::PyThreadAttach(_is*)
pyuno::PyThreadAttach::~PyThreadAttach()
pyuno::Runtime::Runtime()
pyuno::Runtime::Runtime(pyuno::Runtime const&)
pyuno::Runtime::operator=(pyuno::Runtime const&)
pyuno::Runtime::pyIterUnpack(_object*, com::sun::star::uno::Any&) const
pyuno::Runtime::~Runtime()
rand_uniform
randomdens
randomseed
rcfbound_BB
read_LP
read_LP1
read_MPS
read_XLI
read_basis
read_error
read_freeMPS
read_freemps
read_lp
read_lp1
read_lpex
read_mps
read_params
recompute_solution
refactRecent
reg_closeKey(void*)
reg_closeRegistry(void*)
reg_dumpRegistry(void*)
reg_openKey(void*, _rtl_uString*, void**)
reg_openRegistry(_rtl_uString*, void**)
reg_openRootKey(void*, void**)
relationChar
removeLink
remove_ignored_chars(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
remove_ignored_chars_utf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<w_char, std::allocator<w_char> > const&)
rename_var
replaceBasisVar
report
reportdesign::OReportDefinition::OReportDefinition(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
reportdesign::OReportDefinition::OReportDefinition(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>&)
reportdesign::OReportDefinition::WriteThroughComponent(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&, char const*, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
reportdesign::OReportDefinition::WriteThroughComponent(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&, char const*, char const*, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
reportdesign::OReportDefinition::acquire()
reportdesign::OReportDefinition::addCloseListener(com::sun::star::uno::Reference<com::sun::star::util::XCloseListener> const&)
reportdesign::OReportDefinition::addDocumentEventListener(com::sun::star::uno::Reference<com::sun::star::document::XDocumentEventListener> const&)
reportdesign::OReportDefinition::addEventListener(com::sun::star::uno::Reference<com::sun::star::document::XEventListener> const&)
reportdesign::OReportDefinition::addModifyListener(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
reportdesign::OReportDefinition::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
reportdesign::OReportDefinition::addStorageChangeListener(com::sun::star::uno::Reference<com::sun::star::document::XStorageChangeListener> const&)
reportdesign::OReportDefinition::addTitleChangeListener(com::sun::star::uno::Reference<com::sun::star::frame::XTitleChangeListener> const&)
reportdesign::OReportDefinition::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
reportdesign::OReportDefinition::attachResource(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
reportdesign::OReportDefinition::close(unsigned char)
reportdesign::OReportDefinition::connectController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
reportdesign::OReportDefinition::create(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
reportdesign::OReportDefinition::createClone()
reportdesign::OReportDefinition::createInstance(rtl::OUString const&)
reportdesign::OReportDefinition::createInstanceWithArguments(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
reportdesign::OReportDefinition::disableSetModified()
reportdesign::OReportDefinition::disconnectController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
reportdesign::OReportDefinition::dispose()
reportdesign::OReportDefinition::disposing()
reportdesign::OReportDefinition::enableSetModified()
reportdesign::OReportDefinition::fillArgs(utl::MediaDescriptor&)
reportdesign::OReportDefinition::getActiveConnection()
reportdesign::OReportDefinition::getArgs()
reportdesign::OReportDefinition::getAutoGrow()
reportdesign::OReportDefinition::getAvailableMimeTypes()
reportdesign::OReportDefinition::getAvailableServiceNames()
reportdesign::OReportDefinition::getCaption()
reportdesign::OReportDefinition::getCommand()
reportdesign::OReportDefinition::getCommandType()
reportdesign::OReportDefinition::getContext()
reportdesign::OReportDefinition::getControlBorder()
reportdesign::OReportDefinition::getControlBorderColor()
reportdesign::OReportDefinition::getCurrentController()
reportdesign::OReportDefinition::getCurrentSelection()
reportdesign::OReportDefinition::getDataSourceName()
reportdesign::OReportDefinition::getDetail()
reportdesign::OReportDefinition::getDetailFields()
reportdesign::OReportDefinition::getDocumentBaseURL() const
reportdesign::OReportDefinition::getDocumentProperties()
reportdesign::OReportDefinition::getDocumentStorage()
reportdesign::OReportDefinition::getDocumentSubStorage(rtl::OUString const&, int)
reportdesign::OReportDefinition::getDocumentSubStoragesNames()
reportdesign::OReportDefinition::getEmbeddedObjectContainer() const
reportdesign::OReportDefinition::getEscapeProcessing()
reportdesign::OReportDefinition::getEventBroadcaster()
reportdesign::OReportDefinition::getFilter()
reportdesign::OReportDefinition::getFunctions()
reportdesign::OReportDefinition::getGroupKeepTogether()
reportdesign::OReportDefinition::getGroups()
reportdesign::OReportDefinition::getHeight()
reportdesign::OReportDefinition::getIdentifier()
reportdesign::OReportDefinition::getImplementationId()
reportdesign::OReportDefinition::getImplementationName()
reportdesign::OReportDefinition::getImplementationName_Static()
reportdesign::OReportDefinition::getInteractionHandler() const
reportdesign::OReportDefinition::getMapUnit(long)
reportdesign::OReportDefinition::getMasterFields()
reportdesign::OReportDefinition::getMimeType()
reportdesign::OReportDefinition::getName()
reportdesign::OReportDefinition::getNumberFormatSettings()
reportdesign::OReportDefinition::getNumberFormats()
reportdesign::OReportDefinition::getPageFooter()
reportdesign::OReportDefinition::getPageFooterOn()
reportdesign::OReportDefinition::getPageFooterOption()
reportdesign::OReportDefinition::getPageHeader()
reportdesign::OReportDefinition::getPageHeaderOn()
reportdesign::OReportDefinition::getPageHeaderOption()
reportdesign::OReportDefinition::getParent()
reportdesign::OReportDefinition::getPosition()
reportdesign::OReportDefinition::getPositionX()
reportdesign::OReportDefinition::getPositionY()
reportdesign::OReportDefinition::getPreferredVisualRepresentation(long)
reportdesign::OReportDefinition::getPrintRepeatedValues()
reportdesign::OReportDefinition::getPropertySetInfo()
reportdesign::OReportDefinition::getPropertyValue(rtl::OUString const&)
reportdesign::OReportDefinition::getReportFooter()
reportdesign::OReportDefinition::getReportFooterOn()
reportdesign::OReportDefinition::getReportHeader()
reportdesign::OReportDefinition::getReportHeaderOn()
reportdesign::OReportDefinition::getSdrModelFromUnoModel() const
reportdesign::OReportDefinition::getSection()
reportdesign::OReportDefinition::getShapeType()
reportdesign::OReportDefinition::getSize()
reportdesign::OReportDefinition::getSomething(com::sun::star::uno::Sequence<signed char> const&)
reportdesign::OReportDefinition::getStorage() const
reportdesign::OReportDefinition::getStyleFamilies()
reportdesign::OReportDefinition::getSupportedServiceNames()
reportdesign::OReportDefinition::getSupportedServiceNames_Static()
reportdesign::OReportDefinition::getTitle()
reportdesign::OReportDefinition::getTransferData(com::sun::star::datatransfer::DataFlavor const&)
reportdesign::OReportDefinition::getTransferDataFlavors()
reportdesign::OReportDefinition::getTypes()
reportdesign::OReportDefinition::getUIConfigurationManager()
reportdesign::OReportDefinition::getUIConfigurationManager2()
reportdesign::OReportDefinition::getURL()
reportdesign::OReportDefinition::getUndoManager()
reportdesign::OReportDefinition::getUnoTunnelId()
reportdesign::OReportDefinition::getUntitledPrefix()
reportdesign::OReportDefinition::getViewData()
reportdesign::OReportDefinition::getVisualAreaSize(long)
reportdesign::OReportDefinition::getWidth()
reportdesign::OReportDefinition::hasControllersLocked()
reportdesign::OReportDefinition::impl_getTitleHelper_throw()
reportdesign::OReportDefinition::impl_getUntitledHelper_throw()
reportdesign::OReportDefinition::impl_loadFromStorage_nolck_throw(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
reportdesign::OReportDefinition::init()
reportdesign::OReportDefinition::initNew()
reportdesign::OReportDefinition::isDataFlavorSupported(com::sun::star::datatransfer::DataFlavor const&)
reportdesign::OReportDefinition::isEnableSetModified() const
reportdesign::OReportDefinition::isModified()
reportdesign::OReportDefinition::isSetModifiedEnabled()
reportdesign::OReportDefinition::leaseNumber(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
reportdesign::OReportDefinition::load(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
reportdesign::OReportDefinition::loadFromStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
reportdesign::OReportDefinition::lockControllers()
reportdesign::OReportDefinition::notifyDocumentEvent(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XController2> const&, com::sun::star::uno::Any const&)
reportdesign::OReportDefinition::notifyEvent(rtl::OUString const&)
reportdesign::OReportDefinition::queryInterface(com::sun::star::uno::Type const&)
reportdesign::OReportDefinition::release()
reportdesign::OReportDefinition::releaseNumber(int)
reportdesign::OReportDefinition::releaseNumberForComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
reportdesign::OReportDefinition::removeCloseListener(com::sun::star::uno::Reference<com::sun::star::util::XCloseListener> const&)
reportdesign::OReportDefinition::removeDocumentEventListener(com::sun::star::uno::Reference<com::sun::star::document::XDocumentEventListener> const&)
reportdesign::OReportDefinition::removeEventListener(com::sun::star::uno::Reference<com::sun::star::document::XEventListener> const&)
reportdesign::OReportDefinition::removeModifyListener(com::sun::star::uno::Reference<com::sun::star::util::XModifyListener> const&)
reportdesign::OReportDefinition::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
reportdesign::OReportDefinition::removeStorageChangeListener(com::sun::star::uno::Reference<com::sun::star::document::XStorageChangeListener> const&)
reportdesign::OReportDefinition::removeTitleChangeListener(com::sun::star::uno::Reference<com::sun::star::frame::XTitleChangeListener> const&)
reportdesign::OReportDefinition::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
reportdesign::OReportDefinition::setActiveConnection(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
reportdesign::OReportDefinition::setAutoGrow(unsigned char)
reportdesign::OReportDefinition::setCaption(rtl::OUString const&)
reportdesign::OReportDefinition::setCommand(rtl::OUString const&)
reportdesign::OReportDefinition::setCommandType(int)
reportdesign::OReportDefinition::setControlBorder(short)
reportdesign::OReportDefinition::setControlBorderColor(int)
reportdesign::OReportDefinition::setCurrentController(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
reportdesign::OReportDefinition::setDataSourceName(rtl::OUString const&)
reportdesign::OReportDefinition::setDetailFields(com::sun::star::uno::Sequence<rtl::OUString> const&)
reportdesign::OReportDefinition::setEscapeProcessing(unsigned char)
reportdesign::OReportDefinition::setFilter(rtl::OUString const&)
reportdesign::OReportDefinition::setGroupKeepTogether(short)
reportdesign::OReportDefinition::setHeight(int)
reportdesign::OReportDefinition::setIdentifier(rtl::OUString const&)
reportdesign::OReportDefinition::setMasterFields(com::sun::star::uno::Sequence<rtl::OUString> const&)
reportdesign::OReportDefinition::setMimeType(rtl::OUString const&)
reportdesign::OReportDefinition::setModified(unsigned char)
reportdesign::OReportDefinition::setName(rtl::OUString const&)
reportdesign::OReportDefinition::setPageFooterOn(unsigned char)
reportdesign::OReportDefinition::setPageFooterOption(short)
reportdesign::OReportDefinition::setPageHeaderOn(unsigned char)
reportdesign::OReportDefinition::setPageHeaderOption(short)
reportdesign::OReportDefinition::setParent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
reportdesign::OReportDefinition::setPosition(com::sun::star::awt::Point const&)
reportdesign::OReportDefinition::setPositionX(int)
reportdesign::OReportDefinition::setPositionY(int)
reportdesign::OReportDefinition::setPrintRepeatedValues(unsigned char)
reportdesign::OReportDefinition::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
reportdesign::OReportDefinition::setReportFooterOn(unsigned char)
reportdesign::OReportDefinition::setReportHeaderOn(unsigned char)
reportdesign::OReportDefinition::setSection(rtl::OUString const&, bool, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::report::XSection>&)
reportdesign::OReportDefinition::setSize(com::sun::star::awt::Size const&)
reportdesign::OReportDefinition::setTitle(rtl::OUString const&)
reportdesign::OReportDefinition::setViewData(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&)
reportdesign::OReportDefinition::setVisualAreaSize(long, com::sun::star::awt::Size const&)
reportdesign::OReportDefinition::setWidth(int)
reportdesign::OReportDefinition::storeToStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
reportdesign::OReportDefinition::supportsService(rtl::OUString const&)
reportdesign::OReportDefinition::switchToStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
reportdesign::OReportDefinition::unlockControllers()
reportdesign::OReportDefinition::~OReportDefinition()
reportdesign::OReportVisitor::OReportVisitor(reportdesign::ITraverseReport*)
resetPQExpBuffer
reset_basis
reset_params
resizePricer
resize_SOSgroup
resize_lp
restartPricer
restoreINT
restoreUndoLadder
restore_basis
reverseword(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
reverseword_utf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
rhs_store
roundPower2
roundToPrecision
roundVector
row_decimals
row_intstats
rowdual
rowprim
rptui::ConditionalExpression::ConditionalExpression(char const*)
rptui::DlgEdHint::DlgEdHint(rptui::DlgEdHintKind)
rptui::DlgEdHint::~DlgEdHint()
rptui::OCommentUndoAction::OCommentUndoAction(SdrModel&, TranslateId)
rptui::OCommentUndoAction::Redo()
rptui::OCommentUndoAction::Undo()
rptui::OCommentUndoAction::~OCommentUndoAction()
rptui::OCustomShape::EndCreate(SdrDragStat&, SdrCreateCmd)
rptui::OCustomShape::GetImplPage() const
rptui::OCustomShape::GetObjIdentifier() const
rptui::OCustomShape::GetObjInventor() const
rptui::OCustomShape::NbcMove(Size const&)
rptui::OCustomShape::NbcResize(Point const&, Fraction const&, Fraction const&)
rptui::OCustomShape::NbcSetLogicRect(tools::Rectangle const&)
rptui::OCustomShape::OCustomShape(SdrModel&, com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OCustomShape::OCustomShape(SdrModel&, rtl::OUString const&)
rptui::OCustomShape::getAwtComponent()
rptui::OCustomShape::getUnoShape()
rptui::OCustomShape::impl_setUnoShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
rptui::OCustomShape::~OCustomShape()
rptui::OObjectBase::OObjectBase(com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OObjectBase::OObjectBase(rtl::OUString const&)
rptui::OObjectBase::SetPropsFromRect(tools::Rectangle const&)
rptui::OObjectBase::_propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
rptui::OObjectBase::createObject(SdrModel&, com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OObjectBase::ensureSdrObjectOwnership(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
rptui::OObjectBase::getAwtComponent()
rptui::OObjectBase::getObjectType(com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OObjectBase::getSection() const
rptui::OObjectBase::getUnoShapeOf(SdrObject&)
rptui::OObjectBase::supportsService(rtl::OUString const&) const
rptui::OObjectBase::~OObjectBase()
rptui::OOle2Obj::CloneSdrObject(SdrModel&) const
rptui::OOle2Obj::EndCreate(SdrDragStat&, SdrCreateCmd)
rptui::OOle2Obj::GetImplPage() const
rptui::OOle2Obj::GetObjIdentifier() const
rptui::OOle2Obj::GetObjInventor() const
rptui::OOle2Obj::NbcMove(Size const&)
rptui::OOle2Obj::NbcResize(Point const&, Fraction const&, Fraction const&)
rptui::OOle2Obj::NbcSetLogicRect(tools::Rectangle const&)
rptui::OOle2Obj::OOle2Obj(SdrModel&, com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&, SdrObjKind)
rptui::OOle2Obj::OOle2Obj(SdrModel&, rptui::OOle2Obj const&)
rptui::OOle2Obj::OOle2Obj(SdrModel&, rtl::OUString const&, SdrObjKind)
rptui::OOle2Obj::getAwtComponent()
rptui::OOle2Obj::getUnoShape()
rptui::OOle2Obj::impl_createDataProvider_nothrow(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
rptui::OOle2Obj::impl_setUnoShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
rptui::OOle2Obj::initializeOle()
rptui::OOle2Obj::~OOle2Obj()
rptui::OPropertyMediator::OPropertyMediator(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, std::map<rtl::OUString, std::pair<rtl::OUString, std::shared_ptr<rptui::AnyConverter> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::pair<rtl::OUString, std::shared_ptr<rptui::AnyConverter> > > > >&&, bool)
rptui::OPropertyMediator::disposing()
rptui::OPropertyMediator::disposing(com::sun::star::lang::EventObject const&)
rptui::OPropertyMediator::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
rptui::OPropertyMediator::startListening()
rptui::OPropertyMediator::stopListening()
rptui::OPropertyMediator::~OPropertyMediator()
rptui::OReportModel::AllocPage(bool)
rptui::OReportModel::GetPageNumType() const
rptui::OReportModel::OReportModel(reportdesign::OReportDefinition*)
rptui::OReportModel::RemovePage(unsigned short)
rptui::OReportModel::SetChanged(bool)
rptui::OReportModel::SetModified(bool)
rptui::OReportModel::createNewPage(com::sun::star::uno::Reference<com::sun::star::report::XSection> const&)
rptui::OReportModel::createShape(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>&, int)
rptui::OReportModel::createUnoModel()
rptui::OReportModel::getReportDefinition() const
rptui::OReportModel::~OReportModel()
rptui::OReportPage::CloneSdrPage(SdrModel&) const
rptui::OReportPage::NbcInsertObject(SdrObject*, unsigned long)
rptui::OReportPage::OReportPage(rptui::OReportModel&, com::sun::star::uno::Reference<com::sun::star::report::XSection> const&)
rptui::OReportPage::createUnoPage()
rptui::OReportPage::insertObject(com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OReportPage::removeSdrObject(com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&)
rptui::OReportPage::removeTempObject(SdrObject const*)
rptui::OReportPage::~OReportPage()
rptui::OUnoObject::CloneSdrObject(SdrModel&) const
rptui::OUnoObject::EndCreate(SdrDragStat&, SdrCreateCmd)
rptui::OUnoObject::GetImplPage() const
rptui::OUnoObject::GetObjIdentifier() const
rptui::OUnoObject::GetObjInventor() const
rptui::OUnoObject::NbcMove(Size const&)
rptui::OUnoObject::NbcResize(Point const&, Fraction const&, Fraction const&)
rptui::OUnoObject::NbcSetLogicRect(tools::Rectangle const&)
rptui::OUnoObject::OUnoObject(SdrModel&, com::sun::star::uno::Reference<com::sun::star::report::XReportComponent> const&, rtl::OUString const&, SdrObjKind)
rptui::OUnoObject::OUnoObject(SdrModel&, rptui::OUnoObject const&)
rptui::OUnoObject::OUnoObject(SdrModel&, rtl::OUString const&, rtl::OUString const&, SdrObjKind)
rptui::OUnoObject::_propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
rptui::OUnoObject::getAwtComponent()
rptui::OUnoObject::impl_initializeModel_nothrow()
rptui::OUnoObject::impl_setUnoShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
rptui::OUnoObject::~OUnoObject()
rptui::OXUndoEnvironment::AddSection(com::sun::star::uno::Reference<com::sun::star::report::XSection> const&)
rptui::OXUndoEnvironment::Clear(rptui::OXUndoEnvironment::Accessor const&)
rptui::OXUndoEnvironment::IsLocked() const
rptui::OXUndoEnvironment::IsUndoMode() const
rptui::OXUndoEnvironment::ModeChanged()
rptui::OXUndoEnvironment::Notify(SfxBroadcaster&, SfxHint const&)
rptui::OXUndoEnvironment::OXUndoEnvironment(rptui::OReportModel&)
rptui::OXUndoEnvironment::RemoveSection(com::sun::star::uno::Reference<com::sun::star::report::XSection> const&)
rptui::OXUndoEnvironment::RemoveSection(rptui::OReportPage const*)
rptui::OXUndoEnvironment::disposing(com::sun::star::lang::EventObject const&)
rptui::OXUndoEnvironment::elementInserted(com::sun::star::container::ContainerEvent const&)
rptui::OXUndoEnvironment::elementRemoved(com::sun::star::container::ContainerEvent const&)
rptui::OXUndoEnvironment::elementReplaced(com::sun::star::container::ContainerEvent const&)
rptui::OXUndoEnvironment::getSection(com::sun::star::uno::Reference<com::sun::star::container::XChild> const&) const
rptui::OXUndoEnvironment::implSetModified()
rptui::OXUndoEnvironment::modified(com::sun::star::lang::EventObject const&)
rptui::OXUndoEnvironment::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
rptui::OXUndoEnvironment::switchListening(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, bool)
rptui::OXUndoEnvironment::switchListening(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, bool)
rptui::OXUndoEnvironment::~OXUndoEnvironment()
rptui::ReportFormula::ReportFormula(rptui::ReportFormula::BindType, rtl::OUString const&)
rptui::ReportFormula::ReportFormula(rtl::OUString const&)
rptui::ReportFormula::~ReportFormula()
rptui::getPropertyNameMap(unsigned short)
run_BB
sal_detail_deinitialize@@PRIVATE_1.1
sal_detail_initialize@@PRIVATE_1.1
sal_detail_log@@PRIVATE_1.2
sal_detail_logFormat@@PRIVATE_1.2
sal_detail_log_report@@PRIVATE_1.3
sal_detail_set_log_selector@@PRIVATE_1.6
sal_getFullTextEncodingData
sax::Converter::GetConversionFactor(rtl::OUStringBuffer&, short, short)
sax::Converter::GetUnitFromString(std::basic_string_view<char, std::char_traits<char> >, short)
sax::Converter::GetUnitFromString(std::basic_string_view<char16_t, std::char_traits<char16_t> >, short)
sax::Converter::convertAngle(rtl::OUStringBuffer&, short, SvtSaveOptions::ODFSaneDefaultVersion)
sax::Converter::convertAngle(short&, std::basic_string_view<char, std::char_traits<char> >, bool)
sax::Converter::convertAngle(short&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
sax::Converter::convertColor(int&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::convertDate(rtl::OUStringBuffer&, com::sun::star::util::Date const&, short const*)
sax::Converter::convertDuration(double&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::convertMeasure(int&, std::basic_string_view<char, std::char_traits<char> >, short, int, int)
sax::Converter::convertMeasurePx(int&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::convertMeasurePx(int&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sax::Converter::convertMeasurePx(rtl::OUStringBuffer&, int)
sax::Converter::convertNumber64(long&, std::basic_string_view<char, std::char_traits<char> >, long, long)
sax::Converter::convertNumber64(long&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, long, long)
sax::Converter::convertPercent(int&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::indexOfComma(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int)
sax::Converter::parseDateOrDateTime(com::sun::star::util::Date*, com::sun::star::util::DateTime&, bool&, std::optional<short>*, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::parseDateOrDateTime(com::sun::star::util::Date*, com::sun::star::util::DateTime&, bool&, std::optional<short>*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sax::Converter::parseDateTime(com::sun::star::util::DateTime&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::parseTimeOrDateTime(com::sun::star::util::DateTime&, std::basic_string_view<char, std::char_traits<char> >)
sax_fastparser::FastAttributeList::FastAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
sax_fastparser::FastAttributeList::FastAttributeList(sax_fastparser::FastTokenHandlerBase*)
sax_fastparser::FastAttributeList::add(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
sax_fastparser::FastAttributeList::add(sax_fastparser::FastAttributeList const&)
sax_fastparser::FastAttributeList::createClone()
sax_fastparser::FastAttributeList::getFastAttributes()
sax_fastparser::FastAttributeList::getOptionalValue(int)
sax_fastparser::FastAttributeList::getOptionalValueToken(int, int)
sax_fastparser::FastAttributeList::getUnknownAttributes()
sax_fastparser::FastAttributeList::getValue(int)
sax_fastparser::FastAttributeList::getValueToken(int)
sax_fastparser::FastAttributeList::hasAttribute(int)
sax_fastparser::FastAttributeList::~FastAttributeList()
sax_fastparser::FastSaxParser::FastSaxParser()
sax_fastparser::FastSaxParser::getImplementationName()
sax_fastparser::FastSaxParser::getNamespaceURL(rtl::OUString const&)
sax_fastparser::FastSaxParser::getSupportedServiceNames()
sax_fastparser::FastSaxParser::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
sax_fastparser::FastSaxParser::parseStream(com::sun::star::xml::sax::InputSource const&)
sax_fastparser::FastSaxParser::registerNamespace(rtl::OUString const&, int)
sax_fastparser::FastSaxParser::setCustomEntityNames(com::sun::star::uno::Sequence<com::sun::star::beans::Pair<rtl::OUString, rtl::OUString> > const&)
sax_fastparser::FastSaxParser::setEntityResolver(com::sun::star::uno::Reference<com::sun::star::xml::sax::XEntityResolver> const&)
sax_fastparser::FastSaxParser::setErrorHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XErrorHandler> const&)
sax_fastparser::FastSaxParser::setFastDocumentHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastDocumentHandler> const&)
sax_fastparser::FastSaxParser::setLocale(com::sun::star::lang::Locale const&)
sax_fastparser::FastSaxParser::setNamespaceHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastNamespaceHandler> const&)
sax_fastparser::FastSaxParser::setTokenHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastTokenHandler> const&)
sax_fastparser::FastSaxParser::supportsService(rtl::OUString const&)
sax_fastparser::FastSaxParser::~FastSaxParser()
sax_fastparser::FastSerializerHelper::FastSerializerHelper(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, bool)
sax_fastparser::FastSerializerHelper::~FastSerializerHelper()
sax_fastparser::FastTokenHandlerBase::~FastTokenHandlerBase()
sc::AggregateFunction::AggregateFunction(std::set<short, std::less<short>, std::allocator<short> >&&, sc::AGGREGATE_FUNCTION)
sc::AggregateFunction::getAggregateType() const
sc::AggregateFunction::getColumns() const
sc::AggregateFunction::getTransformationType() const
sc::AutoCalcSwitch::AutoCalcSwitch(ScDocument&, bool)
sc::AutoCalcSwitch::~AutoCalcSwitch()
sc::ColRowSpan::ColRowSpan(int, int)
sc::ColumnRemoveTransformation::ColumnRemoveTransformation(std::set<short, std::less<short>, std::allocator<short> >&&)
sc::ColumnRemoveTransformation::getColumns() const
sc::ColumnRemoveTransformation::getTransformationType() const
sc::ColumnRemoveTransformation::~ColumnRemoveTransformation()
sc::CompileFormulaContext::CompileFormulaContext(ScDocument&)
sc::CompileFormulaContext::CompileFormulaContext(ScDocument&, formula::FormulaGrammar::Grammar)
sc::CompileFormulaContext::setGrammar(formula::FormulaGrammar::Grammar)
sc::CompileFormulaContext::updateTabNames()
sc::CopyFromClipContext::CopyFromClipContext(ScDocument&, ScDocument*, ScDocument*, InsertDeleteFlags, bool, bool)
sc::CopyFromClipContext::getClipDoc()
sc::CopyFromClipContext::getCondFormatList()
sc::CopyFromClipContext::getDeleteFlag() const
sc::CopyFromClipContext::getDestRange() const
sc::CopyFromClipContext::getInsertFlag() const
sc::CopyFromClipContext::getSingleCell(unsigned long)
sc::CopyFromClipContext::getSingleCellAttr(unsigned long)
sc::CopyFromClipContext::getSingleCellNote(unsigned long) const
sc::CopyFromClipContext::getSingleCellPattern(unsigned long) const
sc::CopyFromClipContext::getTabEnd() const
sc::CopyFromClipContext::getTabStart() const
sc::CopyFromClipContext::getUndoDoc()
sc::CopyFromClipContext::isAsLink() const
sc::CopyFromClipContext::isCloneNotes() const
sc::CopyFromClipContext::isDateCell(ScColumn const&, int) const
sc::CopyFromClipContext::isSkipAttrForEmptyCells() const
sc::CopyFromClipContext::isTableProtected() const
sc::CopyFromClipContext::setCondFormatList(ScConditionalFormatList*)
sc::CopyFromClipContext::setDeleteFlag(InsertDeleteFlags)
sc::CopyFromClipContext::setDestRange(short, int, short, int)
sc::CopyFromClipContext::setSingleCell(ScAddress const&, ScColumn const&)
sc::CopyFromClipContext::setSingleCellColumnSize(unsigned long)
sc::CopyFromClipContext::setSingleCellNote(unsigned long, ScPostIt const*)
sc::CopyFromClipContext::setSingleCellPattern(unsigned long, ScPatternAttr const*)
sc::CopyFromClipContext::setTabRange(short, short)
sc::CopyFromClipContext::setTableProtected(bool)
sc::CopyFromClipContext::~CopyFromClipContext()
sc::DataTransformation::getLastRow(ScDocument const&, short)
sc::DataTransformation::~DataTransformation()
sc::DateTimeTransformation::DateTimeTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::DATETIME_TRANSFORMATION_TYPE)
sc::DateTimeTransformation::getColumn() const
sc::DateTimeTransformation::getDateTimeTransformationType() const
sc::DateTimeTransformation::getTransformationType() const
sc::ExternalDataMapper::ExternalDataMapper(ScDocument&)
sc::ExternalDataMapper::getDataSources() const
sc::ExternalDataMapper::~ExternalDataMapper()
sc::ExternalDataSource::AddDataTransformation(std::shared_ptr<sc::DataTransformation> const&)
sc::ExternalDataSource::ExternalDataSource(rtl::OUString const&, rtl::OUString const&, ScDocument*)
sc::ExternalDataSource::getDBManager()
sc::ExternalDataSource::getDBName() const
sc::ExternalDataSource::getDataTransformation() const
sc::ExternalDataSource::getID() const
sc::ExternalDataSource::getProvider() const
sc::ExternalDataSource::getURL() const
sc::ExternalDataSource::getUpdateFrequency()
sc::ExternalDataSource::getXMLImportParam() const
sc::ExternalDataSource::setProvider(rtl::OUString const&)
sc::ExternalDataSource::setURL(rtl::OUString const&)
sc::FormulaGroupInterpreter::MergeCalcConfig(ScDocument const&)
sc::FormulaGroupInterpreter::disableOpenCL_UnitTestsOnly()
sc::FormulaGroupInterpreter::fillOpenCLInfo(std::vector<OpenCLPlatformInfo, std::allocator<OpenCLPlatformInfo> >&)
sc::FormulaGroupInterpreter::getOpenCLDeviceInfo(int&, int&)
sc::FormulaGroupInterpreter::getStatic()
sc::MergeColumnTransformation::MergeColumnTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, rtl::OUString const&)
sc::MergeColumnTransformation::getColumns() const
sc::MergeColumnTransformation::getMergeString() const
sc::MergeColumnTransformation::getTransformationType() const
sc::NumFmtUtil::isLatinScript(unsigned long, ScDocument&)
sc::NumberTransformation::NumberTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::NUMBER_TRANSFORM_TYPE)
sc::NumberTransformation::NumberTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::NUMBER_TRANSFORM_TYPE, int)
sc::NumberTransformation::getColumn() const
sc::NumberTransformation::getNumberTransformationType() const
sc::NumberTransformation::getPrecision() const
sc::NumberTransformation::getTransformationType() const
sc::RefUpdateDeleteTabContext::RefUpdateDeleteTabContext(ScDocument&, short, short)
sc::RefUpdateInsertTabContext::RefUpdateInsertTabContext(ScDocument&, short, short)
sc::ReplaceNullTransformation::ReplaceNullTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, rtl::OUString const&)
sc::ReplaceNullTransformation::getColumn() const
sc::ReplaceNullTransformation::getReplaceString() const
sc::ReplaceNullTransformation::getTransformationType() const
sc::RowHeightContext::RowHeightContext(int, double, double, Fraction const&, Fraction const&, OutputDevice*)
sc::RowHeightContext::setForceAutoSize(bool)
sc::RowHeightContext::~RowHeightContext()
sc::SplitColumnTransformation::SplitColumnTransformation(short, char16_t)
sc::SplitColumnTransformation::getColumn() const
sc::SplitColumnTransformation::getSeparator() const
sc::SplitColumnTransformation::getTransformationType() const
sc::TextTransformation::TextTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::TEXT_TRANSFORM_TYPE)
sc::TextTransformation::getColumns() const
sc::TextTransformation::getTextTransformationType() const
sc::TextTransformation::getTransformationType() const
sc::TokenStringContext::TokenStringContext(ScDocument const&, formula::FormulaGrammar::Grammar)
sc::UndoSwitch::UndoSwitch(ScDocument&, bool)
sc::UndoSwitch::~UndoSwitch()
scale
scaleCR
scale_columns
scale_rows
scale_updatecolumns
scale_updaterows
scaled_ceil
scaled_floor
scaled_mat
scaled_value
scan_lineFIXED
scan_lineFREE
scram_ClientKey
scram_H
scram_HMAC_final
scram_HMAC_init
scram_HMAC_update
scram_SaltedPassword
scram_ServerKey
scram_build_secret
scripting_StringResourcePersistenceImpl_implementation
sd::CustomAnimationEffect::CustomAnimationEffect(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
sd::CustomAnimationEffect::~CustomAnimationEffect()
sd::DrawDocShell::Activate(bool)
sd::DrawDocShell::ApplySlotFilter() const
sd::DrawDocShell::CancelSearching()
sd::DrawDocShell::CheckPageName(weld::Window*, rtl::OUString&)
sd::DrawDocShell::ClearUndoBuffer()
sd::DrawDocShell::Connect(sd::ViewShell*)
sd::DrawDocShell::Construct(bool)
sd::DrawDocShell::ConvertFrom(SfxMedium&)
sd::DrawDocShell::ConvertTo(SfxMedium&)
sd::DrawDocShell::CreateDocumentInfoDialog(weld::Window*, SfxItemSet const&)
sd::DrawDocShell::Deactivate(bool)
sd::DrawDocShell::Disconnect(sd::ViewShell const*)
sd::DrawDocShell::Draw(OutputDevice*, JobSetup const&, unsigned short)
sd::DrawDocShell::DrawDocShell(SdDrawDocument*, SfxObjectCreateMode, bool, DocumentType)
sd::DrawDocShell::DrawDocShell(SfxModelFlags, bool, DocumentType)
sd::DrawDocShell::DrawDocShell(SfxObjectCreateMode, bool, DocumentType)
sd::DrawDocShell::Execute(SfxRequest&)
sd::DrawDocShell::Factory()
sd::DrawDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
sd::DrawDocShell::GetDocumentPrinter()
sd::DrawDocShell::GetDocumentRefDev()
sd::DrawDocShell::GetFrameView()
sd::DrawDocShell::GetInterface() const
sd::DrawDocShell::GetPrinter(bool)
sd::DrawDocShell::GetState(SfxItemSet&)
sd::DrawDocShell::GetStaticInterface()
sd::DrawDocShell::GetStyleSheetPool()
sd::DrawDocShell::GetUndoManager()
sd::DrawDocShell::GetVisArea(unsigned short) const
sd::DrawDocShell::GotoBookmark(rtl::OUString const&)
sd::DrawDocShell::ImportFrom(SfxMedium&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&)
sd::DrawDocShell::InitInterface_Impl()
sd::DrawDocShell::InitNew(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
sd::DrawDocShell::IsNewPageNameValid(rtl::OUString&, bool)
sd::DrawDocShell::IsPageNameUnique(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sd::DrawDocShell::Load(SfxMedium&)
sd::DrawDocShell::LoadFrom(SfxMedium&)
sd::DrawDocShell::OnDocumentPrinterChanged(Printer*)
sd::DrawDocShell::OpenBookmark(rtl::OUString const&)
sd::DrawDocShell::RegisterInterface(SfxModule const*)
sd::DrawDocShell::Save()
sd::DrawDocShell::SaveAs(SfxMedium&)
sd::DrawDocShell::SaveAsOwnFormat(SfxMedium&)
sd::DrawDocShell::SaveCompleted(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
sd::DrawDocShell::SetModified(bool)
sd::DrawDocShell::SetPrinter(SfxPrinter*)
sd::DrawDocShell::UpdateFontList()
sd::DrawDocShell::UpdateRefDevice()
sd::DrawDocShell::UpdateTablePointers()
sd::DrawDocShell::setEditMode(sd::DrawViewShell*, bool)
sd::DrawDocShell::~DrawDocShell()
sd::DrawView::BlockPageOrderChangedHint(bool)
sd::DrawView::CompleteRedraw(OutputDevice*, vcl::Region const&, sdr::contact::ViewObjectContactRedirector*)
sd::DrawView::DeleteMarked()
sd::DrawView::DrawView(sd::DrawDocShell*, OutputDevice*, sd::DrawViewShell*)
sd::DrawView::HideSdrPage()
sd::DrawView::MakeVisible(tools::Rectangle const&, vcl::Window&)
sd::DrawView::MarkListHasChanged()
sd::DrawView::ModelHasChanged()
sd::DrawView::Notify(SfxBroadcaster&, SfxHint const&)
sd::DrawView::SetAttributes(SfxItemSet const&, bool, bool, bool)
sd::DrawView::SetMasterAttributes(SdrObject*, SdPage const&, SfxItemSet, SfxStyleSheetBasePool*, bool&, bool, bool)
sd::DrawView::SetStyleSheet(SfxStyleSheet*, bool)
sd::DrawView::~DrawView()
sd::FrameView::Connect()
sd::FrameView::Disconnect()
sd::FrameView::FrameView(SdDrawDocument*, sd::FrameView*)
sd::FrameView::GetViewShEditMode() const
sd::FrameView::ReadUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
sd::FrameView::SetIsNavigatorShowingAllShapes(bool)
sd::FrameView::SetPreviousViewShellType(sd::ViewShell::ShellType)
sd::FrameView::SetViewShEditModeOnLoad(EditMode)
sd::FrameView::SetViewShellTypeOnLoad(sd::ViewShell::ShellType)
sd::FrameView::Update(SdOptions const*)
sd::FrameView::WriteUserDataSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
sd::FrameView::~FrameView()
sd::GraphicDocShell::Factory()
sd::GraphicDocShell::GetInterface() const
sd::GraphicDocShell::GetStaticInterface()
sd::GraphicDocShell::GraphicDocShell(SfxModelFlags)
sd::GraphicDocShell::GraphicDocShell(SfxObjectCreateMode)
sd::GraphicDocShell::InitInterface_Impl()
sd::GraphicDocShell::RegisterInterface(SfxModule const*)
sd::GraphicDocShell::~GraphicDocShell()
sd::HeaderFooterSettings::HeaderFooterSettings()
sd::MainSequence::MainSequence()
sd::MainSequence::MainSequence(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
sd::MainSequence::createInteractiveSequence(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
sd::MainSequence::createMainSequence()
sd::MainSequence::disposeShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
sd::MainSequence::disposeTextRange(com::sun::star::uno::Any const&)
sd::MainSequence::findEffect(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&) const
sd::MainSequence::getEffectFromOffset(int) const
sd::MainSequence::getOffsetFromEffect(std::shared_ptr<sd::CustomAnimationEffect> const&) const
sd::MainSequence::getRootNode()
sd::MainSequence::hasEffect(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
sd::MainSequence::implRebuild()
sd::MainSequence::init()
sd::MainSequence::insertTextRange(com::sun::star::uno::Any const&)
sd::MainSequence::lockRebuilds()
sd::MainSequence::notify_change()
sd::MainSequence::onTextChanged(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
sd::MainSequence::reset()
sd::MainSequence::reset(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
sd::MainSequence::setTrigger(std::shared_ptr<sd::CustomAnimationEffect> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
sd::MainSequence::startRebuildTimer()
sd::MainSequence::startRecreateTimer()
sd::MainSequence::unlockRebuilds()
sd::MainSequence::~MainSequence()
sd::ViewShell::GetFrameWeld() const
sdr::PolyPolygonEditor::GetRelativePolyPoint(basegfx::B2DPolyPolygon const&, unsigned int, unsigned int&, unsigned int&)
sdr::PolyPolygonEditor::PolyPolygonEditor(basegfx::B2DPolyPolygon const&)
sdr::SelectionController::ApplyFormatPaintBrush(SfxItemSet&, bool, bool)
sdr::SelectionController::ChangeFontSize(bool, FontList const*)
sdr::SelectionController::DeleteMarked()
sdr::SelectionController::Execute(SfxRequest&)
sdr::SelectionController::GetAttributes(SfxItemSet&, bool) const
sdr::SelectionController::GetMarkedSdrObjClone(SdrModel&)
sdr::SelectionController::GetState(SfxItemSet&)
sdr::SelectionController::GetStyleSheet(SfxStyleSheet*&) const
sdr::SelectionController::PasteObjModel(SdrModel const&)
sdr::SelectionController::SetAttributes(SfxItemSet const&, bool)
sdr::SelectionController::SetStyleSheet(SfxStyleSheet*, bool)
sdr::SelectionController::getSelectedCells(sdr::table::CellPos&, sdr::table::CellPos&)
sdr::SelectionController::hasSelectedCells() const
sdr::SelectionController::onKeyInput(KeyEvent const&, vcl::Window*)
sdr::SelectionController::onMouseButtonDown(MouseEvent const&, vcl::Window*)
sdr::SelectionController::onMouseButtonUp(MouseEvent const&, vcl::Window*)
sdr::SelectionController::onMouseMove(MouseEvent const&, vcl::Window*)
sdr::SelectionController::onSelectAll()
sdr::SelectionController::onSelectionHasChanged()
sdr::SelectionController::setCursorLogicPosition(Point const&, bool)
sdr::animation::Event::~Event()
sdr::animation::Scheduler::Invoke()
sdr::animation::Scheduler::~Scheduler()
sdr::contact::DisplayInfo::ClearGhostedDrawMode()
sdr::contact::DisplayInfo::DisplayInfo()
sdr::contact::DisplayInfo::SetControlLayerProcessingActive(bool)
sdr::contact::DisplayInfo::SetGhostedDrawMode()
sdr::contact::DisplayInfo::SetPageProcessingActive(bool)
sdr::contact::DisplayInfo::SetProcessLayers(SdrLayerIDSet const&)
sdr::contact::DisplayInfo::SetRedrawArea(vcl::Region const&)
sdr::contact::DisplayInfo::SetSubContentActive(bool)
sdr::contact::ObjectContact::AddViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ObjectContact::AreGluePointsVisible() const
sdr::contact::ObjectContact::DoVisualizeEnteredGroup() const
sdr::contact::ObjectContact::InvalidatePartOfView(basegfx::B2DRange const&) const
sdr::contact::ObjectContact::IsGraphicAnimationAllowed() const
sdr::contact::ObjectContact::IsTextAnimationAllowed() const
sdr::contact::ObjectContact::ObjectContact()
sdr::contact::ObjectContact::PrepareProcessDisplay()
sdr::contact::ObjectContact::ProcessDisplay(sdr::contact::DisplayInfo&)
sdr::contact::ObjectContact::RemoveViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ObjectContact::SetViewObjectContactRedirector(sdr::contact::ViewObjectContactRedirector*)
sdr::contact::ObjectContact::TryToGetOutputDevice() const
sdr::contact::ObjectContact::TryToGetSdrPageView() const
sdr::contact::ObjectContact::calculateGridOffsetForViewOjectContact(basegfx::B2DVector&, sdr::contact::ViewObjectContact const&) const
sdr::contact::ObjectContact::getActiveViewContact() const
sdr::contact::ObjectContact::isDrawModeGray() const
sdr::contact::ObjectContact::isDrawModeHighContrast() const
sdr::contact::ObjectContact::isOutputToPDFFile() const
sdr::contact::ObjectContact::isOutputToPrinter() const
sdr::contact::ObjectContact::isOutputToRecordingMetaFile() const
sdr::contact::ObjectContact::setLazyInvalidate(sdr::contact::ViewObjectContact&)
sdr::contact::ObjectContact::supportsGridOffsets() const
sdr::contact::ObjectContact::~ObjectContact()
sdr::contact::ObjectContactOfObjListPainter::GetPaintObjectCount() const
sdr::contact::ObjectContactOfObjListPainter::GetPaintObjectViewContact(unsigned int)
sdr::contact::ObjectContactOfObjListPainter::ObjectContactOfObjListPainter(OutputDevice&, std::vector<SdrObject*, std::allocator<SdrObject*> >&&, SdrPage const*)
sdr::contact::ObjectContactOfObjListPainter::ProcessDisplay(sdr::contact::DisplayInfo&)
sdr::contact::ObjectContactOfObjListPainter::TryToGetOutputDevice() const
sdr::contact::ObjectContactOfObjListPainter::isOutputToPDFFile() const
sdr::contact::ObjectContactOfObjListPainter::isOutputToRecordingMetaFile() const
sdr::contact::ObjectContactOfObjListPainter::~ObjectContactOfObjListPainter()
sdr::contact::ObjectContactOfPageView::DoProcessDisplay(sdr::contact::DisplayInfo&)
sdr::contact::ObjectContactOfPageView::GetSdrPage() const
sdr::contact::ObjectContactOfPageView::ObjectContactOfPageView(SdrPageWindow&, char const*)
sdr::contact::ObjectContactOfPageView::SetUNOControlsDesignMode(bool) const
sdr::contact::ObjectContactOfPageView::~ObjectContactOfPageView()
sdr::contact::ViewContact::ActionChildInserted(sdr::contact::ViewContact&)
sdr::contact::ViewContact::AddViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ViewContact::CreateObjectSpecificViewObjectContact(sdr::contact::ObjectContact&)
sdr::contact::ViewContact::HasViewObjectContacts() const
sdr::contact::ViewContact::RemoveViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ViewContact::ViewContact()
sdr::contact::ViewContact::deleteAllVOCs()
sdr::contact::ViewContact::isAnimatedInAnyViewObjectContact() const
sdr::contact::ViewContact::~ViewContact()
sdr::contact::ViewContactOfE3dScene::ActionChanged()
sdr::contact::ViewContactOfE3dScene::CreateObjectSpecificViewObjectContact(sdr::contact::ObjectContact&)
sdr::contact::ViewContactOfE3dScene::ViewContactOfE3dScene(E3dScene&)
sdr::contact::ViewContactOfE3dScene::createObjectTransformation()
sdr::contact::ViewContactOfE3dScene::createScenePrimitive2DSequence(SdrLayerIDSet const*) const
sdr::contact::ViewContactOfE3dScene::createSdrLightingAttribute()
sdr::contact::ViewContactOfE3dScene::createSdrSceneAttribute()
sdr::contact::ViewContactOfE3dScene::createViewIndependentPrimitive2DSequence() const
sdr::contact::ViewContactOfE3dScene::createViewInformation3D(basegfx::B3DRange const&)
sdr::contact::ViewContactOfE3dScene::getAllContentRange3D() const
sdr::contact::ViewContactOfE3dScene::getAllPrimitive3DContainer() const
sdr::contact::ViewContactOfE3dScene::getSdrLightingAttribute() const
sdr::contact::ViewContactOfE3dScene::getSdrSceneAttribute() const
sdr::contact::ViewContactOfE3dScene::getViewInformation3D(basegfx::B3DRange const&) const
sdr::contact::ViewContactOfSdrMediaObj::CreateObjectSpecificViewObjectContact(sdr::contact::ObjectContact&)
sdr::contact::ViewContactOfSdrMediaObj::ViewContactOfSdrMediaObj(SdrMediaObj&)
sdr::contact::ViewContactOfSdrMediaObj::createViewIndependentPrimitive2DSequence() const
sdr::contact::ViewContactOfSdrMediaObj::executeMediaItem(avmedia::MediaItem const&)
sdr::contact::ViewContactOfSdrMediaObj::getPreferredSize() const
sdr::contact::ViewContactOfSdrMediaObj::mediaPropertiesChanged(avmedia::MediaItem const&)
sdr::contact::ViewContactOfSdrMediaObj::updateMediaItem(avmedia::MediaItem&) const
sdr::contact::ViewContactOfSdrMediaObj::~ViewContactOfSdrMediaObj()
sdr::contact::ViewContactOfSdrObj::ViewContactOfSdrObj(SdrObject&)
sdr::contact::ViewContactOfSdrObj::~ViewContactOfSdrObj()
sdr::contact::ViewContactOfVirtObj::GetVirtObj() const
sdr::contact::ViewContactOfVirtObj::ViewContactOfVirtObj(SdrVirtObj&)
sdr::contact::ViewContactOfVirtObj::~ViewContactOfVirtObj()
sdr::contact::ViewObjectContact::ActionChildInserted(sdr::contact::ViewContact&)
sdr::contact::ViewObjectContact::ViewObjectContact(sdr::contact::ObjectContact&, sdr::contact::ViewContact&)
sdr::contact::ViewObjectContact::checkForPrimitive2DAnimations()
sdr::contact::ViewObjectContact::createPrimitive2DSequence(sdr::contact::DisplayInfo const&) const
sdr::contact::ViewObjectContact::getPrimitive2DSequenceSubHierarchy(sdr::contact::DisplayInfo&) const
sdr::contact::ViewObjectContact::resetGridOffset()
sdr::contact::ViewObjectContact::triggerLazyInvalidate()
sdr::contact::ViewObjectContact::~ViewObjectContact()
sdr::contact::ViewObjectContactOfSdrObj::ViewObjectContactOfSdrObj(sdr::contact::ObjectContact&, sdr::contact::ViewContact&)
sdr::contact::ViewObjectContactOfSdrObj::getPageViewOutputDevice() const
sdr::contact::ViewObjectContactOfSdrObj::getSdrObject() const
sdr::contact::ViewObjectContactOfSdrObj::~ViewObjectContactOfSdrObj()
sdr::contact::ViewObjectContactRedirector::ViewObjectContactRedirector()
sdr::contact::ViewObjectContactRedirector::~ViewObjectContactRedirector()
sdr::overlay::OverlayAnimatedBitmapEx::OverlayAnimatedBitmapEx(basegfx::B2DPoint const&, BitmapEx const&, BitmapEx const&, unsigned long, unsigned short, unsigned short, unsigned short, unsigned short, double, double)
sdr::overlay::OverlayAnimatedBitmapEx::Trigger(unsigned int)
sdr::overlay::OverlayAnimatedBitmapEx::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayAnimatedBitmapEx::~OverlayAnimatedBitmapEx()
sdr::overlay::OverlayBitmapEx::OverlayBitmapEx(basegfx::B2DPoint const&, BitmapEx const&, unsigned short, unsigned short, double, double, double)
sdr::overlay::OverlayBitmapEx::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayBitmapEx::~OverlayBitmapEx()
sdr::overlay::OverlayManager::ImpDrawMembers(basegfx::B2DRange const&, OutputDevice&) const
sdr::overlay::OverlayManager::ImpStripeDefinitionChanged()
sdr::overlay::OverlayManager::OverlayManager(OutputDevice&)
sdr::overlay::OverlayManager::RangeToInvalidateRectangle(basegfx::B2DRange const&) const
sdr::overlay::OverlayManager::completeRedraw(vcl::Region const&, OutputDevice*) const
sdr::overlay::OverlayManager::create(OutputDevice&)
sdr::overlay::OverlayManager::flush()
sdr::overlay::OverlayManager::getCurrentViewInformation2D() const
sdr::overlay::OverlayManager::getDiscreteOne() const
sdr::overlay::OverlayManager::impApplyAddActions(sdr::overlay::OverlayObject&)
sdr::overlay::OverlayManager::impApplyRemoveActions(sdr::overlay::OverlayObject&)
sdr::overlay::OverlayManager::invalidateRange(basegfx::B2DRange const&)
sdr::overlay::OverlayManager::setStripeColorA(Color)
sdr::overlay::OverlayManager::setStripeColorB(Color)
sdr::overlay::OverlayManager::setStripeLengthPixel(unsigned int)
sdr::overlay::OverlayManager::~OverlayManager()
sdr::overlay::OverlayObject::OverlayObject(Color)
sdr::overlay::OverlayObject::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayObject::getBaseRange() const
sdr::overlay::OverlayObject::impCheckBlinkTimeValueRange(unsigned long)
sdr::overlay::OverlayObject::setBaseColor(Color)
sdr::overlay::OverlayObject::setHittable(bool)
sdr::overlay::OverlayObject::setOffset(basegfx::B2DVector const&)
sdr::overlay::OverlayObject::~OverlayObject()
sdr::overlay::OverlayObjectList::clear()
sdr::overlay::OverlayObjectList::getBaseRange() const
sdr::overlay::OverlayObjectList::isHitLogic(basegfx::B2DPoint const&, double) const
sdr::overlay::OverlayObjectList::~OverlayObjectList()
sdr::overlay::OverlayObjectWithBasePosition::OverlayObjectWithBasePosition(basegfx::B2DPoint const&, Color)
sdr::overlay::OverlayObjectWithBasePosition::setBasePosition(basegfx::B2DPoint const&)
sdr::overlay::OverlayObjectWithBasePosition::~OverlayObjectWithBasePosition()
sdr::overlay::OverlayPolyPolygon::OverlayPolyPolygon(basegfx::B2DPolyPolygon const&, Color const&, double, Color const&)
sdr::overlay::OverlayPolyPolygon::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayPolyPolygon::~OverlayPolyPolygon()
sdr::overlay::OverlayPolyPolygonStripedAndFilled::OverlayPolyPolygonStripedAndFilled(basegfx::B2DPolyPolygon const&)
sdr::overlay::OverlayPolyPolygonStripedAndFilled::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayPolyPolygonStripedAndFilled::stripeDefinitionHasChanged()
sdr::overlay::OverlayPolyPolygonStripedAndFilled::~OverlayPolyPolygonStripedAndFilled()
sdr::overlay::OverlayPrimitive2DSequenceObject::OverlayPrimitive2DSequenceObject(drawinglayer::primitive2d::Primitive2DContainer&&)
sdr::overlay::OverlayPrimitive2DSequenceObject::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayPrimitive2DSequenceObject::~OverlayPrimitive2DSequenceObject()
sdr::overlay::OverlaySelection::OverlaySelection(sdr::overlay::OverlayType, Color const&, std::vector<basegfx::B2DRange, std::allocator<basegfx::B2DRange> >&&, bool)
sdr::overlay::OverlaySelection::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlaySelection::getOverlayObjectPrimitive2DSequence() const
sdr::overlay::OverlaySelection::~OverlaySelection()
sdr::properties::BaseProperties::BaseProperties(SdrObject&)
sdr::properties::BaseProperties::BroadcastItemChange(sdr::properties::ItemChangeBroadcaster const&)
sdr::properties::BaseProperties::ClearMergedItem(unsigned short)
sdr::properties::BaseProperties::ForceStyleToHardAttributes()
sdr::properties::BaseProperties::GetMergedItemSet() const
sdr::properties::BaseProperties::GetSdrObject()
sdr::properties::BaseProperties::GetSdrObject() const
sdr::properties::BaseProperties::SetMergedItem(SfxPoolItem const&)
sdr::properties::BaseProperties::SetMergedItemSet(SfxItemSet const&, bool)
sdr::properties::BaseProperties::SetMergedItemSetAndBroadcast(SfxItemSet const&, bool)
sdr::properties::BaseProperties::applyDefaultStyleSheetFromSdrModel()
sdr::properties::BaseProperties::dumpAsXml(_xmlTextWriter*) const
sdr::properties::BaseProperties::getVersion() const
sdr::properties::BaseProperties::~BaseProperties()
sdr::properties::DefaultProperties::AllowItemChange(unsigned short, SfxPoolItem const*) const
sdr::properties::DefaultProperties::ClearObjectItem(unsigned short)
sdr::properties::DefaultProperties::ClearObjectItemDirect(unsigned short)
sdr::properties::DefaultProperties::Clone(SdrObject&) const
sdr::properties::DefaultProperties::CreateObjectSpecificItemSet(SfxItemPool&)
sdr::properties::DefaultProperties::DefaultProperties(SdrObject&)
sdr::properties::DefaultProperties::DefaultProperties(sdr::properties::DefaultProperties const&, SdrObject&)
sdr::properties::DefaultProperties::ForceDefaultAttributes()
sdr::properties::DefaultProperties::GetObjectItemSet() const
sdr::properties::DefaultProperties::GetStyleSheet() const
sdr::properties::DefaultProperties::ItemChange(unsigned short, SfxPoolItem const*)
sdr::properties::DefaultProperties::ItemSetChanged(SfxItemSet const*)
sdr::properties::DefaultProperties::PostItemChange(unsigned short)
sdr::properties::DefaultProperties::SetObjectItem(SfxPoolItem const&)
sdr::properties::DefaultProperties::SetObjectItemDirect(SfxPoolItem const&)
sdr::properties::DefaultProperties::SetObjectItemSet(SfxItemSet const&)
sdr::properties::DefaultProperties::SetStyleSheet(SfxStyleSheet*, bool)
sdr::properties::DefaultProperties::dumpAsXml(_xmlTextWriter*) const
sdr::properties::DefaultProperties::~DefaultProperties()
sdr::table::SdrTableObj::AddToHdlList(SdrHdlList&) const
sdr::table::SdrTableObj::AddUndo(SdrUndoAction*)
sdr::table::SdrTableObj::AdjustTextFrameWidthAndHeight()
sdr::table::SdrTableObj::AdjustTextFrameWidthAndHeight(tools::Rectangle&, bool, bool) const
sdr::table::SdrTableObj::AdjustToMaxRect(tools::Rectangle const&, bool)
sdr::table::SdrTableObj::BckCreate(SdrDragStat&)
sdr::table::SdrTableObj::BegCreate(SdrDragStat&)
sdr::table::SdrTableObj::BegTextEdit(SdrOutliner&)
sdr::table::SdrTableObj::BrkCreate(SdrDragStat&)
sdr::table::SdrTableObj::CheckTableHit(Point const&, int&, int&, unsigned short) const
sdr::table::SdrTableObj::CheckTextHit(Point const&) const
sdr::table::SdrTableObj::CloneSdrObject(SdrModel&) const
sdr::table::SdrTableObj::CreateObjectSpecificProperties()
sdr::table::SdrTableObj::CreateObjectSpecificViewContact()
sdr::table::SdrTableObj::CropTableModelToSelection(sdr::table::CellPos const&, sdr::table::CellPos const&)
sdr::table::SdrTableObj::DistributeColumns(int, int, bool, bool)
sdr::table::SdrTableObj::DistributeRows(int, int, bool, bool)
sdr::table::SdrTableObj::EndCreate(SdrDragStat&, SdrCreateCmd)
sdr::table::SdrTableObj::EndTextEdit(SdrOutliner&)
sdr::table::SdrTableObj::GetActiveCellItemSet() const
sdr::table::SdrTableObj::GetCellTextEditOutliner(sdr::table::Cell const&) const
sdr::table::SdrTableObj::GetCreatePointer() const
sdr::table::SdrTableObj::GetHdlCount() const
sdr::table::SdrTableObj::GetObjIdentifier() const
sdr::table::SdrTableObj::GetOutlinerParaObject() const
sdr::table::SdrTableObj::GetOutlinerViewAnchorMode() const
sdr::table::SdrTableObj::GetSnapRect() const
sdr::table::SdrTableObj::GetWritingMode() const
sdr::table::SdrTableObj::HasText() const
sdr::table::SdrTableObj::IsAutoGrowHeight() const
sdr::table::SdrTableObj::IsAutoGrowWidth() const
sdr::table::SdrTableObj::IsFontwork() const
sdr::table::SdrTableObj::IsReallyEdited() const
sdr::table::SdrTableObj::IsTextEditActive(sdr::table::CellPos const&)
sdr::table::SdrTableObj::IsVerticalWriting() const
sdr::table::SdrTableObj::MovCreate(SdrDragStat&)
sdr::table::SdrTableObj::NbcMove(Size const&)
sdr::table::SdrTableObj::NbcReformatText()
sdr::table::SdrTableObj::NbcResize(Point const&, Fraction const&, Fraction const&)
sdr::table::SdrTableObj::NbcSetLogicRect(tools::Rectangle const&)
sdr::table::SdrTableObj::NbcSetOutlinerParaObject(std::optional<OutlinerParaObject>)
sdr::table::SdrTableObj::NbcSetSnapRect(tools::Rectangle const&)
sdr::table::SdrTableObj::NewGeoData() const
sdr::table::SdrTableObj::RecalcSnapRect()
sdr::table::SdrTableObj::RestoreGeoData(SdrObjGeoData const&)
sdr::table::SdrTableObj::SaveGeoData(SdrObjGeoData&) const
sdr::table::SdrTableObj::SdrTableObj(SdrModel&)
sdr::table::SdrTableObj::SdrTableObj(SdrModel&, sdr::table::SdrTableObj const&)
sdr::table::SdrTableObj::SdrTableObj(SdrModel&, tools::Rectangle const&, int, int)
sdr::table::SdrTableObj::SetChanged()
sdr::table::SdrTableObj::SetSkipChangeLayout(bool)
sdr::table::SdrTableObj::SetVerticalWriting(bool)
sdr::table::SdrTableObj::TakeCreatePoly(SdrDragStat const&) const
sdr::table::SdrTableObj::TakeObjInfo(SdrObjTransformInfoRec&) const
sdr::table::SdrTableObj::TakeObjNamePlural() const
sdr::table::SdrTableObj::TakeObjNameSingul() const
sdr::table::SdrTableObj::TakeTextAnchorRect(sdr::table::CellPos const&, tools::Rectangle&) const
sdr::table::SdrTableObj::TakeTextAnchorRect(tools::Rectangle&) const
sdr::table::SdrTableObj::TakeTextEditArea(Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
sdr::table::SdrTableObj::TakeTextEditArea(sdr::table::CellPos const&, Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
sdr::table::SdrTableObj::TakeTextRect(SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*, bool) const
sdr::table::SdrTableObj::TakeTextRect(sdr::table::CellPos const&, SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*) const
sdr::table::SdrTableObj::applySpecialDrag(SdrDragStat&)
sdr::table::SdrTableObj::beginSpecialDrag(SdrDragStat&) const
sdr::table::SdrTableObj::changeEdge(bool, int, int)
sdr::table::SdrTableObj::createCell(rtl::Reference<sdr::table::Cell>&)
sdr::table::SdrTableObj::createTableEdgesJson(boost::property_tree::basic_ptree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
sdr::table::SdrTableObj::dumpAsXml(_xmlTextWriter*) const
sdr::table::SdrTableObj::getActiveCell() const
sdr::table::SdrTableObj::getActiveText() const
sdr::table::SdrTableObj::getDownCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getLeftCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getNextCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getNextRow(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getPreviousCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getPreviousRow(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getRightCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getRowCount() const
sdr::table::SdrTableObj::getSpecialDragPoly(SdrDragStat const&) const
sdr::table::SdrTableObj::getTableLayouter() const
sdr::table::SdrTableObj::getTableStyle() const
sdr::table::SdrTableObj::getTableStyleSettings() const
sdr::table::SdrTableObj::getText(int) const
sdr::table::SdrTableObj::getTextCount() const
sdr::table::SdrTableObj::getUpCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::hasSpecialDrag() const
sdr::table::SdrTableObj::init(int, int)
sdr::table::SdrTableObj::isValid(sdr::table::CellPos const&) const
sdr::table::SdrTableObj::onEditOutlinerStatusEvent(EditStatus*)
sdr::table::SdrTableObj::setActiveText(int)
sdr::table::SdrTableObj::setTableStyleSettings(sdr::table::TableStyleSettings const&)
sdr::table::SdrTableObj::uno_lock()
sdr::table::SdrTableObj::uno_unlock()
sdr::table::SdrTableObj::~SdrTableObj()
sdr::table::SvxTableController::ChangeFontSize(bool, FontList const*)
sdr::table::SvxTableController::SetAttrToSelectedShape(SfxItemSet const&)
sdr::table::SvxTableController::clearSelection()
sdr::table::SvxTableController::deselectColumn(int)
sdr::table::SvxTableController::deselectRow(int)
sdr::table::SvxTableController::isColumnHeader()
sdr::table::SvxTableController::isColumnSelected(int)
sdr::table::SvxTableController::isRowHeader()
sdr::table::SvxTableController::isRowSelected(int)
sdr::table::SvxTableController::selectAll()
sdr::table::SvxTableController::selectColumn(int)
sdr::table::SvxTableController::selectRow(int)
sdr::table::SvxTableController::setSelectedCells(sdr::table::CellPos const&, sdr::table::CellPos const&)
searchFor
serious_facterror
setBasicWatchMode(bool)
setCalcAsShown(ScDocument*, bool)
setLink
set_BFP
set_OF_override
set_OF_p1extra
set_XLI
set_action
set_anti_degen
set_basis
set_basiscrash
set_basisvar
set_bb_floorfirst
set_bb_rule
set_bounds
set_bounds_tighter
set_break_at_first
set_break_at_value
set_callbacks
set_col_name
set_column
set_columnex
set_constr_type
set_debug
set_dv_bounds
set_epsb
set_epsd
set_epsel
set_epsint
set_epsperturb
set_epspivot
set_improve
set_infinite
set_lag_trace
set_lowbo
set_lp_name
set_mat
set_maxpivot
set_mip_gap
set_multiprice
set_negrange
set_obj
set_obj_bound
set_obj_dir
set_obj_fnex
set_obj_in_basis
set_outputstream
set_partialprice
set_pivoting
set_preferdual
set_presolve
set_print_sol
set_pseudocosts
set_rh_lower
set_rh_range
set_rh_upper
set_rh_vec
set_row
set_row_name
set_rowex
set_scalelimit
set_scaling
set_semicont
set_sense
set_simplextype
set_solutionlimit
set_sos_type
set_sos_weight
set_title
set_trace
set_upbo
set_use_names
set_var_branch
set_var_priority
set_var_weights
set_verbose
sfx2::DocumentInserter::DocumentInserter(weld::Window*, rtl::OUString const&, sfx2::DocumentInserter::Mode)
sfx2::DocumentInserter::~DocumentInserter()
sfx2::DocumentMacroMode::DocumentMacroMode(sfx2::IMacroDocumentAccess&)
sfx2::DocumentMacroMode::allowMacroExecution()
sfx2::DocumentMacroMode::containerHasBasicMacros(com::sun::star::uno::Reference<com::sun::star::script::XLibraryContainer> const&)
sfx2::DocumentMacroMode::disallowMacroExecution()
sfx2::DocumentMacroMode::hasMacroLibrary() const
sfx2::DocumentMacroMode::isMacroExecutionDisallowed() const
sfx2::DocumentStorageModifyListener::DocumentStorageModifyListener(sfx2::IModifiableDocument&, comphelper::SolarMutex&)
sfx2::DocumentStorageModifyListener::disposing(com::sun::star::lang::EventObject const&)
sfx2::DocumentStorageModifyListener::modified(com::sun::star::lang::EventObject const&)
sfx2::DocumentStorageModifyListener::~DocumentStorageModifyListener()
sfx2::FileDialogHelper::ControlStateChanged(com::sun::star::ui::dialogs::FilePickerEvent const&)
sfx2::FileDialogHelper::CreateMatcher(rtl::OUString const&)
sfx2::FileDialogHelper::DialogClosed(com::sun::star::ui::dialogs::DialogClosedEvent const&)
sfx2::FileDialogHelper::DialogSizeChanged()
sfx2::FileDialogHelper::DirectoryChanged()
sfx2::FileDialogHelper::Execute(std::optional<SfxAllItemSet>&, rtl::OUString&)
sfx2::FileDialogHelper::Execute(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::optional<SfxAllItemSet>&, rtl::OUString&, rtl::OUString const&)
sfx2::FileDialogHelper::FileDialogHelper(short, FileDialogFlags, rtl::OUString const&, SfxFilterFlags, SfxFilterFlags, weld::Window*)
sfx2::FileDialogHelper::FileDialogHelper(short, FileDialogFlags, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, weld::Window*)
sfx2::FileDialogHelper::FileDialogHelper(short, FileDialogFlags, rtl::OUString const&, short, SfxFilterFlags, SfxFilterFlags, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, weld::Window*)
sfx2::FileDialogHelper::FileSelectionChanged()
sfx2::FileDialogHelper::GetDialogType() const
sfx2::FileDialogHelper::GetDisplayDirectory() const
sfx2::FileDialogHelper::HelpRequested(com::sun::star::ui::dialogs::FilePickerEvent const&)
sfx2::FileDialogHelper::IsPasswordEnabled() const
sfx2::FileDialogHelper::contextToString(sfx2::FileDialogHelper::Context)
sfx2::FileDialogHelper::~FileDialogHelper()
sfx2::LinkManager::CreateObj(sfx2::SvBaseLink const*)
sfx2::LinkManager::Insert(sfx2::SvBaseLink*)
sfx2::LinkManager::InsertCachedComp(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&)
sfx2::LinkManager::InsertLink(sfx2::SvBaseLink*, sfx2::SvBaseLinkObjectType, SfxLinkUpdateMode, rtl::OUString const*)
sfx2::LinkManager::LinkManager(SfxObjectShell*)
sfx2::LinkManager::LinkServerShell(rtl::OUString const&, SfxObjectShell&, sfx2::SvBaseLink&)
sfx2::LinkManager::~LinkManager()
sfx2::Metadatable::~Metadatable()
sfx2::SafeMode::getFilePath(rtl::OUString const&)
sfx2::SafeMode::putRestartFlag()
sfx2::SafeMode::removeFlag()
sfx2::SfxNotebookBar::CloseMethod(SystemWindow*)
sfx2::SfxNotebookBar::RemoveListeners(SystemWindow const*)
sfx2::SfxNotebookBar::ShowMenubar(SfxViewFrame const*, bool)
sfx2::SfxNotebookBar::ShowMenubar(bool)
sfx2::SfxNotebookBar::StateMethod(SystemWindow*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
sfx2::SfxNotebookBar::ToggleMenubar()
sfx2::SvBaseLink::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
sfx2::SvBaseLink::ExecuteEdit(rtl::OUString const&)
sfx2::SvBaseLink::GetInsertFileDialog(rtl::OUString const&)
sfx2::SvBaseLink::GetLinkManager() const
sfx2::SvBaseLink::SetLinkManager(sfx2::LinkManager*)
sfx2::SvBaseLink::SetObj(sfx2::SvLinkSource*)
sfx2::SvBaseLink::SvBaseLink()
sfx2::SvBaseLink::SvBaseLink(SfxLinkUpdateMode, SotClipboardFormatId)
sfx2::SvBaseLink::~SvBaseLink()
sfx2::SvLinkSource::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
sfx2::SvLinkSource::GetData(com::sun::star::uno::Any&, rtl::OUString const&, bool)
sfx2::SvLinkSource::SvLinkSource()
sfx2::SvLinkSource::clearStreamToLoadFrom()
sfx2::SvLinkSource::getStreamToLoadFrom()
sfx2::SvLinkSource::setStreamToLoadFrom(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
sfx2::SvLinkSource::~SvLinkSource()
sfx2::TitledDockingWindow::TitledDockingWindow(SfxBindings*, SfxChildWindow*, vcl::Window*)
sfx2::TitledDockingWindow::impl_layout()
sfx2::TitledDockingWindow::impl_resetToolBox()
sfx2::TitledDockingWindow::~TitledDockingWindow()
sfx2::UserInputInterception::UserInputInterception(cppu::OWeakObject&, osl::Mutex&)
sfx2::UserInputInterception::hasKeyHandlers() const
sfx2::UserInputInterception::hasMouseClickListeners() const
sfx2::UserInputInterception::~UserInputInterception()
sfx2::isValidNCName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::isValidXmlId(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::Context::Context()
sfx2::sidebar::Context::Context(rtl::OUString const&, rtl::OUString const&)
sfx2::sidebar::Context::EvaluateMatch(sfx2::sidebar::Context const&) const
sfx2::sidebar::Context::operator!=(sfx2::sidebar::Context const&) const
sfx2::sidebar::Context::operator==(sfx2::sidebar::Context const&) const
sfx2::sidebar::ControllerItem::ControllerItem(unsigned short, SfxBindings&, sfx2::sidebar::ControllerItem::ItemUpdateReceiverInterface&)
sfx2::sidebar::ControllerItem::GetControlState(unsigned short, boost::property_tree::basic_ptree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
sfx2::sidebar::ControllerItem::ItemUpdateReceiverInterface::~ItemUpdateReceiverInterface()
sfx2::sidebar::ControllerItem::RequestUpdate()
sfx2::sidebar::ControllerItem::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
sfx2::sidebar::ControllerItem::~ControllerItem()
sfx2::sidebar::IContextChangeReceiver::~IContextChangeReceiver()
sfx2::sidebar::ILayoutableWindow::~ILayoutableWindow()
sfx2::sidebar::Panel::DataChanged()
sfx2::sidebar::Panel::GetContents() const
sfx2::sidebar::Panel::GetElementParentWindow()
sfx2::sidebar::Panel::GetElementWindow()
sfx2::sidebar::Panel::GetFrameWeld()
sfx2::sidebar::Panel::GetTitleBar() const
sfx2::sidebar::Panel::HasIdPredicate(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::Panel::Panel(sfx2::sidebar::PanelDescriptor const&, weld::Widget*, bool, sfx2::sidebar::Deck*, std::function<sfx2::sidebar::Context ()> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
sfx2::sidebar::Panel::SetExpanded(bool)
sfx2::sidebar::Panel::SetHeightPixel(int)
sfx2::sidebar::Panel::SetLurkMode(bool)
sfx2::sidebar::Panel::SetUIElement(com::sun::star::uno::Reference<com::sun::star::ui::XUIElement> const&)
sfx2::sidebar::Panel::Show(bool)
sfx2::sidebar::Panel::get_extents(tools::Rectangle&) const
sfx2::sidebar::Panel::set_margin_bottom(int)
sfx2::sidebar::Panel::set_margin_top(int)
sfx2::sidebar::Panel::set_vexpand(bool)
sfx2::sidebar::Panel::~Panel()
sfx2::sidebar::ResourceManager::GetDeckDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::GetLastActiveDeck(sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::GetLegacyAddonRootNode(rtl::OUString const&)
sfx2::sidebar::ResourceManager::GetMatchingPanels(std::vector<sfx2::sidebar::ResourceManager::PanelContextDescriptor, std::allocator<sfx2::sidebar::ResourceManager::PanelContextDescriptor> >&, sfx2::sidebar::Context const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::GetPanelDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::GetToolPanelNodeNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, utl::OConfigurationTreeRoot const&)
sfx2::sidebar::ResourceManager::ImplGetDeckDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::ImplGetPanelDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::InitDeckContext(sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::IsDeckEnabled(std::basic_string_view<char16_t, std::char_traits<char16_t> >, sfx2::sidebar::Context const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::ReadContextList(utl::OConfigurationNode const&, sfx2::sidebar::ContextList&, rtl::OUString const&)
sfx2::sidebar::ResourceManager::ReadDeckList()
sfx2::sidebar::ResourceManager::ReadLastActive()
sfx2::sidebar::ResourceManager::ReadLegacyAddons(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::ReadPanelList()
sfx2::sidebar::ResourceManager::ResourceManager()
sfx2::sidebar::ResourceManager::SaveDeckSettings(sfx2::sidebar::DeckDescriptor const*)
sfx2::sidebar::ResourceManager::SaveDecksSettings(sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::SaveLastActiveDeck(sfx2::sidebar::Context const&, rtl::OUString const&)
sfx2::sidebar::ResourceManager::SetLastActiveDeck(sfx2::sidebar::Context const&, rtl::OUString const&)
sfx2::sidebar::ResourceManager::StorePanelExpansionState(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::UpdateModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
sfx2::sidebar::ResourceManager::disposeDecks()
sfx2::sidebar::ResourceManager::~ResourceManager()
sfx2::sidebar::Sidebar::ToggleDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SfxViewFrame*)
sfx2::sidebar::SidebarChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
sfx2::sidebar::SidebarChildWindow::GetDefaultWidth(vcl::Window const*)
sfx2::sidebar::SidebarChildWindow::GetInfo() const
sfx2::sidebar::SidebarChildWindow::SidebarChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
sfx2::sidebar::SidebarController::BroadcastPropertyChange()
sfx2::sidebar::SidebarController::CanModifyChildWindowWidth()
sfx2::sidebar::SidebarController::CreateDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::CreateDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >, sfx2::sidebar::Context const&, bool)
sfx2::sidebar::SidebarController::CreatePanel(std::basic_string_view<char16_t, std::char_traits<char16_t> >, weld::Widget*, bool, sfx2::sidebar::Context const&, VclPtr<sfx2::sidebar::Deck> const&)
sfx2::sidebar::SidebarController::CreatePanels(std::basic_string_view<char16_t, std::char_traits<char16_t> >, sfx2::sidebar::Context const&)
sfx2::sidebar::SidebarController::CreateUIElement(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&, rtl::OUString const&, bool, sfx2::sidebar::Context const&)
sfx2::sidebar::SidebarController::FadeIn()
sfx2::sidebar::SidebarController::FadeOut()
sfx2::sidebar::SidebarController::GetDeckDragArea() const
sfx2::sidebar::SidebarController::GetMatchingDecks()
sfx2::sidebar::SidebarController::GetMatchingPanels(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::GetSidebarControllerForFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
sfx2::sidebar::SidebarController::GetSplitWindow()
sfx2::sidebar::SidebarController::IsDeckOpen(int)
sfx2::sidebar::SidebarController::IsDeckVisible(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::NotifyResize()
sfx2::sidebar::SidebarController::OpenThenSwitchToDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::OpenThenToggleDeck(rtl::OUString const&)
sfx2::sidebar::SidebarController::PopulatePopupMenus(weld::Menu&, weld::Menu&, std::vector<sfx2::sidebar::TabBar::DeckMenuData, std::allocator<sfx2::sidebar::TabBar::DeckMenuData> > const&) const
sfx2::sidebar::SidebarController::ProcessNewWidth(int)
sfx2::sidebar::SidebarController::RequestCloseDeck()
sfx2::sidebar::SidebarController::RequestOpenDeck()
sfx2::sidebar::SidebarController::RestrictWidth(int)
sfx2::sidebar::SidebarController::SetChildWindowWidth(int)
sfx2::sidebar::SidebarController::ShowPanel(sfx2::sidebar::Panel const&)
sfx2::sidebar::SidebarController::ShowPopupMenu(weld::Menu&, weld::Menu&, std::vector<sfx2::sidebar::TabBar::DeckMenuData, std::allocator<sfx2::sidebar::TabBar::DeckMenuData> > const&) const
sfx2::sidebar::SidebarController::SidebarController(sfx2::sidebar::SidebarDockingWindow*, SfxViewFrame const*)
sfx2::sidebar::SidebarController::SwitchToDeck(sfx2::sidebar::DeckDescriptor const&, sfx2::sidebar::Context const&)
sfx2::sidebar::SidebarController::SyncUpdate()
sfx2::sidebar::SidebarController::UpdateCloseIndicator(bool)
sfx2::sidebar::SidebarController::UpdateConfigurations()
sfx2::sidebar::SidebarController::UpdateDeckOpenState()
sfx2::sidebar::SidebarController::UpdateTitleBarIcons()
sfx2::sidebar::SidebarController::create(sfx2::sidebar::SidebarDockingWindow*, SfxViewFrame const*)
sfx2::sidebar::SidebarController::disposeDecks()
sfx2::sidebar::SidebarController::disposing()
sfx2::sidebar::SidebarController::disposing(com::sun::star::lang::EventObject const&)
sfx2::sidebar::SidebarController::frameAction(com::sun::star::frame::FrameActionEvent const&)
sfx2::sidebar::SidebarController::notifyContextChangeEvent(com::sun::star::ui::ContextChangeEventObject const&)
sfx2::sidebar::SidebarController::notifyDeckTitle(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
sfx2::sidebar::SidebarController::requestLayout()
sfx2::sidebar::SidebarController::saveDeckState()
sfx2::sidebar::SidebarController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
sfx2::sidebar::SidebarController::~SidebarController()
sfx2::sidebar::SidebarDockingWindow::CheckAlignment(SfxChildAlignment, SfxChildAlignment)
sfx2::sidebar::SidebarDockingWindow::Close()
sfx2::sidebar::SidebarDockingWindow::EventNotify(NotifyEvent&)
sfx2::sidebar::SidebarDockingWindow::GetFocus()
sfx2::sidebar::SidebarDockingWindow::SidebarDockingWindow(SfxBindings*, sfx2::sidebar::SidebarChildWindow&, vcl::Window*, long)
sfx2::sidebar::SidebarDockingWindow::dispose()
sfx2::sidebar::SidebarDockingWindow::~SidebarDockingWindow()
sfx2::sidebar::SidebarModelUpdate::~SidebarModelUpdate()
sfx2::sidebar::SidebarPanelBase::SetParentPanel(sfx2::sidebar::Panel*)
sfx2::sidebar::SidebarPanelBase::SidebarPanelBase(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::unique_ptr<PanelLayout, std::default_delete<PanelLayout> >, com::sun::star::ui::LayoutSize const&)
sfx2::sidebar::SidebarPanelBase::createAccessible(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
sfx2::sidebar::SidebarPanelBase::disposing()
sfx2::sidebar::SidebarPanelBase::disposing(com::sun::star::lang::EventObject const&)
sfx2::sidebar::SidebarPanelBase::getFrame()
sfx2::sidebar::SidebarPanelBase::getHeightForWidth(int)
sfx2::sidebar::SidebarPanelBase::getMinimalWidth()
sfx2::sidebar::SidebarPanelBase::getRealInterface()
sfx2::sidebar::SidebarPanelBase::getResourceURL()
sfx2::sidebar::SidebarPanelBase::getType()
sfx2::sidebar::SidebarPanelBase::getWindow()
sfx2::sidebar::SidebarPanelBase::notifyContextChangeEvent(com::sun::star::ui::ContextChangeEventObject const&)
sfx2::sidebar::SidebarPanelBase::updateModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
sfx2::sidebar::SidebarPanelBase::~SidebarPanelBase()
sfx2::sidebar::Theme::BroadcastPropertyChange(std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> > > const*, com::sun::star::beans::PropertyChangeEvent const&)
sfx2::sidebar::Theme::DoVetoableListenersVeto(std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> > > const*, com::sun::star::beans::PropertyChangeEvent const&)
sfx2::sidebar::Theme::GetChangeListeners(sfx2::sidebar::Theme::ThemeItem, bool)
sfx2::sidebar::Theme::GetCppuType(sfx2::sidebar::Theme::PropertyType)
sfx2::sidebar::Theme::GetCurrentTheme()
sfx2::sidebar::Theme::GetIndex(sfx2::sidebar::Theme::ThemeItem, sfx2::sidebar::Theme::PropertyType)
sfx2::sidebar::Theme::GetInteger(sfx2::sidebar::Theme::ThemeItem)
sfx2::sidebar::Theme::GetPropertySet()
sfx2::sidebar::Theme::GetPropertyType(sfx2::sidebar::Theme::ThemeItem)
sfx2::sidebar::Theme::GetVetoableListeners(sfx2::sidebar::Theme::ThemeItem, bool)
sfx2::sidebar::Theme::HandleDataChange()
sfx2::sidebar::Theme::InitializeTheme()
sfx2::sidebar::Theme::IsHighContrastMode()
sfx2::sidebar::Theme::ProcessNewValue(com::sun::star::uno::Any const&, sfx2::sidebar::Theme::ThemeItem, sfx2::sidebar::Theme::PropertyType)
sfx2::sidebar::Theme::SetupPropertyMaps()
sfx2::sidebar::Theme::Theme()
sfx2::sidebar::Theme::UpdateTheme()
sfx2::sidebar::Theme::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
sfx2::sidebar::Theme::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
sfx2::sidebar::Theme::disposing()
sfx2::sidebar::Theme::getProperties()
sfx2::sidebar::Theme::getPropertyByName(rtl::OUString const&)
sfx2::sidebar::Theme::getPropertySetInfo()
sfx2::sidebar::Theme::getPropertyValue(rtl::OUString const&)
sfx2::sidebar::Theme::hasPropertyByName(rtl::OUString const&)
sfx2::sidebar::Theme::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
sfx2::sidebar::Theme::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
sfx2::sidebar::Theme::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
sfx2::sidebar::Theme::~Theme()
sfx::AccessibilityCheck::~AccessibilityCheck()
sfx::AccessibilityIssue::AccessibilityIssue(sfx::AccessibilityIssueID)
sfx::AccessibilityIssue::~AccessibilityIssue()
shift_basis
shift_coldata
shift_rowcoldata
shift_rowdata
simple_formula_FormulaOpCodeMapperObj
simplexPricer
singleton_column
sizeLink
sk_abort_no_print()
sk_app::VulkanWindowContext::VulkanWindowContext(sk_app::DisplayParams const&, std::function<VkSurfaceKHR_T* (VkInstance_T*)>, std::function<bool (VkInstance_T*, VkPhysicalDevice_T*, unsigned int)>, void (*(*)(VkInstance_T*, char const*))(), void (*(*)(VkDevice_T*, char const*))())
sk_app::VulkanWindowContext::checkDestroyShared()
sk_app::VulkanWindowContext::createBuffers(VkFormat, unsigned int, SkColorType, VkSharingMode)
sk_app::VulkanWindowContext::createSwapchain(int, int, sk_app::DisplayParams const&)
sk_app::VulkanWindowContext::destroyBuffers()
sk_app::VulkanWindowContext::destroyContext()
sk_app::VulkanWindowContext::getAvailableBackbuffer()
sk_app::VulkanWindowContext::getBackbufferSurface()
sk_app::VulkanWindowContext::initializeContext()
sk_app::VulkanWindowContext::swapBuffers(SkIRect const*)
sk_app::VulkanWindowContext::~VulkanWindowContext()
sk_app::WindowContext::WindowContext(sk_app::DisplayParams const&)
sk_app::WindowContext::~WindowContext()
sk_calloc_throw(unsigned long, unsigned long)
sk_canvas_clip_path
sk_canvas_clip_rect
sk_canvas_concat
sk_canvas_draw_circle
sk_canvas_draw_image
sk_canvas_draw_image_rect
sk_canvas_draw_oval
sk_canvas_draw_paint
sk_canvas_draw_path
sk_canvas_draw_picture
sk_canvas_draw_rect
sk_canvas_restore
sk_canvas_rotate_degrees
sk_canvas_rotate_radians
sk_canvas_save
sk_canvas_save_layer
sk_canvas_scale
sk_canvas_skew
sk_canvas_translate
sk_colorspace_new_srgb
sk_colorspace_ref
sk_colorspace_unref
sk_data_get_data
sk_data_get_size
sk_data_new_from_malloc
sk_data_new_subset
sk_data_new_with_copy
sk_data_ref
sk_data_unref
sk_free(void*)
sk_image_encode
sk_image_get_height
sk_image_get_unique_id
sk_image_get_width
sk_image_new_from_encoded
sk_image_new_raster_copy
sk_image_ref
sk_image_unref
sk_imageinfo_delete
sk_imageinfo_get_alphatype
sk_imageinfo_get_colorspace
sk_imageinfo_get_colortype
sk_imageinfo_get_height
sk_imageinfo_get_width
sk_imageinfo_new
sk_malloc_canfail(unsigned long, unsigned long)
sk_malloc_flags(unsigned long, unsigned int)
sk_malloc_throw(unsigned long, unsigned long)
sk_maskfilter_new_blur
sk_maskfilter_ref
sk_maskfilter_unref
sk_out_of_memory()
sk_paint_delete
sk_paint_get_color
sk_paint_get_stroke_cap
sk_paint_get_stroke_join
sk_paint_get_stroke_miter
sk_paint_get_stroke_width
sk_paint_is_antialias
sk_paint_is_stroke
sk_paint_new
sk_paint_set_antialias
sk_paint_set_color
sk_paint_set_maskfilter
sk_paint_set_shader
sk_paint_set_stroke
sk_paint_set_stroke_cap
sk_paint_set_stroke_join
sk_paint_set_stroke_miter
sk_paint_set_stroke_width
sk_paint_set_xfermode_mode
sk_path_delete
sk_path_get_bounds
sk_pathbuilder_add_oval
sk_pathbuilder_add_rect
sk_pathbuilder_close
sk_pathbuilder_conic_to
sk_pathbuilder_cubic_to
sk_pathbuilder_delete
sk_pathbuilder_detach_path
sk_pathbuilder_line_to
sk_pathbuilder_move_to
sk_pathbuilder_new
sk_pathbuilder_quad_to
sk_pathbuilder_snapshot_path
sk_picture_get_bounds
sk_picture_get_unique_id
sk_picture_recorder_begin_recording
sk_picture_recorder_delete
sk_picture_recorder_end_recording
sk_picture_recorder_new
sk_picture_ref
sk_picture_unref
sk_realloc_throw(void*, unsigned long)
sk_realloc_throw(void*, unsigned long, unsigned long)
sk_shader_new_linear_gradient
sk_shader_new_radial_gradient
sk_shader_new_sweep_gradient
sk_shader_new_two_point_conical_gradient
sk_shader_ref
sk_shader_unref
sk_surface_get_canvas
sk_surface_new_image_snapshot
sk_surface_new_raster
sk_surface_new_raster_direct
sk_surface_unref
so_stdname
solution_is_int
solve_BB
solve_LP
sortByINT
sortByREAL
sortREALByINT
spaces
spx_run
spx_solve
stallMonitor_check
stallMonitor_create
stallMonitor_creepingObj
stallMonitor_finish
stallMonitor_reset
stallMonitor_shortSteps
stallMonitor_update
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > boost::locale::conv::from_utf<char>(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, boost::locale::conv::method_type)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > boost::locale::conv::from_utf<wchar_t>(wchar_t const*, wchar_t const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, boost::locale::conv::method_type)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > boost::locale::conv::to_utf<char>(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, boost::locale::conv::method_type)
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > boost::locale::conv::to_utf<wchar_t>(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, boost::locale::conv::method_type)
store_bounds
store_pointer(char*, char*)
store_re_op
storevarandweight
str_add_column
str_add_constraint
str_add_lag_con
str_set_obj_fn
str_set_rh_vec
strcpylo
strcpyup
strlcpy
strlinecat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
strongbranch_BB
strtoint
strtolo
strtoup
submat
svl::GridPrinter::GridPrinter(unsigned long, unsigned long, bool)
svl::GridPrinter::~GridPrinter()
svl::IndexedStyleSheets::ApplyToAllStyleSheets(svl::StyleSheetCallback&) const
svl::IndexedStyleSheets::Clear(svl::StyleSheetDisposer&)
svl::IndexedStyleSheets::GetNthStyleSheetThatMatchesPredicate(int, svl::StyleSheetPredicate&, int)
svl::IndexedStyleSheets::GetNumberOfStyleSheetsWithPredicate(svl::StyleSheetPredicate&) const
svl::IndexedStyleSheets::IndexedStyleSheets()
svl::IndexedStyleSheets::Register(SfxStyleSheetBase const&, int)
svl::IndexedStyleSheets::Reindex()
svl::IndexedStyleSheets::~IndexedStyleSheets()
svl::SharedStringPool::SharedStringPool(CharClass const&)
svl::SharedStringPool::~SharedStringPool()
svt::AcceleratorExecute::execute(com::sun::star::awt::KeyEvent const&)
svt::AcceleratorExecute::st_openDocConfig(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
svt::AcceleratorExecute::st_openModuleConfig(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
svt::AcceleratorExecute::~AcceleratorExecute()
svt::CellController::CellController(svt::ControlBase*)
svt::CellController::MoveAllowed(KeyEvent const&) const
svt::CellController::resume()
svt::CellController::suspend()
svt::CellController::~CellController()
svt::CheckBoxCellController::ActivatingMouseEvent(BrowserMouseEvent const&, bool)
svt::CheckBoxCellController::CheckBoxCellController(svt::CheckBoxControl*)
svt::CheckBoxCellController::IsValueChangedFromSaved() const
svt::CheckBoxCellController::SaveValue()
svt::CheckBoxControl::CheckBoxControl(BrowserDataWin*)
svt::CheckBoxControl::Clicked()
svt::CheckBoxControl::SetPointFont(vcl::Font const&)
svt::CheckBoxControl::dispose()
svt::CheckBoxControl::~CheckBoxControl()
svt::ComboBoxCellController::ComboBoxCellController(svt::ComboBoxControl*)
svt::ComboBoxCellController::IsValueChangedFromSaved() const
svt::ComboBoxCellController::MoveAllowed(KeyEvent const&) const
svt::ComboBoxCellController::SaveValue()
svt::ComboBoxControl::ComboBoxControl(BrowserDataWin*)
svt::ComboBoxControl::SetPointFont(vcl::Font const&)
svt::ComboBoxControl::dispose()
svt::ControlBase::ControlBase(BrowserDataWin*, rtl::OUString const&, rtl::OString const&)
svt::DateControl::DateControl(BrowserDataWin*, bool)
svt::DateControl::dispose()
svt::DialogClosedListener::DialogClosedListener()
svt::DialogClosedListener::dialogClosed(com::sun::star::ui::dialogs::DialogClosedEvent const&)
svt::DialogClosedListener::disposing(com::sun::star::lang::EventObject const&)
svt::DocumentLockFile::DocumentLockFile(rtl::OUString const&)
svt::DocumentLockFile::WriteEntryToStream(o3tl::enumarray<LockFileComponent, rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
svt::DocumentLockFile::~DocumentLockFile()
svt::DoubleNumericControl::DoubleNumericControl(BrowserDataWin*, bool)
svt::EditBrowseBox::AsynchGetFocus()
svt::EditBrowseBox::BrowserMouseEventPtr::Set(BrowserMouseEvent const*, bool)
svt::EditBrowseBox::EditBrowseBox(vcl::Window*, EditBrowseBoxFlags, long, BrowserMode)
svt::EditBrowseBox::GetImage(svt::EditBrowseBox::RowStatus) const
svt::EditBrowseBox::ResizeController(tools::SvRef<svt::CellController> const&, tools::Rectangle const&)
svt::EditBrowseBox::implCreateActiveAccessible()
svt::EditBrowseBox::~EditBrowseBox()
svt::EditCellController::EditCellController(svt::EditControlBase*)
svt::EditCellController::EditCellController(svt::IEditImplementation*)
svt::EditCellController::IsValueChangedFromSaved() const
svt::EditCellController::LinkStubModifyHdl(void*, LinkParamNone*)
svt::EditCellController::MoveAllowed(KeyEvent const&) const
svt::EditCellController::SaveValue()
svt::EditCellController::~EditCellController()
svt::EditControlBase::EditControlBase(BrowserDataWin*)
svt::EditControlBase::InitEditControlBase(weld::Entry*)
svt::EmbeddedObjectRef::EmbeddedObjectRef()
svt::EmbeddedObjectRef::EmbeddedObjectRef(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, long)
svt::EmbeddedObjectRef::EmbeddedObjectRef(svt::EmbeddedObjectRef const&)
svt::EmbeddedObjectRef::GetIsProtectedHdl() const
svt::EmbeddedObjectRef::IsChart(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
svt::EmbeddedObjectRef::IsLocked() const
svt::EmbeddedObjectRef::UpdateReplacementOnDemand()
svt::EmbeddedObjectRef::~EmbeddedObjectRef()
svt::EntryImplementation::ModifyHdl(weld::Entry&)
svt::FormattedControl::FormattedControl(BrowserDataWin*, bool)
svt::FormattedControlBase::FormattedControlBase(BrowserDataWin*, bool)
svt::FormattedControlBase::InitFormattedControlBase()
svt::FormattedControlBase::connect_changed(Link<weld::Entry&, void> const&)
svt::FormattedControlBase::connect_focus_out(Link<weld::Widget&, void> const&)
svt::FormattedControlBase::dispose()
svt::FormattedFieldCellController::CommitModifications()
svt::FormattedFieldCellController::FormattedFieldCellController(svt::FormattedControlBase*)
svt::GenDocumentLockFile::GenDocumentLockFile(rtl::OUString const&)
svt::GenDocumentLockFile::OpenStream()
svt::GenDocumentLockFile::RemoveFile()
svt::GenDocumentLockFile::~GenDocumentLockFile()
svt::IEditImplementation::~IEditImplementation()
svt::JavaContext::JavaContext(com::sun::star::uno::Reference<com::sun::star::uno::XCurrentContext> const&)
svt::JavaContext::getValueByName(rtl::OUString const&)
svt::JavaContext::queryInterface(com::sun::star::uno::Type const&)
svt::JavaContext::release()
svt::JavaContext::~JavaContext()
svt::JavaInteractionHandler::JavaInteractionHandler()
svt::JavaInteractionHandler::handle(com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
svt::JavaInteractionHandler::queryInterface(com::sun::star::uno::Type const&)
svt::JavaInteractionHandler::release()
svt::ListBoxControl::ListBoxControl(BrowserDataWin*)
svt::ListBoxControl::SetPointFont(vcl::Font const&)
svt::ListBoxControl::dispose()
svt::LockFileCommon::EscapeCharacters(rtl::OUString const&)
svt::LockFileCommon::GenerateOwnLockFileURL(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svt::LockFileCommon::GetCurrentLocalTime()
svt::LockFileCommon::GetOOOUserName()
svt::LockFileCommon::LockFileCommon(rtl::OUString const&)
svt::LockFileCommon::ParseEntry(com::sun::star::uno::Sequence<signed char> const&, int&)
svt::LockFileCommon::ParseList(com::sun::star::uno::Sequence<signed char> const&, std::vector<o3tl::enumarray<LockFileComponent, rtl::OUString>, std::allocator<o3tl::enumarray<LockFileComponent, rtl::OUString> > >&)
svt::LockFileCommon::ParseName(com::sun::star::uno::Sequence<signed char> const&, int&)
svt::LockFileCommon::SetURL(rtl::OUString const&)
svt::LockFileCommon::~LockFileCommon()
svt::LongCurrencyControl::LongCurrencyControl(BrowserDataWin*, bool)
svt::MSODocumentLockFile::IsMSOSupportedFileFormat(rtl::OUString const&)
svt::MSODocumentLockFile::MSODocumentLockFile(rtl::OUString const&)
svt::MSODocumentLockFile::OpenStream()
svt::MSODocumentLockFile::RemoveFile()
svt::MSODocumentLockFile::WriteEntryToStream(o3tl::enumarray<LockFileComponent, rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
svt::MSODocumentLockFile::getAppType(rtl::OUString const&)
svt::MSODocumentLockFile::~MSODocumentLockFile()
svt::MultiLineEditImplementation::GetSelected(LineEnd) const
svt::MultiLineEditImplementation::GetText(LineEnd) const
svt::MultiLineEditImplementation::ModifyHdl(weld::TextView&)
svt::MultiLineTextCell::GetFocus()
svt::MultiLineTextCell::MultiLineTextCell(BrowserDataWin*)
svt::MultiLineTextCell::ProcessKey(KeyEvent const&)
svt::MultiLineTextCell::dispose()
svt::OFileNotation::OFileNotation(rtl::OUString const&)
svt::OFileNotation::OFileNotation(rtl::OUString const&, svt::OFileNotation::NOTATION)
svt::OGenericUnoDialog::OGenericUnoDialog(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
svt::OGenericUnoDialog::impl_ensureDialog_lck()
svt::OGenericUnoDialog::~OGenericUnoDialog()
svt::OStringTransferable::AddSupportedFormats()
svt::OStringTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svt::OStringTransferable::OStringTransferable(rtl::OUString const&)
svt::PatternControl::PatternControl(BrowserDataWin*)
svt::PatternControl::connect_changed(Link<weld::Entry&, void> const&)
svt::PatternControl::connect_focus_out(Link<weld::Widget&, void> const&)
svt::PatternControl::dispose()
svt::PopupWindowController::PopupWindowController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&)
svt::PopupWindowController::~PopupWindowController()
svt::ShareControlFile::Close()
svt::ShareControlFile::InsertOwnEntry()
svt::ShareControlFile::RemoveEntry()
svt::ShareControlFile::RemoveEntry(o3tl::enumarray<LockFileComponent, rtl::OUString> const&)
svt::ShareControlFile::RemoveFile()
svt::ShareControlFile::SetUsersDataAndStore(std::vector<o3tl::enumarray<LockFileComponent, rtl::OUString>, std::allocator<o3tl::enumarray<LockFileComponent, rtl::OUString> > >&&)
svt::ShareControlFile::ShareControlFile(rtl::OUString const&)
svt::ShareControlFile::~ShareControlFile()
svt::StatusbarController::StatusbarController()
svt::StatusbarController::StatusbarController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&, unsigned short)
svt::StatusbarController::acquire()
svt::StatusbarController::bindListener()
svt::StatusbarController::click(com::sun::star::awt::Point const&)
svt::StatusbarController::command(com::sun::star::awt::Point const&, int, unsigned char, com::sun::star::uno::Any const&)
svt::StatusbarController::doubleClick(com::sun::star::awt::Point const&)
svt::StatusbarController::execute(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
svt::StatusbarController::getFrameInterface() const
svt::StatusbarController::getURLTransformer() const
svt::StatusbarController::mouseButtonDown(com::sun::star::awt::MouseEvent const&)
svt::StatusbarController::mouseButtonUp(com::sun::star::awt::MouseEvent const&)
svt::StatusbarController::mouseMove(com::sun::star::awt::MouseEvent const&)
svt::StatusbarController::paint(com::sun::star::uno::Reference<com::sun::star::awt::XGraphics> const&, com::sun::star::awt::Rectangle const&, int)
svt::StatusbarController::release()
svt::StatusbarController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
svt::StatusbarController::~StatusbarController()
svt::TimeControl::TimeControl(BrowserDataWin*, bool)
svt::ToolboxController::ToolboxController()
svt::ToolboxController::ToolboxController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString const&)
svt::ToolboxController::enable(bool)
svt::ToolboxController::getLayoutManager() const
svt::ToolboxController::removeStatusListener(rtl::OUString const&)
svt::ToolboxController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
svt::ToolboxController::updateStatus()
svt::ToolboxController::updateStatus(rtl::OUString const&)
svt::ToolboxController::~ToolboxController()
svt::addFilePicker(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
svt::addFolderPicker(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
svtools::ApplyLineDashing(basegfx::B2DPolygon const&, SvxBorderLineStyle, double)
svtools::ColorConfig::ColorConfig()
svtools::ColorConfig::~ColorConfig()
svtools::EditableColorConfig::EditableColorConfig()
svtools::EditableColorConfig::~EditableColorConfig()
svtools::EditableExtendedColorConfig::EditableExtendedColorConfig()
svtools::EditableExtendedColorConfig::~EditableExtendedColorConfig()
svtools::ExtendedColorConfig::ExtendedColorConfig()
svtools::ExtendedColorConfig::Notify(SfxBroadcaster&, SfxHint const&)
svtools::ExtendedColorConfig::~ExtendedColorConfig()
svtools::GetPrinterOptions(vcl::printer::Options&, bool)
svtools::QueryDeleteDlg_Impl::QueryDeleteDlg_Impl(weld::Widget*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svtools::QueryDeleteDlg_Impl::~QueryDeleteDlg_Impl()
svtools::SetPrinterOptions(vcl::printer::Options const&, bool)
svx::AccessibilityCheckDialog::AccessibilityCheckDialog(weld::Window*, sfx::AccessibilityIssueCollection const&)
svx::AccessibilityCheckDialog::~AccessibilityCheckDialog()
svx::ClassificationDialog::ClassificationDialog(weld::Window*, bool, std::function<void ()> const&)
svx::ClassificationDialog::insertCategoryField(int)
svx::ClassificationDialog::insertField(svx::ClassificationType, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
svx::ClassificationDialog::readIn(std::vector<svx::ClassificationResult, std::allocator<svx::ClassificationResult> > const&)
svx::ClassificationDialog::readRecentlyUsed()
svx::ClassificationDialog::toggleWidgetsDependingOnCategory()
svx::ClassificationDialog::writeRecentlyUsed()
svx::ClassificationDialog::~ClassificationDialog()
svx::ColorSets::ColorSets()
svx::ColorSets::~ColorSets()
svx::CommonStyleManager::CreateStylePreviewRenderer(OutputDevice&, SfxStyleSheetBase*, long)
svx::DatabaseLocationInputController::DatabaseLocationInputController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, SvtURLBox&, weld::Button&, weld::Window&)
svx::DatabaseLocationInputController::~DatabaseLocationInputController()
svx::DialControl::HandleEscapeEvent()
svx::DialControl::HandleMouseEvent(Point const&, bool)
svx::DialControl::Init(Size const&)
svx::DialControl::Init(Size const&, vcl::Font const&)
svx::DialControl::InvalidateControl()
svx::DialControl::KeyInput(KeyEvent const&)
svx::DialControl::LoseFocus()
svx::DialControl::MouseButtonDown(MouseEvent const&)
svx::DialControl::MouseButtonUp(MouseEvent const&)
svx::DialControl::MouseMove(MouseEvent const&)
svx::DialControl::Paint(OutputDevice&, tools::Rectangle const&)
svx::DialControl::Resize()
svx::DialControl::SetDrawingArea(weld::DrawingArea*)
svx::DialControl::SetModifyHdl(Link<svx::DialControl&, void> const&)
svx::DialControl::SetRotation(o3tl::strong_int<int, FractionTag<100> >, bool)
svx::ExtrusionBar::ExtrusionBar(SfxViewShell*)
svx::ExtrusionBar::GetInterface() const
svx::ExtrusionBar::GetStaticInterface()
svx::ExtrusionBar::InitInterface_Impl()
svx::ExtrusionBar::RegisterInterface(SfxModule const*)
svx::ExtrusionBar::~ExtrusionBar()
svx::FontWorkGalleryDialog::FontWorkGalleryDialog(weld::Window*, SdrView&)
svx::FontWorkGalleryDialog::fillFavorites(unsigned short)
svx::FontWorkGalleryDialog::initFavorites(unsigned short)
svx::FontWorkGalleryDialog::insertSelectedFontwork()
svx::FontWorkGalleryDialog::~FontWorkGalleryDialog()
svx::FontworkBar::FontworkBar(SfxViewShell*)
svx::FontworkBar::GetInterface() const
svx::FontworkBar::GetStaticInterface()
svx::FontworkBar::InitInterface_Impl()
svx::FontworkBar::RegisterInterface(SfxModule const*)
svx::FontworkBar::~FontworkBar()
svx::FormatPaintBrushToolBoxControl::Click()
svx::FormatPaintBrushToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::FormatPaintBrushToolBoxControl::DoubleClick()
svx::FormatPaintBrushToolBoxControl::FormatPaintBrushToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::FormatPaintBrushToolBoxControl::Select(unsigned short)
svx::FormatPaintBrushToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
svx::FormatPaintBrushToolBoxControl::impl_executePaintBrush()
svx::FormatPaintBrushToolBoxControl::~FormatPaintBrushToolBoxControl()
svx::FrameDirectionListBox::~FrameDirectionListBox()
svx::FrameSelector::CreateAccessible()
svx::FrameSelector::FrameSelector()
svx::FrameSelector::GetChildAccessible(Point const&)
svx::FrameSelector::GetChildAccessible(int)
svx::FrameSelector::GetChildAccessible(svx::FrameBorderType)
svx::FrameSelector::GetClickBoundRect(svx::FrameBorderType) const
svx::FrameSelector::GetEnabledBorderCount() const
svx::FrameSelector::GetEnabledBorderType(int) const
svx::FrameSelector::GetFocus()
svx::FrameSelector::GetSelectHdl() const
svx::FrameSelector::IsBorderSelected(svx::FrameBorderType) const
svx::FrameSelector::KeyInput(KeyEvent const&)
svx::FrameSelector::LoseFocus()
svx::FrameSelector::MouseButtonDown(MouseEvent const&)
svx::FrameSelector::Paint(OutputDevice&, tools::Rectangle const&)
svx::FrameSelector::Resize()
svx::FrameSelector::SetDrawingArea(weld::DrawingArea*)
svx::FrameSelector::StyleUpdated()
svx::FrameSelector::SupportsDontCareState() const
svx::FrameSelector::~FrameSelector()
svx::IPropertyValueProvider::~IPropertyValueProvider()
svx::ISdrObjectFilter::~ISdrObjectFilter()
svx::OColumnTransferable::AddSupportedFormats()
svx::OColumnTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::OColumnTransferable::OColumnTransferable(ColumnTransferFormatFlags)
svx::OColumnTransferable::OColumnTransferable(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, ColumnTransferFormatFlags)
svx::OColumnTransferable::extractColumnDescriptor(TransferableDataHelper const&, rtl::OUString&, rtl::OUString&, rtl::OUString&, int&, rtl::OUString&, rtl::OUString&)
svx::OColumnTransferable::getDescriptorFormatId()
svx::OColumnTransferable::setDescriptor(svx::ODataAccessDescriptor const&)
svx::OComponentTransferable::AddSupportedFormats()
svx::OComponentTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::OComponentTransferable::OComponentTransferable()
svx::OComponentTransferable::getDescriptorFormatId(bool)
svx::ODataAccessDescriptor::ODataAccessDescriptor()
svx::ODataAccessDescriptor::ODataAccessDescriptor(com::sun::star::uno::Any const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(svx::ODataAccessDescriptor const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(svx::ODataAccessDescriptor&&)
svx::ODataAccessDescriptor::operator=(svx::ODataAccessDescriptor const&)
svx::ODataAccessDescriptor::~ODataAccessDescriptor()
svx::ODataAccessObjectTransferable::ODataAccessObjectTransferable()
svx::ODataAccessObjectTransferable::ODataAccessObjectTransferable(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
svx::OMultiColumnTransferable::AddSupportedFormats()
svx::OMultiColumnTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::OMultiColumnTransferable::OMultiColumnTransferable()
svx::OMultiColumnTransferable::ObjectReleased()
svx::OMultiColumnTransferable::getDescriptorFormatId()
svx::OXFormsTransferable::AddSupportedFormats()
svx::OXFormsTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::OXFormsTransferable::OXFormsTransferable(svx::OXFormsDescriptor const&)
svx::ParaAboveSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaAboveSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaAboveSpacingControl::ParaAboveSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaBelowSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaBelowSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaBelowSpacingControl::ParaBelowSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaFirstLineSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaFirstLineSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaFirstLineSpacingControl::ParaFirstLineSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaLeftSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaLeftSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaLeftSpacingControl::ParaLeftSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaRightSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaRightSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaRightSpacingControl::ParaRightSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::PropertyChangeNotifier::PropertyChangeNotifier(cppu::OWeakObject&, osl::Mutex&)
svx::PropertyChangeNotifier::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
svx::PropertyChangeNotifier::disposing()
svx::PropertyChangeNotifier::notifyPropertyChange(svx::ShapeProperty) const
svx::PropertyChangeNotifier::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
svx::PropertyChangeNotifier::~PropertyChangeNotifier()
svx::PropertyValueProvider::getCurrentValue(com::sun::star::uno::Any&) const
svx::PropertyValueProvider::getPropertyName() const
svx::SpellDialogChildWindow::SpellDialogChildWindow(vcl::Window*, unsigned short, SfxBindings*)
svx::SpellDialogChildWindow::~SpellDialogChildWindow()
svx::Theme::GetColorSet()
svx::Theme::GetName() const
svx::Theme::SetColorSet(std::unique_ptr<svx::ColorSet, std::default_delete<svx::ColorSet> >)
svx::Theme::SetName(rtl::OUString const&)
svx::Theme::Theme(rtl::OUString const&)
svx::Theme::dumpAsXml(_xmlTextWriter*) const
svx::Theme::~Theme()
svx::ToolboxAccess::ToolboxAccess(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::checkForFontWork(SdrObject const*)
svx::classification::containsProperty(com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::classification::convertClassificationResultToString(std::vector<svx::ClassificationResult, std::allocator<svx::ClassificationResult> > const&)
svx::frame::Array::Array()
svx::frame::Array::GetCellCount() const
svx::frame::Array::GetCellStyleBL(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleBLTR(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleBR(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleBottom(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleLeft(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleRight(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleTL(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleTLBR(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleTR(unsigned long, unsigned long) const
svx::frame::Array::GetCellStyleTop(unsigned long, unsigned long) const
svx::frame::Array::GetColPosition(unsigned long) const
svx::frame::Array::GetColWidth(unsigned long, unsigned long) const
svx::frame::Array::GetMergedOrigin(unsigned long&, unsigned long&, unsigned long, unsigned long) const
svx::frame::Array::GetMergedRange(unsigned long&, unsigned long&, unsigned long&, unsigned long&, unsigned long, unsigned long) const
svx::frame::Array::GetRowHeight(unsigned long, unsigned long) const
svx::frame::Array::GetRowPosition(unsigned long) const
svx::frame::Array::SetCellStyleDiag(unsigned long, unsigned long, svx::frame::Style const&, svx::frame::Style const&)
svx::frame::Array::SetColumnStyleLeft(unsigned long, svx::frame::Style const&)
svx::frame::Array::SetColumnStyleRight(unsigned long, svx::frame::Style const&)
svx::frame::Array::SetRowStyleBottom(unsigned long, svx::frame::Style const&)
svx::frame::Array::SetRowStyleTop(unsigned long, svx::frame::Style const&)
svx::frame::Array::~Array()
svx::frame::Style::Clear()
svx::frame::Style::Set(double, double, double)
svx::frame::Style::Style()
svx::frame::Style::Style(Color const&, Color const&, Color const&, bool, double, double, double, SvxBorderLineStyle, double)
svx::frame::Style::Style(double, double, double, SvxBorderLineStyle, double)
svx::frame::Style::Style(editeng::SvxBorderLine const*, double)
svx::sidebar::AreaPropertyPanelBase::AreaPropertyPanelBase(weld::Widget*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
svx::sidebar::AreaPropertyPanelBase::GetGradient(com::sun::star::awt::GradientStyle) const
svx::sidebar::AreaPropertyPanelBase::GetSelectedTransparencyTypeIndex() const
svx::sidebar::AreaPropertyPanelBase::ImpUpdateTransparencies()
svx::sidebar::AreaPropertyPanelBase::Initialize()
svx::sidebar::AreaPropertyPanelBase::SelectFillAttrHdl_Impl()
svx::sidebar::AreaPropertyPanelBase::SetGradient(XGradient const&)
svx::sidebar::AreaPropertyPanelBase::SetTransparency(unsigned short)
svx::sidebar::AreaPropertyPanelBase::Update()
svx::sidebar::AreaPropertyPanelBase::~AreaPropertyPanelBase()
svx::sidebar::InspectorTextPanel::Create(weld::Widget*)
svx::sidebar::InspectorTextPanel::InspectorTextPanel(weld::Widget*)
svx::sidebar::InspectorTextPanel::~InspectorTextPanel()
svx::sidebar::LinePropertyPanelBase::ActivateControls()
svx::sidebar::LinePropertyPanelBase::EndLineWidthPopup()
svx::sidebar::LinePropertyPanelBase::Initialize()
svx::sidebar::LinePropertyPanelBase::LinePropertyPanelBase(weld::Widget*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
svx::sidebar::LinePropertyPanelBase::SetWidth(long)
svx::sidebar::LinePropertyPanelBase::SetWidthIcon()
svx::sidebar::LinePropertyPanelBase::SetWidthIcon(int)
svx::sidebar::LinePropertyPanelBase::enableArrowHead()
svx::sidebar::LinePropertyPanelBase::updateLineCap(bool, bool, SfxPoolItem const*)
svx::sidebar::LinePropertyPanelBase::updateLineJoint(bool, bool, SfxPoolItem const*)
svx::sidebar::LinePropertyPanelBase::~LinePropertyPanelBase()
svx::sidebar::NBOTypeMgrBase::ImplLoad(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::sidebar::NBOTypeMgrBase::ImplStore(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::sidebar::NBOTypeMgrBase::IsSingleLevel(unsigned short)
svx::sidebar::SelectionAnalyzer::GetContextForObjectId_SC(unsigned short)
svx::sidebar::SelectionAnalyzer::GetContextForObjectId_SD(unsigned short, svx::sidebar::SelectionAnalyzer::ViewType)
svx::sidebar::SelectionAnalyzer::GetInventorTypeFromMark(SdrMarkList const&)
svx::sidebar::SelectionAnalyzer::GetObjectTypeFromGroup(SdrObject const*)
svx::sidebar::SelectionAnalyzer::GetObjectTypeFromMark(SdrMarkList const&)
svx::sidebar::SelectionAnalyzer::IsShapeType(unsigned short)
svx::sidebar::SelectionAnalyzer::IsTextObjType(unsigned short)
svx::sidebar::SelectionChangeHandler::SelectionChangeHandler(std::function<rtl::OUString ()> const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&, vcl::EnumContext::Context)
svx::sidebar::SelectionChangeHandler::disposing()
svx::sidebar::SelectionChangeHandler::disposing(com::sun::star::lang::EventObject const&)
svx::sidebar::SelectionChangeHandler::selectionChanged(com::sun::star::lang::EventObject const&)
svx::sidebar::SelectionChangeHandler::~SelectionChangeHandler()
svx::sidebar::ValueSetWithTextControl::ValueSetWithTextControl()
svxform::FmSearchConfigItem::FmSearchConfigItem()
svxform::FmSearchConfigItem::~FmSearchConfigItem()
svxform::FmSearchParams::FmSearchParams()
svxform::ImplSmartRegisterUnoServices()
svxform::OParseContextClient::OParseContextClient()
svxform::OParseContextClient::~OParseContextClient()
svxform::OSystemParseContext::OSystemParseContext()
svxform::OSystemParseContext::~OSystemParseContext()
sw::AccessibilityCheck::checkObject(SdrObject*)
sw::BroadcastingModify::CallSwClientNotify(SfxHint const&) const
sw::FindSdrObjectHint::~FindSdrObjectHint()
sw::IndexingExport::IndexingExport(SvStream&, SwDoc*)
sw::MetaFieldManager::MetaFieldManager()
sw::MetaFieldManager::copyDocumentProperties(SwDoc const&)
sw::MetaFieldManager::getMetaFields()
sw::MetaFieldManager::makeMetaField(SwFormatMeta*, unsigned int, bool)
sw::UndoManager::AddUndoAction(std::unique_ptr<SfxUndoAction, std::default_delete<SfxUndoAction> >, bool)
sw::UndoManager::AppendUndo(std::unique_ptr<SwUndo, std::default_delete<SwUndo> >)
sw::UndoManager::ClearRedo()
sw::UndoManager::DelAllUndoObj()
sw::UndoManager::DoDrawUndo(bool)
sw::UndoManager::DoGroupUndo(bool)
sw::UndoManager::DoRepair(bool)
sw::UndoManager::DoUndo(bool)
sw::UndoManager::DoesDrawUndo() const
sw::UndoManager::DoesGroupUndo() const
sw::UndoManager::DoesRepair() const
sw::UndoManager::DoesUndo() const
sw::UndoManager::EmptyActionsChanged()
sw::UndoManager::GetFirstRedoInfo(rtl::OUString*, SwUndoId*, SwView const*) const
sw::UndoManager::GetLastUndo()
sw::UndoManager::GetLastUndoInfo(rtl::OUString*, SwUndoId*, SwView const*) const
sw::UndoManager::GetRedoActionCount(bool) const
sw::UndoManager::GetRedoComments() const
sw::UndoManager::GetRepeatInfo(rtl::OUString*) const
sw::UndoManager::GetUndoActionCount(bool) const
sw::UndoManager::GetUndoComments() const
sw::UndoManager::GetUndoNodes()
sw::UndoManager::GetUndoNodes() const
sw::UndoManager::IsUndoNoResetModified() const
sw::UndoManager::IsUndoNodes(SwNodes const&) const
sw::UndoManager::IsViewUndoActionIndependent(SwView const*, unsigned short&) const
sw::UndoManager::LockUndoNoModifiedPosition()
sw::UndoManager::Redo()
sw::UndoManager::RemoveLastUndo()
sw::UndoManager::Repeat(sw::RepeatContext&, unsigned short)
sw::UndoManager::SetDocShell(SwDocShell*)
sw::UndoManager::SetUndoNoModifiedPosition()
sw::UndoManager::SetUndoNoResetModified()
sw::UndoManager::UnLockUndoNoModifiedPosition()
sw::UndoManager::Undo()
sw::UndoManager::UndoManager(std::shared_ptr<SwNodes> const&, IDocumentDrawModelAccess&, IDocumentRedlineAccess&, IDocumentState&)
sw::UndoManager::UndoWithOffset(unsigned long)
sw::UndoManager::dumpAsXml(_xmlTextWriter*) const
sw::UndoManager::impl_DoUndoRedo(sw::UndoManager::UndoOrRedoType, unsigned long)
sw::UnoCursorHint::~UnoCursorHint()
sw::WW8AnchorConvHint::~WW8AnchorConvHint()
sw::WriterMultiListener::EndListening(SwModify*)
sw::WriterMultiListener::EndListeningAll()
sw::WriterMultiListener::IsListeningTo(SwModify const*) const
sw::WriterMultiListener::StartListening(SwModify*)
sw::WriterMultiListener::WriterMultiListener(SwClient&)
sw::WriterMultiListener::~WriterMultiListener()
sw::search::SearchResultLocator::findOne(sw::search::LocationResult&, sw::search::SearchIndexData const&)
sw::search::SearchResultLocator::tryParseJSON(char const*, std::vector<sw::search::SearchIndexData, std::allocator<sw::search::SearchIndexData> >&)
sw::search::SearchResultLocator::tryParseXML(char const*, std::vector<sw::search::SearchIndexData, std::allocator<sw::search::SearchIndexData> >&)
swapINT
swapPTR
swapREAL
symamd
symamd_report
termPQExpBuffer
timeNow
time_elapsed
toBool(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
toolkitform::describePDFControl(com::sun::star::uno::Reference<com::sun::star::awt::XControl> const&, vcl::PDFExtOutDevData&)
tools::IsMappedWebDAVPath(rtl::OUString const&, rtl::OUString*)
tools::JsonWriter::JsonWriter()
tools::JsonWriter::addCommaBeforeField()
tools::JsonWriter::ensureSpace(int)
tools::JsonWriter::isDataEquals(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
tools::JsonWriter::put(char const*, double)
tools::JsonWriter::putSimpleValue(rtl::OUString const&)
tools::JsonWriter::writeEscapedOUString(rtl::OUString const&)
tools::JsonWriter::~JsonWriter()
tools::Line::GetDistance(double const&, double const&) const
tools::Line::Intersection(tools::Line const&, Point&) const
tools::Line::Intersection(tools::Line const&, double&, double&) const
tools::PolyPolygon::AdaptiveSubdivide(tools::PolyPolygon&) const
tools::PolyPolygon::GetIntersection(tools::PolyPolygon const&, tools::PolyPolygon&) const
tools::PolyPolygon::GetUnion(tools::PolyPolygon const&, tools::PolyPolygon&) const
tools::PolyPolygon::IsRect() const
tools::PolyPolygon::PolyPolygon(basegfx::B2DPolyPolygon const&)
tools::PolyPolygon::PolyPolygon(tools::PolyPolygon const&)
tools::PolyPolygon::PolyPolygon(tools::PolyPolygon&&)
tools::PolyPolygon::PolyPolygon(tools::Polygon const&)
tools::PolyPolygon::PolyPolygon(unsigned short)
tools::PolyPolygon::Read(SvStream&)
tools::PolyPolygon::Remove(unsigned short)
tools::PolyPolygon::Replace(tools::Polygon const&, unsigned short)
tools::PolyPolygon::Rotate(Point const&, double, double)
tools::PolyPolygon::SubdivideBezier(tools::PolyPolygon const&)
tools::PolyPolygon::Translate(Point const&)
tools::PolyPolygon::Write(SvStream&) const
tools::PolyPolygon::~PolyPolygon()
tools::Polygon::AdaptiveSubdivide(tools::Polygon&, double) const
tools::Polygon::CalcDistance(unsigned short, unsigned short) const
tools::Polygon::Clear()
tools::Polygon::Clip(tools::Rectangle const&)
tools::Polygon::Contains(Point const&) const
tools::Polygon::GetConstFlagAry() const
tools::Polygon::GetConstPointAry() const
tools::Polygon::GetPointAry()
tools::Polygon::HasFlags() const
tools::Polygon::ImplRead(SvStream&)
tools::Polygon::ImplReduceEdges(tools::Polygon&, double const&, unsigned short)
tools::Polygon::ImplWrite(SvStream&) const
tools::Polygon::Insert(unsigned short, tools::Polygon const&)
tools::Polygon::IsRect() const
tools::Polygon::Polygon()
tools::Polygon::Polygon(Point const&, Point const&, Point const&, Point const&, unsigned short)
tools::Polygon::Polygon(Point const&, long, long)
tools::Polygon::Polygon(basegfx::B2DPolygon const&)
tools::Polygon::Polygon(tools::Polygon const&)
tools::Polygon::Polygon(tools::Polygon&&)
tools::Polygon::Polygon(tools::Rectangle const&)
tools::Polygon::Polygon(tools::Rectangle const&, Point const&, Point const&, PolyStyle)
tools::Polygon::Polygon(tools::Rectangle const&, unsigned int, unsigned int)
tools::Polygon::Polygon(unsigned short)
tools::Polygon::Polygon(unsigned short, Point const*, PolyFlags const*)
tools::Polygon::Read(SvStream&)
tools::Polygon::Rotate(Point const&, double, double)
tools::Polygon::SetSize(unsigned short)
tools::Polygon::SubdivideBezier(tools::Polygon const&)
tools::Polygon::Translate(Point const&)
tools::Polygon::Write(SvStream&) const
tools::Polygon::~Polygon()
tools::ReadPolyPolygon(SvStream&, tools::PolyPolygon&)
tools::ReadPolygon(SvStream&, tools::Polygon&)
tools::Rectangle::shrink(long)
tools::Time::GetMonotonicTicks()
tools::Time::GetNSFromTime() const
tools::Time::MakeTimeFromNS(long)
tools::Time::Time(com::sun::star::util::DateTime const&)
tools::Time::Time(com::sun::star::util::Time const&)
tools::Time::Time(tools::Time::TimeInitSystem)
tools::Time::Time(unsigned int, unsigned int, unsigned int, unsigned long)
tools::Time::init(unsigned int, unsigned int, unsigned int, unsigned long)
tools::WeakBase::~WeakBase()
tools::WritePolyPolygon(SvStream&, tools::PolyPolygon const&)
tools::WritePolygon(SvStream&, tools::Polygon const&)
tools::XmlWalker::XmlWalker()
tools::XmlWalker::~XmlWalker()
tools::XmlWriter::XmlWriter(SvStream*)
tools::XmlWriter::attributeBase64(rtl::OString const&, std::vector<char, std::allocator<char> > const&)
tools::XmlWriter::attributeDouble(rtl::OString const&, double)
tools::XmlWriter::element(rtl::OString const&)
tools::XmlWriter::~XmlWriter()
tools::isEmptyFileUrl(rtl::OUString const&)
tools::operator+(tools::Time const&, tools::Time const&)
transfer_solution
transfer_solution_var
transform_for_scale
u16_u8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<w_char, std::allocator<w_char> > const&)
u8_u16(std::vector<w_char, std::allocator<w_char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
ucbhelper::AuthenticationFallbackRequest::AuthenticationFallbackRequest(rtl::OUString const&, rtl::OUString const&)
ucbhelper::CommandEnvironment::CommandEnvironment(com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XProgressHandler> const&)
ucbhelper::CommandEnvironment::getInteractionHandler()
ucbhelper::CommandEnvironment::getProgressHandler()
ucbhelper::CommandEnvironment::~CommandEnvironment()
ucbhelper::Content::Content()
ucbhelper::Content::Content(com::sun::star::uno::Reference<com::sun::star::ucb::XContent> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ucbhelper::Content::Content(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ucbhelper::Content::Content(ucbhelper::Content const&)
ucbhelper::Content::Content(ucbhelper::Content&&)
ucbhelper::Content::create(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, ucbhelper::Content&)
ucbhelper::Content::createCursorAny(com::sun::star::uno::Sequence<rtl::OUString> const&, ucbhelper::ResultSetInclude)
ucbhelper::Content::createSortedCursor(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::ucb::NumberedSortingInfo> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XAnyCompareFactory> const&, ucbhelper::ResultSetInclude)
ucbhelper::Content::getCommandEnvironment() const
ucbhelper::Content::getProperties()
ucbhelper::Content::getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&)
ucbhelper::Content::getPropertyValuesInterface(com::sun::star::uno::Sequence<rtl::OUString> const&)
ucbhelper::Content::getURL() const
ucbhelper::Content::insertNewContent(rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, ucbhelper::Content&)
ucbhelper::Content::lock()
ucbhelper::Content::openStream(com::sun::star::uno::Reference<com::sun::star::io::XActiveDataSink> const&)
ucbhelper::Content::openStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
ucbhelper::Content::openStreamNoLock()
ucbhelper::Content::openWriteableStream()
ucbhelper::Content::openWriteableStreamNoLock()
ucbhelper::Content::queryCreatableContentsInfo()
ucbhelper::Content::setCommandEnvironment(com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
ucbhelper::Content::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ucbhelper::Content::setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ucbhelper::Content::unlock()
ucbhelper::Content::writeStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
ucbhelper::Content::~Content()
ucbhelper::ContentIdentifier::ContentIdentifier(rtl::OUString const&)
ucbhelper::ContentIdentifier::getContentIdentifier()
ucbhelper::ContentIdentifier::getContentProviderScheme()
ucbhelper::ContentIdentifier::~ContentIdentifier()
ucbhelper::ContentImplHelper::ContentImplHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::Reference<ucbhelper::ContentProviderImplHelper> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XContentIdentifier> const&)
ucbhelper::ContentImplHelper::copyAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&)
ucbhelper::ContentImplHelper::getImplementationId()
ucbhelper::ContentImplHelper::getTypes()
ucbhelper::ContentImplHelper::notifyContentEvent(com::sun::star::ucb::ContentEvent const&) const
ucbhelper::ContentImplHelper::~ContentImplHelper()
ucbhelper::ContentProviderImplHelper::ContentProviderImplHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ucbhelper::ContentProviderImplHelper::copyAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&, bool)
ucbhelper::ContentProviderImplHelper::queryExistingContent(rtl::OUString const&)
ucbhelper::ContentProviderImplHelper::removeAdditionalPropertySet(rtl::OUString const&, bool)
ucbhelper::ContentProviderImplHelper::renameAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&, bool)
ucbhelper::ContentProviderImplHelper::supportsService(rtl::OUString const&)
ucbhelper::ContentProviderImplHelper::~ContentProviderImplHelper()
ucbhelper::FdInputStream::FdInputStream(void*)
ucbhelper::FdInputStream::available()
ucbhelper::FdInputStream::closeInput()
ucbhelper::FdInputStream::getLength()
ucbhelper::FdInputStream::getPosition()
ucbhelper::FdInputStream::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
ucbhelper::FdInputStream::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
ucbhelper::FdInputStream::seek(long)
ucbhelper::FdInputStream::skipBytes(int)
ucbhelper::FdInputStream::~FdInputStream()
ucbhelper::InteractionAbort::getImplementationId()
ucbhelper::InteractionAbort::getTypes()
ucbhelper::InteractionAbort::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionAbort::select()
ucbhelper::InteractionAuthFallback::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionAuthFallback::select()
ucbhelper::InteractionAuthFallback::setCode(rtl::OUString const&)
ucbhelper::InteractionContinuation::InteractionContinuation(ucbhelper::InteractionRequest*)
ucbhelper::InteractionContinuation::recordSelection()
ucbhelper::InteractionContinuation::~InteractionContinuation()
ucbhelper::InteractionRequest::InteractionRequest()
ucbhelper::InteractionRequest::InteractionRequest(com::sun::star::uno::Any const&)
ucbhelper::InteractionRequest::getContinuations()
ucbhelper::InteractionRequest::getRequest()
ucbhelper::InteractionRequest::setContinuations(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::task::XInteractionContinuation> > const&)
ucbhelper::InteractionRequest::setRequest(com::sun::star::uno::Any const&)
ucbhelper::InteractionRequest::setSelection(rtl::Reference<ucbhelper::InteractionContinuation> const&)
ucbhelper::InteractionRequest::~InteractionRequest()
ucbhelper::InteractionRetry::getImplementationId()
ucbhelper::InteractionRetry::getTypes()
ucbhelper::InteractionRetry::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionRetry::select()
ucbhelper::InterceptedInteraction::InterceptedInteraction()
ucbhelper::InterceptedInteraction::intercepted(ucbhelper::InterceptedInteraction::InterceptedRequest const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
ucbhelper::InternetProxyDecider::InternetProxyDecider(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ucbhelper::InternetProxyDecider::~InternetProxyDecider()
ucbhelper::PropertyValueSet::PropertyValueSet(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
ucbhelper::PropertyValueSet::findColumn(rtl::OUString const&)
ucbhelper::PropertyValueSet::getArray(int)
ucbhelper::PropertyValueSet::getBinaryStream(int)
ucbhelper::PropertyValueSet::getBlob(int)
ucbhelper::PropertyValueSet::getBoolean(int)
ucbhelper::PropertyValueSet::getByte(int)
ucbhelper::PropertyValueSet::getBytes(int)
ucbhelper::PropertyValueSet::getCharacterStream(int)
ucbhelper::PropertyValueSet::getClob(int)
ucbhelper::PropertyValueSet::getDate(int)
ucbhelper::PropertyValueSet::getDouble(int)
ucbhelper::PropertyValueSet::getFloat(int)
ucbhelper::PropertyValueSet::getInt(int)
ucbhelper::PropertyValueSet::getLong(int)
ucbhelper::PropertyValueSet::getObject(int, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
ucbhelper::PropertyValueSet::getRef(int)
ucbhelper::PropertyValueSet::getShort(int)
ucbhelper::PropertyValueSet::getString(int)
ucbhelper::PropertyValueSet::getTime(int)
ucbhelper::PropertyValueSet::getTimestamp(int)
ucbhelper::PropertyValueSet::wasNull()
ucbhelper::PropertyValueSet::~PropertyValueSet()
ucbhelper::ResultSet::ResultSet(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, rtl::Reference<ucbhelper::ResultSetDataSupplier> const&)
ucbhelper::ResultSet::ResultSet(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, rtl::Reference<ucbhelper::ResultSetDataSupplier> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
ucbhelper::ResultSet::absolute(int)
ucbhelper::ResultSet::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
ucbhelper::ResultSet::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ucbhelper::ResultSet::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ucbhelper::ResultSet::afterLast()
ucbhelper::ResultSet::beforeFirst()
ucbhelper::ResultSet::close()
ucbhelper::ResultSet::dispose()
ucbhelper::ResultSet::first()
ucbhelper::ResultSet::getArray(int)
ucbhelper::ResultSet::getBinaryStream(int)
ucbhelper::ResultSet::getBlob(int)
ucbhelper::ResultSet::getBoolean(int)
ucbhelper::ResultSet::getByte(int)
ucbhelper::ResultSet::getBytes(int)
ucbhelper::ResultSet::getCharacterStream(int)
ucbhelper::ResultSet::getClob(int)
ucbhelper::ResultSet::getDate(int)
ucbhelper::ResultSet::getDouble(int)
ucbhelper::ResultSet::getFloat(int)
ucbhelper::ResultSet::getImplementationName()
ucbhelper::ResultSet::getInt(int)
ucbhelper::ResultSet::getLong(int)
ucbhelper::ResultSet::getMetaData()
ucbhelper::ResultSet::getObject(int, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
ucbhelper::ResultSet::getPropertySetInfo()
ucbhelper::ResultSet::getPropertyValue(rtl::OUString const&)
ucbhelper::ResultSet::getRef(int)
ucbhelper::ResultSet::getRow()
ucbhelper::ResultSet::getShort(int)
ucbhelper::ResultSet::getStatement()
ucbhelper::ResultSet::getString(int)
ucbhelper::ResultSet::getSupportedServiceNames()
ucbhelper::ResultSet::getTime(int)
ucbhelper::ResultSet::getTimestamp(int)
ucbhelper::ResultSet::isAfterLast()
ucbhelper::ResultSet::isBeforeFirst()
ucbhelper::ResultSet::isFirst()
ucbhelper::ResultSet::isLast()
ucbhelper::ResultSet::last()
ucbhelper::ResultSet::next()
ucbhelper::ResultSet::previous()
ucbhelper::ResultSet::propertyChanged(com::sun::star::beans::PropertyChangeEvent const&) const
ucbhelper::ResultSet::queryContent()
ucbhelper::ResultSet::queryContentIdentifier()
ucbhelper::ResultSet::queryContentIdentifierString()
ucbhelper::ResultSet::refreshRow()
ucbhelper::ResultSet::relative(int)
ucbhelper::ResultSet::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
ucbhelper::ResultSet::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
ucbhelper::ResultSet::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
ucbhelper::ResultSet::rowDeleted()
ucbhelper::ResultSet::rowInserted()
ucbhelper::ResultSet::rowUpdated()
ucbhelper::ResultSet::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ucbhelper::ResultSet::supportsService(rtl::OUString const&)
ucbhelper::ResultSet::wasNull()
ucbhelper::ResultSet::~ResultSet()
ucbhelper::ResultSetImplHelper::ResultSetImplHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::ucb::OpenCommandArgument2 const&)
ucbhelper::ResultSetImplHelper::~ResultSetImplHelper()
ucbhelper::ResultSetMetaData::ResultSetMetaData(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&)
ucbhelper::ResultSetMetaData::ResultSetMetaData(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, std::vector<ucbhelper::ResultSetColumnData, std::allocator<ucbhelper::ResultSetColumnData> >&&)
ucbhelper::ResultSetMetaData::getCatalogName(int)
ucbhelper::ResultSetMetaData::getColumnCount()
ucbhelper::ResultSetMetaData::getColumnDisplaySize(int)
ucbhelper::ResultSetMetaData::getColumnLabel(int)
ucbhelper::ResultSetMetaData::getColumnName(int)
ucbhelper::ResultSetMetaData::getColumnServiceName(int)
ucbhelper::ResultSetMetaData::getColumnType(int)
ucbhelper::ResultSetMetaData::getColumnTypeName(int)
ucbhelper::ResultSetMetaData::getPrecision(int)
ucbhelper::ResultSetMetaData::getScale(int)
ucbhelper::ResultSetMetaData::getSchemaName(int)
ucbhelper::ResultSetMetaData::getTableName(int)
ucbhelper::ResultSetMetaData::isAutoIncrement(int)
ucbhelper::ResultSetMetaData::isCaseSensitive(int)
ucbhelper::ResultSetMetaData::isCurrency(int)
ucbhelper::ResultSetMetaData::isDefinitelyWritable(int)
ucbhelper::ResultSetMetaData::isNullable(int)
ucbhelper::ResultSetMetaData::isReadOnly(int)
ucbhelper::ResultSetMetaData::isSearchable(int)
ucbhelper::ResultSetMetaData::isSigned(int)
ucbhelper::ResultSetMetaData::isWritable(int)
ucbhelper::ResultSetMetaData::~ResultSetMetaData()
ucbhelper::SimpleAuthenticationRequest::SimpleAuthenticationRequest(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, bool)
ucbhelper::SimpleAuthenticationRequest::SimpleAuthenticationRequest(rtl::OUString const&, rtl::OUString const&, ucbhelper::SimpleAuthenticationRequest::EntityType, rtl::OUString const&, ucbhelper::SimpleAuthenticationRequest::EntityType, rtl::OUString const&, ucbhelper::SimpleAuthenticationRequest::EntityType, rtl::OUString const&)
ucbhelper::SimpleAuthenticationRequest::initialize(com::sun::star::ucb::URLAuthenticationRequest const&, bool, bool, bool, bool, bool, bool)
ucbhelper::SimpleCertificateValidationRequest::SimpleCertificateValidationRequest(int, com::sun::star::uno::Reference<com::sun::star::security::XCertificate> const&, rtl::OUString const&)
ucbhelper::SimpleInteractionRequest::SimpleInteractionRequest(com::sun::star::uno::Any const&, ContinuationFlags)
ucbhelper::registerAtUcb(com::sun::star::uno::Reference<com::sun::star::ucb::XContentProviderManager> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
undoscale
unicode::getExemplarLanguageForUScriptCode(UScriptCode)
unicode::getScriptClassFromUScriptCode(UScriptCode)
unicode::getUnicodeDirection(char16_t)
unicode::getUnicodeScriptEnd(com::sun::star::i18n::UnicodeScript)
unicode::getUnicodeScriptStart(com::sun::star::i18n::UnicodeScript)
unicode::getUnicodeType(char16_t)
unicode::isAlpha(char16_t)
unicode::isControl(char16_t)
unicode::isSpace(char16_t)
unicode_normalize
unicode_to_utf8
unicodeisalpha(unsigned short)
unicodetolower(unsigned short, int)
unicodetoupper(unsigned short, int)
uniqlist(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
unit_lok_process_events_to_idle
unit_online_get_fonts
unload_BB
unload_BLAS
unload_basis
unpackPackedVector
unscale
unscale_columns
unscaled_mat
unscaled_value
unset_OF_p1extra
updatePricer
update_pseudocost
update_reducedcosts
updatecuts_BB
upper_utf(w_char, int)
userabort
utf8_to_unicode
utl::AccessibleRelationSetHelper::AccessibleRelationSetHelper()
utl::AccessibleRelationSetHelper::AccessibleRelationSetHelper(utl::AccessibleRelationSetHelper const&)
utl::AccessibleRelationSetHelper::containsRelation(short)
utl::AccessibleRelationSetHelper::getImplementationId()
utl::AccessibleRelationSetHelper::getRelation(int)
utl::AccessibleRelationSetHelper::getRelationByType(short)
utl::AccessibleRelationSetHelper::getRelationCount()
utl::AccessibleRelationSetHelper::getTypes()
utl::AccessibleRelationSetHelper::~AccessibleRelationSetHelper()
utl::AccessibleStateSetHelper::AccessibleStateSetHelper()
utl::AccessibleStateSetHelper::AccessibleStateSetHelper(long)
utl::AccessibleStateSetHelper::AccessibleStateSetHelper(utl::AccessibleStateSetHelper const&)
utl::AccessibleStateSetHelper::contains(short)
utl::AccessibleStateSetHelper::containsAll(com::sun::star::uno::Sequence<short> const&)
utl::AccessibleStateSetHelper::getImplementationId()
utl::AccessibleStateSetHelper::getStates()
utl::AccessibleStateSetHelper::getTypes()
utl::AccessibleStateSetHelper::isEmpty()
utl::AccessibleStateSetHelper::~AccessibleStateSetHelper()
utl::Bootstrap::data()
utl::Bootstrap::locateUserData(rtl::OUString&)
utl::CloseVeto::CloseVeto(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, bool)
utl::CloseVeto::~CloseVeto()
utl::CloseableComponent::CloseableComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
utl::CloseableComponent::~CloseableComponent()
utl::ConfigItem::CallNotify(com::sun::star::uno::Sequence<rtl::OUString> const&)
utl::ConfigItem::ClearNodeSet(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&)
utl::ConfigItem::ConfigItem(rtl::OUString const&, ConfigItemMode)
utl::ConfigItem::GetNodeNames(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&, utl::ConfigNameFormat)
utl::ConfigItem::GetNodeNames(rtl::OUString const&, utl::ConfigNameFormat)
utl::ConfigItem::GetProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, com::sun::star::uno::Sequence<rtl::OUString> const&, bool)
utl::ConfigItem::GetReadOnlyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
utl::ConfigItem::GetTree()
utl::ConfigItem::PutProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, bool)
utl::ConfigItem::RemoveChangesListener()
utl::ConfigItem::ReplaceSetProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, bool)
utl::ConfigItem::SetSetProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
utl::ConfigItem::impl_packLocalizedProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
utl::ConfigItem::impl_unpackLocalizedProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<rtl::OUString>&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
utl::ConfigItem::~ConfigItem()
utl::ConfigManager::acquireTree(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
utl::ConfigManager::doStoreConfigItems()
utl::ConfigManager::getDefaultCurrency()
utl::ConfigurationBroadcaster::ConfigurationBroadcaster()
utl::ConfigurationBroadcaster::ConfigurationBroadcaster(utl::ConfigurationBroadcaster const&)
utl::ConfigurationBroadcaster::NotifyListeners(ConfigurationHints)
utl::ConfigurationBroadcaster::operator=(utl::ConfigurationBroadcaster const&)
utl::ConfigurationBroadcaster::~ConfigurationBroadcaster()
utl::ConfigurationListener::~ConfigurationListener()
utl::DefaultFontConfiguration::DefaultFontConfiguration()
utl::DefaultFontConfiguration::get()
utl::DefaultFontConfiguration::getDefaultFont(LanguageTag const&, DefaultFontType) const
utl::DefaultFontConfiguration::getUserInterfaceFont(LanguageTag const&) const
utl::DefaultFontConfiguration::tryLocale(rtl::OUString const&, rtl::OUString const&) const
utl::DefaultFontConfiguration::~DefaultFontConfiguration()
utl::DisposableComponent::DisposableComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
utl::DisposableComponent::~DisposableComponent()
utl::GetDateTime(com::sun::star::util::DateTime const&)
utl::GetDateTimeString(int, int)
utl::GetLocaleData()
utl::ISO8601parseDate(rtl::OUString const&, com::sun::star::util::Date&)
utl::ISO8601parseTime(rtl::OUString const&, com::sun::star::util::Time&)
utl::MediaDescriptor::MediaDescriptor()
utl::MediaDescriptor::MediaDescriptor(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
utl::MediaDescriptor::addInputStreamOwnLock()
utl::MediaDescriptor::clearComponentDataEntry(rtl::OUString const&)
utl::OConfigurationNode::OConfigurationNode(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
utl::OConfigurationNode::OConfigurationNode(utl::OConfigurationNode const&)
utl::OConfigurationNode::OConfigurationNode(utl::OConfigurationNode&&)
utl::OConfigurationNode::_disposing(com::sun::star::lang::EventObject const&)
utl::OConfigurationNode::clear()
utl::OConfigurationNode::insertNode(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&) const
utl::OConfigurationNode::isSetNode() const
utl::OConfigurationNode::normalizeName(rtl::OUString const&, utl::OConfigurationNode::NAMEORIGIN) const
utl::OConfigurationNode::operator=(utl::OConfigurationNode const&)
utl::OConfigurationTreeRoot::OConfigurationTreeRoot(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, bool)
utl::OConfigurationTreeRoot::OConfigurationTreeRoot(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
utl::OConfigurationTreeRoot::clear()
utl::OConfigurationTreeRoot::createWithProvider(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString const&, int, utl::OConfigurationTreeRoot::CREATION_MODE)
utl::OConfigurationTreeRoot::tryCreateWithComponentContext(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, int, utl::OConfigurationTreeRoot::CREATION_MODE)
utl::OEventListenerAdapter::OEventListenerAdapter()
utl::OEventListenerAdapter::~OEventListenerAdapter()
utl::OInputStreamHelper::acquire()
utl::OInputStreamHelper::available()
utl::OInputStreamHelper::closeInput()
utl::OInputStreamHelper::getLength()
utl::OInputStreamHelper::getPosition()
utl::OInputStreamHelper::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::OInputStreamHelper::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::OInputStreamHelper::seek(long)
utl::OInputStreamHelper::skipBytes(int)
utl::OInputStreamWrapper::OInputStreamWrapper(SvStream&)
utl::OInputStreamWrapper::OInputStreamWrapper(SvStream*, bool)
utl::OInputStreamWrapper::OInputStreamWrapper(std::unique_ptr<SvStream, std::default_delete<SvStream> >)
utl::OInputStreamWrapper::available()
utl::OInputStreamWrapper::checkConnected() const
utl::OInputStreamWrapper::checkError() const
utl::OInputStreamWrapper::closeInput()
utl::OInputStreamWrapper::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::OInputStreamWrapper::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::OInputStreamWrapper::skipBytes(int)
utl::OInputStreamWrapper::~OInputStreamWrapper()
utl::OOutputStreamWrapper::OOutputStreamWrapper(SvStream&)
utl::OSeekableInputStreamWrapper::OSeekableInputStreamWrapper(SvStream&)
utl::OSeekableInputStreamWrapper::OSeekableInputStreamWrapper(SvStream*, bool)
utl::OSeekableInputStreamWrapper::getLength()
utl::OSeekableInputStreamWrapper::getPosition()
utl::OSeekableInputStreamWrapper::seek(long)
utl::OSeekableInputStreamWrapper::~OSeekableInputStreamWrapper()
utl::OSeekableOutputStreamWrapper::OSeekableOutputStreamWrapper(SvStream&)
utl::OSeekableOutputStreamWrapper::getLength()
utl::OSeekableOutputStreamWrapper::getPosition()
utl::OSeekableOutputStreamWrapper::queryInterface(com::sun::star::uno::Type const&)
utl::OSeekableOutputStreamWrapper::seek(long)
utl::OSeekableOutputStreamWrapper::~OSeekableOutputStreamWrapper()
utl::OStreamWrapper::OStreamWrapper(SvStream&)
utl::OStreamWrapper::OStreamWrapper(std::unique_ptr<SvStream, std::default_delete<SvStream> >)
utl::OStreamWrapper::closeOutput()
utl::OStreamWrapper::flush()
utl::OStreamWrapper::getInputStream()
utl::OStreamWrapper::getOutputStream()
utl::OStreamWrapper::truncate()
utl::OStreamWrapper::writeBytes(com::sun::star::uno::Sequence<signed char> const&)
utl::OStreamWrapper::~OStreamWrapper()
utl::SearchParam::SearchParam(rtl::OUString const&, utl::SearchParam::SearchType, bool, unsigned int, bool)
utl::SearchParam::SearchParam(utl::SearchParam const&)
utl::SearchParam::~SearchParam()
utl::TempFile::TempFile(rtl::OUString const&, bool, rtl::OUString const*, rtl::OUString const*, bool)
utl::TempFile::TempFile(rtl::OUString const*, bool)
utl::TempFile::TempFile(utl::TempFile&&)
utl::TempFile::~TempFile()
utl::TextSearch::Init(utl::SearchParam const&, com::sun::star::lang::Locale const&)
utl::TextSearch::TextSearch(i18nutil::SearchOptions2 const&)
utl::TextSearch::TextSearch(utl::SearchParam const&, CharClass const&)
utl::TextSearch::TextSearch(utl::SearchParam const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
utl::TextSearch::getXTextSearch(i18nutil::SearchOptions2 const&)
utl::TextSearch::~TextSearch()
utl::TransliterationWrapper::TransliterationWrapper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, TransliterationFlags)
utl::TransliterationWrapper::loadModuleImpl() const
utl::TransliterationWrapper::setLanguageLocaleImpl(o3tl::strong_int<unsigned short, LanguageTypeTag>)
utl::TransliterationWrapper::~TransliterationWrapper()
utl::UCBContentHelper::EqualURLs(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::GetProperty(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::GetTitle(rtl::OUString const&, rtl::OUString*)
utl::UCBContentHelper::IsSubPath(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::IsYounger(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::MakeFolder(ucbhelper::Content&, rtl::OUString const&, ucbhelper::Content&)
utl::ZipPackageHelper::ZipPackageHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&)
utl::ZipPackageHelper::addFile(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&)
utl::ZipPackageHelper::addFolder(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&)
utl::detail::Options::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
utl::detail::Options::Options()
utl::detail::Options::~Options()
utl::dropPrefixFromConfigurationPath(rtl::OUString const&, rtl::OUString const&)
utl::extractFirstFromConfigurationPath(rtl::OUString const&, rtl::OUString*)
utl::splitLastFromConfigurationPath(rtl::OUString const&, rtl::OUString&, rtl::OUString&)
utl::typeConvert(com::sun::star::util::Date const&, Date&)
validImprovementVar
validSubstitutionVar
validate_bounds
var_store
varmap_add
varmap_canunlock
varmap_clear
varmap_compact
varmap_delete
varmap_lock
varmap_validate
vcl::AbstractTrueTypeFont::AbstractTrueTypeFont(char const*, tools::SvRef<FontCharMap>)
vcl::AbstractTrueTypeFont::glyphOffset(unsigned int) const
vcl::AbstractTrueTypeFont::~AbstractTrueTypeFont()
vcl::BufferDevice::BufferDevice(VclPtr<vcl::Window> const&, OutputDevice&)
vcl::BufferDevice::Dispose()
vcl::BufferDevice::operator*()
vcl::BufferDevice::~BufferDevice()
vcl::CloseTTFont(vcl::TrueTypeFont*)
vcl::CommandInfoProvider::GetCommandKeyCodeShortcut(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
vcl::CommandInfoProvider::GetPropertiesForCommand(rtl::OUString const&, rtl::OUString const&)
vcl::CommandInfoProvider::GetRealCommandForCommand(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
vcl::CommandInfoProvider::IsMirrored(rtl::OUString const&, rtl::OUString const&)
vcl::CommandInfoProvider::IsRotated(rtl::OUString const&, rtl::OUString const&)
vcl::ControlLayoutData::ControlLayoutData()
vcl::ControlLayoutData::GetLineCount() const
vcl::ControlLayoutData::GetLineStartEnd(long) const
vcl::ControlLayoutData::ToRelativeLineIndex(long) const
vcl::ControlLayoutData::~ControlLayoutData()
vcl::ConvertDoubleValue(double, long, unsigned short, FieldUnit, FieldUnit)
vcl::CreateTTFromTTGlyphs(vcl::AbstractTrueTypeFont*, char const*, unsigned short const*, unsigned char const*, int)
vcl::Cursor::Cursor()
vcl::Cursor::Cursor(vcl::Cursor const&)
vcl::Cursor::DrawToDevice(OutputDevice&)
vcl::Cursor::ImplDoHide(bool)
vcl::Cursor::ImplDoShow(bool, bool)
vcl::Cursor::ImplPrepForDraw(OutputDevice const*, ImplCursorData&)
vcl::Cursor::ImplRestore()
vcl::Cursor::LOKNotify(vcl::Window*, rtl::OUString const&)
vcl::Cursor::operator=(vcl::Cursor const&)
vcl::Cursor::operator==(vcl::Cursor const&) const
vcl::Cursor::~Cursor()
vcl::DeleteOnDeinitBase::~DeleteOnDeinitBase()
vcl::EndAllDialogs(vcl::Window const*)
vcl::EnumContext::AddEntry(rtl::OUString const&, vcl::EnumContext::Application)
vcl::EnumContext::AddEntry(rtl::OUString const&, vcl::EnumContext::Context)
vcl::EnumContext::EnumContext()
vcl::EnumContext::EnumContext(vcl::EnumContext::Application, vcl::EnumContext::Context)
vcl::EnumContext::GetApplicationName(vcl::EnumContext::Application)
vcl::EnumContext::GetApplication_DI() const
vcl::EnumContext::GetCombinedContext_DI() const
vcl::EnumContext::ProvideApplicationContainers()
vcl::EnumContext::ProvideContextContainers()
vcl::ExtOutDevData::~ExtOutDevData()
vcl::Font::Font(FontFamily, Size const&)
vcl::Font::Font(rtl::OUString const&, rtl::OUString const&, Size const&)
vcl::Font::Font(vcl::Font&&)
vcl::Font::GetCJKContextLanguageTag() const
vcl::Font::GetFontAttributes(FontAttributes&) const
vcl::Font::GetOrCalculateAverageFontWidth() const
vcl::Font::SetCJKContextLanguageTag(LanguageTag const&)
vcl::Font::SetLanguageTag(LanguageTag const&)
vcl::Font::~Font()
vcl::GetTTGlobalFontInfo(vcl::TrueTypeFont*, vcl::TTGlobalFontInfo_*)
vcl::GetTTSimpleGlyphMetrics(vcl::AbstractTrueTypeFont const*, unsigned short const*, int, bool)
vcl::GraphicFormatDetector::GraphicFormatDetector(SvStream&, rtl::OUString const&)
vcl::GraphicFormatDetector::checkDXF()
vcl::GraphicFormatDetector::checkMOV()
vcl::GraphicFormatDetector::checkPBMorPGMorPPM()
vcl::GraphicFormatDetector::checkPCD()
vcl::GraphicFormatDetector::checkPCT()
vcl::GraphicFormatDetector::checkRAS()
vcl::GraphicFormatDetector::checkSVM()
vcl::I18nHelper::CompareString(rtl::OUString const&, rtl::OUString const&) const
vcl::I18nHelper::I18nHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, LanguageTag const&)
vcl::I18nHelper::filterFormattingChars(rtl::OUString const&)
vcl::I18nHelper::~I18nHelper()
vcl::ITiledRenderable::~ITiledRenderable()
vcl::IconThemeInfo::IconThemeInfo()
vcl::IconThemeInfo::IconThemeInfo(rtl::OUString const&)
vcl::IconThemeInfo::IconThemeIsInVector(std::vector<vcl::IconThemeInfo, std::allocator<vcl::IconThemeInfo> > const&, rtl::OUString const&)
vcl::IconThemeInfo::SizeByThemeName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
vcl::IconThemeScanner::Create(rtl::OUString const&)
vcl::IconThemeScanner::FileIsValidIconTheme(rtl::OUString const&)
vcl::IconThemeScanner::GetStandardIconThemePath()
vcl::IconThemeScanner::IconThemeScanner()
vcl::IconThemeScanner::ReadIconThemesFromPath(rtl::OUString const&)
vcl::IconThemeScanner::ScanDirectoryForIconThemes(rtl::OUString const&)
vcl::IconThemeSelector::GetIconThemeForDesktopEnvironment(rtl::OUString const&)
vcl::IconThemeSelector::IconThemeSelector()
vcl::IconThemeSelector::ReturnFallback(std::vector<vcl::IconThemeInfo, std::allocator<vcl::IconThemeInfo> > const&)
vcl::IconThemeSelector::operator!=(vcl::IconThemeSelector const&) const
vcl::ImportPDF(SvStream&, Graphic&)
vcl::KeyCode::KeyCode(KeyFuncType)
vcl::OWizardPage::OWizardPage(weld::Container*, weld::DialogController*, rtl::OUString const&, rtl::OString const&)
vcl::OWizardPage::~OWizardPage()
vcl::OpenTTFontBuffer(void const*, unsigned int, unsigned int, vcl::TrueTypeFont**, tools::SvRef<FontCharMap>)
vcl::OpenTTFontFile(char const*, unsigned int, vcl::TrueTypeFont**, tools::SvRef<FontCharMap>)
vcl::PDFExtOutDevData::BeginGroup()
vcl::PDFExtOutDevData::CreateControl(vcl::PDFWriter::AnyWidget const&)
vcl::PDFExtOutDevData::EndGroup(Graphic const&, unsigned char, tools::Rectangle const&, tools::Rectangle const&)
vcl::PDFExtOutDevData::GetCurrentGraphic() const
vcl::PDFExtOutDevData::HasAdequateCompression(Graphic const&, tools::Rectangle const&, tools::Rectangle const&) const
vcl::PDFExtOutDevData::PDFExtOutDevData(OutputDevice const&)
vcl::PDFExtOutDevData::PlaySyncPageAct(vcl::PDFWriter&, unsigned int&, GDIMetaFile const&)
vcl::PDFExtOutDevData::RegisterDest()
vcl::PDFExtOutDevData::SetAlternateText(rtl::OUString const&)
vcl::PDFExtOutDevData::~PDFExtOutDevData()
vcl::PDFOutputStream::~PDFOutputStream()
vcl::PDFWriter::AnyWidget::~AnyWidget()
vcl::PDFWriter::AppendUnicodeTextString(rtl::OUString const&, rtl::OStringBuffer&)
vcl::PDFWriter::BeginStructureElement(vcl::PDFWriter::StructElement, rtl::OUString const&)
vcl::PDFWriter::CreateControl(vcl::PDFWriter::AnyWidget const&)
vcl::PDFWriter::CreateDest(tools::Rectangle const&, int, vcl::PDFWriter::DestAreaType)
vcl::PDFWriter::CreateLink(tools::Rectangle const&, int)
vcl::PDFWriter::CreateNamedDest(rtl::OUString const&, tools::Rectangle const&, int, vcl::PDFWriter::DestAreaType)
vcl::PDFWriter::CreateNote(tools::Rectangle const&, vcl::PDFNote const&, int)
vcl::PDFWriter::CreateOutlineItem(int, rtl::OUString const&, int)
vcl::PDFWriter::CreateScreen(tools::Rectangle const&, int)
vcl::PDFWriter::DrawArc(tools::Rectangle const&, Point const&, Point const&)
vcl::PDFWriter::DrawBitmap(Point const&, Size const&, Bitmap const&, Graphic const&)
vcl::PDFWriter::DrawBitmapEx(Point const&, Size const&, BitmapEx const&)
vcl::PDFWriter::DrawChord(tools::Rectangle const&, Point const&, Point const&)
vcl::PDFWriter::DrawEllipse(tools::Rectangle const&)
vcl::PDFWriter::DrawGradient(tools::PolyPolygon const&, Gradient const&)
vcl::PDFWriter::DrawGradient(tools::Rectangle const&, Gradient const&)
vcl::PDFWriter::DrawHatch(tools::PolyPolygon const&, Hatch const&)
vcl::PDFWriter::DrawJPGBitmap(SvStream&, bool, Size const&, tools::Rectangle const&, AlphaMask const&, Graphic const&)
vcl::PDFWriter::DrawLine(Point const&, Point const&)
vcl::PDFWriter::DrawLine(Point const&, Point const&, LineInfo const&)
vcl::PDFWriter::DrawPie(tools::Rectangle const&, Point const&, Point const&)
vcl::PDFWriter::DrawPixel(Point const&, Color const&)
vcl::PDFWriter::DrawPolyLine(tools::Polygon const&)
vcl::PDFWriter::DrawPolyLine(tools::Polygon const&, LineInfo const&)
vcl::PDFWriter::DrawPolyLine(tools::Polygon const&, vcl::PDFWriter::ExtLineInfo const&)
vcl::PDFWriter::DrawPolyPolygon(tools::PolyPolygon const&)
vcl::PDFWriter::DrawPolygon(tools::Polygon const&)
vcl::PDFWriter::DrawRect(tools::Rectangle const&)
vcl::PDFWriter::DrawRect(tools::Rectangle const&, unsigned long, unsigned long)
vcl::PDFWriter::DrawStretchText(Point const&, unsigned long, rtl::OUString const&, int, int)
vcl::PDFWriter::DrawTextArray(Point const&, rtl::OUString const&, o3tl::span<int const>, int, int)
vcl::PDFWriter::DrawTextLine(Point const&, long, FontStrikeout, FontLineStyle, FontLineStyle)
vcl::PDFWriter::DrawTransparent(tools::PolyPolygon const&, unsigned short)
vcl::PDFWriter::DrawWallpaper(tools::Rectangle const&, Wallpaper const&)
vcl::PDFWriter::EndStructureElement()
vcl::PDFWriter::GetDateTime()
vcl::PDFWriter::IntersectClipRegion(basegfx::B2DPolyPolygon const&)
vcl::PDFWriter::IntersectClipRegion(tools::Rectangle const&)
vcl::PDFWriter::MoveClipRegion(long, long)
vcl::PDFWriter::PDFWriter(vcl::PDFWriter::PDFWriterContext const&, com::sun::star::uno::Reference<com::sun::star::beans::XMaterialHolder> const&)
vcl::PDFWriter::RegisterDestReference(int, tools::Rectangle const&, int, vcl::PDFWriter::DestAreaType)
vcl::PDFWriter::SetActualText(rtl::OUString const&)
vcl::PDFWriter::SetAlternateText(rtl::OUString const&)
vcl::PDFWriter::SetCurrentStructureElement(int)
vcl::PDFWriter::SetDigitLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
vcl::PDFWriter::SetFillColor(Color const&)
vcl::PDFWriter::SetLayoutMode(vcl::text::ComplexTextLayoutFlags)
vcl::PDFWriter::SetLineColor(Color const&)
vcl::PDFWriter::SetLinkDest(int, int)
vcl::PDFWriter::SetLinkPropertyID(int, int)
vcl::PDFWriter::SetLinkURL(int, rtl::OUString const&)
vcl::PDFWriter::SetOverlineColor()
vcl::PDFWriter::SetOverlineColor(Color const&)
vcl::PDFWriter::SetPageTransition(vcl::PDFWriter::PageTransition, unsigned int, int)
vcl::PDFWriter::SetScreenStream(int, rtl::OUString const&)
vcl::PDFWriter::SetScreenURL(int, rtl::OUString const&)
vcl::PDFWriter::SetStructureAttribute(vcl::PDFWriter::StructAttribute, vcl::PDFWriter::StructAttributeValue)
vcl::PDFWriter::SetStructureAttributeNumerical(vcl::PDFWriter::StructAttribute, int)
vcl::PDFWriter::SetStructureBoundingBox(tools::Rectangle const&)
vcl::PDFWriter::SetTextAlign(TextAlign)
vcl::PDFWriter::SetTextFillColor()
vcl::PDFWriter::SetTextFillColor(Color const&)
vcl::PDFWriter::SetTextLineColor()
vcl::PDFWriter::SetTextLineColor(Color const&)
vcl::PDFWriter::~PDFWriter()
vcl::PNGWriter::GetChunks()
vcl::PNGWriter::PNGWriter(BitmapEx const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
vcl::PNGWriter::~PNGWriter()
vcl::PaintBufferGuard::PaintBufferGuard(ImplFrameData*, vcl::Window*)
vcl::PaintBufferGuard::SetPaintRect(tools::Rectangle const&)
vcl::PaintBufferGuard::~PaintBufferGuard()
vcl::PngImageReader::PngImageReader(SvStream&)
vcl::PngImageReader::getMicrosoftGifChunk(SvStream&, int*)
vcl::PrinterController::PrinterController(VclPtr<Printer> const&, weld::Window*)
vcl::PrinterController::abortJob()
vcl::PrinterController::createProgressDialog()
vcl::PrinterController::dialogsParentClosing()
vcl::PrinterController::getBoolProperty(rtl::OUString const&, bool) const
vcl::PrinterController::getFilteredPageCount() const
vcl::PrinterController::getFilteredPageFile(int, GDIMetaFile&, bool)
vcl::PrinterController::getIntProperty(rtl::OUString const&, int) const
vcl::PrinterController::getJobProperties(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&) const
vcl::PrinterController::getJobState() const
vcl::PrinterController::getPrinter() const
vcl::PrinterController::getPrinterModified() const
vcl::PrinterController::getUIOptions() const
vcl::PrinterController::getValue(rtl::OUString const&)
vcl::PrinterController::getValue(rtl::OUString const&) const
vcl::PrinterController::getWindow() const
vcl::PrinterController::isDirectPrint() const
vcl::PrinterController::isProgressCanceled() const
vcl::PrinterController::isShowDialogs() const
vcl::PrinterController::isUIChoiceEnabled(rtl::OUString const&, int) const
vcl::PrinterController::isUIOptionEnabled(rtl::OUString const&) const
vcl::PrinterController::jobFinished(com::sun::star::view::PrintableState)
vcl::PrinterController::jobStarted()
vcl::PrinterController::makeEnabled(rtl::OUString const&)
vcl::PrinterController::printFilteredPage(int)
vcl::PrinterController::setJobState(com::sun::star::view::PrintableState)
vcl::PrinterController::setLastPage(bool)
vcl::PrinterController::setPrinterModified(bool)
vcl::PrinterController::setUIOptions(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
vcl::PrinterController::setValue(com::sun::star::beans::PropertyValue const&)
vcl::PrinterController::setValue(rtl::OUString const&, com::sun::star::uno::Any const&)
vcl::PrinterController::~PrinterController()
vcl::PrinterOptionsHelper::setUIControlOpt(com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, com::sun::star::beans::PropertyValue const*, vcl::PrinterOptionsHelper::UIControlOptions const&)
vcl::QuickSelectionEngine::QuickSelectionEngine(vcl::ISearchableStringList&)
vcl::QuickSelectionEngine::~QuickSelectionEngine()
vcl::ReadRegion(SvStream&, vcl::Region&)
vcl::Region::Contains(Point const&) const
vcl::Region::Exclude(vcl::Region const&)
vcl::Region::GetAsRegionBand() const
vcl::Region::GetRegionFromPolyPolygon(tools::PolyPolygon const&)
vcl::Region::Overlaps(tools::Rectangle const&) const
vcl::Region::Region(basegfx::B2DPolyPolygon const&)
vcl::Region::Region(bool)
vcl::Region::Region(tools::PolyPolygon const&)
vcl::Region::Region(tools::Polygon const&)
vcl::Region::Region(tools::Rectangle const&)
vcl::Region::Region(vcl::Region const&)
vcl::Region::Region(vcl::Region&&)
vcl::Region::Scale(double, double)
vcl::Region::XOr(tools::Rectangle const&)
vcl::Region::XOr(vcl::Region const&)
vcl::Region::~Region()
vcl::RoadmapWizardMachine::RoadmapWizardMachine(weld::Window*)
vcl::RoadmapWizardMachine::knowsState(short) const
vcl::RoadmapWizardMachine::~RoadmapWizardMachine()
vcl::ScriptRun::next()
vcl::SetGetSpecialCharsFunction(rtl::OUString (*)(weld::Widget*, vcl::Font const&))
vcl::SettingsConfigItem::ImplCommit()
vcl::SettingsConfigItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
vcl::SettingsConfigItem::SettingsConfigItem()
vcl::SettingsConfigItem::getValues()
vcl::SettingsConfigItem::setValue(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
vcl::SettingsConfigItem::~SettingsConfigItem()
vcl::SolarThreadExecutor::SolarThreadExecutor()
vcl::SolarThreadExecutor::~SolarThreadExecutor()
vcl::StringToMetric(rtl::OUString const&)
vcl::WidgetDefinitionReader::WidgetDefinitionReader(rtl::OUString const&, rtl::OUString const&)
vcl::WidgetDefinitionReader::readDefinition(tools::XmlWalker&, vcl::WidgetDefinition&, ControlType)
vcl::WidgetDefinitionReader::readDrawingDefinition(tools::XmlWalker&, std::shared_ptr<vcl::WidgetDefinitionState> const&)
vcl::WidgetDefinitionReader::readPart(tools::XmlWalker&, std::shared_ptr<vcl::WidgetDefinitionPart>)
vcl::Window::ApplyControlBackground(OutputDevice&, Color const&)
vcl::Window::ApplyControlFont(OutputDevice&, vcl::Font const&)
vcl::Window::ApplyControlForeground(OutputDevice&, Color const&)
vcl::Window::CalcOutputSize(Size const&) const
vcl::Window::CalcTitleWidth() const
vcl::Window::CalcWindowSize(Size const&) const
vcl::Window::EnableAllResize()
vcl::Window::EnableAlwaysOnTop(bool)
vcl::Window::EnableChildPointerOverwrite(bool)
vcl::Window::EnableDocking(bool)
vcl::Window::EnableInput(bool, vcl::Window const*)
vcl::Window::EnableNativeWidget(bool)
vcl::Window::EndAutoScroll()
vcl::Window::EndExtTextInput()
vcl::Window::EndSaveFocus(VclPtr<vcl::Window> const&)
vcl::Window::Erase(OutputDevice&)
vcl::Window::ExpandPaintClipRegion(vcl::Region const&)
vcl::Window::GetAccessibleRelationLabelFor() const
vcl::Window::GetActivateMode() const
vcl::Window::GetBorder(int&, int&, int&, int&) const
vcl::Window::GetBorderStyle() const
vcl::Window::GetCursorExtTextInputWidth() const
vcl::Window::GetCursorRect() const
vcl::Window::GetDockingManager()
vcl::Window::GetDragGestureRecognizer()
vcl::Window::GetDragSource()
vcl::Window::GetDrawPixel(OutputDevice const*, long) const
vcl::Window::GetDrawPixelFont(OutputDevice const*) const
vcl::Window::GetFocusedWindow() const
vcl::Window::GetFrameWindow() const
vcl::Window::GetGetFocusFlags() const
vcl::Window::GetLastPointerPosPixel()
vcl::Window::GetNativeControlRegion(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, tools::Rectangle&, tools::Rectangle&) const
vcl::Window::GetOutputRectPixel() const
vcl::Window::GetOverlineColor() const
vcl::Window::GetParentClipMode() const
vcl::Window::GetParentDialog() const
vcl::Window::GetPointFont(OutputDevice const&) const
vcl::Window::GetPrevStyle() const
vcl::Window::GetTextAlign() const
vcl::Window::GetTextFillColor() const
vcl::Window::GetTextRect(tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, TextRectInfo*, vcl::ITextLayout const*) const
vcl::Window::HasActiveChildFrame() const
vcl::Window::HasPaintEvent() const
vcl::Window::HideFocus()
vcl::Window::ImplGetWindow() const
vcl::Window::InvalidateSizeCache()
vcl::Window::IsActive() const
vcl::Window::IsAlwaysEnableInput() const
vcl::Window::IsAlwaysOnTopEnabled() const
vcl::Window::IsBackground() const
vcl::Window::IsChild(vcl::Window const*) const
vcl::Window::IsCompoundControl() const
vcl::Window::IsCreatedWithToolkit() const
vcl::Window::IsDefaultPos() const
vcl::Window::IsDefaultSize() const
vcl::Window::IsDialog() const
vcl::Window::IsDialogControlStart() const
vcl::Window::IsDockingWindow() const
vcl::Window::IsInInitShow() const
vcl::Window::IsLOKWindowsEmpty()
vcl::Window::IsMouseTransparent() const
vcl::Window::IsNativeControlSupported(ControlType, ControlPart) const
vcl::Window::IsNativeWidgetEnabled() const
vcl::Window::IsOverlineColor() const
vcl::Window::IsScrollable() const
vcl::Window::IsTextFillColor() const
vcl::Window::IsTopWindow() const
vcl::Window::IsZoom() const
vcl::Window::NormalizedScreenToOutputPixel(Point const&) const
vcl::Window::NotifyAllChildren(DataChangedEvent&)
vcl::Window::PixelToLogic(vcl::Region const&) const
vcl::Window::SaveFocus()
vcl::Window::SetAccessibleDescription(rtl::OUString const&)
vcl::Window::SetAccessibleRelationLabelFor(vcl::Window*)
vcl::Window::SetAccessibleRelationLabeledBy(vcl::Window*)
vcl::Window::SetAccessibleRelationMemberOf(vcl::Window*)
vcl::Window::SetActivateMode(ActivateModeFlags)
vcl::Window::SetCompoundControl(bool)
vcl::Window::SetCreatedWithToolkit(bool)
vcl::Window::SetDialogControlStart(bool)
vcl::Window::SetDumpAsPropertyTreeHdl(Link<tools::JsonWriter&, void> const&)
vcl::Window::SetFakeFocus(bool)
vcl::Window::SetHelpHdl(Link<vcl::Window&, bool> const&)
vcl::Window::SetMapMode()
vcl::Window::SetMnemonicActivateHdl(Link<vcl::Window&, bool> const&)
vcl::Window::SetModalHierarchyHdl(Link<bool, void> const&)
vcl::Window::SetOverlineColor()
vcl::Window::SetOverlineColor(Color const&)
vcl::Window::SetParentUpdateMode(bool)
vcl::Window::SetTextAlign(TextAlign)
vcl::Window::SetType(WindowType)
vcl::Window::SetWindowPeer(com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&, VCLXWindow*)
vcl::Window::SetWindowRegionPixel()
vcl::Window::SetWindowRegionPixel(vcl::Region const&)
vcl::Window::StartAutoScroll(StartAutoScrollFlags)
vcl::Window::UpdateSettings(AllSettings const&, bool)
vcl::Window::Window(WindowType)
vcl::Window::add_mnemonic_label(FixedText*)
vcl::Window::add_to_size_group(std::shared_ptr<VclSizeGroup> const&)
vcl::Window::get_border_width() const
vcl::Window::get_fill() const
vcl::Window::get_grid_height() const
vcl::Window::get_grid_left_attach() const
vcl::Window::get_grid_top_attach() const
vcl::Window::get_grid_width() const
vcl::Window::get_halign() const
vcl::Window::get_height_request() const
vcl::Window::get_hexpand() const
vcl::Window::get_margin_bottom() const
vcl::Window::get_margin_end() const
vcl::Window::get_margin_start() const
vcl::Window::get_margin_top() const
vcl::Window::get_non_homogeneous() const
vcl::Window::get_pack_type() const
vcl::Window::get_padding() const
vcl::Window::get_secondary() const
vcl::Window::get_ungrouped_preferred_size() const
vcl::Window::get_valign() const
vcl::Window::get_width_request() const
vcl::Window::list_mnemonic_labels() const
vcl::Window::remove_from_all_size_groups()
vcl::Window::remove_mnemonic_label(FixedText*)
vcl::Window::reorderWithinParent(unsigned short)
vcl::Window::set_fill(bool)
vcl::Window::set_font_attribute(rtl::OString const&, rtl::OUString const&)
vcl::Window::set_grid_height(int)
vcl::Window::set_grid_left_attach(int)
vcl::Window::set_grid_top_attach(int)
vcl::Window::set_grid_width(int)
vcl::Window::set_halign(VclAlign)
vcl::Window::set_margin_bottom(int)
vcl::Window::set_margin_end(int)
vcl::Window::set_margin_start(int)
vcl::Window::set_non_homogeneous(bool)
vcl::Window::set_pack_type(VclPackType)
vcl::Window::set_padding(int)
vcl::Window::set_secondary(bool)
vcl::Window::set_valign(VclAlign)
vcl::Window::set_width_request(int)
vcl::Window::~Window()
vcl::WizardMachine::RemovePage(BuilderPage const*)
vcl::WizardMachine::SetPage(short, std::unique_ptr<BuilderPage, std::default_delete<BuilderPage> >)
vcl::WizardMachine::WizardMachine(weld::Window*, WizardButtonFlags)
vcl::WizardMachine::getStateHistory(std::vector<short, std::allocator<short> >&)
vcl::WizardMachine::isAutomaticNextButtonStateEnabled() const
vcl::WizardMachine::isTravelingSuspended() const
vcl::WizardMachine::removePageFromHistory(short)
vcl::WizardMachine::resumeTraveling(vcl::WizardMachine::AccessGuard)
vcl::WizardMachine::skipBackwardUntil(short)
vcl::WizardMachine::suspendTraveling(vcl::WizardMachine::AccessGuard)
vcl::WizardMachine::travelPrevious()
vcl::WizardMachine::~WizardMachine()
vcl::WriteRegion(SvStream&, vcl::Region const&)
vcl::bitmap::CanvasExtractBitmapData(BitmapEx const&, com::sun::star::geometry::IntegerRectangle2D const&)
vcl::bitmap::CanvasTransformBitmap(BitmapEx const&, basegfx::B2DHomMatrix const&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
vcl::bitmap::DrawAndClipBitmap(Point const&, Size const&, BitmapEx const&, BitmapEx&, basegfx::B2DPolyPolygon const&)
vcl::bitmap::GetMaskDIB(BitmapEx const&)
vcl::bitmap::get_premultiply_table()
vcl::bitmap::get_unpremultiply_table()
vcl::escapeStringXML(rtl::OUString const&, rtl::OUString&)
vcl::filter::PDFArrayElement::PDFArrayElement(vcl::filter::PDFObjectElement*)
vcl::filter::PDFArrayElement::PushBack(vcl::filter::PDFElement*)
vcl::filter::PDFArrayElement::Read(SvStream&)
vcl::filter::PDFBooleanElement::Read(SvStream&)
vcl::filter::PDFCommentElement::PDFCommentElement(vcl::filter::PDFDocument&)
vcl::filter::PDFCommentElement::Read(SvStream&)
vcl::filter::PDFDictionaryElement::Lookup(std::map<rtl::OString, vcl::filter::PDFElement*, std::less<rtl::OString>, std::allocator<std::pair<rtl::OString const, vcl::filter::PDFElement*> > > const&, rtl::OString const&)
vcl::filter::PDFDictionaryElement::PDFDictionaryElement()
vcl::filter::PDFDictionaryElement::Read(SvStream&)
vcl::filter::PDFDictionaryElement::SetKeyOffset(rtl::OString const&, unsigned long)
vcl::filter::PDFDictionaryElement::SetKeyValueLength(rtl::OString const&, unsigned long)
vcl::filter::PDFDocument::DecodeHexString(vcl::filter::PDFHexStringElement const*)
vcl::filter::PDFDocument::FindStartXRef(SvStream&)
vcl::filter::PDFDocument::GetEditBuffer()
vcl::filter::PDFDocument::GetNextSignature()
vcl::filter::PDFDocument::GetObjectOffset(unsigned long) const
vcl::filter::PDFDocument::PDFDocument()
vcl::filter::PDFDocument::PushBackEOF(unsigned long)
vcl::filter::PDFDocument::ReadKeyword(SvStream&)
vcl::filter::PDFDocument::ReadXRef(SvStream&)
vcl::filter::PDFDocument::ReadXRefStream(SvStream&)
vcl::filter::PDFDocument::SetIDObject(unsigned long, vcl::filter::PDFObjectElement*)
vcl::filter::PDFDocument::SkipLineBreaks(SvStream&)
vcl::filter::PDFDocument::SkipWhitespace(SvStream&)
vcl::filter::PDFDocument::Tokenize(SvStream&, vcl::filter::TokenizeMode, std::vector<std::unique_ptr<vcl::filter::PDFElement, std::default_delete<vcl::filter::PDFElement> >, std::allocator<std::unique_ptr<vcl::filter::PDFElement, std::default_delete<vcl::filter::PDFElement> > > >&, vcl::filter::PDFObjectElement*)
vcl::filter::PDFDocument::WriteAnnotObject(vcl::filter::PDFObjectElement const&, int, int, tools::Rectangle const&)
vcl::filter::PDFDocument::WriteAppearanceObject(tools::Rectangle&)
vcl::filter::PDFDocument::WriteCatalogObject(int, vcl::filter::PDFReferenceElement*&)
vcl::filter::PDFDocument::WritePageObject(vcl::filter::PDFObjectElement&, int)
vcl::filter::PDFDocument::WriteSignatureObject(rtl::OUString const&, bool, unsigned long&, long&)
vcl::filter::PDFDocument::WriteXRef(unsigned long, vcl::filter::PDFReferenceElement const*)
vcl::filter::PDFDocument::createObject()
vcl::filter::PDFDocument::updateObject(int)
vcl::filter::PDFDocument::writeBuffer(void const*, unsigned long)
vcl::filter::PDFDocument::~PDFDocument()
vcl::filter::PDFEndArrayElement::GetOffset() const
vcl::filter::PDFEndArrayElement::PDFEndArrayElement()
vcl::filter::PDFEndArrayElement::Read(SvStream&)
vcl::filter::PDFEndDictionaryElement::GetLocation() const
vcl::filter::PDFEndDictionaryElement::PDFEndDictionaryElement()
vcl::filter::PDFEndDictionaryElement::Read(SvStream&)
vcl::filter::PDFEndObjectElement::Read(SvStream&)
vcl::filter::PDFEndStreamElement::Read(SvStream&)
vcl::filter::PDFHexStringElement::GetValue() const
vcl::filter::PDFHexStringElement::Read(SvStream&)
vcl::filter::PDFLiteralStringElement::GetValue() const
vcl::filter::PDFLiteralStringElement::Read(SvStream&)
vcl::filter::PDFNameElement::GetLocation() const
vcl::filter::PDFNameElement::PDFNameElement()
vcl::filter::PDFNameElement::Read(SvStream&)
vcl::filter::PDFNullElement::Read(SvStream&)
vcl::filter::PDFNumberElement::GetLength() const
vcl::filter::PDFNumberElement::GetLocation() const
vcl::filter::PDFNumberElement::PDFNumberElement()
vcl::filter::PDFNumberElement::Read(SvStream&)
vcl::filter::PDFObjectElement::AddDictionaryReference(vcl::filter::PDFReferenceElement*)
vcl::filter::PDFObjectElement::GetArrayLength() const
vcl::filter::PDFObjectElement::GetArrayOffset() const
vcl::filter::PDFObjectElement::GetDictionaryReferences() const
vcl::filter::PDFObjectElement::GetDocument()
vcl::filter::PDFObjectElement::GetNumberElement() const
vcl::filter::PDFObjectElement::GetObjectValue() const
vcl::filter::PDFObjectElement::GetStoredElements()
vcl::filter::PDFObjectElement::GetStreamBuffer() const
vcl::filter::PDFObjectElement::PDFObjectElement(vcl::filter::PDFDocument&, double, double)
vcl::filter::PDFObjectElement::ParseStoredObjects()
vcl::filter::PDFObjectElement::Read(SvStream&)
vcl::filter::PDFObjectElement::SetArray(vcl::filter::PDFArrayElement*)
vcl::filter::PDFObjectElement::SetArrayLength(unsigned long)
vcl::filter::PDFObjectElement::SetArrayOffset(unsigned long)
vcl::filter::PDFObjectElement::SetDictionary(vcl::filter::PDFDictionaryElement*)
vcl::filter::PDFObjectElement::SetDictionaryLength(unsigned long)
vcl::filter::PDFObjectElement::SetDictionaryOffset(unsigned long)
vcl::filter::PDFObjectElement::SetNumberElement(vcl::filter::PDFNumberElement*)
vcl::filter::PDFObjectElement::SetStream(vcl::filter::PDFStreamElement*)
vcl::filter::PDFObjectElement::SetStreamBuffer(std::unique_ptr<SvMemoryStream, std::default_delete<SvMemoryStream> >&)
vcl::filter::PDFObjectElement::parseIfNecessary()
vcl::filter::PDFReferenceElement::GetObjectElement() const
vcl::filter::PDFReferenceElement::GetOffset() const
vcl::filter::PDFReferenceElement::LookupNumber(SvStream&) const
vcl::filter::PDFReferenceElement::PDFReferenceElement(vcl::filter::PDFDocument&, vcl::filter::PDFNumberElement&, vcl::filter::PDFNumberElement const&)
vcl::filter::PDFReferenceElement::Read(SvStream&)
vcl::filter::PDFStreamElement::GetOffset() const
vcl::filter::PDFStreamElement::PDFStreamElement(unsigned long)
vcl::filter::PDFStreamElement::Read(SvStream&)
vcl::filter::PDFTrailerElement::GetLocation() const
vcl::filter::PDFTrailerElement::PDFTrailerElement(vcl::filter::PDFDocument&)
vcl::filter::PDFTrailerElement::Read(SvStream&)
vcl::font::FeatureDefinition::FeatureDefinition()
vcl::font::FeatureDefinition::FeatureDefinition(unsigned int, TranslateId, rtl::OUString const&)
vcl::font::FeatureDefinition::FeatureDefinition(unsigned int, TranslateId, std::vector<vcl::font::FeatureParameter, std::allocator<vcl::font::FeatureParameter> >)
vcl::font::FeatureDefinition::FeatureDefinition(unsigned int, rtl::OUString const&, vcl::font::FeatureParameterType, std::vector<vcl::font::FeatureParameter, std::allocator<vcl::font::FeatureParameter> >&&, unsigned int)
vcl::font::FeatureParameter::FeatureParameter(unsigned int, TranslateId)
vcl::font::FeatureParameter::FeatureParameter(unsigned int, rtl::OUString)
vcl::font::FeatureParser::FeatureParser(rtl::OUString const&)
vcl::font::FontSelectPattern::FontSelectPattern(vcl::Font const&, rtl::OUString const&, Size const&, float, bool)
vcl::font::FontSelectPattern::hashCode() const
vcl::font::FontSelectPattern::operator==(vcl::font::FontSelectPattern const&) const
vcl::font::OpenTypeFeatureDefinitionList()
vcl::font::PhysicalFontCollection::Clear()
vcl::font::PhysicalFontCollection::Clone() const
vcl::font::PhysicalFontCollection::FindFontFamily(vcl::font::FontSelectPattern&) const
vcl::font::PhysicalFontCollection::GetFontFaceCollection() const
vcl::font::PhysicalFontCollection::GetGlyphFallbackFont(vcl::font::FontSelectPattern&, LogicalFontInstance*, rtl::OUString&, int) const
vcl::font::PhysicalFontCollection::ImplFindFontFamilyBySearchName(rtl::OUString const&) const
vcl::font::PhysicalFontCollection::ImplFindFontFamilyBySubstFontAttr(utl::FontNameAttr const&) const
vcl::font::PhysicalFontCollection::ImplFindFontFamilyOfDefaultFont() const
vcl::font::PhysicalFontCollection::ImplInitGenericGlyphFallback() const
vcl::font::PhysicalFontCollection::ImplInitMatchData() const
vcl::font::PhysicalFontCollection::PhysicalFontCollection()
vcl::font::PhysicalFontCollection::SetFallbackHook(vcl::font::GlyphFallbackFontSubstitution*)
vcl::font::PhysicalFontCollection::SetPreMatchHook(vcl::font::PreMatchFontSubstitution*)
vcl::font::PhysicalFontCollection::~PhysicalFontCollection()
vcl::font::PhysicalFontFace::PhysicalFontFace(FontAttributes const&)
vcl::font::PhysicalFontFamily::CalcType(ImplFontAttrs&, FontWeight&, FontWidth&, FontFamily, utl::FontNameAttr const*)
vcl::font::PhysicalFontFamily::FindBestFontFace(vcl::font::FontSelectPattern const&) const
vcl::font::PhysicalFontFamily::InitMatchData(utl::FontSubstConfiguration const&, rtl::OUString const&)
vcl::font::PhysicalFontFamily::PhysicalFontFamily(rtl::OUString const&)
vcl::font::PhysicalFontFamily::UpdateCloneFontList(vcl::font::PhysicalFontCollection&) const
vcl::font::PhysicalFontFamily::UpdateDevFontList(vcl::font::PhysicalFontFaceCollection&) const
vcl::font::PhysicalFontFamily::~PhysicalFontFamily()
vcl::importPdfVectorGraphicData(SvStream&, std::shared_ptr<VectorGraphicData>&)
vcl::lok::unregisterPollCallbacks()
vcl::test::OutputDeviceTestCommon::OutputDeviceTestCommon()
vcl::test::OutputDeviceTestCommon::alignToCenter(tools::Rectangle, tools::Rectangle)
vcl::test::OutputDeviceTestCommon::checkAALines(Bitmap&)
vcl::test::OutputDeviceTestCommon::checkChecker(Bitmap&, int, int, int, int, std::vector<Color, std::allocator<Color> > const&)
vcl::test::OutputDeviceTestCommon::checkFilled(Bitmap&, tools::Rectangle, Color)
vcl::test::OutputDeviceTestCommon::checkIntersectingRecs(Bitmap&, int, Color)
vcl::test::OutputDeviceTestCommon::checkLines(Bitmap&)
vcl::test::OutputDeviceTestCommon::checkRectangle(Bitmap&)
vcl::test::OutputDeviceTestCommon::checkRectangle(Bitmap&, int, Color)
vcl::test::OutputDeviceTestCommon::checkRectangles(Bitmap&, std::vector<Color, std::allocator<Color> >&)
vcl::test::OutputDeviceTestCommon::createDiamondPoints(tools::Rectangle, int, Point&, Point&, Point&, Point&)
vcl::test::OutputDeviceTestCommon::createDropShapePolygon()
vcl::test::OutputDeviceTestCommon::createHalfEllipsePolygon()
vcl::test::OutputDeviceTestCommon::createHorizontalVerticalDiagonalLinePoints(tools::Rectangle, Point&, Point&, Point&, Point&, Point&, Point&)
vcl::test::OutputDeviceTestCommon::createOpenBezier()
vcl::test::OutputDeviceTestCommon::createOpenPolygon(tools::Rectangle const&, int)
vcl::test::OutputDeviceTestCommon::initialSetup(long, long, Color, bool, bool)
vcl::test::OutputDeviceTestLine::setupAALines()
vcl::test::OutputDeviceTestLine::setupLines()
vcl::test::OutputDeviceTestLine::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestLine::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPixel::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPixel::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyLine::setupAALines()
vcl::test::OutputDeviceTestPolyLine::setupLines()
vcl::test::OutputDeviceTestPolyLine::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyLine::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyLineB2D::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyLineB2D::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyPolygon::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyPolygon::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyPolygonB2D::setupIntersectingRectangles()
vcl::test::OutputDeviceTestPolyPolygonB2D::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyPolygonB2D::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolygon::setupAALines()
vcl::test::OutputDeviceTestPolygon::setupHalfEllipse(bool)
vcl::test::OutputDeviceTestPolygon::setupLines()
vcl::test::OutputDeviceTestPolygon::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolygon::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestRect::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestRect::setupRectangleOnSize4096()
vcl::text::ImplLayoutArgs::AddFallbackRun(int, int, bool)
vcl::text::ImplLayoutArgs::AddRun(int, int, bool)
vcl::text::ImplLayoutArgs::GetNextPos(int*, bool*)
vcl::text::ImplLayoutArgs::HasFallbackRun() const
vcl::text::ImplLayoutArgs::ImplLayoutArgs(rtl::OUString const&, int, int, SalLayoutFlags, LanguageTag const&, vcl::text::TextLayoutCache const*)
vcl::text::ImplLayoutArgs::ResetPos()
vcl::text::ImplLayoutArgs::SetDXArray(int const*)
vcl::text::ImplLayoutArgs::SetLayoutWidth(int)
vcl::text::ImplLayoutArgs::SetOrientation(o3tl::strong_int<short, FractionTag<10> >)
vcl::text::TextLayoutCache::TextLayoutCache(char16_t const*, int)
vcl::unohelper::DragAndDropClient::dragDropEnd(com::sun::star::datatransfer::dnd::DragSourceDropEvent const&)
vcl::unohelper::DragAndDropClient::dragEnter(com::sun::star::datatransfer::dnd::DropTargetDragEnterEvent const&)
vcl::unohelper::DragAndDropClient::dragExit(com::sun::star::datatransfer::dnd::DropTargetEvent const&)
vcl::unohelper::DragAndDropClient::dragGestureRecognized(com::sun::star::datatransfer::dnd::DragGestureEvent const&)
vcl::unohelper::DragAndDropClient::dragOver(com::sun::star::datatransfer::dnd::DropTargetDragEvent const&)
vcl::unohelper::DragAndDropClient::drop(com::sun::star::datatransfer::dnd::DropTargetDropEvent const&)
vcl::unohelper::DragAndDropClient::~DragAndDropClient()
vcl::unohelper::DragAndDropWrapper::DragAndDropWrapper(vcl::unohelper::DragAndDropClient*)
vcl::unohelper::TextDataObject::TextDataObject(rtl::OUString const&)
vcl::unohelper::TextDataObject::getTransferData(com::sun::star::datatransfer::DataFlavor const&)
vcl::unohelper::TextDataObject::getTransferDataFlavors()
vcl::unohelper::TextDataObject::isDataFlavorSupported(com::sun::star::datatransfer::DataFlavor const&)
vcl::unohelper::TextDataObject::queryInterface(com::sun::star::uno::Type const&)
vcl::unohelper::TextDataObject::~TextDataObject()
vcl::unotools::VclCanvasBitmap::VclCanvasBitmap(BitmapEx const&)
vcl::unotools::VclCanvasBitmap::convertColorSpace(com::sun::star::uno::Sequence<double> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XColorSpace> const&)
vcl::unotools::VclCanvasBitmap::convertFromARGB(com::sun::star::uno::Sequence<com::sun::star::rendering::ARGBColor> const&)
vcl::unotools::VclCanvasBitmap::convertFromIntegerColorSpace(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XColorSpace> const&)
vcl::unotools::VclCanvasBitmap::convertFromPARGB(com::sun::star::uno::Sequence<com::sun::star::rendering::ARGBColor> const&)
vcl::unotools::VclCanvasBitmap::convertFromRGB(com::sun::star::uno::Sequence<com::sun::star::rendering::RGBColor> const&)
vcl::unotools::VclCanvasBitmap::convertIntegerFromARGB(com::sun::star::uno::Sequence<com::sun::star::rendering::ARGBColor> const&)
vcl::unotools::VclCanvasBitmap::convertIntegerFromPARGB(com::sun::star::uno::Sequence<com::sun::star::rendering::ARGBColor> const&)
vcl::unotools::VclCanvasBitmap::convertIntegerFromRGB(com::sun::star::uno::Sequence<com::sun::star::rendering::RGBColor> const&)
vcl::unotools::VclCanvasBitmap::convertIntegerToARGB(com::sun::star::uno::Sequence<signed char> const&)
vcl::unotools::VclCanvasBitmap::convertIntegerToPARGB(com::sun::star::uno::Sequence<signed char> const&)
vcl::unotools::VclCanvasBitmap::convertIntegerToRGB(com::sun::star::uno::Sequence<signed char> const&)
vcl::unotools::VclCanvasBitmap::convertToARGB(com::sun::star::uno::Sequence<double> const&)
vcl::unotools::VclCanvasBitmap::convertToIntegerColorSpace(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XIntegerBitmapColorSpace> const&)
vcl::unotools::VclCanvasBitmap::convertToPARGB(com::sun::star::uno::Sequence<double> const&)
vcl::unotools::VclCanvasBitmap::convertToRGB(com::sun::star::uno::Sequence<double> const&)
vcl::unotools::VclCanvasBitmap::getBitsPerPixel()
vcl::unotools::VclCanvasBitmap::getColorSpace()
vcl::unotools::VclCanvasBitmap::getComponentBitCounts()
vcl::unotools::VclCanvasBitmap::getComponentTags()
vcl::unotools::VclCanvasBitmap::getData(com::sun::star::rendering::IntegerBitmapLayout&, com::sun::star::geometry::IntegerRectangle2D const&)
vcl::unotools::VclCanvasBitmap::getEndianness()
vcl::unotools::VclCanvasBitmap::getIndex(com::sun::star::uno::Sequence<double>&, int)
vcl::unotools::VclCanvasBitmap::getMemoryLayout()
vcl::unotools::VclCanvasBitmap::getNumberOfEntries()
vcl::unotools::VclCanvasBitmap::getPixel(com::sun::star::rendering::IntegerBitmapLayout&, com::sun::star::geometry::IntegerPoint2D const&)
vcl::unotools::VclCanvasBitmap::getProperties()
vcl::unotools::VclCanvasBitmap::getRenderingIntent()
vcl::unotools::VclCanvasBitmap::getScaledBitmap(com::sun::star::geometry::RealSize2D const&, unsigned char)
vcl::unotools::VclCanvasBitmap::getSize()
vcl::unotools::VclCanvasBitmap::getType()
vcl::unotools::VclCanvasBitmap::hasAlpha()
vcl::unotools::VclCanvasBitmap::setIndex(com::sun::star::uno::Sequence<double> const&, unsigned char, int)
vcl::unotools::VclCanvasBitmap::~VclCanvasBitmap()
vcl::unotools::b2DPointFromPoint(Point const&)
vcl::unotools::b2DSizeFromSize(Size const&)
vcl::unotools::colorToDoubleSequence(Color const&, com::sun::star::uno::Reference<com::sun::star::rendering::XColorSpace> const&)
vcl::unotools::doubleSequenceToColor(com::sun::star::uno::Sequence<double> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XColorSpace> const&)
vcl::unotools::pointFromB2DPoint(basegfx::B2DPoint const&)
vcl::unotools::pointFromB2IPoint(basegfx::B2IPoint const&)
vcl::unotools::pointFromIntegerPoint2D(com::sun::star::geometry::IntegerPoint2D const&)
vcl::unotools::rectangleFromB2IRectangle(basegfx::B2IRange const&)
vcl::unotools::rectangleFromIntegerRectangle2D(com::sun::star::geometry::IntegerRectangle2D const&)
vcl::unotools::sizeFromB2DSize(basegfx::B2DVector const&)
vcl::unotools::sizeFromIntegerSize2D(com::sun::star::geometry::IntegerSize2D const&)
vcl::unotools::sizeFromRealSize2D(com::sun::star::geometry::RealSize2D const&)
vcl_crc64
vec_compress
vec_expand
verifyLink
verifyMDO
verifyPricer
verify_basis
verify_solution
verify_stability
weld::AssistantController::AssistantController(weld::Widget*, rtl::OUString const&, rtl::OString const&)
weld::AssistantController::~AssistantController()
weld::ButtonPressRepeater::ButtonPressRepeater(weld::Button&, Link<weld::Button&, void> const&, Link<CommandEvent const&, void> const&)
weld::CustomWeld::CustomWeld(weld::Builder&, rtl::OString const&, weld::CustomWidgetController&)
weld::CustomWidgetController::DragBeginHdl(weld::DrawingArea&)
weld::CustomWidgetController::~CustomWidgetController()
weld::DateFormatter::DateFormatter(weld::Entry&)
weld::DateFormatter::FormatNumber(int) const
weld::DateFormatter::GetCalendarWrapper() const
weld::DateFormatter::Init()
weld::DateFormatter::~DateFormatter()
weld::DialogController::~DialogController()
weld::DoubleNumericFormatter::CheckText(rtl::OUString const&) const
weld::DoubleNumericFormatter::DoubleNumericFormatter(weld::Entry&)
weld::DoubleNumericFormatter::DoubleNumericFormatter(weld::FormattedSpinButton&)
weld::DoubleNumericFormatter::FormatChanged(FORMAT_CHANGE_TYPE)
weld::DoubleNumericFormatter::ResetConformanceTester()
weld::DoubleNumericFormatter::~DoubleNumericFormatter()
weld::EntryFormatter::ClearMaxValue()
weld::EntryFormatter::ClearMinValue()
weld::EntryFormatter::EntryFormatter(weld::Entry&)
weld::EntryFormatter::EntryFormatter(weld::FormattedSpinButton&)
weld::EntryFormatter::FieldModified()
weld::EntryFormatter::GetEntrySelection() const
weld::EntryFormatter::GetEntrySelectionOptions() const
weld::EntryFormatter::GetEntryText() const
weld::EntryFormatter::Init()
weld::EntryFormatter::SetEntryText(rtl::OUString const&, Selection const&)
weld::EntryFormatter::SetEntryTextColor(Color const*)
weld::EntryFormatter::SetMaxValue(double)
weld::EntryFormatter::SetMinValue(double)
weld::EntryFormatter::SetSpinSize(double)
weld::EntryFormatter::UpdateCurrentValue(double)
weld::EntryFormatter::~EntryFormatter()
weld::EntryTreeView::EntryTreeView(std::unique_ptr<weld::Entry, std::default_delete<weld::Entry> >, std::unique_ptr<weld::TreeView, std::default_delete<weld::TreeView> >)
weld::GenericDialogController::~GenericDialogController()
weld::HexColorControl::HexColorControl(std::unique_ptr<weld::Entry, std::default_delete<weld::Entry> >)
weld::HexColorControl::~HexColorControl()
weld::LongCurrencyFormatter::Init()
weld::LongCurrencyFormatter::LongCurrencyFormatter(weld::Entry&)
weld::LongCurrencyFormatter::LongCurrencyFormatter(weld::FormattedSpinButton&)
weld::LongCurrencyFormatter::~LongCurrencyFormatter()
weld::MessageDialogController::MessageDialogController(weld::Widget*, rtl::OUString const&, rtl::OString const&, rtl::OString const&)
weld::MessageDialogController::~MessageDialogController()
weld::MetricSpinButton::format_number(int) const
weld::MetricSpinButton::spin_button_input(int*)
weld::MetricSpinButton::spin_button_value_changed(weld::SpinButton&)
weld::PatternFormatter::EntryGainFocus()
weld::PatternFormatter::EntryLostFocus()
weld::PatternFormatter::Modify()
weld::PatternFormatter::PatternFormatter(weld::Entry&)
weld::PatternFormatter::~PatternFormatter()
weld::RemoveParentKeepChildren(weld::TreeView&, weld::TreeIter const&)
weld::TimeFormatter::ConvertValue(int)
weld::TimeFormatter::ConvertValue(tools::Time const&)
weld::TimeFormatter::FormatNumber(int) const
weld::TimeFormatter::Init()
weld::TimeFormatter::TimeFormatter(weld::Entry&)
weld::TimeFormatter::TimeFormatter(weld::FormattedSpinButton&)
weld::TimeFormatter::~TimeFormatter()
weld::WidgetStatusListener::WidgetStatusListener(weld::Widget*, rtl::OUString const&)
weld::WidgetStatusListener::dispose()
weld::WidgetStatusListener::disposing(com::sun::star::lang::EventObject const&)
weld::WidgetStatusListener::startListening()
weld::WidgetStatusListener::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
write_LP
write_MPS
write_XLI
write_basis
write_freeMPS
write_freemps
write_lp
write_lpcomment
write_lpex
write_lprow
write_mps
write_params
writerperfect::DirectoryStream::DirectoryStream(com::sun::star::uno::Reference<com::sun::star::ucb::XContent> const&)
writerperfect::DirectoryStream::Impl::Impl(com::sun::star::uno::Reference<com::sun::star::ucb::XContent> const&)
writerperfect::DirectoryStream::subStreamName(unsigned int)
writerperfect::DirectoryStream::~DirectoryStream()
writerperfect::DocumentHandler::DocumentHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&)
writerperfect::DocumentHandler::characters(librevenge::RVNGString const&)
writerperfect::DocumentHandler::endDocument()
writerperfect::DocumentHandler::endElement(char const*)
writerperfect::DocumentHandler::startDocument()
writerperfect::DocumentHandler::startElement(char const*, librevenge::RVNGPropertyList const&)
writerperfect::WPFTEncodingDialog::WPFTEncodingDialog(weld::Window*, rtl::OUString const&, rtl::OUString const&)
writerperfect::WPFTEncodingDialog::~WPFTEncodingDialog()
writerperfect::WPXSvInputStream::WPXSvInputStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
writerperfect::WPXSvInputStream::~WPXSvInputStream()
xmloff::AnimationsExporter::AnimationsExporter(SvXMLExport&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
xmloff::AnimationsExporter::~AnimationsExporter()
xmloff::ImageScaleModeHandler::ImageScaleModeHandler()
xmloff::OControlBorderHandler::OControlBorderHandler(xmloff::OControlBorderHandler::BorderFacet)
xmloff::OControlBorderHandler::exportXML(rtl::OUString&, com::sun::star::uno::Any const&, SvXMLUnitConverter const&) const
xmloff::OControlBorderHandler::importXML(rtl::OUString const&, com::sun::star::uno::Any&, SvXMLUnitConverter const&) const
xmloff::OFontWidthHandler::OFontWidthHandler()
xmloff::OFontWidthHandler::exportXML(rtl::OUString&, com::sun::star::uno::Any const&, SvXMLUnitConverter const&) const
xmloff::OFontWidthHandler::importXML(rtl::OUString const&, com::sun::star::uno::Any&, SvXMLUnitConverter const&) const
xmloff::OFormLayerXMLExport::OFormLayerXMLExport(SvXMLExport&)
xmloff::OFormLayerXMLExport::excludeFromExport(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
xmloff::OFormLayerXMLExport::exportAutoControlNumberStyles()
xmloff::OFormLayerXMLExport::getControlId(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
xmloff::OFormLayerXMLExport::getControlNumberStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
xmloff::OFormLayerXMLExport::~OFormLayerXMLExport()
xmloff::OFormLayerXMLImport::OFormLayerXMLImport(SvXMLImport&)
xmloff::OFormLayerXMLImport::applyControlNumberStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
xmloff::OFormLayerXMLImport::createContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
xmloff::OFormLayerXMLImport::documentDone()
xmloff::OFormLayerXMLImport::lookupControl(rtl::OUString const&)
xmloff::OFormLayerXMLImport::setAutoStyleContext(SvXMLStylesContext*)
xmloff::OFormLayerXMLImport::~OFormLayerXMLImport()
xmloff::OOfficeFormsExport::OOfficeFormsExport(SvXMLExport&)
xmloff::OOfficeFormsExport::~OOfficeFormsExport()
xmloff::ORotationAngleHandler::ORotationAngleHandler()
xmloff::ORotationAngleHandler::exportXML(rtl::OUString&, com::sun::star::uno::Any const&, SvXMLUnitConverter const&) const
xmloff::ORotationAngleHandler::importXML(rtl::OUString const&, com::sun::star::uno::Any&, SvXMLUnitConverter const&) const
xmloff::token::IsXMLToken(std::basic_string_view<char, std::char_traits<char> >, xmloff::token::XMLTokenEnum)
xmlreader::Pad::addEphemeral(char const*, int)
xmlreader::XmlReader::XmlReader(rtl::OUString const&)
xmlreader::XmlReader::~XmlReader()
xmlscript::LibDescriptorArray::LibDescriptorArray(int)
xmlscript::LibDescriptorArray::~LibDescriptorArray()
xmlscript::createInputStream(signed char const*, int)
xmlscript::createOutputStream(std::vector<signed char, std::allocator<signed char> >*)
yacc_read
yieldformessages
