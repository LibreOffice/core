AllSettings::GetMathLayoutRTL()
AllSettings::SetMiscSettings(MiscSettings const&)
AlphaMask::AlphaCombineOr(AlphaMask const&)
AlphaMask::AlphaMask(AlphaMask&&)
AlphaMask::hasAlpha() const
AlphaMask::operator=(Bitmap const&)
Animation::Invert()
Animation::ReduceColors(unsigned short)
Application::AddKeyListener(Link<VclWindowEvent&, bool> const&)
Application::AddToRecentDocumentList(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
Application::DeInit()
Application::GetDialogCancelMode()
Application::GetDispatchLevel()
Application::GetDisplayBuiltInScreen()
Application::GetFirstTopLevelWindow()
Application::GetHWOSConfInfo(int, bool)
Application::GetLastInputInterval()
Application::GetNextTopLevelWindow(vcl::Window const*)
Application::GetReservedKeyCode(unsigned long)
Application::GetReservedKeyCodeCount()
Application::GetScreenPosSizePixel(unsigned int)
Application::GetTopWindow(long)
Application::GetTopWindowCount()
Application::GetVCLToolkit()
Application::IsBitmapRendering()
Application::IsInMain()
Application::IsInModalMode()
Application::LoadBrandBitmap(std::basic_string_view<char16_t, std::char_traits<char16_t> >, BitmapEx&)
Application::MergeSystemSettings(AllSettings&)
Application::NotifyAllWindows(DataChangedEvent&)
Application::RemoveKeyListener(Link<VclWindowEvent&, bool> const&)
Application::RemoveMouseAndKeyEvents(vcl::Window*)
Application::SetHelp(Help*)
Application::createFilePicker(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
Application::createFolderPicker(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
Application::hasNativeFileSelection()
Application::setDeInitHook(Link<LinkParamNone*, void> const&)
AsWinding(SkPath const&, SkPath*)
AsyncQuitHandler::AsyncQuitHandler()
AsyncQuitHandler::OnAsyncQuit(AsyncQuitHandler*, void*)
AsyncQuitHandler::QuitApplication()
B3dCamera::CalcFocalLength()
B3dCamera::CalcNewViewportValues()
B3dCamera::DeviceRectangleChange()
B3dViewport::B3dViewport()
B3dViewport::CalcOrientation()
B3dViewport::SetVUV(basegfx::B3DVector const&)
B3dViewport::~B3dViewport()
BasResLocale()
BasicDLL::BasicBreak()
BasicDLL::EnableBreak(bool)
BasicDLL::SetDebugMode(bool)
BasicManager::BasicManager(SotStorage&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, StarBASIC*, rtl::OUString const*, bool)
BasicManager::BasicManager(StarBASIC*, rtl::OUString const*, bool)
BasicManager::CheckModules(StarBASIC*, bool)
BasicManager::CreateLibInfo()
BasicManager::ExecuteMacro(rtl::OUString const&, SbxArray*, SbxValue*)
BasicManager::ExecuteMacro(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, SbxValue*)
BasicManager::FindLibInfo(StarBASIC const*)
BasicManager::GetDialogLibraryContainer() const
BasicManager::GetLibId(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
BasicManager::GetLibName(unsigned short)
BasicManager::GetScriptLibraryContainer() const
BasicManager::HasExeCode(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
BasicManager::ImgVersion12PsswdBinaryLimitExceeded(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
BasicManager::ImpCreateStdLib(StarBASIC*)
BasicManager::ImpLoadLibrary(BasicLibInfo*, SotStorage*)
BasicManager::ImpMgrNotLoaded(rtl::OUString const&)
BasicManager::ImplEncryptStream(SvStream&)
BasicManager::ImplLoadBasic(SvStream&, tools::SvRef<StarBASIC>&) const
BasicManager::IsBasicModified() const
BasicManager::LoadBasicManager(SotStorage&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
BasicManager::LoadLib(unsigned short)
BasicManager::LoadOldBasicManager(SotStorage&)
BasicManager::SetLibraryContainerInfo(LibraryContainerInfo const&)
BasicManager::~BasicManager()
BigInt::BigInt(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
BigInt::BigInt(unsigned int)
BigInt::DivMod(BigInt const&, BigInt*, BigInt*) const
BigInt::operator double() const
BigInt::operator%=(BigInt const&)
BigInt::operator=(BigInt const&)
Bitmap::CreateAlphaMask(Color const&) const
Bitmap::CreateMask(Color const&) const
Bitmap::GetSystemData(BitmapSystemData&) const
Bitmap::RemoveBlendedStartColor(Color const&, AlphaMask const&)
BitmapBasicMorphologyFilter::BitmapBasicMorphologyFilter(BasicMorphologyOp, int, unsigned char)
BitmapBasicMorphologyFilter::filter(Bitmap const&) const
BitmapColorQuantizationFilter::execute(BitmapEx const&) const
BitmapConvolutionMatrixFilter::execute(BitmapEx const&) const
BitmapEmbossGreyFilter::execute(BitmapEx const&) const
BitmapEx::AutoScaleBitmap(BitmapEx const&, long)
BitmapEx::GetColorModel(com::sun::star::uno::Sequence<int>&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned char&)
BitmapEx::GetContour(bool, tools::Rectangle const*)
BitmapEx::Invert()
BitmapEx::ModifyBitmapEx(basegfx::BColorModifierStack const&) const
BitmapEx::Replace(Color const*, Color const*, unsigned long)
BitmapEx::Replace(Color const*, Color const*, unsigned long, unsigned char const*)
BitmapEx::ReplaceTransparency(Color const&)
BitmapFilter::Filter(Animation&, BitmapFilter const&)
BitmapFilterStackBlur::execute(BitmapEx const&) const
BitmapInfoAccess::BitmapInfoAccess(AlphaMask const&, BitmapAccessMode)
BitmapInfoAccess::GetMatchingPaletteIndex(BitmapColor const&) const
BitmapMedianFilter::execute(BitmapEx const&) const
BitmapMonochromeFilter::execute(BitmapEx const&) const
BitmapMosaicFilter::execute(BitmapEx const&) const
BitmapPalette::BitmapPalette(BitmapColor const*, BitmapColor const*)
BitmapPalette::BitmapPalette(std::initializer_list<BitmapColor>)
BitmapPalette::IsGreyPalette8Bit() const
BitmapPalette::operator==(BitmapPalette const&) const
BitmapPopArtFilter::execute(BitmapEx const&) const
BitmapSepiaFilter::execute(BitmapEx const&) const
BitmapShadowFilter::execute(BitmapEx const&) const
BitmapSharpenFilter::BitmapSharpenFilter()
BitmapSimpleColorQuantizationFilter::execute(BitmapEx const&) const
BitmapSmoothenFilter::execute(BitmapEx const&) const
BitmapSobelGreyFilter::execute(BitmapEx const&) const
BitmapSolarizeFilter::execute(BitmapEx const&) const
BitmapSymmetryCheck::checkImpl(BitmapReadAccess const*)
BitmapWriteAccess::SetFillColor()
BmpWriter(SvStream&, Graphic const&, FilterConfigItem*)
BrowseBox::BrowseBox(vcl::Window*, long, BrowserMode)
BrowseBox::Clear()
BrowseBox::Dispatch(unsigned short)
BrowseBox::DoHideCursor()
BrowseBox::DoShowCursor()
BrowseBox::DrawCursor()
BrowseBox::FreezeColumn(unsigned short)
BrowseBox::GetCursorHideCount() const
BrowseBox::GetDataFlavors() const
BrowseBox::GetFont() const
BrowseBox::GetTitleHeight() const
BrowseBox::GetUpdateMode() const
BrowseBox::GoToColumnId(unsigned short, bool, bool)
BrowseBox::GoToRow(int, bool, bool)
BrowseBox::ImplPaintData(OutputDevice&, tools::Rectangle const&, bool)
BrowseBox::IsColumnSelected(unsigned short) const
BrowseBox::IsDropFormatSupported(SotClipboardFormatId) const
BrowseBox::IsFieldVisible(int, unsigned short, bool) const
BrowseBox::IsFrozen(unsigned short) const
BrowseBox::MakeFieldVisible(int, unsigned short)
BrowseBox::PaintData(vcl::Window const&, OutputDevice&, tools::Rectangle const&)
BrowseBox::ScrollColumns(int)
BrowseBox::ScrollRows(int)
BrowseBox::SetColumnPos(unsigned short, unsigned short)
BrowseBox::SetFont(vcl::Font const&)
BrowseBox::SetTitleLines(unsigned short)
BrowseBox::SetToggledSelectedColumn(unsigned short)
BrowseBox::StartScroll()
BrowseBox::ToggleSelectedColumn()
BrowseBox::commitBrowseBoxEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
BrowseBox::commitHeaderBarEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&, bool)
BrowseBox::commitTableEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
BrowseBox::getAccessibleFactory()
BrowseBox::isAccessibleAlive() const
Button::GetImageAlign() const
Button::SetImageAlign(ImageAlign)
Button::SetModeImage(Image const&)
CLuceneError::CLuceneError()
CLuceneError::CLuceneError(CLuceneError const&)
CLuceneError::CLuceneError(int, char const*, bool)
CLuceneError::CLuceneError(int, wchar_t const*, bool)
CLuceneError::set(int, char const*, bool)
CLuceneError::set(int, wchar_t const*, bool)
CLuceneError::twhat()
CLuceneError::~CLuceneError()
CairoCommon::GetBitCount() const
CairoCommon::applyColor(_cairo*, Color, double)
CairoCommon::clipRegion(_cairo*, vcl::Region const&)
CairoCommon::copyWithOperator(SalTwoRect const&, _cairo_surface*, _cairo_operator, bool)
CairoCommon::createCairoSurface(BitmapBuffer const*)
CairoCommon::createTmpCompatibleCairoContext() const
CairoCommon::doXorOnRelease(int, int, int, int, _cairo_surface*, int) const
CairoCommon::invert(basegfx::B2DPolygon const&, SalInvert, bool)
CairoCommon::releaseCairoContext(_cairo*, bool, basegfx::B2DRange const&) const
CairoCommon::renderSource(_cairo*, SalTwoRect const&, _cairo_surface*)
CairoTextRender::DrawTextLayout(GenericSalLayout const&, SalGraphics const&)
CairoTextRender::clipRegion(_cairo*)
CairoTextRender::getCairoContext()
CairoTextRender::releaseCairoContext(_cairo*)
CairoTextRender::~CairoTextRender()
CalendarField::CalendarField(vcl::Window*, long)
CalendarField::FocusWindowBelongsToControl(vcl::Window const*) const
CalendarField::ShowDropDown(bool)
CalendarField::StateChanged(StateChangedType)
CalendarField::dispose()
CalendarField::~CalendarField()
CalendarWrapper::getAllCalendars(com::sun::star::lang::Locale const&) const
CalendarWrapper::getDateTime() const
CalendarWrapper::getDisplayString(int, short) const
CalendarWrapper::getFirstDayOfWeek() const
CalendarWrapper::getGenitiveMonths() const
CalendarWrapper::getLoadedCalendar() const
CalendarWrapper::getNumberOfDaysInWeek() const
CalendarWrapper::getPartitiveMonths() const
CalendarWrapper::getUniqueID() const
CalendarWrapper::getValue(short) const
CalendarWrapper::loadCalendar(rtl::OUString const&, com::sun::star::lang::Locale const&, bool)
CalendarWrapper::setDateTime(double)
CalendarWrapper::setLocalDateTime(double)
Camera3D::Camera3D()
Camera3D::Camera3D(basegfx::B3DPoint const&, basegfx::B3DPoint const&, double)
Camera3D::SetBankAngle(double)
Camera3D::SetLookAt(basegfx::B3DPoint const&)
CancelButton::Click()
CellAttributeHelper::AllStylesToNames()
CellAttributeHelper::CellStyleCreated(ScDocument&, rtl::OUString const&)
CellAttributeHelper::CellStyleDeleted(ScStyleSheet const&)
CellAttributeHelper::ReIndexRegistered()
CellAttributeHelper::RegisteredAttrSetLess::operator()(ScPatternAttr const*, ScPatternAttr const*) const
CellAttributeHelper::RegisteredAttrSetLess::operator()(ScPatternAttr const*, rtl::OUString const*) const
CellAttributeHelper::RegisteredAttrSetLess::operator()(rtl::OUString const*, ScPatternAttr const*) const
CellAttributeHelper::UpdateAllStyleSheets(ScDocument&)
CellAttributeHelper::doUnregister(ScPatternAttr const&)
CellAttributeHelper::registerAndCheck(ScPatternAttr const&, bool) const
CellAttributeHolder::operator=(CellAttributeHolder const&)
CellAttributeHolder::operator=(CellAttributeHolder&&)
CellAttributeHolder::operator==(CellAttributeHolder const&) const
CharClass::getMyLocale() const
CharClass::isUpper(rtl::OUString const&, int) const
CharClass::isUpper(rtl::OUString const&, int, int) const
CheckBox::CalcMinimumSize(long) const
CheckBox::EnableTriState(bool)
CheckBox::GetCheckImage(AllSettings const&, DrawButtonFlags)
CheckBox::SetState(TriState)
CheckBox::Toggle()
CntByteItem::Clone(SfxItemPool*) const
CntByteItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
CntInt32Item::Clone(SfxItemPool*) const
CntUInt16Item::Clone(SfxItemPool*) const
CntUInt32Item::Clone(SfxItemPool*) const
CodeCompleteOptions::CodeCompleteOptions()
CodeCompleteOptions::IsAutoCloseParenthesisOn()
CodeCompleteOptions::IsAutoCloseQuotesOn()
CodeCompleteOptions::IsAutoCorrectOn()
CodeCompleteOptions::IsCodeCompleteOn()
CodeCompleteOptions::IsExtendedTypeDeclaration()
CodeCompleteOptions::IsProcedureAutoCompleteOn()
CodeCompleteOptions::SetAutoCloseParenthesisOn(bool)
CodeCompleteOptions::SetAutoCloseQuotesOn(bool)
CodeCompleteOptions::SetAutoCorrectOn(bool)
CodeCompleteOptions::SetCodeCompleteOn(bool)
CodeCompleteOptions::SetExtendedTypeDeclaration(bool)
CodeCompleteOptions::SetProcedureAutoCompleteOn(bool)
ColorListBox::CalcBestWidthRequest()
ColorListBox::EnsurePaletteManager()
ColorListBox::LockWidthRequest(int)
ColorListBox::SelectEntry(NamedColor const&)
ColorListBox::Selected(NamedColor const&)
ColorListBox::ShowPreview(NamedColor const&)
ColorListBox::createColorWindow()
ColorWindow::ColorWindow(rtl::OUString, std::shared_ptr<PaletteManager>, ColorStatus&, unsigned short, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, MenuOrToolMenuButton const&, std::function<weld::Window* ()>, std::function<void (rtl::OUString const&, NamedColor const&)>)
ColorWindow::GetAutoColor() const
ColorWindow::GetSelectEntryColor() const
ColorWindow::GetSelectEntryColor(ValueSet const*)
ColorWindow::GrabFocus()
ColorWindow::IsNoSelection() const
ColorWindow::SelectEntry(Color const&)
ColorWindow::SelectEntry(NamedColor const&)
ColorWindow::SelectValueSetEntry(SvxColorValueSet*, Color const&)
ColorWindow::ShowNoneButton()
ColorWindow::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
ColorWindow::~ColorWindow()
ComboBox::CalcAdjustedSize(Size const&) const
ComboBox::CalcBlockSize(unsigned short, unsigned short) const
ComboBox::Clear()
ComboBox::EnableAutoSize(bool)
ComboBox::EnableAutocomplete(bool, bool)
ComboBox::GetBoundingRectangle(int) const
ComboBox::GetDisplayLineCount() const
ComboBox::GetDropDownLineCount() const
ComboBox::GetDropDownPosSizePixel() const
ComboBox::GetEntry(int) const
ComboBox::GetEntryCount() const
ComboBox::GetEntryImage(int) const
ComboBox::GetEntryPos(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ComboBox::GetIndexForPoint(Point const&, int&) const
ComboBox::GetMaxVisColumnsAndLines(unsigned short&, unsigned short&) const
ComboBox::GetSelectedEntryCount() const
ComboBox::GetSelectedEntryPos(int) const
ComboBox::GetTopEntry() const
ComboBox::InsertEntry(rtl::OUString const&, int)
ComboBox::InsertEntryWithImage(rtl::OUString const&, Image const&, int)
ComboBox::IsAutocompleteEnabled() const
ComboBox::IsEntryPosSelected(int) const
ComboBox::IsInDropDown() const
ComboBox::IsMultiSelectionEnabled() const
ComboBox::IsTravelSelect() const
ComboBox::RemoveEntryAt(int)
ComboBox::Select()
ComboBox::SelectEntryPos(int, bool)
ComboBox::SetBorderStyle(WindowBorderStyle)
ComboBox::SetDropDownLineCount(unsigned short)
ComboBox::SetHighlightColor(Color const&)
ComboBox::SetHighlightTextColor(Color const&)
ComboBox::SetNoSelection()
ComboBox::ToggleDropDown()
CommandEvent::CommandEvent()
CommandEvent::GetAutoScrollData() const
CommandEvent::GetDialogData() const
CommandEvent::GetGesturePanData() const
CommandEvent::GetGestureRotateData() const
CommandExtTextInputData::CommandExtTextInputData(CommandExtTextInputData const&)
CommandWheelData::CommandWheelData()
CompressGraphicsDialog::Compress(SvStream&)
CompressGraphicsDialog::GetSelectedInterpolationType() const
CompressGraphicsDialog::GetViewHeightInch() const
CompressGraphicsDialog::GetViewWidthInch() const
CompressGraphicsDialog::Initialize()
CompressGraphicsDialog::Update()
CompressGraphicsDialog::UpdateNewHeightMF()
CompressGraphicsDialog::UpdateNewWidthMF()
CompressGraphicsDialog::UpdateResolutionLB()
CompressGraphicsDialog::UpdateSensitivity(bool)
CompressGraphicsDialog::recallParameter()
Config::Flush()
ContextChangeEventMultiplexer::GetModuleName(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
Control::AppendLayoutData(Control const&) const
Control::CallEventListeners(VclEventId, void*)
Control::Control(WindowType)
Control::CreateLayoutData() const
Control::DrawControlText(OutputDevice&, tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >*, rtl::OUString*, Size const*) const
Control::GetCharacterBounds(long) const
Control::GetControlTextRect(OutputDevice&, tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, Size*) const
Control::GetIndexForPoint(Point const&) const
Control::GetLineStartEnd(long) const
Control::GetReferenceDevice() const
Control::GetUnzoomedControlPointFont() const
Control::HasLayoutData() const
Control::ImplCallEventListenersAndHandler(VclEventId, std::function<void ()> const&)
Control::ImplInitSettings()
Control::SetLayoutDataParent(Control const*) const
Control::SetReferenceDevice(OutputDevice*)
Control::SetShowAccelerator(bool)
Control::ToRelativeLineIndex(long) const
CreateMainLoopThread(void (*)(void*), void*)
CreateSVHelpData()
CreateSVWinData()
CreateStarSymbolToMSMultiFont()
CurtisReidMeasure
CurtisReidScales
CustomToolBarImportHelper::MSOTCIDToOOCommand(short)
CustomToolBarImportHelper::ScaleImage(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic>&, long)
CustomToolBarImportHelper::addIcon(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString const&)
CustomToolBarImportHelper::createCommandFromMacro(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
Date::GetAsNormalizedDays() const
Date::IsEndOfMonth(unsigned short, unsigned short, short)
Date::IsValidDate(unsigned short, unsigned short, short)
Date::Normalize(unsigned short&, unsigned short&, short&)
Date::operator++()
Date::operator--()
DateTime::CreateFromWin32FileDateTime(unsigned int, unsigned int)
DateTime::GetSecFromDateTime(Date const&) const
DateTime::GetWin32FileDateTime(unsigned int&, unsigned int&) const
DateTime::IsBetween(DateTime const&, DateTime const&) const
DateTime::NormalizeTimeRemainderAndApply(tools::Time&)
DbgSetTestSolarMutex(void (*)())
DbgTestSolarMutex()
DbgUnhandledException(com::sun::star::uno::Any const&, char const*, char const*, char const*, char const*)
DdeConnection::GetServiceName() const
DdeConnection::GetTopicName() const
DdeData::DdeData()
DdeData::DdeData(DdeData const&)
DdeData::DdeData(DdeData&&)
DdeData::DdeData(void const*, long, SotClipboardFormatId)
DdeData::GetFormat() const
DdeData::SetFormat(SotClipboardFormatId)
DdeData::getSize() const
DdeData::operator=(DdeData const&)
DdeData::operator=(DdeData&&)
DdeGetPutItem::AdviseLoop(bool)
DdeGetPutItem::DdeGetPutItem(DdeItem const&)
DdeGetPutItem::DdeGetPutItem(rtl::OUString const&)
DdeGetPutItem::Get(SotClipboardFormatId)
DdeGetPutItem::Put(DdeData const*)
DdeHotLink::DdeHotLink(DdeConnection&, rtl::OUString const&)
DdeItem::DdeItem(DdeItem const&)
DdeItem::DdeItem(rtl::OUString const&)
DdeItem::NotifyClient()
DdeItem::~DdeItem()
DdeLink::DdeLink(DdeConnection&, rtl::OUString const&, long)
DdeLink::Notify()
DdeLink::~DdeLink()
DdeService::AddFormat(SotClipboardFormatId)
DdeService::AddTopic(DdeTopic const&)
DdeService::DdeService(rtl::OUString const&)
DdeService::Formats()
DdeService::GetName() const
DdeService::GetServices()
DdeService::RemoveTopic(DdeTopic const&)
DdeService::Status()
DdeService::SysItems()
DdeService::Topics()
DdeService::~DdeService()
DdeTopic::AddItem(DdeItem const&)
DdeTopic::DdeTopic(rtl::OUString const&)
DdeTopic::Execute(rtl::OUString const*)
DdeTopic::Get(SotClipboardFormatId)
DdeTopic::GetName() const
DdeTopic::InsertItem(DdeItem*)
DdeTopic::MakeItem(rtl::OUString const&)
DdeTopic::Put(DdeData const*)
DdeTopic::RemoveItem(DdeItem const&)
DdeTopic::StartAdviseLoop()
DdeTopic::~DdeTopic()
DdeTransaction::Data(DdeData const*)
DdeTransaction::DdeTransaction(DdeConnection&, rtl::OUString const&, long)
DdeTransaction::Done(bool)
DecorationView::DrawFrame(tools::Rectangle const&, Color const&, Color const&)
DecorationView::DrawHandle(tools::Rectangle const&)
DecorationView::DrawHighlightFrame(tools::Rectangle const&, DrawHighlightFrameStyle)
DecorationView::DrawSeparator(Point const&, Point const&, bool)
DefaultItemInstanceManager::add(SfxPoolItem const&)
DefaultItemInstanceManager::find(SfxPoolItem const&) const
DefaultItemInstanceManager::remove(SfxPoolItem const&)
DestroySVHelpData(ImplSVHelpData*)
DestroySVWinData(ImplSVWinData*)
DevelopmentToolChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
DevelopmentToolChildWindow::DevelopmentToolChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
DevelopmentToolChildWindow::GetInfo() const
DffPropSet::DffPropSet()
DffPropSet::InitializePropSet(unsigned short) const
DffPropSet::ReadPropSet(SvStream&, bool)
DffPropSet::~DffPropSet()
DffPropertyReader::ApplyCustomShapeGeometryAttributes(SvStream&, SfxItemSet&, DffObjData const&) const
DffPropertyReader::ApplyCustomShapeTextAttributes(SfxItemSet&) const
DffPropertyReader::ApplyFillAttributes(SvStream&, SfxItemSet&, DffObjData const&) const
DffPropertyReader::ApplyLineAttributes(SfxItemSet&, MSO_SPT) const
DffPropertyReader::CheckAndCorrectExcelTextRotation(SvStream&, SfxItemSet&, DffObjData const&) const
DffPropertyReader::DffPropertyReader(SvxMSDffManager const&)
DffPropertyReader::Fix16ToAngle(int)
DffPropertyReader::ImportGradientColor(SfxItemSet&, unsigned int, double, double) const
DffPropertyReader::SetDefaultPropSet(SvStream&, unsigned int) const
DffPropertyReader::~DffPropertyReader()
DffRecordManager::Clear()
DffRecordManager::Consume(SvStream&, unsigned int)
DffRecordManager::DffRecordManager()
DffRecordManager::DffRecordManager(SvStream&)
DffRecordManager::First()
DffRecordManager::Last()
DffRecordManager::Next()
DffRecordManager::Prev()
Dialog::Dialog(WindowType)
Dialog::EndDialog(long)
Dialog::Execute()
Dialog::GetDrawWindowBorder(int&, int&, int&, int&) const
Dialog::GetFirstControlForFocus()
Dialog::GrabFocusToFirstControl()
Dialog::ImplEndExecuteModal()
Dialog::ImplInitDialog(vcl::Window*, long, Dialog::InitFlag)
Dialog::ImplLOKNotifier(vcl::Window*)
Dialog::ImplSetModalInputMode(bool)
Dialog::ImplStartExecute()
Dialog::SetInstallLOKNotifierHdl(Link<void*, vcl::ILibreOfficeKitNotifier*> const&)
Dialog::SetLOKTunnelingState(bool)
Dialog::SetModalInputMode(bool)
Dialog::SetPopupMenuHdl(Link<CommandEvent const&, bool> const&)
Dialog::StartExecuteAsync(VclAbstractDialog::AsyncContext&)
Dialog::add_button(PushButton*, int, bool)
Dialog::get_default_response() const
Dialog::get_widget_for_response(int)
Dialog::set_action_area(VclButtonBox*)
Dialog::set_content_area(VclBox*)
Dialog::set_default_response(int)
DialogGalleryPreview::DialogGalleryPreview()
DialogGalleryPreview::SetDrawingArea(weld::DrawingArea*)
DialogGalleryPreview::SetGraphic(INetURLObject const&)
DockingManager::EndPopupMode(vcl::Window const*)
DockingManager::GetFloatingWindow(vcl::Window const*)
DockingManager::GetPosSizePixel(vcl::Window const*)
DockingManager::IsDockable(vcl::Window const*)
DockingManager::IsFloating(vcl::Window const*)
DockingManager::IsLocked(vcl::Window const*)
DockingManager::Lock(vcl::Window const*)
DockingManager::SetFloatingMode(vcl::Window const*, bool)
DockingManager::SetPosSizePixel(vcl::Window const*, long, long, long, long, PosSizeFlags)
DockingManager::StartPopupMode(ToolBox*, vcl::Window const*)
DockingManager::StartPopupMode(ToolBox*, vcl::Window const*, FloatWinPopupFlags)
DockingManager::Unlock(vcl::Window const*)
DockingWindow::DockingWindow(vcl::Window*, long, char const*)
DockingWindow::GetFloatStyle() const
DockingWindow::GetFloatingPos() const
DockingWindow::GetMinOutputSizePixel() const
DockingWindow::ImplStartDocking(Point const&)
DockingWindow::SetFloatStyle(long)
DockingWindow::SetFloatingMode(bool)
DockingWindow::SetFloatingPos(Point const&)
DockingWindow::SetMinOutputSizePixel(Size const&)
DocumentSignatureManager::ImplOpenSignatureStream(int, bool)
DocumentSignatureManager::getGpgSecurityContext() const
DocumentSignatureManager::getGpgSecurityEnvironment()
DocumentSignatureManager::getSecurityContext() const
DocumentSignatureManager::isXML(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
DocumentSignatureManager::readManifest()
DocumentSignatureManager::setModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
DragSourceHelper::StartDrag(signed char, Point const&)
DrawingAreaUIObject::create(vcl::Window*)
DriverBlocklist::GetVendorNameFromId(unsigned int)
DriverBlocklist::IsDeviceBlocked(rtl::OUString const&, DriverBlocklist::VersionType, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
DriverBlocklist::Parser::getVersion(std::basic_string_view<char, std::char_traits<char> >)
DriverBlocklist::Parser::handleContent(xmlreader::XmlReader&)
DriverBlocklist::Parser::handleDevices(DriverBlocklist::DriverInfo&, xmlreader::XmlReader&)
DriverBlocklist::Parser::handleEntry(DriverBlocklist::DriverInfo&, xmlreader::XmlReader&)
DriverBlocklist::Parser::handleList(xmlreader::XmlReader&)
DropTargetHelper::ImplConstruct()
DropdownDockingWindow::DropdownDockingWindow(vcl::Window*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, bool)
DropdownDockingWindow::dispose()
DropdownDockingWindow::~DropdownDockingWindow()
E3dAttributesUndoAction::CanRepeat(SfxRepeatTarget&) const
E3dAttributesUndoAction::Redo()
E3dAttributesUndoAction::Undo()
E3dCompoundObject::AddToHdlList(SdrHdlList&) const
E3dCompoundObject::CloneSdrObject(SdrModel&) const
E3dCompoundObject::CreateObjectSpecificProperties()
E3dCompoundObject::E3dCompoundObject(SdrModel&)
E3dCompoundObject::E3dCompoundObject(SdrModel&, E3dCompoundObject const&)
E3dCompoundObject::GetHdlCount() const
E3dCompoundObject::GetObjIdentifier() const
E3dCompoundObject::RecalcSnapRect()
E3dCompoundObject::TakeXorPoly() const
E3dCompoundObject::TransformToScreenCoor(basegfx::B3DPolyPolygon const&) const
E3dCompoundObject::~E3dCompoundObject()
E3dExtrudeObj::E3dExtrudeObj(SdrModel&, E3dDefaultAttributes const&, basegfx::B2DPolyPolygon, double)
E3dObject::CloneSdrObject(SdrModel&) const
E3dObject::CreateObjectSpecificProperties()
E3dObject::CreateWireframe() const
E3dObject::E3dObject(SdrModel&)
E3dObject::E3dObject(SdrModel&, E3dObject const&)
E3dObject::GetBreakObj()
E3dObject::GetFullTransform() const
E3dObject::GetObjIdentifier() const
E3dObject::GetObjInventor() const
E3dObject::InvalidateBoundVolume()
E3dObject::IsBreakObjPossible()
E3dObject::NbcMove(Size const&)
E3dObject::NbcResize(Point const&, Fraction const&, Fraction const&)
E3dObject::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
E3dObject::NbcSetTransform(basegfx::B3DHomMatrix const&)
E3dObject::NewGeoData() const
E3dObject::RecalcBoundVolume() const
E3dObject::RecalcSnapRect()
E3dObject::RestoreGeoData(SdrObjGeoData const&)
E3dObject::SaveGeoData(SdrObjGeoData&) const
E3dObject::SetSelected(bool)
E3dObject::SetTransform(basegfx::B3DHomMatrix const&)
E3dObject::SetTransformChanged()
E3dObject::StructureChanged()
E3dObject::TakeObjInfo(SdrObjTransformInfoRec&) const
E3dObject::TakeObjNamePlural() const
E3dObject::TakeObjNameSingul() const
E3dObject::getParentE3dSceneFromE3dObject() const
E3dObject::getRootE3dSceneFromE3dObject() const
E3dObject::~E3dObject()
E3dPolygonObj::E3dPolygonObj(SdrModel&, basegfx::B3DPolyPolygon const&)
E3dScene::BckCreate(SdrDragStat&)
E3dScene::BegCreate(SdrDragStat&)
E3dScene::BrkCreate(SdrDragStat&)
E3dScene::CloneSdrObject(SdrModel&) const
E3dScene::CreateObjectSpecificProperties()
E3dScene::CreateObjectSpecificViewContact()
E3dScene::E3dScene(SdrModel&, E3dScene const&)
E3dScene::EndCreate(SdrDragStat&, SdrCreateCmd)
E3dScene::GetObjIdentifier() const
E3dScene::GetSubList() const
E3dScene::ImpCleanup3DDepthMapper()
E3dScene::IsBreakObjPossible()
E3dScene::MovCreate(SdrDragStat&)
E3dScene::NbcInsertObject(SdrObject*, unsigned long)
E3dScene::NbcMove(Size const&)
E3dScene::NbcRemoveObject(unsigned long)
E3dScene::NbcResize(Point const&, Fraction const&, Fraction const&)
E3dScene::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
E3dScene::NbcSetLayer(o3tl::strong_int<short, SdrLayerIDTag>)
E3dScene::NbcSetTransform(basegfx::B3DHomMatrix const&)
E3dScene::NewGeoData() const
E3dScene::Notify(SfxBroadcaster&, SfxHint const&)
E3dScene::RebuildLists()
E3dScene::RecalcBoundVolume() const
E3dScene::RecalcSnapRect()
E3dScene::RemapOrdNum(unsigned int) const
E3dScene::RemoveObject(unsigned long)
E3dScene::RestoreGeoData(SdrObjGeoData const&)
E3dScene::ResumeReportingDirtyRects()
E3dScene::RotateScene(Point const&, double, double)
E3dScene::SaveGeoData(SdrObjGeoData&) const
E3dScene::SetAllSceneRectsDirty()
E3dScene::SetBoundRectDirty()
E3dScene::SetDefaultAttributes()
E3dScene::SetSelected(bool)
E3dScene::SetTransformChanged()
E3dScene::StructureChanged()
E3dScene::SuspendReportingDirtyRects()
E3dScene::TakeCreatePoly(SdrDragStat const&) const
E3dScene::TakeObjNamePlural() const
E3dScene::TakeObjNameSingul() const
E3dScene::TakeXorPoly() const
E3dScene::getChildrenOfSdrObject() const
E3dScene::getRootE3dSceneFromE3dObject() const
E3dScene::getSdrObjectFromSdrObjList() const
E3dScene::getSdrPageFromSdrObjList() const
E3dScene::handlePageChange(SdrPage*, SdrPage*)
E3dScene::removeAllNonSelectedObjects()
E3dScene::~E3dScene()
E3dView::BreakSingle3DObj(E3dObject*)
E3dView::DoDepthArrange(E3dScene const*, double)
E3dView::E3dView(SdrModel&, OutputDevice*)
E3dView::ImpChangeSomeAttributesFor3DConversion(SdrObject*)
E3dView::ImpChangeSomeAttributesFor3DConversion2(SdrObject*)
E3dView::ImpCloneAll3DObjectsToDestScene(E3dScene const*, E3dScene*, Point)
E3dView::ImpCreate3DObject(E3dScene*, SdrObject*, bool, double, basegfx::B2DHomMatrix const&)
E3dView::ImpCreateSingle3DObjectFlat(E3dScene*, SdrObject*, bool, double, basegfx::B2DHomMatrix const&)
E3dView::ImpIsConvertTo3DPossible(SdrObject const*, bool&, bool&) const
E3dView::InitScene(E3dScene*, double, double, double)
E3dView::InitView()
E3dView::~E3dView()
EFieldInfo::EFieldInfo()
EFieldInfo::EFieldInfo(EFieldInfo const&)
EFieldInfo::EFieldInfo(SvxFieldItem const&, int, int)
EFieldInfo::operator=(EFieldInfo const&)
Edit::GetMaxVisChars() const
Edit::SetEchoChar(char16_t)
EditAbstractDialogFactory::Create()
EditEngine::DisableAttributeExpanding()
EditEngine::GetAutoColor() const
EditEngine::GetBackgroundColor() const
EditEngine::GetCharacterBounds(EPosition const&) const
EditEngine::GetDocPosTopLeft(int)
EditEngine::GetLineBoundaries(int&, int&, int, int) const
EditEngine::GetLineLen(int, int) const
EditEngine::GetLineNumberAtIndex(int, int) const
EditEngine::GetParaAttrib(int, unsigned short) const
EditEngine::GetStandardFont(int)
EditEngine::GetStyleSheet(int)
EditEngine::GetStyleSheetPool()
EditEngine::GetTextHeight(int) const
EditEngine::HasParaAttrib(int, unsigned short) const
EditEngine::QuickInsertLineBreak(ESelection const&)
EditEngine::SetModified()
EditEngine::SetStyleSheet(int, SfxStyleSheet*)
EditEngine::SetUndoManager(EditUndoManager*)
EditEngine::setScalingParameters(ScalingParameters const&)
EditTextObject::~EditTextObject()
EditUndo::CanRepeat(SfxRepeatTarget&) const
EditUndo::EditUndo(unsigned short, EditEngine*)
EditUndo::GetComment() const
EditUndo::GetId() const
EditUndo::GetViewShellId() const
EditUndo::~EditUndo()
EditUndoManager::SetEditEngine(EditEngine*)
EditView::ForceLayoutCalculation()
EditView::GetPointer() const
EditView::GetSelectionRectangles(std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >&) const
EditView::InsertParaBreak()
EditView::IsReadOnly() const
EditView::SetReadOnly(bool)
EditView::SetSelectionMode(EESelectionMode)
EmbeddedFontsManager::activateFont(rtl::OUString const&, rtl::OUString const&)
EmbeddedFontsManager::clearTemporaryFontFiles()
EmbeddedFontsManager::getFileUrlForTemporaryFont(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
EmbeddedFontsManager::sufficientTTFRights(void const*, long, EmbeddedFontsManager::FontRights)
EnhancedCustomShape2d::ApplyGluePoints(SdrObject*)
EnhancedCustomShape2d::CreateObject(bool)
EnhancedCustomShape2d::GetEquation(unsigned short, int, int, int)
EnhancedCustomShape2d::GetHdlCount() const
EnhancedCustomShape2d::SetEnhancedCustomShapeHandleParameter(com::sun::star::drawing::EnhancedCustomShapeParameter&, int, bool, bool)
EnhancedCustomShape2d::SetEnhancedCustomShapeParameter(com::sun::star::drawing::EnhancedCustomShapeParameter&, int)
EnhancedCustomShape::FillEquationParameter(com::sun::star::drawing::EnhancedCustomShapeParameter const&, int, EnhancedCustomShapeEquation&)
ErrorContext::ErrorContext(weld::Window*)
ErrorContext::GetContext()
ErrorContext::GetParent()
ErrorRegistry::ErrorRegistry()
ErrorRegistry::RegisterDisplay(DialogMask (*)(weld::Window*, DialogMask, rtl::OUString const&, rtl::OUString const&))
EscherEx::SeekToPersistOffset(unsigned int)
EscherEx::SetEditAs(rtl::OUString const&)
EscherEx::SetGroupLogicRect(unsigned int, tools::Rectangle const&)
EscherEx::SetGroupSnapRect(unsigned int, tools::Rectangle const&)
EscherExGlobal::ImplQueryPictureStream()
EscherGraphicProvider::GetPrefSize(unsigned int, Size&, MapMode&)
EscherGraphicProvider::ImplInsertBlib(EscherBlibEntry*)
EscherGraphicProvider::~EscherGraphicProvider()
EscherPersistTable::EscherPersistTable()
EscherPersistTable::PtDelete(unsigned int)
EscherPersistTable::PtIsID(unsigned int)
EscherPersistTable::PtReplace(unsigned int, unsigned int)
EscherPersistTable::~EscherPersistTable()
EscherPropertyContainer::CreateGraphicProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, GraphicObject const&)
EscherPropertyContainer::GetGradientColor(com::sun::star::awt::Gradient const*, unsigned int)
EscherPropertyContainer::GetPolyPolygon(com::sun::star::uno::Any const&)
EscherPropertyContainer::GetValueForEnhancedCustomShapeParameter(com::sun::star::drawing::EnhancedCustomShapeParameter const&, std::vector<int, std::allocator<int> > const&, bool)
EscherPropertyContainer::ImplCreateEmbeddedBmp(GraphicObject const&)
EscherPropertyContainer::ImplCreateGraphicAttributes(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, unsigned int, bool)
EscherPropertyContainer::ImplGetColor(unsigned int, bool)
EscherSolverContainer::AddConnector(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Point const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Point const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
ExecuteQuerySaveDocument(weld::Widget*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ExportEpsGraphic(SvStream&, Graphic const&, FilterConfigItem*)
ExportGifGraphic(SvStream&, Graphic const&, FilterConfigItem*)
ExportPPT(std::vector<com::sun::star::beans::PropertyValue, std::allocator<com::sun::star::beans::PropertyValue> > const&, rtl::Reference<SotStorage> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::task::XStatusIndicator> const&, SvMemoryStream*, unsigned int)
ExportTiffGraphicImport(SvStream&, Graphic const&, FilterConfigItem const*)
ExportWebpGraphic(SvStream&, Graphic const&, FilterConfigItem*)
ExtTextEngine::MatchGroup(TextPaM const&) const
ExtTextEngine::Search(TextSelection&, i18nutil::SearchOptions2 const&, bool) const
ExternalToolEdit::HandleCloseEvent(ExternalToolEdit*)
ExternalToolEdit::StartListeningEvent()
FSDK_SetLocaltimeFunction
FSDK_SetTimeFunction
FSDK_SetUnSpObjProcessHandler
FastConvert24BitRgbTo32BitCairo(BitmapBuffer const*)
FileChangedChecker::FileChangedChecker(rtl::OUString)
FileChangedChecker::hasFileChanged(bool)
FileChangedChecker::resetTimer()
FileExportedDialog::FileExportedDialog(weld::Window*, rtl::OUString)
FillPathWithPaint(SkPath const&, SkPaint const&, SkPath*)
FillPathWithPaint(SkPath const&, SkPaint const&, SkPath*, SkRect const*, SkMatrix const&)
FillPathWithPaint(SkPath const&, SkPaint const&, SkPath*, SkRect const*, float)
FilterConfigItem::FilterConfigItem(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
FilterConfigItem::GetPropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, rtl::OUString const&)
FilterConfigItem::GetStatusIndicator() const
FilterConfigItem::ImpInitTree(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
FilterConfigItem::ImplGetPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
FilterConfigItem::IsReadOnly(rtl::OUString const&)
FilterConfigItem::ReadBool(rtl::OUString const&, bool)
FilterConfigItem::ReadInt32(rtl::OUString const&, int)
FilterConfigItem::ReadString(rtl::OUString const&, rtl::OUString const&)
FilterConfigItem::WriteBool(rtl::OUString const&, bool)
FilterConfigItem::WriteModifiedConfig()
FilterConfigItem::WritePropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, com::sun::star::beans::PropertyValue const&)
FixedBitmap::FixedBitmap(vcl::Window*, long)
FixedBitmap::SetBitmap(BitmapEx const&)
FixedImage::FixedImage(vcl::Window*, long)
FixedImage::SetImage(Image const&)
FloatingWindow::ApplySettings(OutputDevice&)
FloatingWindow::DataChanged(DataChangedEvent const&)
FloatingWindow::EventNotify(NotifyEvent&)
FloatingWindow::FloatingWindow(vcl::Window*, long)
FloatingWindow::PixelInvalidate(tools::Rectangle const*)
FloatingWindow::PopupModeEnd()
FloatingWindow::StateChanged(StateChangedType)
FloatingWindow::dispose()
FloatingWindow::doDeferredInit(long)
FloatingWindow::~FloatingWindow()
FmDesignModeChangedHint::FmDesignModeChangedHint(bool)
FmDesignModeChangedHint::~FmDesignModeChangedHint()
FmFormModel::AllocPage(bool)
FmFormModel::ControlsUseRefDevice() const
FmFormModel::GetUndoEnv()
FmFormModel::implSetOpenInDesignMode(bool)
FmFormPage::CloneSdrPage(SdrModel&) const
FmFormPage::GetForms(bool) const
FmFormShell::Activate(bool)
FmFormShell::Deactivate(bool)
FmFormShell::DetermineForms(bool)
FmFormShell::ExecuteTextAttribute(SfxRequest&)
FmFormShell::GetCurPage() const
FmFormShell::GetFormState(SfxItemSet&, unsigned short)
FmFormShell::GetInterface() const
FmFormShell::GetStaticInterface()
FmFormShell::GetTextAttributeState(SfxItemSet&)
FmFormShell::HasUIFeature(SfxShellFeature) const
FmFormShell::InitInterface_Impl()
FmFormShell::NotifyMarkListChanged(FmFormView*)
FmFormShell::RegisterInterface(SfxModule const*)
FmFormShell::impl_setDesignMode(bool)
FmFormView::GetCurPage()
FmFormView::Init()
FmFormView::InsertControlContainer(com::sun::star::uno::Reference<com::sun::star::awt::XControlContainer> const&)
FmFormView::RemoveControlContainer(com::sun::star::uno::Reference<com::sun::star::awt::XControlContainer> const&)
FmFormView::createControlLabelPair(OutputDevice const*, int, int, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormats> const&, SdrObjKind, SdrInventor, SdrObjKind, SdrModel&, rtl::Reference<SdrUnoObj>&, rtl::Reference<SdrUnoObj>&)
FmSearchEngine::CancelSearch()
FmSearchEngine::FmSearchEngine(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XResultSet> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<com::sun::star::uno::Reference<com::sun::star::uno::XInterface>, std::allocator<com::sun::star::uno::Reference<com::sun::star::uno::XInterface> > > const&)
FmSearchEngine::FormatField(int)
FmSearchEngine::GetCaseSensitive() const
FmSearchEngine::GetIgnoreWidthCJK() const
FmSearchEngine::ImplStartNextSearch()
FmSearchEngine::Init(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
FmSearchEngine::InvalidatePreviousLoc()
FmSearchEngine::OnSearchTerminated()
FmSearchEngine::RebuildUsedFields(int, bool)
FmSearchEngine::SearchNext(rtl::OUString const&)
FmSearchEngine::SearchNextImpl()
FmSearchEngine::SearchNextSpecial(bool)
FmSearchEngine::SetCaseSensitive(bool)
FmSearchEngine::SetFormatterUsing(bool)
FmSearchEngine::SetIgnoreWidthCJK(bool)
FmSearchEngine::StartOver(rtl::OUString const&)
FmSearchEngine::StartOverSpecial(bool)
FmSearchEngine::SwitchToContext(com::sun::star::uno::Reference<com::sun::star::sdbc::XResultSet> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<com::sun::star::uno::Reference<com::sun::star::uno::XInterface>, std::allocator<com::sun::star::uno::Reference<com::sun::star::uno::XInterface> > > const&, int)
FocusListenerMultiplexer::FocusListenerMultiplexer(cppu::OWeakObject&)
FocusListenerMultiplexer::acquire()
FocusListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
FocusListenerMultiplexer::focusGained(com::sun::star::awt::FocusEvent const&)
FocusListenerMultiplexer::focusLost(com::sun::star::awt::FocusEvent const&)
FocusListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
FocusListenerMultiplexer::release()
FontAttributes::CompareDeviceIndependentFontAttributes(FontAttributes const&) const
FontCharMap::CountCharsInRange(unsigned int, unsigned int) const
FontCharMap::GetCharCount() const
FontCharMap::GetCharFromIndex(int) const
FontCharMap::GetIndexFromChar(unsigned int) const
FontCharMap::GetPrevChar(unsigned int) const
FontConfigFontOptions::SyncPattern(rtl::OString const&, unsigned int, unsigned int, bool)
FontConfigFontOptions::cairo_font_options_substitute(_FcPattern*)
FontConfigFontOptions::~FontConfigFontOptions()
FontList::Clone() const
FontList::GetFontMapText(FontMetric const&) const
FontList::GetNextFontMetric(void*)
FontList::GetStyleName(FontWeight, FontItalic) const
FontMetric::FontMetric(FontMetric const&)
FontMetric::GetHashValueIgnoreColor() const
FontMetric::operator=(FontMetric const&)
FontNameBox::CachePreview(unsigned long, Point*, int, int)
FontNameBox::InitFontMRUEntriesFile()
FontNameBox::LoadMRUEntries(rtl::OUString const&)
FontNameBox::SaveMRUEntries(rtl::OUString const&) const
FontSizeBox::EnablePtRelativeMode(short, short, short)
FontSizeBox::EnableRelativeMode(unsigned short, unsigned short, unsigned short)
FontSizeBox::InsertValue(int)
FontSizeBox::SetRelative(bool)
FontSizeBox::SetValue(int, FieldUnit)
FontSizeBox::format_number(int) const
FontSizeBox::set_active_or_entry_text(rtl::OUString const&)
FontStyleBox::Fill(std::basic_string_view<char16_t, std::char_traits<char16_t> >, FontList const*)
FontStyleBox::FontStyleBox(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
ForResId(TranslateId)
Formatter::Commit()
Formatter::DisableRemainderFactor()
Formatter::EnableNotANumber(bool)
Formatter::EntryLostFocus()
Formatter::FormatChanged(FORMAT_CHANGE_TYPE)
Formatter::Formatter()
Formatter::GetDecimalDigits() const
Formatter::GetFormat(o3tl::strong_int<unsigned short, LanguageTypeTag>&) const
Formatter::GetThousandsSep() const
Formatter::ImplGetValue(double&)
Formatter::ImplSetFormatKey(unsigned long)
Formatter::ImplSetTextImpl(rtl::OUString const&, Selection const*)
Formatter::ImplSetValue(double, bool)
Formatter::SetAutoColor(bool)
Formatter::SetFieldText(rtl::OUString const&, Selection const&)
Formatter::SetMaxValue(double)
Formatter::SetMinValue(double)
Formatter::SetTextValue(rtl::OUString const&)
Formatter::SetThousandsSep(bool)
Formatter::StaticFormatter::StaticFormatter()
Formatter::StaticFormatter::~StaticFormatter()
Formatter::~Formatter()
FormatterBase::FormatterBase(Edit*)
FormatterBase::GetLanguageTag() const
FormatterBase::GetLocale() const
FormatterBase::GetLocaleDataWrapper() const
FormatterBase::IsEmptyFieldValue() const
FormatterBase::Reformat()
FormatterBase::ReformatAll()
FormatterBase::SetEmptyFieldValue()
FormatterBase::SetStrictFormat(bool)
FormatterBase::~FormatterBase()
Fraction::Fraction(double, double)
Fraction::GetHashValue() const
Fraction::MakeFraction(long, long, long, long)
Fraction::operator-=(Fraction const&)
FrameDeleteWatch::Notify(SfxHint const&)
FreeTypeTextRenderImpl::ClearDevFontCache()
FuConstUnoControl::Activate()
GDIMetaFile::Adjust(short, short, short, short, short, double, bool, bool)
GDIMetaFile::Clip(tools::Rectangle const&)
GDIMetaFile::Convert(MtfConversion)
GDIMetaFile::GetBoundRect(OutputDevice&) const
GDIMetaFile::GetMonochromeMtf(Color const&) const
GDIMetaFile::Play(GDIMetaFile&)
GDIMetaFile::Play(OutputDevice&, Point const&, Size const&)
GDIMetaFile::ReplaceColors(Color const*, Color const*, unsigned long)
GDIMetaFile::Scale(double, double)
GDIMetaFile::UseCanvas(bool)
GDIMetaFile::WindPrev()
GDIMetaFile::dumpAsXml(char const*) const
GDIMetaFile::operator==(GDIMetaFile const&) const
GLWindow::Synchronize(bool) const
GUB_count
Gallery::GetGalleryInstance()
GalleryExplorer::BeginLocking(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GalleryExplorer::EndLocking(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GalleryExplorer::FillObjList(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
GalleryExplorer::GetGraphicObj(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, Graphic*)
GalleryExplorer::GetSdrObj(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, SdrModel*, BitmapEx*)
GalleryExplorer::GetSdrObjCount(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GalleryProgress::GalleryProgress(GraphicFilter const*)
GalleryProgress::Update(int, int)
GalleryProgress::~GalleryProgress()
GalleryTheme::Actualize(Link<INetURLObject const&, void> const&, GalleryProgress*)
GalleryTheme::GetGraphic(unsigned int, Graphic&)
GalleryTheme::GetId() const
GalleryTheme::GetModel(unsigned int, SdrModel&)
GalleryTheme::InsertAllThemes(weld::ComboBox&)
GalleryTheme::InsertGraphic(Graphic const&, unsigned int)
GalleryTheme::InsertModel(FmFormModel const&, unsigned int)
GalleryTheme::InsertObject(SgaObject const&, unsigned int)
GalleryTheme::IsDefault() const
GalleryTheme::IsReadOnly() const
GalleryTheme::UnlockBroadcaster()
GalleryTheme::getModificationDate() const
GalleryTheme::getThemeURL() const
GalleryThemeEntry::GalleryThemeEntry(bool, INetURLObject const&, rtl::OUString const&, bool, bool, unsigned int, bool)
GalleryThemeEntry::IsDefault() const
GalleryThemeEntry::SetId(unsigned int, bool)
GalleryThemeEntry::SetName(rtl::OUString const&)
GalleryThemeEntry::createGalleryStorageEngine(GalleryObjectCollection&)
GalleryThemeEntry::createGalleryTheme(Gallery*)
GalleryThemeEntry::getCachedTheme(Gallery*)
GalleryThemeEntry::removeTheme()
GalleryThemeEntry::setStorageLocations(INetURLObject&)
GalleryThemeEntry::~GalleryThemeEntry()
GenericUnixSalData::InitFreetypeManager()
GenericUnixSalData::InitPrintFontManager()
GetApplyCharUnit(SfxItemSet const&)
GetCustomShapeConnectionTypeDefault(MSO_SPT)
GetCustomShapeContent(MSO_SPT)
GetDicInfoStr(std::basic_string_view<char16_t, std::char_traits<char16_t> >, o3tl::strong_int<unsigned short, LanguageTypeTag>, bool)
GetModuleFieldUnit(SfxItemSet const&)
GetODFSaneDefaultVersion(SvtSaveOptions::ODFDefaultVersion)
GetReducedString(INetURLObject const&, int)
GetStandardErrorBoxImage()
GetStandardInfoBoxImage()
GetStandardQueryBoxImage()
GetStandardWarningBoxImage()
GfxLink::ExportNative(SvStream&) const
GfxLink::GetHash() const
GfxLink::IsNative() const
GfxLink::LoadNative(Graphic&) const
GfxLink::operator==(GfxLink const&) const
GlobalEventConfig::GlobalEventConfig()
GlobalEventConfig::getByName(rtl::OUString const&)
GlobalEventConfig::getByName2(rtl::OUString const&)
GlobalEventConfig::getElementNames()
GlobalEventConfig::getElementType()
GlobalEventConfig::getEvents()
GlobalEventConfig::hasByName(rtl::OUString const&)
GlobalEventConfig::hasElements()
GlobalEventConfig::replaceByName(rtl::OUString const&, com::sun::star::uno::Any const&)
GlobalEventConfig::~GlobalEventConfig()
GrBackendFormat::GrBackendFormat(GrBackendFormat const&)
GrBackendFormat::GrBackendFormat(GrColorType, SkTextureCompressionType, bool)
GrBackendFormat::GrBackendFormat(VkFormat, GrVkYcbcrConversionInfo const&, bool)
GrBackendFormat::MakeMock(GrColorType, SkTextureCompressionType, bool)
GrBackendFormat::MakeVk(GrVkYcbcrConversionInfo const&, bool)
GrBackendFormat::asMockColorType() const
GrBackendFormat::asMockCompressionType() const
GrBackendFormat::asVkFormat(VkFormat*) const
GrBackendFormat::channelMask() const
GrBackendFormat::desc() const
GrBackendFormat::getVkYcbcrConversionInfo() const
GrBackendFormat::isMockStencilFormat() const
GrBackendFormat::makeTexture2D() const
GrBackendFormat::operator=(GrBackendFormat const&)
GrBackendFormat::operator==(GrBackendFormat const&) const
GrBackendRenderTarget::GrBackendRenderTarget()
GrBackendRenderTarget::GrBackendRenderTarget(GrBackendRenderTarget const&)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, GrVkImageInfo const&)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, GrVkImageInfo const&, sk_sp<skgpu::MutableTextureStateRef>)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, int, GrVkImageInfo const&)
GrBackendRenderTarget::GrBackendRenderTarget(int, int, int, int, GrMockRenderTargetInfo const&)
GrBackendRenderTarget::cleanup()
GrBackendRenderTarget::getBackendFormat() const
GrBackendRenderTarget::getMockRenderTargetInfo(GrMockRenderTargetInfo*) const
GrBackendRenderTarget::getMutableState() const
GrBackendRenderTarget::getVkImageInfo(GrVkImageInfo*) const
GrBackendRenderTarget::isProtected() const
GrBackendRenderTarget::operator=(GrBackendRenderTarget const&)
GrBackendRenderTarget::setMutableState(skgpu::MutableTextureState const&)
GrBackendRenderTarget::setVkImageLayout(VkImageLayout)
GrBackendRenderTarget::~GrBackendRenderTarget()
GrBackendTexture::GrBackendTexture()
GrBackendTexture::GrBackendTexture(GrBackendTexture const&)
GrBackendTexture::GrBackendTexture(int, int, GrVkImageInfo const&, sk_sp<skgpu::MutableTextureStateRef>, std::basic_string_view<char, std::char_traits<char> >)
GrBackendTexture::GrBackendTexture(int, int, GrVkImageInfo const&, std::basic_string_view<char, std::char_traits<char> >)
GrBackendTexture::GrBackendTexture(int, int, skgpu::Mipmapped, GrMockTextureInfo const&, std::basic_string_view<char, std::char_traits<char> >)
GrBackendTexture::cleanup()
GrBackendTexture::getBackendFormat() const
GrBackendTexture::getMockTextureInfo(GrMockTextureInfo*) const
GrBackendTexture::getMutableState() const
GrBackendTexture::getVkImageInfo(GrVkImageInfo*) const
GrBackendTexture::isProtected() const
GrBackendTexture::isSameTexture(GrBackendTexture const&)
GrBackendTexture::operator=(GrBackendTexture const&)
GrBackendTexture::setMutableState(skgpu::MutableTextureState const&)
GrBackendTexture::setVkImageLayout(VkImageLayout)
GrBackendTexture::~GrBackendTexture()
GrContextThreadSafeProxy::GrContextThreadSafeProxy(GrBackendApi, GrContextOptions const&)
GrContextThreadSafeProxy::abandonContext()
GrContextThreadSafeProxy::abandoned() const
GrContextThreadSafeProxy::compressedBackendFormat(SkTextureCompressionType) const
GrContextThreadSafeProxy::createCharacterization(unsigned long, SkImageInfo const&, GrBackendFormat const&, int, GrSurfaceOrigin, SkSurfaceProps const&, bool, bool, bool, skgpu::Protected, bool, bool)
GrContextThreadSafeProxy::defaultBackendFormat(SkColorType, skgpu::Renderable) const
GrContextThreadSafeProxy::init(sk_sp<GrCaps const>, sk_sp<GrThreadSafePipelineBuilder>)
GrContextThreadSafeProxy::maxSurfaceSampleCountForColorType(SkColorType) const
GrContextThreadSafeProxy::~GrContextThreadSafeProxy()
GrContext_Base::GrContext_Base(sk_sp<GrContextThreadSafeProxy>)
GrContext_Base::backend() const
GrContext_Base::caps() const
GrContext_Base::compressedBackendFormat(SkTextureCompressionType) const
GrContext_Base::contextID() const
GrContext_Base::defaultBackendFormat(SkColorType, skgpu::Renderable) const
GrContext_Base::init()
GrContext_Base::maxSurfaceSampleCountForColorType(SkColorType) const
GrContext_Base::options() const
GrContext_Base::refCaps() const
GrContext_Base::threadSafeProxy()
GrContext_Base::~GrContext_Base()
GrDeferredDisplayList::GrDeferredDisplayList(GrSurfaceCharacterization const&, sk_sp<GrRenderTargetProxy>, sk_sp<GrDeferredDisplayList::LazyProxyData>)
GrDeferredDisplayList::ProgramIterator::ProgramIterator(GrDirectContext*, GrDeferredDisplayList*)
GrDeferredDisplayList::ProgramIterator::compile()
GrDeferredDisplayList::ProgramIterator::done() const
GrDeferredDisplayList::ProgramIterator::next()
GrDeferredDisplayList::ProgramIterator::~ProgramIterator()
GrDeferredDisplayList::~GrDeferredDisplayList()
GrDirectContext::DirectContextID::Next()
GrDirectContext::GrDirectContext(GrBackendApi, GrContextOptions const&)
GrDirectContext::MakeMock(GrMockOptions const*)
GrDirectContext::MakeMock(GrMockOptions const*, GrContextOptions const&)
GrDirectContext::MakeVulkan(GrVkBackendContext const&)
GrDirectContext::MakeVulkan(GrVkBackendContext const&, GrContextOptions const&)
GrDirectContext::abandonContext()
GrDirectContext::abandoned()
GrDirectContext::checkAsyncWorkCompletion()
GrDirectContext::createBackendTexture(SkPixmap const&, GrSurfaceOrigin, skgpu::Renderable, skgpu::Protected, void (*)(void*), void*, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(SkPixmap const&, skgpu::Renderable, skgpu::Protected, void (*)(void*), void*, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(SkPixmap const*, int, GrSurfaceOrigin, skgpu::Renderable, skgpu::Protected, void (*)(void*), void*, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(SkPixmap const*, int, skgpu::Renderable, skgpu::Protected, void (*)(void*), void*, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(int, int, GrBackendFormat const&, SkRGBA4f<(SkAlphaType)3> const&, skgpu::Mipmapped, skgpu::Renderable, skgpu::Protected, void (*)(void*), void*, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(int, int, GrBackendFormat const&, skgpu::Mipmapped, skgpu::Renderable, skgpu::Protected, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(int, int, SkColorType, SkRGBA4f<(SkAlphaType)3> const&, skgpu::Mipmapped, skgpu::Renderable, skgpu::Protected, void (*)(void*), void*, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createBackendTexture(int, int, SkColorType, skgpu::Mipmapped, skgpu::Renderable, skgpu::Protected, std::basic_string_view<char, std::char_traits<char> >)
GrDirectContext::createCompressedBackendTexture(int, int, GrBackendFormat const&, SkRGBA4f<(SkAlphaType)3> const&, skgpu::Mipmapped, skgpu::Protected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, GrBackendFormat const&, void const*, unsigned long, skgpu::Mipmapped, skgpu::Protected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, SkTextureCompressionType, SkRGBA4f<(SkAlphaType)3> const&, skgpu::Mipmapped, skgpu::Protected, void (*)(void*), void*)
GrDirectContext::createCompressedBackendTexture(int, int, SkTextureCompressionType, void const*, unsigned long, skgpu::Mipmapped, skgpu::Protected, void (*)(void*), void*)
GrDirectContext::deleteBackendTexture(GrBackendTexture)
GrDirectContext::dumpMemoryStatistics(SkTraceMemoryDump*) const
GrDirectContext::flush(GrFlushInfo const&)
GrDirectContext::flush(SkSurface*, GrFlushInfo const&, skgpu::MutableTextureState const*)
GrDirectContext::flush(SkSurface*, SkSurfaces::BackendSurfaceAccess, GrFlushInfo const&)
GrDirectContext::flush(sk_sp<SkImage const>)
GrDirectContext::flush(sk_sp<SkImage const>, GrFlushInfo const&)
GrDirectContext::flush(sk_sp<SkSurface>)
GrDirectContext::flush(sk_sp<SkSurface>, GrFlushInfo const&, skgpu::MutableTextureState const*)
GrDirectContext::flush(sk_sp<SkSurface>, SkSurfaces::BackendSurfaceAccess, GrFlushInfo const&)
GrDirectContext::flushAndSubmit(sk_sp<SkImage const>)
GrDirectContext::flushAndSubmit(sk_sp<SkSurface>, bool)
GrDirectContext::freeGpuResources()
GrDirectContext::getResourceCacheLimit() const
GrDirectContext::getResourceCacheLimits(int*, unsigned long*) const
GrDirectContext::getResourceCachePurgeableBytes() const
GrDirectContext::getResourceCacheUsage(int*, unsigned long*) const
GrDirectContext::init()
GrDirectContext::onGetSmallPathAtlasMgr()
GrDirectContext::performDeferredCleanup(std::chrono::duration<long, std::ratio<1l, 1000l> >, bool)
GrDirectContext::precompileShader(SkData const&, SkData const&)
GrDirectContext::purgeUnlockedResources(bool)
GrDirectContext::purgeUnlockedResources(unsigned long, bool)
GrDirectContext::releaseResourcesAndAbandonContext()
GrDirectContext::resetContext(unsigned int)
GrDirectContext::resetGLTextureBindings()
GrDirectContext::setBackendRenderTargetState(GrBackendRenderTarget const&, skgpu::MutableTextureState const&, skgpu::MutableTextureState*, void (*)(void*), void*)
GrDirectContext::setBackendTextureState(GrBackendTexture const&, skgpu::MutableTextureState const&, skgpu::MutableTextureState*, void (*)(void*), void*)
GrDirectContext::setResourceCacheLimit(unsigned long)
GrDirectContext::setResourceCacheLimits(int, unsigned long)
GrDirectContext::storeVkPipelineCacheData()
GrDirectContext::submit(bool)
GrDirectContext::supportsDistanceFieldText() const
GrDirectContext::syncAllOutstandingGpuWork(bool)
GrDirectContext::threadSafeProxy()
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkColorType, SkRGBA4f<(SkAlphaType)3> const&, void (*)(void*), void*)
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkPixmap const*, int, GrSurfaceOrigin, void (*)(void*), void*)
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkPixmap const*, int, void (*)(void*), void*)
GrDirectContext::updateBackendTexture(GrBackendTexture const&, SkRGBA4f<(SkAlphaType)3> const&, void (*)(void*), void*)
GrDirectContext::updateCompressedBackendTexture(GrBackendTexture const&, SkRGBA4f<(SkAlphaType)3> const&, void (*)(void*), void*)
GrDirectContext::updateCompressedBackendTexture(GrBackendTexture const&, void const*, unsigned long, void (*)(void*), void*)
GrDirectContext::wait(int, GrBackendSemaphore const*, bool)
GrDirectContext::~GrDirectContext()
GrDriverBugWorkarounds::GrDriverBugWorkarounds(std::vector<int, std::allocator<int> > const&)
GrDriverBugWorkarounds::applyOverrides(GrDriverBugWorkarounds const&)
GrExternalTextureGenerator::GrExternalTextureGenerator(SkImageInfo const&)
GrExternalTextureGenerator::onGenerateTexture(GrRecordingContext*, SkImageInfo const&, skgpu::Mipmapped, GrImageTexGenPolicy)
GrImageContext::abandonContext()
GrImageContext::abandoned()
GrPromiseImageTexture::GrPromiseImageTexture(GrBackendTexture const&)
GrPromiseImageTexture::~GrPromiseImageTexture()
GrRecordingContext::colorTypeSupportedAsImage(SkColorType) const
GrRecordingContext::maxRenderTargetSize() const
GrRecordingContext::maxTextureSize() const
GrRecordingContext::skCapabilities() const
GrSurfaceCharacterization::createBackendFormat(SkColorType, GrBackendFormat const&) const
GrSurfaceCharacterization::createColorSpace(sk_sp<SkColorSpace>) const
GrSurfaceCharacterization::createFBO0(bool) const
GrSurfaceCharacterization::createResized(int, int) const
GrSurfaceCharacterization::isCompatible(GrBackendTexture const&) const
GrSurfaceCharacterization::operator==(GrSurfaceCharacterization const&) const
GrTextureGenerator::GrTextureGenerator(SkImageInfo const&, unsigned int)
GrTextureGenerator::generateTexture(GrRecordingContext*, SkImageInfo const&, skgpu::Mipmapped, GrImageTexGenPolicy)
GrVkSecondaryCBDrawContext::GrVkSecondaryCBDrawContext(sk_sp<skgpu::ganesh::Device>, SkSurfaceProps const*)
GrVkSecondaryCBDrawContext::Make(GrRecordingContext*, SkImageInfo const&, GrVkDrawableInfo const&, SkSurfaceProps const*)
GrVkSecondaryCBDrawContext::characterize(GrSurfaceCharacterization*) const
GrVkSecondaryCBDrawContext::draw(sk_sp<GrDeferredDisplayList const>)
GrVkSecondaryCBDrawContext::flush()
GrVkSecondaryCBDrawContext::getCanvas()
GrVkSecondaryCBDrawContext::isCompatible(GrSurfaceCharacterization const&) const
GrVkSecondaryCBDrawContext::releaseResources()
GrVkSecondaryCBDrawContext::wait(int, GrBackendSemaphore const*, bool)
GrVkSecondaryCBDrawContext::~GrVkSecondaryCBDrawContext()
GrYUVABackendTextureInfo::GrYUVABackendTextureInfo(SkYUVAInfo const&, GrBackendFormat const*, skgpu::Mipmapped, GrSurfaceOrigin)
GrYUVABackendTextureInfo::operator==(GrYUVABackendTextureInfo const&) const
GrYUVABackendTextureInfo::toYUVALocations() const
GrYUVABackendTextures::GrYUVABackendTextures(SkYUVAInfo const&, GrBackendTexture const*, GrSurfaceOrigin)
GrYUVABackendTextures::toYUVALocations() const
Gradient::GetBoundRect(tools::Rectangle const&, tools::Rectangle&, Point&) const
Gradient::Gradient(Gradient const&)
Gradient::Gradient(Gradient&&)
Gradient::operator=(Gradient const&)
Gradient::operator=(Gradient&&)
Gradient::operator==(Gradient const&) const
Graphic::Draw(OutputDevice&, Point const&) const
Graphic::GetReaderContext()
Graphic::Graphic(Image const&)
GraphicConverter::GraphicConverter()
GraphicFilter::CanImportGraphic(INetURLObject const&, unsigned short, unsigned short*)
GraphicFilter::CanImportGraphic(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SvStream&, unsigned short, unsigned short*)
GraphicFilter::ExportGraphic(Graphic const&, INetURLObject const&, unsigned short, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
GraphicFilter::GetImportFormatCount() const
GraphicFilter::GetImportFormatNumber(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GraphicFilter::GetImportFormatShortName(unsigned short)
GraphicFilter::GetImportWildcard(unsigned short, int)
GraphicFilter::compressAsPNG(Graphic const&, SvStream&)
GraphicHelper::GetPreferredExtension(rtl::OUString&, Graphic const&)
GraphicNativeTransform::rotateBitmapOnly(o3tl::strong_int<short, FractionTag<10> >)
GraphicNativeTransform::rotateGeneric(o3tl::strong_int<short, FractionTag<10> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
GraphicNativeTransform::rotateJPEG(o3tl::strong_int<short, FractionTag<10> >)
GraphicObject::GetTransformedGraphic(GraphicAttr const*) const
GraphicsRenderTests::appendTestResult(rtl::OUString const&, rtl::OUString const&, Bitmap const&)
GraphicsRenderTests::getResultString(bool)
GraphicsRenderTests::getTestResults()
GraphicsRenderTests::returnTestStatus(vcl::test::TestResult)
GraphicsRenderTests::runALLTests()
GraphicsRenderTests::testAxialGradient()
GraphicsRenderTests::testClipB2DPolyPolygon()
GraphicsRenderTests::testClipPolyPolygon()
GraphicsRenderTests::testClipPolygon()
GraphicsRenderTests::testClipRectangle()
GraphicsRenderTests::testClosedBezierWithPolygon()
GraphicsRenderTests::testClosedBezierWithPolyline()
GraphicsRenderTests::testComplexDrawTransformedBitmap24bpp()
GraphicsRenderTests::testDashedLine()
GraphicsRenderTests::testDrawBezierAAWithPolylineB2D()
GraphicsRenderTests::testDrawBezierWithPolylineB2D()
GraphicsRenderTests::testDrawBitmap24bpp()
GraphicsRenderTests::testDrawBitmap32bpp()
GraphicsRenderTests::testDrawBitmap8bppGreyScale()
GraphicsRenderTests::testDrawBitmapExWithAlpha24bpp()
GraphicsRenderTests::testDrawBitmapExWithAlpha32bpp()
GraphicsRenderTests::testDrawBlend24bpp()
GraphicsRenderTests::testDrawBlend32bpp()
GraphicsRenderTests::testDrawDiamondWithLine()
GraphicsRenderTests::testDrawDiamondWithPolygon()
GraphicsRenderTests::testDrawDiamondWithPolyline()
GraphicsRenderTests::testDrawDiamondWithPolylineB2D()
GraphicsRenderTests::testDrawDropShapeAAWithPolygon()
GraphicsRenderTests::testDrawDropShapeAAWithPolyline()
GraphicsRenderTests::testDrawDropShapeWithPolygon()
GraphicsRenderTests::testDrawDropShapeWithPolyline()
GraphicsRenderTests::testDrawFilledRectWithPolyPolygon()
GraphicsRenderTests::testDrawFilledRectWithPolyPolygon2D()
GraphicsRenderTests::testDrawFilledRectWithPolygon()
GraphicsRenderTests::testDrawFilledRectWithRectangle()
GraphicsRenderTests::testDrawInvertN50WithRectangle()
GraphicsRenderTests::testDrawInvertTrackFrameWithRectangle()
GraphicsRenderTests::testDrawInvertWithRectangle()
GraphicsRenderTests::testDrawMask24bpp()
GraphicsRenderTests::testDrawMask32bpp()
GraphicsRenderTests::testDrawOpenBezierWithPolyLine()
GraphicsRenderTests::testDrawOpenBezierWithPolyLineB2D()
GraphicsRenderTests::testDrawOpenPolygonWithPolyLine()
GraphicsRenderTests::testDrawOpenPolygonWithPolyLineB2D()
GraphicsRenderTests::testDrawOpenPolygonWithPolyPolygon()
GraphicsRenderTests::testDrawOpenPolygonWithPolyPolygonB2D()
GraphicsRenderTests::testDrawOpenPolygonWithPolygon()
GraphicsRenderTests::testDrawOutDev()
GraphicsRenderTests::testDrawOutDevScaledClipped()
GraphicsRenderTests::testDrawOutDevSelf()
GraphicsRenderTests::testDrawRectAAWithLine()
GraphicsRenderTests::testDrawRectAAWithPixel()
GraphicsRenderTests::testDrawRectAAWithPolyLine()
GraphicsRenderTests::testDrawRectAAWithPolyLineB2D()
GraphicsRenderTests::testDrawRectAAWithPolyPolygon()
GraphicsRenderTests::testDrawRectAAWithPolyPolygonB2D()
GraphicsRenderTests::testDrawRectAAWithPolygon()
GraphicsRenderTests::testDrawRectAAWithRectangle()
GraphicsRenderTests::testDrawRectWithLine()
GraphicsRenderTests::testDrawRectWithPixel()
GraphicsRenderTests::testDrawRectWithPolyLine()
GraphicsRenderTests::testDrawRectWithPolyLineB2D()
GraphicsRenderTests::testDrawRectWithPolyPolygon()
GraphicsRenderTests::testDrawRectWithPolyPolygonB2D()
GraphicsRenderTests::testDrawRectWithPolygon()
GraphicsRenderTests::testDrawRectWithRectangle()
GraphicsRenderTests::testDrawRectangleOnSize1028WithLine()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPixel()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyLine()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyLineB2D()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyPolygon()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolyPolygonB2D()
GraphicsRenderTests::testDrawRectangleOnSize1028WithPolygon()
GraphicsRenderTests::testDrawRectangleOnSize1028WithRect()
GraphicsRenderTests::testDrawRectangleOnSize4096WithLine()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPixel()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolyLine()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolyLineB2D()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolyPolygon()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolygon()
GraphicsRenderTests::testDrawRectangleOnSize4096WithPolygonPolygonB2D()
GraphicsRenderTests::testDrawRectangleOnSize4096WithRect()
GraphicsRenderTests::testDrawTransformedBitmap24bpp()
GraphicsRenderTests::testDrawTransformedBitmap32bpp()
GraphicsRenderTests::testDrawTransformedBitmap8bppGreyScale()
GraphicsRenderTests::testDrawXor()
GraphicsRenderTests::testEvenOddRuleInIntersectingRectsWithPolyPolygon()
GraphicsRenderTests::testEvenOddRuleInIntersectingRectsWithPolyPolygonB2D()
GraphicsRenderTests::testFilledAsymmetricalDropShape()
GraphicsRenderTests::testHalfEllipseAAWithPolyLine()
GraphicsRenderTests::testHalfEllipseAAWithPolyLineB2D()
GraphicsRenderTests::testHalfEllipseAAWithPolygon()
GraphicsRenderTests::testHalfEllipseWithPolyLine()
GraphicsRenderTests::testHalfEllipseWithPolyLineB2D()
GraphicsRenderTests::testHalfEllipseWithPolygon()
GraphicsRenderTests::testLineCapButt()
GraphicsRenderTests::testLineCapRound()
GraphicsRenderTests::testLineCapSquare()
GraphicsRenderTests::testLineJoinBevel()
GraphicsRenderTests::testLineJoinMiter()
GraphicsRenderTests::testLineJoinNone()
GraphicsRenderTests::testLineJoinRound()
GraphicsRenderTests::testLinearGradient()
GraphicsRenderTests::testLinearGradientAngled()
GraphicsRenderTests::testLinearGradientBorder()
GraphicsRenderTests::testLinearGradientIntensity()
GraphicsRenderTests::testLinearGradientSteps()
GraphicsRenderTests::testRadialGradient()
GraphicsRenderTests::testRadialGradientOfs()
GraphicsRenderTests::testTextDrawing()
HBUILD
HCHANGE
HDELETE
HDOWN
HINSERT
HTMLOption::GetNumbers(std::vector<unsigned int, std::allocator<unsigned int> >&) const
HTMLOption::HTMLOption(HtmlOptionId, rtl::OUString, rtl::OUString)
HTMLOutFuncs::Out_Hex(SvStream&, unsigned int, unsigned char)
HTMLParser::FilterListing(HtmlTokenId)
HTMLParser::FilterPRE(HtmlTokenId)
HTMLParser::FilterXMP(HtmlTokenId)
HTMLParser::GetNextRawToken()
HTMLParser::ParseMetaOptionsImpl(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&, SvKeyValueIterator*, std::vector<HTMLOption, std::allocator<HTMLOption> > const&, unsigned short&)
HTMLParser::ScanText(char16_t)
HUP
HasMicrosoftSymbolCmap(unsigned char const*, int)
Hatch::Hatch()
Hatch::Hatch(Hatch const&)
Hatch::SetAngle(o3tl::strong_int<short, FractionTag<10> >)
Hatch::SetColor(Color const&)
Hatch::SetDistance(long)
Hatch::operator=(Hatch const&)
Hatch::operator==(Hatch const&) const
HeaderBar::CalcWindowSizePixel() const
HeaderBar::Clear()
HeaderBar::GetHelpText(unsigned short) const
HeaderBar::GetItemCount() const
HeaderBar::GetItemId(unsigned short) const
HeaderBar::GetItemPos(unsigned short) const
HeaderBar::GetItemSize(unsigned short) const
HeaderBar::GetItemText(unsigned short) const
HeaderBar::HeaderBar(vcl::Window*, long)
HeaderBar::InsertItem(unsigned short, rtl::OUString const&, long, HeaderBarItemBits, unsigned short)
HeaderBar::MoveItem(unsigned short, unsigned short)
HeaderBar::RemoveItem(unsigned short)
HeaderBar::SetAccessible(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
HeaderBar::SetItemSize(unsigned short, long)
HeaderBar::SetItemText(unsigned short, rtl::OUString const&)
HeaderBar::SetOffset(long)
HeaderFooterEntry::HeaderFooterEntry(PptSlidePersistEntry const*)
Help::DisableBalloonHelp()
Help::DisableQuickHelp()
Help::EnableBalloonHelp()
Help::EnableQuickHelp()
Help::EndExtHelp()
Help::GetHelpText(rtl::OUString const&, vcl::Window const*)
Help::GetHelpText(rtl::OUString const&, weld::Widget const*)
Help::Help()
Help::IsExtHelpEnabled()
Help::SearchKeyword(rtl::OUString const&)
Help::Start(rtl::OUString const&, vcl::Window const*)
Help::Start(rtl::OUString const&, weld::Widget*)
Help::StartExtHelp()
Help::UpdatePopover(void*, vcl::Window*, tools::Rectangle const&, rtl::OUString const&)
Help::~Help()
HelpButton::Click()
HelpButton::StateChanged(StateChangedType)
HelpIndexer::HelpIndexer(rtl::OUString, rtl::OUString, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
HelpIndexer::helpDocument(rtl::OUString const&, lucene::document::Document*) const
HelpIndexer::helpFileReader(rtl::OUString const&)
HelpIndexer::indexDocuments()
HelpIndexer::scanForFiles()
HelpIndexer::scanForFiles(rtl::OUString const&)
HelpLinker::main(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, rtl::OUString const*)
HelpSearch::HelpSearch(rtl::OUString const&)
HelpSearch::query(rtl::OUString const&, bool, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::vector<float, std::allocator<float> >&)
HelpSettings::GetBalloonDelay()
HelpSettings::GetTipTimeout() const
HelpSettings::SetTipTimeout(int)
HelpSettings::operator!=(HelpSettings const&) const
HelpSettings::operator==(HelpSettings const&) const
Hunzip::Hunzip(char const*, char const*)
Hunzip::fail(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Hunzip::getbuf()
Hunzip::getcode(char const*)
Hunzip::getline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
Hunzip::~Hunzip()
IDocumentMarkAccess::IsLegalPaMForCrossRefHeadingBookmark(SwPaM const&)
IDocumentMarkAccess::iterator::get() const
IDocumentMarkAccess::iterator::iterator(__gnu_cxx::__normal_iterator<sw::mark::MarkBase* const*, std::vector<sw::mark::MarkBase*, std::allocator<sw::mark::MarkBase*> > > const&)
IDocumentMarkAccess::iterator::operator+(long) const
IDocumentMarkAccess::iterator::operator+=(long)
IDocumentMarkAccess::iterator::operator-(long) const
IDocumentMarkAccess::iterator::operator--()
IDocumentMarkAccess::iterator::operator--(int)
IDocumentMarkAccess::iterator::operator-=(long)
IDocumentMarkAccess::iterator::operator<(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::operator<=(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::operator=(IDocumentMarkAccess::iterator const&)
IDocumentMarkAccess::iterator::operator>(IDocumentMarkAccess::iterator const&) const
IDocumentMarkAccess::iterator::operator>=(IDocumentMarkAccess::iterator const&) const
INetContentTypes::GetContentType(INetContentType)
INetContentTypes::GetContentType(rtl::OUString const&)
INetContentTypes::GetContentType4Extension(rtl::OUString const&)
INetContentTypes::GetContentTypeFromURL(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
INetContentTypes::GetExtensionFromURL(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&)
INetMIME::equalIgnoreCase(char16_t const*, char16_t const*, char const*)
INetMIME::isAtomChar(unsigned int)
INetMIME::isIMAPAtomChar(unsigned int)
INetMIME::scanUnsigned(char16_t const*&, char16_t const*, bool, unsigned int&)
INetURLHistory::PutUrl_Impl(INetURLObject const&)
INetURLObject::ConcatData(INetProtocol, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
INetURLObject::GetHostPort(INetURLObject::DecodeMechanism, unsigned short) const
INetURLObject::GetSchemeName(INetProtocol)
INetURLObject::SetPort(unsigned int)
INetURLObject::appendUCS4(rtl::OUStringBuffer&, unsigned int, INetURLObject::EscapeType, INetURLObject::Part, unsigned short, bool)
INetURLObject::appendUCS4Escape(rtl::OUStringBuffer&, unsigned int)
INetURLObject::clearPassword()
INetURLObject::clearQuery()
INetURLObject::convertExtToInt(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&, INetURLObject::DecodeMechanism, unsigned short)
INetURLObject::convertIntToExt(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&, INetURLObject::DecodeMechanism, unsigned short)
INetURLObject::getAbbreviated(com::sun::star::uno::Reference<com::sun::star::util::XStringWidth> const&, int, INetURLObject::DecodeMechanism, unsigned short) const
INetURLObject::getUTF32(char16_t const*&, char16_t const*, INetURLObject::EncodeMechanism, unsigned short, INetURLObject::EscapeType&)
INetURLObject::hasExtension() const
INetURLObject::scanDomain(char16_t const*&, char16_t const*, bool)
INetURLObject::setHost(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short)
INetURLObject::setPassword(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short)
INetURLObject::setPath(std::basic_string_view<char16_t, std::char_traits<char16_t> >, INetURLObject::EncodeMechanism, unsigned short)
INetURLObject::setQuery(std::basic_string_view<char16_t, std::char_traits<char16_t> >, INetURLObject::EncodeMechanism, unsigned short)
INetURLObject::setUser(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short)
Idle::Idle(bool, char const*)
IdleTask::FlipFlag(Timer*)
IdleTask::GetFlag() const
IdleTask::IdleTask()
IdleTask::LinkStubFlipFlag(void*, Timer*)
Image::Draw(OutputDevice*, Point const&, DrawImageFlags, Size const*)
Image::operator==(Image const&) const
ImageMap::ClearImageMap()
ImageMap::InsertIMapObject(IMapObject const&)
ImageMap::InsertIMapObject(std::unique_ptr<IMapObject, std::default_delete<IMapObject> >)
ImageMap::Write(SvStream&, IMapFormat) const
ImageTree::getNameAccess()
ImageTree::loadImage(rtl::OUString const&, rtl::OUString const&, BitmapEx&, bool, ImageLoadFlags)
ImageTree::loadImage(rtl::OUString const&, rtl::OUString const&, BitmapEx&, bool, int, ImageLoadFlags)
ImageTree::shutdown()
ImplCallPreNotify(NotifyEvent&)
ImplControlValue::clone() const
ImplDestroyHelpWindow(bool)
ImplFastBitmapConversion(BitmapBuffer&, BitmapBuffer const&, SalTwoRect const&)
ImplGetSalSystem()
ImplGetSystemDependentDataManager()
ImplHideSplash()
ImplJobSetup::ImplJobSetup()
ImplJobSetup::ImplJobSetup(ImplJobSetup const&)
ImplJobSetup::SetDriver(rtl::OUString const&)
ImplJobSetup::SetDriverData(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, unsigned int)
ImplJobSetup::SetDuplexMode(DuplexMode)
ImplJobSetup::SetOrientation(Orientation)
ImplJobSetup::SetPaperBin(unsigned short)
ImplJobSetup::SetPaperFormat(Paper)
ImplJobSetup::SetPaperHeight(long)
ImplJobSetup::SetPaperWidth(long)
ImplJobSetup::SetPapersizeFromSetup(bool)
ImplJobSetup::SetPrinterName(rtl::OUString const&)
ImplJobSetup::SetPrinterSetupMode(PrinterSetupMode)
ImplJobSetup::SetSystem(unsigned short)
ImplJobSetup::SetValueMap(rtl::OUString const&, rtl::OUString const&)
ImplJobSetup::operator==(ImplJobSetup const&) const
ImplJobSetup::~ImplJobSetup()
ImplPrnQueueList::Get(rtl::OUString const&)
ImplPrnQueueList::~ImplPrnQueueList()
ImplSVMain()
IndexEntrySupplierWrapper::CompareIndexEntry(rtl::OUString const&, rtl::OUString const&, com::sun::star::lang::Locale const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::lang::Locale const&) const
IndexEntrySupplierWrapper::GetFollowingText(bool) const
IndexEntrySupplierWrapper::GetIndexKey(rtl::OUString const&, rtl::OUString const&, com::sun::star::lang::Locale const&) const
IndexEntrySupplierWrapper::LoadAlgorithm(com::sun::star::lang::Locale const&, rtl::OUString const&, long) const
IndexerPreProcessor::IndexerPreProcessor(fs::path const&, fs::path const&, fs::path const&)
IndexerPreProcessor::processDocument(_xmlDoc*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
IndexerPreProcessor::~IndexerPreProcessor()
InputDialog::GetEntryText() const
InputDialog::HideHelpBtn()
InputDialog::InputDialog(weld::Widget*, rtl::OUString const&)
InputDialog::SetEntryMessageType(weld::EntryMessageType)
InputDialog::SetEntryText(rtl::OUString const&)
InputDialog::SetTooltip(rtl::OUString const&)
InputDialog::setCheckEntry(std::function<bool (rtl::OUString)> const&)
InterimItemWindow::ControlHasFocus() const
InterimItemWindow::InvalidateChildSizeCache()
InterimItemWindow::StartIdleLayout()
InterimToolbarPopup::EndPopupMode()
InterimToolbarPopup::GetFocus()
InterimToolbarPopup::dispose()
InterimToolbarPopup::~InterimToolbarPopup()
IntlWrapper::ImplNewCollator(bool) const
IsCustomShapeFilledByDefault(MSO_SPT)
IsCustomShapeStrokedByDefault(MSO_SPT)
IsFormatSupported(std::vector<DataFlavorEx, std::allocator<DataFlavorEx> > const&, SotClipboardFormatId)
IsSearchableControl(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString*)
IsVCLInit()
ItemInfoPackage::getSlotIDToWhichIDMap() const
JobSetup::IsDefault() const
JobSetup::operator=(JobSetup const&)
JobSetup::operator=(JobSetup&&)
JoinMainLoopThread()
KeyListenerMultiplexer::KeyListenerMultiplexer(cppu::OWeakObject&)
KeyListenerMultiplexer::acquire()
KeyListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
KeyListenerMultiplexer::keyPressed(com::sun::star::awt::KeyEvent const&)
KeyListenerMultiplexer::keyReleased(com::sun::star::awt::KeyEvent const&)
KeyListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
KeyListenerMultiplexer::release()
LOKEditViewHistory::GetHistoryForDoc[abi:cxx11](o3tl::strong_int<int, ViewShellDocIdTag>)
LanguageTag::convertBcp47ToLang()
LanguageTag::convertBcp47ToLocale()
LanguageTag::convertFromRtlLocale()
LanguageTag::convertLangToLocale()
LanguageTag::convertLocaleToLang()
LanguageTag::getImpl()
LanguageTag::getImpl() const
LanguageTag::getScriptType() const
LanguageTag::isIsoCountry(rtl::OUString const&)
LanguageTag::isIsoLanguage(rtl::OUString const&)
LanguageTag::isIsoScript(rtl::OUString const&)
LanguageTag::registerImpl() const
LanguageTag::resetVars()
LanguageTag::synCanonicalize()
LanguageTag::syncFromImpl()
LanguageTag::syncVarsFromImpl() const
LanguageTag::syncVarsFromRawImpl() const
LineInfo::GetDotDashArray() const
LineInfo::IsDefault() const
LineInfo::LineInfo(LineInfo const&)
LineInfo::LineInfo(LineInfo&&)
LineInfo::SetStyle(LineStyle)
LineInfo::applyToB2DPolyPolygon(basegfx::B2DPolyPolygon&, basegfx::B2DPolyPolygon&) const
LineInfo::operator=(LineInfo const&)
LineInfo::operator=(LineInfo&&)
LineInfo::operator==(LineInfo const&) const
LinguMgr::GetChangeAll()
LinguMgr::GetChangeAllList()
LinguMgr::GetDicList()
LinguMgr::GetHyph()
LinguMgr::GetIgnoreAll()
LinguMgr::GetProp()
LinguMgr::GetSpell()
LinguMgr::GetStandard()
LinguMgr::GetThes()
ListBox::CalcAdjustedSize(Size const&) const
ListBox::CalcBlockSize(unsigned short, unsigned short) const
ListBox::CalcMinimumSize() const
ListBox::Clear()
ListBox::EnableAutoSize(bool)
ListBox::EnableMultiSelection(bool)
ListBox::GetBoundingRectangle(int) const
ListBox::GetDisplayLineCount() const
ListBox::GetDropDownLineCount() const
ListBox::GetDropDownPosSizePixel() const
ListBox::GetEntry(int) const
ListBox::GetEntryCount() const
ListBox::GetEntryImage(int) const
ListBox::GetEntryPos(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ListBox::GetIndexForPoint(Point const&, int&) const
ListBox::GetMaxVisColumnsAndLines(unsigned short&, unsigned short&) const
ListBox::GetSelectedEntry(int) const
ListBox::GetSelectedEntryCount() const
ListBox::GetSelectedEntryPos(int) const
ListBox::GetSeparatorPos() const
ListBox::GetTopEntry() const
ListBox::InsertEntry(rtl::OUString const&, Image const&, int)
ListBox::InsertEntry(rtl::OUString const&, int)
ListBox::IsEntryPosSelected(int) const
ListBox::IsInDropDown() const
ListBox::IsMultiSelectionEnabled() const
ListBox::IsReadOnly() const
ListBox::ListBox(vcl::Window*, long)
ListBox::RemoveEntry(int)
ListBox::Select()
ListBox::SelectEntriesPos(std::vector<int, std::allocator<int> > const&, bool)
ListBox::SelectEntryPos(int, bool)
ListBox::SetDropDownLineCount(unsigned short)
ListBox::SetHighlightColor(Color const&)
ListBox::SetHighlightTextColor(Color const&)
ListBox::SetNoSelection()
ListBox::SetReadOnly(bool)
ListBox::SetSeparatorPos(int)
ListBox::SetTopEntry(int)
ListBox::ToggleDropDown()
LocaleDataWrapper::ImplAddFormatNum(rtl::OUStringBuffer&, long, unsigned short, bool, bool) const
LocaleDataWrapper::appendLocaleInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
LocaleDataWrapper::doesSecondaryCalendarUseEC(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
LocaleDataWrapper::evaluateLocaleDataChecking()
LocaleDataWrapper::getAllCurrencies() const
LocaleDataWrapper::getAllFormats() const
LocaleDataWrapper::getAllInstalledLocaleNames() const
LocaleDataWrapper::getCurr(long, unsigned short, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool) const
LocaleDataWrapper::getCurrBankSymbol() const
LocaleDataWrapper::getCurrDigits() const
LocaleDataWrapper::getCurrNegativeFormat() const
LocaleDataWrapper::getCurrPositiveFormat() const
LocaleDataWrapper::getDateAcceptancePatterns() const
LocaleDataWrapper::getDefaultCalendar() const
LocaleDataWrapper::getInstalledLocaleNames()
LocaleDataWrapper::getLanguageCountryInfo() const
LocaleDataWrapper::getLongDateOrder() const
LocaleDataWrapper::getMyLocale() const
LocaleDataWrapper::loadCurrencyFormats()
LocaleDataWrapper::loadData()
LocaleDataWrapper::loadDateAcceptancePatterns(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
LocaleDataWrapper::loadDateOrders()
LocaleDataWrapper::loadDigitGrouping()
LocaleDataWrapper::outputCheckMessage(char const*)
LocaleDataWrapper::outputCheckMessage(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
LocaleDataWrapper::scanCurrFormatImpl(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, int&, int&, int&, int&, int&) const
LocaleDataWrapper::scanDateOrderImpl(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
LogL10fromY
LogL10toY
LogL16fromY
LogL16toY
LogLuv24fromXYZ
LogLuv24toXYZ
LogLuv32fromXYZ
LogLuv32toXYZ
LokChartHelper::Hit(Point const&)
LokChartHelper::HitAny(Point const&, bool)
LokChartHelper::Invalidate()
LokChartHelper::PaintTile(VirtualDevice&, tools::Rectangle const&)
LokChartHelper::postMouseEvent(int, int, int, int, int, int, double, double)
LokStarMathHelper::GetWidgetWindow()
LokStarMathHelper::PaintTile(VirtualDevice&, tools::Rectangle const&)
LokStarMathHelper::postMouseEvent(int, int, int, int, int, int, double, double)
MailDispatcher::cloneListener()
MailDispatcher::onTerminated()
MailDispatcher::run()
MailDispatcher::sendMailMessageNotifyListener(com::sun::star::uno::Reference<com::sun::star::mail::XMailMessage> const&)
MailDispatcher::~MailDispatcher()
MapMode::GetHashValue() const
MapMode::IsDefault() const
MapToFieldUnit(MapUnit)
Menu::Activate()
Menu::AddEventListener(Link<VclMenuEvent&, void> const&)
Menu::CheckItem(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
Menu::Clear()
Menu::CreateAutoMnemonics()
Menu::GetAccessibleDescription(unsigned short) const
Menu::GetAccessibleName(unsigned short) const
Menu::GetActivationKey(unsigned short) const
Menu::GetBoundingRectangle(unsigned short) const
Menu::GetCharacterBounds(unsigned short, long) const
Menu::GetHelpCommand(unsigned short) const
Menu::GetHelpText(unsigned short) const
Menu::GetIndexForPoint(Point const&, unsigned short&) const
Menu::GetItemCommand(unsigned short) const
Menu::GetItemType(unsigned short) const
Menu::GetSystemMenuData(SystemMenuData*) const
Menu::GetTipHelpText(unsigned short) const
Menu::GetUserValue(unsigned short) const
Menu::HasValidEntries(bool) const
Menu::HighlightItem(unsigned short)
Menu::InsertItem(unsigned short, Image const&, MenuItemBits, rtl::OUString const&, unsigned short)
Menu::InsertItem(unsigned short, rtl::OUString const&, Image const&, MenuItemBits, rtl::OUString const&, unsigned short)
Menu::IsHighlighted(unsigned short) const
Menu::IsItemCheckable(unsigned short) const
Menu::IsItemPosVisible(unsigned short) const
Menu::IsMenuVisible() const
Menu::Menu()
Menu::MenuBarKeyInput(KeyEvent const&)
Menu::RemoveEventListener(Link<VclMenuEvent&, void> const&)
Menu::RemoveItem(unsigned short)
Menu::Select()
Menu::SetAccelKey(unsigned short, vcl::KeyCode const&)
Menu::SetAccessible(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
Menu::SetAccessibleDescription(unsigned short, rtl::OUString const&)
Menu::SetAccessibleName(unsigned short, rtl::OUString const&)
Menu::SetHelpCommand(unsigned short, rtl::OUString const&)
Menu::SetHelpText(unsigned short, rtl::OUString const&)
Menu::SetItemBits(unsigned short, MenuItemBits)
Menu::SetTipHelpText(unsigned short, rtl::OUString const&)
Menu::SetUserValue(unsigned short, void*, void (*)(void*))
Menu::ShowItem(unsigned short, bool)
Menu::dispose()
Menu::operator=(Menu const&)
Menu::~Menu()
MenuBar::ClosePopup(Menu*)
MenuBar::MenuBar()
MenuBar::SetDisplayable(bool)
MenuBar::ShowCloseButton(bool)
MenuBar::dispose()
MenuOrToolMenuButton::MenuOrToolMenuButton(SvxColorToolBoxControl*, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>)
MenuOrToolMenuButton::MenuOrToolMenuButton(weld::MenuButton*)
MenuOrToolMenuButton::get_active() const
MenuOrToolMenuButton::get_widget() const
MetaArcAction::MetaArcAction(tools::Rectangle const&, Point const&, Point const&)
MetaBmpAction::MetaBmpAction(Point const&, Bitmap const&)
MetaBmpExScaleAction::MetaBmpExScaleAction(Point const&, Size const&, BitmapEx const&)
MetaBmpExScalePartAction::MetaBmpExScalePartAction(Point const&, Size const&, Point const&, Size const&, BitmapEx const&)
MetaBmpScaleAction::MetaBmpScaleAction(Point const&, Size const&, Bitmap const&)
MetaBmpScalePartAction::MetaBmpScalePartAction(Point const&, Size const&, Point const&, Size const&, Bitmap const&)
MetaChordAction::MetaChordAction(tools::Rectangle const&, Point const&, Point const&)
MetaEllipseAction::MetaEllipseAction(tools::Rectangle const&)
MetaFillColorAction::~MetaFillColorAction()
MetaFontAction::MetaFontAction(vcl::Font)
MetaISectRectClipRegionAction::MetaISectRectClipRegionAction(tools::Rectangle const&)
MetaISectRegionClipRegionAction::MetaISectRegionClipRegionAction(vcl::Region)
MetaLayoutModeAction::MetaLayoutModeAction(vcl::text::ComplexTextLayoutFlags)
MetaLineAction::MetaLineAction(Point const&, Point const&, LineInfo)
MetaPieAction::MetaPieAction(tools::Rectangle const&, Point const&, Point const&)
MetaPixelAction::MetaPixelAction(Point const&, Color const&)
MetaPolyLineAction::MetaPolyLineAction(tools::Polygon, LineInfo)
MetaPolyPolygonAction::MetaPolyPolygonAction(tools::PolyPolygon)
MetaPolygonAction::MetaPolygonAction(tools::Polygon)
MetaPopAction::MetaPopAction()
MetaPushAction::MetaPushAction(vcl::PushFlags)
MetaRasterOpAction::MetaRasterOpAction(RasterOp)
MetaRoundRectAction::MetaRoundRectAction(tools::Rectangle const&, unsigned int, unsigned int)
MetaTextAlignAction::MetaTextAlignAction(TextAlign)
MetaTextArrayAction::MetaTextArrayAction(Point const&, rtl::OUString, KernArraySpan, std::span<unsigned char const, 18446744073709551615ul>, int, int)
MetaTextColorAction::MetaTextColorAction(Color const&)
MetaTextFillColorAction::MetaTextFillColorAction(Color const&, bool)
MetaWallpaperAction::MetaWallpaperAction(tools::Rectangle const&, Wallpaper const&)
MetafileXmlDump::dump(GDIMetaFile const&, SvStream&)
MetafileXmlDump::writeXml(GDIMetaFile const&, tools::XmlWriter&)
MetricField::GetFirst(FieldUnit) const
MetricField::GetLast(FieldUnit) const
MetricField::SetFirst(long, FieldUnit)
MetricField::SetLast(long, FieldUnit)
MetricField::SetUnit(FieldUnit)
MetricFormatter::GetCorrectedValue(FieldUnit) const
MetricFormatter::GetMax(FieldUnit) const
MetricFormatter::GetMin(FieldUnit) const
MetricFormatter::GetValue(FieldUnit) const
MetricFormatter::SetCustomUnitText(rtl::OUString const&)
MetricFormatter::SetMax(long, FieldUnit)
MetricFormatter::SetMin(long, FieldUnit)
MetricFormatter::SetUserValue(long, FieldUnit)
MetricFormatter::SetValue(long, FieldUnit)
MiscSettings::GetAppColorMode()
MiscSettings::GetDarkMode()
MiscSettings::GetUseDarkMode()
MiscSettings::SetAppColorMode(int)
MiscSettings::SetDarkMode(int)
MiscSettings::SetEnableLocalizedDecimalSep(bool)
MiscSettings::operator!=(MiscSettings const&) const
MiscSettings::operator==(MiscSettings const&) const
MnemonicGenerator::GetCharClass()
MnemonicGenerator::MnemonicGenerator(MnemonicGenerator const&)
MnemonicGenerator::operator=(MnemonicGenerator const&)
MouseListenerMultiplexer::MouseListenerMultiplexer(cppu::OWeakObject&)
MouseListenerMultiplexer::acquire()
MouseListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
MouseListenerMultiplexer::mouseEntered(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::mouseExited(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::mousePressed(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::mouseReleased(com::sun::star::awt::MouseEvent const&)
MouseListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
MouseListenerMultiplexer::release()
MouseMotionListenerMultiplexer::MouseMotionListenerMultiplexer(cppu::OWeakObject&)
MouseMotionListenerMultiplexer::acquire()
MouseMotionListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
MouseMotionListenerMultiplexer::mouseDragged(com::sun::star::awt::MouseEvent const&)
MouseMotionListenerMultiplexer::mouseMoved(com::sun::star::awt::MouseEvent const&)
MouseMotionListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
MouseMotionListenerMultiplexer::release()
MouseSettings::GetOptions() const
MouseSettings::SetButtonRepeat(int)
MouseSettings::SetMiddleButtonAction(MouseMiddleButtonAction)
MouseSettings::SetOptions(MouseSettingsOptions)
MouseSettings::operator!=(MouseSettings const&) const
MouseSettings::operator==(MouseSettings const&) const
MsLangId::getPlatformSystemLanguage()
MsLangId::getPlatformSystemUILanguage()
MultiSelection::Insert(int, int)
MultiSelection::LastSelected()
MultiSelection::MultiSelection(MultiSelection const&)
MultiSelection::NextSelected()
MultiSelection::Remove(int)
MultiSelection::Reset()
MultiSelection::operator=(MultiSelection const&)
MyThes::CleanUpAfterLookup(mentry**, int)
MyThes::Lookup(char const*, int, mentry**)
MyThes::MyThes(char const*, char const*)
MyThes::binsearch(char*, char**, int)
MyThes::get_th_encoding()
MyThes::mychomp(char*)
MyThes::myfopen(char const*, char const*)
MyThes::mystr_indexOfChar(char const*, int)
MyThes::mystrdup(char const*)
MyThes::readLine(_IO_FILE*, char*, int)
MyThes::thCleanup()
MyThes::thInitialize(char const*, char const*)
MyThes::~MyThes()
NameOrIndex::CheckNamedItem(NameOrIndex const*, unsigned short, SfxItemPool const*, bool (*)(NameOrIndex const*, NameOrIndex const*), TranslateId, rtl::Reference<XPropertyList> const&)
NameOrIndex::Clone(SfxItemPool*) const
NameOrIndex::NameOrIndex(NameOrIndex const&)
NameOrIndex::NameOrIndex(TypedWhichId<NameOrIndex>, rtl::OUString const&)
NameOrIndex::dumpAsXml(_xmlTextWriter*) const
NameOrIndex::operator==(SfxPoolItem const&) const
NfCurrencyTable::begin()
NfCurrencyTable::insert(__gnu_cxx::__normal_iterator<NfCurrencyEntry*, std::vector<NfCurrencyEntry, std::allocator<NfCurrencyEntry> > > const&, NfCurrencyEntry)
NfCurrencyTable::operator[](unsigned long)
NotifyBrokenPackage::GetRequest() const
NotifyBrokenPackage::NotifyBrokenPackage(rtl::OUString const&)
NotifyBrokenPackage::~NotifyBrokenPackage()
NotifyEvent::NotifyEvent(NotifyEventType, vcl::Window*, void const*)
NotifyEvent::~NotifyEvent()
NumFormatListBox::Init()
NumFormatListBox::clear()
OKButton::Click()
ObjectInspectorWidgets::ObjectInspectorWidgets(std::unique_ptr<weld::Builder, std::default_delete<weld::Builder> > const&)
ObjectInspectorWidgets::~ObjectInspectorWidgets()
OfaPtrItem::Clone(SfxItemPool*) const
OfaPtrItem::operator==(SfxPoolItem const&) const
OfaXColorListItem::Clone(SfxItemPool*) const
OfaXColorListItem::operator==(SfxPoolItem const&) const
Op(SkPath const&, SkPath const&, SkPathOp, SkPath*)
OpenCLConfig::OpenCLConfig()
OpenCLConfig::checkImplementation(OpenCLPlatformInfo const&, OpenCLDeviceInfo const&) const
OpenCLConfig::get()
OpenCLConfig::operator!=(OpenCLConfig const&) const
OpenCLConfig::operator==(OpenCLConfig const&) const
OpenCLConfig::set()
OpenGLContext::Create()
OpenGLContext::dispose()
OpenGLContext::getChildWindow()
OpenGLContext::init(vcl::Window*)
OpenGLContext::isCurrent()
OpenGLContext::requestLegacyContext()
OpenGLContext::setWinPosAndSize(Point const&, Size const&)
OpenGLContext::show()
OpenGLHelper::LoadShaders(rtl::OUString const&, rtl::OUString const&)
OpenGLHelper::LoadShaders(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
OpenGLHelper::LoadShaders(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >)
OpenGLHelper::LoadShaders(rtl::OUString const&, rtl::OUString const&, std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >)
OpenGLHelper::checkGLError(char const*, unsigned long)
OpenGLHelper::createFramebuffer(long, long, unsigned int&, unsigned int&, unsigned int&)
OpenGLHelper::debugMsgPrint(int, char const*, ...)
OpenGLHelper::debugMsgStream(std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > const&)
OpenGLHelper::debugMsgStreamWarn(std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > const&)
OpenGLHelper::getGLVersion()
OpenGLHelper::supportsOpenGL()
OpenGLZone::checkDebug(int, CrashWatchdogTimingsValues const&)
OpenGLZone::getCrashWatchdogTimingsValues()
OpenGLZone::hardDisable()
OpenGLZone::relaxWatchdogTimings()
Outliner::GetBulletsNumberingStatus(int, int) const
OutlinerParaObjData::OutlinerParaObjData(OutlinerParaObjData const&)
OutlinerParaObjData::OutlinerParaObjData(std::unique_ptr<EditTextObject, std::default_delete<EditTextObject> >, std::vector<ParagraphData, std::allocator<ParagraphData> >&&, bool)
OutlinerParaObjData::isWrongListEqual(OutlinerParaObjData const&) const
OutlinerParaObjData::operator==(OutlinerParaObjData const&) const
OutlinerParaObject::GetParagraphData(int) const
OutlinerParaObject::OutlinerParaObject(std::unique_ptr<EditTextObject, std::default_delete<EditTextObject> >, std::vector<ParagraphData, std::allocator<ParagraphData> >&&, bool)
OutlinerView::GetStyleSheet() const
OutlinerView::Indent(short)
OutputDevice::AddFontSubstitute(rtl::OUString const&, rtl::OUString const&, AddFontSubstituteFlags)
OutputDevice::AddHatchActions(tools::PolyPolygon const&, Hatch const&, GDIMetaFile&)
OutputDevice::BeginFontSubstitution()
OutputDevice::CreateBitmapSurface(BitmapSystemData const&, Size const&) const
OutputDevice::CreateSurface(int, int, int, int) const
OutputDevice::CreateSurface(std::shared_ptr<_cairo_surface> const&) const
OutputDevice::CreateUnoGraphicsList()
OutputDevice::DrawCtrlText(Point const&, rtl::OUString const&, int, int, DrawTextFlags, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >*, rtl::OUString*, SalLayoutGlyphs const*)
OutputDevice::DrawNativeControl(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, rtl::OUString const&, Color const&)
OutputDevice::DrawTransparent(GDIMetaFile const&, Point const&, Size const&, Point const&, Size const&, Gradient const&)
OutputDevice::EndFontSubstitution()
OutputDevice::GetCtrlTextWidth(rtl::OUString const&, SalLayoutGlyphs const*) const
OutputDevice::GetFontCapabilities(vcl::FontCapabilities&) const
OutputDevice::GetGlyphBoundRects(Point const&, rtl::OUString const&, int, int, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >&) const
OutputDevice::GetGraphics() const
OutputDevice::GetInverseViewTransformation(MapMode const&) const
OutputDevice::GetNativeControlRegion(ControlType, ControlPart, tools::Rectangle const&, ControlState, ImplControlValue const&, tools::Rectangle&, tools::Rectangle&) const
OutputDevice::GetNativeSurfaceHandle(std::shared_ptr<cairo::Surface>&, basegfx::B2ISize const&) const
OutputDevice::GetRenderBackendName() const
OutputDevice::GetSpriteCanvas() const
OutputDevice::GetTextBoundRect(basegfx::B2DRange&, rtl::OUString const&, int, int, int, unsigned long, KernArraySpan, std::span<unsigned char const, 18446744073709551615ul>, SalLayoutGlyphs const*) const
OutputDevice::GetTextHeightDouble() const
OutputDevice::GetTextIsRTL(rtl::OUString const&, int, int) const
OutputDevice::GetTextOutline(tools::PolyPolygon&, rtl::OUString const&) const
OutputDevice::GetTextOutlines(std::vector<basegfx::B2DPolyPolygon, std::allocator<basegfx::B2DPolyPolygon> >&, rtl::OUString const&, int, int, int, unsigned long, KernArraySpan, std::span<unsigned char const, 18446744073709551615ul>) const
OutputDevice::GetTextOutlines(std::vector<tools::PolyPolygon, std::allocator<tools::PolyPolygon> >&, rtl::OUString const&, int, int, int, unsigned long, KernArraySpan, std::span<unsigned char const, 18446744073709551615ul>) const
OutputDevice::GetTextWidthDouble(rtl::OUString const&, int, int, vcl::text::TextLayoutCache const*, SalLayoutGlyphs const*) const
OutputDevice::HasFastDrawTransformedBitmap() const
OutputDevice::ImplGetTextBoundRect(SalLayout const&) const
OutputDevice::Invert(tools::Polygon const&, InvertFlags)
OutputDevice::IsNativeControlSupported(ControlType, ControlPart) const
OutputDevice::LogicToLogic(basegfx::B2DPolygon const&, MapMode const&, MapMode const&)
OutputDevice::PixelToLogic(vcl::Region const&) const
OutputDevice::RefreshFontData(bool)
OutputDevice::RemoveFontsSubstitute()
OutputDevice::RemoveTransparenciesFromMetaFile(GDIMetaFile const&, GDIMetaFile&, long, long, bool, bool, bool, Color const&)
OutputDevice::SupportsCairo() const
PDFSignatureHelper::GetNewSecurityId() const
PDFSignatureHelper::ReadAndVerifySignature(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
PDFSignatureHelper::SetDescription(rtl::OUString const&)
PDFSignatureHelper::SetX509Certificate(com::sun::star::uno::Reference<com::sun::star::security::XCertificate> const&)
PDFSignatureHelper::Sign(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
PPTFieldEntry::SetDateTime(unsigned int)
PPTFieldEntry::~PPTFieldEntry()
PPTParagraphObj::GetAttrib(unsigned int, unsigned int&, TSS_Type)
PPTParagraphObj::Next()
PPTParagraphObj::PPTParagraphObj(PPTStyleTextPropReader&, unsigned long, unsigned long&, PPTStyleSheet const&, TSS_Type, PPTTextRulerInterpreter const&)
PPTParagraphObj::UpdateBulletRelSize(unsigned int&) const
PPTPortionObj::ApplyTo(SfxItemSet&, SdrPowerPointImport&, TSS_Type, PPTTextObj const*)
PPTPortionObj::GetAttrib(unsigned int, unsigned int&, TSS_Type) const
PPTPortionObj::GetTextField()
PPTPortionObj::PPTPortionObj(PPTCharPropSet const&, PPTStyleSheet const&, TSS_Type, unsigned int)
PPTPortionObj::PPTPortionObj(PPTPortionObj const&)
PPTTextObj::GetBackground() const
PPTTextObj::Next()
PPTTextObj::PPTTextObj(PPTTextObj const&)
PPTTextObj::PPTTextObj(SvStream&, SdrPowerPointImport&, PptSlidePersistEntry&, DffObjData const*)
PPTTextObj::operator=(PPTTextObj const&)
PPTTextObj::~PPTTextObj()
PaintListenerMultiplexer::PaintListenerMultiplexer(cppu::OWeakObject&)
PaintListenerMultiplexer::acquire()
PaintListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
PaintListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
PaintListenerMultiplexer::release()
PaintListenerMultiplexer::windowPaint(com::sun::star::awt::PaintEvent const&)
Pair::GetHashValue() const
PaletteManager::AddRecentColor(Color const&, rtl::OUString const&, bool)
PaletteManager::Clone() const
PaletteManager::DispatchColorCommand(rtl::OUString const&, NamedColor const&)
PaletteManager::GetColorCount() const
PaletteManager::GetLumModOff(unsigned short, unsigned short, short&, short&)
PaletteManager::GetPalette() const
PaletteManager::GetPaletteName()
PaletteManager::GetRecentColorCount() const
PaletteManager::GetThemeAndEffectIndex(unsigned short, unsigned short&, unsigned short&)
PaletteManager::IsThemePaletteSelected() const
PaletteManager::LoadPalettes()
PaletteManager::PaletteManager(PaletteManager const*)
PaletteManager::PopupColorPicker(weld::Window*, rtl::OUString const&, Color const&)
PaletteManager::ReloadRecentColorSet(SvxColorValueSet&)
PaletteManager::SetBtnUpdater(svx::ToolboxButtonColorUpdaterBase*)
PaletteManager::SetColorSelectFunction(std::function<void (rtl::OUString const&, NamedColor const&)> const&)
PaletteManager::SetSplitButtonColor(NamedColor const&)
PaletteManager::generateJSON(tools::JsonWriter&, std::set<Color, std::less<Color>, std::allocator<Color> > const&)
PanelLayout::SetPanel(sfx2::sidebar::Panel*)
PanelLayout::queue_resize()
PaperInfo::fromPSName(rtl::OString const&)
PaperInfo::getDefaultPaperForLocale(com::sun::star::lang::Locale const&)
PaperInfo::sloppyEqual(PaperInfo const&) const
PaperInfo::toPSName(Paper)
PointTemplateBase::RotateAround(long&, long&, o3tl::strong_int<short, FractionTag<10> >) const
PopupMenu::CreateMenuInterface()
PopupMenu::EndExecute()
PopupMenu::GetActivePopupMenu()
PopupMenu::PopupMenu(PopupMenu const&)
PopupMenu::SelectItem(unsigned short)
PopupMenu::SetSelectedEntry(unsigned short)
PopupMenu::~PopupMenu()
PptSlidePersistList::PptSlidePersistList()
PptSlidePersistList::~PptSlidePersistList()
Printer::PrintJob(std::shared_ptr<vcl::PrinterController> const&, JobSetup const&)
Printer::Printer(JobSetup const&)
Printer::Printer(rtl::OUString const&)
Printer::updatePrinters()
PrinterSetupDialog::SetOptionsHdl(Link<weld::Button&, void> const&)
ProcessData::NotifyFreeObj(SdrObject*)
ProgressBarHelper::ProgressBarHelper(com::sun::star::uno::Reference<com::sun::star::task::XStatusIndicator>, bool)
ProgressBarHelper::~ProgressBarHelper()
PushButton::CalcMinimumSize() const
PushButton::SetPressed(bool)
PushButton::SetState(TriState)
PushButton::Toggle()
PushButtonValue::clone() const
QtData::ErrorTrapPop(bool)
QtData::ErrorTrapPush()
QtData::getCursor(PointerStyle)
QtData::noNativeControls()
QtData::noWeldedWidgets()
QtData::~QtData()
QtFilePicker::currentChanged(QString const&)
QtFilePicker::filterSelected(QString const&)
QtFilePicker::finished(int)
QtFilePicker::getImplementationName()
QtFilePicker::getResString(TranslateId)
QtFilePicker::getSupportedServiceNames()
QtFilePicker::handleGetListValue(QComboBox const*, short)
QtFilePicker::handleSetListValue(QComboBox*, short, com::sun::star::uno::Any const&)
QtFilePicker::metaObject() const
QtFilePicker::prepareExecute()
QtFilePicker::supportsService(rtl::OUString const&)
QtFilePicker::updateAutomaticFileExtension()
QtFontFace::toFontItalic(QFont::Style)
QtFontFace::toFontWeight(int)
QtFontFace::toFontWidth(int)
QtFrame::AcquireGraphics()
QtFrame::Beep()
QtFrame::BeginSetClipRegion(unsigned int)
QtFrame::CalcDefaultSize()
QtFrame::CaptureMouse(bool)
QtFrame::Damage(int, int, int, int) const
QtFrame::EndExtTextInput(EndExtTextInputFlags)
QtFrame::EndSetClipRegion()
QtFrame::FillSystemEnvData(SystemEnvData&, long, QWidget*)
QtFrame::Flush()
QtFrame::GetClientSize(long&, long&)
QtFrame::GetIndicatorState()
QtFrame::GetInputLanguage()
QtFrame::GetKeyName(unsigned short)
QtFrame::GetModal() const
QtFrame::GetParent() const
QtFrame::GetPointerState()
QtFrame::GetUseDarkMode() const
QtFrame::GetUseReducedAnimation() const
QtFrame::GetWindowState(vcl::WindowData*)
QtFrame::GetWorkArea(AbsoluteScreenPixelRectangle&)
QtFrame::MapUnicodeToKeyCode(char16_t, o3tl::strong_int<unsigned short, LanguageTypeTag>, vcl::KeyCode&)
QtFrame::PostEvent(std::unique_ptr<ImplSVEvent, std::default_delete<ImplSVEvent> >)
QtFrame::QtFrame(QtFrame*, SalFrameStyleFlags, bool)
QtFrame::ReleaseGraphics(SalGraphics*)
QtFrame::ResetClipRegion()
QtFrame::ResolveWindowHandle(SystemEnvData&) const
QtFrame::SetAlwaysOnTop(bool)
QtFrame::SetApplicationID(rtl::OUString const&)
QtFrame::SetDefaultPos()
QtFrame::SetDefaultSize()
QtFrame::SetExtendedFrameStyle(unsigned long)
QtFrame::SetIcon(unsigned short)
QtFrame::SetInputContext(SalInputContext*)
QtFrame::SetMaxClientSize(long, long)
QtFrame::SetMenu(SalMenu*)
QtFrame::SetMinClientSize(long, long)
QtFrame::SetModal(bool)
QtFrame::SetParent(SalFrame*)
QtFrame::SetPluginParent(SystemParentData*)
QtFrame::SetPointer(PointerStyle)
QtFrame::SetPointerPos(long, long)
QtFrame::SetPosSize(long, long, long, long, unsigned short)
QtFrame::SetScreenNumber(unsigned int)
QtFrame::SetTitle(rtl::OUString const&)
QtFrame::SetWindowState(vcl::WindowData const*)
QtFrame::SetWindowStateImpl(QFlags<Qt::WindowState>)
QtFrame::Show(bool, bool)
QtFrame::ShowFullScreen(bool, int)
QtFrame::ShowTooltip(rtl::OUString const&, tools::Rectangle const&)
QtFrame::SimulateKeyPress(unsigned short)
QtFrame::StartPresentation(bool)
QtFrame::ToTop(SalFrameToTop)
QtFrame::UnionClipRegion(long, long, long, long)
QtFrame::UpdateSettings(AllSettings&)
QtFrame::asChild() const
QtFrame::deregisterDragSource(QtDragSource const*)
QtFrame::deregisterDropTarget(QtDropTarget const*)
QtFrame::devicePixelRatioF() const
QtFrame::handleDragLeave()
QtFrame::handleDragMove(QDragMoveEvent*)
QtFrame::handleDrop(QDropEvent*)
QtFrame::isMaximized() const
QtFrame::isMinimized() const
QtFrame::isWindow() const
QtFrame::menuBarOffset() const
QtFrame::metaObject() const
QtFrame::qt_metacall(QMetaObject::Call, int, void**)
QtFrame::qt_metacast(char const*)
QtFrame::registerDragSource(QtDragSource*)
QtFrame::registerDropTarget(QtDropTarget*)
QtFrame::screen() const
QtFrame::screenChanged(QScreen*)
QtFrame::setInputLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
QtFrame::windowHandle() const
QtFrame::~QtFrame()
QtInstance::ImplYield(bool, bool)
QtInstance::ImplYieldSignal(bool, bool)
QtInstance::UpdateStyle(bool)
QtInstance::connectQScreenSignals(QScreen const*)
QtInstance::deleteObjectLater(QObject*)
QtInstance::deleteObjectLaterSignal(QObject*)
QtInstance::localeChanged()
QtInstance::notifyDisplayChanged()
QtInstance::orientationChanged(Qt::ScreenOrientation)
QtInstance::primaryScreenChanged(QScreen*)
QtInstance::screenAdded(QScreen*)
QtInstance::screenRemoved(QScreen*)
QtInstance::setActivePopup(QtFrame*)
QtInstance::virtualGeometryChanged(QRect const&)
QtSvpGraphics::CreateSurface(OutputDevice const&, int, int, int, int) const
QtSvpGraphics::CreateSurface(std::shared_ptr<_cairo_surface> const&) const
QtSvpGraphics::GetResolution(int&, int&)
QtSvpGraphics::QtSvpGraphics(QtFrame*)
QtSvpGraphics::SupportsCairo() const
QtSvpGraphics::handleDamage(tools::Rectangle const&)
QtSvpGraphics::updateQWidget() const
QtSvpGraphics::~QtSvpGraphics()
QueueInfo::GetComment() const
QueueInfo::GetJobs() const
QueueInfo::GetLocation() const
QueueInfo::GetStatus() const
QueueInfo::QueueInfo()
RadioButton::CalcMinimumSize(long) const
RadioButton::Check(bool)
RadioButton::GetRadioButtonGroup(bool) const
RadioButton::SetState(bool)
ReadDIBV5(Bitmap&, AlphaMask&, SvStream&)
ReadFileList(SvStream&, FileList&)
ReadJobSetup(SvStream&, JobSetup&)
ReadSvtGraphicFill(SvStream&, SvtGraphicFill&)
ReadSvtGraphicStroke(SvStream&, SvtGraphicStroke&)
Reader::ClearTemplate()
Reader::GetTemplateDoc(SwDoc&)
Reader::MakeHTMLDummyTemplateDoc()
Reader::ResetFrameFormats(SwDoc&)
Reader::SetTemplate(SwDoc&)
Reader::SetTemplateName(rtl::OUString const&)
RecordItemWindowBase::FirePosition(bool)
RecordItemWindowBase::PositionFired(long)
RequestPackageReparation::GetRequest() const
RequestPackageReparation::RequestPackageReparation(rtl::OUString const&)
RequestPackageReparation::isApproved() const
RequestPackageReparation::~RequestPackageReparation()
ResizableDockingWindow::ResizableDockingWindow(vcl::Window*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
ResizableDockingWindow::ResizableDockingWindow(vcl::Window*, long)
RotatePoly(tools::Polygon&, Point const&, double, double)
RptResId(TranslateId)
Ruler::CancelDrag()
Ruler::DoubleClick()
Ruler::DrawTab(OutputDevice&, Color const&, Point const&, unsigned short)
Ruler::Ruler(vcl::Window*, long)
Ruler::SetBorders(unsigned int, RulerBorder const*)
Ruler::SetExtraType(RulerExtra, unsigned short)
Ruler::SetIndents(unsigned int, RulerIndent const*)
Ruler::SetLeftFrameMargin(long)
Ruler::SetMargin1(long, RulerMarginStyle)
Ruler::SetMargin2(long, RulerMarginStyle)
Ruler::SetNullOffset(long)
Ruler::SetPagePos(long, long)
Ruler::SetRightFrameMargin(long)
Ruler::SetTabs(unsigned int, RulerTab const*)
Ruler::SetTextRTL(bool)
SEInitializerGpg::SEInitializerGpg()
SEInitializerGpg::createSecurityContext(rtl::OUString const&)
SEInitializerGpg::freeSecurityContext(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSecurityContext> const&)
SEInitializerGpg::getImplementationName()
SEInitializerGpg::getSupportedServiceNames()
SEInitializerGpg::supportsService(rtl::OUString const&)
SEInitializerGpg::~SEInitializerGpg()
SalBitmap::DropScaledCache()
SalBitmap::convertDataBitCount(unsigned char const*, int, int, int, int, BitmapPalette const&, SalBitmap::BitConvert)
SalData::SalData()
SalData::~SalData()
SalDisplay::~SalDisplay()
SalFrame::DumpSetPosSize(long, long, long, long, unsigned short)
SalFrame::GetGeometry() const
SalFrame::SetCallback(vcl::Window*, bool (*)(vcl::Window*, SalEvent, void const*))
SalGraphics::drawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*, double)
SalInfoPrinter::~SalInfoPrinter()
SalInstance::AcquireYieldMutex(unsigned int)
SalInstance::CreateDragSource(SystemEnvData const*)
SalInstance::CreateDropTarget(SystemEnvData const*)
SalInstance::CreateOpenGLContext()
SalInstance::ImplCreateDragSource(SystemEnvData const*)
SalInstance::ImplCreateDropTarget(SystemEnvData const*)
SalInstance::ReleaseYieldMutexAll()
SalInstance::~SalInstance()
SalLayout::AdjustLayout(vcl::text::ImplLayoutArgs&)
SalLayout::BoundRect2Rectangle(basegfx::B2DRange&)
SalLayout::GetBoundRect(basegfx::B2DRange&) const
SalLayout::GetDrawPosition(basegfx::B2DPoint const&) const
SalLayout::GetGlyphs() const
SalLayout::SalLayout()
SalLayout::~SalLayout()
SalLayoutGlyphs::AppendImpl(SalLayoutGlyphsImpl*)
SalLayoutGlyphs::Invalidate()
SalLayoutGlyphs::SalLayoutGlyphs()
SalLayoutGlyphs::SalLayoutGlyphs(SalLayoutGlyphs&&)
SalLayoutGlyphs::operator=(SalLayoutGlyphs&&)
SalLayoutGlyphsCache::SetCacheGlyphsWhenDoingFallbackFonts(bool)
SalMenu::AddMenuBarButton(SalMenuButtonItem const&)
SalMenu::GetMenuBarButtonRectPixel(unsigned short, SalFrame*)
SalMenu::GetMenuBarHeight() const
SalMenu::RemoveMenuBarButton(unsigned short)
SalMenu::ShowCloseButton(bool)
SalMenu::ShowNativePopupMenu(FloatingWindow*, tools::Rectangle const&, FloatWinPopupFlags)
SalPrinter::StartJob(rtl::OUString const*, rtl::OUString const&, rtl::OUString const&, ImplJobSetup*, vcl::PrinterController&)
SalPrinter::~SalPrinter()
SalSystem::~SalSystem()
SalUserEventList::RemoveEvent(SalFrame*, void*, SalEvent)
SaveOrDelMSVBAStorage_ww8
SaveVBA(SfxObjectShell&, SvMemoryStream*&)
SbMethod::Broadcast(SfxHintId)
SbMethod::Call(SbxValue*, SbxVariable*)
SbMethod::ClearStatics()
SbMethod::GetInfo()
SbMethod::GetLineRange(unsigned short&, unsigned short&)
SbMethod::GetStatics()
SbMethod::LoadData(SvStream&, unsigned short)
SbMethod::StoreData(SvStream&) const
SbMethod::~SbMethod()
SbModule::ClearAllBP()
SbModule::ClearBP(unsigned short)
SbModule::GetCodeCompleteDataFromParse(CodeCompleteDataCache&)
SbModule::GetKeywordCase(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SbModule::SbModule(rtl::OUString const&, bool)
SbModule::SetBP(unsigned short)
SbModule::SetSource32(rtl::OUString const&)
SbModule::createCOMWrapperForIface(com::sun::star::uno::Any&, SbClassModuleObject*)
SbModule::~SbModule()
SbxArray::Clear()
SbxArray::Find(rtl::OUString const&, SbxClassType)
SbxArray::GetAlias(unsigned int)
SbxArray::GetRef(unsigned int)
SbxArray::GetType() const
SbxArray::Insert(SbxVariable*, unsigned int)
SbxArray::LoadData(SvStream&, unsigned short)
SbxArray::Merge(SbxArray*)
SbxArray::PutAlias(rtl::OUString const&, unsigned int)
SbxArray::Remove(SbxVariable const*)
SbxArray::Remove(unsigned int)
SbxArray::StoreData(SvStream&) const
SbxArray::operator=(SbxArray const&)
SbxArray::~SbxArray()
SbxBase::AddFactory(SbxFactory*)
SbxBase::Create(unsigned short, unsigned int)
SbxBase::CreateObject(rtl::OUString const&)
SbxBase::GetErrorMsg()
SbxBase::IsError()
SbxBase::Load(SvStream&)
SbxBase::RemoveFactory(SbxFactory const*)
SbxBase::SbxBase()
SbxBase::SbxBase(SbxBase const&)
SbxBase::SetError(ErrCode, rtl::OUString const&)
SbxBase::Store(SvStream&)
SbxBase::operator=(SbxBase const&)
SbxDimArray::Clear()
SbxDimArray::Get(SbxArray*)
SbxDimArray::LoadData(SvStream&, unsigned short)
SbxDimArray::Offset(SbxArray*)
SbxDimArray::Offset(int const*)
SbxDimArray::Put(SbxVariable*, int const*)
SbxDimArray::StoreData(SvStream&) const
SbxDimArray::operator=(SbxDimArray const&)
SbxDimArray::unoAddDim(int, int)
SbxDimArray::~SbxDimArray()
SbxMethod::Clear()
SbxMethod::GetClass() const
SbxMethod::SbxMethod(rtl::OUString const&, SbxDataType, bool)
SbxMethod::~SbxMethod()
SbxObject::Call(rtl::OUString const&, SbxArray*)
SbxObject::Clear()
SbxObject::Dump(SvStream&, bool)
SbxObject::Execute(rtl::OUString const&)
SbxObject::Find(rtl::OUString const&, SbxClassType)
SbxObject::FindQualified(rtl::OUString const&, SbxClassType)
SbxObject::GetClass() const
SbxObject::GetDfltProperty()
SbxObject::GetType() const
SbxObject::Insert(SbxVariable*)
SbxObject::IsClass(rtl::OUString const&) const
SbxObject::IsOptionCompatible() const
SbxObject::LoadData(SvStream&, unsigned short)
SbxObject::Make(rtl::OUString const&, SbxClassType, SbxDataType, bool)
SbxObject::Notify(SfxBroadcaster&, SfxHint const&)
SbxObject::QuickInsert(SbxVariable*)
SbxObject::Remove(SbxVariable*)
SbxObject::Remove(rtl::OUString const&, SbxClassType)
SbxObject::SbxObject(SbxObject const&)
SbxObject::SbxObject(rtl::OUString const&)
SbxObject::SetDfltProperty(rtl::OUString const&)
SbxObject::StoreData(SvStream&) const
SbxObject::operator=(SbxObject const&)
SbxObject::~SbxObject()
SbxValue::Convert(SbxDataType)
SbxValue::Format(rtl::OUString&, rtl::OUString const*) const
SbxValue::Get(SbxValues&) const
SbxValue::GetCoreString() const
SbxValue::ImpIsNumeric(bool) const
SbxValue::IsNumericRTL() const
SbxValue::Put(SbxValues const&)
SbxValue::PutByte(unsigned char)
SbxValue::PutCurrency(long)
SbxValue::PutDate(double)
SbxValue::PutDecimal(SbxDecimal*)
SbxValue::PutDecimal(com::sun::star::bridge::oleautomation::Decimal const&)
SbxValue::PutErr(unsigned short)
SbxValue::PutInt64(long)
SbxValue::PutInteger(short)
SbxValue::PutNull()
SbxValue::PutSingle(float)
SbxValue::PutStringExt(rtl::OUString const&)
SbxValue::PutUInt64(unsigned long)
SbxValue::SbxValue(SbxDataType)
SbxValue::Scan(rtl::OUString const&, unsigned short*)
SbxValue::ScanNumIntnl(rtl::OUString const&, double&, bool)
SbxValue::SetType(SbxDataType)
SbxValue::fillAutomationDecimal(com::sun::star::bridge::oleautomation::Decimal&) const
SbxVariable::Broadcast(SfxHintId)
SbxVariable::ClearComListener()
SbxVariable::Dump(SvStream&, bool)
SbxVariable::GetBroadcaster()
SbxVariable::GetClass() const
SbxVariable::GetDeclareClassName() const
SbxVariable::GetInfo()
SbxVariable::GetParameters() const
SbxVariable::GetType() const
SbxVariable::LoadData(SvStream&, unsigned short)
SbxVariable::NameToCaseInsensitiveName(rtl::OUString const&)
SbxVariable::SbxVariable(SbxDataType)
SbxVariable::SbxVariable(SbxVariable const&)
SbxVariable::SetComListener(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, StarBASIC*)
SbxVariable::SetDeclareClassName(rtl::OUString const&)
SbxVariable::SetInfo(SbxInfo*)
SbxVariable::SetModified(bool)
SbxVariable::SetName(rtl::OUString const&)
SbxVariable::SetParent(SbxObject*)
SbxVariable::StoreData(SvStream&) const
SbxVariable::operator=(SbxVariable const&)
SbxVariable::~SbxVariable()
ScAppOptions::ScAppOptions()
ScAppOptions::SetDefaults()
ScAppOptions::SetLRUFuncList(unsigned short const*, unsigned short)
ScAppOptions::operator=(ScAppOptions const&)
ScAutoFmtPreview::Paint(OutputDevice&, tools::Rectangle const&)
ScAutoFmtPreview::Resize()
ScAutoFmtPreview::SetDrawingArea(weld::DrawingArea*)
ScAutoNameCache::GetNameOccurrences(rtl::OUString const&, short)
ScCalcConfig::MergeDocumentSpecific(ScCalcConfig const&)
ScCalcConfig::isThreadingEnabled()
ScCalcConfig::setOpenCLConfigToDefault()
ScCellFormat::GetInputString(ScRefCellValue const&, unsigned int, ScInterpreterContext*, ScDocument const&, svl::SharedString const**, bool, bool)
ScCellFormat::GetOutputString(ScDocument&, ScAddress const&, ScRefCellValue const&)
ScCellRangesBase::GetItemPropertyMap()
ScCellRangesBase::GetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
ScCellRangesBase::Notify(SfxBroadcaster&, SfxHint const&)
ScCellRangesBase::SetOnePropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
ScCellRangesObj::acquire()
ScChangeTrack::AppendDeleteRange(ScRange const&, ScDocument*, short, unsigned long)
ScChangeTrack::Undo(unsigned long, unsigned long, bool)
ScChangeViewSettings::AdjustDateMode(ScDocument const&)
ScChangeViewSettings::IsValidComment(rtl::OUString const*) const
ScChangeViewSettings::ScChangeViewSettings(ScChangeViewSettings const&)
ScChangeViewSettings::SetTheComment(rtl::OUString const&)
ScChangeViewSettings::operator=(ScChangeViewSettings const&)
ScClipParam::ScClipParam()
ScClipParam::getPasteColSize()
ScClipParam::getPasteRowSize(ScDocument const&, bool)
ScClipParam::getWholeRange() const
ScClipParam::isMultiRange() const
ScClipParam::transpose(ScDocument const&, bool, bool)
ScClipUtil::PasteFromClipboard(ScViewData&, ScTabViewShell*, bool)
ScComplexRefData::toAbs(ScSheetLimits const&, ScAddress const&) const
ScCondDateFormatEntry::Clone(ScDocument*) const
ScCondDateFormatEntry::IsValid(ScAddress const&) const
ScCondDateFormatEntry::ScCondDateFormatEntry(ScDocument*, ScCondDateFormatEntry const&)
ScCondDateFormatEntry::endRendering()
ScCondDateFormatEntry::startRendering()
ScCondFormatData::ScCondFormatData()
ScCondFormatData::ScCondFormatData(ScCondFormatData&&)
ScCondFormatHelper::GetExpression(ScCondFormatEntryType, int, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScDBCollection::NamedDBs::NamedDBs(ScDBCollection&, ScDocument&)
ScDBCollection::NamedDBs::NamedDBs(ScDBCollection::NamedDBs const&, ScDBCollection&)
ScDBCollection::NamedDBs::erase(std::_Rb_tree_const_iterator<std::unique_ptr<ScDBData, std::default_delete<ScDBData> > > const&)
ScDBCollection::NamedDBs::findByUpperName2(rtl::OUString const&)
ScDBCollection::NamedDBs::initInserted(ScDBData*)
ScDBCollection::NamedDBs::operator==(ScDBCollection::NamedDBs const&) const
ScDBCollection::NamedDBs::size() const
ScDBCollection::NamedDBs::~NamedDBs()
ScDBDocFunc::Query(short, ScQueryParam const&, ScRange const*, bool, bool)
ScDPCollection::GetDBCaches() const
ScDPCollection::GetNameCaches() const
ScDPCollection::HasTable(ScDPObject const*) const
ScDPCollection::operator[](unsigned long) const
ScDPName::ScDPName(rtl::OUString, rtl::OUString, unsigned char)
ScDPNumGroupDimension::DisposeData()
ScDPNumGroupDimension::ScDPNumGroupDimension()
ScDPNumGroupDimension::ScDPNumGroupDimension(ScDPNumGroupDimension const&)
ScDPNumGroupDimension::operator=(ScDPNumGroupDimension const&)
ScDPOutputGeometry::adjustFieldsForDataLayout(unsigned int&, unsigned int&) const
ScDPOutputGeometry::getFieldButtonType(ScAddress const&) const
ScDPOutputGeometry::setDataLayoutType(ScDPOutputGeometry::FieldType)
ScDPSaveNumGroupDimension::AddToCache(ScDPCache&) const
ScDPSaveNumGroupDimension::AddToData(ScDPGroupTableData&) const
ScDPSaveNumGroupDimension::ScDPSaveNumGroupDimension(rtl::OUString, ScDPNumGroupInfo const&, int)
ScDPSaveNumGroupDimension::SetGroupInfo(ScDPNumGroupInfo const&)
ScDPUtil::getDateGroupName(int, int, SvNumberFormatter*, double, double)
ScDefaultsOptions::SetDefaults()
ScDefaultsOptions::operator==(ScDefaultsOptions const&) const
ScDocFunc::InsertTable(short, rtl::OUString const&, bool, bool)
ScDocOptions::ResetDocOptions()
ScDocument::ApplyPatternArea(short, int, short, int, ScMarkData const&, ScPatternAttr const&, ScEditDataArray*, bool*)
ScDocument::ApplyPatternIfNumberformatIncompatible(ScRange const&, ScMarkData const&, ScPatternAttr const&, SvNumFormatType)
ScDocument::ApplySelectionPattern(ScPatternAttr const&, ScMarkData const&, ScEditDataArray*, bool*)
ScDocument::ApplySelectionStyle(ScStyleSheet const&, ScMarkData const&)
ScDocument::CalcFormulaTree(bool, bool, bool)
ScDocument::ClearPrintNamedRanges(short)
ScDocument::CompareDocument(ScDocument&)
ScDocument::CompileHybridFormula()
ScDocument::CopyDdeLinks(ScDocument&) const
ScDocument::CopyOneCellFromClip(sc::CopyFromClipContext&, short, int, short, int)
ScDocument::CopyStdStylesFrom(ScDocument const&)
ScDocument::CopyToDocument(ScRange const&, InsertDeleteFlags, bool, ScDocument&, ScMarkData const*, bool)
ScDocument::CopyUpdated(ScDocument*, ScDocument*)
ScDocument::CreateNote(ScAddress const&)
ScDocument::CreateValidTabNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, short) const
ScDocument::DeleteArea(short, int, short, int, ScMarkData const&, InsertDeleteFlags, bool, sc::ColumnSpanSet*)
ScDocument::DeleteAreaTab(short, int, short, int, short, InsertDeleteFlags)
ScDocument::DeleteSelection(InsertDeleteFlags, ScMarkData const&, bool)
ScDocument::DeleteTabs(short, short)
ScDocument::DoEmptyBlock(short, int, short, int, short)
ScDocument::DoMergeContents(short, int, short, int, short)
ScDocument::DrawGetPrintArea(ScRange&, bool, bool) const
ScDocument::EnableUserInteraction(bool)
ScDocument::EnsureFormulaCellResults(ScRange const&, bool)
ScDocument::ExtendOverlapped(short&, int&, short, int, short) const
ScDocument::Fill(short, int, short, int, ScProgress*, ScMarkData const&, unsigned long, FillDir, FillCmd, FillDateCmd, double, double)
ScDocument::GetAllNoteEntries(short, std::vector<sc::NoteEntry, std::allocator<sc::NoteEntry> >&) const
ScDocument::GetAllocatedColumnsRange(short, short, short) const
ScDocument::GetAnonymousDBData()
ScDocument::GetAttr(short, int, short, unsigned short, int&, int&) const
ScDocument::GetBackColorArea(short, short&, int&, short&, int&) const
ScDocument::GetCellArea(short, short&, int&) const
ScDocument::GetCellCount() const
ScDocument::GetCellScriptType(ScAddress const&, unsigned int, ScRefCellValue const*)
ScDocument::GetCellType(short, int, short) const
ScDocument::GetChartRanges(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<ScRangeList, std::allocator<ScRangeList> >&, ScDocument const&)
ScDocument::GetColFlags(short, short) const
ScDocument::GetColWidth(short, short, short) const
ScDocument::GetDBAtArea(short, short, int, short, int) const
ScDocument::GetEmptyLinesInBlock(short, int, short, short, int, short, ScDirection)
ScDocument::GetFirstEditTextRow(ScRange const&) const
ScDocument::GetFormulaCell(ScAddress const&) const
ScDocument::GetFormulaGroupCount() const
ScDocument::GetHashCode(short, long&) const
ScDocument::GetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, o3tl::strong_int<unsigned short, LanguageTypeTag>&) const
ScDocument::GetLastDataRow(short, short, short, int) const
ScDocument::GetLinkDoc(short) const
ScDocument::GetLinkManager() const
ScDocument::GetLinkTab(short) const
ScDocument::GetNote(short, int, short)
ScDocument::GetNoteEngine()
ScDocument::GetPrintAreaHor(short, int, int, short&) const
ScDocument::GetPrintAreaVer(short, short, short, int&, bool) const
ScDocument::GetSparklineGroupInRange(ScRange const&, std::shared_ptr<sc::SparklineGroup>&)
ScDocument::GetTiledRenderingArea(short, short&, int&) const
ScDocument::HasColNotes(short, short) const
ScDocument::HasOneSparklineGroup(ScRange const&)
ScDocument::HasTabNotes(short) const
ScDocument::InitClipPtrs(ScDocument*)
ScDocument::InitUndo(ScDocument const&, short, short, bool, bool)
ScDocument::InitUndoSelected(ScDocument const&, ScMarkData const&, bool, bool)
ScDocument::InsertMatrixFormula(short, int, short, int, ScMarkData const&, rtl::OUString const&, ScTokenArray const*, formula::FormulaGrammar::Grammar)
ScDocument::InsertTableOp(ScTabOpParam const&, short, int, short, int, ScMarkData const&)
ScDocument::InsertTabs(short, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, bool)
ScDocument::IsDocProtected() const
ScDocument::PreprocessAllRangeNamesUpdate(std::map<rtl::OUString, ScRangeName, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, ScRangeName> > > const&)
ScDocument::PreprocessDBDataUpdate()
ScDocument::PreprocessRangeNameUpdate()
ScDocument::ReleaseNote(ScAddress const&)
ScDocument::ResetClip(ScDocument*, ScMarkData const*)
ScDocument::ResetClip(ScDocument*, short)
ScDocument::SearchSparklineGroup(tools::Guid const&)
ScDocument::SetAllRangeNames(std::map<rtl::OUString, ScRangeName, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, ScRangeName> > > const&)
ScDocument::SetAnonymousDBData(std::unique_ptr<ScDBData, std::default_delete<ScDBData> >)
ScDocument::SetEditText(ScAddress const&, rtl::OUString const&)
ScDocument::SetFormula(ScAddress const&, ScTokenArray const&)
ScDocument::SetFormulaResults(ScAddress const&, double const*, unsigned long)
ScDocument::SetPattern(ScAddress const&, CellAttributeHolder const&)
ScDocument::SetPattern(ScAddress const&, ScPatternAttr const&)
ScDocument::SetRowHeightRange(int, int, short, unsigned short)
ScDocument::ShowRow(int, short, bool)
ScDocument::StartAllListeners(ScRange const&)
ScDocument::TransferDrawPage(ScDocument const&, short, short)
ScDocument::TransposeClip(ScDocument*, InsertDeleteFlags, bool, bool)
ScDocument::UpdateTranspose(ScAddress const&, ScDocument*, ScMarkData const&, ScDocument*)
ScDocumentImport::broadcastRecalcAfterImportColumn(ScColumn&)
ScDocumentImport::initColumn(ScColumn&)
ScDocumentImport::setDefaultNumericScript(SvtScriptType)
ScDocumentImport::setRowsVisible(short, int, int, bool)
ScDocumentLoader::CreateMedium(rtl::OUString const&, std::shared_ptr<SfxFilter const> const&, rtl::OUString const&, weld::Window*)
ScDocumentLoader::GetDocument()
ScDocumentLoader::IsError() const
ScDocumentLoader::RemoveAppPrefix(rtl::OUString&)
ScDocumentPool::Clone() const
ScDocumentPool::GetMetric(unsigned short) const
ScDocumentPool::GetPresentation(SfxPoolItem const&, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScDocumentPool::~ScDocumentPool()
ScDrawObjData::Clone(SdrObject*) const
ScEditEngineDefaulter::GetDefaults()
ScEditEngineDefaulter::RemoveParaAttribs()
ScEditEngineDefaulter::RepeatDefaults()
ScEditEngineDefaulter::ScEditEngineDefaulter(ScEditEngineDefaulter const&)
ScEditEngineDefaulter::SetDefaultItem(SfxPoolItem const&)
ScEditEngineDefaulter::SetDefaults(SfxItemSet const&, bool)
ScEditEngineDefaulter::SetTextNewDefaults(EditTextObject const&, SfxItemSet const&, bool)
ScEditEngineDefaulter::SetTextNewDefaults(rtl::OUString const&, SfxItemSet const&)
ScEditWindow::CreateAccessible()
ScEditWindow::GetEditEngine() const
ScEditWindow::GetFocus()
ScEditWindow::KeyInput(KeyEvent const&)
ScEditWindow::LoseFocus()
ScEditWindow::MouseButtonDown(MouseEvent const&)
ScEditWindow::SetDrawingArea(weld::DrawingArea*)
ScEditWindow::makeEditEngine()
ScEditWindow::~ScEditWindow()
ScExtDocOptions::GetDocSettings() const
ScExtDocOptions::GetLastTab() const
ScExtDocOptions::IsChanged() const
ScExtDocOptions::operator=(ScExtDocOptions const&)
ScExternalRefCache::getCacheTable(unsigned short, unsigned long) const
ScFieldEditEngine::CalcFieldValue(SvxFieldItem const&, int, int, std::optional<Color>&, std::optional<Color>&, std::optional<FontLineStyle>&)
ScFieldEditEngine::FieldClicked(SvxFieldItem const&)
ScFilterCreate
ScFilterOptions::ImplCommit()
ScFilterOptions::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScFormatEntry::IsEqual(ScFormatEntry const&, bool) const
ScFormatEntry::ScFormatEntry(ScDocument*)
ScFormatEntry::endRendering()
ScFormatEntry::operator==(ScFormatEntry const&) const
ScFormatEntry::startRendering()
ScFormatEntry::updateValues()
ScFormulaCellGroup::ScFormulaCellGroup()
ScFormulaCellGroup::compileCode(ScDocument&, ScAddress const&, formula::FormulaGrammar::Grammar)
ScFormulaCellGroup::endAllGroupListening(ScDocument&)
ScFormulaCellGroup::getAreaListener(ScFormulaCell**, ScRange const&, bool, bool)
ScFormulaCellGroup::setCode(ScTokenArray const&)
ScFormulaOptions::ResetFormulaSeparators()
ScFormulaOptions::SetDefaults()
ScFormulaOptions::operator!=(ScFormulaOptions const&) const
ScFormulaOptions::operator==(ScFormulaOptions const&) const
ScGlobal::FindUnquoted(char16_t const*, char16_t)
ScGlobal::FindUnquoted(rtl::OUString const&, char16_t, int)
ScGlobal::GetAutoFormat()
ScGlobal::GetStandardFormat(ScInterpreterContext&, unsigned int, SvNumFormatType)
ScGlobal::GetStandardRowHeight()
ScGlobal::IsQuoted(std::basic_string_view<char16_t, std::char_traits<char16_t> >, char16_t)
ScImportOptions::BuildString() const
ScImportOptions::ScImportOptions(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScIndentItem::Clone(SfxItemPool*) const
ScIndentItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScLineBreakCell::Clone(SfxItemPool*) const
ScLineBreakCell::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScLinkConfigItem::ImplCommit()
ScLinkConfigItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
ScLinkConfigItem::ScLinkConfigItem(rtl::OUString const&, ConfigItemMode)
ScLinkConfigItem::SetCommitLink(Link<ScLinkConfigItem&, void> const&)
ScLinkConfigItem::SetNotifyLink(Link<ScLinkConfigItem&, void> const&)
ScMacroManager::GetUserFuncVolatile(rtl::OUString const&)
ScMacroManager::InitUserFuncData()
ScMarkArrayIter::reset(ScMarkArray const*)
ScMarkData::MarkToSimple()
ScMergeAttr::Clone(SfxItemPool*) const
ScMergeAttr::ScMergeAttr()
ScMergeAttr::ScMergeAttr(ScMergeAttr const&)
ScMergeAttr::dumpAsXml(_xmlTextWriter*) const
ScMergeAttr::operator==(SfxPoolItem const&) const
ScMergeFlagAttr::Clone(SfxItemPool*) const
ScMergeFlagAttr::HasPivotButton() const
ScMergeFlagAttr::HasPivotMultiFieldPopupButton() const
ScMergeFlagAttr::HasPivotPopupButton() const
ScMergeFlagAttr::HasPivotToggle() const
ScMergeFlagAttr::ScMergeFlagAttr()
ScMergeFlagAttr::dumpAsXml(_xmlTextWriter*) const
ScModelTestBase::loadFile(rtl::OUString const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
ScModule::CallAutomationApplicationEventSinks(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
ScModule::Find1RefWindow(unsigned short, weld::Window const*)
ScModule::InputEnterHandler(ScEnterMode, bool)
ScModule::RegisterRefController(unsigned short, std::shared_ptr<SfxDialogController>&, weld::Window*)
ScModule::SetRefDialog(unsigned short, bool, SfxViewFrame*)
ScModule::UnregisterRefController(unsigned short, std::shared_ptr<SfxDialogController> const&)
ScMultiBlockUndo::BeginUndo()
ScMultiBlockUndo::EndRedo()
ScMultiBlockUndo::EndUndo()
ScMultiBlockUndo::ScMultiBlockUndo(ScDocShell*, ScRangeList)
ScMultiBlockUndo::ShowBlock()
ScMultiBlockUndo::~ScMultiBlockUndo()
ScMultiSel::GetMultiSelArray(short) const
ScMultiSel::GetStartOfEqualColumns(short, short) const
ScMultiSel::IsRowRangeMarked(int, int) const
ScMultiSel::MarkAllCols(int, int)
ScMultiSel::Set(ScRangeList const&)
ScMultiSel::ShiftCols(short, int)
ScMultiSel::ShiftRows(int, int)
ScMultiSel::operator=(ScMultiSel const&)
ScMultiSel::operator=(ScMultiSel&&)
ScNoteUtil::CreateNoteData(ScDocument&, ScAddress const&, tools::Rectangle const&, bool)
ScNoteUtil::CreateNoteFromCaption(ScDocument&, ScAddress const&, SdrCaptionObj*, bool)
ScNoteUtil::CreateNoteFromGenerator(ScDocument&, ScAddress const&, std::unique_ptr<GenerateNoteCaption, std::default_delete<GenerateNoteCaption> >, tools::Rectangle const&, bool)
ScNoteUtil::CreateTempCaption(ScDocument&, ScAddress const&, SdrPage&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, tools::Rectangle const&, bool)
ScNoteUtil::InsertNote(ScDocument&, ScAddress const&, ScNoteData&&, bool, unsigned int)
ScPageHFItem::Clone(SfxItemPool*) const
ScPageHFItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
ScPageHFItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScPageHFItem::ScPageHFItem(ScPageHFItem const&)
ScPageHFItem::dumpAsXml(_xmlTextWriter*) const
ScPageHFItem::operator==(SfxPoolItem const&) const
ScPageScaleToItem::Clone(SfxItemPool*) const
ScPageScaleToItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScPageScaleToItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
ScPageScaleToItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScPageScaleToItem::dumpAsXml(_xmlTextWriter*) const
ScPageScaleToItem::operator==(SfxPoolItem const&) const
ScPaintHint::ScPaintHint(ScRange const&, PaintPartFlags, long)
ScPaintHint::~ScPaintHint()
ScPatternAttr::GetNumberFormat(ScInterpreterContext const&, SfxItemSet const*) const
ScPrintOptions::SetDefaults()
ScPrintOptions::operator==(ScPrintOptions const&) const
ScProgress::CreateInterpretProgress(ScDocument*, bool)
ScProgress::DeleteInterpretProgress()
ScProgress::ScProgress()
ScProtectionAttr::Clone(SfxItemPool*) const
ScProtectionAttr::CreateDefault()
ScProtectionAttr::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScProtectionAttr::GetValueText() const
ScProtectionAttr::PutValue(com::sun::star::uno::Any const&, unsigned char)
ScProtectionAttr::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScProtectionAttr::ScProtectionAttr(ScProtectionAttr const&)
ScProtectionAttr::dumpAsXml(_xmlTextWriter*) const
ScQueryEntry::Clear()
ScQueryEntry::GetSearchTextPtr(utl::SearchParam::SearchType, bool, bool) const
ScQueryEntry::SetQueryByBackgroundColor(Color)
ScQueryEntry::SetQueryByTextColor(Color)
ScQueryEntry::operator==(ScQueryEntry const&) const
ScQueryItem::Clone(SfxItemPool*) const
ScQueryItem::GetAdvancedQuerySource(ScRange&) const
ScQueryItem::ScQueryItem(ScQueryItem const&)
ScQueryItem::ScQueryItem(unsigned short, ScViewData*, ScQueryParam const*)
ScQueryItem::SetAdvancedQuerySource(ScRange const*)
ScQueryItem::operator==(SfxPoolItem const&) const
ScQueryItem::~ScQueryItem()
ScQueryParam::Clear()
ScQueryParam::ClearDestParams()
ScQueryParam::MoveToDest()
ScQueryParam::ScQueryParam(ScDBQueryParamInternal const&)
ScQueryParam::operator=(ScQueryParam const&)
ScQueryParam::operator==(ScQueryParam const&) const
ScQueryParamBase::RemoveAllEntriesByField(int)
ScRange::IncColIfNotLessThan(ScDocument const&, short, short)
ScRange::IncEndColSticky(ScDocument const&, short)
ScRange::IncEndRowSticky(ScDocument const&, int)
ScRange::IncRowIfNotLessThan(ScDocument const&, int, int)
ScRange::Intersection(ScRange const&) const
ScRange::IsEndColSticky(ScDocument const&) const
ScRange::IsEndRowSticky(ScDocument const&) const
ScRange::MoveSticky(ScDocument const&, short, int, short, ScRange&)
ScRangeData::GetErrCode() const
ScRangeData::GetSymbol(ScAddress const&, formula::FormulaGrammar::Grammar) const
ScRangeList::AddAndPartialCombine(ScRange const&)
ScRangeList::DeleteArea(short, int, short, short, int, short)
ScRangeList::GetIntersectedRange(ScRange const&) const
ScRangeList::InsertCol(short, int, int, short, unsigned long)
ScRangeList::InsertCol(short, short)
ScRangeList::InsertRow(short, short, short, int, unsigned long)
ScRangeList::Intersects(ScRange const&) const
ScRangeList::UpdateReference(UpdateRefMode, ScDocument const*, ScRange const&, short, int, short)
ScRangeList::operator=(ScRangeList&&)
ScRangeList::swap(ScRangeList&)
ScRangeManagerTable::CheckForFormulaString()
ScRangeManagerTable::DeleteSelectedEntries()
ScRangeManagerTable::GetCurrentLine(ScRangeNameLine&)
ScRangeManagerTable::GetLine(ScRangeNameLine&, weld::TreeIter const&)
ScRangeManagerTable::Init()
ScRangeManagerTable::IsMultiSelection() const
ScRangeManagerTable::SetEntry(ScRangeNameLine const&)
ScRangeManagerTable::addEntry(ScRangeNameLine const&, bool)
ScRangeManagerTable::findRangeData(ScRangeNameLine const&)
ScRangePairList::Clone() const
ScRangePairList::CreateNameSortedArray(ScDocument&) const
ScRangePairList::DeleteOnTab(short)
ScRangePairList::Find(ScAddress const&)
ScRangePairList::Find(ScRange const&)
ScRangePairList::Join(ScRangePair const&, bool)
ScRangePairList::Remove(ScRangePair const&)
ScRangePairList::Remove(unsigned long)
ScRangePairList::UpdateReference(UpdateRefMode, ScDocument const*, ScRange const&, short, int, short)
ScRangePairList::operator[](unsigned long) const
ScRangePairList::~ScRangePairList()
ScRangeUpdater::UpdateDeleteTab(ScAddress&, sc::RefUpdateDeleteTabContext const&)
ScRangeUpdater::UpdateInsertTab(ScAddress&, sc::RefUpdateInsertTabContext const&)
ScRefTokenHelper::intersects(ScDocument const*, std::vector<boost::intrusive_ptr<formula::FormulaToken>, std::allocator<boost::intrusive_ptr<formula::FormulaToken> > > const&, boost::intrusive_ptr<formula::FormulaToken> const&, ScAddress const&)
ScRefTokenHelper::isExternalRef(boost::intrusive_ptr<formula::FormulaToken> const&)
ScRefUndoData::DeleteUnchanged(ScDocument const*)
ScRefUndoData::DoUndo(ScDocument*, bool)
ScRefUndoData::ScRefUndoData(ScDocument const*)
ScRefUndoData::~ScRefUndoData()
ScRefreshTimer::Invoke()
ScRotateValueItem::Clone(SfxItemPool*) const
ScRotateValueItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScSetStringParam::setNumericInput()
ScShrinkToFitCell::Clone(SfxItemPool*) const
ScShrinkToFitCell::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScSortItem::Clone(SfxItemPool*) const
ScSortItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScSortItem::operator==(SfxPoolItem const&) const
ScSortParam::Clear()
ScSortParam::MoveToDest()
ScSortParam::ScSortParam(ScQueryParam const&, short)
ScSortParam::ScSortParam(ScSubTotalParam const&, ScSortParam const&)
ScSortParam::operator==(ScSortParam const&) const
ScStringUtil::isMultiline(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScSubTotalItem::Clone(SfxItemPool*) const
ScSubTotalItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
ScSubTotalItem::operator==(SfxPoolItem const&) const
ScSubTotalParam::Clear()
ScSubTotalParam::ScSubTotalParam(ScSubTotalParam const&)
ScSubTotalParam::operator==(ScSubTotalParam const&) const
ScTabEditEngine::Init(ScPatternAttr const&)
ScTabEditEngine::ScTabEditEngine(ScDocument*)
ScTabOpParam::ScTabOpParam(ScRefAddress const&, ScRefAddress const&, ScRefAddress const&, ScRefAddress const&, ScTabOpParam::Mode)
ScTabOpParam::ScTabOpParam(ScTabOpParam const&)
ScTabOpParam::operator=(ScTabOpParam const&)
ScTabOpParam::operator==(ScTabOpParam const&) const
ScTabView::SetTabNo(short, bool, bool, bool)
ScTabViewShell::MakeNumberInfoItem(ScDocument&, ScViewData const&)
ScTableProtection::hasPasswordHash(ScPasswordHash, ScPasswordHash) const
ScTableProtection::isPasswordEmpty() const
ScTableProtection::isProtectedWithPass() const
ScTableProtection::isSelectionEditable(ScRangeList const&) const
ScTableProtection::setPassword(rtl::OUString const&)
ScTableProtection::updateReference(UpdateRefMode, ScDocument const&, ScRange const&, short, int, short)
ScTokenArray::AddFormulaToken(com::sun::star::sheet::FormulaToken const&, svl::SharedStringPool&, formula::ExternalReferenceHelper*)
ScTokenArray::CheckToken(formula::FormulaToken const&)
ScTokenArray::MergeArray()
ScTpCalcItem::Clone(SfxItemPool*) const
ScTpCalcItem::operator==(SfxPoolItem const&) const
ScTpDefaultsItem::Clone(SfxItemPool*) const
ScTpDefaultsItem::operator==(SfxPoolItem const&) const
ScTpFormulaItem::Clone(SfxItemPool*) const
ScTpFormulaItem::operator==(SfxPoolItem const&) const
ScTpPrintItem::Clone(SfxItemPool*) const
ScTpPrintItem::operator==(SfxPoolItem const&) const
ScTpViewItem::Clone(SfxItemPool*) const
ScTpViewItem::operator==(SfxPoolItem const&) const
ScUcalcTestBase::checkFormulaPosition(ScDocument&, ScAddress const&)
ScUcalcTestBase::checkFormulaPositions(ScDocument&, short, short, int const*, unsigned long)
ScUcalcTestBase::clearFormulaCellChangedFlag(ScDocument&, ScRange const&)
ScUcalcTestBase::clearSheet(ScDocument*, short)
ScUcalcTestBase::compileFormula(ScDocument*, rtl::OUString const&, formula::FormulaGrammar::Grammar)
ScUcalcTestBase::createUndoPaste(ScDocShell&, ScRange const&, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >)
ScUcalcTestBase::findLoadedDocShellByName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ScUcalcTestBase::getRangeByName(ScDocument*, rtl::OUString const&)
ScUcalcTestBase::insertRangeData(ScDocument*, ScAddress const&, std::vector<std::vector<char const*, std::allocator<char const*> >, std::allocator<std::vector<char const*, std::allocator<char const*> > > > const&)
ScUcalcTestBase::insertRangeNames(ScDocument*, ScRangeName*, RangeNameDef const*, RangeNameDef const*)
ScUcalcTestBase::pasteOneCellFromClip(ScDocument*, ScRange const&, ScDocument*, InsertDeleteFlags)
ScUcalcTestBase::printFormula(ScDocument*, short, int, short, char const*)
ScUcalcTestBase::printRange(ScDocument*, ScRange const&, char const*, bool)
ScUcalcTestBase::printRange(ScDocument*, ScRange const&, rtl::OString const&, bool)
ScUcalcTestBase::setCalcAsShown(ScDocument*, bool)
ScUndoCut::ScUndoCut(ScDocShell*, ScRange const&, ScAddress const&, ScMarkData const&, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >)
ScUndoManager::IsViewUndoActionIndependent(SfxViewShell const*, unsigned short&) const
ScUndoManager::getAffectedRangeFromUndo(SfxUndoAction const*)
ScUndoManager::getScSimpleUndo(SfxUndoAction const*)
ScUndoManager::~ScUndoManager()
ScUndoPaste::ScUndoPaste(ScDocShell*, ScRangeList const&, ScMarkData const&, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >, std::unique_ptr<ScDocument, o3tl::default_delete<ScDocument> >, InsertDeleteFlags, std::unique_ptr<ScRefUndoData, std::default_delete<ScRefUndoData> >, bool, ScUndoPasteOptions const*)
ScUserList::AddDefaults()
ScUserList::HasEntry(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
ScUserListData::Compare(rtl::OUString const&, rtl::OUString const&) const
ScUserListData::ICompare(rtl::OUString const&, rtl::OUString const&) const
ScUserListItem::Clone(SfxItemPool*) const
ScUserListItem::ScUserListItem(ScUserListItem const&)
ScUserListItem::operator==(SfxPoolItem const&) const
ScVbaPropValue::getValue()
ScVbaPropValue::setValue(com::sun::star::uno::Any const&)
ScVbaShape::addListeners()
ScVbaShape::removeShapeListener()
ScVbaShape::removeShapesListener()
ScVerticalStackCell::Clone(SfxItemPool*) const
ScVerticalStackCell::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScViewFunc::CopyToClip(ScDocument*, ScRangeList const&, bool, bool, bool, bool)
ScViewFunc::GetSelectionPattern()
ScViewFunc::PasteFromSystem(SotClipboardFormatId, bool)
ScViewObjectModeItem::Clone(SfxItemPool*) const
ScViewObjectModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
ScViewObjectModeItem::GetValueCount() const
ScViewObjectModeItem::ScViewObjectModeItem(unsigned short)
ScViewOptions::CreateGridItem() const
ScViewOptions::GetGridColor(rtl::OUString*) const
ScViewOptions::SetDefaults()
ScViewOptions::operator==(ScViewOptions const&) const
ScViewRenderingOptions::ScViewRenderingOptions()
ScViewRenderingOptions::operator==(ScViewRenderingOptions const&) const
ScViewUtil::ExecuteCharMap(SvxFontItem const&, ScTabViewShell const&)
ScViewUtil::FitToUnfilteredRows(ScRange&, ScDocument const&, unsigned long)
ScViewUtil::GetEffLanguage(ScDocument&, ScAddress const&)
ScViewUtil::GetTransliterationType(unsigned short)
ScViewUtil::HasFiltered(ScRange const&, ScDocument const&)
ScViewUtil::HideDisabledSlot(SfxItemSet&, SfxBindings&, unsigned short)
ScViewUtil::IsActionShown(ScChangeAction const&, ScChangeViewSettings const&, ScDocument&)
ScViewUtil::PutItemScript(SfxItemSet&, SfxItemSet const&, unsigned short, SvtScriptType)
ScViewUtil::SetFullScreen(SfxViewShell const&, bool)
ScViewUtil::UnmarkFiltered(ScMarkData&, ScDocument const&)
SchXMLExportHelper::SchXMLExportHelper(SvXMLExport&, SvXMLAutoStylePoolP&)
SchXMLExportHelper::SetDestinationShellID(rtl::OUString const&)
SchXMLExportHelper::SetSourceShellID(rtl::OUString const&)
SchXMLExportHelper::~SchXMLExportHelper()
SchXMLSeriesHelper::getDataSeriesFromDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
SchXMLSeriesHelper::getDataSeriesIndexMapFromDiagram(com::sun::star::uno::Reference<com::sun::star::chart2::XDiagram> const&)
SchXMLSeriesHelper::isCandleStickSeries(com::sun::star::uno::Reference<com::sun::star::chart2::XDataSeries> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
Scheduler::CallbackTaskScheduling()
Scheduler::GetDeterministicMode()
Scheduler::ImplDeInitScheduler()
Scheduler::ImplStartTimer(unsigned long, bool, unsigned long)
Scheduler::Lock()
Scheduler::SetDeterministicMode(bool)
Scheduler::Unlock()
ScriptTypeDetector::beginOfScriptDirection(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, short)
ScriptTypeDetector::endOfScriptDirection(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, short)
ScrollAdaptor::SetThickness(int)
SdAbstractDialogFactory::Create()
SdAnimationInfo::GetBookmark() const
SdAnimationInfo::SetBookmark(rtl::OUString const&)
SdCustomShow::ReplacePage(SdPage const*, SdPage const*)
SdCustomShow::SdCustomShow(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SdCustomShow::getUnoCustomShow()
SdDLL::Init()
SdDLL::RegisterControllers(SdModule*)
SdDLL::RegisterFactorys()
SdDLL::RegisterInterfaces(SdModule const*)
SdDLL::RegisterRemotes()
SdDrawDocument::AdaptPageSizeForAllPages(Size const&, PageKind, SdUndoGroup*, long, long, long, long, bool, Orientation, unsigned short, bool)
SdDrawDocument::CreateFirstPages(SdDrawDocument const*)
SdDrawDocument::CreateMissingNotesAndHandoutPages()
SdDrawDocument::CreatePageNumValue(unsigned short) const
SdDrawDocument::GetActiveSdPageCount() const
SdDrawDocument::GetDefaultWritingMode() const
SdDrawDocument::GetShapeUserData(SdrObject&, bool)
SdDrawDocument::IsPageNameUnique(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SdDrawDocument::SetMasterPage(unsigned short, std::basic_string_view<char16_t, std::char_traits<char16_t> >, SdDrawDocument*, bool, bool)
SdDrawDocument::adaptSizeAndBorderForAllPages(Size const&, long, long, long, long)
SdHeaderFooterUndoAction::Redo()
SdHeaderFooterUndoAction::Undo()
SdHeaderFooterUndoAction::~SdHeaderFooterUndoAction()
SdInsertLayerDlg::~SdInsertLayerDlg()
SdOpenSoundFileDialog::IsInsertAsLinkSelected() const
SdOptionsGeneric::SdOptionsGeneric(bool, rtl::OUString const&)
SdOptionsGeneric::Store()
SdOptionsGeneric::operator=(SdOptionsGeneric const&)
SdOptionsItem::GetProperties(com::sun::star::uno::Sequence<rtl::OUString> const&)
SdOptionsItem::ImplCommit()
SdOptionsItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SdOptionsItem::PutProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SdOptionsItem::SdOptionsItem(SdOptionsGeneric const&, rtl::OUString const&)
SdOptionsItem::~SdOptionsItem()
SdOptionsLayout::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsLayout::ReadData(com::sun::star::uno::Any const*)
SdOptionsLayout::SdOptionsLayout(bool, bool)
SdOptionsLayout::WriteData(com::sun::star::uno::Any*) const
SdOptionsLayout::operator==(SdOptionsLayout const&) const
SdOptionsLayoutItem::Clone(SfxItemPool*) const
SdOptionsLayoutItem::SdOptionsLayoutItem()
SdOptionsLayoutItem::SdOptionsLayoutItem(SdOptions const*, sd::FrameView const*)
SdOptionsLayoutItem::SetOptions(SdOptions*) const
SdOptionsLayoutItem::operator==(SfxPoolItem const&) const
SdOptionsMisc::GetDisplay() const
SdOptionsMisc::GetDragThresholdPixels() const
SdOptionsMisc::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsMisc::ReadData(com::sun::star::uno::Any const*)
SdOptionsMisc::SdOptionsMisc(bool, bool)
SdOptionsMisc::SetDisplay(int)
SdOptionsMisc::SetDragThreshold(int)
SdOptionsMisc::WriteData(com::sun::star::uno::Any*) const
SdOptionsMisc::operator==(SdOptionsMisc const&) const
SdOptionsMiscItem::Clone(SfxItemPool*) const
SdOptionsMiscItem::SdOptionsMiscItem(SdOptions const*, sd::FrameView const*)
SdOptionsMiscItem::SetOptions(SdOptions*) const
SdOptionsMiscItem::operator==(SfxPoolItem const&) const
SdOptionsPrint::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsPrint::ReadData(com::sun::star::uno::Any const*)
SdOptionsPrint::SdOptionsPrint(bool, bool)
SdOptionsPrint::WriteData(com::sun::star::uno::Any*) const
SdOptionsPrint::operator==(SdOptionsPrint const&) const
SdOptionsPrintItem::Clone(SfxItemPool*) const
SdOptionsPrintItem::SdOptionsPrintItem(SdOptions const*)
SdOptionsPrintItem::SetOptions(SdOptions*) const
SdOptionsPrintItem::operator==(SfxPoolItem const&) const
SdOptionsSnap::GetPropNameArray(char const**&, unsigned long&) const
SdOptionsSnap::ReadData(com::sun::star::uno::Any const*)
SdOptionsSnap::SdOptionsSnap(bool, bool)
SdOptionsSnap::WriteData(com::sun::star::uno::Any*) const
SdOptionsSnap::operator==(SdOptionsSnap const&) const
SdOptionsSnapItem::Clone(SfxItemPool*) const
SdOptionsSnapItem::SdOptionsSnapItem(SdOptions const*, sd::FrameView const*)
SdOptionsSnapItem::SetOptions(SdOptions*) const
SdOptionsSnapItem::operator==(SfxPoolItem const&) const
SdPageObjsTLV::LinkStubMousePressHdl(void*, MouseEvent const&)
SdPageObjsTLV::LinkStubMouseReleaseHdl(void*, MouseEvent const&)
SdResId(TranslateNId, int)
SdStyleSheetPool::CreateLayoutStyleSheets(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
SdUndoAction::GetViewShellId() const
SdUndoGroup::Merge(SfxUndoAction*)
SdUndoGroup::Redo()
SdUndoGroup::Undo()
SdrAngleItem::Clone(SfxItemPool*) const
SdrAttrObj::Notify(SfxBroadcaster&, SfxHint const&)
SdrCaptionEscIsRelItem::Clone(SfxItemPool*) const
SdrCaptionEscIsRelItem::~SdrCaptionEscIsRelItem()
SdrCaptionEscRelItem::Clone(SfxItemPool*) const
SdrCaptionEscRelItem::~SdrCaptionEscRelItem()
SdrCaptionFitLineLenItem::Clone(SfxItemPool*) const
SdrCaptionFitLineLenItem::~SdrCaptionFitLineLenItem()
SdrCaptionLineLenItem::Clone(SfxItemPool*) const
SdrCaptionLineLenItem::~SdrCaptionLineLenItem()
SdrCropHdl::CreateB2dIAObject()
SdrCropHdl::GetBitmapForHandle(BitmapEx const&, int)
SdrCustomShapeGeometryItem::ClearPropertyValue(rtl::OUString const&)
SdrCustomShapeGeometryItem::GetPropertyValueByName(rtl::OUString const&, rtl::OUString const&)
SdrCustomShapeGeometryItem::SdrCustomShapeGeometryItem(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SdrCustomShapeGeometryItem::SetPropertyValue(rtl::OUString const&, com::sun::star::beans::PropertyValue const&)
SdrDragEntryPolyPolygon::createPrimitive2DSequenceInCurrentState(SdrDragMethod&)
SdrDragEntryPolyPolygon::~SdrDragEntryPolyPolygon()
SdrDragMethod::SdrDragMethod(SdrDragView&)
SdrDragMethod::insertNewlyCreatedOverlayObjectForSdrDragMethod(std::unique_ptr<sdr::overlay::OverlayObject, std::default_delete<sdr::overlay::OverlayObject> >, sdr::contact::ObjectContact const&, sdr::overlay::OverlayManager&)
SdrDragMove::BeginSdrDrag()
SdrDragMove::EndSdrDrag(bool)
SdrDragMove::ImpCheckSnap(Point const&)
SdrDragObjOwn::EndSdrDrag(bool)
SdrDragResize::EndSdrDrag(bool)
SdrDragStat::GetXFact() const
SdrDragStat::GetYFact() const
SdrDragStat::Reset()
SdrDropMarkerOverlay::ImplCreateOverlays(SdrView const&, basegfx::B2DPolyPolygon const&)
SdrEdgeKindItem::GetValueCount() const
SdrEdgeKindItem::GetValueTextByPos(unsigned short)
SdrEdgeObj::CloneSdrObject(SdrModel&) const
SdrEdgeObj::SdrEdgeObj(SdrModel&)
SdrEdgeObj::SetEdgeTrackPath(basegfx::B2DPolyPolygon const&)
SdrEditView::IsEdgeRadiusAllowed() const
SdrEscherImport::GetColorFromPalette(unsigned short, Color&) const
SdrEscherImport::GetFontEnityAtom(unsigned int) const
SdrEscherImport::GetSlideLayoutAtom() const
SdrEscherImport::ImportHeaderFooterContainer(DffRecordHeader const&, HeaderFooterEntry&)
SdrEscherImport::ReadObjText(PPTTextObj*, SdrObject*, SdPageCapsule) const
SdrEscherImport::RecolorGraphic(SvStream&, unsigned int, Graphic&)
SdrEscherImport::SdrEscherImport(PowerPointImportParam&, rtl::OUString const&)
SdrEscherImport::SeekToShape(SvStream&, SvxMSDffClientData*, unsigned int) const
SdrEscherImport::~SdrEscherImport()
SdrFormatter::GetStr(long) const
SdrFormatter::GetUnitStr(MapUnit)
SdrGluePointList::Insert(SdrGluePoint const&)
SdrGluePointList::operator=(SdrGluePointList const&)
SdrGrafContrastItem::Clone(SfxItemPool*) const
SdrGrafLuminanceItem::Clone(SfxItemPool*) const
SdrHdlList::Clear()
SdrHelpLineList::HitTest(Point const&, unsigned short, OutputDevice const&) const
SdrHint::SdrHint(SdrHintKind, SdrObject const&, SdrPage const*)
SdrIFrameLink::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
SdrIFrameLink::SdrIFrameLink(SdrOle2Obj*)
SdrLayer::SdrLayer(o3tl::strong_int<short, SdrLayerIDTag>, rtl::OUString)
SdrLayer::operator==(SdrLayer const&) const
SdrLayerIDSet::IsEmpty() const
SdrLayerIDSet::operator&=(SdrLayerIDSet const&)
SdrMarkView::MarkObj(tools::Rectangle const&, bool)
SdrMeasureBelowRefEdgeItem::Clone(SfxItemPool*) const
SdrMeasureBelowRefEdgeItem::~SdrMeasureBelowRefEdgeItem()
SdrMeasureDecimalPlacesItem::Clone(SfxItemPool*) const
SdrMeasureDecimalPlacesItem::~SdrMeasureDecimalPlacesItem()
SdrMeasureField::Clone() const
SdrMeasureField::operator==(SvxFieldData const&) const
SdrMeasureTextRota90Item::Clone(SfxItemPool*) const
SdrMeasureTextRota90Item::~SdrMeasureTextRota90Item()
SdrMediaObj::getTempURL() const
SdrMetricItem::Clone(SfxItemPool*) const
SdrMetricItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrMetricItem::HasMetrics() const
SdrMetricItem::ScaleMetrics(long, long)
SdrMetricItem::dumpAsXml(_xmlTextWriter*) const
SdrModel::AllocPage(bool)
SdrModel::BegUndo(rtl::OUString const&, rtl::OUString const&, SdrRepeatFunc)
SdrModel::ClearUndoBuffer()
SdrModel::CopyPages(unsigned short, unsigned short, unsigned short, bool, bool)
SdrModel::GetActiveOutliners() const
SdrModel::GetAngleString(o3tl::strong_int<int, FractionTag<100> >)
SdrModel::GetChainingOutliner(SdrTextObj const*) const
SdrModel::GetCompatibilityFlag(SdrCompatibilityFlag) const
SdrModel::GetDocumentStream(rtl::OUString const&, comphelper::LifecycleProxy const&) const
SdrModel::GetMetricString(long, bool, int) const
SdrModel::GetPercentString(Fraction const&)
SdrModel::GetSdrUndoManager() const
SdrModel::GetTextChain() const
SdrModel::GetUnitString(FieldUnit)
SdrModel::HasRedoActions() const
SdrModel::HasUndoActions() const
SdrModel::InsertMasterPage(SdrPage*, unsigned short)
SdrModel::InsertPage(SdrPage*, unsigned short)
SdrModel::Redo()
SdrModel::RefDeviceChanged()
SdrModel::RemoveMasterPage(unsigned short)
SdrModel::RemovePage(unsigned short)
SdrModel::Repeat(SfxRepeatTarget&)
SdrModel::SetMaxUndoActionCount(unsigned int)
SdrModel::SetReadOnly(bool)
SdrModel::SetTextDefaults() const
SdrModel::SetTextDefaults(SfxItemPool*, int)
SdrModel::SetUndoComment(rtl::OUString const&)
SdrModel::SetUndoComment(rtl::OUString const&, rtl::OUString const&)
SdrModel::Undo()
SdrModel::createOutliner(OutlinerMode)
SdrModel::createUnoModel()
SdrModel::disposeOutliner(std::unique_ptr<SdrOutliner, std::default_delete<SdrOutliner> >)
SdrModel::implDtorClearModel()
SdrModel::~SdrModel()
SdrObjCustomShape::AdaptTextMinSize()
SdrObjCustomShape::AddToHdlList(SdrHdlList&) const
SdrObjCustomShape::AdjustTextFrameWidthAndHeight()
SdrObjCustomShape::AdjustTextFrameWidthAndHeight(tools::Rectangle&, bool, bool) const
SdrObjCustomShape::AdjustToMaxRect(tools::Rectangle const&, bool)
SdrObjCustomShape::CloneSdrObject(SdrModel&) const
SdrObjCustomShape::CreateObjectSpecificProperties()
SdrObjCustomShape::CreateObjectSpecificViewContact()
SdrObjCustomShape::DoConvertToPolyObj(bool, bool) const
SdrObjCustomShape::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrObjCustomShape::EndTextEdit(SdrOutliner&)
SdrObjCustomShape::ForceGluePointList()
SdrObjCustomShape::GetCustomShapeEngine() const
SdrObjCustomShape::GetCustomShapeName() const
SdrObjCustomShape::GetGluePointList() const
SdrObjCustomShape::GetHdlCount() const
SdrObjCustomShape::GetObjIdentifier() const
SdrObjCustomShape::GetSdrObjectFromCustomShape() const
SdrObjCustomShape::GetSdrObjectShadowFromCustomShape() const
SdrObjCustomShape::GetVertexGluePoint(unsigned short) const
SdrObjCustomShape::ImpCalculateTextFrame(bool, bool)
SdrObjCustomShape::ImpCheckCustomGluePointsAreAdded()
SdrObjCustomShape::InternalSetStyleSheet(SfxStyleSheet*, bool, bool)
SdrObjCustomShape::InvalidateRenderGeometry()
SdrObjCustomShape::IsAutoGrowHeight() const
SdrObjCustomShape::IsAutoGrowWidth() const
SdrObjCustomShape::IsDefaultGeometry(SdrObjCustomShape::DefaultType) const
SdrObjCustomShape::IsTextPath() const
SdrObjCustomShape::MovCreate(SdrDragStat&)
SdrObjCustomShape::Move(Size const&)
SdrObjCustomShape::NbcAdjustTextFrameWidthAndHeight(bool, bool)
SdrObjCustomShape::NbcMirror(Point const&, Point const&)
SdrObjCustomShape::NbcMove(Size const&)
SdrObjCustomShape::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrObjCustomShape::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObjCustomShape::NbcSetLogicRect(tools::Rectangle const&)
SdrObjCustomShape::NbcSetOutlinerParaObject(std::optional<OutlinerParaObject>)
SdrObjCustomShape::NbcSetSnapRect(tools::Rectangle const&)
SdrObjCustomShape::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrObjCustomShape::NewGeoData() const
SdrObjCustomShape::RestoreGeoData(SdrObjGeoData const&)
SdrObjCustomShape::SaveGeoData(SdrObjGeoData&) const
SdrObjCustomShape::SdrObjCustomShape(SdrModel&, SdrObjCustomShape const&)
SdrObjCustomShape::SetLogicRect(tools::Rectangle const&)
SdrObjCustomShape::SetMirroredX(bool)
SdrObjCustomShape::SetMirroredY(bool)
SdrObjCustomShape::SetSnapRect(tools::Rectangle const&)
SdrObjCustomShape::SetVerticalWriting(bool)
SdrObjCustomShape::Shear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrObjCustomShape::TRGetBaseGeometry(basegfx::B2DHomMatrix&, basegfx::B2DPolyPolygon&) const
SdrObjCustomShape::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrObjCustomShape::TakeContour() const
SdrObjCustomShape::TakeCreatePoly(SdrDragStat const&) const
SdrObjCustomShape::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrObjCustomShape::TakeObjNamePlural() const
SdrObjCustomShape::TakeObjNameSingul() const
SdrObjCustomShape::TakeTextAnchorRect(tools::Rectangle&) const
SdrObjCustomShape::TakeTextEditArea(Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
SdrObjCustomShape::TakeTextRect(SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*, bool) const
SdrObjCustomShape::TakeXorPoly() const
SdrObjCustomShape::applySpecialDrag(SdrDragStat&)
SdrObjCustomShape::beginSpecialDrag(SdrDragStat&) const
SdrObjCustomShape::handlePageChange(SdrPage*, SdrPage*)
SdrObjCustomShape::hasSpecialDrag() const
SdrObjCustomShape::setUnoShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
SdrObjCustomShape::~SdrObjCustomShape()
SdrObjEditView::ApplyFormatPaintBrushToText(SfxItemSet const&, SdrTextObj&, SdrText*, short, bool, bool)
SdrObjEditView::BckAction()
SdrObjEditView::BeginPasteOrDropHdl(PasteOrDropInfos*)
SdrObjEditView::BrkAction()
SdrObjEditView::BrkMacroObj()
SdrObjEditView::Command(CommandEvent const&, vcl::Window*)
SdrObjEditView::EndAction()
SdrObjEditView::EndMacroObj()
SdrObjEditView::EndPasteOrDropHdl(PasteOrDropInfos*)
SdrObjEditView::GetAttributes(SfxItemSet&, bool) const
SdrObjEditView::GetStyleSheet() const
SdrObjEditView::ImpChainingEventHdl()
SdrObjEditView::ImpFindOutlinerView(vcl::Window const*) const
SdrObjEditView::ImpHandleMotionThroughBoxesKeyInput(KeyEvent const&, bool*)
SdrObjEditView::ImpInvalidateOutlinerView(OutlinerView const&) const
SdrObjEditView::ImpIsTextEditAllSelected() const
SdrObjEditView::ImpMacroDown(Point const&)
SdrObjEditView::ImpMacroUp(Point const&)
SdrObjEditView::ImpMakeOutlinerView(vcl::Window*, OutlinerView*, SfxViewShell*) const
SdrObjEditView::ImpMakeTextCursorAreaVisible()
SdrObjEditView::ImpMoveCursorAfterChainingEvent(TextChainCursorManager*)
SdrObjEditView::ImpPaintOutlinerView(OutlinerView&, tools::Rectangle const&, OutputDevice&) const
SdrObjEditView::IsAction() const
SdrObjEditView::IsTextEditHit(Point const&) const
SdrObjEditView::IsTextEditInSelectionMode() const
SdrObjEditView::KeyInput(KeyEvent const&, vcl::Window*)
SdrObjEditView::MouseButtonDown(MouseEvent const&, OutputDevice*)
SdrObjEditView::MouseButtonUp(MouseEvent const&, OutputDevice*)
SdrObjEditView::MouseMove(MouseEvent const&, OutputDevice*)
SdrObjEditView::MovAction(Point const&)
SdrObjEditView::MovMacroObj(Point const&)
SdrObjEditView::SdrObjEditView(SdrModel&, OutputDevice*)
SdrObjEditView::SetAttributes(SfxItemSet const&, bool)
SdrObjEditView::SetStyleSheet(SfxStyleSheet*, bool)
SdrObjEditView::SetTextEditWin(vcl::Window*)
SdrObjEditView::TakeActionRect(tools::Rectangle&) const
SdrObjEditView::TextEditDrawing(SdrPaintWindow&)
SdrObjEditView::~SdrObjEditView()
SdrObjGeoData::SdrObjGeoData()
SdrObjGroup::AddToHdlList(SdrHdlList&) const
SdrObjGroup::BegCreate(SdrDragStat&)
SdrObjGroup::CloneSdrObject(SdrModel&) const
SdrObjGroup::CreateObjectSpecificProperties()
SdrObjGroup::CreateObjectSpecificViewContact()
SdrObjGroup::DoConvertToPolyObj(bool, bool) const
SdrObjGroup::GetObjIdentifier() const
SdrObjGroup::GetRotateAngle() const
SdrObjGroup::GetShearAngle(bool) const
SdrObjGroup::GetSnapRect() const
SdrObjGroup::Mirror(Point const&, Point const&)
SdrObjGroup::Move(Size const&)
SdrObjGroup::NbcMirror(Point const&, Point const&)
SdrObjGroup::NbcReformatText()
SdrObjGroup::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrObjGroup::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObjGroup::NbcSetAnchorPos(Point const&)
SdrObjGroup::NbcSetLayer(o3tl::strong_int<short, SdrLayerIDTag>)
SdrObjGroup::NbcSetLogicRect(tools::Rectangle const&)
SdrObjGroup::NbcSetRelativePos(Point const&)
SdrObjGroup::NbcSetSnapRect(tools::Rectangle const&)
SdrObjGroup::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrObjGroup::RecalcSnapRect()
SdrObjGroup::Resize(Point const&, Fraction const&, Fraction const&, bool)
SdrObjGroup::Rotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObjGroup::SdrObjGroup(SdrModel&, SdrObjGroup const&)
SdrObjGroup::SetAnchorPos(Point const&)
SdrObjGroup::SetBoundRectDirty()
SdrObjGroup::SetGrabBagItem(com::sun::star::uno::Any const&)
SdrObjGroup::SetLogicRect(tools::Rectangle const&)
SdrObjGroup::SetRelativePos(Point const&)
SdrObjGroup::SetSnapRect(tools::Rectangle const&)
SdrObjGroup::Shear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrObjGroup::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrObjGroup::TakeObjNamePlural() const
SdrObjGroup::TakeObjNameSingul() const
SdrObjGroup::TakeXorPoly() const
SdrObjGroup::beginSpecialDrag(SdrDragStat&) const
SdrObjGroup::dumpAsXml(_xmlTextWriter*) const
SdrObjGroup::getDiagramHelper() const
SdrObjGroup::getSdrObjectFromSdrObjList() const
SdrObjGroup::getSdrPageFromSdrObjList() const
SdrObjGroup::handlePageChange(SdrPage*, SdrPage*)
SdrObjGroup::~SdrObjGroup()
SdrObjList::InsertObject(SdrObject*, unsigned long)
SdrObjList::RemoveObject(unsigned long)
SdrObjList::getSdrPageFromSdrObjList() const
SdrObjListPrimitiveHit(SdrObjList const&, Point const&, basegfx::B2DVector const&, SdrPageView const&, SdrLayerIDSet const*, bool)
SdrObject::AddReference(SdrVirtObj&)
SdrObject::ApplyNotPersistAttr(SfxItemSet const&)
SdrObject::BurnInStyleSheetAttributes()
SdrObject::ConvertToContourObj(SdrObject*, bool) const
SdrObject::CreateObjectSpecificViewContact()
SdrObject::DelReference(SdrVirtObj&)
SdrObject::ForceMetricToItemPoolMetric(basegfx::B2DPolyPolygon&) const
SdrObject::GetBroadcaster() const
SdrObject::GetMetrStr(long) const
SdrObject::GetObjIdentifier() const
SdrObject::GetObjInventor() const
SdrObject::GetObjectItem(unsigned short) const
SdrObject::ImpConvertToContourObj(bool)
SdrObject::ImpDragCalcRect(SdrDragStat const&) const
SdrObject::ImpForcePlusData()
SdrObject::ImpGetDescriptionStr(TranslateId) const
SdrObject::InsertedStateChange()
SdrObject::IsInDestruction() const
SdrObject::IsMacroHit(SdrObjMacroHitRec const&) const
SdrObject::LineGeometryUsageIsNecessary() const
SdrObject::MakeNameUnique(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> >&)
SdrObject::NbcApplyNotPersistAttr(SfxItemSet const&)
SdrObject::NbcMirrorGluePoints(Point const&, Point const&)
SdrObject::NbcRotateGluePoints(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrObject::NbcShearGluePoints(Point const&, double, bool)
SdrObject::SdrObject(SdrModel&, SdrObject const&)
SdrObject::SetBLIPSizeRectangle(tools::Rectangle const&)
SdrObject::SetDoNotInsertIntoPageAutomatically(bool)
SdrObject::SetGlueReallyAbsolute(bool)
SdrObject::SetMarkProtect(bool)
SdrObject::SetNavigationPosition(unsigned int)
SdrObject::SetObjectItem(SfxPoolItem const&)
SdrObject::SetObjectItemSet(SfxItemSet const&)
SdrObject::SetPrintable(bool)
SdrObject::TakeNotPersistAttr(SfxItemSet&) const
SdrObject::getBackgroundFillSet() const
SdrObject::getSvxShape()
SdrObject::isVisibleOnAnyOfTheseLayers(SdrLayerIDSet const&) const
SdrObject::setOutRectangleConst(tools::Rectangle const&) const
SdrOle2Obj::AddOwnLightClient()
SdrOle2Obj::BreakFileLink_Impl()
SdrOle2Obj::CalculateNewScaling(Fraction&, Fraction&, Size&)
SdrOle2Obj::CanUnloadRunningObj(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, long)
SdrOle2Obj::CheckFileLink_Impl()
SdrOle2Obj::CloneSdrObject(SdrModel&) const
SdrOle2Obj::CreateObjectSpecificProperties()
SdrOle2Obj::CreateObjectSpecificViewContact()
SdrOle2Obj::DisconnectFileLink_Impl()
SdrOle2Obj::DoConvertToPolyObj(bool, bool) const
SdrOle2Obj::GetNewReplacement()
SdrOle2Obj::GetObjIdentifier() const
SdrOle2Obj::GetParentXModel() const
SdrOle2Obj::GetStyleString()
SdrOle2Obj::NbcMove(Size const&)
SdrOle2Obj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrOle2Obj::NbcSetLogicRect(tools::Rectangle const&)
SdrOle2Obj::NbcSetSnapRect(tools::Rectangle const&)
SdrOle2Obj::ObjectLoaded()
SdrOle2Obj::SdrOle2Obj(SdrModel&, SdrOle2Obj const&)
SdrOle2Obj::SetClosedObj(bool)
SdrOle2Obj::SetGeoData(SdrObjGeoData const&)
SdrOle2Obj::SetGraphicToObj(Graphic const&)
SdrOle2Obj::SetWindow(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&)
SdrOle2Obj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrOle2Obj::TakeObjNamePlural() const
SdrOle2Obj::TakeObjNameSingul() const
SdrOle2Obj::UpdateLinkURL_Impl()
SdrOle2Obj::getEmbeddedObjectRef() const
SdrOle2Obj::getFullDragClone() const
SdrOle2Obj::handlePageChange(SdrPage*, SdrPage*)
SdrOle2Obj::isInplaceActive() const
SdrOle2Obj::isUiActive() const
SdrOle2Obj::~SdrOle2Obj()
SdrOnOffItem::Clone(SfxItemPool*) const
SdrOnOffItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrOnOffItem::GetValueTextByVal(bool) const
SdrOnOffItem::dumpAsXml(_xmlTextWriter*) const
SdrOutliner::SetTextObj(SdrTextObj const*)
SdrOutliner::SetTextObjNoInit(SdrTextObj const*)
SdrOutliner::hasEditViewCallbacks() const
SdrPage::CloneSdrPage(SdrModel&) const
SdrPage::CreateObjectSpecificViewContact()
SdrPage::GetLayerAdmin()
SdrPage::GetLayerAdmin() const
SdrPage::GetViewContact() const
SdrPage::MakePageObjectsNamesUnique()
SdrPage::SetPageNum(unsigned short)
SdrPage::SetUnoPage(com::sun::star::uno::Reference<com::sun::star::drawing::XDrawPage> const&)
SdrPage::TRG_ImpMasterPageRemoved(SdrPage const&)
SdrPage::createUnoPage()
SdrPage::getCorrectSdrPageProperties() const
SdrPage::getSdrPageProperties() const
SdrPage::lateInit(SdrPage const&)
SdrPage::~SdrPage()
SdrPageObj::CloneSdrObject(SdrModel&) const
SdrPageObj::CreateObjectSpecificProperties()
SdrPageObj::CreateObjectSpecificViewContact()
SdrPageObj::GetObjIdentifier() const
SdrPageObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrPageObj::PageInDestruction(SdrPage const&)
SdrPageObj::SdrPageObj(SdrModel&, SdrPageObj const&)
SdrPageObj::SetBoundRectDirty()
SdrPageObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrPageObj::TakeObjNamePlural() const
SdrPageObj::TakeObjNameSingul() const
SdrPageObj::~SdrPageObj()
SdrPageProperties::ImpAddStyleSheet(SfxStyleSheet&)
SdrPageProperties::ImpRemoveStyleSheet()
SdrPageProperties::Notify(SfxBroadcaster&, SfxHint const&)
SdrPageProperties::SdrPageProperties(SdrPage&)
SdrPageProperties::dumpAsXml(_xmlTextWriter*) const
SdrPageProperties::isUsedByModel() const
SdrPageProperties::~SdrPageProperties()
SdrPageView::AddPaintWindowToPageView(SdrPaintWindow&)
SdrPageView::CheckCurrentGroup()
SdrPageView::CompleteRedraw(SdrPaintWindow&, vcl::Region const&, sdr::contact::ViewObjectContactRedirector*)
SdrPageView::FindPageWindow(SdrPaintWindow const&) const
SdrPageView::FindPatchedPageWindow(OutputDevice const&) const
SdrPageView::GetControlContainer(OutputDevice const&) const
SdrPageView::GetEnteredLevel() const
SdrPageView::Hide()
SdrPageView::ImpInvalidateHelpLineArea(unsigned short) const
SdrPageView::IsReadOnly() const
SdrPageView::LeaveAllGroup()
SdrPageView::LeaveOneGroup()
SdrPageView::ModelHasChanged()
SdrPageView::PrePaint()
SdrPageView::RemovePaintWindowFromPageView(SdrPaintWindow&)
SdrPageView::SdrPageView(SdrPage*, SdrView&)
SdrPageView::SetApplicationBackgroundColor(Color)
SdrPageView::SetCurrentGroupAndList(SdrObject*, SdrObjList*)
SdrPageView::SetDesignMode(bool) const
SdrPageView::Show()
SdrPageView::setPreparedPageWindow(SdrPageWindow*)
SdrPageView::~SdrPageView()
SdrPageWindow::GetControlContainer(bool) const
SdrPageWindow::GetOriginalPaintWindow() const
SdrPageWindow::GetPageView() const
SdrPageWindow::HasObjectContact() const
SdrPageWindow::InvalidatePageWindow(basegfx::B2DRange const&)
SdrPageWindow::PrePaint()
SdrPageWindow::PrepareRedraw(vcl::Region const&)
SdrPageWindow::RedrawAll(sdr::contact::ViewObjectContactRedirector*)
SdrPageWindow::RedrawLayer(o3tl::strong_int<short, SdrLayerIDTag> const*, sdr::contact::ViewObjectContactRedirector*, basegfx::B2IRange const*)
SdrPageWindow::ResetObjectContact()
SdrPageWindow::SdrPageWindow(SdrPageView&, SdrPaintWindow&)
SdrPageWindow::SetDesignMode(bool) const
SdrPageWindow::~SdrPageWindow()
SdrPaintView::AddDeviceToPaintView(OutputDevice&, vcl::Window*)
SdrPaintView::BckAction()
SdrPaintView::BrkAction()
SdrPaintView::ClearPageView()
SdrPaintView::DeleteDeviceFromPaintView(OutputDevice&)
SdrPaintView::DeletePaintWindow(SdrPaintWindow const&)
SdrPaintView::DoCompleteRedraw(SdrPaintWindow&, vcl::Region const&, sdr::contact::ViewObjectContactRedirector*)
SdrPaintView::EndAction()
SdrPaintView::FindPaintWindow(OutputDevice const&) const
SdrPaintView::GetAttributes(SfxItemSet&, bool) const
SdrPaintView::GetStyleSheet() const
SdrPaintView::HideSdrPage()
SdrPaintView::ImpFormLayerDrawing(SdrPaintWindow&)
SdrPaintView::ImpGetHitTolLogic(short, OutputDevice const*) const
SdrPaintView::ImpGetMinMovLogic(short, OutputDevice const*) const
SdrPaintView::InitOverlayManager(rtl::Reference<sdr::overlay::OverlayManager>)
SdrPaintView::InvalidateAllWin(tools::Rectangle const&)
SdrPaintView::IsAction() const
SdrPaintView::IsBufferedOutputAllowed() const
SdrPaintView::IsTextEdit() const
SdrPaintView::KeyInput(KeyEvent const&, vcl::Window*)
SdrPaintView::MergeNotPersistDefaultAttr(SfxItemSet&) const
SdrPaintView::ModelHasChanged()
SdrPaintView::MovAction(Point const&)
SdrPaintView::Notify(SfxBroadcaster&, SfxHint const&)
SdrPaintView::OptimizeDrawLayersRegion(OutputDevice const*, vcl::Region const&, bool)
SdrPaintView::SdrPaintView(SdrModel&, OutputDevice*)
SdrPaintView::SetAnimationTimer(unsigned int)
SdrPaintView::SetApplicationDocumentColor(Color)
SdrPaintView::SetAttributes(SfxItemSet const&, bool)
SdrPaintView::SetDefaultStyleSheet(SfxStyleSheet*, bool)
SdrPaintView::SetMasterPageVisualizationAllowed(bool)
SdrPaintView::SetNotPersistDefaultAttr(SfxItemSet const&)
SdrPaintView::SetPageDecorationAllowed(bool)
SdrPaintView::SetStyleSheet(SfxStyleSheet*, bool)
SdrPaintView::ShowSdrPage(SdrPage*)
SdrPaintView::TakeActionRect(tools::Rectangle&) const
SdrPaintView::VisAreaChanged()
SdrPaintView::onChangeColorConfig()
SdrPaintView::~SdrPaintView()
SdrPaintWindow::DrawOverlay(vcl::Region const&)
SdrPaintWindow::OutputPreRenderDevice(vcl::Region const&)
SdrPaintWindow::OutputToRecordingMetaFile() const
SdrPaintWindow::PreparePreRenderDevice()
SdrPaintWindow::SetRedrawRegion(vcl::Region const&)
SdrPaintWindow::impCreateOverlayManager()
SdrPathObj::BckCreate(SdrDragStat&)
SdrPathObj::BegCreate(SdrDragStat&)
SdrPathObj::BrkCreate(SdrDragStat&)
SdrPathObj::CloneSdrObject(SdrModel&) const
SdrPathObj::CreateObjectSpecificViewContact()
SdrPathObj::DoConvertToPolyObj(bool, bool) const
SdrPathObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrPathObj::GetCreatePointer() const
SdrPathObj::GetHdlCount() const
SdrPathObj::GetObjIdentifier() const
SdrPathObj::GetSnapPoint(unsigned int) const
SdrPathObj::GetSnapPointCount() const
SdrPathObj::ImpForceKind()
SdrPathObj::ImpForceLineAngle()
SdrPathObj::ImpSetClosed(bool)
SdrPathObj::IsPolyObj() const
SdrPathObj::MovCreate(SdrDragStat&)
SdrPathObj::NbcInsPoint(Point const&, bool)
SdrPathObj::NbcMirror(Point const&, Point const&)
SdrPathObj::NbcMove(Size const&)
SdrPathObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrPathObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrPathObj::NbcSetPathPoly(basegfx::B2DPolyPolygon const&)
SdrPathObj::NbcSetPoint(Point const&, unsigned int)
SdrPathObj::NbcSetSnapRect(tools::Rectangle const&)
SdrPathObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrPathObj::NewGeoData() const
SdrPathObj::RecalcSnapRect()
SdrPathObj::RestoreGeoData(SdrObjGeoData const&)
SdrPathObj::RipPoint(unsigned int, unsigned int&)
SdrPathObj::SaveGeoData(SdrObjGeoData&) const
SdrPathObj::SdrPathObj(SdrModel&, SdrPathObj const&)
SdrPathObj::SetHandleScale(bool)
SdrPathObj::TRGetBaseGeometry(basegfx::B2DHomMatrix&, basegfx::B2DPolyPolygon&) const
SdrPathObj::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrPathObj::TakeCreatePoly(SdrDragStat const&) const
SdrPathObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrPathObj::TakeObjNamePlural() const
SdrPathObj::TakeObjNameSingul() const
SdrPathObj::TakeUnrotatedSnapRect(tools::Rectangle&) const
SdrPathObj::TakeXorPoly() const
SdrPathObj::applySpecialDrag(SdrDragStat&)
SdrPathObj::beginSpecialDrag(SdrDragStat&) const
SdrPathObj::getDragPolyPolygon(SdrDragStat const&) const
SdrPathObj::getObjectPolyPolygon(SdrDragStat const&) const
SdrPathObj::getSpecialDragComment(SdrDragStat const&) const
SdrPathObj::getSpecialDragPoly(SdrDragStat const&) const
SdrPathObj::hasSpecialDrag() const
SdrPathObj::impGetDAC() const
SdrPathObj::~SdrPathObj()
SdrPercentItem::Clone(SfxItemPool*) const
SdrPercentItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrPercentItem::dumpAsXml(_xmlTextWriter*) const
SdrPolyEditView::MoveMarkedPoints(Size const&)
SdrPolyEditView::ResizeMarkedPoints(Point const&, Fraction const&, Fraction const&)
SdrPolyEditView::RotateMarkedPoints(Point const&, o3tl::strong_int<int, FractionTag<100> >)
SdrPolyEditView::SdrPolyEditView(SdrModel&, OutputDevice*)
SdrPolyEditView::~SdrPolyEditView()
SdrPowerPointImport::CreateTable(SdrObject*, unsigned int const*, SvxMSDffSolverContainer*)
SdrPowerPointImport::GetCurrentPageId()
SdrPowerPointImport::GetMasterPageId(unsigned short, PptPageKind) const
SdrPowerPointImport::GetPageSize() const
SdrPowerPointImport::ImportExOleObjStg(unsigned int, unsigned int&) const
SdrPowerPointImport::IsNoteOrHandout(unsigned short) const
SdrPowerPointImport::IsVerticalText() const
SdrPowerPointImport::ReadFontCollection()
SdrRectObj::AddToHdlList(SdrHdlList&) const
SdrRectObj::CloneSdrObject(SdrModel&) const
SdrRectObj::CreateObjectSpecificProperties()
SdrRectObj::CreateObjectSpecificViewContact()
SdrRectObj::DoConvertToPolyObj(bool, bool) const
SdrRectObj::GetCornerGluePoint(unsigned short) const
SdrRectObj::GetCreatePointer() const
SdrRectObj::GetHdlCount() const
SdrRectObj::GetObjIdentifier() const
SdrRectObj::GetVertexGluePoint(unsigned short) const
SdrRectObj::GetXPoly() const
SdrRectObj::ImpCalcXPoly(tools::Rectangle const&, long) const
SdrRectObj::NbcMirror(Point const&, Point const&)
SdrRectObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrRectObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrRectObj::NbcSetLogicRect(tools::Rectangle const&)
SdrRectObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrRectObj::Notify(SfxBroadcaster&, SfxHint const&)
SdrRectObj::RecalcSnapRect()
SdrRectObj::RecalcXPoly()
SdrRectObj::RestoreGeoData(SdrObjGeoData const&)
SdrRectObj::SdrRectObj(SdrModel&)
SdrRectObj::SdrRectObj(SdrModel&, SdrRectObj const&)
SdrRectObj::SetXPolyDirty()
SdrRectObj::TakeCreatePoly(SdrDragStat const&) const
SdrRectObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrRectObj::TakeObjNamePlural() const
SdrRectObj::TakeObjNameSingul() const
SdrRectObj::TakeUnrotatedSnapRect(tools::Rectangle&) const
SdrRectObj::TakeXorPoly() const
SdrRectObj::applySpecialDrag(SdrDragStat&)
SdrRectObj::beginSpecialDrag(SdrDragStat&) const
SdrRectObj::getSpecialDragComment(SdrDragStat const&) const
SdrRectObj::hasSpecialDrag() const
SdrRectObj::~SdrRectObj()
SdrSnapView::BckAction()
SdrSnapView::BrkAction()
SdrSnapView::BrkDragHelpLine()
SdrSnapView::BrkSetPageOrg()
SdrSnapView::CheckSnap(Point const&, long&, long&, bool&, bool&) const
SdrSnapView::EndAction()
SdrSnapView::EndSetPageOrg()
SdrSnapView::GetDraggedHelpLinePointer() const
SdrSnapView::IsAction() const
SdrSnapView::MovAction(Point const&)
SdrSnapView::MovSetPageOrg(Point const&)
SdrSnapView::SdrSnapView(SdrModel&, OutputDevice*)
SdrSnapView::SnapPos(Point&, SdrPageView const*) const
SdrSnapView::TakeActionRect(tools::Rectangle&) const
SdrSnapView::~SdrSnapView()
SdrText::CheckPortionInfo(SdrOutliner const&)
SdrText::ForceOutlinerParaObject(OutlinerMode)
SdrText::GetItemSet() const
SdrText::GetObjectItemSet()
SdrText::GetOutlinerParaObject() const
SdrText::GetStyleSheet() const
SdrText::ReformatText()
SdrText::RemoveOutlinerParaObject()
SdrText::SdrText(SdrTextObj&)
SdrText::SetOutlinerParaObject(std::optional<OutlinerParaObject>)
SdrText::dumpAsXml(_xmlTextWriter*) const
SdrText::~SdrText()
SdrTextAniAmountItem::Clone(SfxItemPool*) const
SdrTextAniAmountItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniAmountItem::HasMetrics() const
SdrTextAniAmountItem::ScaleMetrics(long, long)
SdrTextAniDelayItem::Clone(SfxItemPool*) const
SdrTextAniDelayItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniDirectionItem::Clone(SfxItemPool*) const
SdrTextAniDirectionItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniDirectionItem::GetValueCount() const
SdrTextAniDirectionItem::GetValueTextByPos(unsigned short)
SdrTextAniDirectionItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextAniDirectionItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextAniKindItem::Clone(SfxItemPool*) const
SdrTextAniKindItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextAniKindItem::GetValueCount() const
SdrTextAniKindItem::GetValueTextByPos(unsigned short)
SdrTextAniKindItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextAniKindItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextAniStartInsideItem::Clone(SfxItemPool*) const
SdrTextAniStopInsideItem::Clone(SfxItemPool*) const
SdrTextFitToSizeTypeItem::Clone(SfxItemPool*) const
SdrTextFitToSizeTypeItem::GetBoolValue() const
SdrTextFitToSizeTypeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextFitToSizeTypeItem::GetValueCount() const
SdrTextFitToSizeTypeItem::GetValueTextByPos(unsigned short)
SdrTextFitToSizeTypeItem::HasBoolValue() const
SdrTextFitToSizeTypeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextFitToSizeTypeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextFitToSizeTypeItem::SetBoolValue(bool)
SdrTextFitToSizeTypeItem::operator==(SfxPoolItem const&) const
SdrTextHorzAdjustItem::Clone(SfxItemPool*) const
SdrTextHorzAdjustItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextHorzAdjustItem::GetValueCount() const
SdrTextHorzAdjustItem::GetValueTextByPos(unsigned short)
SdrTextHorzAdjustItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SdrTextHorzAdjustItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextObj::AdaptTextMinSize()
SdrTextObj::AddToHdlList(SdrHdlList&) const
SdrTextObj::AdjustRectToTextDistance(tools::Rectangle&) const
SdrTextObj::AdjustTextFrameWidthAndHeight(tools::Rectangle&, bool, bool) const
SdrTextObj::BckCreate(SdrDragStat&)
SdrTextObj::BegCreate(SdrDragStat&)
SdrTextObj::BegTextEdit(SdrOutliner&)
SdrTextObj::BrkCreate(SdrDragStat&)
SdrTextObj::CalcFieldValue(SvxFieldItem const&, int, unsigned short, bool, std::optional<Color>&, std::optional<Color>&, std::optional<FontLineStyle>&, rtl::OUString&) const
SdrTextObj::CheckTextHit(Point const&) const
SdrTextObj::CloneSdrObject(SdrModel&) const
SdrTextObj::CreateObjectSpecificProperties()
SdrTextObj::CreateObjectSpecificViewContact()
SdrTextObj::DoConvertToPolyObj(bool, bool) const
SdrTextObj::EndCreate(SdrDragStat&, SdrCreateCmd)
SdrTextObj::EndTextEdit(SdrOutliner&)
SdrTextObj::GetCreatePointer() const
SdrTextObj::GetEckenradius() const
SdrTextObj::GetHdlCount() const
SdrTextObj::GetMaxTextFrameHeight() const
SdrTextObj::GetMaxTextFrameWidth() const
SdrTextObj::GetMinTextFrameWidth() const
SdrTextObj::GetNextLinkInChain() const
SdrTextObj::GetObjIdentifier() const
SdrTextObj::GetOutlinerViewAnchorMode() const
SdrTextObj::GetPrevLinkInChain() const
SdrTextObj::GetPreventChainable() const
SdrTextObj::GetRotateAngle() const
SdrTextObj::GetShearAngle(bool) const
SdrTextObj::GetSnapPoint(unsigned int) const
SdrTextObj::GetSnapPointCount() const
SdrTextObj::GetTextChain() const
SdrTextObj::GetTextHorizontalAdjust(SfxItemSet const&) const
SdrTextObj::GetTextLeftDistance() const
SdrTextObj::GetTextRightDistance() const
SdrTextObj::GetTextScrollMetaFileAndRectangle(tools::Rectangle&, tools::Rectangle&)
SdrTextObj::GetTextSize() const
SdrTextObj::GetTextVerticalAdjust(SfxItemSet const&) const
SdrTextObj::HasText() const
SdrTextObj::HasTextColumnsNumber() const
SdrTextObj::HasTextColumnsSpacing() const
SdrTextObj::HasTextEdit() const
SdrTextObj::HasTextImpl(SdrOutliner const*)
SdrTextObj::ImpCanConvTextToCurve() const
SdrTextObj::ImpCheckShear()
SdrTextObj::ImpConvertAddText(rtl::Reference<SdrObject>, bool) const
SdrTextObj::ImpConvertMakeObj(basegfx::B2DPolyPolygon const&, bool, bool) const
SdrTextObj::ImpDragCalcRect(SdrDragStat const&) const
SdrTextObj::ImpGetDrawOutliner() const
SdrTextObj::ImpJustifyRect(tools::Rectangle&)
SdrTextObj::ImpSetCharStretching(SdrOutliner&, Size const&, Size const&, Fraction&)
SdrTextObj::ImpSetContourPolygon(SdrOutliner&, tools::Rectangle const&, bool) const
SdrTextObj::ImpSetTextEditParams() const
SdrTextObj::ImpSetTextStyleSheetListeners()
SdrTextObj::IsAutoGrowHeight() const
SdrTextObj::IsAutoGrowWidth() const
SdrTextObj::IsChainable() const
SdrTextObj::IsContourTextFrame() const
SdrTextObj::IsFitToSize() const
SdrTextObj::IsFontwork() const
SdrTextObj::IsHideContour() const
SdrTextObj::IsReallyEdited() const
SdrTextObj::IsTopToBottom() const
SdrTextObj::IsVerticalWriting() const
SdrTextObj::LoadText(rtl::OUString const&, unsigned short)
SdrTextObj::MovCreate(SdrDragStat&)
SdrTextObj::NbcAdjustTextFrameWidthAndHeight(bool, bool)
SdrTextObj::NbcMirror(Point const&, Point const&)
SdrTextObj::NbcMove(Size const&)
SdrTextObj::NbcReformatText()
SdrTextObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrTextObj::NbcRotate(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, double)
SdrTextObj::NbcSetEckenradius(long)
SdrTextObj::NbcSetOutlinerParaObject(std::optional<OutlinerParaObject>)
SdrTextObj::NbcSetSnapRect(tools::Rectangle const&)
SdrTextObj::NbcSetText(SvStream&, rtl::OUString const&, EETextFormat)
SdrTextObj::NbcShear(Point const&, o3tl::strong_int<int, FractionTag<100> >, double, bool)
SdrTextObj::NewGeoData() const
SdrTextObj::RecalcSnapRect()
SdrTextObj::ReleaseTextLink()
SdrTextObj::ReloadLinkedText(bool)
SdrTextObj::RemoveOutlinerCharacterAttribs(std::vector<unsigned short, std::allocator<unsigned short> > const&)
SdrTextObj::RestoreGeoData(SdrObjGeoData const&)
SdrTextObj::SaveGeoData(SdrObjGeoData&) const
SdrTextObj::SdrTextObj(SdrModel&)
SdrTextObj::SdrTextObj(SdrModel&, SdrObjKind)
SdrTextObj::SdrTextObj(SdrModel&, SdrObjKind, tools::Rectangle const&)
SdrTextObj::SdrTextObj(SdrModel&, SdrTextObj const&)
SdrTextObj::SdrTextObj(SdrModel&, tools::Rectangle const&)
SdrTextObj::SetNextLinkInChain(SdrTextObj*)
SdrTextObj::SetText(SvStream&, rtl::OUString const&, EETextFormat)
SdrTextObj::SetTextAnimationAllowed(bool)
SdrTextObj::SetTextColumnsNumber(short)
SdrTextObj::SetTextColumnsSpacing(int)
SdrTextObj::SetupOutlinerFormatting(SdrOutliner&, tools::Rectangle&) const
SdrTextObj::TRGetBaseGeometry(basegfx::B2DHomMatrix&, basegfx::B2DPolyPolygon&) const
SdrTextObj::TRSetBaseGeometry(basegfx::B2DHomMatrix const&, basegfx::B2DPolyPolygon const&)
SdrTextObj::TakeContour() const
SdrTextObj::TakeCreatePoly(SdrDragStat const&) const
SdrTextObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrTextObj::TakeObjNamePlural() const
SdrTextObj::TakeObjNameSingul() const
SdrTextObj::TakeTextAnchorRect(tools::Rectangle&) const
SdrTextObj::TakeTextEditArea(Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
SdrTextObj::TakeTextRect(SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*, bool) const
SdrTextObj::TakeUnrotatedSnapRect(tools::Rectangle&) const
SdrTextObj::TakeXorPoly() const
SdrTextObj::UpdateOutlinerFormatting(SdrOutliner&, tools::Rectangle&) const
SdrTextObj::applySpecialDrag(SdrDragStat&)
SdrTextObj::getActiveText() const
SdrTextObj::getFullDragClone() const
SdrTextObj::getSpecialDragComment(SdrDragStat const&) const
SdrTextObj::getText(int) const
SdrTextObj::getTextCount() const
SdrTextObj::handlePageChange(SdrPage*, SdrPage*)
SdrTextObj::hasSpecialDrag() const
SdrTextObj::impDecomposeAutoFitTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrAutoFitTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeBlockTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrBlockTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeBlockTextPrimitiveDirect(drawinglayer::primitive2d::Primitive2DContainer&, SdrOutliner&, basegfx::B2DHomMatrix const&, basegfx::B2DHomMatrix const&, basegfx::B2DRange const&)
SdrTextObj::impDecomposeChainedTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrChainedTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeContourTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrContourTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposePathTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrPathTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impDecomposeStretchTextPrimitive(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SdrStretchTextPrimitive2D const&, drawinglayer::geometry::ViewInformation2D const&) const
SdrTextObj::impGetBlinkTextTiming(drawinglayer::animation::AnimationEntryList&) const
SdrTextObj::impGetScrollTextTiming(drawinglayer::animation::AnimationEntryList&, double, double) const
SdrTextObj::impHandleChainingEventsDuringDecomposition(SdrOutliner&) const
SdrTextObj::onChainingEvent()
SdrTextObj::onEditOutlinerStatusEvent(EditStatus*)
SdrTextObj::setActiveText(int)
SdrTextObj::setupAutoFitText(SdrOutliner&) const
SdrTextObj::setupAutoFitText(SdrOutliner&, Size const&) const
SdrTextObj::~SdrTextObj()
SdrTextVertAdjustItem::Clone(SfxItemPool*) const
SdrTextVertAdjustItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrTextVertAdjustItem::GetValueCount() const
SdrTextVertAdjustItem::GetValueTextByPos(unsigned short)
SdrTextVertAdjustItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SdrTextVertAdjustItem::dumpAsXml(_xmlTextWriter*) const
SdrUndoAttrObj::ensureStyleSheetInStyleSheetPool(SfxStyleSheetBasePool&, SfxStyleSheet&)
SdrUndoDelPage::CanSdrRepeat(SdrView&) const
SdrUndoDelPage::GetComment() const
SdrUndoDelPage::GetSdrRepeatComment() const
SdrUndoDelPage::Redo()
SdrUndoDelPage::SdrRepeat(SdrView&)
SdrUndoDelPage::Undo()
SdrUndoDelPage::clearFillBitmap()
SdrUndoDelPage::queryFillBitmap(SfxItemSet const&)
SdrUndoDelPage::restoreFillBitmap()
SdrUndoFactory::CreateUndoAttrObject(SdrObject&, bool, bool)
SdrUndoFactory::CreateUndoDeleteObject(SdrObject&, bool)
SdrUndoFactory::CreateUndoGeoObject(SdrObject&)
SdrUndoFactory::CreateUndoObjectDecorative(SdrObject&, bool)
SdrUndoFactory::CreateUndoObjectSetText(SdrObject&, int)
SdrUndoFactory::CreateUndoObjectStrAttr(SdrObject&, SdrUndoObjStrAttr::ObjStrAttrType, rtl::OUString const&, rtl::OUString const&)
SdrUndoFactory::CreateUndoRemoveObject(SdrObject&)
SdrUndoFactory::CreateUndoReplaceObject(SdrObject&, SdrObject&)
SdrUndoFactory::CreateUndoSort(SdrPage&, std::vector<int, std::allocator<int> > const&)
SdrUndoGroup::CanSdrRepeat(SdrView&) const
SdrUndoGroup::GetComment() const
SdrUndoGroup::GetSdrRepeatComment() const
SdrUndoGroup::Redo()
SdrUndoGroup::SdrRepeat(SdrView&)
SdrUndoGroup::Undo()
SdrUndoInsertObj::Redo()
SdrUndoInsertObj::Undo()
SdrUndoManager::SetEndTextEditHdl(Link<SdrUndoManager*, void> const&)
SdrUndoMoveObj::CanSdrRepeat(SdrView&) const
SdrUndoMoveObj::GetComment() const
SdrUndoMoveObj::GetSdrRepeatComment() const
SdrUndoMoveObj::Redo()
SdrUndoMoveObj::SdrRepeat(SdrView&)
SdrUndoMoveObj::Undo()
SdrUndoNewObj::GetComment() const
SdrUndoNewObj::Redo()
SdrUndoNewObj::Undo()
SdrUndoNewPage::GetComment() const
SdrUndoNewPage::Redo()
SdrUndoNewPage::Undo()
SdrUndoObj::GetDescriptionStringForObject(SdrObject const&, TranslateId, bool)
SdrUndoObj::ImpGetDescriptionStr(TranslateId, bool) const
SdrUndoObj::ImpShowPageOfThisObject()
SdrUndoObjList::~SdrUndoObjList()
SdrUndoObjSetText::AfterSetText()
SdrUndoObjSetText::IsDifferent() const
SdrUndoObjectLayerChange::Redo()
SdrUndoObjectLayerChange::Undo()
SdrUndoPageList::~SdrUndoPageList()
SdrUnoObj::CloneSdrObject(SdrModel&) const
SdrUnoObj::CreateObjectSpecificViewContact()
SdrUnoObj::GetObjIdentifier() const
SdrUnoObj::GetTemporaryControlForWindow(vcl::Window const&, com::sun::star::uno::Reference<com::sun::star::awt::XControlContainer>&) const
SdrUnoObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrUnoObj::NbcSetLayer(o3tl::strong_int<short, SdrLayerIDTag>)
SdrUnoObj::SdrUnoObj(SdrModel&, SdrUnoObj const&)
SdrUnoObj::SdrUnoObj(SdrModel&, rtl::OUString const&)
SdrUnoObj::SdrUnoObj(SdrModel&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
SdrUnoObj::SetContextWritingMode(short)
SdrUnoObj::SetUnoControlModel(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&)
SdrUnoObj::TakeObjInfo(SdrObjTransformInfoRec&) const
SdrUnoObj::TakeObjNamePlural() const
SdrUnoObj::TakeObjNameSingul() const
SdrUnoObj::hasSpecialDrag() const
SdrUnoObj::~SdrUnoObj()
SdrView::BegMark(Point const&, bool, bool)
SdrView::DoMouseEvent(SdrViewEvent const&)
SdrView::GetMarkedRect() const
SdrVirtObj::CreateObjectSpecificViewContact()
SdrVirtObj::GetCurrentBoundRect() const
SdrVirtObj::GetLastBoundRect() const
SdrVirtObj::GetLogicRect() const
SdrVirtObj::GetSnapRect() const
SdrVirtObj::Move(Size const&)
SdrVirtObj::NbcMove(Size const&)
SdrVirtObj::NbcResize(Point const&, Fraction const&, Fraction const&)
SdrVirtObj::NbcSetLogicRect(tools::Rectangle const&)
SdrVirtObj::NbcSetSnapRect(tools::Rectangle const&)
SdrVirtObj::RecalcBoundRect()
SdrVirtObj::RecalcSnapRect()
SdrVirtObj::Resize(Point const&, Fraction const&, Fraction const&, bool)
SdrVirtObj::SetLogicRect(tools::Rectangle const&)
SdrVirtObj::SetSnapRect(tools::Rectangle const&)
SdrVirtObj::TakeXorPoly() const
SdrYesNoItem::Clone(SfxItemPool*) const
SdrYesNoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SdrYesNoItem::GetValueTextByVal(bool) const
SearchAttrItemList::Clear()
SearchAttrItemList::Put(SfxItemSet const&)
SearchAttrItemList::Remove(unsigned long)
SearchAttrItemList::SearchAttrItemList(SearchAttrItemList&&)
SelectionEngine::CaptureMouse()
SelectionListenerMultiplexer::SelectionListenerMultiplexer(cppu::OWeakObject&)
SelectionListenerMultiplexer::acquire()
SelectionListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
SelectionListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
SelectionListenerMultiplexer::release()
SelectionListenerMultiplexer::selectionChanged(com::sun::star::awt::grid::GridSelectionEvent const&)
SetODFDefaultVersion(SvtSaveOptions::ODFDefaultVersion, std::shared_ptr<comphelper::ConfigurationChanges> const&)
SetSVHelpData(ImplSVHelpData*)
SetSVWinData(ImplSVWinData*)
SfxAllItemSet::Clone(bool, SfxItemPool*) const
SfxAllItemSet::PutImpl(SfxPoolItem const&, bool)
SfxApplication::Deinitialize()
SfxApplication::GetBasicContainer()
SfxApplication::GetDdeService() const
SfxApplication::GetDialogContainer()
SfxApplication::GetFreeIndex()
SfxApplication::GetProgress() const
SfxApplication::GetSidebarTheme()
SfxApplication::GetStaticInterface()
SfxApplication::InitInterface_Impl()
SfxApplication::InitializeDde()
SfxApplication::Invalidate(unsigned short)
SfxApplication::MacroOrganizer(weld::Window*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, short)
SfxApplication::RegisterInterface(SfxModule const*)
SfxApplication::ReleaseIndex(unsigned short)
SfxApplication::ResetLastDir()
SfxApplication::SaveBasicAndDialogContainer() const
SfxApplication::SfxApplication()
SfxApplication::loadBrandSvg(char const*, BitmapEx&, int)
SfxApplication::~SfxApplication()
SfxBaseModel::IsInitialized() const
SfxBaseModel::MethodEntryCheck(bool) const
SfxBaseModel::changing()
SfxBaseModel::getBoolPropertyValue(rtl::OUString const&)
SfxBaseModel::getUIConfigurationManager2()
SfxBaseModel::impl_getPrintHelper()
SfxBindings::GetStateCache(unsigned short)
SfxBindings::HidePopups(bool)
SfxBindings::Register(SfxControllerItem&)
SfxBindings::Release(SfxControllerItem&)
SfxBindings::SetActiveFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxBoolItem::Clone(SfxItemPool*) const
SfxBroadcaster::SfxBroadcaster(SfxBroadcaster const&)
SfxCharmapContainer::FavCharListIsFull() const
SfxCharmapContainer::GrabFocusToFirstFavorite()
SfxCharmapContainer::SfxCharmapContainer(weld::Builder&, VclPtr<VirtualDevice> const&, bool)
SfxCharmapContainer::deleteFavCharacterFromList(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxCharmapContainer::getFavChar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxCharmapContainer::getFavCharacterList()
SfxCharmapContainer::getRecentChar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxCharmapContainer::getRecentCharacterList()
SfxCharmapContainer::hasRecentChars() const
SfxCharmapContainer::init(bool, Link<SvxCharView*, void> const&, Link<void*, void> const&, Link<void*, void> const&, Link<SvxCharView*, void> const&)
SfxCharmapContainer::isFavChar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxCharmapContainer::updateFavCharControl()
SfxCharmapContainer::updateFavCharacterList(rtl::OUString const&, rtl::OUString const&)
SfxCharmapContainer::updateRecentCharControl()
SfxCharmapContainer::updateRecentCharacterList(rtl::OUString const&, rtl::OUString const&)
SfxChildWindow::CreateChildWindow(unsigned short, vcl::Window*, SfxBindings*, SfxChildWinInfo&)
SfxChildWindow::Destroy()
SfxChildWindow::GetFrame() const
SfxChildWindow::GetPosition() const
SfxChildWindow::IsHideNotDelete() const
SfxChildWindow::SaveStatus(SfxChildWinInfo const&)
SfxChildWindow::SetFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxChildWindow::SetVisible_Impl(bool)
SfxChildWindow::WantsFocus() const
SfxClassificationHelper::GetAbbreviatedBACName(rtl::OUString const&)
SfxClassificationHelper::GetAbbreviatedBACNames()
SfxClassificationHelper::GetBACIdentifiers()
SfxClassificationHelper::GetBACName(SfxClassificationPolicyType) const
SfxClassificationHelper::GetBACNames()
SfxClassificationHelper::GetImpactLevel()
SfxClassificationHelper::GetImpactLevelType()
SfxClassificationHelper::GetImpactScale()
SfxClassificationHelper::GetIntellectualPropertyPartNumbers() const
SfxClassificationHelper::GetIntellectualPropertyParts() const
SfxClassificationHelper::GetMarkings() const
SfxClassificationHelper::HasImpactLevel()
SfxClassificationHelper::IsClassified(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&)
SfxClassificationHelper::PROP_DOCWATERMARK()
SfxClassificationHelper::UpdateInfobar(SfxViewFrame&)
SfxCommonPrintOptionsTabPage::Create(weld::Container*, weld::DialogController*, SfxItemSet const*)
SfxCommonPrintOptionsTabPage::DeactivatePage(SfxItemSet*)
SfxCommonPrintOptionsTabPage::FillItemSet(SfxItemSet*)
SfxCommonPrintOptionsTabPage::GetAllStrings()
SfxCommonPrintOptionsTabPage::Reset(SfxItemSet const*)
SfxCommonPrintOptionsTabPage::SfxCommonPrintOptionsTabPage(weld::Container*, weld::DialogController*, SfxItemSet const&)
SfxCommonPrintOptionsTabPage::~SfxCommonPrintOptionsTabPage()
SfxControllerItem::Bind(unsigned short, SfxBindings*)
SfxControllerItem::ChangeItemLink(SfxControllerItem*)
SfxControllerItem::GetItemLink()
SfxControllerItem::GetItemState(SfxPoolItem const*)
SfxControllerItem::IsBound() const
SfxControllerItem::ReBind()
SfxControllerItem::SetId(unsigned short)
SfxControllerItem::UnBind()
SfxDispatcher::Execute(unsigned short, SfxCallMode, SfxItemSet const*, SfxItemSet const*, unsigned short)
SfxDispatcher::Execute_(SfxShell&, SfxSlot const&, SfxRequest&, SfxCallMode)
SfxDispatcher::FillState_(SfxSlotServer const&, SfxItemSet&, SfxSlot const*)
SfxDispatcher::FindServer_(unsigned short, SfxSlotServer&)
SfxDispatcher::FlushImpl()
SfxDispatcher::GetShellLevel(SfxShell const&)
SfxDispatcher::GetSlot(rtl::OUString const&)
SfxDispatcher::HideUI(bool)
SfxDispatcher::IsActive(SfxShell const&)
SfxDispatcher::IsAppDispatcher() const
SfxDispatcher::IsCommandAllowedInLokReadOnlyViewMode(rtl::OUString)
SfxDispatcher::IsFlushed() const
SfxDispatcher::PostMsgHandler(std::unique_ptr<SfxRequest, std::default_delete<SfxRequest> >)
SfxDispatcher::SfxDispatcher()
SfxDockingWindow::CalcAlignment(Point const&, tools::Rectangle&)
SfxDockingWindow::GetMinOutputSizePixel() const
SfxDocumentInfoDialog::PageCreated(rtl::OUString const&, SfxTabPage&)
SfxDocumentTemplates::Copy(unsigned short, unsigned short, unsigned short, unsigned short)
SfxDocumentTemplates::CopyFrom(unsigned short, unsigned short, rtl::OUString&)
SfxDocumentTemplates::CopyTo(unsigned short, unsigned short, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxDocumentTemplates::Delete(unsigned short, unsigned short)
SfxDocumentTemplates::GetFull(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&)
SfxDocumentTemplates::GetRegionName(unsigned short) const
SfxDocumentTemplates::GetTemplateTargetURLFromComponent(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxDocumentTemplates::InsertDir(rtl::OUString const&, unsigned short)
SfxDocumentTemplates::InsertTemplate(unsigned short, unsigned short, rtl::OUString const&, rtl::OUString const&)
SfxDocumentTemplates::Move(unsigned short, unsigned short, unsigned short, unsigned short)
SfxDocumentTemplates::ReInitFromComponent()
SfxDocumentTemplates::SetName(rtl::OUString const&, unsigned short, unsigned short)
SfxDocumentTemplates::Update()
SfxErrorHandler::CreateString(ErrCodeMsg const&, rtl::OUString&) const
SfxErrorHandler::GetErrorString(ErrCode, rtl::OUString&) const
SfxErrorHandler::~SfxErrorHandler()
SfxEventNamesItem::Clone(SfxItemPool*) const
SfxEventNamesItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxEventNamesItem::operator==(SfxPoolItem const&) const
SfxEventNamesList::operator=(SfxEventNamesList const&)
SfxExtItemPropertySetInfo::getByName(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxExtItemPropertySetInfo::getProperties()
SfxExtItemPropertySetInfo::getPropertyByName(rtl::OUString const&)
SfxExtItemPropertySetInfo::hasPropertyByName(rtl::OUString const&)
SfxExtItemPropertySetInfo::~SfxExtItemPropertySetInfo()
SfxFilter::GetDefaultFilter(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxFilter::GetTypeFromStorage(SotStorage const&)
SfxFilter::GetTypeFromStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxFilter::SfxFilter(rtl::OUString, rtl::OUString)
SfxFilterContainer::GetAnyFilter(SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GetAnyFilter(SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GetFilter4UIName(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GetFilterForProps(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&, SfxFilterFlags, SfxFilterFlags) const
SfxFilterMatcher::GuessFilterControlDefaultUI(SfxMedium&, std::shared_ptr<SfxFilter const>&, SfxFilterFlags, SfxFilterFlags) const
SfxFlagItem::Clone(SfxItemPool*) const
SfxFlagItem::GetFlagCount() const
SfxFlagItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxFlagItem::operator==(SfxPoolItem const&) const
SfxFrame::CancelTransfers()
SfxFrame::Create(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxFrame::CreateBlankFrame()
SfxFrame::DoClose()
SfxFrame::GetCurrentDocument() const
SfxFrame::GetFirst()
SfxFrame::GetHasTitle() const
SfxFrame::GetNext(SfxFrame&)
SfxFrame::IsClosing_Impl() const
SfxFrame::Resize()
SfxFrame::UpdateDescriptor(SfxObjectShell const*)
SfxFrame::~SfxFrame()
SfxFrameDescriptor::GetArgs()
SfxFrameDescriptor::SetActualURL()
SfxFrameDescriptor::SetURL(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxFrameItem::Clone(SfxItemPool*) const
SfxFrameItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxFrameItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxFrameItem::operator==(SfxPoolItem const&) const
SfxGlobalNameItem::Clone(SfxItemPool*) const
SfxGlobalNameItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxGlobalNameItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxGlobalNameItem::SfxGlobalNameItem()
SfxGlobalNameItem::operator==(SfxPoolItem const&) const
SfxGrabBagItem::operator==(SfxPoolItem const&) const
SfxHelp::CreateHelpURL(rtl::OUString const&, rtl::OUString const&)
SfxHelp::GetCurrentModuleIdentifier()
SfxHelp::GetDefaultHelpModule()
SfxHelp::GetHelpText(rtl::OUString const&, vcl::Window const*)
SfxHelp::GetHelpText(rtl::OUString const&, weld::Widget const*)
SfxHelp::IsHelpInstalled()
SfxHelp::SfxHelp()
SfxHelp::~SfxHelp()
SfxHyphenRegionItem::Clone(SfxItemPool*) const
SfxHyphenRegionItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxHyphenRegionItem::SfxHyphenRegionItem(unsigned short)
SfxHyphenRegionItem::operator==(SfxPoolItem const&) const
SfxImageItem::Clone(SfxItemPool*) const
SfxImageItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxImageItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxImageItem::SfxImageItem(SfxImageItem const&)
SfxImageItem::operator==(SfxPoolItem const&) const
SfxInPlaceClient::GetObjectMiscStatus() const
SfxInPlaceClient::Invalidate()
SfxInPlaceClient::IsNegativeX() const
SfxInPlaceClient::IsObjectUIActive() const
SfxInPlaceClient::IsUIActive() const
SfxInPlaceClient::ResetObject()
SfxInPlaceClient::SetObjectState(int)
SfxInfoBarContainerChild::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SfxInfoBarContainerChild::GetInfo() const
SfxInfoBarContainerChild::RegisterChildWindow(bool, SfxModule*, SfxChildWindowFlags)
SfxInfoBarContainerChild::SfxInfoBarContainerChild(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SfxInfoBarContainerChild::Update()
SfxInfoBarContainerChild::~SfxInfoBarContainerChild()
SfxInfoBarWindow::DoLayout()
SfxInfoBarWindow::Layout()
SfxInfoBarWindow::SetCloseButtonImage()
SfxInfoBarWindow::SetForeAndBackgroundColors(InfobarType)
SfxInfoBarWindow::SfxInfoBarWindow(vcl::Window*, rtl::OUString, rtl::OUString const&, rtl::OUString const&, InfobarType, bool)
SfxInfoBarWindow::Update(rtl::OUString const&, rtl::OUString const&, InfobarType)
SfxInfoBarWindow::dispose()
SfxInfoBarWindow::~SfxInfoBarWindow()
SfxInt16Item::CreateDefault()
SfxInt64Item::Clone(SfxItemPool*) const
SfxInt64Item::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxInt64Item::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxInt64Item::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxInt64Item::operator==(SfxPoolItem const&) const
SfxIntegerListItem::Clone(SfxItemPool*) const
SfxIntegerListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxIntegerListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxIntegerListItem::SfxIntegerListItem()
SfxIntegerListItem::SfxIntegerListItem(unsigned short, com::sun::star::uno::Sequence<int> const&)
SfxIntegerListItem::operator==(SfxPoolItem const&) const
SfxInterface::GetChildWindowCount() const
SfxInterface::GetChildWindowFeature(unsigned short) const
SfxInterface::GetChildWindowId(unsigned short) const
SfxInterface::GetObjectBarCount() const
SfxInterface::GetObjectBarFeature(unsigned short) const
SfxInterface::GetObjectBarFlags(unsigned short) const
SfxInterface::GetObjectBarId(unsigned short) const
SfxInterface::GetObjectBarPos(unsigned short) const
SfxInterface::GetPopupMenuName() const
SfxInterface::GetRealSlot(SfxSlot const*) const
SfxInterface::GetStatusBarId() const
SfxInterface::IsObjectBarVisible(unsigned short) const
SfxInterface::SetSlotMap(SfxSlot&, unsigned short)
SfxInterface::~SfxInterface()
SfxItemPool::BC()
SfxItemPool::GetMergedIdRanges() const
SfxItemPool::cleanupItemInfos()
SfxItemPool::getTargetPool(unsigned short) const
SfxItemPool::impCheckItemInfoForClone(ItemInfo const*)
SfxItemPool::impClearUserDefault(std::__detail::_Node_iterator<std::pair<unsigned short const, ItemInfo const*>, false, false>&)
SfxItemPool::impCreateUserDefault(SfxPoolItem const&)
SfxItemPool::registerItemSet(SfxItemSet&)
SfxItemPool::registerPoolItemHolder(SfxPoolItemHolder&)
SfxItemPool::unregisterItemSet(SfxItemSet&)
SfxItemPool::unregisterPoolItemHolder(SfxPoolItemHolder&)
SfxItemPropertyMap::getProperties() const
SfxItemPropertyMap::getPropertyByName(rtl::OUString const&) const
SfxItemPropertySetInfo::getProperties()
SfxItemPropertySetInfo::getPropertyByName(rtl::OUString const&)
SfxItemPropertySetInfo::hasPropertyByName(rtl::OUString const&)
SfxItemPropertySetInfo::~SfxItemPropertySetInfo()
SfxItemSet::ClearAllItemsImpl()
SfxItemSet::ClearSingleItem_ForOffset(unsigned short)
SfxItemSet::ClearSingleItem_ForWhichID(unsigned short)
SfxItemSet::DisableOrInvalidateItem_ForOffset(bool, unsigned short)
SfxItemSet::GetItemState_ForOffset(unsigned short, SfxPoolItem const**) const
SfxItemSet::MergeItem_Impl(SfxPoolItem const**, SfxPoolItem const*, bool)
SfxItemSet::SfxItemSet(SfxItemPool&, SfxItemSet::SfxAllItemSetFlag)
SfxItemSet::checkAddPoolRegistration(SfxPoolItem const*)
SfxItemSet::checkRemovePoolRegistration(SfxPoolItem const*)
SfxListUndoAction::CanRepeat(SfxRepeatTarget&) const
SfxListUndoAction::GetComment() const
SfxListUndoAction::GetRepeatComment(SfxRepeatTarget&) const
SfxListUndoAction::GetViewShellId() const
SfxListUndoAction::Merge(SfxUndoAction*)
SfxListUndoAction::Redo()
SfxListUndoAction::RedoWithContext(SfxUndoContext&)
SfxListUndoAction::Repeat(SfxRepeatTarget&)
SfxListUndoAction::SfxListUndoAction(rtl::OUString const&, rtl::OUString const&, unsigned short, o3tl::strong_int<int, ViewShellIdTag>, SfxUndoArray*)
SfxListUndoAction::Undo()
SfxListUndoAction::UndoWithContext(SfxUndoContext&)
SfxListUndoAction::dumpAsXml(_xmlTextWriter*) const
SfxListUndoAction::~SfxListUndoAction()
SfxListener::RemoveBroadcaster_Impl(SfxBroadcaster&)
SfxLockBytesItem::Clone(SfxItemPool*) const
SfxLockBytesItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxLockBytesItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxLockBytesItem::SfxLockBytesItem()
SfxLockBytesItem::operator==(SfxPoolItem const&) const
SfxLockBytesItem::~SfxLockBytesItem()
SfxLokHelper::createView(SfxViewFrame&, o3tl::strong_int<int, ViewShellDocIdTag>)
SfxLokHelper::getDefaultLanguage()
SfxLokHelper::getLoadLanguage()
SfxLokHelper::getViewOfId(int)
SfxLokHelper::isSettingView()
SfxLokHelper::notifyContextChange(com::sun::star::ui::ContextChangeEventObject const&)
SfxLokHelper::notifyLog(std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> > const&)
SfxLokHelper::notifyWindow(SfxViewShell const*, unsigned int, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<std::pair<rtl::OString const, rtl::OString const>, std::allocator<std::pair<rtl::OString const, rtl::OString const> > > const&)
SfxLokHelper::sendUnoStatus(SfxViewShell const*, SfxPoolItem const*)
SfxMacroInfoItem::Clone(SfxItemPool*) const
SfxMacroInfoItem::CreateDefault()
SfxMacroInfoItem::GetQualifiedName() const
SfxMacroInfoItem::SfxMacroInfoItem(unsigned short, BasicManager const*, rtl::OUString, rtl::OUString, rtl::OUString, rtl::OUString)
SfxMacroInfoItem::operator==(SfxPoolItem const&) const
SfxMedium::AddToCheckEditableWorkerList()
SfxMedium::CallApproveHandler(com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&, com::sun::star::uno::Any const&, bool)
SfxMedium::CancelCheckEditableEntry(bool)
SfxMedium::CheckCanGetLockfile() const
SfxMedium::CheckFileDate(com::sun::star::util::DateTime const&)
SfxMedium::CloseAndRelease()
SfxMedium::CloseInStream()
SfxMedium::CloseStorage()
SfxMedium::CompleteReOpen()
SfxMedium::CreatePasswordToModifyHash(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
SfxMedium::CreateTempCopyWithExt(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxMedium::CreateTempFile(bool)
SfxMedium::CreateTempFileNoCopy()
SfxMedium::DisableFileSync(bool)
SfxMedium::DisableUnlockWebDAV(bool)
SfxMedium::DocNeedsFileDateCheck() const
SfxMedium::GetCheckEditableMutex() const
SfxMedium::GetContent() const
SfxMedium::GetInitFileDate(bool)
SfxMedium::GetLastStorageCreationState() const
SfxMedium::GetOpenMode() const
SfxMedium::GetVersionList(bool)
SfxMedium::GetVersionList(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxMedium::GetWorkerReloadEvent() const
SfxMedium::IsExpired() const
SfxMedium::IsInCheckIn() const
SfxMedium::IsOpen() const
SfxMedium::IsOriginallyLoadedReadOnly() const
SfxMedium::IsOriginallyReadOnly() const
SfxMedium::IsReadOnly() const
SfxMedium::IsRepairPackage() const
SfxMedium::LockOrigFileOnDemand(bool, bool, bool, o3tl::enumarray<LockFileComponent, rtl::OUString>*)
SfxMedium::ReOpen()
SfxMedium::ResetError()
SfxMedium::SetArgs(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SfxMedium::SetDoneLink(Link<void*, void> const&)
SfxMedium::SetHasEmbeddedObjects(bool)
SfxMedium::SetInCheckIn(bool)
SfxMedium::SetLoadTargetFrame(SfxFrame*)
SfxMedium::SetName(rtl::OUString const&, bool)
SfxMedium::SetOpenMode(StreamMode, bool)
SfxMedium::SetOriginallyReadOnly(bool)
SfxMedium::SetWarningError(ErrCodeMsg const&)
SfxMedium::SetWorkerReloadEvent(ImplSVEvent*)
SfxMedium::SetWritableForUserOnly(rtl::OUString const&)
SfxMedium::SfxMedium(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SfxMedium::ShowLockFileProblemDialog(SfxMedium::MessageDlg)
SfxMedium::ShowLockedDocumentDialog(o3tl::enumarray<LockFileComponent, rtl::OUString> const&, bool, bool, bool)
SfxMedium::SwitchDocumentToFile(rtl::OUString const&)
SfxMedium::SwitchDocumentToTempFile()
SfxMedium::UnlockFile(bool)
SfxModelessDialogController::Init(SfxBindings*, SfxChildWindow*)
SfxModule::CreateTabPage(unsigned short, weld::Container*, weld::DialogController*, SfxItemSet const&)
SfxModule::GetActiveModule(SfxViewFrame*)
SfxModule::GetInterface() const
SfxModule::GetModuleFieldUnit(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SfxModule::RegisterChildWindow(SfxChildWinFactory const&)
SfxModule::RegisterInterface(SfxModule const*)
SfxModule::RegisterStatusBarControl(SfxStbCtrlFactory const&)
SfxModule::RegisterToolBoxControl(SfxTbxCtrlFactory const&)
SfxNewFileDialog::GetSelectedTemplatePos() const
SfxObjectFactory::GetDocumentServiceName() const
SfxObjectFactory::GetFactoryURL() const
SfxObjectFactory::GetModule() const
SfxObjectFactory::GetViewFactory(unsigned short) const
SfxObjectFactory::GetViewFactoryByViewName(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SfxObjectFactory::GetViewFactoryCount() const
SfxObjectFactory::SetSystemTemplate(rtl::OUString const&, rtl::OUString const&)
SfxObjectItem::Clone(SfxItemPool*) const
SfxObjectItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxObjectItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxObjectItem::operator==(SfxPoolItem const&) const
SfxObjectShell::AcceptStateUpdate() const
SfxObjectShell::AddToRecentlyUsedList()
SfxObjectShell::AdjustMacroMode()
SfxObjectShell::AfterSigning(bool, bool)
SfxObjectShell::CheckIsReadonly(bool, weld::Window*)
SfxObjectShell::CloseInternal()
SfxObjectShell::ConvertFrom(SfxMedium&)
SfxObjectShell::ConvertTo(SfxMedium&)
SfxObjectShell::CopyStoragesOfUnknownMediaType(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
SfxObjectShell::CreateAndLoadComponent(SfxItemSet const&)
SfxObjectShell::CreateObject(rtl::OUString const&, SfxObjectCreateMode)
SfxObjectShell::DetectCharSet(SvStream&, unsigned short&, SvStreamEndian&)
SfxObjectShell::DetectCsvSeparators(SvStream&, unsigned short&, rtl::OUString&, char16_t)
SfxObjectShell::DetectFilterOptions(SfxMedium*)
SfxObjectShell::DoLoadExternal(SfxMedium*)
SfxObjectShell::DoSave()
SfxObjectShell::ExportTo(SfxMedium&)
SfxObjectShell::FlushDocInfo()
SfxObjectShell::GenerateAndStoreThumbnail(bool, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxObjectShell::GetAPIName() const
SfxObjectShell::GetAutoStyleFilterIndex() const
SfxObjectShell::GetCurrentComponent()
SfxObjectShell::GetFirstPageSize() const
SfxObjectShell::GetMacroCallsSeenWhileLoading() const
SfxObjectShell::GetParentShell(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SfxObjectShell::GetServiceNameFromFactory(rtl::OUString const&)
SfxObjectShell::HasValidSignatures() const
SfxObjectShell::InitInterface_Impl()
SfxObjectShell::IsAutoLoadLocked() const
SfxObjectShell::IsOriginallyLoadedReadOnlyMedium() const
SfxObjectShell::IsOriginallyReadOnlyMedium() const
SfxObjectShell::IsReadOnlyMedium() const
SfxObjectShell::LoadOwnFormat(SfxMedium&)
SfxObjectShell::ModifyChanged()
SfxObjectShell::PrepareForSigning(weld::Window*)
SfxObjectShell::QueryHiddenInformation(HiddenWarningFact)
SfxObjectShell::ReconnectDdeLinks(SfxObjectShell&)
SfxObjectShell::RegisterInterface(SfxModule const*)
SfxObjectShell::ResetFromTemplate(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxObjectShell::ResignDocument(com::sun::star::uno::Sequence<com::sun::star::security::DocumentSignatureInformation>&)
SfxObjectShell::SaveChildren(bool)
SfxObjectShell::SetCurrentComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SfxObjectShell::SetMacroCallsSeenWhileLoading()
SfxObjectShell::SetNoName()
SfxObjectShell::SetReadOnly()
SfxObjectShell::SetSecurityOptOpenReadOnly(bool)
SfxObjectShell::SignDocumentContent(weld::Window*)
SfxObjectShell::SignScriptingContent(weld::Window*)
SfxObjectShell::SignSignatureLine(weld::Window*, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::security::XCertificate> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString const&)
SfxObjectShell::SwitchChildrenPersistence(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, bool)
SfxObjectShell::SwitchPersistence(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SfxObjectShell::TemplateDisconnectionAfterLoad()
SfxObjectShell::UnTrustedScript(rtl::OUString const&)
SfxObjectShell::UpdateDocInfoForSave()
SfxObjectShell::WriteThumbnail(bool, com::sun::star::uno::Reference<com::sun::star::io::XStream> const&)
SfxObjectShell::getPendingInfobars()
SfxObjectShell::isEditDocLocked() const
SfxObjectShell::isPrintLocked() const
SfxObjectShell::isSaveLocked() const
SfxObjectShell::isScriptAccessAllowed(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SfxObjectShellItem::Clone(SfxItemPool*) const
SfxObjectShellItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxObjectShellItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxObjectShellItem::operator==(SfxPoolItem const&) const
SfxPasswordDialog::AllowAsciiOnly()
SfxPasswordDialog::ModifyHdl()
SfxPasswordDialog::SetPasswdText()
SfxPasswordDialog::ShowMinLengthText(bool)
SfxPointItem::Clone(SfxItemPool*) const
SfxPointItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxPointItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxPointItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxPointItem::SfxPointItem()
SfxPointItem::operator==(SfxPoolItem const&) const
SfxPoolItemHolder::operator==(SfxPoolItemHolder const&) const
SfxPrinter::Clone() const
SfxPrinter::dispose()
SfxPrinter::~SfxPrinter()
SfxProgress::Resume()
SfxProgress::Suspend()
SfxRectangleItem::Clone(SfxItemPool*) const
SfxRectangleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxRectangleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxRectangleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxRectangleItem::SfxRectangleItem()
SfxRectangleItem::operator==(SfxPoolItem const&) const
SfxRequest::AllowRecording(bool)
SfxRequest::AllowsRecording() const
SfxRequest::ForgetAllArgs()
SfxRequest::GetCallMode() const
SfxRequest::GetLokViewId() const
SfxRequest::GetMacroRecorder(SfxViewFrame const&)
SfxRequest::IsCancelled() const
SfxRequest::IsSynchronCall() const
SfxRequest::ReleaseArgs()
SfxRequest::SetLokViewId(int)
SfxRequest::SetSynchronCall(bool)
SfxRequest::SfxRequest(unsigned short, SfxCallMode, SfxAllItemSet const&, SfxAllItemSet const&)
SfxSetItem::SfxSetItem(unsigned short, SfxItemSet const&)
SfxShell::GetDisableFlags() const
SfxShell::GetRepeatTarget() const
SfxShell::GetVerbs() const
SfxShell::SetDisableFlags(SfxDisableFlags)
SfxShell::VerbExec(SfxRequest&)
SfxShell::VerbState(SfxItemSet&)
SfxSingleTabDialogController::CreateOutputItemSet(SfxItemSet const&)
SfxSingleTabDialogController::SfxSingleTabDialogController(weld::Widget*, SfxItemSet const*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SfxSlotPool::GetGroupCount() const
SfxSlotPool::GetSlotType(unsigned short) const
SfxSlotPool::NextSlot()
SfxSlotPool::RegisterInterface(SfxInterface&)
SfxSlotPool::SeekGroup(unsigned short)
SfxSlotPool::SeekSlot(unsigned short)
SfxSlotPool::SfxSlotPool(SfxSlotPool*)
SfxSlotPool::~SfxSlotPool()
SfxStatusBarControl::CreateControl(unsigned short, unsigned short, StatusBar*, SfxModule const*)
SfxStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SfxStatusBarControl::convertAwtToVCLMouseButtons(short)
SfxStatusForwarder::SfxStatusForwarder(unsigned short, SfxControllerItem&)
SfxStatusForwarder::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SfxStatusListener::StateChangedAtStatusListener(SfxItemState, SfxPoolItem const*)
SfxStringItem::Clone(SfxItemPool*) const
SfxStringItem::CreateDefault()
SfxStringListItem::Clone(SfxItemPool*) const
SfxStringListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxStringListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxStringListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxStringListItem::SfxStringListItem()
SfxStringListItem::operator==(SfxPoolItem const&) const
SfxStyleSheetBasePool::Add(SfxStyleSheetBase const&)
SfxStyleSheetBasePool::ChangeParent(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&, SfxStyleFamily, bool)
SfxStyleSheetBasePool::Create(rtl::OUString const&, SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheetBasePool::GetIterator_Impl(SfxStyleFamily, SfxStyleSearchBits)
SfxStyleSheetBasePool::ReindexOnNameChange(rtl::OUString const&, rtl::OUString const&)
SfxStyleSheetBasePool::SfxStyleSheetBasePool(SfxStyleSheetBasePool const&)
SfxStyleSheetBasePool::StoreStyleSheet(rtl::Reference<SfxStyleSheetBase> const&)
SfxStyleSheetBasePool::operator+=(SfxStyleSheetBasePool const&)
SfxStyleSheetBasePool::operator=(SfxStyleSheetBasePool const&)
SfxStyleSheetIterator::GetSearchMask() const
SfxStyleSheetPool::Create(rtl::OUString const&, SfxStyleFamily, SfxStyleSearchBits)
SfxTabDialogController::AddTabPage(rtl::OUString const&, rtl::OUString const&, unsigned short)
SfxTabDialogController::DeactivatePage(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxTabDialogController::LinkStubOkHdl(void*, weld::Button&)
SfxTabDialogController::PrepareLeaveCurrentPage()
SfxTabDialogController::RemoveStandardButton()
SfxTabDialogController::SavePosAndId()
SfxTabDialogItem::Clone(SfxItemPool*) const
SfxTabDialogItem::SfxTabDialogItem(SfxTabDialogItem const&, SfxItemPool*)
SfxTabDialogItem::SfxTabDialogItem(unsigned short, SfxItemSet const&)
SfxTabPage::GetFrame() const
SfxTabPage::GetHelpId() const
SfxTabPage::SetDialogController(SfxOkDialogController*)
SfxTemplateItem::Clone(SfxItemPool*) const
SfxTemplateItem::GetFlagCount() const
SfxTemplateItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxTemplateItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxTemplateItem::SfxTemplateItem()
SfxTemplateItem::operator==(SfxPoolItem const&) const
SfxTemplateManagerDlg::DefaultTemplateMenuSelectHdl(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxTemplateManagerDlg::ExtensionsActionHdl()
SfxTemplateManagerDlg::ImportActionHdl()
SfxTemplateManagerDlg::OnCategoryDelete()
SfxTemplateManagerDlg::OnCategoryNew()
SfxTemplateManagerDlg::OnCategoryRename()
SfxTemplateManagerDlg::OnTemplateExport()
SfxTemplateManagerDlg::OnTemplateImportCategory(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SfxTemplateManagerDlg::OnTemplateOpen()
SfxTemplateManagerDlg::OnTemplateState(ThumbnailViewItem const*)
SfxTemplateManagerDlg::SearchUpdate()
SfxTemplateManagerDlg::fillFolderComboBox()
SfxTemplateManagerDlg::getApplicationSpecificSettings()
SfxTemplateManagerDlg::getCurrentApplicationFilter() const
SfxTemplateManagerDlg::getTemplateViewMode() const
SfxTemplateManagerDlg::localMoveTo(unsigned short)
SfxTemplateManagerDlg::readSettings()
SfxTemplateManagerDlg::setDocumentModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SfxTemplateManagerDlg::setTemplateViewMode(TemplateViewMode)
SfxTemplateManagerDlg::updateMenuItems()
SfxTemplateManagerDlg::writeSettings()
SfxToolBoxControl::CreateControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox*, SfxModule const*)
SfxToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SfxToolBoxControl::Dispatch(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SfxToolBoxControl::RegisterControl(unsigned short, SfxModule*)
SfxUInt32Item::CreateDefault()
SfxUndoAction::GetDateTime() const
SfxUndoArray::Remove(unsigned long, unsigned long)
SfxUndoArray::~SfxUndoArray()
SfxUndoManager::AddUndoListener(SfxUndoListener&)
SfxUndoManager::CanRepeat(SfxRepeatTarget&) const
SfxUndoManager::GetListActionDepth() const
SfxUndoManager::GetRepeatActionComment(SfxRepeatTarget&) const
SfxUndoManager::GetRepeatActionCount() const
SfxUndoManager::ImplAddUndoAction_NoNotify(std::unique_ptr<SfxUndoAction, std::default_delete<SfxUndoAction> >, bool, bool, svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplCheckEmptyActions()
SfxUndoManager::ImplClearCurrentLevel_NoNotify(svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplClearRedo(svl::undo::impl::UndoManagerGuard&, bool)
SfxUndoManager::ImplClearUndo(svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplEnableUndo_Lock(bool)
SfxUndoManager::ImplGetRedoActionCount_Lock(bool) const
SfxUndoManager::ImplIsInListAction_Lock() const
SfxUndoManager::ImplIsUndoEnabled_Lock() const
SfxUndoManager::ImplLeaveListAction(bool, svl::undo::impl::UndoManagerGuard&)
SfxUndoManager::ImplRedo(SfxUndoContext*)
SfxUndoManager::ImplUndo(SfxUndoContext*)
SfxUndoManager::IsEmptyActions() const
SfxUndoManager::LeaveAndMergeListAction()
SfxUndoManager::RemoveUndoListener(SfxUndoListener&)
SfxUndoManager::Repeat(SfxRepeatTarget&)
SfxUndoManager::Reset()
SfxUnoAnyItem::Clone(SfxItemPool*) const
SfxUnoAnyItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxUnoAnyItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxUnoAnyItem::operator==(SfxPoolItem const&) const
SfxUnoFrameItem::Clone(SfxItemPool*) const
SfxUnoFrameItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxUnoFrameItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxUnoFrameItem::SfxUnoFrameItem()
SfxUnoFrameItem::operator==(SfxPoolItem const&) const
SfxViewFactory::CreateInstance(SfxViewFrame&, SfxViewShell*)
SfxViewFactory::GetAPIViewName() const
SfxViewFactory::GetLegacyViewName() const
SfxViewFrame::Activate(bool)
SfxViewFrame::AppendContainsMacrosInfobar()
SfxViewFrame::ChildWindowState(SfxItemSet&)
SfxViewFrame::Close()
SfxViewFrame::Deactivate(bool)
SfxViewFrame::DoActivate(bool)
SfxViewFrame::DoAdjustPosSizePixel(SfxViewShell*, Point const&, Size const&, bool)
SfxViewFrame::DoDeactivate(bool, SfxViewFrame const*)
SfxViewFrame::Get(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&, SfxObjectShell const*)
SfxViewFrame::GetProgress() const
SfxViewFrame::GetStaticInterface()
SfxViewFrame::HandleSecurityInfobar(rtl::OUString const&)
SfxViewFrame::InitInterface_Impl()
SfxViewFrame::Notify(SfxBroadcaster&, SfxHint const&)
SfxViewFrame::RegisterInterface(SfxModule const*)
SfxViewFrame::SetModalMode(bool)
SfxViewFrame::SetViewFrame(SfxViewFrame*)
SfxViewFrame::SfxViewFrame(SfxFrame&, SfxObjectShell*)
SfxViewFrame::UpdateInfoBar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&, rtl::OUString const&, InfobarType)
SfxViewFrame::UpdateTitle()
SfxViewFrame::~SfxViewFrame()
SfxViewFrameItem::Clone(SfxItemPool*) const
SfxViewFrameItem::operator==(SfxPoolItem const&) const
SfxViewShell::GetActivePrinter() const
SfxViewShell::GetClipboardNotifier() const
SfxViewShell::GetLOKDocumentFocusListener()
SfxViewShell::GetLOKDocumentFocusListener() const
SfxViewShell::GetPrinter(bool)
SfxViewShell::InitInterface_Impl()
SfxViewShell::JumpToMark(rtl::OUString const&)
SfxViewShell::OutplaceActivated(bool)
SfxViewShell::RegisterInterface(SfxModule const*)
SfxViewShell::SetCurrentDocument() const
SfxViewShell::SetLOKAccessibilityState(bool)
SfxViewShell::SetLOKLanguageTag(rtl::OUString const&)
SfxViewShell::SetMargin(Size const&)
SfxViewShell::SetPrinter(SfxPrinter*, SfxPrinterChangeFlags)
SfxViewShell::StartPrint(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, bool, bool)
SfxViewShell::TryContextMenuInterception(rtl::Reference<VCLXPopupMenu> const&, rtl::OUString const&, com::sun::star::ui::ContextMenuExecuteEvent)
SfxViewShell::dumpLibreOfficeKitViewState(rtl::OStringBuffer&)
SfxViewShell::isBlockedCommand(rtl::OUString) const
SfxViewShell::setBlockedCommandList(char const*)
SfxVisibilityItem::Clone(SfxItemPool*) const
SfxVisibilityItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxVisibilityItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxVisibilityItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxVisibilityItem::operator==(SfxPoolItem const&) const
SfxVoidItem::Clone(SfxItemPool*) const
SfxVoidItem::CreateDefault()
SfxVoidItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SfxVoidItem::SfxVoidItem(SfxVoidItem const&)
SfxVoidItem::SfxVoidItem(SfxVoidItem&&)
SfxVoidItem::dumpAsXml(_xmlTextWriter*) const
SfxVoidItem::operator==(SfxPoolItem const&) const
SfxWatermarkItem::Clone(SfxItemPool*) const
SfxWatermarkItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SfxWatermarkItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SfxWatermarkItem::operator==(SfxPoolItem const&) const
SharpYuvComputeConversionMatrix
SharpYuvConvert
SharpYuvConvertWithOptions
SharpYuvGetConversionMatrix
SharpYuvGetVersion
SharpYuvInit
SharpYuvOptionsInitInternal
ShearPoly(tools::Polygon&, Point const&, double)
ShellResource::GetAutoFormatNameLst_() const
ShellResource::ShellResource()
Simplify(SkPath const&, SkPath*)
Sk3DView::Sk3DView()
Sk3DView::applyToCanvas(SkCanvas*) const
Sk3DView::dotWithNormal(float, float, float) const
Sk3DView::getMatrix(SkMatrix*) const
Sk3DView::restore()
Sk3DView::rotateX(float)
Sk3DView::rotateY(float)
Sk3DView::rotateZ(float)
Sk3DView::save()
Sk3DView::translate(float, float, float)
Sk3DView::~Sk3DView()
SkAndroidCodec::MakeFromCodec(std::unique_ptr<SkCodec, std::default_delete<SkCodec> >)
SkAndroidCodec::MakeFromData(sk_sp<SkData>, SkPngChunkReader*)
SkAndroidCodec::MakeFromStream(std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkPngChunkReader*)
SkAndroidCodec::SkAndroidCodec(SkCodec*)
SkAndroidCodec::computeOutputAlphaType(bool)
SkAndroidCodec::computeOutputColorSpace(SkColorType, sk_sp<SkColorSpace>)
SkAndroidCodec::computeOutputColorType(SkColorType)
SkAndroidCodec::computeSampleSize(SkISize*) const
SkAndroidCodec::getAndroidGainmap(SkGainmapInfo*, std::unique_ptr<SkStream, std::default_delete<SkStream> >*)
SkAndroidCodec::getAndroidPixels(SkImageInfo const&, void*, unsigned long)
SkAndroidCodec::getAndroidPixels(SkImageInfo const&, void*, unsigned long, SkAndroidCodec::AndroidOptions const*)
SkAndroidCodec::getSampledDimensions(int) const
SkAndroidCodec::getSampledSubsetDimensions(int, SkIRect const&) const
SkAndroidCodec::getSupportedSubset(SkIRect*) const
SkAndroidCodec::~SkAndroidCodec()
SkAnnotateLinkToDestination(SkCanvas*, SkRect const&, SkData*)
SkAnnotateNamedDestination(SkCanvas*, SkPoint const&, SkData*)
SkAnnotateRectWithURL(SkCanvas*, SkRect const&, SkData*)
SkBitmap::HeapAllocator::allocPixelRef(SkBitmap*)
SkBitmap::SkBitmap(SkBitmap const&)
SkBitmap::SkBitmap(SkBitmap&&)
SkBitmap::allocPixels()
SkBitmap::allocPixels(SkBitmap::Allocator*)
SkBitmap::allocPixels(SkImageInfo const&)
SkBitmap::allocPixels(SkImageInfo const&, unsigned long)
SkBitmap::allocPixelsFlags(SkImageInfo const&, unsigned int)
SkBitmap::colorSpace() const
SkBitmap::erase(SkRGBA4f<(SkAlphaType)3>, SkIRect const&) const
SkBitmap::erase(unsigned int, SkIRect const&) const
SkBitmap::eraseColor(SkRGBA4f<(SkAlphaType)3>) const
SkBitmap::eraseColor(unsigned int) const
SkBitmap::extractAlpha(SkBitmap*, SkPaint const*, SkBitmap::Allocator*, SkIPoint*) const
SkBitmap::extractSubset(SkBitmap*, SkIRect const&) const
SkBitmap::getBounds(SkIRect*) const
SkBitmap::getBounds(SkRect*) const
SkBitmap::getGenerationID() const
SkBitmap::installMaskPixels(SkMask const&)
SkBitmap::isImmutable() const
SkBitmap::makeShader(SkSamplingOptions const&, SkMatrix const&) const
SkBitmap::makeShader(SkSamplingOptions const&, SkMatrix const*) const
SkBitmap::makeShader(SkTileMode, SkTileMode, SkSamplingOptions const&, SkMatrix const&) const
SkBitmap::notifyPixelsChanged() const
SkBitmap::operator=(SkBitmap const&)
SkBitmap::operator=(SkBitmap&&)
SkBitmap::pixelRefOrigin() const
SkBitmap::readPixels(SkImageInfo const&, void*, unsigned long, int, int) const
SkBitmap::readPixels(SkPixmap const&, int, int) const
SkBitmap::refColorSpace() const
SkBitmap::reset()
SkBitmap::setAlphaType(SkAlphaType)
SkBitmap::setInfo(SkImageInfo const&, unsigned long)
SkBitmap::setPixelRef(sk_sp<SkPixelRef>, int, int)
SkBitmap::setPixels(void*)
SkBitmap::swap(SkBitmap&)
SkBitmap::tryAllocPixels(SkBitmap::Allocator*)
SkBitmap::tryAllocPixelsFlags(SkImageInfo const&, unsigned int)
SkBitmap::writePixels(SkPixmap const&, int, int)
SkBlendMode_AsCoeff(SkBlendMode, SkBlendModeCoeff*, SkBlendModeCoeff*)
SkBlendMode_Name(SkBlendMode)
SkBlender::Mode(SkBlendMode)
SkBlenders::Arithmetic(float, float, float, float, bool)
SkBlurMask::ConvertRadiusToSigma(float)
SkBlurMask::ConvertSigmaToRadius(float)
SkCanvas::BackImage::BackImage(SkCanvas::BackImage const&)
SkCanvas::BackImage::BackImage(SkCanvas::BackImage&&)
SkCanvas::BackImage::BackImage(sk_sp<SkSpecialImage>, SkIPoint)
SkCanvas::BackImage::operator=(SkCanvas::BackImage const&)
SkCanvas::BackImage::~BackImage()
SkCanvas::ImageSetEntry::ImageSetEntry()
SkCanvas::ImageSetEntry::ImageSetEntry(SkCanvas::ImageSetEntry const&)
SkCanvas::ImageSetEntry::ImageSetEntry(sk_sp<SkImage const>, SkRect const&, SkRect const&, float, unsigned int)
SkCanvas::ImageSetEntry::ImageSetEntry(sk_sp<SkImage const>, SkRect const&, SkRect const&, int, float, unsigned int, bool)
SkCanvas::ImageSetEntry::operator=(SkCanvas::ImageSetEntry const&)
SkCanvas::ImageSetEntry::~ImageSetEntry()
SkCanvas::Layer::Layer(sk_sp<SkBaseDevice>, sk_sp<SkImageFilter>, SkPaint const&)
SkCanvas::MCRec::MCRec(SkBaseDevice*)
SkCanvas::MCRec::MCRec(SkCanvas::MCRec const*)
SkCanvas::MCRec::newLayer(sk_sp<SkBaseDevice>, sk_sp<SkImageFilter>, SkPaint const&)
SkCanvas::MCRec::reset(SkBaseDevice*)
SkCanvas::MCRec::~MCRec()
SkCanvas::MakeRasterDirect(SkImageInfo const&, void*, unsigned long, SkSurfaceProps const*)
SkCanvas::SkCanvas()
SkCanvas::SkCanvas(SkBitmap const&, SkSurfaceProps const&)
SkCanvas::SkCanvas(SkBitmap const&, std::unique_ptr<SkRasterHandleAllocator, std::default_delete<SkRasterHandleAllocator> >, void*, SkSurfaceProps const*)
SkCanvas::SkCanvas(SkIRect const&)
SkCanvas::SkCanvas(int, int, SkSurfaceProps const*)
SkCanvas::SkCanvas(sk_sp<SkBaseDevice>)
SkCanvas::aboutToDraw(SkCanvas*, SkPaint const&, SkRect const*, SkCanvas::CheckForOverwrite, SkCanvas::ShaderOverrideOpacity)
SkCanvas::accessTopLayerPixels(SkImageInfo*, unsigned long*, SkIPoint*)
SkCanvas::accessTopRasterHandle() const
SkCanvas::androidFramework_isClipAA() const
SkCanvas::androidFramework_setDeviceClipRestriction(SkIRect const&)
SkCanvas::canDrawBitmapAsSprite(float, float, int, int, SkSamplingOptions const&, SkPaint const&)
SkCanvas::checkForDeferredSave()
SkCanvas::clipRRect(SkRRect const&, SkClipOp, bool)
SkCanvas::clipRegion(SkRegion const&, SkClipOp)
SkCanvas::clipShader(sk_sp<SkShader>, SkClipOp)
SkCanvas::computeDeviceClipBounds(bool) const
SkCanvas::concat(SkM44 const&)
SkCanvas::convertBlobToSlug(SkTextBlob const&, SkPoint, SkPaint const&)
SkCanvas::doSave()
SkCanvas::drawAnnotation(SkRect const&, char const*, SkData*)
SkCanvas::drawArc(SkRect const&, float, float, bool, SkPaint const&)
SkCanvas::drawAtlas(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkCanvas::drawCircle(float, float, float, SkPaint const&)
SkCanvas::drawClippedToSaveBehind(SkPaint const&)
SkCanvas::drawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkCanvas::drawDrawable(SkDrawable*, SkMatrix const*)
SkCanvas::drawDrawable(SkDrawable*, float, float)
SkCanvas::drawGlyphs(int, unsigned short const*, SkPoint const*, SkPoint, SkFont const&, SkPaint const&)
SkCanvas::drawGlyphs(int, unsigned short const*, SkPoint const*, unsigned int const*, int, char const*, SkPoint, SkFont const&, SkPaint const&)
SkCanvas::drawGlyphs(int, unsigned short const*, SkRSXform const*, SkPoint, SkFont const&, SkPaint const&)
SkCanvas::drawImageLattice(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkCanvas::drawImageNine(SkImage const*, SkIRect const&, SkRect const&, SkFilterMode, SkPaint const*)
SkCanvas::drawMesh(SkMesh const&, sk_sp<SkBlender>, SkPaint const&)
SkCanvas::drawOval(SkRect const&, SkPaint const&)
SkCanvas::drawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkCanvas::drawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkCanvas::drawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkCanvas::drawRRect(SkRRect const&, SkPaint const&)
SkCanvas::drawRegion(SkRegion const&, SkPaint const&)
SkCanvas::drawRoundRect(SkRect const&, float, float, SkPaint const&)
SkCanvas::drawSimpleText(void const*, unsigned long, SkTextEncoding, float, float, SkFont const&, SkPaint const&)
SkCanvas::drawSlug(sktext::gpu::Slug const*)
SkCanvas::drawVertices(SkVertices const*, SkBlendMode, SkPaint const&)
SkCanvas::drawVertices(sk_sp<SkVertices> const&, SkBlendMode, SkPaint const&)
SkCanvas::experimental_DrawEdgeAAImageSet(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkCanvas::experimental_DrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkCanvas::getBaseLayerSize() const
SkCanvas::getBaseProps() const
SkCanvas::getDeviceClipBounds() const
SkCanvas::getLocalClipBounds() const
SkCanvas::getLocalToDevice() const
SkCanvas::getProps(SkSurfaceProps*) const
SkCanvas::getSurface() const
SkCanvas::getTopProps() const
SkCanvas::getTotalMatrix() const
SkCanvas::imageInfo() const
SkCanvas::init(sk_sp<SkBaseDevice>)
SkCanvas::internalConcat44(SkM44 const&)
SkCanvas::internalDrawDeviceWithFilter(SkBaseDevice*, SkBaseDevice*, SkImageFilter const*, SkPaint const&, SkCanvas::DeviceCompatibleWithFilter, float)
SkCanvas::internalDrawPaint(SkPaint const&)
SkCanvas::internalQuickReject(SkRect const&, SkPaint const&, SkMatrix const*)
SkCanvas::internalRestore()
SkCanvas::internalSave()
SkCanvas::internalSaveBehind(SkRect const*)
SkCanvas::internalSaveLayer(SkCanvas::SaveLayerRec const&, SkCanvas::SaveLayerStrategy)
SkCanvas::internalSetMatrix(SkM44 const&)
SkCanvas::internal_private_resetClip()
SkCanvas::isClipEmpty() const
SkCanvas::isClipRect() const
SkCanvas::makeSurface(SkImageInfo const&, SkSurfaceProps const*)
SkCanvas::onAccessTopLayerPixels(SkPixmap*)
SkCanvas::onClipPath(SkPath const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkCanvas::onClipRRect(SkRRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkCanvas::onClipRect(SkRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkCanvas::onClipRegion(SkRegion const&, SkClipOp)
SkCanvas::onClipShader(sk_sp<SkShader>, SkClipOp)
SkCanvas::onConvertGlyphRunListToSlug(sktext::GlyphRunList const&, SkPaint const&)
SkCanvas::onDiscard()
SkCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkCanvas::onDrawBehind(SkPaint const&)
SkCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkCanvas::onDrawGlyphRunList(sktext::GlyphRunList const&, SkPaint const&)
SkCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkCanvas::onDrawMesh(SkMesh const&, sk_sp<SkBlender>, SkPaint const&)
SkCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkCanvas::onDrawPaint(SkPaint const&)
SkCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkCanvas::onDrawSlug(sktext::gpu::Slug const*)
SkCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkCanvas::onFlush()
SkCanvas::onGetProps(SkSurfaceProps*, bool) const
SkCanvas::onImageInfo() const
SkCanvas::onNewSurface(SkImageInfo const&, SkSurfaceProps const&)
SkCanvas::onPeekPixels(SkPixmap*)
SkCanvas::onResetClip()
SkCanvas::only_axis_aligned_saveBehind(SkRect const*)
SkCanvas::peekPixels(SkPixmap*)
SkCanvas::predrawNotify(SkRect const*, SkPaint const*, SkCanvas::ShaderOverrideOpacity)
SkCanvas::predrawNotify(bool)
SkCanvas::private_draw_shadow_rec(SkPath const&, SkDrawShadowRec const&)
SkCanvas::quickReject(SkPath const&) const
SkCanvas::quickReject(SkRect const&) const
SkCanvas::readPixels(SkBitmap const&, int, int)
SkCanvas::readPixels(SkImageInfo const&, void*, unsigned long, int, int)
SkCanvas::readPixels(SkPixmap const&, int, int)
SkCanvas::recorder()
SkCanvas::recordingContext()
SkCanvas::resetForNextPicture(SkIRect const&)
SkCanvas::resetMatrix()
SkCanvas::rotate(float)
SkCanvas::rotate(float, float, float)
SkCanvas::saveLayer(SkCanvas::SaveLayerRec const&)
SkCanvas::saveLayer(SkRect const*, SkPaint const*)
SkCanvas::saveLayerAlphaf(SkRect const*, float)
SkCanvas::setMatrix(SkM44 const&)
SkCanvas::setMatrix(SkMatrix const&)
SkCanvas::skew(float, float)
SkCanvas::temporary_internal_getRgnClip(SkRegion*)
SkCanvas::topDevice() const
SkCanvas::translate(float, float)
SkCanvas::validateClip() const
SkCanvas::wouldOverwriteEntireSurface(SkRect const*, SkPaint const*, SkCanvas::ShaderOverrideOpacity) const
SkCanvas::writePixels(SkBitmap const&, int, int)
SkCanvas::writePixels(SkImageInfo const&, void const*, unsigned long, int, int)
SkCanvasStateUtils::CaptureCanvasState(SkCanvas*)
SkCanvasStateUtils::MakeFromCanvasState(SkCanvasState const*)
SkCanvasStateUtils::ReleaseCanvasState(SkCanvasState*)
SkCapabilities::RasterBackend()
SkCapabilities::initSkCaps(SkSL::ShaderCaps const*)
SkChecksum::Hash64(void const*, unsigned long, unsigned long)
SkCodec::MakeFromData(sk_sp<SkData>, SkPngChunkReader*)
SkCodec::MakeFromStream(std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkCodec::Result*, SkPngChunkReader*, SkCodec::SelectionPolicy)
SkCodec::ResultToString(SkCodec::Result)
SkCodec::SkCodec(SkEncodedInfo&&, skcms_PixelFormat, std::unique_ptr<SkStream, std::default_delete<SkStream> >, SkEncodedOrigin)
SkCodec::applyColorXform(void*, void const*, int) const
SkCodec::conversionSupported(SkImageInfo const&, bool, bool)
SkCodec::fillIncompleteImage(SkImageInfo const&, void*, unsigned long, SkCodec::ZeroInitialized, int, int)
SkCodec::getFrameInfo()
SkCodec::getImage()
SkCodec::getImage(SkImageInfo const&, SkCodec::Options const*)
SkCodec::getPixels(SkImageInfo const&, void*, unsigned long, SkCodec::Options const*)
SkCodec::getScanlines(void*, int, unsigned long)
SkCodec::getYUVAPlanes(SkYUVAPixmaps const&)
SkCodec::handleFrameIndex(SkImageInfo const&, void*, unsigned long, SkCodec::Options const&, std::function<SkCodec::Result (SkImageInfo const&, void*, unsigned long, SkCodec::Options const&, int)>)
SkCodec::initializeColorXform(SkImageInfo const&, SkEncodedInfo::Alpha, bool)
SkCodec::onOutputScanline(int) const
SkCodec::outputScanline(int) const
SkCodec::queryYUVAInfo(SkYUVAPixmapInfo::SupportedDataTypes const&, SkYUVAPixmapInfo*) const
SkCodec::rewindIfNeeded()
SkCodec::setSrcXformFormat(skcms_PixelFormat)
SkCodec::skipScanlines(int)
SkCodec::startIncrementalDecode(SkImageInfo const&, void*, unsigned long, SkCodec::Options const*)
SkCodec::startScanlineDecode(SkImageInfo const&, SkCodec::Options const*)
SkCodec::~SkCodec()
SkColorFilter::Deserialize(void const*, unsigned long, SkDeserialProcs const*)
SkColorFilter::asAColorMatrix(float*) const
SkColorFilter::asAColorMode(unsigned int*, SkBlendMode*) const
SkColorFilter::filterColor(unsigned int) const
SkColorFilter::filterColor4f(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*, SkColorSpace*) const
SkColorFilter::isAlphaUnchanged() const
SkColorFilter::makeComposed(sk_sp<SkColorFilter>) const
SkColorFilters::Blend(SkRGBA4f<(SkAlphaType)3> const&, sk_sp<SkColorSpace>, SkBlendMode)
SkColorFilters::Blend(unsigned int, SkBlendMode)
SkColorFilters::HSLAMatrix(SkColorMatrix const&)
SkColorFilters::HSLAMatrix(float const*)
SkColorFilters::Lerp(float, sk_sp<SkColorFilter>, sk_sp<SkColorFilter>)
SkColorFilters::Lighting(unsigned int, unsigned int)
SkColorFilters::LinearToSRGBGamma()
SkColorFilters::Matrix(float const*)
SkColorFilters::SRGBToLinearGamma()
SkColorFilters::Table(sk_sp<SkColorTable>)
SkColorFilters::Table(unsigned char const*)
SkColorFilters::TableARGB(unsigned char const*, unsigned char const*, unsigned char const*, unsigned char const*)
SkColorInfo::SkColorInfo()
SkColorInfo::SkColorInfo(SkColorInfo const&)
SkColorInfo::SkColorInfo(SkColorType, SkAlphaType, sk_sp<SkColorSpace>)
SkColorInfo::colorSpace() const
SkColorInfo::gammaCloseToSRGB() const
SkColorInfo::makeColorSpace(sk_sp<SkColorSpace>) const
SkColorInfo::makeColorType(SkColorType) const
SkColorInfo::operator!=(SkColorInfo const&) const
SkColorInfo::operator=(SkColorInfo const&)
SkColorInfo::operator=(SkColorInfo&&)
SkColorInfo::operator==(SkColorInfo const&) const
SkColorInfo::refColorSpace() const
SkColorMatrix::RGBtoYUV(SkYUVColorSpace)
SkColorMatrix::YUVtoRGB(SkYUVColorSpace)
SkColorMatrix::postTranslate(float, float, float, float)
SkColorMatrix::setConcat(SkColorMatrix const&, SkColorMatrix const&)
SkColorMatrix::setIdentity()
SkColorMatrix::setSaturation(float)
SkColorMatrix::setScale(float, float, float, float)
SkColorSpace::Deserialize(void const*, unsigned long)
SkColorSpace::Equals(SkColorSpace const*, SkColorSpace const*)
SkColorSpace::Make(skcms_ICCProfile const&)
SkColorSpace::MakeRGB(skcms_TransferFunction const&, skcms_Matrix3x3 const&)
SkColorSpace::MakeSRGB()
SkColorSpace::MakeSRGBLinear()
SkColorSpace::SkColorSpace(skcms_TransferFunction const&, skcms_Matrix3x3 const&)
SkColorSpace::computeLazyDstFields() const
SkColorSpace::gammaCloseToSRGB() const
SkColorSpace::gammaIsLinear() const
SkColorSpace::gamutTransformTo(SkColorSpace const*, skcms_Matrix3x3*) const
SkColorSpace::invTransferFn(skcms_TransferFunction*) const
SkColorSpace::isNumericalTransferFn(skcms_TransferFunction*) const
SkColorSpace::isSRGB() const
SkColorSpace::makeColorSpin() const
SkColorSpace::makeLinearGamma() const
SkColorSpace::makeSRGBGamma() const
SkColorSpace::serialize() const
SkColorSpace::toProfile(skcms_ICCProfile*) const
SkColorSpace::toXYZD50(skcms_Matrix3x3*) const
SkColorSpace::transferFn(float*) const
SkColorSpace::transferFn(skcms_TransferFunction*) const
SkColorSpace::writeToMemory(void*) const
SkColorSpacePrimaries::toXYZD50(skcms_Matrix3x3*) const
SkColorTypeIsAlwaysOpaque(SkColorType)
SkColorTypeValidateAlphaType(SkColorType, SkAlphaType, SkAlphaType*)
SkConic::chopIntoQuadsPOW2(SkPoint*, int) const
SkConic::computeQuadPOW2(float) const
SkContainerAllocator::allocate(int, double)
SkContainerAllocator::growthFactorCapacity(int, double) const
SkContainerAllocator::roundUpCapacity(long) const
SkContourMeasure::Segment::getScalarT() const
SkContourMeasure::SkContourMeasure(SkTDArray<SkContourMeasure::Segment>&&, SkTDArray<SkPoint>&&, float, bool)
SkContourMeasure::distanceToSegment(float, float*) const
SkContourMeasure::getMatrix(float, SkMatrix*, SkContourMeasure::MatrixFlags) const
SkContourMeasure::getPosTan(float, SkPoint*, SkPoint*) const
SkContourMeasure::getSegment(float, float, SkPath*, bool) const
SkContourMeasureIter::Impl::buildSegments()
SkContourMeasureIter::Impl::compute_conic_segs(SkConic const&, float, int, SkPoint const&, int, SkPoint const&, unsigned int)
SkContourMeasureIter::Impl::compute_cubic_segs(SkPoint const*, float, int, int, unsigned int)
SkContourMeasureIter::Impl::compute_line_seg(SkPoint, SkPoint, float, unsigned int)
SkContourMeasureIter::Impl::compute_quad_segs(SkPoint const*, float, int, int, unsigned int)
SkContourMeasureIter::SkContourMeasureIter()
SkContourMeasureIter::SkContourMeasureIter(SkContourMeasureIter&&)
SkContourMeasureIter::SkContourMeasureIter(SkPath const&, bool, float)
SkContourMeasureIter::next()
SkContourMeasureIter::operator=(SkContourMeasureIter&&)
SkContourMeasureIter::reset(SkPath const&, bool, float)
SkContourMeasureIter::~SkContourMeasureIter()
SkCornerPathEffect::Make(float)
SkCornerPathEffect::RegisterFlattenables()
SkCubicMap::SkCubicMap(SkPoint, SkPoint)
SkCubicMap::computeFromT(float) const
SkCubicMap::computeYFromX(float) const
SkCustomTypefaceBuilder::Deserialize(SkStream*)
SkCustomTypefaceBuilder::MakeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, SkFontArguments const&)
SkCustomTypefaceBuilder::SkCustomTypefaceBuilder()
SkCustomTypefaceBuilder::detach()
SkCustomTypefaceBuilder::ensureStorage(unsigned short)
SkCustomTypefaceBuilder::setFontStyle(SkFontStyle)
SkCustomTypefaceBuilder::setGlyph(unsigned short, float, SkPath const&)
SkCustomTypefaceBuilder::setGlyph(unsigned short, float, sk_sp<SkDrawable>, SkRect const&)
SkCustomTypefaceBuilder::setMetrics(SkFontMetrics const&, float)
SkData::MakeEmpty()
SkData::MakeFromFD(int)
SkData::MakeFromFILE(_IO_FILE*)
SkData::MakeFromFileName(char const*)
SkData::MakeFromMalloc(void const*, unsigned long)
SkData::MakeFromStream(SkStream*, unsigned long)
SkData::MakeSubset(SkData const*, unsigned long, unsigned long)
SkData::MakeUninitialized(unsigned long)
SkData::MakeWithCString(char const*)
SkData::MakeWithCopy(void const*, unsigned long)
SkData::MakeWithProc(void const*, unsigned long, void (*)(void const*, void*), void*)
SkData::MakeZeroInitialized(unsigned long)
SkData::NoopReleaseProc(void const*, void*)
SkData::PrivateNewWithCopy(void const*, unsigned long)
SkData::SkData(unsigned long)
SkData::SkData(void const*, unsigned long, void (*)(void const*, void*), void*)
SkData::copyRange(unsigned long, unsigned long, void*) const
SkData::equals(SkData const*) const
SkDataTable::MakeArrayProc(void const*, unsigned long, int, void (*)(void*), void*)
SkDataTable::MakeCopyArray(void const*, unsigned long, int)
SkDataTable::MakeCopyArrays(void const* const*, unsigned long const*, int)
SkDataTable::MakeEmpty()
SkDataTable::SkDataTable()
SkDataTable::SkDataTable(SkDataTable::Dir const*, int, void (*)(void*), void*)
SkDataTable::SkDataTable(void const*, unsigned long, int, void (*)(void*), void*)
SkDataTable::at(int, unsigned long*) const
SkDataTable::atSize(int) const
SkDataTable::~SkDataTable()
SkDebugf(char const*, ...)
SkDeque::Iter::Iter()
SkDeque::Iter::Iter(SkDeque const&, SkDeque::Iter::IterStart)
SkDeque::Iter::next()
SkDeque::Iter::prev()
SkDeque::Iter::reset(SkDeque const&, SkDeque::Iter::IterStart)
SkDeque::SkDeque(unsigned long, int)
SkDeque::SkDeque(unsigned long, void*, unsigned long, int)
SkDeque::allocateBlock(int)
SkDeque::freeBlock(SkDeque::Block*)
SkDeque::numBlocksAllocated() const
SkDeque::pop_back()
SkDeque::pop_front()
SkDeque::push_back()
SkDeque::push_front()
SkDeque::~SkDeque()
SkDiscretePathEffect::Make(float, float, unsigned int)
SkDiscretePathEffect::RegisterFlattenables()
SkDocument::SkDocument(SkWStream*)
SkDocument::abort()
SkDocument::beginPage(float, float, SkRect const*)
SkDocument::close()
SkDocument::endPage()
SkDocument::~SkDocument()
SkDrawable::SkDrawable()
SkDrawable::approximateBytesUsed()
SkDrawable::draw(SkCanvas*, SkMatrix const*)
SkDrawable::draw(SkCanvas*, float, float)
SkDrawable::getBounds()
SkDrawable::getGenerationID()
SkDrawable::makePictureSnapshot()
SkDrawable::notifyDrawingChanged()
SkDrawable::onApproximateBytesUsed()
SkDrawable::onMakePictureSnapshot()
SkDynamicMemoryWStream::SkDynamicMemoryWStream(SkDynamicMemoryWStream&&)
SkDynamicMemoryWStream::bytesWritten() const
SkDynamicMemoryWStream::copyTo(void*) const
SkDynamicMemoryWStream::copyToAndReset(void*)
SkDynamicMemoryWStream::detachAsStream()
SkDynamicMemoryWStream::operator=(SkDynamicMemoryWStream&&)
SkDynamicMemoryWStream::padToAlign4()
SkDynamicMemoryWStream::prependToAndReset(SkDynamicMemoryWStream*)
SkDynamicMemoryWStream::read(void*, unsigned long, unsigned long)
SkDynamicMemoryWStream::reset()
SkDynamicMemoryWStream::write(void const*, unsigned long)
SkDynamicMemoryWStream::writeToAndReset(SkDynamicMemoryWStream*)
SkDynamicMemoryWStream::writeToAndReset(SkWStream*)
SkDynamicMemoryWStream::writeToStream(SkWStream*) const
SkEncoder::encodeRows(int)
SkEventTracer::GetInstance()
SkEventTracer::SetInstance(SkEventTracer*, bool)
SkExecutor::GetDefault()
SkExecutor::MakeFIFOThreadPool(int, bool)
SkExecutor::MakeLIFOThreadPool(int, bool)
SkExecutor::SetDefault(SkExecutor*)
SkExecutor::~SkExecutor()
SkFILEStream::SkFILEStream(_IO_FILE*)
SkFILEStream::SkFILEStream(_IO_FILE*, unsigned long)
SkFILEStream::SkFILEStream(_IO_FILE*, unsigned long, unsigned long)
SkFILEStream::SkFILEStream(char const*)
SkFILEStream::SkFILEStream(std::shared_ptr<_IO_FILE>, unsigned long, unsigned long)
SkFILEStream::SkFILEStream(std::shared_ptr<_IO_FILE>, unsigned long, unsigned long, unsigned long)
SkFILEStream::close()
SkFILEStream::getLength() const
SkFILEStream::getPosition() const
SkFILEStream::isAtEnd() const
SkFILEStream::move(long)
SkFILEStream::onDuplicate() const
SkFILEStream::onFork() const
SkFILEStream::read(void*, unsigned long)
SkFILEStream::rewind()
SkFILEStream::seek(unsigned long)
SkFILEStream::~SkFILEStream()
SkFILEWStream::SkFILEWStream(char const*)
SkFILEWStream::bytesWritten() const
SkFILEWStream::flush()
SkFILEWStream::fsync()
SkFILEWStream::write(void const*, unsigned long)
SkFILEWStream::~SkFILEWStream()
SkFlattenable::Deserialize(SkFlattenable::Type, void const*, unsigned long, SkDeserialProcs const*)
SkFlattenable::FactoryToName(sk_sp<SkFlattenable> (*)(SkReadBuffer&))
SkFlattenable::Finalize()
SkFlattenable::NameToFactory(char const*)
SkFlattenable::PrivateInitializer::InitEffects()
SkFlattenable::PrivateInitializer::InitImageFilters()
SkFlattenable::Register(char const*, sk_sp<SkFlattenable> (*)(SkReadBuffer&))
SkFlattenable::RegisterFlattenablesIfNeeded()
SkFlattenable::serialize(SkSerialProcs const*) const
SkFlattenable::serialize(void*, unsigned long, SkSerialProcs const*) const
SkFont::SkFont()
SkFont::SkFont(sk_sp<SkTypeface>, float)
SkFont::SkFont(sk_sp<SkTypeface>, float, float, float)
SkFont::dump() const
SkFont::getIntercepts(unsigned short const*, int, SkPoint const*, float, float, SkPaint const*) const
SkFont::getMetrics(SkFontMetrics*) const
SkFont::getPath(unsigned short, SkPath*) const
SkFont::getPaths(unsigned short const*, int, void (*)(SkPath const*, SkMatrix const&, void*), void*) const
SkFont::getPos(unsigned short const*, int, SkPoint*, SkPoint) const
SkFont::getTypefaceOrDefault() const
SkFont::getWidthsBounds(unsigned short const*, int, float*, SkRect*, SkPaint const*) const
SkFont::getXPos(unsigned short const*, int, float*, float) const
SkFont::hasSomeAntiAliasing() const
SkFont::makeWithSize(float) const
SkFont::measureText(void const*, unsigned long, SkTextEncoding, SkRect*, SkPaint const*) const
SkFont::operator==(SkFont const&) const
SkFont::refTypefaceOrDefault() const
SkFont::setBaselineSnap(bool)
SkFont::setEmbeddedBitmaps(bool)
SkFont::setForceAutoHinting(bool)
SkFont::setLinearMetrics(bool)
SkFont::setupForAsPaths(SkPaint*)
SkFont::textToGlyphs(void const*, unsigned long, SkTextEncoding, unsigned short*, int) const
SkFont::unicharToGlyph(int) const
SkFont::unicharsToGlyphs(int const*, int, unsigned short*) const
SkFontConfigInterface::FontIdentity::readFromMemory(void const*, unsigned long)
SkFontConfigInterface::FontIdentity::writeToMemory(void*) const
SkFontConfigInterface::GetSingletonDirectInterface()
SkFontConfigInterface::RefGlobal()
SkFontConfigInterface::SetGlobal(sk_sp<SkFontConfigInterface>)
SkFontMgr::Factory()
SkFontMgr::RefDefault()
SkFontMgr::RefEmpty()
SkFontMgr::countFamilies() const
SkFontMgr::createStyleSet(int) const
SkFontMgr::getFamilyName(int, SkString*) const
SkFontMgr::legacyMakeTypeface(char const*, SkFontStyle) const
SkFontMgr::makeFromData(sk_sp<SkData>, int) const
SkFontMgr::makeFromFile(char const*, int) const
SkFontMgr::makeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, SkFontArguments const&) const
SkFontMgr::makeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, int) const
SkFontMgr::matchFamily(char const*) const
SkFontMgr::matchFamilyStyle(char const*, SkFontStyle const&) const
SkFontMgr::matchFamilyStyleCharacter(char const*, SkFontStyle const&, char const**, int, int) const
SkFontMgr_New_FCI(sk_sp<SkFontConfigInterface>)
SkFontStyleSet::CreateEmpty()
SkFontStyleSet::matchStyleCSS3(SkFontStyle const&)
SkGradientShader::MakeLinear(SkPoint const*, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, SkGradientShader::Interpolation const&, SkMatrix const*)
SkGradientShader::MakeRadial(SkPoint const&, float, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, SkGradientShader::Interpolation const&, SkMatrix const*)
SkGradientShader::MakeSweep(float, float, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, float, float, SkGradientShader::Interpolation const&, SkMatrix const*)
SkGradientShader::MakeSweep(float, float, unsigned int const*, float const*, int, SkTileMode, float, float, unsigned int, SkMatrix const*)
SkGradientShader::MakeTwoPointConical(SkPoint const&, float, SkPoint const&, float, SkRGBA4f<(SkAlphaType)3> const*, sk_sp<SkColorSpace>, float const*, int, SkTileMode, SkGradientShader::Interpolation const&, SkMatrix const*)
SkGradientShader::MakeTwoPointConical(SkPoint const&, float, SkPoint const&, float, unsigned int const*, float const*, int, SkTileMode, unsigned int, SkMatrix const*)
SkGraphics::AllowJIT()
SkGraphics::DumpMemoryStatistics(SkTraceMemoryDump*)
SkGraphics::GetFontCacheCountLimit()
SkGraphics::GetFontCacheCountUsed()
SkGraphics::GetFontCacheLimit()
SkGraphics::GetFontCacheUsed()
SkGraphics::GetOpenTypeSVGDecoderFactory()
SkGraphics::GetResourceCacheSingleAllocationByteLimit()
SkGraphics::GetResourceCacheTotalByteLimit()
SkGraphics::GetResourceCacheTotalBytesUsed()
SkGraphics::PurgeAllCaches()
SkGraphics::PurgeFontCache()
SkGraphics::PurgePinnedFontCache()
SkGraphics::PurgeResourceCache()
SkGraphics::SetFontCacheCountLimit(int)
SkGraphics::SetFontCacheLimit(unsigned long)
SkGraphics::SetImageGeneratorFromEncodedDataFactory(std::unique_ptr<SkImageGenerator, std::default_delete<SkImageGenerator> > (*)(sk_sp<SkData>))
SkGraphics::SetOpenTypeSVGDecoderFactory(std::unique_ptr<SkOpenTypeSVGDecoder, std::default_delete<SkOpenTypeSVGDecoder> > (*)(unsigned char const*, unsigned long))
SkGraphics::SetResourceCacheSingleAllocationByteLimit(unsigned long)
SkGraphics::SetResourceCacheTotalByteLimit(unsigned long)
SkHSVToColor(unsigned int, float const*)
SkHighContrastFilter::Make(SkHighContrastConfig const&)
SkICCFloatToTable16(float, unsigned char*)
SkICCFloatXYZD50ToGrid16Lab(float const*, unsigned char*)
SkImage::SkImage(SkImageInfo const&, unsigned int)
SkImage::alphaType() const
SkImage::asLegacyBitmap(SkBitmap*, SkImage::LegacyBitmapMode) const
SkImage::asyncRescaleAndReadPixels(SkImageInfo const&, SkIRect const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*) const
SkImage::asyncRescaleAndReadPixelsYUV420(SkYUVColorSpace, sk_sp<SkColorSpace>, SkIRect const&, SkISize const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*) const
SkImage::colorSpace() const
SkImage::colorType() const
SkImage::hasMipmaps() const
SkImage::isAlphaOnly() const
SkImage::makeColorSpace(sk_sp<SkColorSpace>, GrDirectContext*) const
SkImage::makeColorTypeAndColorSpace(SkColorType, sk_sp<SkColorSpace>, GrDirectContext*) const
SkImage::makeNonTextureImage(GrDirectContext*) const
SkImage::makeRasterImage(GrDirectContext*, SkImage::CachingHint) const
SkImage::makeRawShader(SkSamplingOptions const&, SkMatrix const&) const
SkImage::makeRawShader(SkSamplingOptions const&, SkMatrix const*) const
SkImage::makeRawShader(SkTileMode, SkTileMode, SkSamplingOptions const&, SkMatrix const&) const
SkImage::makeRawShader(SkTileMode, SkTileMode, SkSamplingOptions const&, SkMatrix const*) const
SkImage::makeShader(SkSamplingOptions const&, SkMatrix const&) const
SkImage::makeShader(SkTileMode, SkTileMode, SkSamplingOptions const&, SkMatrix const&) const
SkImage::makeShader(SkTileMode, SkTileMode, SkSamplingOptions const&, SkMatrix const*) const
SkImage::readPixels(GrDirectContext*, SkImageInfo const&, void*, unsigned long, int, int, SkImage::CachingHint) const
SkImage::readPixels(GrDirectContext*, SkPixmap const&, int, int, SkImage::CachingHint) const
SkImage::readPixels(SkImageInfo const&, void*, unsigned long, int, int, SkImage::CachingHint) const
SkImage::readPixels(SkPixmap const&, int, int, SkImage::CachingHint) const
SkImage::refColorSpace() const
SkImage::refEncodedData() const
SkImage::reinterpretColorSpace(sk_sp<SkColorSpace>) const
SkImage::scalePixels(SkPixmap const&, SkSamplingOptions const&, SkImage::CachingHint) const
SkImage::withDefaultMipmaps() const
SkImage::withMipmaps(sk_sp<SkMipmap>) const
SkImageFilter::asAColorFilter(SkColorFilter**) const
SkImageFilter::canComputeFastBounds() const
SkImageFilter::computeFastBounds(SkRect const&) const
SkImageFilter::countInputs() const
SkImageFilter::filterBounds(SkIRect const&, SkMatrix const&, SkImageFilter::MapDirection, SkIRect const*) const
SkImageFilter::getInput(int) const
SkImageFilter::isColorFilterNode(SkColorFilter**) const
SkImageFilter::makeWithLocalMatrix(SkMatrix const&) const
SkImageFilters::Arithmetic(float, float, float, float, bool, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Blend(SkBlendMode, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Blend(sk_sp<SkBlender>, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Blur(float, float, SkTileMode, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::ColorFilter(sk_sp<SkColorFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Compose(sk_sp<SkImageFilter>, sk_sp<SkImageFilter>)
SkImageFilters::Dilate(float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DisplacementMap(SkColorChannel, SkColorChannel, float, sk_sp<SkImageFilter>, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DistantLitDiffuse(SkPoint3 const&, unsigned int, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DistantLitSpecular(SkPoint3 const&, unsigned int, float, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DropShadow(float, float, float, float, unsigned int, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::DropShadowOnly(float, float, float, float, unsigned int, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Erode(float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Image(sk_sp<SkImage>, SkRect const&, SkRect const&, SkSamplingOptions const&)
SkImageFilters::Magnifier(SkRect const&, float, float, SkSamplingOptions const&, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::MatrixConvolution(SkISize const&, float const*, float, float, SkIPoint const&, SkTileMode, bool, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::MatrixTransform(SkMatrix const&, SkSamplingOptions const&, sk_sp<SkImageFilter>)
SkImageFilters::Merge(sk_sp<SkImageFilter>*, int, SkImageFilters::CropRect const&)
SkImageFilters::Offset(float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Picture(sk_sp<SkPicture>, SkRect const&)
SkImageFilters::PointLitDiffuse(SkPoint3 const&, unsigned int, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::PointLitSpecular(SkPoint3 const&, unsigned int, float, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::RuntimeShader(SkRuntimeShaderBuilder const&, float, std::basic_string_view<char, std::char_traits<char> >*, sk_sp<SkImageFilter> const*, int)
SkImageFilters::RuntimeShader(SkRuntimeShaderBuilder const&, float, std::basic_string_view<char, std::char_traits<char> >, sk_sp<SkImageFilter>)
SkImageFilters::Shader(sk_sp<SkShader>, SkImageFilters::Dither, SkImageFilters::CropRect const&)
SkImageFilters::SpotLitDiffuse(SkPoint3 const&, SkPoint3 const&, float, float, unsigned int, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::SpotLitSpecular(SkPoint3 const&, SkPoint3 const&, float, float, unsigned int, float, float, float, sk_sp<SkImageFilter>, SkImageFilters::CropRect const&)
SkImageFilters::Tile(SkRect const&, SkRect const&, sk_sp<SkImageFilter>)
SkImageGenerator::SkImageGenerator(SkImageInfo const&, unsigned int)
SkImageGenerator::getPixels(SkImageInfo const&, void*, unsigned long)
SkImageGenerator::getYUVAPlanes(SkYUVAPixmaps const&)
SkImageGenerator::queryYUVAInfo(SkYUVAPixmapInfo::SupportedDataTypes const&, SkYUVAPixmapInfo*) const
SkImageInfo::Make(SkISize, SkColorType, SkAlphaType)
SkImageInfo::Make(SkISize, SkColorType, SkAlphaType, sk_sp<SkColorSpace>)
SkImageInfo::Make(int, int, SkColorType, SkAlphaType, sk_sp<SkColorSpace>)
SkImageInfo::MakeA8(SkISize)
SkImageInfo::MakeN32(int, int, SkAlphaType)
SkImageInfo::MakeN32(int, int, SkAlphaType, sk_sp<SkColorSpace>)
SkImageInfo::MakeN32Premul(SkISize)
SkImageInfo::MakeN32Premul(SkISize, sk_sp<SkColorSpace>)
SkImageInfo::MakeN32Premul(int, int)
SkImageInfo::MakeN32Premul(int, int, sk_sp<SkColorSpace>)
SkImageInfo::colorSpace() const
SkImageInfo::computeByteSize(unsigned long) const
SkImageInfo::makeColorSpace(sk_sp<SkColorSpace>) const
SkImageInfo::refColorSpace() const
SkImage_Base::SkImage_Base(SkImageInfo const&, unsigned int)
SkImage_Base::filterSpecialImage(skif::Context, SkImageFilter_Base const*, SkSpecialImage const*, SkIRect const&, SkIRect const&, SkIRect*, SkIPoint*) const
SkImage_Base::makeColorSpace(GrDirectContext*, sk_sp<SkColorSpace>) const
SkImage_Base::makeColorSpace(skgpu::graphite::Recorder*, sk_sp<SkColorSpace>, SkImage::RequiredProperties) const
SkImage_Base::makeColorTypeAndColorSpace(GrDirectContext*, SkColorType, sk_sp<SkColorSpace>) const
SkImage_Base::makeColorTypeAndColorSpace(skgpu::graphite::Recorder*, SkColorType, sk_sp<SkColorSpace>, SkImage::RequiredProperties) const
SkImage_Base::makeSubset(GrDirectContext*, SkIRect const&) const
SkImage_Base::makeSubset(skgpu::graphite::Recorder*, SkIRect const&, SkImage::RequiredProperties) const
SkImage_Base::makeWithFilter(GrRecordingContext*, SkImageFilter const*, SkIRect const&, SkIRect const&, SkIRect*, SkIPoint*) const
SkImage_Base::onAsLegacyBitmap(GrDirectContext*, SkBitmap*) const
SkImage_Base::onAsyncRescaleAndReadPixels(SkImageInfo const&, SkIRect, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*) const
SkImage_Base::onAsyncRescaleAndReadPixelsYUV420(SkYUVColorSpace, sk_sp<SkColorSpace>, SkIRect, SkISize, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*) const
SkImage_Base::~SkImage_Base()
SkImages::AdoptTextureFrom(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkColorType)
SkImages::AdoptTextureFrom(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkColorType, SkAlphaType)
SkImages::AdoptTextureFrom(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>)
SkImages::BorrowTextureFrom(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>, void (*)(void*), void*)
SkImages::CrossContextTextureFromPixmap(GrDirectContext*, SkPixmap const&, bool, bool)
SkImages::DeferredFromEncodedData(sk_sp<SkData>, std::optional<SkAlphaType>)
SkImages::DeferredFromGenerator(std::unique_ptr<SkImageGenerator, std::default_delete<SkImageGenerator> >)
SkImages::DeferredFromPicture(sk_sp<SkPicture>, SkISize const&, SkMatrix const*, SkPaint const*, SkImages::BitDepth, sk_sp<SkColorSpace>)
SkImages::DeferredFromPicture(sk_sp<SkPicture>, SkISize const&, SkMatrix const*, SkPaint const*, SkImages::BitDepth, sk_sp<SkColorSpace>, SkSurfaceProps)
SkImages::GetBackendTextureFromImage(SkImage const*, GrBackendTexture*, bool, GrSurfaceOrigin*)
SkImages::MakeBackendTextureFromImage(GrDirectContext*, sk_sp<SkImage>, GrBackendTexture*, std::function<void (GrBackendTexture)>*)
SkImages::PinnableRasterFromBitmap(SkBitmap const&)
SkImages::PromiseTextureFrom(sk_sp<GrContextThreadSafeProxy>, GrBackendFormat const&, SkISize, skgpu::Mipmapped, GrSurfaceOrigin, SkColorType, SkAlphaType, sk_sp<SkColorSpace>, sk_sp<GrPromiseImageTexture> (*)(void*), void (*)(void*), void*)
SkImages::PromiseTextureFromYUVA(sk_sp<GrContextThreadSafeProxy>, GrYUVABackendTextureInfo const&, sk_sp<SkColorSpace>, sk_sp<GrPromiseImageTexture> (*)(void*), void (*)(void*), void**)
SkImages::RasterFromCompressedTextureData(sk_sp<SkData>, int, int, SkTextureCompressionType)
SkImages::RasterFromData(SkImageInfo const&, sk_sp<SkData>, unsigned long)
SkImages::RasterFromPixmap(SkPixmap const&, void (*)(void const*, void*), void*)
SkImages::RasterFromPixmapCopy(SkPixmap const&)
SkImages::SubsetTextureFrom(GrDirectContext*, SkImage const*, SkIRect const&)
SkImages::TextureFromCompressedTexture(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, SkAlphaType, sk_sp<SkColorSpace>, void (*)(void*), void*)
SkImages::TextureFromCompressedTextureData(GrDirectContext*, sk_sp<SkData>, int, int, SkTextureCompressionType, skgpu::Mipmapped, skgpu::Protected)
SkImages::TextureFromImage(GrDirectContext*, SkImage const*, skgpu::Mipmapped, skgpu::Budgeted)
SkImages::TextureFromYUVAPixmaps(GrRecordingContext*, SkYUVAPixmaps const&, skgpu::Mipmapped, bool)
SkImages::TextureFromYUVAPixmaps(GrRecordingContext*, SkYUVAPixmaps const&, skgpu::Mipmapped, bool, sk_sp<SkColorSpace>)
SkImages::TextureFromYUVATextures(GrRecordingContext*, GrYUVABackendTextures const&)
SkImages::TextureFromYUVATextures(GrRecordingContext*, GrYUVABackendTextures const&, sk_sp<SkColorSpace>, void (*)(void*), void*)
SkLatticeIter::SkLatticeIter(SkCanvas::Lattice const&, SkRect const&)
SkLatticeIter::SkLatticeIter(int, int, SkIRect const&, SkRect const&)
SkLatticeIter::Valid(int, int, SkCanvas::Lattice const&)
SkLatticeIter::Valid(int, int, SkIRect const&)
SkLatticeIter::mapDstScaleTranslate(SkMatrix const&)
SkLatticeIter::next(SkIRect*, SkRect*, bool*, unsigned int*)
SkLine2DPathEffect::Make(float, SkMatrix const&)
SkLine2DPathEffect::RegisterFlattenables()
SkLumaColorFilter::Make()
SkM44::LookAt(SkV3 const&, SkV3 const&, SkV3 const&)
SkM44::Perspective(float, float, float)
SkM44::RectToRect(SkRect const&, SkRect const&)
SkM44::dump() const
SkM44::getRowMajor(float*) const
SkM44::invert(SkM44*) const
SkM44::map(float, float, float, float) const
SkM44::normalizePerspective()
SkM44::operator==(SkM44 const&) const
SkM44::postTranslate(float, float, float)
SkM44::preConcat(SkMatrix const&)
SkM44::preScale(float, float)
SkM44::preScale(float, float, float)
SkM44::preTranslate(float, float, float)
SkM44::setConcat(SkM44 const&, SkM44 const&)
SkM44::setRotate(SkV3, float)
SkM44::setRotateUnitSinCos(SkV3, float, float)
SkM44::transpose() const
SkMakeCropImageFilter(SkRect const&, sk_sp<SkImageFilter>)
SkMakeImageFromRasterBitmap(SkBitmap const&, SkCopyPixelsMode)
SkMakeMultiPictureDocument(SkWStream*, SkSerialProcs const*, std::function<void (SkPicture const*)>)
SkMakeNullCanvas()
SkMallocPixelRef::MakeAllocate(SkImageInfo const&, unsigned long)
SkMallocPixelRef::MakeWithData(SkImageInfo const&, unsigned long, sk_sp<SkData>)
SkMaskFilter::Deserialize(void const*, unsigned long, SkDeserialProcs const*)
SkMaskFilter::MakeBlur(SkBlurStyle, float, bool)
SkMaskFilter::RegisterFlattenables()
SkMaskFilter::approximateFilteredBounds(SkRect const&) const
SkMatrix::Affine_vpts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::ComputeInv(float*, float const*, double, bool)
SkMatrix::I()
SkMatrix::Identity_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Identity_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::InvalidMatrix()
SkMatrix::Persp_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Persp_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::Poly2Proc(SkPoint const*, SkMatrix*)
SkMatrix::Poly3Proc(SkPoint const*, SkMatrix*)
SkMatrix::Poly4Proc(SkPoint const*, SkMatrix*)
SkMatrix::RotTrans_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::Rot_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::ScaleTrans_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::Scale_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Scale_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::SetAffineIdentity(float*)
SkMatrix::Trans_pts(SkMatrix const&, SkPoint*, SkPoint const*, int)
SkMatrix::Trans_xy(SkMatrix const&, float, float, SkPoint*)
SkMatrix::asAffine(float*) const
SkMatrix::computePerspectiveTypeMask() const
SkMatrix::decomposeScale(SkSize*, SkMatrix*) const
SkMatrix::doNormalizePerspective()
SkMatrix::dump() const
SkMatrix::getMaxScale() const
SkMatrix::getMinMaxScales(float*) const
SkMatrix::getMinScale() const
SkMatrix::invertNonIdentity(SkMatrix*) const
SkMatrix::isSimilarity(float) const
SkMatrix::mapHomogeneousPoints(SkPoint3*, SkPoint const*, int) const
SkMatrix::mapHomogeneousPoints(SkPoint3*, SkPoint3 const*, int) const
SkMatrix::mapPoints(SkPoint*, SkPoint const*, int) const
SkMatrix::mapRadius(float) const
SkMatrix::mapRect(SkRect*, SkRect const&, SkApplyPerspectiveClip) const
SkMatrix::mapRectScaleTranslate(SkRect*, SkRect const&) const
SkMatrix::mapVectors(SkPoint*, SkPoint const*, int) const
SkMatrix::mapXY(float, float, SkPoint*) const
SkMatrix::postConcat(SkMatrix const&)
SkMatrix::postIDiv(int, int)
SkMatrix::postRotate(float)
SkMatrix::postRotate(float, float, float)
SkMatrix::postScale(float, float, float, float)
SkMatrix::postSkew(float, float)
SkMatrix::postSkew(float, float, float, float)
SkMatrix::postTranslate(float, float)
SkMatrix::preConcat(SkMatrix const&)
SkMatrix::preRotate(float)
SkMatrix::preRotate(float, float, float)
SkMatrix::preScale(float, float)
SkMatrix::preScale(float, float, float, float)
SkMatrix::preSkew(float, float)
SkMatrix::preSkew(float, float, float, float)
SkMatrix::preTranslate(float, float)
SkMatrix::preservesRightAngles(float) const
SkMatrix::readFromMemory(void const*, unsigned long)
SkMatrix::reset()
SkMatrix::set9(float const*)
SkMatrix::setAffine(float const*)
SkMatrix::setPolyToPoly(SkPoint const*, SkPoint const*, int)
SkMatrix::setRSXform(SkRSXform const&)
SkMatrix::setRectToRect(SkRect const&, SkRect const&, SkMatrix::ScaleToFit)
SkMatrix::setRotate(float, float, float)
SkMatrix::setScale(float, float, float, float)
SkMatrix::setSinCos(float, float)
SkMatrix::setSinCos(float, float, float, float)
SkMatrix::setSkew(float, float)
SkMatrix::setSkew(float, float, float, float)
SkMatrix::writeToMemory(void*) const
SkMatrixPathEffect::Make(SkMatrix const&)
SkMatrixPathEffect::MakeTranslate(float, float)
SkMemoryStream::Make(sk_sp<SkData>)
SkMemoryStream::MakeCopy(void const*, unsigned long)
SkMemoryStream::MakeDirect(void const*, unsigned long)
SkMemoryStream::SkMemoryStream()
SkMemoryStream::SkMemoryStream(sk_sp<SkData>)
SkMemoryStream::SkMemoryStream(unsigned long)
SkMemoryStream::SkMemoryStream(void const*, unsigned long, bool)
SkMemoryStream::getAtPos()
SkMemoryStream::getLength() const
SkMemoryStream::getMemoryBase()
SkMemoryStream::getPosition() const
SkMemoryStream::isAtEnd() const
SkMemoryStream::move(long)
SkMemoryStream::onDuplicate() const
SkMemoryStream::onFork() const
SkMemoryStream::peek(void*, unsigned long) const
SkMemoryStream::read(void*, unsigned long)
SkMemoryStream::rewind()
SkMemoryStream::seek(unsigned long)
SkMemoryStream::setData(sk_sp<SkData>)
SkMemoryStream::setMemory(void const*, unsigned long, bool)
SkMemoryStream::setMemoryOwned(void const*, unsigned long)
SkMemoryStream::skipToAlign4()
SkMergePathEffect::Make(sk_sp<SkPathEffect>, sk_sp<SkPathEffect>, SkPathOp)
SkMultiPictureDocumentRead(SkStreamSeekable*, SkDocumentPage*, int, SkDeserialProcs const*)
SkMultiPictureDocumentReadPageCount(SkStreamSeekable*)
SkNWayCanvas::SkNWayCanvas(int, int)
SkNWayCanvas::addCanvas(SkCanvas*)
SkNWayCanvas::didConcat44(SkM44 const&)
SkNWayCanvas::didScale(float, float)
SkNWayCanvas::didSetM44(SkM44 const&)
SkNWayCanvas::didTranslate(float, float)
SkNWayCanvas::getSaveLayerStrategy(SkCanvas::SaveLayerRec const&)
SkNWayCanvas::onClipPath(SkPath const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkNWayCanvas::onClipRRect(SkRRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkNWayCanvas::onClipRect(SkRect const&, SkClipOp, SkCanvas::ClipEdgeStyle)
SkNWayCanvas::onClipRegion(SkRegion const&, SkClipOp)
SkNWayCanvas::onClipShader(sk_sp<SkShader>, SkClipOp)
SkNWayCanvas::onDoSaveBehind(SkRect const*)
SkNWayCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkNWayCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkNWayCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkNWayCanvas::onDrawBehind(SkPaint const&)
SkNWayCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkNWayCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkNWayCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkNWayCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkNWayCanvas::onDrawGlyphRunList(sktext::GlyphRunList const&, SkPaint const&)
SkNWayCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkNWayCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkNWayCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkNWayCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkNWayCanvas::onDrawPaint(SkPaint const&)
SkNWayCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkNWayCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkNWayCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkNWayCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkNWayCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkNWayCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkNWayCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkNWayCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkNWayCanvas::onDrawSlug(sktext::gpu::Slug const*)
SkNWayCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkNWayCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkNWayCanvas::onFlush()
SkNWayCanvas::onResetClip()
SkNWayCanvas::removeAll()
SkNWayCanvas::removeCanvas(SkCanvas*)
SkNWayCanvas::willRestore()
SkNWayCanvas::willSave()
SkNWayCanvas::~SkNWayCanvas()
SkNoDrawCanvas::SkNoDrawCanvas(SkIRect const&)
SkNoDrawCanvas::SkNoDrawCanvas(int, int)
SkNoDrawCanvas::SkNoDrawCanvas(sk_sp<SkBaseDevice>)
SkNoDrawCanvas::getSaveLayerStrategy(SkCanvas::SaveLayerRec const&)
SkNoDrawCanvas::onDoSaveBehind(SkRect const*)
SkOSFile::Iter::Iter()
SkOSFile::Iter::Iter(char const*, char const*)
SkOSFile::Iter::next(SkString*, bool)
SkOSFile::Iter::reset(char const*, char const*)
SkOSFile::Iter::~Iter()
SkOpBuilder::FixWinding(SkPath*)
SkOpBuilder::ReversePath(SkPath*)
SkOpBuilder::add(SkPath const&, SkPathOp)
SkOpBuilder::reset()
SkOpBuilder::resolve(SkPath*)
SkOrderedFontMgr::SkOrderedFontMgr()
SkOrderedFontMgr::append(sk_sp<SkFontMgr>)
SkOrderedFontMgr::onCountFamilies() const
SkOrderedFontMgr::onCreateStyleSet(int) const
SkOrderedFontMgr::onGetFamilyName(int, SkString*) const
SkOrderedFontMgr::onLegacyMakeTypeface(char const*, SkFontStyle) const
SkOrderedFontMgr::onMakeFromData(sk_sp<SkData>, int) const
SkOrderedFontMgr::onMakeFromFile(char const*, int) const
SkOrderedFontMgr::onMakeFromStreamArgs(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, SkFontArguments const&) const
SkOrderedFontMgr::onMakeFromStreamIndex(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, int) const
SkOrderedFontMgr::onMatchFamily(char const*) const
SkOrderedFontMgr::onMatchFamilyStyle(char const*, SkFontStyle const&) const
SkOrderedFontMgr::onMatchFamilyStyleCharacter(char const*, SkFontStyle const&, char const**, int, int) const
SkOrderedFontMgr::~SkOrderedFontMgr()
SkOverdrawCanvas::SkOverdrawCanvas(SkCanvas*)
SkOverdrawCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkOverdrawCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkOverdrawCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkOverdrawCanvas::onDrawBehind(SkPaint const&)
SkOverdrawCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkOverdrawCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkOverdrawCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkOverdrawCanvas::onDrawGlyphRunList(sktext::GlyphRunList const&, SkPaint const&)
SkOverdrawCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkOverdrawCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkOverdrawCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkOverdrawCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawPaint(SkPaint const&)
SkOverdrawCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkOverdrawCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkOverdrawCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkOverdrawCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkOverdrawCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkOverdrawCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkOverdrawCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkOverdrawCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkOverdrawCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkOverdrawColorFilter::MakeWithSkColors(unsigned int const*)
SkPaint::SkPaint(SkPaint const&)
SkPaint::SkPaint(SkPaint&&)
SkPaint::SkPaint(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*)
SkPaint::asBlendMode() const
SkPaint::canComputeFastBounds() const
SkPaint::computeFastBounds(SkRect const&, SkRect*) const
SkPaint::doComputeFastBounds(SkRect const&, SkRect*, SkPaint::Style) const
SkPaint::getBlendMode_or(SkBlendMode) const
SkPaint::isSrcOver() const
SkPaint::nothingToDraw() const
SkPaint::operator=(SkPaint const&)
SkPaint::operator=(SkPaint&&)
SkPaint::refBlender() const
SkPaint::refColorFilter() const
SkPaint::refImageFilter() const
SkPaint::refMaskFilter() const
SkPaint::refPathEffect() const
SkPaint::reset()
SkPaint::setARGB(unsigned int, unsigned int, unsigned int, unsigned int)
SkPaint::setAlphaf(float)
SkPaint::setColor(SkRGBA4f<(SkAlphaType)3> const&, SkColorSpace*)
SkPaint::setImageFilter(sk_sp<SkImageFilter>)
SkPaint::setMaskFilter(sk_sp<SkMaskFilter>)
SkPaint::setStroke(bool)
SkPaintFilterCanvas::SkPaintFilterCanvas(SkCanvas*)
SkPaintFilterCanvas::onAccessTopLayerPixels(SkPixmap*)
SkPaintFilterCanvas::onDrawAnnotation(SkRect const&, char const*, SkData*)
SkPaintFilterCanvas::onDrawArc(SkRect const&, float, float, bool, SkPaint const&)
SkPaintFilterCanvas::onDrawAtlas2(SkImage const*, SkRSXform const*, SkRect const*, unsigned int const*, int, SkBlendMode, SkSamplingOptions const&, SkRect const*, SkPaint const*)
SkPaintFilterCanvas::onDrawBehind(SkPaint const&)
SkPaintFilterCanvas::onDrawDRRect(SkRRect const&, SkRRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawDrawable(SkDrawable*, SkMatrix const*)
SkPaintFilterCanvas::onDrawEdgeAAImageSet2(SkCanvas::ImageSetEntry const*, int, SkPoint const*, SkMatrix const*, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkPaintFilterCanvas::onDrawEdgeAAQuad(SkRect const&, SkPoint const*, SkCanvas::QuadAAFlags, SkRGBA4f<(SkAlphaType)3> const&, SkBlendMode)
SkPaintFilterCanvas::onDrawGlyphRunList(sktext::GlyphRunList const&, SkPaint const&)
SkPaintFilterCanvas::onDrawImage2(SkImage const*, float, float, SkSamplingOptions const&, SkPaint const*)
SkPaintFilterCanvas::onDrawImageLattice2(SkImage const*, SkCanvas::Lattice const&, SkRect const&, SkFilterMode, SkPaint const*)
SkPaintFilterCanvas::onDrawImageRect2(SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkPaintFilterCanvas::onDrawOval(SkRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawPaint(SkPaint const&)
SkPaintFilterCanvas::onDrawPatch(SkPoint const*, unsigned int const*, SkPoint const*, SkBlendMode, SkPaint const&)
SkPaintFilterCanvas::onDrawPath(SkPath const&, SkPaint const&)
SkPaintFilterCanvas::onDrawPicture(SkPicture const*, SkMatrix const*, SkPaint const*)
SkPaintFilterCanvas::onDrawPoints(SkCanvas::PointMode, unsigned long, SkPoint const*, SkPaint const&)
SkPaintFilterCanvas::onDrawRRect(SkRRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawRect(SkRect const&, SkPaint const&)
SkPaintFilterCanvas::onDrawRegion(SkRegion const&, SkPaint const&)
SkPaintFilterCanvas::onDrawShadowRec(SkPath const&, SkDrawShadowRec const&)
SkPaintFilterCanvas::onDrawTextBlob(SkTextBlob const*, float, float, SkPaint const&)
SkPaintFilterCanvas::onDrawVerticesObject(SkVertices const*, SkBlendMode, SkPaint const&)
SkPaintFilterCanvas::onGetProps(SkSurfaceProps*, bool) const
SkPaintFilterCanvas::onImageInfo() const
SkPaintFilterCanvas::onNewSurface(SkImageInfo const&, SkSurfaceProps const&)
SkPaintFilterCanvas::onPeekPixels(SkPixmap*)
SkParse::Count(char const*)
SkParse::Count(char const*, char)
SkParse::FindBool(char const*, bool*)
SkParse::FindColor(char const*, unsigned int*)
SkParse::FindHex(char const*, unsigned int*)
SkParse::FindList(char const*, char const*)
SkParse::FindMSec(char const*, unsigned int*)
SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)
SkParse::FindS32(char const*, int*)
SkParse::FindScalar(char const*, float*)
SkParse::FindScalars(char const*, float*, int)
SkParsePath::FromSVGString(char const*, SkPath*)
SkParsePath::ToSVGString(SkPath const&, SkParsePath::PathEncoding)
SkPath1DPathEffect::Make(SkPath const&, float, float, SkPath1DPathEffect::Style)
SkPath1DPathEffect::RegisterFlattenables()
SkPath2DPathEffect::Make(SkMatrix const&, SkPath const&)
SkPath2DPathEffect::RegisterFlattenables()
SkPath::Circle(float, float, float, SkPathDirection)
SkPath::ConvertConicToQuads(SkPoint const&, SkPoint const&, SkPoint const&, float, SkPoint*, int)
SkPath::IsCubicDegenerate(SkPoint const&, SkPoint const&, SkPoint const&, SkPoint const&, bool)
SkPath::IsLineDegenerate(SkPoint const&, SkPoint const&, bool)
SkPath::IsQuadDegenerate(SkPoint const&, SkPoint const&, SkPoint const&, bool)
SkPath::Iter::Iter()
SkPath::Iter::Iter(SkPath const&, bool)
SkPath::Iter::autoClose(SkPoint*)
SkPath::Iter::isClosedContour() const
SkPath::Iter::next(SkPoint*)
SkPath::Iter::setPath(SkPath const&, bool)
SkPath::Make(SkPoint const*, int, unsigned char const*, int, float const*, int, SkPathFillType, bool)
SkPath::MakeInternal(SkPathVerbAnalysis const&, SkPoint const*, unsigned char const*, int, float const*, SkPathFillType, bool)
SkPath::Oval(SkRect const&, SkPathDirection)
SkPath::Oval(SkRect const&, SkPathDirection, unsigned int)
SkPath::Polygon(SkPoint const*, int, bool, SkPathFillType, bool)
SkPath::RRect(SkRRect const&, SkPathDirection)
SkPath::RRect(SkRRect const&, SkPathDirection, unsigned int)
SkPath::RRect(SkRect const&, float, float, SkPathDirection)
SkPath::RawIter::next(SkPoint*)
SkPath::RawIter::setPath(SkPath const&)
SkPath::Rect(SkRect const&, SkPathDirection, unsigned int)
SkPath::SkPath(SkPath const&)
SkPath::SkPath(sk_sp<SkPathRef>, SkPathFillType, bool, SkPathConvexity, SkPathFirstDirection)
SkPath::addArc(SkRect const&, float, float)
SkPath::addCircle(float, float, float, SkPathDirection)
SkPath::addOval(SkRect const&, SkPathDirection)
SkPath::addOval(SkRect const&, SkPathDirection, unsigned int)
SkPath::addPath(SkPath const&, SkMatrix const&, SkPath::AddPathMode)
SkPath::addPath(SkPath const&, float, float, SkPath::AddPathMode)
SkPath::addPoly(SkPoint const*, int, bool)
SkPath::addRRect(SkRRect const&, SkPathDirection)
SkPath::addRRect(SkRRect const&, SkPathDirection, unsigned int)
SkPath::addRoundRect(SkRect const&, float const*, SkPathDirection)
SkPath::addRoundRect(SkRect const&, float, float, SkPathDirection)
SkPath::approximateBytesUsed() const
SkPath::arcTo(SkRect const&, float, float, bool)
SkPath::arcTo(float, float, float, SkPath::ArcSize, SkPathDirection, float, float)
SkPath::arcTo(float, float, float, float, float)
SkPath::computeConvexity() const
SkPath::computeTightBounds() const
SkPath::conicTo(float, float, float, float, float)
SkPath::conservativelyContainsRect(SkRect const&) const
SkPath::contains(float, float) const
SkPath::copyFields(SkPath const&)
SkPath::countPoints() const
SkPath::countVerbs() const
SkPath::dirtyAfterEdit()
SkPath::dump(SkWStream*, bool) const
SkPath::dumpArrays(SkWStream*, bool) const
SkPath::getConvexity() const
SkPath::getConvexityOrUnknown() const
SkPath::getFirstDirection() const
SkPath::getGenerationID() const
SkPath::getLastPt(SkPoint*) const
SkPath::getPoint(int) const
SkPath::getPoints(SkPoint*, int) const
SkPath::getSegmentMasks() const
SkPath::getVerbs(unsigned char*, int) const
SkPath::hasComputedBounds() const
SkPath::interpolate(SkPath const&, float, SkPath*) const
SkPath::isConvex() const
SkPath::isConvexityAccurate() const
SkPath::isEmpty() const
SkPath::isFinite() const
SkPath::isInterpolatable(SkPath const&) const
SkPath::isLastContourClosed() const
SkPath::isLine(SkPoint*) const
SkPath::isOval(SkRect*) const
SkPath::isRRect(SkRRect*) const
SkPath::isRect(SkRect*, bool*, SkPathDirection*) const
SkPath::isValid() const
SkPath::isValidImpl() const
SkPath::isZeroLengthSincePoint(int) const
SkPath::operator=(SkPath const&)
SkPath::quadTo(float, float, float, float)
SkPath::rArcTo(float, float, float, SkPath::ArcSize, SkPathDirection, float, float)
SkPath::rConicTo(float, float, float, float, float)
SkPath::rCubicTo(float, float, float, float, float, float)
SkPath::rLineTo(float, float)
SkPath::rMoveTo(float, float)
SkPath::rQuadTo(float, float, float, float)
SkPath::readAsRRect(void const*, unsigned long)
SkPath::readFromMemory(void const*, unsigned long)
SkPath::readFromMemory_EQ4Or5(void const*, unsigned long)
SkPath::reset()
SkPath::resetFields()
SkPath::reverseAddPath(SkPath const&)
SkPath::reversePathTo(SkPath const&)
SkPath::rewind()
SkPath::serialize() const
SkPath::setBounds(SkRect const&)
SkPath::setConvexity(SkPathConvexity)
SkPath::setConvexity(SkPathConvexity) const
SkPath::setFirstDirection(SkPathFirstDirection) const
SkPath::setLastPt(float, float)
SkPath::setPt(int, float, float)
SkPath::shrinkToFit()
SkPath::swap(SkPath&)
SkPath::transform(SkMatrix const&, SkPath*, SkApplyPerspectiveClip) const
SkPath::writeToMemory(void*) const
SkPath::writeToMemoryAsRRect(void*) const
SkPathBuilder::SkPathBuilder()
SkPathBuilder::SkPathBuilder(SkPath const&)
SkPathBuilder::SkPathBuilder(SkPathFillType)
SkPathBuilder::addArc(SkRect const&, float, float)
SkPathBuilder::addCircle(float, float, float, SkPathDirection)
SkPathBuilder::addOval(SkRect const&, SkPathDirection, unsigned int)
SkPathBuilder::addPath(SkPath const&)
SkPathBuilder::addPolygon(SkPoint const*, int, bool)
SkPathBuilder::addRRect(SkRRect const&, SkPathDirection, unsigned int)
SkPathBuilder::addRect(SkRect const&, SkPathDirection, unsigned int)
SkPathBuilder::arcTo(SkPoint, SkPoint, float)
SkPathBuilder::arcTo(SkPoint, float, SkPathBuilder::ArcSize, SkPathDirection, SkPoint)
SkPathBuilder::arcTo(SkRect const&, float, float, bool)
SkPathBuilder::close()
SkPathBuilder::computeBounds() const
SkPathBuilder::conicTo(SkPoint, SkPoint, float)
SkPathBuilder::cubicTo(SkPoint, SkPoint, SkPoint)
SkPathBuilder::detach()
SkPathBuilder::incReserve(int, int)
SkPathBuilder::lineTo(SkPoint)
SkPathBuilder::make(sk_sp<SkPathRef>) const
SkPathBuilder::moveTo(SkPoint)
SkPathBuilder::offset(float, float)
SkPathBuilder::operator=(SkPath const&)
SkPathBuilder::polylineTo(SkPoint const*, int)
SkPathBuilder::privateReverseAddPath(SkPath const&)
SkPathBuilder::quadTo(SkPoint, SkPoint)
SkPathBuilder::rConicTo(SkPoint, SkPoint, float)
SkPathBuilder::rCubicTo(SkPoint, SkPoint, SkPoint)
SkPathBuilder::rLineTo(SkPoint)
SkPathBuilder::rQuadTo(SkPoint, SkPoint)
SkPathBuilder::reset()
SkPathBuilder::snapshot() const
SkPathBuilder::~SkPathBuilder()
SkPathEffect::Deserialize(void const*, unsigned long, SkDeserialProcs const*)
SkPathEffect::MakeCompose(sk_sp<SkPathEffect>, sk_sp<SkPathEffect>)
SkPathEffect::MakeSum(sk_sp<SkPathEffect>, sk_sp<SkPathEffect>)
SkPathEffect::asADash(SkPathEffect::DashInfo*) const
SkPathEffect::filterPath(SkPath*, SkPath const&, SkStrokeRec*, SkRect const*) const
SkPathEffect::filterPath(SkPath*, SkPath const&, SkStrokeRec*, SkRect const*, SkMatrix const&) const
SkPathEffect::needsCTM() const
SkPathMeasure::SkPathMeasure()
SkPathMeasure::SkPathMeasure(SkPath const&, bool, float)
SkPathMeasure::getLength()
SkPathMeasure::getMatrix(float, SkMatrix*, SkPathMeasure::MatrixFlags)
SkPathMeasure::getPosTan(float, SkPoint*, SkPoint*)
SkPathMeasure::getSegment(float, float, SkPath*, bool)
SkPathMeasure::isClosed()
SkPathMeasure::nextContour()
SkPathMeasure::setPath(SkPath const*, bool)
SkPathMeasure::~SkPathMeasure()
SkPathRef::CreateEmpty()
SkPathRef::CreateTransformedCopy(sk_sp<SkPathRef>*, SkPathRef const&, SkMatrix const&)
SkPathRef::Editor::Editor(sk_sp<SkPathRef>*, int, int)
SkPathRef::Iter::Iter()
SkPathRef::Iter::Iter(SkPathRef const&)
SkPathRef::Iter::next(SkPoint*)
SkPathRef::Iter::peek() const
SkPathRef::Iter::setPathRef(SkPathRef const&)
SkPathRef::Rewind(sk_sp<SkPathRef>*)
SkPathRef::addGenIDChangeListener(sk_sp<SkIDChangeListener>)
SkPathRef::approximateBytesUsed() const
SkPathRef::callGenIDChangeListeners()
SkPathRef::copy(SkPathRef const&, int, int)
SkPathRef::dataMatchesVerbs() const
SkPathRef::genID(unsigned char) const
SkPathRef::genIDChangeListenerCount()
SkPathRef::getRRect() const
SkPathRef::growForRepeatedVerb(int, int, float**)
SkPathRef::growForVerb(int, float)
SkPathRef::growForVerbsInPath(SkPathRef const&)
SkPathRef::interpolate(SkPathRef const&, float, SkPathRef*) const
SkPathRef::isRRect(SkRRect*, bool*, unsigned int*) const
SkPathRef::isValid() const
SkPathRef::operator==(SkPathRef const&) const
SkPathRef::reset()
SkPathRef::~SkPathRef()
SkPicture::BufferIsSKP(SkReadBuffer*, SkPictInfo*)
SkPicture::Forwardport(SkPictInfo const&, SkPictureData const*, SkReadBuffer*)
SkPicture::IsValidPictInfo(SkPictInfo const&)
SkPicture::MakeFromData(SkData const*, SkDeserialProcs const*)
SkPicture::MakeFromData(void const*, unsigned long, SkDeserialProcs const*)
SkPicture::MakeFromStream(SkStream*, SkDeserialProcs const*)
SkPicture::MakeFromStreamPriv(SkStream*, SkDeserialProcs const*, SkTypefacePlayback*, int)
SkPicture::MakePlaceholder(SkRect)
SkPicture::SkPicture()
SkPicture::StreamIsSKP(SkStream*, SkPictInfo*)
SkPicture::backport() const
SkPicture::createHeader() const
SkPicture::makeShader(SkTileMode, SkTileMode, SkFilterMode, SkMatrix const*, SkRect const*) const
SkPicture::serialize(SkSerialProcs const*) const
SkPicture::serialize(SkWStream*, SkSerialProcs const*) const
SkPicture::serialize(SkWStream*, SkSerialProcs const*, SkRefCntSet*, bool) const
SkPicture::~SkPicture()
SkPictureRecorder::SkPictureRecorder()
SkPictureRecorder::beginRecording(SkRect const&, SkBBHFactory*)
SkPictureRecorder::beginRecording(SkRect const&, sk_sp<SkBBoxHierarchy>)
SkPictureRecorder::finishRecordingAsDrawable()
SkPictureRecorder::finishRecordingAsPicture()
SkPictureRecorder::finishRecordingAsPictureWithCull(SkRect const&)
SkPictureRecorder::getRecordingCanvas()
SkPictureRecorder::partialReplay(SkCanvas*) const
SkPictureRecorder::~SkPictureRecorder()
SkPixelRef::SkPixelRef(int, int, void*, unsigned long)
SkPixelRef::addGenIDChangeListener(sk_sp<SkIDChangeListener>)
SkPixelRef::android_only_reset(int, int, unsigned long)
SkPixelRef::callGenIDChangeListeners()
SkPixelRef::getGenerationID() const
SkPixelRef::needsNewGenID()
SkPixelRef::notifyPixelsChanged()
SkPixelRef::restoreMutability()
SkPixelRef::setImmutable()
SkPixelRef::setImmutableWithID(unsigned int)
SkPixelRef::setTemporarilyImmutable()
SkPixelRef::~SkPixelRef()
SkPixmap::colorSpace() const
SkPixmap::computeIsOpaque() const
SkPixmap::erase(SkRGBA4f<(SkAlphaType)3> const&, SkIRect const*) const
SkPixmap::erase(unsigned int, SkIRect const&) const
SkPixmap::extractSubset(SkPixmap*, SkIRect const&) const
SkPixmap::getAlphaf(int, int) const
SkPixmap::getColor4f(int, int) const
SkPixmap::readPixels(SkImageInfo const&, void*, unsigned long, int, int) const
SkPixmap::refColorSpace() const
SkPixmap::reset()
SkPixmap::reset(SkImageInfo const&, void const*, unsigned long)
SkPixmap::reset(SkMask const&)
SkPixmap::scalePixels(SkPixmap const&, SkSamplingOptions const&) const
SkPixmap::setColorSpace(sk_sp<SkColorSpace>)
SkPixmapUtils::Orient(SkPixmap const&, SkPixmap const&, SkEncodedOrigin)
SkPixmapUtils::SwapWidthHeight(SkImageInfo const&)
SkPngEncoder::Encode(GrDirectContext*, SkImage const*, SkPngEncoder::Options const&)
SkPngEncoder::Make(SkWStream*, SkPixmap const&, SkPngEncoder::Options const&)
SkPoint3::Length(float, float, float)
SkPoint3::normalize()
SkPoint::Length(float, float)
SkPoint::Normalize(SkPoint*)
SkPoint::normalize()
SkPoint::scale(float, SkPoint*) const
SkPoint::setLength(float)
SkPoint::setLength(float, float, float)
SkPoint::setNormalize(float, float)
SkPreMultiplyColor(unsigned int)
SkRGBA4f<(SkAlphaType)3>::FromBytes_RGBA(unsigned int)
SkRGBA4f<(SkAlphaType)3>::toBytes_RGBA() const
SkRGBA4f<(SkAlphaType)3>::toSkColor() const
SkRGBToHSV(unsigned int, unsigned int, unsigned int, float*)
SkRRect::AreRectAndRadiiValid(SkRect const&, SkPoint const*)
SkRRect::checkCornerContainment(float, float) const
SkRRect::computeType()
SkRRect::contains(SkRect const&) const
SkRRect::dump(bool) const
SkRRect::dumpToString(bool) const
SkRRect::initializeRect(SkRect const&)
SkRRect::inset(float, float, SkRRect*) const
SkRRect::isValid() const
SkRRect::readFromMemory(void const*, unsigned long)
SkRRect::scaleRadii()
SkRRect::setNinePatch(SkRect const&, float, float, float, float)
SkRRect::setOval(SkRect const&)
SkRRect::setRectRadii(SkRect const&, SkPoint const*)
SkRRect::setRectXY(SkRect const&, float, float)
SkRRect::transform(SkMatrix const&, SkRRect*) const
SkRRect::writeToMemory(void*) const
SkRSXform::toQuad(float, float, SkPoint*) const
SkRSXform::toTriStrip(float, float, SkPoint*) const
SkRTreeFactory::operator()() const
SkRasterHandleAllocator::MakeCanvas(std::unique_ptr<SkRasterHandleAllocator, std::default_delete<SkRasterHandleAllocator> >, SkImageInfo const&, SkRasterHandleAllocator::Rec const*, SkSurfaceProps const*)
SkRasterHandleAllocator::allocBitmap(SkImageInfo const&, SkBitmap*)
SkRect::dump(bool) const
SkRect::intersect(SkRect const&)
SkRect::intersect(SkRect const&, SkRect const&)
SkRect::join(SkRect const&)
SkRect::setBoundsCheck(SkPoint const*, int)
SkRect::setBoundsNoCheck(SkPoint const*, int)
SkRect::toQuad(SkPoint*) const
SkRegion::BuildRectRuns(SkIRect const&, int*)
SkRegion::Cliperator::Cliperator(SkRegion const&, SkIRect const&)
SkRegion::Cliperator::next()
SkRegion::Iterator::Iterator(SkRegion const&)
SkRegion::Iterator::next()
SkRegion::Iterator::reset(SkRegion const&)
SkRegion::Iterator::rewind()
SkRegion::Oper(SkRegion const&, SkRegion const&, SkRegion::Op, SkRegion*)
SkRegion::RunsAreARect(int const*, int, SkIRect*)
SkRegion::SkRegion()
SkRegion::SkRegion(SkIRect const&)
SkRegion::SkRegion(SkRegion const&)
SkRegion::Spanerator::Spanerator(SkRegion const&, int, int, int)
SkRegion::Spanerator::next(int*, int*)
SkRegion::allocateRuns(SkRegion::RunHead const&)
SkRegion::allocateRuns(int)
SkRegion::allocateRuns(int, int, int)
SkRegion::computeRegionComplexity() const
SkRegion::contains(SkIRect const&) const
SkRegion::contains(SkRegion const&) const
SkRegion::contains(int, int) const
SkRegion::count_runtype_values(int*, int*) const
SkRegion::freeRuns()
SkRegion::getBoundaryPath(SkPath*) const
SkRegion::getRuns(int*, int*) const
SkRegion::intersects(SkIRect const&) const
SkRegion::intersects(SkRegion const&) const
SkRegion::isValid() const
SkRegion::op(SkIRect const&, SkRegion const&, SkRegion::Op)
SkRegion::op(SkRegion const&, SkIRect const&, SkRegion::Op)
SkRegion::op(SkRegion const&, SkRegion const&, SkRegion::Op)
SkRegion::operator=(SkRegion const&)
SkRegion::operator==(SkRegion const&) const
SkRegion::readFromMemory(void const*, unsigned long)
SkRegion::setEmpty()
SkRegion::setPath(SkPath const&, SkRegion const&)
SkRegion::setRect(SkIRect const&)
SkRegion::setRects(SkIRect const*, int)
SkRegion::setRegion(SkRegion const&)
SkRegion::setRuns(int*, int)
SkRegion::swap(SkRegion&)
SkRegion::translate(int, int, SkRegion*) const
SkRegion::writeToMemory(void*) const
SkRegion::~SkRegion()
SkRemotableFontIdentitySet::NewEmpty()
SkRemotableFontIdentitySet::SkRemotableFontIdentitySet(int, SkFontIdentity**)
SkRuntimeBlendBuilder::SkRuntimeBlendBuilder(sk_sp<SkRuntimeEffect>)
SkRuntimeBlendBuilder::makeBlender()
SkRuntimeBlendBuilder::~SkRuntimeBlendBuilder()
SkRuntimeColorFilterBuilder::SkRuntimeColorFilterBuilder(sk_sp<SkRuntimeEffect>)
SkRuntimeColorFilterBuilder::makeColorFilter()
SkRuntimeColorFilterBuilder::~SkRuntimeColorFilterBuilder()
SkRuntimeEffect::ChildPtr::ChildPtr(sk_sp<SkFlattenable>)
SkRuntimeEffect::ChildPtr::blender() const
SkRuntimeEffect::ChildPtr::colorFilter() const
SkRuntimeEffect::ChildPtr::shader() const
SkRuntimeEffect::ChildPtr::type() const
SkRuntimeEffect::MakeForColorFilter(SkString, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeForShader(SkString, SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeFromSource(SkString, SkRuntimeEffect::Options const&, SkSL::ProgramKind)
SkRuntimeEffect::MakeInternal(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&, SkSL::ProgramKind)
SkRuntimeEffect::MakeSettings(SkRuntimeEffect::Options const&)
SkRuntimeEffect::MakeTraced(sk_sp<SkShader>, SkIPoint const&)
SkRuntimeEffect::RegisterFlattenables()
SkRuntimeEffect::SkRuntimeEffect(std::unique_ptr<SkSL::Program, std::default_delete<SkSL::Program> >, SkRuntimeEffect::Options const&, SkSL::FunctionDefinition const&, std::vector<SkRuntimeEffect::Uniform, std::allocator<SkRuntimeEffect::Uniform> >&&, std::vector<SkRuntimeEffect::Child, std::allocator<SkRuntimeEffect::Child> >&&, std::vector<SkSL::SampleUsage, std::allocator<SkSL::SampleUsage> >&&, unsigned int)
SkRuntimeEffect::Uniform::sizeInBytes() const
SkRuntimeEffect::findChild(std::basic_string_view<char, std::char_traits<char> >) const
SkRuntimeEffect::findUniform(std::basic_string_view<char, std::char_traits<char> >) const
SkRuntimeEffect::getFilterColorProgram() const
SkRuntimeEffect::getRPProgram(SkSL::DebugTracePriv*) const
SkRuntimeEffect::makeColorFilter(sk_sp<SkData const>) const
SkRuntimeEffect::makeColorFilter(sk_sp<SkData const>, SkSpan<SkRuntimeEffect::ChildPtr>) const
SkRuntimeEffect::makeColorFilter(sk_sp<SkData const>, sk_sp<SkColorFilter>*, unsigned long) const
SkRuntimeEffect::makeImage(GrRecordingContext*, sk_sp<SkData const>, SkSpan<SkRuntimeEffect::ChildPtr>, SkMatrix const*, SkImageInfo, bool) const
SkRuntimeEffect::makeShader(sk_sp<SkData const>, SkSpan<SkRuntimeEffect::ChildPtr>, SkMatrix const*) const
SkRuntimeEffect::makeShader(sk_sp<SkData const>, sk_sp<SkShader>*, unsigned long, SkMatrix const*) const
SkRuntimeEffect::makeUnoptimizedClone()
SkRuntimeEffect::source[abi:cxx11]() const
SkRuntimeEffect::uniformSize() const
SkRuntimeEffect::~SkRuntimeEffect()
SkRuntimeShaderBuilder::SkRuntimeShaderBuilder(sk_sp<SkRuntimeEffect>)
SkRuntimeShaderBuilder::makeImage(GrRecordingContext*, SkMatrix const*, SkImageInfo, bool)
SkRuntimeShaderBuilder::makeShader(SkMatrix const*)
SkRuntimeShaderBuilder::~SkRuntimeShaderBuilder()
SkSL::Compiler::Compiler(SkSL::ShaderCaps const*)
SkSL::Compiler::FinalizeSettings(SkSL::ProgramSettings*, SkSL::ProgramKind)
SkSL::Compiler::compileModule(SkSL::ProgramKind, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, SkSL::Module const*, SkSL::ModifiersPool&, bool)
SkSL::Compiler::convertIdentifier(SkSL::Position, std::basic_string_view<char, std::char_traits<char> >)
SkSL::Compiler::convertProgram(SkSL::ProgramKind, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, SkSL::ProgramSettings)
SkSL::Compiler::errorText[abi:cxx11](bool)
SkSL::Compiler::finalize(SkSL::Program&)
SkSL::Compiler::handleError(std::basic_string_view<char, std::char_traits<char> >, SkSL::Position)
SkSL::Compiler::moduleForProgramKind(SkSL::ProgramKind)
SkSL::Compiler::optimize(SkSL::Program&)
SkSL::Compiler::optimizeModuleAfterLoading(SkSL::ProgramKind, SkSL::Module&)
SkSL::Compiler::optimizeModuleBeforeMinifying(SkSL::ProgramKind, SkSL::Module&)
SkSL::Compiler::releaseProgram(std::unique_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::default_delete<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)
SkSL::Compiler::runInliner(SkSL::Inliner*, std::vector<std::unique_ptr<SkSL::ProgramElement, std::default_delete<SkSL::ProgramElement> >, std::allocator<std::unique_ptr<SkSL::ProgramElement, std::default_delete<SkSL::ProgramElement> > > > const&, std::shared_ptr<SkSL::SymbolTable>, SkSL::ProgramUsage*)
SkSL::Compiler::toGLSL(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toGLSL(SkSL::Program&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
SkSL::Compiler::toHLSL(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toHLSL(SkSL::Program&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
SkSL::Compiler::toMetal(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toMetal(SkSL::Program&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
SkSL::Compiler::toSPIRV(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::toSPIRV(SkSL::Program&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
SkSL::Compiler::toWGSL(SkSL::Program&, SkSL::OutputStream&)
SkSL::Compiler::writeErrorCount()
SkSL::Compiler::~Compiler()
SkSemaphore::osSignal(int)
SkSemaphore::osWait()
SkSemaphore::try_wait()
SkSemaphore::~SkSemaphore()
SkShader::isAImage(SkMatrix*, SkTileMode*) const
SkShader::makeWithColorFilter(sk_sp<SkColorFilter>) const
SkShader::makeWithLocalMatrix(SkMatrix const&) const
SkShaderMaskFilter::Make(sk_sp<SkShader>)
SkShaderMaskFilter::RegisterFlattenables()
SkShaders::Blend(sk_sp<SkBlender>, sk_sp<SkShader>, sk_sp<SkShader>)
SkShaders::Color(SkRGBA4f<(SkAlphaType)3> const&, sk_sp<SkColorSpace>)
SkShaders::CoordClamp(sk_sp<SkShader>, SkRect const&)
SkShaders::Empty()
SkShaders::MakeFractalNoise(float, float, int, float, SkISize const*)
SkShaders::MakeTurbulence(float, float, int, float, SkISize const*)
SkShadowUtils::ComputeTonalColors(unsigned int, unsigned int, unsigned int*, unsigned int*)
SkShadowUtils::DrawShadow(SkCanvas*, SkPath const&, SkPoint3 const&, SkPoint3 const&, float, unsigned int, unsigned int, unsigned int)
SkShadowUtils::GetLocalBounds(SkMatrix const&, SkPath const&, SkPoint3 const&, SkPoint3 const&, float, unsigned int, SkRect*)
SkSpinlock::contendedAcquire()
SkStream::MakeFromFile(char const*)
SkStream::readPackedUInt(unsigned long*)
SkStream::readS16(short*)
SkStream::readS32(int*)
SkStream::readS8(signed char*)
SkStream::readScalar(float*)
SkStrikeClient::SkStrikeClient(sk_sp<SkStrikeClient::DiscardableHandleManager>, bool, SkStrikeCache*)
SkStrikeClient::readStrikeData(void const volatile*, unsigned long)
SkStrikeClient::translateTypefaceID(SkAutoDescriptor*) const
SkStrikeClient::~SkStrikeClient()
SkStrikeServer::SkStrikeServer(SkStrikeServer::DiscardableHandleManager*)
SkStrikeServer::makeAnalysisCanvas(int, int, SkSurfaceProps const&, sk_sp<SkColorSpace>, bool, bool)
SkStrikeServer::writeStrikeData(std::vector<unsigned char, std::allocator<unsigned char> >*)
SkStrikeServer::~SkStrikeServer()
SkString::Rec::Make(char const*, unsigned long)
SkString::Rec::ref() const
SkString::Rec::unique() const
SkString::Rec::unref() const
SkString::SkString()
SkString::SkString(SkString const&)
SkString::SkString(char const*, unsigned long)
SkString::SkString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
SkString::SkString(std::basic_string_view<char, std::char_traits<char> >)
SkString::SkString(unsigned long)
SkString::appendVAList(char const*, __va_list_tag*)
SkString::appendf(char const*, ...)
SkString::data()
SkString::equals(SkString const&) const
SkString::equals(char const*) const
SkString::equals(char const*, unsigned long) const
SkString::insert(unsigned long, char const*)
SkString::insert(unsigned long, char const*, unsigned long)
SkString::insertHex(unsigned long, unsigned int, int)
SkString::insertS32(unsigned long, int)
SkString::insertS64(unsigned long, long, int)
SkString::insertScalar(unsigned long, float)
SkString::insertU32(unsigned long, unsigned int)
SkString::insertU64(unsigned long, unsigned long, int)
SkString::insertUnichar(unsigned long, int)
SkString::operator=(SkString const&)
SkString::operator=(SkString&&)
SkString::operator=(char const*)
SkString::prependVAList(char const*, __va_list_tag*)
SkString::prependf(char const*, ...)
SkString::printVAList(char const*, __va_list_tag*)
SkString::printf(char const*, ...)
SkString::remove(unsigned long, unsigned long)
SkString::reset()
SkString::resize(unsigned long)
SkString::set(char const*)
SkString::set(char const*, unsigned long)
SkString::swap(SkString&)
SkStrokeAndFillPathEffect::Make()
SkStrokePathEffect::Make(float, SkPaint::Join, SkPaint::Cap, float)
SkStrokeRec::GetInflationRadius(SkPaint const&, SkPaint::Style)
SkStrokeRec::GetInflationRadius(SkPaint::Join, float, SkPaint::Cap, float)
SkStrokeRec::SkStrokeRec(SkPaint const&, SkPaint::Style, float)
SkStrokeRec::SkStrokeRec(SkPaint const&, float)
SkStrokeRec::SkStrokeRec(SkStrokeRec::InitStyle)
SkStrokeRec::applyToPaint(SkPaint*) const
SkStrokeRec::applyToPath(SkPath*, SkPath const&) const
SkStrokeRec::getInflationRadius() const
SkStrokeRec::getStyle() const
SkStrokeRec::init(SkPaint const&, SkPaint::Style, float)
SkStrokeRec::setFillStyle()
SkStrokeRec::setHairlineStyle()
SkStrokeRec::setStrokeStyle(float, bool)
SkSurface::SkSurface(SkImageInfo const&, SkSurfaceProps const*)
SkSurface::SkSurface(int, int, SkSurfaceProps const*)
SkSurface::asyncRescaleAndReadPixels(SkImageInfo const&, SkIRect const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*)
SkSurface::asyncRescaleAndReadPixelsYUV420(SkYUVColorSpace, sk_sp<SkColorSpace>, SkIRect const&, SkISize const&, SkImage::RescaleGamma, SkImage::RescaleMode, void (*)(void*, std::unique_ptr<SkImage::AsyncReadResult const, std::default_delete<SkImage::AsyncReadResult const> >), void*)
SkSurface::capabilities()
SkSurface::characterize(GrSurfaceCharacterization*) const
SkSurface::draw(SkCanvas*, float, float, SkSamplingOptions const&, SkPaint const*)
SkSurface::flush()
SkSurface::flush(GrFlushInfo const&, skgpu::MutableTextureState const*)
SkSurface::flush(SkSurfaces::BackendSurfaceAccess, GrFlushInfo const&)
SkSurface::generationID()
SkSurface::isCompatible(GrSurfaceCharacterization const&) const
SkSurface::makeSurface(SkImageInfo const&)
SkSurface::makeSurface(int, int)
SkSurface::notifyContentWillChange(SkSurface::ContentChangeMode)
SkSurface::peekPixels(SkPixmap*)
SkSurface::readPixels(SkImageInfo const&, void*, unsigned long, int, int)
SkSurface::readPixels(SkPixmap const&, int, int)
SkSurface::recorder() const
SkSurface::recordingContext() const
SkSurface::resolveMSAA()
SkSurface::wait(int, GrBackendSemaphore const*, bool)
SkSurface::writePixels(SkBitmap const&, int, int)
SkSurface::writePixels(SkPixmap const&, int, int)
SkSurfaceProps::SkSurfaceProps(SkSurfaceProps const&)
SkSurfaces::GetBackendRenderTarget(SkSurface*, SkSurface::BackendHandleAccess)
SkSurfaces::GetBackendTexture(SkSurface*, SkSurface::BackendHandleAccess)
SkSurfaces::Null(int, int)
SkSurfaces::RenderTarget(GrRecordingContext*, GrSurfaceCharacterization const&, skgpu::Budgeted)
SkSurfaces::ResolveMSAA(SkSurface*)
SkSurfaces::WrapBackendRenderTarget(GrRecordingContext*, GrBackendRenderTarget const&, GrSurfaceOrigin, SkColorType, sk_sp<SkColorSpace>, SkSurfaceProps const*, void (*)(void*), void*)
SkSurfaces::WrapBackendTexture(GrRecordingContext*, GrBackendTexture const&, GrSurfaceOrigin, int, SkColorType, sk_sp<SkColorSpace>, SkSurfaceProps const*, void (*)(void*), void*)
SkSurfaces::WrapPixels(SkImageInfo const&, void*, unsigned long, SkSurfaceProps const*)
SkSurfaces::WrapPixels(SkImageInfo const&, void*, unsigned long, void (*)(void*, void*), void*, SkSurfaceProps const*)
SkSwapRB(unsigned int*, unsigned int const*, int)
SkTDStorage::SkTDStorage(SkTDStorage const&)
SkTDStorage::SkTDStorage(SkTDStorage&&)
SkTDStorage::SkTDStorage(int)
SkTDStorage::SkTDStorage(void const*, int, int)
SkTDStorage::append()
SkTDStorage::append(int)
SkTDStorage::append(void const*, int)
SkTDStorage::calculateSizeOrDie(int)
SkTDStorage::copySrc(int, void const*, int)
SkTDStorage::erase(int, int)
SkTDStorage::insert(int)
SkTDStorage::insert(int, int, void const*)
SkTDStorage::moveTail(int, int, int)
SkTDStorage::operator=(SkTDStorage const&)
SkTDStorage::operator=(SkTDStorage&&)
SkTDStorage::prepend()
SkTDStorage::removeShuffle(int)
SkTDStorage::reserve(int)
SkTDStorage::reset()
SkTDStorage::resize(int)
SkTDStorage::shrink_to_fit()
SkTDStorage::swap(SkTDStorage&)
SkTDStorage::~SkTDStorage()
SkTableMaskFilter::Create(unsigned char const*)
SkTableMaskFilter::CreateClip(unsigned char, unsigned char)
SkTableMaskFilter::CreateGamma(float)
SkTableMaskFilter::MakeClipTable(unsigned char*, unsigned char, unsigned char)
SkTableMaskFilter::MakeGammaTable(unsigned char*, float)
SkTextBlob::Deserialize(void const*, unsigned long, SkDeserialProcs const&)
SkTextBlob::Iter::Iter(SkTextBlob const&)
SkTextBlob::Iter::experimentalNext(SkTextBlob::Iter::ExperimentalRun*)
SkTextBlob::Iter::next(SkTextBlob::Iter::Run*)
SkTextBlob::MakeFromPosText(void const*, unsigned long, SkPoint const*, SkFont const&, SkTextEncoding)
SkTextBlob::MakeFromPosTextH(void const*, unsigned long, float const*, float, SkFont const&, SkTextEncoding)
SkTextBlob::MakeFromText(void const*, unsigned long, SkFont const&, SkTextEncoding)
SkTextBlob::RunRecord::First(SkTextBlob const*)
SkTextBlob::RunRecord::Next(SkTextBlob::RunRecord const*)
SkTextBlob::RunRecord::NextUnchecked(SkTextBlob::RunRecord const*)
SkTextBlob::RunRecord::PosCount(unsigned int, SkTextBlob::GlyphPositioning, SkSafeMath*)
SkTextBlob::RunRecord::StorageSize(unsigned int, unsigned int, SkTextBlob::GlyphPositioning, SkSafeMath*)
SkTextBlob::RunRecord::grow(unsigned int)
SkTextBlob::RunRecord::textSizePtr() const
SkTextBlob::RunRecord::validate(unsigned char const*) const
SkTextBlob::ScalarsPerGlyph(SkTextBlob::GlyphPositioning)
SkTextBlob::SkTextBlob(SkRect const&)
SkTextBlob::getIntercepts(float const*, float*, SkPaint const*) const
SkTextBlob::operator new(unsigned long)
SkTextBlob::operator new(unsigned long, void*)
SkTextBlob::serialize(SkSerialProcs const&) const
SkTextBlob::serialize(SkSerialProcs const&, void*, unsigned long) const
SkTextBlobBuilder::ConservativeRunBounds(SkTextBlob::RunRecord const&)
SkTextBlobBuilder::SkTextBlobBuilder()
SkTextBlobBuilder::TightRunBounds(SkTextBlob::RunRecord const&)
SkTextBlobBuilder::allocInternal(SkFont const&, SkTextBlob::GlyphPositioning, int, int, SkPoint, SkRect const*)
SkTextBlobBuilder::allocRun(SkFont const&, int, float, float, SkRect const*)
SkTextBlobBuilder::allocRunPos(SkFont const&, int, SkRect const*)
SkTextBlobBuilder::allocRunPosH(SkFont const&, int, float, SkRect const*)
SkTextBlobBuilder::allocRunRSXform(SkFont const&, int)
SkTextBlobBuilder::allocRunText(SkFont const&, int, float, float, int, SkRect const*)
SkTextBlobBuilder::allocRunTextPos(SkFont const&, int, int, SkRect const*)
SkTextBlobBuilder::allocRunTextPosH(SkFont const&, int, float, int, SkRect const*)
SkTextBlobBuilder::allocRunTextRSXform(SkFont const&, int, int, SkRect const*)
SkTextBlobBuilder::make()
SkTextBlobBuilder::mergeRun(SkFont const&, SkTextBlob::GlyphPositioning, unsigned int, SkPoint)
SkTextBlobBuilder::reserve(unsigned long)
SkTextBlobBuilder::updateDeferredBounds()
SkTextBlobBuilder::~SkTextBlobBuilder()
SkTextUtils::Draw(SkCanvas*, void const*, unsigned long, SkTextEncoding, float, float, SkFont const&, SkPaint const&, SkTextUtils::Align)
SkTextUtils::GetPath(void const*, unsigned long, SkTextEncoding, float, float, SkFont const&, SkPath*)
SkTiledImageUtils::DrawImageRect(SkCanvas*, SkImage const*, SkRect const&, SkRect const&, SkSamplingOptions const&, SkPaint const*, SkCanvas::SrcRectConstraint)
SkTime::DateTime::toISO8601(SkString*) const
SkTime::GetDateTime(SkTime::DateTime*)
SkTime::GetNSecs()
SkTrimPathEffect::Make(float, float, SkTrimPathEffect::Mode)
SkTypeface::Equal(SkTypeface const*, SkTypeface const*)
SkTypeface::FromOldStyle(SkTypeface::Style)
SkTypeface::GetDefaultTypeface(SkTypeface::Style)
SkTypeface::MakeDefault()
SkTypeface::MakeDeserialize(SkStream*)
SkTypeface::MakeFromData(sk_sp<SkData>, int)
SkTypeface::MakeFromFile(char const*, int)
SkTypeface::MakeFromName(char const*, SkFontStyle)
SkTypeface::MakeFromStream(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, int)
SkTypeface::Register(unsigned int, sk_sp<SkTypeface> (*)(std::unique_ptr<SkStreamAsset, std::default_delete<SkStreamAsset> >, SkFontArguments const&))
SkTypeface::SkTypeface(SkFontStyle const&, bool)
SkTypeface::UniqueID(SkTypeface const*)
SkTypeface::copyTableData(unsigned int) const
SkTypeface::countGlyphs() const
SkTypeface::countTables() const
SkTypeface::createFamilyNameIterator() const
SkTypeface::createScalerContext(SkScalerContextEffects const&, SkDescriptor const*) const
SkTypeface::getAdvancedMetrics() const
SkTypeface::getBounds() const
SkTypeface::getFamilyName(SkString*) const
SkTypeface::getGlyphToUnicodeMap(int*) const
SkTypeface::getKerningPairAdjustments(unsigned short const*, int, int*) const
SkTypeface::getPostScriptName(SkString*) const
SkTypeface::getTableData(unsigned int, unsigned long, unsigned long, void*) const
SkTypeface::getTableSize(unsigned int) const
SkTypeface::getTableTags(unsigned int*) const
SkTypeface::getUnitsPerEm() const
SkTypeface::getVariationDesignParameters(SkFontParameters::Variation::Axis*, int) const
SkTypeface::getVariationDesignPosition(SkFontArguments::VariationPosition::Coordinate*, int) const
SkTypeface::glyphMaskNeedsCurrentColor() const
SkTypeface::makeClone(SkFontArguments const&) const
SkTypeface::onComputeBounds(SkRect*) const
SkTypeface::onCopyTableData(unsigned int) const
SkTypeface::onGetAdvancedMetrics() const
SkTypeface::onGetKerningPairAdjustments(unsigned short const*, int, int*) const
SkTypeface::onOpenExistingStream(int*) const
SkTypeface::openExistingStream(int*) const
SkTypeface::openStream(int*) const
SkTypeface::serialize(SkTypeface::SerializeBehavior) const
SkTypeface::serialize(SkWStream*, SkTypeface::SerializeBehavior) const
SkTypeface::textToGlyphs(void const*, unsigned long, SkTextEncoding, unsigned short*, int) const
SkTypeface::unicharToGlyph(int) const
SkTypeface::unicharsToGlyphs(int const*, int, unsigned short*) const
SkTypeface::~SkTypeface()
SkUTF::CountUTF16(unsigned short const*, unsigned long)
SkUTF::CountUTF32(int const*, unsigned long)
SkUTF::CountUTF8(char const*, unsigned long)
SkUTF::NextUTF16(unsigned short const**, unsigned short const*)
SkUTF::NextUTF32(int const**, int const*)
SkUTF::NextUTF8(char const**, char const*)
SkUTF::ToUTF16(int, unsigned short*)
SkUTF::ToUTF8(int, char*)
SkUTF::UTF16ToUTF8(char*, int, unsigned short const*, unsigned long)
SkUTF::UTF8ToUTF16(unsigned short*, int, char const*, unsigned long)
SkUnPreMultiply::PMColorToColor(unsigned int)
SkVertices::Builder::Builder(SkVertices::Desc const&)
SkVertices::Builder::Builder(SkVertices::VertexMode, int, int, unsigned int)
SkVertices::Builder::colors()
SkVertices::Builder::detach()
SkVertices::Builder::indices()
SkVertices::Builder::init(SkVertices::Desc const&)
SkVertices::Builder::positions()
SkVertices::Builder::texCoords()
SkVertices::MakeCopy(SkVertices::VertexMode, int, SkPoint const*, SkPoint const*, unsigned int const*, int, unsigned short const*)
SkVertices::approximateSize() const
SkVertices::getSizes() const
SkVertices::operator delete(void*)
SkWStream::SizeOfPackedUInt(unsigned long)
SkWStream::flush()
SkWStream::writeBigDecAsText(long, int)
SkWStream::writeDecAsText(int)
SkWStream::writeHexAsText(unsigned int, int)
SkWStream::writePackedUInt(unsigned long)
SkWStream::writeScalar(float)
SkWStream::writeScalarAsText(float)
SkWStream::writeStream(SkStream*, unsigned long)
SkWStream::~SkWStream()
SkWriteICCProfile(skcms_ICCProfile const*, char const*)
SkWriteICCProfile(skcms_TransferFunction const&, skcms_Matrix3x3 const&)
SkYUVAInfo::GetYUVALocations(SkYUVAInfo::PlaneConfig, unsigned int const*)
SkYUVAInfo::HasAlpha(SkYUVAInfo::PlaneConfig)
SkYUVAInfo::PlaneDimensions(SkISize, SkYUVAInfo::PlaneConfig, SkYUVAInfo::Subsampling, SkEncodedOrigin, SkISize*)
SkYUVAInfo::PlaneSubsamplingFactors(SkYUVAInfo::PlaneConfig, SkYUVAInfo::Subsampling, int)
SkYUVAInfo::SkYUVAInfo(SkISize, SkYUVAInfo::PlaneConfig, SkYUVAInfo::Subsampling, SkYUVColorSpace, SkEncodedOrigin, SkYUVAInfo::Siting, SkYUVAInfo::Siting)
SkYUVAInfo::SubsamplingFactors(SkYUVAInfo::Subsampling)
SkYUVAInfo::computeTotalBytes(unsigned long const*, unsigned long*) const
SkYUVAInfo::makeDimensions(SkISize) const
SkYUVAInfo::makeSubsampling(SkYUVAInfo::Subsampling) const
SkYUVAInfo::operator==(SkYUVAInfo const&) const
SkYUVAInfo::toYUVALocations(unsigned int const*) const
SkYUVAPixmapInfo::NumChannelsAndDataType(SkColorType)
SkYUVAPixmapInfo::SkYUVAPixmapInfo(SkYUVAInfo const&, SkColorType const*, unsigned long const*)
SkYUVAPixmapInfo::SkYUVAPixmapInfo(SkYUVAInfo const&, SkYUVAPixmapInfo::DataType, unsigned long const*)
SkYUVAPixmapInfo::SupportedDataTypes::enableDataType(SkYUVAPixmapInfo::DataType, int)
SkYUVAPixmapInfo::computeTotalBytes(unsigned long*) const
SkYUVAPixmapInfo::initPixmapsFromSingleAllocation(void*, SkPixmap*) const
SkYUVAPixmapInfo::isSupported(SkYUVAPixmapInfo::SupportedDataTypes const&) const
SkYUVAPixmapInfo::operator==(SkYUVAPixmapInfo const&) const
SkYUVAPixmaps::Allocate(SkYUVAPixmapInfo const&)
SkYUVAPixmaps::FromData(SkYUVAPixmapInfo const&, sk_sp<SkData>)
SkYUVAPixmaps::FromExternalMemory(SkYUVAPixmapInfo const&, void*)
SkYUVAPixmaps::FromExternalPixmaps(SkYUVAInfo const&, SkPixmap const*)
SkYUVAPixmaps::MakeCopy(SkYUVAPixmaps const&)
SkYUVAPixmaps::RecommendedRGBAColorType(SkYUVAPixmapInfo::DataType)
SkYUVAPixmaps::SkYUVAPixmaps(SkYUVAInfo const&, SkYUVAPixmapInfo::DataType, SkPixmap const*)
SkYUVAPixmaps::SkYUVAPixmaps(SkYUVAPixmapInfo const&, sk_sp<SkData>)
SkYUVAPixmaps::pixmapsInfo() const
SkYUVAPixmaps::toYUVALocations() const
SkiaHelper::createSkImage(SkBitmap const&)
SkiaHelper::dump(SkBitmap const&, char const*)
SkiaHelper::dump(sk_sp<SkImage> const&, char const*)
SkiaHelper::dump(sk_sp<SkSurface> const&, char const*)
SkiaHelper::isAlphaMaskBlendingEnabled()
SkiaHelper::makeCheckedImageSnapshot(sk_sp<SkSurface>)
SkiaHelper::makeCheckedImageSnapshot(sk_sp<SkSurface>, SkIRect const&)
SkiaHelper::readLog()
SkiaHelper::setPixelGeometry(SkPixelGeometry)
SkiaHelper::surfaceProps()
SkiaSalBitmap::AlphaBlendWith(SalBitmap const&)
SkiaSalBitmap::ComputeScanlineSize()
SkiaSalBitmap::ConserveMemory() const
SkiaSalBitmap::Create(SalBitmap const&, SalGraphics*)
SkiaSalBitmap::Create(SalBitmap const&, vcl::PixelFormat)
SkiaSalBitmap::Create(com::sun::star::uno::Reference<com::sun::star::rendering::XBitmapCanvas> const&, Size&, bool)
SkiaSalBitmap::CreateBitmapData()
SkiaSalBitmap::DataChanged()
SkiaSalBitmap::Destroy()
SkiaSalBitmap::EnsureBitmapData()
SkiaSalBitmap::EnsureBitmapUniqueData()
SkiaSalBitmap::EraseInternal(Color const&)
SkiaSalBitmap::GetAlphaImageKey(SkiaHelper::DirectImage) const
SkiaSalBitmap::GetAlphaSkShader(SkSamplingOptions const&, SkiaHelper::DirectImage) const
SkiaSalBitmap::GetAsSkBitmap() const
SkiaSalBitmap::GetBitCount() const
SkiaSalBitmap::GetImageKey(SkiaHelper::DirectImage) const
SkiaSalBitmap::GetSkShader(SkSamplingOptions const&, SkiaHelper::DirectImage) const
SkiaSalBitmap::GetSystemData(BitmapSystemData&)
SkiaSalBitmap::Invert()
SkiaSalBitmap::IsAllBlack() const
SkiaSalBitmap::IsFullyOpaqueAsAlpha() const
SkiaSalBitmap::PerformErase()
SkiaSalBitmap::ReleaseBuffer(BitmapBuffer*, BitmapAccessMode, bool)
SkiaSalBitmap::Replace(Color const&, Color const&, unsigned char)
SkiaSalBitmap::ResetAllData()
SkiaSalBitmap::ResetPendingScaling()
SkiaSalBitmap::ResetToBuffer()
SkiaSalBitmap::ScalingSupported() const
SkiaSalBitmap::TryDirectConvertToAlphaNoScaling()
SkiaSalBitmap::alphaType() const
SkiaSalBitmap::dump(char const*) const
SkiaSalGraphicsImpl::checkPendingDrawing()
SkiaSalGraphicsImpl::checkSurface()
SkiaSalGraphicsImpl::createOffscreenSurface()
SkiaSalGraphicsImpl::createWindowSurface(bool)
SkiaSalGraphicsImpl::delayDrawPolyPolygon(basegfx::B2DPolyPolygon const&, double)
SkiaSalGraphicsImpl::destroySurface()
SkiaSalGraphicsImpl::drawBitmap(SalTwoRect const&, SkiaSalBitmap const&, SkBlendMode)
SkiaSalGraphicsImpl::drawImage(SalTwoRect const&, sk_sp<SkImage> const&, int, SkBlendMode)
SkiaSalGraphicsImpl::drawShader(SalTwoRect const&, sk_sp<SkShader> const&, SkBlendMode)
SkiaSalGraphicsImpl::dump(char const*) const
SkiaSalGraphicsImpl::flushDrawing()
SkiaSalGraphicsImpl::getClipRegion() const
SkiaSalGraphicsImpl::invert(basegfx::B2DPolygon const&, SalInvert)
SkiaSalGraphicsImpl::makeCachedImageKey(SkiaSalBitmap const&, SkiaSalBitmap const*, Size const&, SkiaHelper::DirectImage, SkiaHelper::DirectImage)
SkiaSalGraphicsImpl::mergeCacheBitmaps(SkiaSalBitmap const&, SkiaSalBitmap const*, Size const&)
SkiaSalGraphicsImpl::performDrawPolyPolygon(basegfx::B2DPolyPolygon const&, double, bool)
SkiaSalGraphicsImpl::postDraw()
SkiaSalGraphicsImpl::preDraw()
SkiaSalGraphicsImpl::privateCopyBits(SalTwoRect const&, SkiaSalGraphicsImpl*)
SkiaSalGraphicsImpl::privateDrawAlphaRect(long, long, long, long, double, bool)
SkiaSalGraphicsImpl::resetCanvasScalingAndClipping()
SkiaSalGraphicsImpl::scheduleFlush()
SkiaSalGraphicsImpl::setCanvasClipRegion(SkCanvas*, vcl::Region const&)
SkiaSalGraphicsImpl::setCanvasScalingAndClipping()
SkiaSalGraphicsImpl::windowBackingPropertiesChanged()
SkiaTextRender::ClearDevFontCache()
SkiaTextRender::DrawTextLayout(GenericSalLayout const&, SalGraphics const&)
SkiaZone::checkDebug(int, CrashWatchdogTimingsValues const&)
SkiaZone::getCrashWatchdogTimingsValues()
SkiaZone::hardDisable()
SmDocShell::ArrangeFormula()
SmDocShell::ConvertFrom(SfxMedium&)
SmDocShell::ConvertTo(SfxMedium&)
SmDocShell::Draw(OutputDevice*, JobSetup const&, unsigned short, bool)
SmDocShell::DrawFormula(OutputDevice&, Point&, bool)
SmDocShell::Execute(SfxRequest&)
SmDocShell::Factory()
SmDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
SmDocShell::GetAccessibleText()
SmDocShell::GetComment() const
SmDocShell::GetCursor()
SmDocShell::GetEditEngine()
SmDocShell::GetInterface() const
SmDocShell::GetPool()
SmDocShell::GetPrt()
SmDocShell::GetRefDev()
SmDocShell::GetSize()
SmDocShell::GetState(SfxItemSet&)
SmDocShell::GetStaticInterface()
SmDocShell::GetUndoManager()
SmDocShell::HasCursor() const
SmDocShell::Impl_Print(OutputDevice&, SmPrintUIOptions const&, tools::Rectangle)
SmDocShell::InitInterface_Impl()
SmDocShell::InitNew(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SmDocShell::InvalidateCursor()
SmDocShell::Load(SfxMedium&)
SmDocShell::LoadSymbols()
SmDocShell::Notify(SfxBroadcaster&, SfxHint const&)
SmDocShell::OnDocumentPrinterChanged(Printer*)
SmDocShell::Parse()
SmDocShell::RegisterInterface(SfxModule const*)
SmDocShell::Repaint()
SmDocShell::ReplaceBadChars()
SmDocShell::Save()
SmDocShell::SaveAs(SfxMedium&)
SmDocShell::SaveSymbols()
SmDocShell::SetFormat(SmFormat const&)
SmDocShell::SetModified(bool)
SmDocShell::SetPrinter(SfxPrinter*)
SmDocShell::SetRightToLeft(bool)
SmDocShell::SetSmSyntaxVersion(short)
SmDocShell::SetVisArea(tools::Rectangle const&)
SmDocShell::SmDocShell(SfxModelFlags)
SmDocShell::UpdateEditEngineDefaultFonts()
SmDocShell::UpdateText()
SmDocShell::WriteAsMathType3(SfxMedium&)
SmDocShell::readFormulaOoxml(oox::formulaimport::XmlStream&)
SmDocShell::writeFormulaOoxml(std::shared_ptr<sax_fastparser::FastSerializerHelper> const&, oox::core::OoxmlVersion, oox::drawingml::DocumentType, signed char)
SmDocShell::writeFormulaRtf(rtl::OStringBuffer&, unsigned short)
SmDocShell::~SmDocShell()
SmFace::GetBorderWidth() const
SmFace::SetSize(Size const&)
SmFace::operator=(SmFace const&)
SmFormat::SetFont(unsigned short, SmFace const&, bool)
SmFormat::SmFormat()
SmFormat::operator==(SmFormat const&) const
SmartTagMgr::AssociateActionsWithRecognizers()
SmartTagMgr::GetSmartTagCaption(rtl::OUString const&, com::sun::star::lang::Locale const&) const
SmartTagMgr::LoadLibraries()
SmartTagMgr::PrepareConfiguration(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SmartTagMgr::ReadConfiguration(bool, bool)
SmartTagMgr::RegisterListener()
SmartTagMgr::WriteConfiguration(bool const*, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*) const
SotExchange::GetFormatName(SotClipboardFormatId)
SotExchange::RegisterFormat(com::sun::star::datatransfer::DataFlavor const&)
SotObject::Close()
SotObject::DoClose()
SotObject::SotObject()
SotObject::~SotObject()
SotStorage::CopyTo(rtl::OUString const&, SotStorage*, rtl::OUString const&)
SotStorage::CreateStorage(bool, StreamMode)
SotStorage::IsOLEStorage(SvStream*)
SotStorage::SotStorage(BaseStorage*)
SotStorage::~SotStorage()
SotStorageStream::FlushData()
SotStorageStream::GetData(void*, unsigned long)
SotStorageStream::PutData(void const*, unsigned long)
SotStorageStream::ResetError()
SotStorageStream::SeekPos(unsigned long)
SotStorageStream::SotStorageStream(BaseStorageStream*)
SotStorageStream::~SotStorageStream()
SpinField::SpinField(vcl::Window*, long, WindowType)
SpinField::~SpinField()
SpinListenerMultiplexer::SpinListenerMultiplexer(cppu::OWeakObject&)
SpinListenerMultiplexer::acquire()
SpinListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
SpinListenerMultiplexer::down(com::sun::star::awt::SpinEvent const&)
SpinListenerMultiplexer::first(com::sun::star::awt::SpinEvent const&)
SpinListenerMultiplexer::last(com::sun::star::awt::SpinEvent const&)
SpinListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
SpinListenerMultiplexer::release()
SpinListenerMultiplexer::up(com::sun::star::awt::SpinEvent const&)
SplitWindow::CalcLayoutSizePixel(Size const&)
SplitWindow::DataChanged(DataChangedEvent const&)
SplitWindow::FadeIn()
SplitWindow::FadeOut()
SplitWindow::GetFadeInSize() const
SplitWindow::GetItemCount(unsigned short) const
SplitWindow::GetItemId(Point const&) const
SplitWindow::GetItemId(unsigned short) const
SplitWindow::GetItemPos(unsigned short, unsigned short) const
SplitWindow::GetItemSize(unsigned short) const
SplitWindow::GetItemSize(unsigned short, SplitWindowItemFlags) const
SplitWindow::InsertItem(unsigned short, long, unsigned short, unsigned short, SplitWindowItemFlags)
SplitWindow::InsertItem(unsigned short, vcl::Window*, long, unsigned short, unsigned short, SplitWindowItemFlags)
SplitWindow::IsItemValid(unsigned short) const
SplitWindow::MouseButtonDown(MouseEvent const&)
SplitWindow::MouseMove(MouseEvent const&)
SplitWindow::Paint(OutputDevice&, tools::Rectangle const&)
SplitWindow::PreNotify(NotifyEvent&)
SplitWindow::RemoveItem(unsigned short)
SplitWindow::RequestHelp(HelpEvent const&)
SplitWindow::Resize()
SplitWindow::SetAlign(WindowAlign)
SplitWindow::SetItemSize(unsigned short, long)
SplitWindow::ShowFadeInHideButton()
SplitWindow::ShowFadeOutButton()
SplitWindow::Split()
SplitWindow::SplitItem(unsigned short, long, bool, bool)
SplitWindow::SplitResize()
SplitWindow::SplitWindow(vcl::Window*, long)
SplitWindow::StartSplit()
SplitWindow::StateChanged(StateChangedType)
SplitWindow::Tracking(TrackingEvent const&)
SplitWindow::dispose()
SplitWindow::~SplitWindow()
Splitter::EndSplit()
Splitter::SetHorizontal(bool)
Splitter::SetSplitPosPixel(long)
Splitter::Split()
Splitter::StartDrag()
Splitter::StartSplit()
StarBASIC::BreakHdl()
StarBASIC::CError(ErrCode, rtl::OUString const&, int, int, int)
StarBASIC::ClearAllModuleVars()
StarBASIC::DeInitAllModules()
StarBASIC::ErrorHdl()
StarBASIC::FatalError(ErrCode, rtl::OUString const&)
StarBASIC::FindSBXInCurrentScope(rtl::OUString const&)
StarBASIC::GetActiveModule()
StarBASIC::GetCol2()
StarBASIC::GetErl()
StarBASIC::GetErrorMsg()
StarBASIC::GetModelFromBasic(SbxObject*)
StarBASIC::GetSfxFromVBError(unsigned short)
StarBASIC::GetUNOConstant(rtl::OUString const&, com::sun::star::uno::Any&)
StarBASIC::GetVBErrorCode(ErrCode)
StarBASIC::InitAllModules(StarBASIC const*)
StarBASIC::Insert(SbxVariable*)
StarBASIC::LoadData(SvStream&, unsigned short)
StarBASIC::MakeErrorText(ErrCode, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
StarBASIC::MakeModule(rtl::OUString const&, com::sun::star::script::ModuleInfo const&, rtl::OUString const&)
StarBASIC::QuitAndExitApplication()
StarBASIC::Remove(SbxVariable*)
StarBASIC::SetErrorData(ErrCodeMsg const&, unsigned short, unsigned short, unsigned short)
StarBASIC::SetGlobalBreakHdl(Link<StarBASIC*, BasicDebugFlags> const&)
StarBASIC::SetModified(bool)
StarBASIC::SetVBAEnabled(bool)
StarBASIC::Stop()
StarBASIC::StoreData(SvStream&) const
StarBASIC::VBAFind(rtl::OUString const&, SbxClassType)
StarBASIC::getUnoListeners()
StarBASIC::isVBAEnabled() const
StarBASIC::~StarBASIC()
StatusBar::AdjustItemWidthsForHiDPI()
StatusBar::ApplySettings(OutputDevice&)
StatusBar::CalcWindowSizePixel() const
StatusBar::Clear()
StatusBar::Click()
StatusBar::DataChanged(DataChangedEvent const&)
StatusBar::DoubleClick()
StatusBar::EndProgressMode()
StatusBar::GetAccessibleName(unsigned short) const
StatusBar::GetHelpText(unsigned short) const
StatusBar::GetItemBits(unsigned short) const
StatusBar::GetItemCommand(unsigned short)
StatusBar::GetItemCount() const
StatusBar::GetItemData(unsigned short) const
StatusBar::GetItemId(Point const&) const
StatusBar::GetItemId(unsigned short) const
StatusBar::GetItemOffset(unsigned short) const
StatusBar::GetItemPos(unsigned short) const
StatusBar::GetItemRect(unsigned short) const
StatusBar::GetItemTextPos(unsigned short) const
StatusBar::GetItemWidth(unsigned short) const
StatusBar::GetQuickHelpText(unsigned short) const
StatusBar::HideItem(unsigned short)
StatusBar::InsertItem(unsigned short, unsigned long, StatusBarItemBits, long, unsigned short)
StatusBar::IsItemVisible(unsigned short) const
StatusBar::MouseButtonDown(MouseEvent const&)
StatusBar::Paint(OutputDevice&, tools::Rectangle const&)
StatusBar::RedrawItem(unsigned short)
StatusBar::RemoveItem(unsigned short)
StatusBar::RequestHelp(HelpEvent const&)
StatusBar::Resize()
StatusBar::SetAccessibleName(unsigned short, rtl::OUString const&)
StatusBar::SetHelpId(unsigned short, rtl::OUString const&)
StatusBar::SetHelpText(unsigned short, rtl::OUString const&)
StatusBar::SetItemCommand(unsigned short, rtl::OUString const&)
StatusBar::SetProgressValue(unsigned short)
StatusBar::SetText(rtl::OUString const&)
StatusBar::ShowItem(unsigned short)
StatusBar::StartProgressMode(rtl::OUString const&)
StatusBar::StateChanged(StateChangedType)
StatusBar::StatusBar(vcl::Window*, long)
StatusBar::UserDraw(UserDrawEvent const&)
StatusBar::dispose()
StatusBar::~StatusBar()
StgReader::GetReaderType()
StretchAndConvert(BitmapBuffer const&, SalTwoRect const&, ScanlineFormat, std::optional<BitmapPalette>, ColorMask const*)
StringRangeEnumerator::checkValue(int, o3tl::sorted_vector<int, std::less<int>, o3tl::find_unique> const*) const
StringRangeEnumerator::insertJoinedRanges(std::vector<int, std::allocator<int> > const&)
StringRangeEnumerator::insertRange(int, int, bool)
StringRangeEnumerator::setRange(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
StripScriptFromName(rtl::OUString const&)
StyleSettings::GetAccentColor() const
StyleSettings::GetActiveBorderColor() const
StyleSettings::GetActiveTabColor() const
StyleSettings::GetAutoMnemonic() const
StyleSettings::GetAutomaticallyChosenIconTheme() const
StyleSettings::GetButtonRolloverTextColor() const
StyleSettings::GetCheckedColor() const
StyleSettings::GetContextMenuShortcuts() const
StyleSettings::GetDeactiveBorderColor() const
StyleSettings::GetDeactiveColor() const
StyleSettings::GetDeactiveTextColor() const
StyleSettings::GetDockingFloatsSupported()
StyleSettings::GetEdgeBlending() const
StyleSettings::GetEdgeBlendingBottomRightColor() const
StyleSettings::GetEdgeBlendingTopLeftColor() const
StyleSettings::GetFaceGradientColor() const
StyleSettings::GetFieldRolloverTextColor() const
StyleSettings::GetFloatTitleFont() const
StyleSettings::GetGroupFont() const
StyleSettings::GetGroupTextColor() const
StyleSettings::GetHelpColor() const
StyleSettings::GetHelpFont() const
StyleSettings::GetHelpTextColor() const
StyleSettings::GetInactiveTabColor() const
StyleSettings::GetInstalledIconThemes() const
StyleSettings::GetLightBorderColor() const
StyleSettings::GetMenuBarColor() const
StyleSettings::GetMenuBarTextColor() const
StyleSettings::GetMenuBorderColor() const
StyleSettings::GetMenuTextColor() const
StyleSettings::GetMonoColor() const
StyleSettings::GetPushButtonFont() const
StyleSettings::GetRadioCheckFont() const
StyleSettings::GetRadioCheckTextColor() const
StyleSettings::GetSeparatorColor() const
StyleSettings::GetSplitSize()
StyleSettings::GetTitleFont() const
StyleSettings::GetToolbarIconSize() const
StyleSettings::GetUseSystemUIFonts() const
StyleSettings::GetVisitedLinkColor() const
StyleSettings::SetActiveBorderColor(Color const&)
StyleSettings::SetAntialiasingMinPixelHeight(int)
StyleSettings::SetAppFont(vcl::Font const&)
StyleSettings::SetAutoMnemonic(bool)
StyleSettings::SetCheckedColor(Color const&)
StyleSettings::SetColorValueSetColumnCount(unsigned short)
StyleSettings::SetDeactiveBorderColor(Color const&)
StyleSettings::SetDeactiveColor(Color const&)
StyleSettings::SetDeactiveTextColor(Color const&)
StyleSettings::SetDialogColor(Color const&)
StyleSettings::SetDisplayOptions(DisplayOptions)
StyleSettings::SetEdgeBlending(unsigned short)
StyleSettings::SetErrorColor(Color const&)
StyleSettings::SetErrorTextColor(Color const&)
StyleSettings::SetFaceColor(Color const&)
StyleSettings::SetFieldFont(vcl::Font const&)
StyleSettings::SetGroupFont(vcl::Font const&)
StyleSettings::SetHideDisabledMenuItems(bool)
StyleSettings::SetIconTheme(rtl::OUString const&)
StyleSettings::SetLabelFont(vcl::Font const&)
StyleSettings::SetLightBorderColor(Color const&)
StyleSettings::SetLightColor(Color const&)
StyleSettings::SetListBoxMaximumLineCount(unsigned short)
StyleSettings::SetMenuBorderColor(Color const&)
StyleSettings::SetMonoColor(Color const&)
StyleSettings::SetPreviewUsesCheckeredBackground(bool)
StyleSettings::SetPushButtonFont(vcl::Font const&)
StyleSettings::SetRadioCheckFont(vcl::Font const&)
StyleSettings::SetStandardStyles()
StyleSettings::SetUseSystemUIFonts(bool)
StyleSettings::SetWarningColor(Color const&)
StyleSettings::SetWarningTextColor(Color const&)
StyleSettings::operator!=(StyleSettings const&) const
StyleSettings::operator==(StyleSettings const&) const
SvBaseEventDescriptor::getMacroID(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvBaseEventDescriptor::mapNameToEventID(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvDetachedEventDescriptor::getImplementationName()
SvDetachedEventDescriptor::getIndex(SvMacroItemId) const
SvEmbedTransferHelper::AddSupportedFormats()
SvEmbedTransferHelper::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
SvEmbedTransferHelper::ObjectReleased()
SvEmbedTransferHelper::~SvEmbedTransferHelper()
SvFileInformationManager::GetDescription(INetURLObject const&)
SvFileInformationManager::GetFileDescription(INetURLObject const&)
SvFileInformationManager::GetFileImageId(INetURLObject const&)
SvFileInformationManager::GetFolderDescription(svtools::VolumeInfo const&)
SvFileInformationManager::GetFolderImageId(svtools::VolumeInfo const&)
SvFileInformationManager::GetImage(INetURLObject const&, bool, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
SvFileInformationManager::GetImageId(INetURLObject const&, bool)
SvFileInformationManager::GetImageNoDefault(INetURLObject const&, vcl::ImageType)
SvFileStream::FlushData()
SvFileStream::GetData(void*, unsigned long)
SvFileStream::LockFile()
SvFileStream::Open(rtl::OUString const&, StreamMode)
SvFileStream::PutData(void const*, unsigned long)
SvFileStream::ResetError()
SvFileStream::SeekPos(unsigned long)
SvFileStream::SetSize(unsigned long)
SvFileStream::SvFileStream()
SvFileStream::UnlockFile()
SvGlobalName::MakeFromMemory(void const*)
SvKeyValueIterator::Append(SvKeyValue const&)
SvKeyValueIterator::GetFirst(SvKeyValue&)
SvKeyValueIterator::GetNext(SvKeyValue&)
SvKeyValueIterator::~SvKeyValueIterator()
SvMacroTableEventDescriptor::~SvMacroTableEventDescriptor()
SvMemoryStream::AllocateMemory(unsigned long)
SvMemoryStream::FreeMemory()
SvMemoryStream::ReAllocateMemory(long)
SvNFEngine::CacheFormatRO(std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >&, unsigned int, unsigned int)
SvNFEngine::CacheFormatRW(SvNFFormatData&, unsigned int, unsigned int)
SvNFEngine::ChangeIntl(SvNFLanguageData&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::ChangeNullDate(SvNFLanguageData&, unsigned short, unsigned short, short)
SvNFEngine::DefaultCurrencyRO(SvNFFormatData const&, SvNFLanguageData&, NativeNumberWrapper const&, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::DefaultCurrencyRW(SvNFFormatData&, SvNFLanguageData&, NativeNumberWrapper const&, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::FindFormatRO(SvNFFormatData const&, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > > const&, unsigned int)
SvNFEngine::FindFormatRW(SvNFFormatData const&, unsigned int)
SvNFEngine::GetCLOffsetRO(SvNFFormatData const&, SvNFLanguageData&, NativeNumberWrapper const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::GetCLOffsetRW(SvNFFormatData&, SvNFLanguageData&, NativeNumberWrapper const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::GetEditFormat(SvNFLanguageData&, SvNFFormatData const&, NativeNumberWrapper const&, SvNFEngine::Accessor const&, double, unsigned int, SvNumFormatType, SvNumberformat const*, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::GetRWPolicy(SvNFFormatData&)
SvNFEngine::GetStandardFormat(SvNFLanguageData&, SvNFFormatData const&, NativeNumberWrapper const&, SvNFEngine::Accessor const&, double, unsigned int, SvNumFormatType, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFEngine::ImpGetDefaultFormat(SvNFFormatData const&, SvNFEngine::Accessor const&, SvNumFormatType, unsigned int)
SvNFEngine::ImpGetDefaultFormat(SvNFFormatData const&, SvNumFormatType, unsigned int)
SvNFEngine::ImpGetStandardFormat(SvNFLanguageData&, SvNFFormatData const&, NativeNumberWrapper const&, SvNFEngine::Accessor const&, SvNumFormatType, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFFormatData::GetNewCurrencySymbolString(unsigned int, rtl::OUString&, NfCurrencyEntry const**, bool*) const
SvNFFormatData::MergeDefaultFormatKeys(std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > > const&)
SvNFFormatData::SvNFFormatData()
SvNFFormatData::~SvNFFormatData()
SvNFLanguageData::ChangeIntl(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFLanguageData::ChangeStandardPrec(short)
SvNFLanguageData::GetCalendar() const
SvNFLanguageData::GetCharClass() const
SvNFLanguageData::GetCompatibilityCurrency(rtl::OUString&, rtl::OUString&) const
SvNFLanguageData::GetCurrencyFormatStrings(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, NfCurrencyEntry const&, bool) const
SvNFLanguageData::GetFormatScanner() const
SvNFLanguageData::GetLangDecimalSep(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNFLanguageData::GetLanguageTag() const
SvNFLanguageData::GetNumDecimalSepAlt() const
SvNFLanguageData::GetNumThousandSep() const
SvNFLanguageData::GetTransliteration() const
SvNFLanguageData::ImpResolveLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>) const
SvNFLanguageData::IsDecimalSep(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvNFLanguageData::SvNFLanguageData(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, o3tl::strong_int<unsigned short, LanguageTypeTag>, SvNumberFormatter const&)
SvNumberFormatsSupplierObj::SvNumberFormatsSupplierObj()
SvNumberFormatsSupplierObj::getNumberFormatSettings()
SvNumberFormatsSupplierObj::getNumberFormats()
SvNumberFormatsSupplierObj::getSharedMutex() const
SvNumberFormatsSupplierObj::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvNumberFormatsSupplierObj::~SvNumberFormatsSupplierObj()
SvNumberFormatter::ChangeCL(SvNumFormatType, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::ExpandTwoDigitYear(unsigned short, unsigned short)
SvNumberFormatter::FillKeywordTable(std::array<rtl::OUString, 53ul>&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetCompatibilityCurrency(rtl::OUString&, rtl::OUString&) const
SvNumberFormatter::GetCurrencyEntry(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetCurrencyEntry(std::basic_string_view<char16_t, std::char_traits<char16_t> >, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetEntryTable(SvNumFormatType, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetFirstEntryTable(SvNumFormatType&, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>&)
SvNumberFormatter::GetFormatIntegerDigits(unsigned int) const
SvNumberFormatter::GetFormatSpecialInfo(rtl::OUString const&, bool&, bool&, unsigned short&, unsigned short&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetGlobalMutex()
SvNumberFormatter::GetNewCurrencySymbolString(unsigned int, rtl::OUString&, NfCurrencyEntry const**, bool*) const
SvNumberFormatter::GetNoZero() const
SvNumberFormatter::GetStandardName(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::GetSubstitutedEntry(unsigned int, unsigned int&)
SvNumberFormatter::GetUsedLanguages(std::vector<o3tl::strong_int<unsigned short, LanguageTypeTag>, std::allocator<o3tl::strong_int<unsigned short, LanguageTypeTag> > >&)
SvNumberFormatter::GetUserDefColor(unsigned short) const
SvNumberFormatter::GuessDateTimeFormat(SvNumFormatType&, double, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::ImpLookupCurrencyEntryLoopBody(NfCurrencyEntry const*&, bool&, NfCurrencyEntry const*, unsigned short, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvNumberFormatter::InvalidateDateAcceptancePatterns()
SvNumberFormatter::IsLocaleInstalled(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::IsUserDefined(std::basic_string_view<char16_t, std::char_traits<char16_t> >, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::MatchSystemCurrency()
SvNumberFormatter::PutandConvertEntrySystem(rtl::OUString&, int&, SvNumFormatType&, unsigned int&, o3tl::strong_int<unsigned short, LanguageTypeTag>, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::SetDefaultSystemCurrency(std::basic_string_view<char16_t, std::char_traits<char16_t> >, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberFormatter::SetNoZero(bool)
SvNumberFormatter::TestNewString(rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvNumberformat::GetConditions(SvNumberformatLimitOps&, double&, SvNumberformatLimitOps&, double&) const
SvNumberformat::GetCurrentLanguageData() const
SvNumberformat::GetDateOrder() const
SvNumberformat::GetDenominatorString(unsigned short) const
SvNumberformat::GetExactDateOrder() const
SvNumberformat::GetFormatStringForTimePrecision(int) const
SvNumberformat::GetIntegerFractionDelimiterString(unsigned short) const
SvNumberformat::GetNatNumModifierString(unsigned short) const
SvNumberformat::GetNatNumXml(com::sun::star::i18n::NativeNumberXmlAttributes2&, unsigned short, NativeNumberWrapper const&) const
SvNumberformat::GetNumForInfo(unsigned short, SvNumFormatType&, bool&, unsigned short&, unsigned short&) const
SvNumberformat::GetNumForNumberElementCount(unsigned short) const
SvNumberformat::GetNumForString(unsigned short, unsigned short, bool) const
SvNumberformat::GetNumForType(unsigned short, unsigned short) const
SvNumberformat::GetNumeratorString(unsigned short) const
SvNumberformat::GetOutputString(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString&, Color const**, bool) const
SvNumberformat::GetPercentString(unsigned short) const
SvNumberformat::GetQuoteEnd(rtl::OUString const&, int, char16_t, char16_t)
SvNumberformat::HasPositiveBracketPlaceholder() const
SvNumberformat::HasStringNegativeSign(rtl::OUString const&)
SvNumberformat::InsertBlanks(rtl::OUStringBuffer&, int, char16_t)
SvNumberformat::IsInQuote(rtl::OUString const&, int, char16_t, char16_t, char16_t)
SvNumberformat::IsMinuteSecondFormat() const
SvNumberformat::IsNegativeInBracket() const
SvNumberformat::IsNegativeWithoutSign() const
SvNumberformat::StripNewCurrencyDelimiters(rtl::OUString const&)
SvNumberformat::SvNumberformat(SvNumberformat const&, ImpSvNumberformatScan&)
SvNumberformat::SvNumberformat(rtl::OUString&, ImpSvNumberformatScan*, ImpSvNumberInputScan*, NativeNumberWrapper const&, int&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, bool)
SvNumberformat::SwitchToGregorianCalendar(std::basic_string_view<char16_t, std::char_traits<char16_t> >, double, CalendarWrapper&) const
SvNumberformat::SwitchToOtherCalendar(rtl::OUString&, double&, CalendarWrapper&) const
SvNumberformat::rChrCls() const
SvNumberformat::rLoc() const
SvObjectServerList::Get(SvGlobalName const&) const
SvObjectServerList::Get(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvPasswordHelper::GetPasswordStrengthPercentage(char const*)
SvPasswordHelper::PasswordMeetsPolicy(char const*, std::optional<rtl::OUString> const&)
SvPasswordHelper::PasswordMeetsPolicy(rtl::OUString const&, std::optional<rtl::OUString> const&)
SvPasteObjectHelper::GetSotFormatUIName(SotClipboardFormatId)
SvRTFParser::GetHexValue()
SvRTFParser::ScanText()
SvStream::Flush()
SvStream::FlushData()
SvStream::GetData(void*, unsigned long)
SvStream::PutData(void const*, unsigned long)
SvStream::SeekPos(unsigned long)
SvStream::SetSize(unsigned long)
SvStream::SvStream(SvLockBytes*)
SvStream::WriteLine(std::basic_string_view<char, std::char_traits<char> >)
SvUnoAttributeContainer::getByName(rtl::OUString const&)
SvUnoAttributeContainer::getElementNames()
SvUnoAttributeContainer::getElementType()
SvUnoAttributeContainer::getImplementationName()
SvUnoAttributeContainer::getSupportedServiceNames()
SvUnoAttributeContainer::hasByName(rtl::OUString const&)
SvUnoAttributeContainer::hasElements()
SvUnoAttributeContainer::insertByName(rtl::OUString const&, com::sun::star::uno::Any const&)
SvUnoAttributeContainer::removeByName(rtl::OUString const&)
SvUnoAttributeContainer::replaceByName(rtl::OUString const&, com::sun::star::uno::Any const&)
SvUnoAttributeContainer::supportsService(rtl::OUString const&)
SvXMLAttrContainerData::Remove(unsigned long)
SvXMLAttrContainerData::SetAt(unsigned long, rtl::OUString const&, rtl::OUString const&)
SvXMLAttrContainerData::SetAt(unsigned long, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLAttrContainerData::SetAt(unsigned long, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLAttrContainerItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvXMLAttrContainerItem::SvXMLAttrContainerItem(SvXMLAttrContainerItem const&)
SvXMLAutoStylePoolP::Add(XmlStyleFamily, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&&)
SvXMLAutoStylePoolP::AddFamily(XmlStyleFamily, rtl::OUString const&, SvXMLExportPropertyMapper*, rtl::OUString const&)
SvXMLAutoStylePoolP::GetAutoStyleEntries() const
SvXMLAutoStylePoolP::GetRegisteredNames(com::sun::star::uno::Sequence<int>&, com::sun::star::uno::Sequence<rtl::OUString>&)
SvXMLAutoStylePoolP::RegisterNames(com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
SvXMLElementExport::SvXMLElementExport(SvXMLExport&, bool, unsigned short, xmloff::token::XMLTokenEnum, bool, bool)
SvXMLEmbeddedObjectHelper::Init(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, comphelper::IEmbeddedHelper&, SvXMLEmbeddedObjectHelperMode)
SvXMLEmbeddedObjectHelper::SvXMLEmbeddedObjectHelper()
SvXMLEmbeddedObjectHelper::disposing(std::unique_lock<std::mutex>&)
SvXMLEmbeddedObjectHelper::getByName(rtl::OUString const&)
SvXMLEmbeddedObjectHelper::getElementNames()
SvXMLEmbeddedObjectHelper::getElementType()
SvXMLEmbeddedObjectHelper::hasByName(rtl::OUString const&)
SvXMLEmbeddedObjectHelper::hasElements()
SvXMLEmbeddedObjectHelper::resolveEmbeddedObjectURL(rtl::OUString const&)
SvXMLEmbeddedObjectHelper::splitObjectURL(rtl::OUString const&, rtl::OUString&, rtl::OUString&)
SvXMLEmbeddedObjectHelper::~SvXMLEmbeddedObjectHelper()
SvXMLExport::AddAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SvXMLExport::AddAttributeXmlId(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SvXMLExport::AddAttributesRDFa(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
SvXMLExport::AddLanguageTagAttributes(unsigned short, unsigned short, LanguageTag const&, bool)
SvXMLExport::EnsureNamespace(rtl::OUString const&)
SvXMLExport::GetDestinationShellID() const
SvXMLExport::GetGraphicMimeTypeFromStream(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString&)
SvXMLExport::GetImageMapExport()
SvXMLExport::GetODFVersionAttributeValue() const
SvXMLExport::GetSourceShellID() const
SvXMLExport::GetTargetStorage() const
SvXMLExport::GetViewSettingsAndViews(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
SvXMLExport::SetDocHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XDocumentHandler> const&)
SvXMLExport::SetError(int, com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
SvXMLExport::SetNullDateOnUnitConverter()
SvXMLExport::dataStyleForceSystemLanguage(int) const
SvXMLExport::exportTextNumberElement() const
SvXMLExport::getInterfaceToIdentifierMapper()
SvXMLExport::writeOutlineStyleAsNormalListStyle() const
SvXMLExportPropertyMapper::Equals(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&) const
SvXMLExportPropertyMapper::FilterDefaults(SvXMLExport const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&) const
SvXMLExportPropertyMapper::Filter_(SvXMLExport const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, bool) const
SvXMLExportPropertyMapper::GetStyleName() const
SvXMLExportPropertyMapper::LessPartial(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&) const
SvXMLExportPropertyMapper::SetStyleName(rtl::OUString const&)
SvXMLExportPropertyMapper::_exportXML(comphelper::AttributeList&, XMLPropertyState const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const*, unsigned int) const
SvXMLExportPropertyMapper::_exportXML(unsigned short, unsigned short&, comphelper::AttributeList&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, std::vector<unsigned short, std::allocator<unsigned short> >*, int, int) const
SvXMLExportPropertyMapper::exportElementItems(SvXMLExport&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, SvXmlExportFlags, std::vector<unsigned short, std::allocator<unsigned short> > const&) const
SvXMLExportPropertyMapper::exportXML(SvXMLExport&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, SvXmlExportFlags, bool) const
SvXMLExportPropertyMapper::exportXML(SvXMLExport&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, int, int, SvXmlExportFlags, bool) const
SvXMLGraphicHelper::Init(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, SvXMLGraphicHelperMode, rtl::OUString const&)
SvXMLGraphicHelper::SvXMLGraphicHelper()
SvXMLGraphicHelper::createInputStream(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
SvXMLGraphicHelper::createOutputStream()
SvXMLGraphicHelper::getInputStream(rtl::OUString const&)
SvXMLGraphicHelper::loadGraphicFromOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
SvXMLGraphicHelper::resolveGraphicObjectURL(rtl::OUString const&)
SvXMLGraphicHelper::resolveOutputStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
SvXMLGraphicHelper::saveGraphic(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
SvXMLGraphicHelper::saveGraphicByName(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, rtl::OUString&, rtl::OUString const&)
SvXMLGraphicHelper::~SvXMLGraphicHelper()
SvXMLImport::AddNumberStyle(int, rtl::OUString const&)
SvXMLImport::AddRDFa(com::sun::star::uno::Reference<com::sun::star::rdf::XMetadatable> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SvXMLImport::ConvStarBatsCharToStarSymbol(char16_t)
SvXMLImport::ConvStarMathCharToStarSymbol(char16_t)
SvXMLImport::CreateChartImport()
SvXMLImport::CreateDataStylesImport_()
SvXMLImport::CreateFastContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
SvXMLImport::GetBitmapHelper()
SvXMLImport::GetDashHelper()
SvXMLImport::GetEventImport()
SvXMLImport::GetFontDecls()
SvXMLImport::GetFontDecls() const
SvXMLImport::GetGradientHelper()
SvXMLImport::GetHatchHelper()
SvXMLImport::GetMarkerHelper()
SvXMLImport::GetSourceStorage() const
SvXMLImport::GetStreamForEmbeddedObjectURLFromBase64() const
SvXMLImport::GetStyles() const
SvXMLImport::GetTransGradientHelper()
SvXMLImport::IsMSO() const
SvXMLImport::IsODFVersionConsistent(rtl::OUString const&)
SvXMLImport::IsOOoXML() const
SvXMLImport::IsPackageURL(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvXMLImport::IsShapePositionInHoriL2R() const
SvXMLImport::IsTextDocInOOoFileFormat() const
SvXMLImport::ResolveEmbeddedObjectURL(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLImport::ResolveEmbeddedObjectURLFromBase64()
SvXMLImport::SetError(int, com::sun::star::uno::Sequence<rtl::OUString> const&)
SvXMLImport::SetError(int, rtl::OUString const&)
SvXMLImport::addEmbeddedFont(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<unsigned char, std::allocator<unsigned char> > const&, bool)
SvXMLImport::embeddedFontAlreadyProcessed(rtl::OUString const&)
SvXMLImport::getBuildIds(int&, int&) const
SvXMLImport::getGeneratorVersion() const
SvXMLImport::getInterfaceToIdentifierMapper()
SvXMLImport::getNamespacePrefixFromURI(rtl::OUString const&)
SvXMLImport::getNamespaceURIFromToken(int)
SvXMLImport::getPrefixAndNameFromToken(int)
SvXMLImport::getTokenFromName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLImport::initializeNamespaceMaps()
SvXMLImport::isGeneratorVersionOlderThan(unsigned short, unsigned short)
SvXMLImport::needFixPositionAfterZ() const
SvXMLImport::processNSAttributes(std::optional<SvXMLNamespaceMap>&, SvXMLImport*, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SvXMLImport::registerNamespaces()
SvXMLImportPropertyMapper::CheckSpecialContext(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, ContextID_Index_Pair*) const
SvXMLImportPropertyMapper::FillMultiPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XMultiPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, rtl::Reference<XMLPropertySetMapper> const&, ContextID_Index_Pair*)
SvXMLImportPropertyMapper::FillPropertySequence(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&) const
SvXMLImportPropertyMapper::FillPropertySet(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, ContextID_Index_Pair*) const
SvXMLImportPropertyMapper::FillPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, rtl::Reference<XMLPropertySetMapper> const&, SvXMLImport&, ContextID_Index_Pair*)
SvXMLImportPropertyMapper::FillTolerantMultiPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XTolerantMultiPropertySet> const&, rtl::Reference<XMLPropertySetMapper> const&, SvXMLImport&, ContextID_Index_Pair*)
SvXMLImportPropertyMapper::PrepareForMultiPropertySet_(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> > const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, rtl::Reference<XMLPropertySetMapper> const&, ContextID_Index_Pair*, com::sun::star::uno::Sequence<rtl::OUString>&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
SvXMLImportPropertyMapper::importXML(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, unsigned int, int, int) const
SvXMLImportPropertyMapper::importXMLAttribute(std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, SvXMLUnitConverter const&, SvXMLNamespaceMap const&, unsigned int, int, int, com::sun::star::uno::Reference<com::sun::star::container::XNameContainer>&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&) const
SvXMLLegacyToFastDocHandler::characters(rtl::OUString const&)
SvXMLLegacyToFastDocHandler::endDocument()
SvXMLLegacyToFastDocHandler::endElement(rtl::OUString const&)
SvXMLLegacyToFastDocHandler::ignorableWhitespace(rtl::OUString const&)
SvXMLLegacyToFastDocHandler::processingInstruction(rtl::OUString const&, rtl::OUString const&)
SvXMLLegacyToFastDocHandler::setDocumentLocator(com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
SvXMLLegacyToFastDocHandler::setTargetDocument(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&)
SvXMLLegacyToFastDocHandler::startDocument()
SvXMLLegacyToFastDocHandler::startElement(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
SvXMLMetaDocumentContext::FinishMetaElement()
SvXMLMetaDocumentContext::setBuildId(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
SvXMLNamespaceMap::AddAtIndex(rtl::OUString const&, rtl::OUString const&, unsigned short)
SvXMLNamespaceMap::AddIfKnown(rtl::OUString const&, rtl::OUString const&)
SvXMLNamespaceMap::Clear()
SvXMLNamespaceMap::GetAttrNameByIndex(unsigned short) const
SvXMLNamespaceMap::GetFirstIndex() const
SvXMLNamespaceMap::GetIndexByKey(unsigned short)
SvXMLNamespaceMap::GetKeyByName(rtl::OUString const&) const
SvXMLNamespaceMap::GetKeyByPrefix(rtl::OUString const&) const
SvXMLNamespaceMap::GetNextIndex(unsigned short) const
SvXMLNamespaceMap::GetPrefixByIndex(unsigned short) const
SvXMLNamespaceMap::GetPrefixByKey(unsigned short) const
SvXMLNamespaceMap::NormalizeOasisURN(rtl::OUString&)
SvXMLNamespaceMap::NormalizeURI(rtl::OUString&)
SvXMLNamespaceMap::NormalizeW3URI(rtl::OUString&)
SvXMLNamespaceMap::SvXMLNamespaceMap()
SvXMLNamespaceMap::operator=(SvXMLNamespaceMap const&)
SvXMLNamespaceMap::operator==(SvXMLNamespaceMap const&) const
SvXMLNumFormatContext::AddColor(Color)
SvXMLNumFormatContext::AddCondition(int)
SvXMLNumFormatContext::AddCondition(rtl::OUString const&, rtl::OUString const&)
SvXMLNumFormatContext::AddCurrency(rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvXMLNumFormatContext::AddNfKeyword(unsigned short)
SvXMLNumFormatContext::AddNumber(SvXMLNumberInfo const&)
SvXMLNumFormatContext::AddToCode(char16_t)
SvXMLNumFormatContext::AddToCode(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLNumFormatContext::CreateAndInsert(SvNumberFormatter*)
SvXMLNumFormatContext::CreateAndInsert(bool)
SvXMLNumFormatContext::CreateAndInsert(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
SvXMLNumFormatContext::GetLocaleData() const
SvXMLNumFormatContext::IsSystemLanguage() const
SvXMLNumFormatContext::ReplaceNfKeyword(unsigned short, unsigned short)
SvXMLNumFormatContext::SvXMLNumFormatContext(SvXMLImport&, int, SvXMLNumImpData*, SvXMLStylesTokens, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, SvXMLStylesContext&)
SvXMLNumFormatContext::SvXMLNumFormatContext(SvXMLImport&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, int, o3tl::strong_int<unsigned short, LanguageTypeTag>, SvXMLStylesContext&)
SvXMLNumFormatContext::UpdateCalendar(rtl::OUString const&)
SvXMLNumFormatContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
SvXMLNumFormatContext::~SvXMLNumFormatContext()
SvXMLStylesContext::GetAutoStyles(XmlStyleFamily) const
SvXMLStylesContext::GetFamily(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLStylesContext::GetStyle(unsigned int)
SvXMLStylesContext::GetStyle(unsigned int) const
SvXMLStylesContext::GetStyleCount() const
SvXMLStylesContext::dispose()
SvXMLUnitConverter::SetCoreMeasureUnit(short)
SvXMLUnitConverter::convertB3DVector(basegfx::B3DVector&, std::basic_string_view<char, std::char_traits<char> >)
SvXMLUnitConverter::convertB3DVector(rtl::OUStringBuffer&, basegfx::B3DVector const&)
SvXMLUnitConverter::convertDateTime(double&, std::basic_string_view<char, std::char_traits<char> >, com::sun::star::util::Date const&)
SvXMLUnitConverter::convertDateTime(double&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::util::Date const&)
SvXMLUnitConverter::convertDouble(double&, std::basic_string_view<char, std::char_traits<char> >) const
SvXMLUnitConverter::convertDouble(double&, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvXMLUnitConverter::convertDouble(rtl::OUStringBuffer&, double) const
SvXMLUnitConverter::convertEnumImpl(unsigned short&, std::basic_string_view<char, std::char_traits<char> >, SvXMLEnumMapEntry<unsigned short> const*)
SvXMLUnitConverter::convertEnumImpl(unsigned short&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, SvXMLEnumStringMapEntry<unsigned short> const*)
SvXMLUnitConverter::convertHex(rtl::OUStringBuffer&, unsigned int)
SvXMLUnitConverter::convertHex(unsigned int&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvXMLUnitConverter::convertMeasureToXML(int) const
SvXMLUnitConverter::convertNumFormat(rtl::OUStringBuffer&, short) const
SvXMLUnitConverter::convertNumFormat(short&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool) const
SvXMLUnitConverter::convertNumLetterSync(rtl::OUStringBuffer&, short)
SvXMLUnitConverter::convertPosition3D(com::sun::star::drawing::Position3D&, std::basic_string_view<char, std::char_traits<char> >) const
SvXMLUnitConverter::convertPosition3D(rtl::OUStringBuffer&, com::sun::star::drawing::Position3D const&)
SvXMLUnitConverter::getNumTypeInfo() const
SvXMLUnitConverter::getSaneDefaultVersion() const
SvXMLUnitConverter::overrideSaneDefaultVersion(SvtSaveOptions::ODFSaneDefaultVersion)
SvdProgressInfo::ReportActions(unsigned long)
SvdProgressInfo::ReportInserts(unsigned long)
SvdProgressInfo::ReportRescales(unsigned long)
SvdProgressInfo::SetActionCount(unsigned long)
SvdProgressInfo::SetInsertCount(unsigned long)
SvdProgressInfo::SetNextObject()
SvlResId(TranslateId)
SvmWriter::GetChecksum(GDIMetaFile const&)
SvpSalVirtualDevice::AcquireGraphics()
SvpSalVirtualDevice::CreateSurface(long, long, unsigned char*)
SvtBroadcaster::Add(SvtListener*)
SvtBroadcaster::Normalize() const
SvtBroadcaster::Remove(SvtListener*)
SvtBroadcaster::SvtBroadcaster(SvtBroadcaster const&)
SvtCJKOptions::IsAnyReadOnly()
SvtCJKOptions::IsJapaneseFindEnabled()
SvtCJKOptions::SetAll(bool)
SvtCTLOptions::IsReadOnly(SvtCTLOptions::EOption) const
SvtCTLOptions::SetCTLCursorMovement(SvtCTLOptions::CursorMovement)
SvtCTLOptions::SetCTLFontEnabled(bool)
SvtCTLOptions::SetCTLSequenceChecking(bool)
SvtCTLOptions::SetCTLSequenceCheckingRestricted(bool)
SvtCTLOptions::SetCTLSequenceCheckingTypeAndReplace(bool)
SvtCTLOptions::SetCTLTextNumerals(SvtCTLOptions::TextNumerals)
SvtCalendarBox::set_label_from_date()
SvtCommandOptions::EstablishFrameCallback(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
SvtCommandOptions::HasEntriesDisabled() const
SvtDefaultOptions::GetDefaultPath(SvtPathOptions::Paths)
SvtDynamicMenuOptions::GetMenu(EDynamicMenuType)
SvtGraphicFill::SvtGraphicFill()
SvtGraphicFill::SvtGraphicFill(tools::PolyPolygon, Color, double, SvtGraphicFill::FillRule, SvtGraphicFill::FillType, SvtGraphicFill::Transform const&, bool, SvtGraphicFill::HatchType, Color, SvtGraphicFill::GradientType, Color, Color, int, Graphic)
SvtGraphicFill::Transform::Transform()
SvtGraphicFill::getGraphic(Graphic&) const
SvtGraphicFill::getPath(tools::PolyPolygon&) const
SvtGraphicFill::getTransform(SvtGraphicFill::Transform&) const
SvtGraphicFill::setPath(tools::PolyPolygon const&)
SvtGraphicStroke::SvtGraphicStroke()
SvtGraphicStroke::SvtGraphicStroke(tools::Polygon, tools::PolyPolygon, tools::PolyPolygon, double, double, SvtGraphicStroke::CapType, SvtGraphicStroke::JoinType, double, std::vector<double, std::allocator<double> >&&)
SvtGraphicStroke::getDashArray(std::vector<double, std::allocator<double> >&) const
SvtGraphicStroke::getEndArrow(tools::PolyPolygon&) const
SvtGraphicStroke::getPath(tools::Polygon&) const
SvtGraphicStroke::getStartArrow(tools::PolyPolygon&) const
SvtGraphicStroke::scale(double, double)
SvtGraphicStroke::setEndArrow(tools::PolyPolygon const&)
SvtGraphicStroke::setPath(tools::Polygon const&)
SvtGraphicStroke::setStartArrow(tools::PolyPolygon const&)
SvtLineListBox::GrabFocus()
SvtLinguConfig::GetActiveDictionariesByFormat(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvtLinguConfig::GetDictionaryEntry(rtl::OUString const&, SvtLinguConfigDictionaryEntry&) const
SvtLinguConfig::GetDisabledDictionaries() const
SvtLinguConfig::GetElementNamesFor(rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString>&) const
SvtLinguConfig::GetMainUpdateAccess() const
SvtLinguConfig::GetProperties(com::sun::star::uno::Sequence<rtl::OUString> const&) const
SvtLinguConfig::GetSupportedDictionaryFormatsFor(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString>&) const
SvtLinguConfig::GetSynonymsContextImage(rtl::OUString const&) const
SvtLinguConfig::GetVendorImageUrl_Impl(rtl::OUString const&, rtl::OUString const&) const
SvtLinguConfig::IsReadOnly(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvtLinguConfig::ReplaceSetProperties(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SvtLinguConfig::SetProperty(int, com::sun::star::uno::Any const&)
SvtListener::BroadcasterDying(SvtBroadcaster&)
SvtMiscOptions::AddListenerLink(Link<LinkParamNone*, void> const&)
SvtMiscOptions::AreCurrentSymbolsLarge()
SvtMiscOptions::GetCurrentSymbolsSize()
SvtMiscOptions::GetIconTheme()
SvtMiscOptions::GetSymbolsSize()
SvtMiscOptions::IconThemeWasSetAutomatically() const
SvtMiscOptions::RemoveListenerLink(Link<LinkParamNone*, void> const&)
SvtMiscOptions::SetIconTheme(rtl::OUString const&)
SvtMiscOptions::SetSymbolsSize(short)
SvtModuleOptions::ClassifyFactoryByModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SvtModuleOptions::ClassifyFactoryByName(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SvtModuleOptions::EFactory&)
SvtModuleOptions::ClassifyFactoryByServiceName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvtModuleOptions::ClassifyFactoryByShortName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvtModuleOptions::ClassifyFactoryByURL(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
SvtModuleOptions::GetAllServiceNames()
SvtModuleOptions::GetDefaultModuleName() const
SvtModuleOptions::GetFactoryDefaultFilter(SvtModuleOptions::EFactory) const
SvtModuleOptions::GetFactoryIcon(SvtModuleOptions::EFactory) const
SvtModuleOptions::GetFactoryShortName(SvtModuleOptions::EFactory)
SvtModuleOptions::GetFactoryStandardTemplate(SvtModuleOptions::EFactory) const
SvtModuleOptions::IsDataBase() const
SvtModuleOptions::IsDefaultFilterReadonly(SvtModuleOptions::EFactory) const
SvtModuleOptions::SetFactoryDefaultFilter(SvtModuleOptions::EFactory, rtl::OUString const&)
SvtModuleOptions::SetFactoryStandardTemplate(SvtModuleOptions::EFactory, rtl::OUString const&)
SvtOptionsDialogOptions::IsGroupHidden(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvtOptionsDialogOptions::IsHidden(rtl::OUString const&) const
SvtOptionsDialogOptions::IsPageHidden(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvtOptionsDrawinglayer::GetSelectionMaximumLuminancePercent()
SvtOptionsDrawinglayer::IsAAPossibleOnThisSystem()
SvtOptionsDrawinglayer::IsSnapHorVerLinesToDiscrete()
SvtPathOptions::ExpandMacros(rtl::OUString const&) const
SvtPathOptions::GetBackupPath() const
SvtPathOptions::GetBitmapPath() const
SvtPathOptions::GetClassificationPath() const
SvtPathOptions::GetDictionaryPath() const
SvtPathOptions::GetFavoritesPath() const
SvtPathOptions::GetFilterPath() const
SvtPathOptions::GetFingerprintPath() const
SvtPathOptions::GetGraphicPath() const
SvtPathOptions::GetHelpPath() const
SvtPathOptions::GetIconsetPath() const
SvtPathOptions::GetLinguisticPath() const
SvtPathOptions::GetModulePath() const
SvtPathOptions::GetNumbertextPath() const
SvtPathOptions::GetPluginPath() const
SvtPathOptions::GetStoragePath() const
SvtPathOptions::UseVariable(rtl::OUString const&) const
SvtScriptedTextHelper::SvtScriptedTextHelper(SvtScriptedTextHelper const&)
SvtSearchOptions::Commit()
SvtSearchOptions::GetTransliterationFlags() const
SvtSearchOptions::IsBackwards() const
SvtSearchOptions::IsIgnoreDiacritics_CTL() const
SvtSearchOptions::IsIgnoreKashida_CTL() const
SvtSearchOptions::IsIgnoreMiddleDot() const
SvtSearchOptions::IsIgnoreProlongedSoundMark() const
SvtSearchOptions::IsIgnorePunctuation() const
SvtSearchOptions::IsIgnoreWhitespace() const
SvtSearchOptions::IsMatchBavaHafa() const
SvtSearchOptions::IsMatchCase() const
SvtSearchOptions::IsMatchContractions() const
SvtSearchOptions::IsMatchDiziDuzu() const
SvtSearchOptions::IsMatchFullHalfWidthForms() const
SvtSearchOptions::IsMatchHiraganaKatakana() const
SvtSearchOptions::IsMatchHyuiyuByuvyu() const
SvtSearchOptions::IsMatchIaiya() const
SvtSearchOptions::IsMatchKiku() const
SvtSearchOptions::IsMatchMinusDashChoon() const
SvtSearchOptions::IsMatchOldKanaForms() const
SvtSearchOptions::IsMatchRepeatCharMarks() const
SvtSearchOptions::IsMatchSesheZeje() const
SvtSearchOptions::IsMatchTsithichiDhizi() const
SvtSearchOptions::IsMatchVariantFormKanji() const
SvtSearchOptions::IsNotes() const
SvtSearchOptions::IsSearchFormatted() const
SvtSearchOptions::IsSimilaritySearch() const
SvtSearchOptions::IsUseAsianOptions() const
SvtSearchOptions::IsUseRegularExpression() const
SvtSearchOptions::IsUseWildcard() const
SvtSearchOptions::IsWholeWordsOnly() const
SvtSearchOptions::SetBackwards(bool)
SvtSearchOptions::SetIgnoreDiacritics_CTL(bool)
SvtSearchOptions::SetIgnoreKashida_CTL(bool)
SvtSearchOptions::SetIgnoreMiddleDot(bool)
SvtSearchOptions::SetIgnoreProlongedSoundMark(bool)
SvtSearchOptions::SetIgnorePunctuation(bool)
SvtSearchOptions::SetIgnoreWhitespace(bool)
SvtSearchOptions::SetMatchBavaHafa(bool)
SvtSearchOptions::SetMatchCase(bool)
SvtSearchOptions::SetMatchContractions(bool)
SvtSearchOptions::SetMatchDiziDuzu(bool)
SvtSearchOptions::SetMatchFullHalfWidthForms(bool)
SvtSearchOptions::SetMatchHiraganaKatakana(bool)
SvtSearchOptions::SetMatchHyuiyuByuvyu(bool)
SvtSearchOptions::SetMatchIaiya(bool)
SvtSearchOptions::SetMatchKiku(bool)
SvtSearchOptions::SetMatchMinusDashChoon(bool)
SvtSearchOptions::SetMatchOldKanaForms(bool)
SvtSearchOptions::SetMatchRepeatCharMarks(bool)
SvtSearchOptions::SetMatchSesheZeje(bool)
SvtSearchOptions::SetMatchTsithichiDhizi(bool)
SvtSearchOptions::SetMatchVariantFormKanji(bool)
SvtSearchOptions::SetNotes(bool)
SvtSearchOptions::SetSearchForStyles(bool)
SvtSearchOptions::SetSearchFormatted(bool)
SvtSearchOptions::SetSimilaritySearch(bool)
SvtSearchOptions::SetUseAsianOptions(bool)
SvtSearchOptions::SetUseRegularExpression(bool)
SvtSearchOptions::SetUseWildcard(bool)
SvtSearchOptions::SetWholeWordsOnly(bool)
SvtSecurityOptions::GetMacroSecurityLevel()
SvtSecurityOptions::GetSecureURLs()
SvtSecurityOptions::GetTrustedAuthors()
SvtSecurityOptions::IsMacroDisabled()
SvtSecurityOptions::IsReadOnly(SvtSecurityOptions::EOption)
SvtSecurityOptions::SetOption(SvtSecurityOptions::EOption, bool)
SvtSecurityOptions::SetSecureURLs(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&&)
SvtSecurityOptions::SetTrustedAuthors(std::vector<SvtSecurityOptions::Certificate, std::allocator<SvtSecurityOptions::Certificate> > const&)
SvtSecurityOptions::isSecureMacroUri(rtl::OUString const&, rtl::OUString const&)
SvtSecurityOptions::isTrustedLocationUri(rtl::OUString const&)
SvtSysLocale::GetOptions() const
SvtSysLocaleOptions::BlockBroadcasts(bool)
SvtSysLocaleOptions::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
SvtSysLocaleOptions::CreateCurrencyConfigString(rtl::OUString const&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvtSysLocaleOptions::GetCurrencyAbbrevAndLanguage(rtl::OUString&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, rtl::OUString const&)
SvtSysLocaleOptions::GetCurrencyChangeLink()
SvtSysLocaleOptions::GetCurrencyConfigString() const
SvtSysLocaleOptions::GetDatePatternsConfigString() const
SvtSysLocaleOptions::IsDecimalSeparatorAsLocale() const
SvtSysLocaleOptions::IsModified() const
SvtSysLocaleOptions::IsReadOnly(SvtSysLocaleOptions::EOption) const
SvtSysLocaleOptions::SetCurrencyChangeLink(Link<LinkParamNone*, void> const&)
SvtSysLocaleOptions::SetCurrencyConfigString(rtl::OUString const&)
SvtSysLocaleOptions::SetDatePatternsConfigString(rtl::OUString const&)
SvtSysLocaleOptions::SetDecimalSeparatorAsLocale(bool)
SvtURLBox::ParseSmart(rtl::OUString const&, rtl::OUString const&)
SvtURLBox::SetBaseURL(rtl::OUString const&)
SvtURLBox::SetFilter(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvtURLBox::SetNoURLSelection(bool)
SvtURLBox::SetOnlyDirectories(bool)
SvtUserOptions::GetEncryptToSelf() const
SvtUserOptions::GetEncryptionKey() const
SvtUserOptions::GetSigningKey() const
SvtUserOptions::IsTokenReadonly(UserOptToken) const
SvtUserOptions::SetBoolValue(UserOptToken, bool)
SvtViewOptions::Delete()
SvtViewOptions::GetVisible() const
SvtViewOptions::HasVisible() const
SvtViewOptions::IsVisible() const
SvtViewOptions::SetVisible(bool)
SvtViewOptions::impl_getSetNode(rtl::OUString const&, bool) const
Svx3DChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
Svx3DChildWindow::GetInfo() const
Svx3DChildWindow::Svx3DChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
Svx3DWin::ClickLight(LightButton const&)
Svx3DWin::Resize()
Svx3DWin::Svx3DWin(SfxBindings*, SfxChildWindow*, vcl::Window*)
Svx3DWin::UpdatePreview()
Svx3DWin::dispose()
Svx3DWin::~Svx3DWin()
SvxAbstractDialogFactory::~SvxAbstractDialogFactory()
SvxAdjustItem::Clone(SfxItemPool*) const
SvxAdjustItem::GetEnumValue() const
SvxAdjustItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxAdjustItem::GetValueCount() const
SvxAdjustItem::GetValueTextByPos(unsigned short)
SvxAdjustItem::SetEnumValue(unsigned short)
SvxAdjustItem::getItemInstanceManager() const
SvxAsianConfig::Commit()
SvxAsianConfig::SetCharDistanceCompression(CharCompressType)
SvxAsianConfig::SetKerningWesternTextOnly(bool)
SvxAsianConfig::SetStartEndChars(com::sun::star::lang::Locale const&, rtl::OUString const*, rtl::OUString const*)
SvxAttrNameTable::Count()
SvxAttrNameTable::FindIndex(int)
SvxAttrNameTable::GetString(unsigned int)
SvxAuthorField::Clone() const
SvxAuthorField::operator==(SvxFieldData const&) const
SvxAutoCorrCfg::SvxAutoCorrCfg()
SvxAutoCorrCfg::~SvxAutoCorrCfg()
SvxAutoCorrDoc::GetLanguage(int) const
SvxAutoCorrDoc::SaveCpltSttWord(ACFlags, int, rtl::OUString const&, char16_t)
SvxAutoCorrect::CreateLanguageFile(LanguageTag const&, bool)
SvxAutoCorrect::FindInCplSttExceptList(o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString const&, bool)
SvxAutoCorrect::FindInWordStartExceptList(o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString const&)
SvxAutoCorrect::FnCorrectCapsLock(SvxAutoCorrDoc&, rtl::OUString const&, int, int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::GetCharClass_(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::GetDefaultFlags()
SvxAutoCorrect::GetLanguageList_(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::GetLongText(rtl::OUString const&, rtl::OUString&)
SvxAutoCorrect::InsertQuote(SvxAutoCorrDoc&, int, char16_t, bool, bool, o3tl::strong_int<unsigned short, LanguageTypeTag>, ACQuotes) const
SvxAutoCorrect::MakeCombinedChanges(std::vector<SvxAutocorrWord, std::allocator<SvxAutocorrWord> >&, std::vector<SvxAutocorrWord, std::allocator<SvxAutocorrWord> >&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::NeedsHardspaceAutocorr(char16_t)
SvxAutoCorrect::PutText(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, rtl::OUString const&, SfxObjectShell&, rtl::OUString&)
SvxAutoCorrect::SaveCplSttExceptList(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::SaveWordStartExceptList(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxAutoCorrect::SetAutoCorrFlag(ACFlags, bool)
SvxAutoCorrect::SvxAutoCorrect(rtl::OUString, rtl::OUString)
SvxAutoCorrect::refreshBlockList(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SvxAutoCorrectLanguageLists::AddToCplSttExceptList(rtl::OUString const&)
SvxAutoCorrectLanguageLists::AddToWordStartExceptList(rtl::OUString const&)
SvxAutoCorrectLanguageLists::GetAutocorrWordList()
SvxAutoCorrectLanguageLists::GetCplSttExceptList()
SvxAutoCorrectLanguageLists::GetWordStartExceptList()
SvxAutoCorrectLanguageLists::IsFileChanged_Imp()
SvxAutoCorrectLanguageLists::LoadAutocorrWordList()
SvxAutoCorrectLanguageLists::LoadCplSttExceptList()
SvxAutoCorrectLanguageLists::LoadWordStartExceptList()
SvxAutoCorrectLanguageLists::LoadXMLExceptList_Imp(std::unique_ptr<SvStringsISortDtor, std::default_delete<SvStringsISortDtor> >&, rtl::OUString const&, rtl::Reference<SotStorage>&)
SvxAutoCorrectLanguageLists::MakeBlocklist_Imp(SotStorage&)
SvxAutoCorrectLanguageLists::MakeCombinedChanges(std::vector<SvxAutocorrWord, std::allocator<SvxAutocorrWord> >&, std::vector<SvxAutocorrWord, std::allocator<SvxAutocorrWord> >&)
SvxAutoCorrectLanguageLists::MakeUserStorage_Impl()
SvxAutoCorrectLanguageLists::PutText(rtl::OUString const&, SfxObjectShell&)
SvxAutoCorrectLanguageLists::PutText(rtl::OUString const&, rtl::OUString const&)
SvxAutoCorrectLanguageLists::RemoveStream_Imp(rtl::OUString const&)
SvxAutoCorrectLanguageLists::SaveCplSttExceptList()
SvxAutoCorrectLanguageLists::SaveExceptList_Imp(SvStringsISortDtor const&, rtl::OUString const&, rtl::Reference<SotStorage> const&, bool)
SvxAutoCorrectLanguageLists::SaveWordStartExceptList()
SvxAutoCorrectLanguageLists::SvxAutoCorrectLanguageLists(SvxAutoCorrect&, rtl::OUString, rtl::OUString)
SvxAutoCorrectLanguageLists::~SvxAutoCorrectLanguageLists()
SvxAutoKernItem::Clone(SfxItemPool*) const
SvxAutoKernItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxAutocorrWordList::DeleteAndDestroyAll()
SvxAutocorrWordList::FindAndRemove(SvxAutocorrWord const*)
SvxAutocorrWordList::Insert(SvxAutocorrWord) const
SvxAutocorrWordList::LoadEntry(rtl::OUString const&, rtl::OUString const&, bool)
SvxAutocorrWordList::SearchWordsInList(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int&, int) const
SvxAutocorrWordList::SvxAutocorrWordList()
SvxAutocorrWordList::WordMatches(SvxAutocorrWord const*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int&, int) const
SvxAutocorrWordList::empty() const
SvxAutocorrWordList::getSortedContent() const
SvxAutocorrWordList::~SvxAutocorrWordList()
SvxBitmapListItem::Clone(SfxItemPool*) const
SvxBitmapListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBitmapListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxBitmapListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxBitmapListItem::SvxBitmapListItem()
SvxBitmapListItem::SvxBitmapListItem(SvxBitmapListItem const&)
SvxBitmapListItem::operator==(SfxPoolItem const&) const
SvxBlinkItem::Clone(SfxItemPool*) const
SvxBlinkItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBmpMask::Close()
SvxBmpMask::GetMetaFile(Graphic const&)
SvxBmpMask::ImpMask(Animation const&)
SvxBmpMask::ImpMask(BitmapEx&)
SvxBmpMask::ImpMask(GDIMetaFile const&)
SvxBmpMask::ImpMaskTransparent(BitmapEx const&, Color const&, unsigned char)
SvxBmpMask::ImpReplaceTransparency(Animation const&, Color const&)
SvxBmpMask::ImpReplaceTransparency(GDIMetaFile const&, Color const&)
SvxBmpMask::InitColorArrays(Color*, Color*, unsigned char*)
SvxBmpMask::SetExecState(bool)
SvxBmpMask::SvxBmpMask(SfxBindings*, SfxChildWindow*, vcl::Window*)
SvxBmpMask::dispose()
SvxBmpMask::onSelect(MaskSet const*)
SvxBmpMask::~SvxBmpMask()
SvxBmpMaskChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxBmpMaskChildWindow::GetInfo() const
SvxBmpMaskChildWindow::SvxBmpMaskChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxBmpNumValueSet::SvxBmpNumValueSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SvxBmpNumValueSet::UserDraw(UserDrawEvent const&)
SvxBmpNumValueSet::init()
SvxBmpNumValueSet::~SvxBmpNumValueSet()
SvxBoxInfoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBoxInfoItem::HasMetrics() const
SvxBoxInfoItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxBoxInfoItem::ScaleMetrics(long, long)
SvxBoxInfoItem::dumpAsJSON[abi:cxx11]() const
SvxBoxItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBoxItem::HasMetrics() const
SvxBoxItem::ScaleMetrics(long, long)
SvxBoxItem::dumpAsJSON[abi:cxx11]() const
SvxBoxItem::dumpAsXml(_xmlTextWriter*) const
SvxBoxItem::tryMigrateComplexColor(SvxBoxItemLine)
SvxBrushItem::ApplyGraphicTransparency_Impl()
SvxBrushItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBrushItem::SvxBrushItem(SvxBrushItem&&)
SvxBrushItem::dumpAsXml(_xmlTextWriter*) const
SvxBrushItem::getItemInstanceManager() const
SvxBulletItem::Clone(SfxItemPool*) const
SvxBulletItem::GetFullText() const
SvxBulletItem::GetGraphicObject() const
SvxBulletItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxBulletItem::SetGraphicObject(GraphicObject const&)
SvxBulletItem::operator==(SfxPoolItem const&) const
SvxCaseMapItem::Clone(SfxItemPool*) const
SvxCaseMapItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCaseMapItem::GetValueCount() const
SvxCaseMapItem::GetValueTextByPos(unsigned short)
SvxCaseMapItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCaseMapItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxCharHiddenItem::Clone(SfxItemPool*) const
SvxCharHiddenItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharReliefItem::Clone(SfxItemPool*) const
SvxCharReliefItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharReliefItem::GetValueCount() const
SvxCharReliefItem::GetValueTextByPos(unsigned short)
SvxCharReliefItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCharReliefItem::getItemInstanceManager() const
SvxCharRotateItem::Clone(SfxItemPool*) const
SvxCharRotateItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharRotateItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCharRotateItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxCharRotateItem::dumpAsXml(_xmlTextWriter*) const
SvxCharRotateItem::operator==(SfxPoolItem const&) const
SvxCharScaleWidthItem::Clone(SfxItemPool*) const
SvxCharScaleWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCharScaleWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxCharacterMap::DisableFontSelection()
SvxCharacterMap::fillAllSubsets(weld::ComboBox&)
SvxCharacterMap::init()
SvxCharacterMap::insertCharToDoc(rtl::OUString const&)
SvxCharacterMap::insertSelectedCharacter(SvxShowCharSet const*)
SvxCharacterMap::selectCharByCode(SvxCharacterMap::Radix)
SvxCharacterMap::setCharName(unsigned int)
SvxCharacterMap::setFavButtonState(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxCharacterMap::toggleSearchView(bool)
SvxClipBoardControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxClipBoardControl::CreatePopupWindow()
SvxClipBoardControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxClipBoardControl::SvxClipBoardControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxClipBoardControl::~SvxClipBoardControl()
SvxClipboardFormatItem::Clone(SfxItemPool*) const
SvxClipboardFormatItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxClipboardFormatItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxClipboardFormatItem::SvxClipboardFormatItem(SvxClipboardFormatItem const&)
SvxClipboardFormatItem::operator==(SfxPoolItem const&) const
SvxColorChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxColorChildWindow::GetInfo() const
SvxColorChildWindow::SvxColorChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxColorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxColorItem::dumpAsXml(_xmlTextWriter*) const
SvxColorListItem::Clone(SfxItemPool*) const
SvxColorListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxColorListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxColorListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxColorListItem::SvxColorListItem()
SvxColorListItem::SvxColorListItem(SvxColorListItem const&)
SvxColorListItem::operator==(SfxPoolItem const&) const
SvxColorValueSet::addEntriesForColorSet(std::set<Color, std::less<Color>, std::allocator<Color> > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxColorValueSet::addEntriesForXColorList(XColorList const&, unsigned int)
SvxColorValueSet::layoutAllVisible(unsigned int)
SvxColorValueSet::layoutToGivenHeight(unsigned int, unsigned int)
SvxColumnDescription::GetWidth() const
SvxColumnDescription::operator!=(SvxColumnDescription const&) const
SvxColumnDescription::operator==(SvxColumnDescription const&) const
SvxColumnItem::At(unsigned short)
SvxColumnItem::Clone(SfxItemPool*) const
SvxColumnItem::GetActiveColumnDescription()
SvxColumnItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxColumnItem::IsConsistent() const
SvxColumnItem::IsFirstAct() const
SvxColumnItem::IsLastAct() const
SvxColumnItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxColumnItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxColumnItem::operator==(SfxPoolItem const&) const
SvxContourDlg::SvxContourDlg(SfxBindings*, SfxChildWindow*, weld::Window*)
SvxContourDlg::~SvxContourDlg()
SvxContourDlgChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxContourDlgChildWindow::GetInfo() const
SvxContourDlgChildWindow::SvxContourDlgChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxContourItem::Clone(SfxItemPool*) const
SvxContourItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCrossedOutItem::Clone(SfxItemPool*) const
SvxCrossedOutItem::GetBoolValue() const
SvxCrossedOutItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxCrossedOutItem::GetValueCount() const
SvxCrossedOutItem::GetValueTextByPos(unsigned short)
SvxCrossedOutItem::HasBoolValue() const
SvxCrossedOutItem::SetBoolValue(bool)
SvxCrossedOutItem::getItemInstanceManager() const
SvxCustomShape::SvxCustomShape(SdrObject*)
SvxCustomShape::createCustomShapeDefaults(rtl::OUString const&)
SvxCustomShape::getImplementationId()
SvxCustomShape::getPosition()
SvxCustomShape::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxCustomShape::queryAggregation(com::sun::star::uno::Type const&)
SvxCustomShape::queryInterface(com::sun::star::uno::Type const&)
SvxCustomShape::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxCustomShape::~SvxCustomShape()
SvxDashListItem::Clone(SfxItemPool*) const
SvxDashListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxDashListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxDashListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxDashListItem::SvxDashListItem()
SvxDashListItem::SvxDashListItem(SvxDashListItem const&)
SvxDashListItem::operator==(SfxPoolItem const&) const
SvxDateField::Clone() const
SvxDateField::GetFormatted(Date const&, SvxDateFormat, SvNumberFormatter&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxDateField::createBeginComment() const
SvxDateField::operator==(SvxFieldData const&) const
SvxDateTimeField::Clone() const
SvxDateTimeField::operator==(SvxFieldData const&) const
SvxDicListChgClamp::SvxDicListChgClamp(com::sun::star::uno::Reference<com::sun::star::linguistic2::XSearchableDictionaryList>)
SvxDicListChgClamp::~SvxDicListChgClamp()
SvxDoubleItem::Clone(SfxItemPool*) const
SvxDoubleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxDoubleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxDoubleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxDoubleItem::SvxDoubleItem(SvxDoubleItem const&)
SvxDoubleItem::SvxDoubleItem(double, TypedWhichId<SvxDoubleItem>)
SvxDoubleItem::operator==(SfxPoolItem const&) const
SvxDrawOutlinerViewForwarder::Copy()
SvxDrawOutlinerViewForwarder::Cut()
SvxDrawOutlinerViewForwarder::GetSelection(ESelection&) const
SvxDrawOutlinerViewForwarder::IsValid() const
SvxDrawOutlinerViewForwarder::LogicToPixel(Point const&, MapMode const&) const
SvxDrawOutlinerViewForwarder::Paste()
SvxDrawOutlinerViewForwarder::PixelToLogic(Point const&, MapMode const&) const
SvxDrawOutlinerViewForwarder::SetSelection(ESelection const&)
SvxDrawPage::CreateSdrObject(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool)
SvxDrawPage::CreateShapeByTypeAndInventor(SdrObjKind, SdrInventor, SdrObject*, SvxDrawPage*, rtl::OUString const&)
SvxDrawPage::GetTypeAndInventor(SdrObjKind&, SdrInventor&, rtl::OUString const&)
SvxEditEngineForwarder::AppendParagraph()
SvxEditEngineForwarder::AppendTextPortion(int, rtl::OUString const&, SfxItemSet const&)
SvxEditEngineForwarder::CalcFieldValue(SvxFieldItem const&, int, int, std::optional<Color>&, std::optional<Color>&, std::optional<FontLineStyle>&)
SvxEditEngineForwarder::CopyText(SvxTextForwarder const&)
SvxEditEngineForwarder::Delete(ESelection const&)
SvxEditEngineForwarder::FieldClicked(SvxFieldItem const&)
SvxEditEngineForwarder::GetAttribs(ESelection const&, EditEngineAttribs) const
SvxEditEngineForwarder::GetAttributeRun(int&, int&, int, int, bool) const
SvxEditEngineForwarder::GetBulletInfo(int) const
SvxEditEngineForwarder::GetCharBounds(int, int) const
SvxEditEngineForwarder::GetDepth(int) const
SvxEditEngineForwarder::GetEmptyItemSetPtr()
SvxEditEngineForwarder::GetFieldCount(int) const
SvxEditEngineForwarder::GetFieldInfo(int, unsigned short) const
SvxEditEngineForwarder::GetIndexAtPoint(Point const&, int&, int&) const
SvxEditEngineForwarder::GetItemState(ESelection const&, unsigned short) const
SvxEditEngineForwarder::GetItemState(int, unsigned short) const
SvxEditEngineForwarder::GetLanguage(int, int) const
SvxEditEngineForwarder::GetLineBoundaries(int&, int&, int, int) const
SvxEditEngineForwarder::GetLineCount(int) const
SvxEditEngineForwarder::GetLineLen(int, int) const
SvxEditEngineForwarder::GetLineNumberAtIndex(int, int) const
SvxEditEngineForwarder::GetMapMode() const
SvxEditEngineForwarder::GetParaAttribs(int) const
SvxEditEngineForwarder::GetParaBounds(int) const
SvxEditEngineForwarder::GetParagraphCount() const
SvxEditEngineForwarder::GetPool() const
SvxEditEngineForwarder::GetPortions(int, std::vector<int, std::allocator<int> >&) const
SvxEditEngineForwarder::GetRefDevice() const
SvxEditEngineForwarder::GetStyleSheet(int) const
SvxEditEngineForwarder::GetText(ESelection const&) const
SvxEditEngineForwarder::GetTextLen(int) const
SvxEditEngineForwarder::GetWordIndices(int, int, int&, int&) const
SvxEditEngineForwarder::InsertText(rtl::OUString const&, ESelection const&)
SvxEditEngineForwarder::IsValid() const
SvxEditEngineForwarder::QuickFormatDoc(bool)
SvxEditEngineForwarder::QuickInsertField(SvxFieldItem const&, ESelection const&)
SvxEditEngineForwarder::QuickInsertLineBreak(ESelection const&)
SvxEditEngineForwarder::QuickInsertText(rtl::OUString const&, ESelection const&)
SvxEditEngineForwarder::QuickSetAttribs(SfxItemSet const&, ESelection const&)
SvxEditEngineForwarder::RemoveAttribs(ESelection const&)
SvxEditEngineForwarder::SetDepth(int, short)
SvxEditEngineForwarder::SetParaAttribs(int, SfxItemSet const&)
SvxEditEngineForwarder::SetStyleSheet(int, rtl::OUString const&)
SvxEditSourceHelper::EEToUserSpace(Point const&, Size const&, bool)
SvxEditSourceHelper::EEToUserSpace(tools::Rectangle const&, Size const&, bool)
SvxEditSourceHelper::GetAttributeRun(int&, int&, EditEngine const&, int, int, bool)
SvxEditSourceHelper::UserSpaceToEE(Point const&, Size const&, bool)
SvxEmphasisMarkItem::Clone(SfxItemPool*) const
SvxEmphasisMarkItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxEmphasisMarkItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxEmphasisMarkItem::getItemInstanceManager() const
SvxErrorHandler::SvxErrorHandler()
SvxEscapementItem::Clone(SfxItemPool*) const
SvxEscapementItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxEscapementItem::GetValueCount() const
SvxEscapementItem::GetValueTextByPos(unsigned short)
SvxEscapementItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxEscapementItem::SetEnumValue(unsigned short)
SvxEscapementItem::operator==(SfxPoolItem const&) const
SvxExtFileField::Clone() const
SvxExtFileField::operator==(SvxFieldData const&) const
SvxExtTimeField::Clone() const
SvxExtTimeField::GetFormatted(tools::Time const&, SvxTimeFormat, SvNumberFormatter&, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxExtTimeField::createBeginComment() const
SvxExtTimeField::operator==(SvxFieldData const&) const
SvxFieldData::Clone() const
SvxFieldData::Create(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
SvxFieldData::createBeginComment() const
SvxFieldData::createEndComment()
SvxFieldData::operator==(SvxFieldData const&) const
SvxFieldItem::SvxFieldItem(SvxFieldItem const&)
SvxFieldItem::SvxFieldItem(std::unique_ptr<SvxFieldData, std::default_delete<SvxFieldData> >, unsigned short)
SvxFieldItem::operator==(SfxPoolItem const&) const
SvxFileField::Clone() const
SvxFileField::operator==(SvxFieldData const&) const
SvxFillAttrBox::Fill(weld::ComboBox&, rtl::Reference<XGradientList> const&)
SvxFillToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxFillToolBoxControl::CreateItemWindow(vcl::Window*)
SvxFillToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxFillToolBoxControl::SvxFillToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxFillToolBoxControl::Update()
SvxFillToolBoxControl::~SvxFillToolBoxControl()
SvxFirstLineIndentItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFirstLineIndentItem::HasMetrics() const
SvxFirstLineIndentItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxFirstLineIndentItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxFirstLineIndentItem::ScaleMetrics(long, long)
SvxFirstLineIndentItem::dumpAsJSON[abi:cxx11]() const
SvxFirstLineIndentItem::dumpAsXml(_xmlTextWriter*) const
SvxFont::ChgPhysFont(OutputDevice&) const
SvxFont::DrawCapital(OutputDevice*, Point const&, rtl::OUString const&, std::span<int const, 18446744073709551615ul>, std::span<unsigned char const, 18446744073709551615ul>, int, int) const
SvxFont::GetCapitalSize(OutputDevice const*, rtl::OUString const&, KernArray*, int, int) const
SvxFont::GetPhysTxtSize(OutputDevice const*)
SvxFont::GetPhysTxtSize(OutputDevice const*, rtl::OUString const&, int, int) const
SvxFont::QuickGetTextSize(OutputDevice const*, rtl::OUString const&, int, int, KernArray*, bool) const
SvxFont::SetNonAutoEscapement(short, OutputDevice const*)
SvxFont::SetPhysFont(OutputDevice&) const
SvxFontHeightItem::Clone(SfxItemPool*) const
SvxFontHeightItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFontHeightItem::HasMetrics() const
SvxFontHeightItem::ScaleMetrics(long, long)
SvxFontHeightItem::SetHeight(unsigned int, unsigned short, MapUnit, MapUnit)
SvxFontHeightItem::dumpAsXml(_xmlTextWriter*) const
SvxFontHeightItem::getItemInstanceManager() const
SvxFontItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFontItem::dumpAsXml(_xmlTextWriter*) const
SvxFontItem::getItemInstanceManager() const
SvxFontListItem::Clone(SfxItemPool*) const
SvxFontListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFontListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxFontListItem::operator==(SfxPoolItem const&) const
SvxFontPrevWindow::AutoCorrectFontColor()
SvxFontPrevWindow::GetFont() const
SvxFontPrevWindow::IsTwoLines() const
SvxFontPrevWindow::Paint(OutputDevice&, tools::Rectangle const&)
SvxFontPrevWindow::SetBrackets(char16_t, char16_t)
SvxFontPrevWindow::SetDrawingArea(weld::DrawingArea*)
SvxFontPrevWindow::SetFontNameAsPreviewText()
SvxFontPrevWindow::SetFontWidthScale(unsigned short)
SvxFontPrevWindow::SetOverlineColor(Color const&)
SvxFontPrevWindow::SetTextLineColor(Color const&)
SvxFontPrevWindow::SetTwoLines(bool)
SvxFontWorkChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxFontWorkChildWindow::GetInfo() const
SvxFontWorkChildWindow::SvxFontWorkChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxFooterField::Clone() const
SvxFooterField::operator==(SvxFieldData const&) const
SvxForbiddenCharactersTable::ClearForbiddenCharacters(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxForbiddenCharactersTable::SvxForbiddenCharactersTable(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>)
SvxForbiddenRuleItem::Clone(SfxItemPool*) const
SvxForbiddenRuleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFormatBreakItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFormatBreakItem::GetValueCount() const
SvxFormatBreakItem::GetValueTextByPos(unsigned short)
SvxFormatBreakItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxFormatBreakItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxFormatKeepItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFormatKeepItem::dumpAsXml(_xmlTextWriter*) const
SvxFormatSplitItem::Clone(SfxItemPool*) const
SvxFormatSplitItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFrameDirectionItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxFrameDirectionItem::dumpAsXml(_xmlTextWriter*) const
SvxFrameDirectionItem::getItemInstanceManager() const
SvxGalleryItem::Clone(SfxItemPool*) const
SvxGalleryItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxGalleryItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxGalleryItem::SvxGalleryItem()
SvxGalleryItem::SvxGalleryItem(SvxGalleryItem const&)
SvxGalleryItem::operator==(SfxPoolItem const&) const
SvxGalleryItem::~SvxGalleryItem()
SvxGradientListItem::Clone(SfxItemPool*) const
SvxGradientListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxGradientListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxGradientListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxGradientListItem::SvxGradientListItem()
SvxGradientListItem::SvxGradientListItem(SvxGradientListItem const&)
SvxGradientListItem::operator==(SfxPoolItem const&) const
SvxGrafBlueToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafBlueToolBoxControl::SvxGrafBlueToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafContrastToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafContrastToolBoxControl::SvxGrafContrastToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGammaToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGammaToolBoxControl::SvxGrafGammaToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGreenToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafGreenToolBoxControl::SvxGrafGreenToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafLuminanceToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafLuminanceToolBoxControl::SvxGrafLuminanceToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafModeToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafModeToolBoxControl::CreateItemWindow(vcl::Window*)
SvxGrafModeToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxGrafModeToolBoxControl::SvxGrafModeToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafModeToolBoxControl::~SvxGrafModeToolBoxControl()
SvxGrafRedToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafRedToolBoxControl::SvxGrafRedToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafTransparenceToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGrafTransparenceToolBoxControl::SvxGrafTransparenceToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxGraphicItem::Clone(SfxItemPool*) const
SvxGraphicItem::SvxGraphicItem(Graphic)
SvxGraphicItem::operator==(SfxPoolItem const&) const
SvxGridTabPage::LinkStubClickRotateHdl_Impl(void*, weld::Toggleable&)
SvxGutterLeftMarginItem::Clone(SfxItemPool*) const
SvxGutterLeftMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxGutterLeftMarginItem::HasMetrics() const
SvxGutterLeftMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxGutterLeftMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxGutterLeftMarginItem::ScaleMetrics(long, long)
SvxGutterLeftMarginItem::dumpAsJSON[abi:cxx11]() const
SvxGutterLeftMarginItem::dumpAsXml(_xmlTextWriter*) const
SvxGutterLeftMarginItem::operator==(SfxPoolItem const&) const
SvxGutterRightMarginItem::Clone(SfxItemPool*) const
SvxGutterRightMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxGutterRightMarginItem::HasMetrics() const
SvxGutterRightMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxGutterRightMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxGutterRightMarginItem::ScaleMetrics(long, long)
SvxGutterRightMarginItem::dumpAsJSON[abi:cxx11]() const
SvxGutterRightMarginItem::dumpAsXml(_xmlTextWriter*) const
SvxGutterRightMarginItem::operator==(SfxPoolItem const&) const
SvxHFPage::InitHandler()
SvxHFPage::LinkStubTurnOnHdl(void*, weld::Toggleable&)
SvxHFPage::RangeHdl()
SvxHFPage::TurnOn(weld::Toggleable const*)
SvxHFPage::UpdateExample()
SvxHangingPunctuationItem::Clone(SfxItemPool*) const
SvxHangingPunctuationItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHatchListItem::Clone(SfxItemPool*) const
SvxHatchListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHatchListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHatchListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHatchListItem::SvxHatchListItem()
SvxHatchListItem::SvxHatchListItem(SvxHatchListItem const&)
SvxHatchListItem::operator==(SfxPoolItem const&) const
SvxHeaderField::Clone() const
SvxHeaderField::operator==(SvxFieldData const&) const
SvxHlinkDlgWrapper::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxHlinkDlgWrapper::GetInfo() const
SvxHlinkDlgWrapper::QueryClose()
SvxHlinkDlgWrapper::SvxHlinkDlgWrapper(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxHlinkDlgWrapper::~SvxHlinkDlgWrapper()
SvxHorJustifyItem::Clone(SfxItemPool*) const
SvxHorJustifyItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHorJustifyItem::GetValueCount() const
SvxHorJustifyItem::GetValueText(SvxCellHorJustify)
SvxHorJustifyItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHorJustifyItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHorJustifyItem::SvxHorJustifyItem(unsigned short)
SvxHyperlinkItem::Clone(SfxItemPool*) const
SvxHyperlinkItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHyperlinkItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHyperlinkItem::SetMacroTable(SvxMacroTableDtor const&)
SvxHyperlinkItem::SvxHyperlinkItem(SvxHyperlinkItem const&)
SvxHyperlinkItem::SvxHyperlinkItem(TypedWhichId<SvxHyperlinkItem>, rtl::OUString, rtl::OUString, rtl::OUString, rtl::OUString, SvxLinkInsertMode, HyperDialogEvent, SvxMacroTableDtor const*, rtl::OUString)
SvxHyperlinkItem::operator==(SfxPoolItem const&) const
SvxHyphenZoneItem::Clone(SfxItemPool*) const
SvxHyphenZoneItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxHyphenZoneItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxHyphenZoneItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxHyphenZoneItem::operator==(SfxPoolItem const&) const
SvxIMapDlg::DoOpen()
SvxIMapDlg::DoSave()
SvxIMapDlg::SetActiveTool(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxIMapDlg::SetExecState(bool)
SvxIMapDlg::SetTargetList(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&)
SvxIMapDlg::SvxIMapDlg(SfxBindings*, SfxChildWindow*, weld::Window*)
SvxIMapDlg::URLModify()
SvxIMapDlg::UpdateLink(Graphic const&, ImageMap const*, std::vector<rtl::OUString, std::allocator<rtl::OUString> > const*, void*)
SvxIMapDlg::~SvxIMapDlg()
SvxIMapDlgChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxIMapDlgChildWindow::GetInfo() const
SvxIMapDlgChildWindow::SvxIMapDlgChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxImportMSVBasic::GetMSBasicStorageName()
SvxInsertStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxInsertStatusBarControl::Paint(UserDrawEvent const&)
SvxInsertStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxInsertStatusBarControl::SvxInsertStatusBarControl(unsigned short, unsigned short, StatusBar&)
SvxInsertStatusBarControl::~SvxInsertStatusBarControl()
SvxItemPropertySetUsrAnys::AddUsrAnyForID(com::sun::star::uno::Any const&, SfxItemPropertyMapEntry const&)
SvxJustifyMethodItem::Clone(SfxItemPool*) const
SvxJustifyMethodItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxJustifyMethodItem::GetValueCount() const
SvxJustifyMethodItem::GetValueText(SvxCellJustifyMethod)
SvxJustifyMethodItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxJustifyMethodItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxKerningItem::Clone(SfxItemPool*) const
SvxKerningItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxKerningItem::HasMetrics() const
SvxKerningItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxKerningItem::ScaleMetrics(long, long)
SvxLRSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLRSpaceItem::HasMetrics() const
SvxLRSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLRSpaceItem::ScaleMetrics(long, long)
SvxLRSpaceItem::dumpAsJSON[abi:cxx11]() const
SvxLRSpaceItem::dumpAsXml(_xmlTextWriter*) const
SvxLanguageBox::InsertLanguages(std::vector<o3tl::strong_int<unsigned short, LanguageTypeTag>, std::allocator<o3tl::strong_int<unsigned short, LanguageTypeTag> > > const&)
SvxLanguageBox::SaveEditedAsEntry(SvxLanguageBox**)
SvxLanguageBox::append(o3tl::strong_int<unsigned short, LanguageTypeTag>, rtl::OUString const&)
SvxLanguageBox::find_id(o3tl::strong_int<unsigned short, LanguageTypeTag>) const
SvxLanguageBox::get_id(int) const
SvxLanguageBox::remove_id(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxLanguageBox::set_id(int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SvxLanguageItem::Clone(SfxItemPool*) const
SvxLanguageItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLanguageItem::GetValueCount() const
SvxLanguageItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLanguageItem::getItemInstanceManager() const
SvxLeftMarginItem::Clone(SfxItemPool*) const
SvxLeftMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLeftMarginItem::HasMetrics() const
SvxLeftMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLeftMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLeftMarginItem::ScaleMetrics(long, long)
SvxLeftMarginItem::SetLeft(long, unsigned short)
SvxLeftMarginItem::SvxLeftMarginItem(long, unsigned short)
SvxLeftMarginItem::dumpAsJSON[abi:cxx11]() const
SvxLeftMarginItem::dumpAsXml(_xmlTextWriter*) const
SvxLeftMarginItem::operator==(SfxPoolItem const&) const
SvxLineEndLB::Append(XLineEndEntry const&, BitmapEx const&)
SvxLineEndLB::Fill(rtl::Reference<XLineEndList> const&, bool)
SvxLineEndLB::Modify(XLineEndEntry const&, int, BitmapEx const&)
SvxLineEndLB::SvxLineEndLB(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxLineEndListItem::Clone(SfxItemPool*) const
SvxLineEndListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLineEndListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLineEndListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLineEndListItem::SvxLineEndListItem()
SvxLineEndListItem::SvxLineEndListItem(SvxLineEndListItem const&)
SvxLineEndListItem::operator==(SfxPoolItem const&) const
SvxLineItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLineItem::HasMetrics() const
SvxLineItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLineLB::Append(XDashEntry const&, BitmapEx const&)
SvxLineLB::Fill(rtl::Reference<XDashList> const&)
SvxLineLB::Modify(XDashEntry const&, int, BitmapEx const&)
SvxLineLB::SvxLineLB(std::unique_ptr<weld::ComboBox, std::default_delete<weld::ComboBox> >)
SvxLineLB::setAddStandardFields(bool)
SvxLineSpacingItem::Clone(SfxItemPool*) const
SvxLineSpacingItem::GetEnumValue() const
SvxLineSpacingItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLineSpacingItem::GetValueCount() const
SvxLineSpacingItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLineSpacingItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLineSpacingItem::SetEnumValue(unsigned short)
SvxLineSpacingItem::operator==(SfxPoolItem const&) const
SvxLineWidthToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxLineWidthToolBoxControl::CreateItemWindow(vcl::Window*)
SvxLineWidthToolBoxControl::GetCoreMetric()
SvxLineWidthToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxLineWidthToolBoxControl::SvxLineWidthToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxLineWidthToolBoxControl::~SvxLineWidthToolBoxControl()
SvxLongLRSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLongLRSpaceItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLongLRSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLongLRSpaceItem::SvxLongLRSpaceItem()
SvxLongLRSpaceItem::operator==(SfxPoolItem const&) const
SvxLongULSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxLongULSpaceItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxLongULSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxLongULSpaceItem::SvxLongULSpaceItem()
SvxLongULSpaceItem::operator==(SfxPoolItem const&) const
SvxMSDffImportData::NotifyFreeObj(SdrObject*)
SvxMSDffImportRec::SvxMSDffImportRec(SvxMSDffImportRec const&)
SvxMSDffManager::CheckForConvertToSOObj(unsigned int, SotStorage&, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, Graphic const&, tools::Rectangle const&, rtl::OUString const&)
SvxMSDffManager::CheckTxBxStoryChain()
SvxMSDffManager::ConvertToOle2(SvStream&, unsigned int, GDIMetaFile const*, rtl::Reference<SotStorage> const&)
SvxMSDffManager::FreeObj(SvxMSDffClientData&, SdrObject*)
SvxMSDffManager::GetBLIPDirect(SvStream&, Graphic&, tools::Rectangle*)
SvxMSDffManager::GetCtrlData(unsigned int)
SvxMSDffManager::GetDrawingContainerData(SvStream&, unsigned int, unsigned short)
SvxMSDffManager::GetDrawingGroupContainerData(SvStream&, unsigned int)
SvxMSDffManager::GetFidclData(unsigned int)
SvxMSDffManager::GetGlobalChildAnchor(DffRecordHeader const&, SvStream&, tools::Rectangle&)
SvxMSDffManager::GetGroupAnchors(DffRecordHeader const&, SvStream&, tools::Rectangle&, tools::Rectangle&, tools::Rectangle const&, tools::Rectangle const&)
SvxMSDffManager::GetShapeContainerData(SvStream&, unsigned int, unsigned long, unsigned short)
SvxMSDffManager::GetShapeGroupContainerData(SvStream&, unsigned int, bool, unsigned short)
SvxMSDffManager::ImportGraphic(SvStream&, SfxItemSet&, DffObjData const&)
SvxMSDffManager::ImportGroup(DffRecordHeader const&, SvStream&, SvxMSDffClientData&, tools::Rectangle&, tools::Rectangle const&, int, int*)
SvxMSDffManager::ImportShape(DffRecordHeader const&, SvStream&, SvxMSDffClientData&, tools::Rectangle&, tools::Rectangle const&, int, int*)
SvxMSDffManager::MSO_TEXT_CLR_ToColor(unsigned int) const
SvxMSDffManager::MakeContentStream(SotStorage*, GDIMetaFile const&)
SvxMSDffManager::NotifyFreeObj(SvxMSDffClientData&, SdrObject*)
SvxMSDffManager::ReadCommonRecordHeader(SvStream&, unsigned char&, unsigned short&, unsigned short&, unsigned int&)
SvxMSDffManager::ReadObjText(rtl::OUString const&, SdrObject*)
SvxMSDffManager::Scale(Point&) const
SvxMSDffManager::Scale(int&) const
SvxMSDffManager::ScalePoint(int) const
SvxMSDffManager::ScalePt(unsigned int) const
SvxMSDffManager::SeekToRec2(unsigned short, unsigned short, unsigned long) const
SvxMSDffManager::SetDgContainer(SvStream&)
SvxMSDffManager::SetPropValue(com::sun::star::uno::Any const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&)
SvxMSDffManager::SvxMSDffManager(SvStream&, rtl::OUString)
SvxMSDffManager::insertShapeId(int, SdrObject*)
SvxMSDffManager::removeShapeId(SdrObject const*)
SvxMacroItem::Clone(SfxItemPool*) const
SvxMacroItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxMacroItem::operator==(SfxPoolItem const&) const
SvxMacroTableDtor::Read(SvStream&)
SvxMacroTableDtor::Write(SvStream&) const
SvxMarginItem::Clone(SfxItemPool*) const
SvxMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxMarginItem::SetBottomMargin(short)
SvxMarginItem::SetLeftMargin(short)
SvxMarginItem::SetRightMargin(short)
SvxMarginItem::SetTopMargin(short)
SvxModifyControl::Click()
SvxModifyControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxModifyControl::Paint(UserDrawEvent const&)
SvxModifyControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxModifyControl::SvxModifyControl(unsigned short, unsigned short, StatusBar&)
SvxModifyControl::_repaint()
SvxNoHyphenItem::Clone(SfxItemPool*) const
SvxNoHyphenItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxNumBulletItem::Clone(SfxItemPool*) const
SvxNumBulletItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxNumBulletItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxNumBulletItem::SvxNumBulletItem(SvxNumBulletItem const&)
SvxNumBulletItem::dumpAsXml(_xmlTextWriter*) const
SvxNumBulletItem::operator==(SfxPoolItem const&) const
SvxNumOptionsTabPageHelper::GetNumberingProvider()
SvxNumRule::SetLevel(unsigned short, SvxNumberFormat const*)
SvxNumRule::Store(SvStream&)
SvxNumRule::SvxNumRule(SvStream&)
SvxNumRule::SvxNumRule(SvxNumRule&&)
SvxNumRule::dumpAsXml(_xmlTextWriter*) const
SvxNumRule::operator=(SvxNumRule&&)
SvxNumValueSet::GetUITestFactory() const
SvxNumValueSet::SetNumberingSettings(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> > const&, com::sun::star::uno::Reference<com::sun::star::text::XNumberingFormatter> const&, com::sun::star::lang::Locale const&)
SvxNumValueSet::SetOutlineNumberingSettings(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> > const&, com::sun::star::uno::Reference<com::sun::star::text::XNumberingFormatter> const&, com::sun::star::lang::Locale const&)
SvxNumValueSet::SvxNumValueSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SvxNumValueSet::UserDraw(UserDrawEvent const&)
SvxNumValueSet::init(NumberingPageType)
SvxNumValueSet::~SvxNumValueSet()
SvxNumberFormat::Store(SvStream&, void*)
SvxNumberFormat::SvxNumberFormat(SvStream&)
SvxNumberFormatShell::AddFormat(rtl::OUString&, int&, unsigned short&, short&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
SvxNumberFormatShell::CategoryChanged(unsigned short, short&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
SvxNumberFormatShell::Create(SvNumberFormatter*, unsigned int, SvxNumberValueType, double, rtl::OUString const*)
SvxNumberFormatShell::Create(SvNumberFormatter*, unsigned int, SvxNumberValueType, rtl::OUString const&)
SvxNumberFormatShell::FindCurrencyFormat(NfCurrencyEntry const*, bool)
SvxNumberFormatShell::FindCurrencyFormat(rtl::OUString const&)
SvxNumberFormatShell::FindCurrencyTableEntry(rtl::OUString const&, bool&)
SvxNumberFormatShell::FindEntry(rtl::OUString const&, unsigned int*)
SvxNumberFormatShell::FormatChanged(unsigned short, rtl::OUString&, Color const*&)
SvxNumberFormatShell::GetCategory4Entry(short) const
SvxNumberFormatShell::GetComment4Entry(short)
SvxNumberFormatShell::GetCurrencySymbols(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, unsigned short*)
SvxNumberFormatShell::GetFormat4Entry(short)
SvxNumberFormatShell::GetFormatIntegerDigits(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvxNumberFormatShell::GetInitSettings(unsigned short&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, unsigned short&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, rtl::OUString&, Color const*&)
SvxNumberFormatShell::GetListPos4Entry(unsigned int, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxNumberFormatShell::GetOptions(rtl::OUString const&, bool&, bool&, unsigned short&, unsigned short&, unsigned short&)
SvxNumberFormatShell::GetStandardName() const
SvxNumberFormatShell::GetUpdateData() const
SvxNumberFormatShell::GetUserDefined4Entry(short)
SvxNumberFormatShell::IsInTable(unsigned short, bool, std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvxNumberFormatShell::IsNatNum12(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SvxNumberFormatShell::IsTmpCurrencyFormat(rtl::OUString const&)
SvxNumberFormatShell::IsUserDefined(rtl::OUString const&)
SvxNumberFormatShell::LanguageChanged(o3tl::strong_int<unsigned short, LanguageTypeTag>, short&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
SvxNumberFormatShell::MakeFormat(rtl::OUString&, bool, bool, unsigned short, unsigned short, unsigned short)
SvxNumberFormatShell::MakePrevStringFromVal(rtl::OUString const&, rtl::OUString&, Color const*&, double)
SvxNumberFormatShell::MakePreviewString(rtl::OUString const&, rtl::OUString&, Color const*&)
SvxNumberFormatShell::RemoveFormat(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short&, short&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
SvxNumberFormatShell::SetComment4Entry(short, rtl::OUString const&)
SvxNumberFormatShell::SetCurCurrencyEntry(NfCurrencyEntry*)
SvxNumberFormatShell::SetCurrencySymbol(unsigned int)
SvxNumberFormatShell::SvxNumberFormatShell(SvNumberFormatter*, unsigned int, SvxNumberValueType, double, rtl::OUString const*)
SvxNumberFormatShell::SvxNumberFormatShell(SvNumberFormatter*, unsigned int, SvxNumberValueType, rtl::OUString const&)
SvxNumberFormatShell::~SvxNumberFormatShell()
SvxNumberInfoItem::Clone(SfxItemPool*) const
SvxNumberInfoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxNumberInfoItem::SetDelFormats(std::vector<unsigned int, std::allocator<unsigned int> >&&)
SvxNumberInfoItem::SvxNumberInfoItem(SvxNumberInfoItem const&)
SvxNumberInfoItem::operator==(SfxPoolItem const&) const
SvxNumberingPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxObjectItem::Clone(SfxItemPool*) const
SvxObjectItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxObjectItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxObjectItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxObjectItem::SetEndX(long)
SvxObjectItem::SetEndY(long)
SvxObjectItem::SetStartX(long)
SvxObjectItem::SetStartY(long)
SvxObjectItem::operator==(SfxPoolItem const&) const
SvxOpaqueItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxOpenGraphicDialog::GetCurrentFilter() const
SvxOpenGraphicDialog::SetCurrentFilter(rtl::OUString const&)
SvxOpenGraphicDialog::SetDetectedFilter(rtl::OUString const&)
SvxOpenGraphicDialog::SetPath(rtl::OUString const&, bool)
SvxOrientationItem::Clone(SfxItemPool*) const
SvxOrientationItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxOrientationItem::GetRotation(o3tl::strong_int<int, FractionTag<100> >) const
SvxOrientationItem::GetValueCount() const
SvxOrientationItem::GetValueText(SvxCellOrientation)
SvxOrientationItem::IsStacked() const
SvxOrientationItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxOrphansItem::Clone(SfxItemPool*) const
SvxOrphansItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxOverlineItem::GetValueTextByPos(unsigned short) const
SvxOverlineItem::getItemInstanceManager() const
SvxPageField::Clone() const
SvxPageField::createBeginComment() const
SvxPageField::operator==(SvxFieldData const&) const
SvxPageItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPageItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPageItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPageItem::operator==(SfxPoolItem const&) const
SvxPageModelItem::Clone(SfxItemPool*) const
SvxPageModelItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPageModelItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPageModelItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPageModelItem::operator==(SfxPoolItem const&) const
SvxPagePosSizeItem::Clone(SfxItemPool*) const
SvxPagePosSizeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPagePosSizeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPagePosSizeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPagePosSizeItem::SvxPagePosSizeItem()
SvxPagePosSizeItem::operator==(SfxPoolItem const&) const
SvxPageTitleField::Clone() const
SvxPageTitleField::createBeginComment() const
SvxPageTitleField::operator==(SvxFieldData const&) const
SvxPageWindow::EnableFrameDirection(bool)
SvxPageWindow::ResetBackground()
SvxPageWindow::SetFrameDirection(SvxFrameDirection)
SvxPagesField::Clone() const
SvxPagesField::operator==(SvxFieldData const&) const
SvxPaperBinItem::Clone(SfxItemPool*) const
SvxPaperBinItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxParaGridItem::Clone(SfxItemPool*) const
SvxParaGridItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxParaPrevWindow::DrawParagraph(OutputDevice&)
SvxParaPrevWindow::Paint(OutputDevice&, tools::Rectangle const&)
SvxParaPrevWindow::SetDrawingArea(weld::DrawingArea*)
SvxParaVertAlignItem::Clone(SfxItemPool*) const
SvxParaVertAlignItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxParaVertAlignItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxParaVertAlignItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPatternListItem::Clone(SfxItemPool*) const
SvxPatternListItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPatternListItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxPatternListItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxPatternListItem::SvxPatternListItem()
SvxPatternListItem::SvxPatternListItem(SvxPatternListItem const&)
SvxPatternListItem::operator==(SfxPoolItem const&) const
SvxPixelCtl::ChangePixel(unsigned short)
SvxPixelCtl::CreateAccessible()
SvxPixelCtl::GetBitmapPixel(unsigned short) const
SvxPixelCtl::GetFocus()
SvxPixelCtl::GetFocusPosIndex() const
SvxPixelCtl::GetFocusRect()
SvxPixelCtl::IndexToPoint(long) const
SvxPixelCtl::KeyInput(KeyEvent const&)
SvxPixelCtl::LoseFocus()
SvxPixelCtl::MouseButtonDown(MouseEvent const&)
SvxPixelCtl::Paint(OutputDevice&, tools::Rectangle const&)
SvxPixelCtl::PointToIndex(Point const&) const
SvxPixelCtl::Reset()
SvxPixelCtl::Resize()
SvxPixelCtl::SetDrawingArea(weld::DrawingArea*)
SvxPixelCtl::SetXBitmap(BitmapEx const&)
SvxPixelCtl::ShowPosition(Point const&)
SvxPixelCtl::SvxPixelCtl(SvxTabPage*)
SvxPixelCtl::implCalFocusRect(Point const&)
SvxPixelCtl::~SvxPixelCtl()
SvxPosSizeStatusBarControl::Command(CommandEvent const&)
SvxPosSizeStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxPosSizeStatusBarControl::ImplUpdateItemText()
SvxPosSizeStatusBarControl::Paint(UserDrawEvent const&)
SvxPosSizeStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxPosSizeStatusBarControl::SvxPosSizeStatusBarControl(unsigned short, unsigned short, StatusBar&)
SvxPosSizeStatusBarControl::~SvxPosSizeStatusBarControl()
SvxPostItAuthorItem::Clone(SfxItemPool*) const
SvxPostItAuthorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostItAuthorItem::SvxPostItAuthorItem(TypedWhichId<SvxPostItAuthorItem>)
SvxPostItDateItem::Clone(SfxItemPool*) const
SvxPostItDateItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostItDateItem::SvxPostItDateItem(TypedWhichId<SvxPostItDateItem>)
SvxPostItIdItem::Clone(SfxItemPool*) const
SvxPostItIdItem::SvxPostItIdItem(TypedWhichId<SvxPostItIdItem>)
SvxPostItTextItem::Clone(SfxItemPool*) const
SvxPostItTextItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostItTextItem::SvxPostItTextItem(TypedWhichId<SvxPostItTextItem>)
SvxPostureItem::Clone(SfxItemPool*) const
SvxPostureItem::GetBoolValue() const
SvxPostureItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxPostureItem::GetValueCount() const
SvxPostureItem::GetValueTextByPos(unsigned short)
SvxPostureItem::HasBoolValue() const
SvxPostureItem::SetBoolValue(bool)
SvxPostureItem::dumpAsXml(_xmlTextWriter*) const
SvxPostureItem::getItemInstanceManager() const
SvxPresetListBox::Command(CommandEvent const&)
SvxPresetListBox::DrawLayout()
SvxPresetListBox::FillPresetListBox(XBitmapList&, unsigned int)
SvxPresetListBox::FillPresetListBox(XGradientList&, unsigned int)
SvxPresetListBox::FillPresetListBox(XHatchList&, unsigned int)
SvxPresetListBox::FillPresetListBox(XPatternList&, unsigned int)
SvxPresetListBox::OnMenuItemSelected(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxPresetListBox::Resize()
SvxPresetListBox::SetDrawingArea(weld::DrawingArea*)
SvxPresetListBox::SvxPresetListBox(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >)
SvxPrintItem::Clone(SfxItemPool*) const
SvxPrintItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxProtectItem::Clone(SfxItemPool*) const
SvxProtectItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxProtectItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxProtectItem::dumpAsXml(_xmlTextWriter*) const
SvxRTFParser::AttrGroupEnd()
SvxRTFParser::BuildWhichTable()
SvxRTFParser::CalcValue()
SvxRTFParser::CallParser()
SvxRTFParser::ClearAttrStack()
SvxRTFParser::ClearColorTbl()
SvxRTFParser::ClearStyleAttr_(SvxRTFItemStackType&)
SvxRTFParser::Continue(int)
SvxRTFParser::DelCharAtEnd(rtl::OUStringBuffer&, char16_t)
SvxRTFParser::GetAttrSet_()
SvxRTFParser::GetFont(unsigned short)
SvxRTFParser::GetRTFDefaults()
SvxRTFParser::IsAttrSttPos()
SvxRTFParser::NextToken(int)
SvxRTFParser::RTFPardPlain(bool, SfxItemSet**)
SvxRTFParser::ReadAttr(int, SfxItemSet*)
SvxRTFParser::ReadColorTable()
SvxRTFParser::ReadFontTable()
SvxRTFParser::ReadStyleTable()
SvxRTFParser::ReadTabAttr(int, SfxItemSet&)
SvxRTFParser::SetAllAttrOfStk()
SvxRTFParser::SetAttrInDoc(SvxRTFItemStackType&)
SvxRTFParser::SetAttrSet(SvxRTFItemStackType&)
SvxRTFParser::SetDefault(int, int)
SvxRTFParser::SetInsPos(EditPosition const&)
SvxRTFParser::SetScriptAttr(SvxRTFParser::RTF_CharTypeDef, SfxItemSet&, SfxPoolItem&)
SvxRTFParser::SvxRTFParser(SfxItemPool&, SvStream&)
SvxRTFParser::UnknownAttrToken(int)
SvxRTFParser::~SvxRTFParser()
SvxRatioConnector::Paint(OutputDevice&, tools::Rectangle const&)
SvxRectCtl::CalculateFocusRectangle() const
SvxRectCtl::CalculateFocusRectangle(RectPoint) const
SvxRectCtl::CreateAccessible()
SvxRectCtl::DoCompletelyDisable(bool)
SvxRectCtl::GetApproxLogPtFromPixPt(Point const&) const
SvxRectCtl::GetApproxRPFromPixPt(com::sun::star::awt::Point const&) const
SvxRectCtl::GetFocus()
SvxRectCtl::GetFocusRect()
SvxRectCtl::GetPointFromRP(RectPoint) const
SvxRectCtl::GetRPFromPoint(Point, bool) const
SvxRectCtl::KeyInput(KeyEvent const&)
SvxRectCtl::LoseFocus()
SvxRectCtl::MouseButtonDown(MouseEvent const&)
SvxRectCtl::Paint(OutputDevice&, tools::Rectangle const&)
SvxRectCtl::Reset()
SvxRectCtl::Resize()
SvxRectCtl::SetActualRP(RectPoint)
SvxRectCtl::SetActualRPWithoutInvalidate(RectPoint)
SvxRectCtl::SetControlSettings(RectPoint, unsigned short)
SvxRectCtl::SetDrawingArea(weld::DrawingArea*)
SvxRectCtl::SetState(CTL_STATE)
SvxRectCtl::StyleUpdated()
SvxRectCtl::SvxRectCtl(SvxTabPage*)
SvxRectCtl::~SvxRectCtl()
SvxRedlinTable::ColCompare(weld::TreeIter const&, weld::TreeIter const&)
SvxRedlinTable::LinkStubHeaderBarClick(void*, int)
SvxRelativeField::EnableRelativeMode(unsigned short, unsigned short)
SvxRelativeField::SetRelative(bool)
SvxRightMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxRightMarginItem::HasMetrics() const
SvxRightMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxRightMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxRightMarginItem::ScaleMetrics(long, long)
SvxRightMarginItem::dumpAsJSON[abi:cxx11]() const
SvxRightMarginItem::dumpAsXml(_xmlTextWriter*) const
SvxRightMarginItem::operator==(SfxPoolItem const&) const
SvxRotateModeItem::Clone(SfxItemPool*) const
SvxRotateModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxRotateModeItem::GetValueCount() const
SvxRotateModeItem::GetValueText(SvxRotateMode)
SvxRotateModeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxRotateModeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxRotateModeItem::SvxRotateModeItem(SvxRotateModeItem const&)
SvxRsidItem::Clone(SfxItemPool*) const
SvxRsidItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxRsidItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxRsidItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxRsidItem::dumpAsXml(_xmlTextWriter*) const
SvxRubyChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxRubyChildWindow::GetInfo() const
SvxRubyChildWindow::SvxRubyChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxRuler::AdjustMargin1(long)
SvxRuler::ApplyBorders()
SvxRuler::ApplyIndents()
SvxRuler::ApplyMargins()
SvxRuler::ApplyObject()
SvxRuler::ApplyTabs()
SvxRuler::CalcMinMax()
SvxRuler::CalcPropMaxRight(unsigned short) const
SvxRuler::ConvertHPosPixel(long) const
SvxRuler::ConvertHSizePixel(long) const
SvxRuler::ConvertPosPixel(long) const
SvxRuler::ConvertSizePixel(long) const
SvxRuler::ConvertVPosPixel(long) const
SvxRuler::ConvertVSizePixel(long) const
SvxRuler::DragBorders()
SvxRuler::DragIndents()
SvxRuler::DragMargin1()
SvxRuler::DragMargin2()
SvxRuler::DragObjectBorder()
SvxRuler::DragTabs()
SvxRuler::DrawLine_Impl(long&, int, bool)
SvxRuler::EvalModifier()
SvxRuler::GetActLeftColumn(bool, unsigned short) const
SvxRuler::GetActRightColumn(bool, unsigned short) const
SvxRuler::GetCorrectedDragPos(bool, bool)
SvxRuler::GetFirstLineIndent() const
SvxRuler::GetLeftFrameMargin() const
SvxRuler::GetLeftIndent() const
SvxRuler::GetLogicRightIndent() const
SvxRuler::GetRightFrameMargin() const
SvxRuler::GetRightIndent() const
SvxRuler::IsActFirstColumn(bool, unsigned short) const
SvxRuler::IsActLastColumn(bool, unsigned short) const
SvxRuler::MakePositionSticky(long, long, bool) const
SvxRuler::MenuSelect(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxRuler::PixelAdjust(long, long) const
SvxRuler::PixelHAdjust(long, long) const
SvxRuler::PixelVAdjust(long, long) const
SvxRuler::PrepareProportional_Impl(RulerType)
SvxRuler::RoundToCurrentMapMode(long) const
SvxRuler::StartListening_Impl()
SvxRuler::TabMenuSelect(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxRuler::Update(SvxColumnItem const*, unsigned short)
SvxRuler::Update(SvxObjectItem const*)
SvxRuler::Update(SvxPagePosSizeItem const*)
SvxRuler::Update(SvxProtectItem const*)
SvxRuler::Update(SvxTabStopItem const*)
SvxRuler::UpdateBorder(SvxLRSpaceItem const*)
SvxRuler::UpdateColumns()
SvxRuler::UpdateFrame()
SvxRuler::UpdateFrame(SvxLongLRSpaceItem const*)
SvxRuler::UpdateFrame(SvxLongULSpaceItem const*)
SvxRuler::UpdateFrameMinMax(SfxRectangleItem const*)
SvxRuler::UpdateObject()
SvxRuler::UpdatePage()
SvxRuler::UpdatePara()
SvxRuler::UpdatePara(SvxLRSpaceItem const*)
SvxRuler::UpdateParaContents_Impl(long, SvxRuler::UpdateType)
SvxRuler::UpdateTabs()
SvxRuler::UpdateTextRTL(SfxBoolItem const*)
SvxScriptSetItem::Clone(SfxItemPool*) const
SvxScriptSetItem::GetItemOfScript(unsigned short, SfxItemSet const&, SvtScriptType)
SvxScriptSetItem::GetItemOfScriptSet(SfxItemSet const&, unsigned short)
SvxScriptSetItem::GetSlotIds(unsigned short, unsigned short&, unsigned short&, unsigned short&)
SvxScriptSetItem::GetWhichIds(unsigned short&, unsigned short&, unsigned short&) const
SvxScriptSetItem::GetWhichIds(unsigned short, SfxItemSet const&, unsigned short&, unsigned short&, unsigned short&)
SvxScriptSpaceItem::Clone(SfxItemPool*) const
SvxScriptSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxSearchCharSet::AppendCharToList(unsigned int)
SvxSearchCharSet::ClearPreviousData()
SvxSearchCharSet::GetCharFromIndex(int) const
SvxSearchCharSet::GetSelectCharacter() const
SvxSearchCharSet::ImplGetItem(int)
SvxSearchCharSet::KeyInput(KeyEvent const&)
SvxSearchCharSet::LastInView() const
SvxSearchCharSet::Paint(OutputDevice&, tools::Rectangle const&)
SvxSearchCharSet::RecalculateFont(OutputDevice&)
SvxSearchCharSet::SelectCharacter(Subset const*)
SvxSearchCharSet::SelectIndex(int, bool)
SvxSearchCharSet::SvxSearchCharSet(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >, VclPtr<VirtualDevice> const&)
SvxSearchCharSet::UpdateScrollRange()
SvxSearchCharSet::getMaxCharCount() const
SvxSearchDialog::Activate()
SvxSearchDialog::ChildWinDispose()
SvxSearchDialog::Close()
SvxSearchDialog::GetTransliterationFlags() const
SvxSearchDialog::SetSaveToModule(bool)
SvxSearchDialog::SetSearchLabel(rtl::OUString const&)
SvxSearchDialog::SvxSearchDialog(weld::Window*, SfxChildWindow*, SfxBindings&)
SvxSearchDialog::~SvxSearchDialog()
SvxSearchDialogWrapper::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
SvxSearchDialogWrapper::GetInfo() const
SvxSearchDialogWrapper::GetSearchLabel()
SvxSearchDialogWrapper::SvxSearchDialogWrapper(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo const*)
SvxSearchDialogWrapper::~SvxSearchDialogWrapper()
SvxSearchItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxSearchItem::ImplCommit()
SvxSearchItem::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxSearchItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxSearchItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxSearchItem::SetTransliterationFlags(TransliterationFlags)
SvxSearchItem::operator==(SfxPoolItem const&) const
SvxSelectionModeControl::Click()
SvxSelectionModeControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxSelectionModeControl::MouseButtonDown(MouseEvent const&)
SvxSelectionModeControl::Paint(UserDrawEvent const&)
SvxSelectionModeControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxSelectionModeControl::SvxSelectionModeControl(unsigned short, unsigned short, StatusBar&)
SvxSetItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxShadowItem::GetEnumValue() const
SvxShadowItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxShadowItem::GetValueCount() const
SvxShadowItem::HasMetrics() const
SvxShadowItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxShadowItem::ScaleMetrics(long, long)
SvxShadowItem::SetEnumValue(unsigned short)
SvxShadowItem::dumpAsXml(_xmlTextWriter*) const
SvxShadowedItem::Clone(SfxItemPool*) const
SvxShadowedItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxShape::Create(SdrObject*, SvxDrawPage*)
SvxShape::ForceMetricTo100th_mm(Pair&) const
SvxShape::ForceMetricTo100th_mm(basegfx::B2DHomMatrix&) const
SvxShape::ForceMetricTo100th_mm(basegfx::B2DPolyPolygon&) const
SvxShape::ForceMetricToItemPoolMetric(Pair&) const
SvxShape::ForceMetricToItemPoolMetric(basegfx::B2DHomMatrix&) const
SvxShape::ForceMetricToItemPoolMetric(basegfx::B2DPolyPolygon&) const
SvxShape::GetAnyForItem(SfxItemSet const&, SfxItemPropertyMapEntry const*) const
SvxShape::GetBitmap(bool) const
SvxShape::InvalidateSdrObject()
SvxShape::Notify(SfxBroadcaster&, SfxHint const&)
SvxShape::ObtainSettingsFromPropertySet(SvxItemPropertySet const&)
SvxShape::SetFillAttribute(unsigned short, rtl::OUString const&)
SvxShape::SetFillAttribute(unsigned short, rtl::OUString const&, SfxItemSet&, SdrModel const*)
SvxShape::SvxShape(SdrObject*)
SvxShape::SvxShape(SdrObject*, std::span<SfxItemPropertyMapEntry const, 18446744073709551615ul>, SvxItemPropertySet const*)
SvxShape::addActionLock()
SvxShape::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxShape::addPropertiesChangeListener(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
SvxShape::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxShape::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxShape::dispose()
SvxShape::endSetPropertyValues()
SvxShape::firePropertiesChangeEvent(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
SvxShape::getGluePoints()
SvxShape::getImplementationId()
SvxShape::getImplementationName()
SvxShape::getName()
SvxShape::getParent()
SvxShape::getPosition()
SvxShape::getPropertyDefault(rtl::OUString const&)
SvxShape::getPropertyDefaults(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::getPropertySetInfo()
SvxShape::getPropertyState(rtl::OUString const&)
SvxShape::getPropertyStateImpl(SfxItemPropertyMapEntry const*, com::sun::star::beans::PropertyState&)
SvxShape::getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::getPropertyValue(rtl::OUString const&)
SvxShape::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxShape::getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::getShapeType()
SvxShape::getSize()
SvxShape::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvxShape::getSupportedServiceNames()
SvxShape::getTypes()
SvxShape::isActionLocked()
SvxShape::lock()
SvxShape::notifyPropertyChange(rtl::OUString const&)
SvxShape::queryAggregation(com::sun::star::uno::Type const&)
SvxShape::removeActionLock()
SvxShape::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxShape::removePropertiesChangeListener(com::sun::star::uno::Reference<com::sun::star::beans::XPropertiesChangeListener> const&)
SvxShape::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxShape::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxShape::resetActionLocks()
SvxShape::setActionLocks(short)
SvxShape::setAllPropertiesToDefault()
SvxShape::setName(rtl::OUString const&)
SvxShape::setParent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
SvxShape::setPosition(com::sun::star::awt::Point const&)
SvxShape::setPropertiesToDefault(com::sun::star::uno::Sequence<rtl::OUString> const&)
SvxShape::setPropertyToDefault(rtl::OUString const&)
SvxShape::setPropertyToDefaultImpl(SfxItemPropertyMapEntry const*)
SvxShape::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxShape::setPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
SvxShape::setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxShape::setShapeKind(SdrObjKind)
SvxShape::setSize(com::sun::star::awt::Size const&)
SvxShape::supportsService(rtl::OUString const&)
SvxShape::unlock()
SvxShape::updateShapeKind()
SvxShape::~SvxShape()
SvxShapeGroupAnyD::SvxShapeGroupAnyD(SdrObject*, std::span<SfxItemPropertyMapEntry const, 18446744073709551615ul>, SvxItemPropertySet const*)
SvxShapeGroupAnyD::~SvxShapeGroupAnyD()
SvxShapeText::Create(SdrObject*, SvxDrawPage*)
SvxShapeText::SvxShapeText(SdrObject*, std::span<SfxItemPropertyMapEntry const, 18446744073709551615ul>, SvxItemPropertySet const*)
SvxShapeText::getEnd()
SvxShapeText::getImplementationId()
SvxShapeText::getImplementationName()
SvxShapeText::getPropertyStateImpl(SfxItemPropertyMapEntry const*, com::sun::star::beans::PropertyState&)
SvxShapeText::getPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&)
SvxShapeText::getSomething(com::sun::star::uno::Sequence<signed char> const&)
SvxShapeText::getStart()
SvxShapeText::getString()
SvxShapeText::getSupportedServiceNames()
SvxShapeText::getTypes()
SvxShapeText::lock()
SvxShapeText::queryAggregation(com::sun::star::uno::Type const&)
SvxShapeText::queryInterface(com::sun::star::uno::Type const&)
SvxShapeText::setPropertyToDefaultImpl(SfxItemPropertyMapEntry const*)
SvxShapeText::setPropertyValueImpl(rtl::OUString const&, SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&)
SvxShapeText::setString(rtl::OUString const&)
SvxShapeText::supportsService(rtl::OUString const&)
SvxShapeText::unlock()
SvxShapeText::~SvxShapeText()
SvxShowText::Paint(OutputDevice&, tools::Rectangle const&)
SvxShowText::Resize()
SvxShowText::SetDrawingArea(weld::DrawingArea*)
SvxShowText::SetFont(vcl::Font const&)
SvxShowText::SetText(rtl::OUString const&)
SvxShowText::SvxShowText(VclPtr<VirtualDevice> const&)
SvxSizeItem::Clone(SfxItemPool*) const
SvxSizeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxSizeItem::HasMetrics() const
SvxSizeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxSizeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxSizeItem::ScaleMetrics(long, long)
SvxSmartTagItem::Clone(SfxItemPool*) const
SvxSmartTagItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxSmartTagItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxSmartTagItem::operator==(SfxPoolItem const&) const
SvxSpellWrapper::FindSpellError()
SvxSpellWrapper::GetAllRightDic()
SvxSpellWrapper::InsertHyphen(int)
SvxSpellWrapper::ShowLanguageErrors()
SvxSpellWrapper::SpellContinue()
SvxSpellWrapper::SpellMore()
SvxSpellWrapper::SpellStart(SvxSpellArea)
SvxSpellWrapper::SvxSpellWrapper(weld::Widget*, bool, bool)
SvxStatusItem::Clone(SfxItemPool*) const
SvxStatusItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxStatusItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxStatusItem::operator==(SfxPoolItem const&) const
SvxTPFilter::DeactivatePage()
SvxTPFilter::EnableDateLine1(bool)
SvxTPFilter::EnableDateLine2(bool)
SvxTPFilter::SetRedlinTable(SvxRedlinTable*)
SvxTPFilter::ShowAction(bool)
SvxTPView::ActivatePage()
SvxTPView::DeactivatePage()
SvxTPView::SvxTPView(weld::Container*)
SvxTPView::~SvxTPView()
SvxTPage::ActivatePage()
SvxTPage::SvxTPage(weld::Container*, rtl::OUString const&, rtl::OUString const&)
SvxTPage::~SvxTPage()
SvxTabStop::dumpAsXml(_xmlTextWriter*) const
SvxTabStopItem::GetDefaultDistance() const
SvxTabStopItem::GetPos(SvxTabStop const&) const
SvxTabStopItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTabStopItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTabStopItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTabStopItem::SetDefaultDistance(int)
SvxTabStopItem::dumpAsXml(_xmlTextWriter*) const
SvxTableField::Clone() const
SvxTableField::operator==(SvxFieldData const&) const
SvxTbxCtlDraw::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxTbxCtlDraw::Select(unsigned short)
SvxTbxCtlDraw::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxTbxCtlDraw::SvxTbxCtlDraw(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
SvxTbxCtlDraw::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxTbxCtlDraw::toggleToolbox()
SvxTextEncodingBox::InsertTextEncoding(unsigned short)
SvxTextEncodingTable::GetTextEncoding(rtl::OUString const&)
SvxTextEncodingTreeView::InsertTextEncoding(unsigned short)
SvxTextEncodingTreeView::InsertTextEncoding(unsigned short, rtl::OUString const&)
SvxTextForwarder::GetNumberingStartValue(int)
SvxTextForwarder::IsParaIsNumberingRestart(int)
SvxTextForwarder::SetNumberingStartValue(int, int)
SvxTextForwarder::SetParaIsNumberingRestart(int, bool)
SvxTextForwarder::~SvxTextForwarder()
SvxTextLeftMarginItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTextLeftMarginItem::HasMetrics() const
SvxTextLeftMarginItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTextLeftMarginItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTextLeftMarginItem::ScaleMetrics(long, long)
SvxTextLeftMarginItem::dumpAsJSON[abi:cxx11]() const
SvxTextLeftMarginItem::dumpAsXml(_xmlTextWriter*) const
SvxTextLineItem::Clone(SfxItemPool*) const
SvxTextLineItem::GetBoolValue() const
SvxTextLineItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTextLineItem::GetValueCount() const
SvxTextLineItem::GetValueTextByPos(unsigned short) const
SvxTextLineItem::HasBoolValue() const
SvxTextLineItem::SetBoolValue(bool)
SvxTextLineItem::SvxTextLineItem(FontLineStyle, unsigned short)
SvxTextRotateItem::Clone(SfxItemPool*) const
SvxTextRotateItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTextRotateItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTextRotateItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTextRotateItem::dumpAsXml(_xmlTextWriter*) const
SvxTimeField::Clone() const
SvxTimeField::createBeginComment() const
SvxTimeField::operator==(SvxFieldData const&) const
SvxTwoLinesItem::Clone(SfxItemPool*) const
SvxTwoLinesItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxTwoLinesItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxTwoLinesItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxTwoLinesItem::operator==(SfxPoolItem const&) const
SvxULSpaceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxULSpaceItem::HasMetrics() const
SvxULSpaceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxULSpaceItem::ScaleMetrics(long, long)
SvxULSpaceItem::dumpAsJSON[abi:cxx11]() const
SvxULSpaceItem::dumpAsXml(_xmlTextWriter*) const
SvxURLField::createBeginComment() const
SvxURLField::operator==(SvxFieldData const&) const
SvxUnderlineItem::GetValueTextByPos(unsigned short) const
SvxUnderlineItem::getItemInstanceManager() const
SvxUnoDrawMSFactory::createInstance(rtl::OUString const&)
SvxUnoDrawMSFactory::createTextField(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SvxUnoDrawMSFactory::getAvailableServiceNames()
SvxUnoDrawPool::getAny(SfxItemPool const*, comphelper::PropertyMapEntry const*, com::sun::star::uno::Any&)
SvxUnoDrawPool::init()
SvxUnoFontDescriptor::FillFromItemSet(SfxItemSet const&, com::sun::star::awt::FontDescriptor&)
SvxUnoFontDescriptor::FillItemSet(com::sun::star::awt::FontDescriptor const&, SfxItemSet&)
SvxUnoFontDescriptor::getPropertyDefault(SfxItemPool*)
SvxUnoFontDescriptor::setPropertyToDefault(SfxItemSet&)
SvxUnoForbiddenCharsTable::onChange()
SvxUnoText::SvxUnoText(SvxItemPropertySet const*)
SvxUnoText::SvxUnoText(SvxUnoText const&)
SvxUnoText::getUnoTunnelId()
SvxUnoTextBase::SvxUnoTextBase(SvxEditSource const*, SvxItemPropertySet const*, com::sun::star::uno::Reference<com::sun::star::text::XText> const&)
SvxUnoTextBase::SvxUnoTextBase(SvxUnoTextBase const&)
SvxUnoTextBase::getImplementationId()
SvxUnoTextBase::getSupportedServiceNames_Static()
SvxUnoTextCursor::getEnd()
SvxUnoTextCursor::getStart()
SvxUnoTextCursor::getText()
SvxUnoTextField::CreateFieldData() const
SvxUnoTextField::SvxUnoTextField(com::sun::star::uno::Reference<com::sun::star::text::XTextRange>, rtl::OUString const&, SvxFieldData const*)
SvxUnoTextField::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxUnoTextField::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxUnoTextField::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxUnoTextField::attach(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&)
SvxUnoTextField::dispose()
SvxUnoTextField::disposing()
SvxUnoTextField::getAnchor()
SvxUnoTextField::getImplementationId()
SvxUnoTextField::getImplementationName()
SvxUnoTextField::getPresentation(unsigned char)
SvxUnoTextField::getPropertySetInfo()
SvxUnoTextField::getPropertyValue(rtl::OUString const&)
SvxUnoTextField::getSupportedServiceNames()
SvxUnoTextField::getTypes()
SvxUnoTextField::queryAggregation(com::sun::star::uno::Type const&)
SvxUnoTextField::queryInterface(com::sun::star::uno::Type const&)
SvxUnoTextField::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
SvxUnoTextField::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SvxUnoTextField::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SvxUnoTextField::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SvxUnoTextField::supportsService(rtl::OUString const&)
SvxUnoTextField::~SvxUnoTextField()
SvxUnoTextRange::getImplementationId()
SvxUnoTextRange::getImplementationName()
SvxUnoTextRange::getText()
SvxUnoTextRange::getTypes()
SvxUnoTextRange::queryAggregation(com::sun::star::uno::Type const&)
SvxUnoTextRange::queryInterface(com::sun::star::uno::Type const&)
SvxUnoTextRange::~SvxUnoTextRange()
SvxUnoTextRangeBase::CollapseToEnd()
SvxUnoTextRangeBase::CollapseToStart()
SvxUnoTextRangeBase::GoLeft(int, bool)
SvxUnoTextRangeBase::GoRight(int, bool)
SvxUnoTextRangeBase::GotoEnd(bool)
SvxUnoTextRangeBase::GotoStart(bool)
SvxUnoTextRangeBase::IsCollapsed()
SvxUnoTextRangeBase::SvxUnoTextRangeBase(SvxEditSource const*, SvxItemPropertySet const*)
SvxUnoTextRangeBase::SvxUnoTextRangeBase(SvxItemPropertySet const*)
SvxUnoTextRangeBase::SvxUnoTextRangeBase(SvxUnoTextRangeBase const&)
SvxUnoTextRangeBase::_getOnePropertyStates(SfxItemSet const&, SfxItemPropertyMapEntry const*, com::sun::star::beans::PropertyState&)
SvxUnoTextRangeBase::_getPropertyState(SfxItemPropertyMapEntry const*, int)
SvxUnoTextRangeBase::_getPropertyState(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int)
SvxUnoTextRangeBase::_getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&, int)
SvxUnoTextRangeBase::_getPropertyValue(rtl::OUString const&, int)
SvxUnoTextRangeBase::_getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, int)
SvxUnoTextRangeBase::_setPropertyToDefault(SvxTextForwarder*, SfxItemPropertyMapEntry const*, int)
SvxUnoTextRangeBase::_setPropertyToDefault(rtl::OUString const&, int)
SvxUnoTextRangeBase::_setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&, int)
SvxUnoTextRangeBase::_setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, int)
SvxUnoTextRangeBase::getEnd()
SvxUnoTextRangeBase::getPropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any&, SfxItemSet const&)
SvxUnoTextRangeBase::getStart()
SvxUnoTextRangeBase::getString()
SvxUnoTextRangeBase::getSupportedServiceNames()
SvxUnoTextRangeBase::getSupportedServiceNames_Static()
SvxUnoTextRangeBase::setPropertyValue(SfxItemPropertyMapEntry const*, com::sun::star::uno::Any const&, ESelection const&, SfxItemSet const&, SfxItemSet&)
SvxUnoTextRangeBase::setString(rtl::OUString const&)
SvxUnoTextRangeBase::~SvxUnoTextRangeBase()
SvxUnogetApiNameForItem(unsigned short, rtl::OUString const&)
SvxVerJustifyItem::Clone(SfxItemPool*) const
SvxVerJustifyItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxVerJustifyItem::GetValueCount() const
SvxVerJustifyItem::GetValueText(SvxCellVerJustify)
SvxVerJustifyItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxVerJustifyItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxVerJustifyItem::SvxVerJustifyItem(unsigned short)
SvxViewLayoutItem::Clone(SfxItemPool*) const
SvxViewLayoutItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxViewLayoutItem::SvxViewLayoutItem(SvxViewLayoutItem const&)
SvxViewLayoutItem::operator==(SfxPoolItem const&) const
SvxWeightItem::Clone(SfxItemPool*) const
SvxWeightItem::GetBoolValue() const
SvxWeightItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWeightItem::GetValueCount() const
SvxWeightItem::GetValueTextByPos(unsigned short)
SvxWeightItem::HasBoolValue() const
SvxWeightItem::SetBoolValue(bool)
SvxWeightItem::dumpAsXml(_xmlTextWriter*) const
SvxWeightItem::getItemInstanceManager() const
SvxWidowsItem::Clone(SfxItemPool*) const
SvxWidowsItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWordLineModeItem::Clone(SfxItemPool*) const
SvxWordLineModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWritingModeItem::Clone(SfxItemPool*) const
SvxWritingModeItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SvxWritingModeItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxWritingModeItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxXConnectionPreview::Construct()
SvxXConnectionPreview::GetLineDeltaCount() const
SvxXConnectionPreview::MouseButtonDown(MouseEvent const&)
SvxXConnectionPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXConnectionPreview::Resize()
SvxXConnectionPreview::SetAttributes(SfxItemSet const&)
SvxXConnectionPreview::SetDrawingArea(weld::DrawingArea*)
SvxXConnectionPreview::SvxXConnectionPreview()
SvxXConnectionPreview::~SvxXConnectionPreview()
SvxXLinePreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXLinePreview::Resize()
SvxXLinePreview::ResizeSymbol(Size const&)
SvxXLinePreview::SetDrawingArea(weld::DrawingArea*)
SvxXLinePreview::SetLineAttributes(SfxItemSet const&)
SvxXLinePreview::SetSymbol(Graphic*, Size const&)
SvxXLinePreview::SvxXLinePreview()
SvxXLinePreview::~SvxXLinePreview()
SvxXMLListStyleContext::CreateAndInsertAuto() const
SvxXMLListStyleContext::CreateAndInsertLate(bool)
SvxXMLListStyleContext::CreateNumRule(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
SvxXMLListStyleContext::SetDefaultStyle(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&, short, bool)
SvxXMLListStyleContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
SvxXMLListStyleContext::~SvxXMLListStyleContext()
SvxXMLNumRuleExport::exportNumberingRule(rtl::OUString const&, bool, com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&)
SvxXMLNumRuleExport::exportStyles(bool, bool)
SvxXMeasurePreview::MouseButtonDown(MouseEvent const&)
SvxXMeasurePreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXMeasurePreview::Resize()
SvxXMeasurePreview::ResizeImpl(Size const&)
SvxXMeasurePreview::SetAttributes(SfxItemSet const&)
SvxXMeasurePreview::SetDrawingArea(weld::DrawingArea*)
SvxXMeasurePreview::SvxXMeasurePreview()
SvxXMeasurePreview::~SvxXMeasurePreview()
SvxXRectPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXRectPreview::Resize()
SvxXRectPreview::SetAttributes(SfxItemSet const&)
SvxXRectPreview::SetDrawingArea(weld::DrawingArea*)
SvxXRectPreview::SvxXRectPreview()
SvxXRectPreview::~SvxXRectPreview()
SvxXShadowPreview::Paint(OutputDevice&, tools::Rectangle const&)
SvxXShadowPreview::SetDrawingArea(weld::DrawingArea*)
SvxXShadowPreview::SetRectangleAttributes(SfxItemSet const&)
SvxXShadowPreview::SetShadowAttributes(SfxItemSet const&)
SvxXShadowPreview::SetShadowPosition(Point const&)
SvxXShadowPreview::SvxXShadowPreview()
SvxXShadowPreview::~SvxXShadowPreview()
SvxZoomItem::Clone(SfxItemPool*) const
SvxZoomItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxZoomItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SvxZoomItem::operator==(SfxPoolItem const&) const
SvxZoomPageStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxZoomPageStatusBarControl::MouseButtonDown(MouseEvent const&)
SvxZoomPageStatusBarControl::Paint(UserDrawEvent const&)
SvxZoomPageStatusBarControl::SvxZoomPageStatusBarControl(unsigned short, unsigned short, StatusBar&)
SvxZoomPageStatusBarControl::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SvxZoomSliderControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxZoomSliderControl::MouseButtonDown(MouseEvent const&)
SvxZoomSliderControl::MouseButtonUp(MouseEvent const&)
SvxZoomSliderControl::MouseMove(MouseEvent const&)
SvxZoomSliderControl::Offset2Zoom(long) const
SvxZoomSliderControl::Paint(UserDrawEvent const&)
SvxZoomSliderControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
SvxZoomSliderControl::SvxZoomSliderControl(unsigned short, unsigned short, StatusBar&)
SvxZoomSliderControl::Zoom2Offset(unsigned short) const
SvxZoomSliderControl::forceRepaint() const
SvxZoomSliderControl::repaintAndExecute()
SvxZoomSliderControl::~SvxZoomSliderControl()
SvxZoomSliderItem::Clone(SfxItemPool*) const
SvxZoomSliderItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SvxZoomSliderItem::operator==(SfxPoolItem const&) const
SvxZoomStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
SvxZoomStatusBarControl::ImplUpdateItemText()
SvxZoomStatusBarControl::Paint(UserDrawEvent const&)
SwAddPrinterItem::Clone(SfxItemPool*) const
SwAddPrinterItem::SwAddPrinterItem(SwPrintData const&)
SwAddPrinterItem::operator==(SfxPoolItem const&) const
SwAddressPreview::DrawText_Impl(OutputDevice&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, Point const&, Size const&, bool)
SwAddressPreview::KeyInput(KeyEvent const&)
SwAddressPreview::MouseButtonDown(MouseEvent const&)
SwAddressPreview::Paint(OutputDevice&, tools::Rectangle const&)
SwAddressPreview::UpdateScrollBar()
SwAttrSet::ClearItem_BC(unsigned short, SwAttrSet*, SwAttrSet*)
SwAttrSet::ClearItem_BC(unsigned short, unsigned short, SwAttrSet*, SwAttrSet*)
SwAttrSet::CopyToModify(sw::BroadcastingModify&) const
SwAttrSet::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&) const
SwAttrSet::Intersect_BC(SfxItemSet const&, SwAttrSet*, SwAttrSet*)
SwAttrSet::Put_BC(SfxItemSet const&, SwAttrSet*, SwAttrSet*)
SwAttrSet::Put_BC(SfxPoolItem const&, SwAttrSet*, SwAttrSet*)
SwAttrSet::SetModifyAtAttr(sw::BroadcastingModify const*)
SwAttrSet::SwAttrSet(SwAttrPool&, WhichRangesContainer const&)
SwAttrSet::changeCallback(SfxPoolItem const*, SfxPoolItem const*) const
SwAuthenticator::getPassword()
SwAuthenticator::getUserName()
SwAuthenticator::~SwAuthenticator()
SwAutoCorrect::GetLongText(rtl::OUString const&, rtl::OUString&)
SwAutoCorrect::PutText(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, rtl::OUString const&, rtl::OUString const&, SfxObjectShell&, rtl::OUString&)
SwAutoCorrect::refreshBlockList(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
SwBoxAutoFormat::Load(SvStream&, SwAfVersions const&, unsigned short)
SwBoxAutoFormat::Save(SvStream&, unsigned short) const
SwBoxAutoFormat::SetXObject(rtl::Reference<SwXTextCellStyle> const&)
SwBoxAutoFormat::SwBoxAutoFormat()
SwBoxAutoFormat::SwBoxAutoFormat(SwBoxAutoFormat const&)
SwBoxAutoFormat::operator=(SwBoxAutoFormat const&)
SwBoxAutoFormat::operator==(SwBoxAutoFormat const&) const
SwBoxAutoFormat::~SwBoxAutoFormat()
SwBreakIt::Create_(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
SwBreakIt::Delete_()
SwBreakIt::GetAllScriptsOfText(rtl::OUString const&) const
SwBreakIt::GetForbidden_(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwBreakIt::GetLocale_(LanguageTag const&)
SwBreakIt::GetRealScriptOfText(rtl::OUString const&, int) const
SwBreakIt::SwBreakIt(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>)
SwBreakIt::getGraphemeCount(rtl::OUString const&, int, int) const
SwChapterField::ChangeExpansion(SwFrame const&, SwContentNode const*, bool)
SwChapterField::Copy() const
SwChapterField::ExpandImpl(SwRootFrame const*) const
SwChapterField::GetNumber(SwRootFrame const*) const
SwChapterField::GetTitle(SwRootFrame const*) const
SwChapterField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwChapterField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwChapterNumRules::CreateEmptyNumRule(unsigned short)
SwChapterNumRules::Init()
SwChapterNumRules::Save()
SwChapterNumRules::SwChapterNumRules()
SwChapterNumRules::~SwChapterNumRules()
SwCharFormat::SetLinkedParaFormat(SwTextFormatColl*)
SwCharFormat::dumpAsXml(_xmlTextWriter*) const
SwCharFormat::~SwCharFormat()
SwCharFormats::ContainsFormat(SwCharFormat const*) const
SwCharFormats::DeleteAndDestroyAll(bool)
SwCharFormats::GetPos(SwCharFormat const*) const
SwCharFormats::SetFormatNameAndReindex(SwCharFormat*, rtl::OUString const&)
SwCharFormats::SwCharFormats()
SwCharFormats::dumpAsXml(_xmlTextWriter*) const
SwCharFormats::erase(boost::multi_index::detail::rnd_node_iterator<boost::multi_index::detail::random_access_index_node<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<SwCharFormat*, std::allocator<SwCharFormat*> > > > > const&)
SwCharFormats::find(SwCharFormat const*) const
SwCharFormats::findByName(rtl::OUString const&) const
SwCharFormats::insert(SwCharFormat*)
SwCharFormats::~SwCharFormats()
SwClient::CheckRegistration(SfxPoolItem const*)
SwClient::CheckRegistrationFormat(SwFormat&)
SwClient::EndListeningAll()
SwClient::StartListeningToSameModifyAs(SwClient const&)
SwClient::SwClient(SwClient&&)
SwClient::SwClientNotify(SwModify const&, SfxHint const&)
SwColExample::DrawPage(OutputDevice&, Point const&, bool, bool)
SwCollCondition::RegisterToFormat(SwFormat&)
SwCollCondition::SetCondition(Master_CollCondition, unsigned int)
SwCollCondition::SwCollCondition(SwCollCondition const&)
SwCollCondition::operator==(SwCollCondition const&) const
SwColumnOnlyExample::Paint(OutputDevice&, tools::Rectangle const&)
SwColumnOnlyExample::Resize()
SwColumnOnlyExample::SetDrawingArea(weld::DrawingArea*)
SwCombinedCharField::Copy() const
SwCombinedCharField::ExpandImpl(SwRootFrame const*) const
SwCombinedCharField::GetPar1() const
SwCombinedCharField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwCombinedCharField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwCombinedCharField::SetPar1(rtl::OUString const&)
SwCondCollItem::Clone(SfxItemPool*) const
SwCondCollItem::GetStyle(unsigned short) const
SwCondCollItem::operator==(SfxPoolItem const&) const
SwConditionTextFormatColl::InsertCondition(SwCollCondition const&)
SwConditionTextFormatColl::RemoveCondition(SwCollCondition const&)
SwConditionTextFormatColl::SetConditions(std::vector<std::unique_ptr<SwCollCondition, std::default_delete<SwCollCondition> >, std::allocator<std::unique_ptr<SwCollCondition, std::default_delete<SwCollCondition> > > > const&)
SwConditionTextFormatColl::~SwConditionTextFormatColl()
SwConnectionContext::getValueByName(rtl::OUString const&)
SwConnectionContext::~SwConnectionContext()
SwConnectionListener::connected(com::sun::star::lang::EventObject const&)
SwConnectionListener::disconnected(com::sun::star::lang::EventObject const&)
SwConnectionListener::disposing(com::sun::star::lang::EventObject const&)
SwConnectionListener::~SwConnectionListener()
SwContentControl::GetCurrentDateValue() const
SwContentControl::GetDateString() const
SwContentControl::NotifyChangeTextNode(SwTextNode*)
SwContentControl::SetCurrentDateValue(double)
SwContentControl::SetXContentControl(rtl::Reference<SwXContentControl> const&)
SwContentControl::SwClientNotify(SwModify const&, SfxHint const&)
SwContentControl::SwContentControl(SwFormatContentControl*)
SwContentControl::dumpAsXml(_xmlTextWriter*) const
SwContentControl::~SwContentControl()
SwContentControlListItem::ItemsFromAny(com::sun::star::uno::Any const&)
SwContentControlListItem::ItemsToAny(std::vector<SwContentControlListItem, std::allocator<SwContentControlListItem> > const&, com::sun::star::uno::Any&)
SwContentControlListItem::dumpAsXml(_xmlTextWriter*) const
SwContentControlManager::Erase(SwTextContentControl*)
SwContentControlManager::Insert(SwTextContentControl*)
SwContentControlManager::SwContentControlManager()
SwContentControlManager::UnsortedGet(unsigned long)
SwContentControlManager::dumpAsXml(_xmlTextWriter*) const
SwContentIndex::ChgValue(SwContentIndex const&, int)
SwContentIndex::Init(int)
SwContentIndex::SetMark(sw::mark::IMark const*)
SwContentIndex::SwContentIndex(SwContentIndex const&, short)
SwContentIndex::SwContentIndex(SwContentNode const*, int)
SwContrastGrf::Clone(SfxItemPool*) const
SwContrastGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwCropGrf::Clone(SfxItemPool*) const
SwDBConfig::ImplCommit()
SwDBConfig::Load()
SwDBConfig::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwDBField::ChgTyp(SwFieldType*)
SwDBField::Copy() const
SwDBField::Evaluate()
SwDBField::ExpandImpl(SwRootFrame const*) const
SwDBField::FormatValue(SvNumberFormatter const*, rtl::OUString const&, unsigned int, double&, int, SwDBField*)
SwDBField::GetFieldName() const
SwDBField::GetPar1() const
SwDBField::GetSubType() const
SwDBField::InitContent()
SwDBField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBField::SetSubType(unsigned short)
SwDBFieldType::Copy() const
SwDBFieldType::GetName() const
SwDBFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBFieldType::ReleaseRef()
SwDBNameInfField::GetFieldName() const
SwDBNameInfField::GetSubType() const
SwDBNameInfField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBNameInfField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBNameInfField::SetSubType(unsigned short)
SwDBNameInfField::SwDBNameInfField(SwFieldType*, SwDBData, unsigned int)
SwDBNextSetField::Copy() const
SwDBNextSetField::Evaluate(SwDoc const&)
SwDBNextSetField::ExpandImpl(SwRootFrame const*) const
SwDBNextSetField::GetPar1() const
SwDBNextSetField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBNextSetField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBNextSetField::SetPar1(rtl::OUString const&)
SwDBNextSetFieldType::Copy() const
SwDBSetNumberField::Copy() const
SwDBSetNumberField::Evaluate(SwDoc const&)
SwDBSetNumberField::ExpandImpl(SwRootFrame const*) const
SwDBSetNumberField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDBSetNumberField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDBSetNumberFieldType::Copy() const
SwDDEFieldType::Copy() const
SwDDEFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDDEFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDDEFieldType::SetDoc(SwDoc*)
SwDDEFieldType::UpdateDDE(bool)
SwDateTimeField::Copy() const
SwDateTimeField::ExpandImpl(SwRootFrame const*) const
SwDateTimeField::GetDate() const
SwDateTimeField::GetDateTime(SwDoc&, DateTime const&)
SwDateTimeField::GetPar2() const
SwDateTimeField::GetTime() const
SwDateTimeField::GetValue() const
SwDateTimeField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDateTimeField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDateTimeField::SetPar2(rtl::OUString const&)
SwDoc::GetTOXTypeCount(TOXTypes) const
SwDoc::MakeCharFormat_(rtl::OUString const&, SwFormat*, bool, bool)
SwDocDisplayItem::Clone(SfxItemPool*) const
SwDocDisplayItem::FillViewOptions(SwViewOption&) const
SwDocDisplayItem::SwDocDisplayItem(SwViewOption const&)
SwDocFac::GetDoc()
SwDocFac::SwDocFac(SwDoc*)
SwDocInfoField::Copy() const
SwDocInfoField::ExpandImpl(SwRootFrame const*) const
SwDocInfoField::GetFieldName() const
SwDocInfoField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDocInfoField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDocInfoField::SetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwDocInfoField::SetSubType(unsigned short)
SwDocStat::Reset()
SwDocStatField::ChangeExpansion(SwFrame const*)
SwDocStatField::Copy() const
SwDocStatField::ExpandImpl(SwRootFrame const*) const
SwDocStatField::GetSubType() const
SwDocStatField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDocStatField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDocStatField::SetSubType(unsigned short)
SwDrawFrameFormat::DelFrames()
SwDrawFrameFormat::GetDescription() const
SwDrawFrameFormat::GetLayoutDir() const
SwDrawFrameFormat::GetPositionLayoutDir() const
SwDrawFrameFormat::MakeFrames()
SwDrawFrameFormat::MakeGraphic(ImageMap*, unsigned int, std::optional<Size> const&)
SwDrawFrameFormat::SetLayoutDir(SwFrameFormat::tLayoutDir)
SwDrawFrameFormat::SetPositionLayoutDir(short)
SwDrawFrameFormat::~SwDrawFrameFormat()
SwDrawModeGrf::Clone(SfxItemPool*) const
SwDrawModeGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwDrawModeGrf::GetValueCount() const
SwDrawModeGrf::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwDrawModeGrf::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwDrawTextInfo::Shift(o3tl::strong_int<short, FractionTag<10> >)
SwDropDownField::Copy() const
SwDropDownField::ExpandImpl(SwRootFrame const*) const
SwDropDownField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwDropDownField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwDropDownField::SetItems(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwDropDownField::SetPar2(rtl::OUString const&)
SwDropDownField::SwDropDownField(SwDropDownField const&)
SwElemItem::Clone(SfxItemPool*) const
SwElemItem::FillViewOptions(SwViewOption&) const
SwElemItem::SwElemItem(SwViewOption const&)
SwEndNoteInfo::DependsOn(SwPageDesc const*) const
SwEndNoteInfo::GetCurrentCharFormat(bool) const
SwEndNoteInfo::KnowsPageDesc() const
SwEndNoteInfo::UpdateFormatOrAttr()
SwEndNoteInfo::operator=(SwEndNoteInfo const&)
SwEnvItem::Clone(SfxItemPool*) const
SwEnvItem::CreateDefault()
SwEnvItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwEnvItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwEnvItem::operator=(SwEnvItem const&)
SwEnvItem::operator==(SfxPoolItem const&) const
SwExtraRedline::~SwExtraRedline()
SwField::ChangeFormat(unsigned int)
SwField::ChgTyp(SwFieldType*)
SwField::GetDescription() const
SwField::GetFormula() const
SwField::GetPar1() const
SwField::GetPar2() const
SwField::GetSubType() const
SwField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwField::SetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwField::SetPar1(rtl::OUString const&)
SwField::SetPar2(rtl::OUString const&)
SwField::SetSubType(unsigned short)
SwField::SwField(SwFieldType*, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>, bool)
SwField::dumpAsXml(_xmlTextWriter*) const
SwFieldMgr::GetCurTypeId() const
SwFieldMgr::GetDefaultFormat(SwFieldTypesEnum, bool, SvNumberFormatter*)
SwFieldType::CollectPostIts(std::vector<SwFormatField*, std::allocator<SwFormatField*> >&, IDocumentRedlineAccess const&, bool)
SwFieldType::FindFormatForPostItId(unsigned int) const
SwFieldType::GatherDdeTables(std::vector<SwDDETable*, std::allocator<SwDDETable*> >&) const
SwFieldType::GetFieldName_()
SwFieldType::GetName() const
SwFieldType::HasHiddenInformationNotes() const
SwFieldType::PrintHiddenPara()
SwFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwFieldType::SetXObject(rtl::Reference<SwXFieldMaster> const&)
SwFieldType::SwFieldType(SwFieldIds)
SwFieldType::UpdateDocPos(long)
SwFieldType::dumpAsXml(_xmlTextWriter*) const
SwFileNameField::Copy() const
SwFileNameField::ExpandImpl(SwRootFrame const*) const
SwFileNameField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwFileNameField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwFilterOptions::GetValues(unsigned short, char const**, unsigned long*)
SwFilterOptions::ImplCommit()
SwFilterOptions::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwFltAnchor::Clone(SfxItemPool*) const
SwFltAnchor::SetFrameFormat(SwFrameFormat*)
SwFltAnchor::SwFltAnchor(SwFltAnchor const&)
SwFltAnchor::operator==(SfxPoolItem const&) const
SwFltBookmark::Clone(SfxItemPool*) const
SwFltBookmark::operator==(SfxPoolItem const&) const
SwFltRDFMark::Clone(SfxItemPool*) const
SwFltRDFMark::GetAttributes() const
SwFltRDFMark::operator==(SfxPoolItem const&) const
SwFltRedline::Clone(SfxItemPool*) const
SwFltRedline::operator==(SfxPoolItem const&) const
SwFltTOX::Clone(SfxItemPool*) const
SwFltTOX::operator==(SfxPoolItem const&) const
SwFlyDrawContact::CreateNewRef(SwFlyFrame*, SwFlyFrameFormat*, SwFrame const&)
SwFlyDrawContact::GetAnchoredObj(SdrObject const*) const
SwFlyDrawContact::GetAnchoredObj(SdrObject*)
SwFlyDrawContact::GetAnchoredObjs(std::vector<SwAnchoredObject*, std::allocator<SwAnchoredObject*> >&) const
SwFlyDrawContact::GetOrdNumForNewRef(SwFlyFrame const*, SwFrame const&)
SwFlyDrawContact::MoveObjToInvisibleLayer(SdrObject*)
SwFlyDrawContact::MoveObjToVisibleLayer(SdrObject*)
SwFlyDrawContact::SwClientNotify(SwModify const&, SfxHint const&)
SwFlyDrawContact::SwFlyDrawContact(SwFlyFrameFormat*, SdrModel&)
SwFlyDrawContact::~SwFlyDrawContact()
SwFlyFrameAttrMgr::SetAnchor(RndStdIds)
SwFlyFrameFormat::GetAnchoredObj() const
SwFlyFrameFormat::GetObjTooltip() const
SwFlyFrameFormat::IsBackgroundBrushInherited() const
SwFlyFrameFormat::IsBackgroundTransparent() const
SwFlyFrameFormat::IsDecorative() const
SwFlyFrameFormat::MakeGraphic(ImageMap*, unsigned int, std::optional<Size> const&)
SwFlyFrameFormat::SetObjDecorative(bool)
SwFlyFrameFormat::SetObjDescription(rtl::OUString const&, bool)
SwFlyFrameFormat::SetObjTitle(rtl::OUString const&, bool)
SwFlyFrameFormat::SetObjTooltip(rtl::OUString const&)
SwFlyFrameFormat::SwFlyFrameFormat(SwAttrPool&, rtl::OUString const&, SwFrameFormat*)
SwFlyFrameFormat::~SwFlyFrameFormat()
SwFmtAidsAutoComplItem::Clone(SfxItemPool*) const
SwFmtAidsAutoComplItem::SwFmtAidsAutoComplItem(SwViewOption const&)
SwFootnoteInfo::operator=(SwFootnoteInfo const&)
SwForm::GetFormMaxLevel(TOXTypes)
SwForm::GetFormText()
SwFormatAnchor::Clone(SfxItemPool*) const
SwFormatAnchor::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatAnchor::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatAnchor::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatAnchor::dumpAsXml(_xmlTextWriter*) const
SwFormatAnchor::operator=(SwFormatAnchor const&)
SwFormatAnchor::operator==(SfxPoolItem const&) const
SwFormatAutoFormat::Clone(SfxItemPool*) const
SwFormatAutoFormat::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatAutoFormat::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatAutoFormat::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatAutoFormat::dumpAsXml(_xmlTextWriter*) const
SwFormatAutoFormat::operator==(SfxPoolItem const&) const
SwFormatChain::Clone(SfxItemPool*) const
SwFormatChain::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatChain::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatChain::SwFormatChain(SwFormatChain const&)
SwFormatChain::operator==(SfxPoolItem const&) const
SwFormatCharFormat::Clone(SfxItemPool*) const
SwFormatCharFormat::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatCharFormat::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatCharFormat::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatCharFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatCharFormat::SwFormatCharFormat(SwFormatCharFormat const&)
SwFormatCharFormat::dumpAsXml(_xmlTextWriter*) const
SwFormatCharFormat::operator==(SfxPoolItem const&) const
SwFormatCol::Clone(SfxItemPool*) const
SwFormatCol::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatCol::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatCol::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatCol::SetGutterWidth(unsigned short, unsigned short)
SwFormatCol::dumpAsXml(_xmlTextWriter*) const
SwFormatDrop::Clone(SfxItemPool*) const
SwFormatDrop::CreateDefault()
SwFormatDrop::GetInfo(SfxPoolItem&) const
SwFormatDrop::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatDrop::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatDrop::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatEditInReadonly::Clone(SfxItemPool*) const
SwFormatEditInReadonly::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatEditInReadonly::dumpAsXml(_xmlTextWriter*) const
SwFormatEndAtTextEnd::Clone(SfxItemPool*) const
SwFormatFlySplit::Clone(SfxItemPool*) const
SwFormatFlySplit::dumpAsXml(_xmlTextWriter*) const
SwFormatFollowTextFlow::Clone(SfxItemPool*) const
SwFormatFollowTextFlow::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFollowTextFlow::dumpAsXml(_xmlTextWriter*) const
SwFormatFooter::Clone(SfxItemPool*) const
SwFormatFooter::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFooter::RegisterToFormat(SwFormat&)
SwFormatFooter::SwFormatFooter(SwFormatFooter const&)
SwFormatFooter::SwFormatFooter(SwFrameFormat*)
SwFormatFooter::operator==(SfxPoolItem const&) const
SwFormatFootnote::Clone(SfxItemPool*) const
SwFormatFootnote::GetViewNumStr(SwDoc const&, SwRootFrame const*, bool) const
SwFormatFootnote::InvalidateFootnote()
SwFormatFootnote::SetEndNote(bool)
SwFormatFootnote::SetXFootnote(rtl::Reference<SwXFootnote> const&)
SwFormatFootnote::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatFootnote::dumpAsXml(_xmlTextWriter*) const
SwFormatFootnote::getAnchor(SwDoc&) const
SwFormatFootnote::operator==(SfxPoolItem const&) const
SwFormatFootnoteAtTextEnd::Clone(SfxItemPool*) const
SwFormatFootnoteEndAtTextEnd::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFootnoteEndAtTextEnd::GetValueCount() const
SwFormatFootnoteEndAtTextEnd::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatFootnoteEndAtTextEnd::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatFrameSize::Clone(SfxItemPool*) const
SwFormatFrameSize::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatFrameSize::HasMetrics() const
SwFormatFrameSize::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatFrameSize::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatFrameSize::ScaleMetrics(long, long)
SwFormatFrameSize::dumpAsXml(_xmlTextWriter*) const
SwFormatHeader::Clone(SfxItemPool*) const
SwFormatHeader::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatHeader::RegisterToFormat(SwFormat&)
SwFormatHeader::SwFormatHeader(SwFormatHeader const&)
SwFormatHeader::SwFormatHeader(SwFrameFormat*)
SwFormatHeader::operator==(SfxPoolItem const&) const
SwFormatHoriOrient::Clone(SfxItemPool*) const
SwFormatHoriOrient::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatHoriOrient::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatHoriOrient::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatHoriOrient::dumpAsXml(_xmlTextWriter*) const
SwFormatINetFormat::Clone(SfxItemPool*) const
SwFormatINetFormat::CreateDefault()
SwFormatINetFormat::GetMacro(SvMacroItemId) const
SwFormatINetFormat::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatINetFormat::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatINetFormat::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatINetFormat::SetMacro(SvMacroItemId, SvxMacro const&)
SwFormatINetFormat::SetMacroTable(SvxMacroTableDtor const*)
SwFormatINetFormat::SwFormatINetFormat()
SwFormatINetFormat::SwFormatINetFormat(SwFormatINetFormat const&)
SwFormatINetFormat::operator==(SfxPoolItem const&) const
SwFormatLayoutSplit::Clone(SfxItemPool*) const
SwFormatLayoutSplit::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatLineBreak::Clone(SfxItemPool*) const
SwFormatLineBreak::GetAnchor() const
SwFormatLineBreak::GetValueCount() const
SwFormatLineBreak::SetXLineBreak(rtl::Reference<SwXLineBreak> const&)
SwFormatLineBreak::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatLineBreak::dumpAsXml(_xmlTextWriter*) const
SwFormatLineBreak::operator==(SfxPoolItem const&) const
SwFormatLineNumber::Clone(SfxItemPool*) const
SwFormatLineNumber::CreateDefault()
SwFormatLineNumber::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatLineNumber::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatLineNumber::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatLineNumber::operator==(SfxPoolItem const&) const
SwFormatNoBalancedColumns::Clone(SfxItemPool*) const
SwFormatNoBalancedColumns::dumpAsXml(_xmlTextWriter*) const
SwFormatPageDesc::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatPageDesc::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatPageDesc::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatPageDesc::RegisterToPageDesc(SwPageDesc&)
SwFormatPageDesc::SwClientNotify(SwModify const&, SfxHint const&)
SwFormatPageDesc::SwFormatPageDesc(SwFormatPageDesc const&)
SwFormatPageDesc::dumpAsXml(_xmlTextWriter*) const
SwFormatPageDesc::operator=(SwFormatPageDesc const&)
SwFormatPageDesc::operator==(SfxPoolItem const&) const
SwFormatRowSplit::Clone(SfxItemPool*) const
SwFormatRowSplit::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatRuby::Clone(SfxItemPool*) const
SwFormatRuby::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatRuby::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatRuby::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatRuby::SwFormatRuby(SwFormatRuby const&)
SwFormatRuby::dumpAsXml(_xmlTextWriter*) const
SwFormatRuby::operator=(SwFormatRuby const&)
SwFormatRuby::operator==(SfxPoolItem const&) const
SwFormatSurround::Clone(SfxItemPool*) const
SwFormatSurround::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatSurround::GetValueCount() const
SwFormatSurround::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatSurround::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatSurround::dumpAsXml(_xmlTextWriter*) const
SwFormatURL::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatURL::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatURL::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatURL::SwFormatURL(SwFormatURL const&)
SwFormatURL::operator==(SfxPoolItem const&) const
SwFormatVertOrient::Clone(SfxItemPool*) const
SwFormatVertOrient::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwFormatVertOrient::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatVertOrient::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatVertOrient::dumpAsXml(_xmlTextWriter*) const
SwFormatWrapInfluenceOnObjPos::Clone(SfxItemPool*) const
SwFormatWrapInfluenceOnObjPos::GetOverlapVertOffset() const
SwFormatWrapInfluenceOnObjPos::GetWrapInfluenceOnObjPos(bool) const
SwFormatWrapInfluenceOnObjPos::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwFormatWrapInfluenceOnObjPos::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwFormatWrapInfluenceOnObjPos::SetOverlapVertOffset(long)
SwFormatWrapInfluenceOnObjPos::SetWrapInfluenceOnObjPos(short)
SwFormatWrapInfluenceOnObjPos::dumpAsXml(_xmlTextWriter*) const
SwFormatWrapTextAtFlyStart::Clone(SfxItemPool*) const
SwFormatWrapTextAtFlyStart::dumpAsXml(_xmlTextWriter*) const
SwFormulaField::GetExpandedFormula() const
SwFormulaField::SetExpandedFormula(rtl::OUString const&)
SwFormulaField::SwFormulaField(SwFormulaField const&)
SwFormulaField::SwFormulaField(SwValueFieldType*, unsigned int, double)
SwFrameExample::CalcBoundRect_Impl(OutputDevice const&, tools::Rectangle&)
SwFrameExample::DrawInnerFrame_Impl(OutputDevice&, tools::Rectangle const&, Color const&, Color const&)
SwFrameExample::InitAllRects_Impl(OutputDevice&)
SwFrameExample::InitColors_Impl()
SwFrameExample::Paint(OutputDevice&, tools::Rectangle const&)
SwFrameExample::SetDrawingArea(weld::DrawingArea*)
SwFrameExample::StyleUpdated()
SwGammaGrf::Clone(SfxItemPool*) const
SwGammaGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwGammaGrf::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwGammaGrf::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwGammaGrf::operator==(SfxPoolItem const&) const
SwGlossaries::DelGroupDoc(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwGlossaries::EditGroupDoc(rtl::OUString const&, rtl::OUString const&, bool)
SwGlossaries::FindGroupName(rtl::OUString&)
SwGlossaries::GetAutoTextEntry(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwGlossaries::GetAutoTextGroup(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwGlossaries::GetCompleteGroupName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwGlossaries::GetExtension()
SwGlossaries::GetGroupCnt()
SwGlossaries::GetGroupName(unsigned long)
SwGlossaries::GetGroupTitle(rtl::OUString const&)
SwGlossaries::NewGroupDoc(rtl::OUString&, rtl::OUString const&)
SwGlossaries::RenameGroupDoc(rtl::OUString const&, rtl::OUString&, rtl::OUString const&)
SwGlossaries::SwGlossaries()
SwGlossaries::~SwGlossaries()
SwGlossaryHdl::ExpandGlossary(weld::Window*)
SwGlossaryHdl::FindGroupName(rtl::OUString&)
SwGlossaryHdl::GlossaryDlg()
SwGlossaryHdl::SwGlossaryHdl(SfxViewFrame&, SwWrtShell*)
SwGlossaryHdl::~SwGlossaryHdl()
SwHHCWrapper::ChangeText(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<int> const*, SwPaM*)
SwHHCWrapper::ChangeText_impl(rtl::OUString const&, bool)
SwHHCWrapper::ConvContinue_impl(SwConversionArgs*)
SwHHCWrapper::ConvEnd_impl(SwConversionArgs const*)
SwHHCWrapper::ConvNext_impl()
SwHHCWrapper::ConvStart_impl(SwConversionArgs*, SvxSpellArea)
SwHHCWrapper::FindConvText_impl()
SwHHCWrapper::GetNextPortion(rtl::OUString&, o3tl::strong_int<unsigned short, LanguageTypeTag>&, bool)
SwHHCWrapper::HandleNewUnit(int, int)
SwHHCWrapper::HasRubySupport() const
SwHHCWrapper::ReplaceUnit(int, int, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<int> const&, editeng::HangulHanjaConversion::ReplacementAction, o3tl::strong_int<unsigned short, LanguageTypeTag>*)
SwHHCWrapper::SelectNewUnit_impl(int, int)
SwHeaderAndFooterEatSpacingItem::Clone(SfxItemPool*) const
SwHeaderAndFooterEatSpacingItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwHiddenTextField::Copy() const
SwHiddenTextField::Evaluate(SwDoc&)
SwHiddenTextField::ExpandImpl(SwRootFrame const*) const
SwHiddenTextField::GetColumnName(rtl::OUString const&)
SwHiddenTextField::GetDBName(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SwDoc&)
SwHiddenTextField::GetFieldName() const
SwHiddenTextField::GetPar1() const
SwHiddenTextField::GetPar2() const
SwHiddenTextField::GetSubType() const
SwHiddenTextField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwHiddenTextField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwHiddenTextField::SetPar1(rtl::OUString const&)
SwHiddenTextField::SetPar2(rtl::OUString const&)
SwHiddenTextField::SwHiddenTextField(SwHiddenTextFieldType*, bool, rtl::OUString, rtl::OUString const&, bool, SwFieldTypesEnum)
SwHyphWrapper::InsertHyphen(int)
SwHyphWrapper::SpellContinue()
SwHyphWrapper::SpellEnd()
SwHyphWrapper::SpellMore()
SwHyphWrapper::SpellStart(SvxSpellArea)
SwInputField::Copy() const
SwInputField::ExpandImpl(SwRootFrame const*) const
SwInputField::GetFieldName() const
SwInputField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwInputField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwInputField::SetFormatField(SwFormatField&)
SwInputField::SetPar2(rtl::OUString const&)
SwInputField::SetSubType(unsigned short)
SwInputField::applyFieldContent(rtl::OUString const&)
SwLabItem::Clone(SfxItemPool*) const
SwLabelConfig::ImplCommit()
SwLabelConfig::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwLineNumberInfo::SwClientNotify(SwModify const&, SfxHint const&)
SwLineNumberInfo::SwLineNumberInfo()
SwLineNumberInfo::operator=(SwLineNumberInfo const&)
SwLuminanceGrf::Clone(SfxItemPool*) const
SwLuminanceGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwMacroField::Copy() const
SwMacroField::CreateMacroString(rtl::OUString&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
SwMacroField::ExpandImpl(SwRootFrame const*) const
SwMacroField::GetFieldName() const
SwMacroField::GetLibName() const
SwMacroField::GetMacroName() const
SwMacroField::GetPar1() const
SwMacroField::GetPar2() const
SwMacroField::GetSvxMacro() const
SwMacroField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwMacroField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwMacroField::SetPar1(rtl::OUString const&)
SwMacroField::SetPar2(rtl::OUString const&)
SwMacroField::isScriptURL(rtl::OUString const&)
SwMailMergeConfigItem::AddMergedDocument(SwDocMergeInfo const&)
SwMailMergeConfigItem::DocumentReloaded()
SwMailMergeConfigItem::ExcludeRecord(int, bool)
SwMailMergeConfigItem::GetSelection() const
SwMailMergeConfigItem::IsRecordExcluded(unsigned int) const
SwMailMergeConfigItem::IsRecordIncluded(unsigned int) const
SwMailMergeConfigItem::IsResultSetFirstLast(bool&, bool&)
SwMailMergeConfigItem::SetCurrentDBData(SwDBData const&)
SwMailMergeConfigItem::SetSourceView(SwView*)
SwMailMergeConfigItem::SetTargetView(SwView*)
SwMailMergeConfigItem::stopDBChangeListening()
SwMailMergeConfigItem::updateCurrentDBDataFromDocument()
SwMailTransferable::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwMailTransferable::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwMailTransferable::getPropertySetInfo()
SwMailTransferable::getPropertyValue(rtl::OUString const&)
SwMailTransferable::getTransferData(com::sun::star::datatransfer::DataFlavor const&)
SwMailTransferable::getTransferDataFlavors()
SwMailTransferable::isDataFlavorSupported(com::sun::star::datatransfer::DataFlavor const&)
SwMailTransferable::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwMailTransferable::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwMailTransferable::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SwMailTransferable::~SwMailTransferable()
SwMirrorGrf::Clone(SfxItemPool*) const
SwMirrorGrf::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwMirrorGrf::GetValueCount() const
SwMirrorGrf::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwMirrorGrf::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwMirrorGrf::operator==(SfxPoolItem const&) const
SwModify::CallSwClientNotify(SfxHint const&) const
SwModify::GetInfo(SfxPoolItem&) const
SwModify::SwClientNotify(SwModify const&, SfxHint const&)
SwModuleOptions::ConvertWordDelimiter(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
SwModuleOptions::SwModuleOptions()
SwNumFormat::GetCharFormatName() const
SwNumFormat::GetGraphicOrientation() const
SwNumFormat::IsEnumeration() const
SwNumFormat::IsItemize() const
SwNumFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwNumFormat::SwNumFormat(SvxNumberFormat const&, SwDoc*)
SwNumFormat::operator=(SwNumFormat const&)
SwNumFormatBase::Init()
SwNumFormatBase::SwNumFormatBase()
SwNumFormatBase::clear()
SwNumFormatTreeView::Init()
SwNumRuleItem::Clone(SfxItemPool*) const
SwNumRuleItem::CreateDefault()
SwNumRuleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwNumRuleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwNumRuleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwNumRuleItem::dumpAsXml(_xmlTextWriter*) const
SwNumRuleItem::operator==(SfxPoolItem const&) const
SwNumRulesWithName::GetNumFormat(unsigned long, SwNumFormat const*&, rtl::OUString const*&) const
SwNumRulesWithName::SetNumFormat(unsigned long, SwNumFormat const&, rtl::OUString const&)
SwNumRulesWithName::SwNumRulesWithName(SwNumRulesWithName const&)
SwNumRulesWithName::operator=(SwNumRulesWithName const&)
SwOneExampleFrame::Command(CommandEvent const&)
SwOneExampleFrame::CreatePopup(Point const&)
SwOneExampleFrame::Paint(OutputDevice&, tools::Rectangle const&)
SwOneExampleFrame::PopupHdl(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwOneExampleFrame::SetDrawingArea(weld::DrawingArea*)
SwPaM::HasHiddenSections() const
SwPaM::InvalidatePaM()
SwPaM::Normalize(bool)
SwPaM::SwPaM(SwNode const&, SwNode const&, o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, SwPaM*)
SwPaM::SwPaM(SwNode const&, o3tl::strong_int<int, Tag_SwNodeOffset>, int, SwNode const&, o3tl::strong_int<int, Tag_SwNodeOffset>, int, SwPaM*)
SwPaM::SwPaM(SwNodeIndex const&, SwNodeIndex const&, o3tl::strong_int<int, Tag_SwNodeOffset>, o3tl::strong_int<int, Tag_SwNodeOffset>, SwPaM*)
SwPaM::SwPaM(SwNodeIndex const&, int, SwNodeIndex const&, int, SwPaM*)
SwPaM::dumpAsXml(_xmlTextWriter*) const
SwPageDesc::GetByName(SwDoc&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwPageDesc::GetInfo(SfxPoolItem&) const
SwPageDesc::GetLeftFormat(bool)
SwPageDesc::GetRegisterFormatColl() const
SwPageDesc::GetRightFormat(bool)
SwPageDesc::RegisterChange()
SwPageDesc::RemoveStashedFormat(bool, bool, bool)
SwPageDesc::SetName(rtl::OUString const&)
SwPageDesc::SetRegisterFormatColl(SwTextFormatColl const*)
SwPageDesc::SwClientNotify(SwModify const&, SfxHint const&)
SwPageDesc::dumpAsXml(_xmlTextWriter*) const
SwPageFootnoteInfo::operator=(SwPageFootnoteInfo const&)
SwPageFootnoteInfo::operator==(SwPageFootnoteInfo const&) const
SwPageFootnoteInfoItem::Clone(SfxItemPool*) const
SwPageFootnoteInfoItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwPageFootnoteInfoItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwPageFootnoteInfoItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwPageFootnoteInfoItem::SwPageFootnoteInfoItem(SwPageFootnoteInfo const&)
SwPageGridExample::DrawPage(OutputDevice&, Point const&, bool, bool)
SwPageNumberField::ChangeExpansion(unsigned short, unsigned short)
SwPageNumberField::Copy() const
SwPageNumberField::ExpandImpl(SwRootFrame const*) const
SwPageNumberField::GetPar2() const
SwPageNumberField::GetSubType() const
SwPageNumberField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwPageNumberField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwPageNumberField::SetPar2(rtl::OUString const&)
SwPosition::Assign(SwNode const&, o3tl::strong_int<int, Tag_SwNodeOffset>, int)
SwPosition::AssignEndIndex(SwContentNode const&)
SwPosition::AssignStartIndex(SwContentNode const&)
SwPosition::SwPosition(SwContentIndex const&, short)
SwPosition::SwPosition(SwNode const&, SwContentIndex const&)
SwPosition::SwPosition(SwNode const&, SwContentNode const*, int)
SwPosition::SwPosition(SwNodeIndex const&, SwContentIndex const&)
SwPosition::SwPosition(SwNodeIndex const&, o3tl::strong_int<int, Tag_SwNodeOffset>, SwContentNode const*, int)
SwPosition::dumpAsXml(_xmlTextWriter*) const
SwPosition::operator>=(SwPosition const&) const
SwPtrItem::Clone(SfxItemPool*) const
SwPtrItem::operator==(SfxPoolItem const&) const
SwRDFHelper::addStatement(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::addTextNodeStatement(rtl::OUString const&, rtl::OUString const&, SwTextNode&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::clearStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::cloneStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::getGraphNames(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&)
SwRDFHelper::getGraphNames(com::sun::star::uno::Reference<com::sun::star::rdf::XDocumentMetadataAccess> const&, com::sun::star::uno::Reference<com::sun::star::rdf::XURI> const&)
SwRDFHelper::getStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::rdf::XURI> > const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::getStatements(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&)
SwRDFHelper::hasMetadataGraph(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&)
SwRDFHelper::removeStatement(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::rdf::XResource> const&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::removeTextNodeStatement(rtl::OUString const&, SwTextNode&, rtl::OUString const&, rtl::OUString const&)
SwRDFHelper::updateTextNodeStatement(rtl::OUString const&, rtl::OUString const&, SwTextNode&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwReader::HasGlossaries(Reader const&)
SwReader::SwReader(SfxMedium&, rtl::OUString, SwPaM&)
SwReader::SwReader(com::sun::star::uno::Reference<com::sun::star::embed::XStorage>, rtl::OUString, SwPaM&)
SwRedlineAcceptDlg::Init(unsigned long)
SwRedlineAcceptDlg::LinkStubFilterChangedHdl(void*, SvxTPFilter*)
SwRedlineData::CanCombine(SwRedlineData const&) const
SwRedlineData::CanCombineForAcceptReject(SwRedlineData const&) const
SwRedlineData::GetDescr() const
SwRedlineData::SetExtraData(SwRedlineExtraData const*)
SwRedlineData::SwRedlineData(RedlineType, unsigned long, unsigned int)
SwRedlineData::SwRedlineData(SwRedlineData const&, bool)
SwRedlineData::dumpAsXml(_xmlTextWriter*) const
SwRedlineExtraData::Reject(SwPaM&) const
SwRedlineExtraData::operator==(SwRedlineExtraData const&) const
SwRedlineExtraData::~SwRedlineExtraData()
SwRedlineExtraData_FormatColl::CreateNew() const
SwRedlineExtraData_FormatColl::Reject(SwPaM&) const
SwRedlineExtraData_FormatColl::SetItemSet(SfxItemSet const&)
SwRedlineExtraData_FormatColl::SwRedlineExtraData_FormatColl(rtl::OUString, unsigned short, SfxItemSet const*, bool)
SwRedlineExtraData_FormatColl::operator==(SwRedlineExtraData const&) const
SwRedlineExtraData_FormatColl::~SwRedlineExtraData_FormatColl()
SwRewriter::Apply(rtl::OUString const&) const
SwRewriter::GetPlaceHolder(SwUndoArg)
SwRootFrame::dumpAsXml(_xmlTextWriter*) const
SwScriptField::Copy() const
SwScriptField::ExpandImpl(SwRootFrame const*) const
SwScriptField::GetDescription() const
SwScriptField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwScriptField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwScriptField::SetPar1(rtl::OUString const&)
SwScriptField::SetPar2(rtl::OUString const&)
SwScriptField::SwScriptField(SwScriptFieldType*, rtl::OUString, rtl::OUString, bool)
SwSectionData::dumpAsXml(_xmlTextWriter*) const
SwSectionData::operator=(SwSectionData const&)
SwSectionData::operator==(SwSectionData const&) const
SwSeqFieldList::InsertSort(SeqFieldLstElem)
SwSetExpField::ChgExpStr(rtl::OUString const&, SwRootFrame const*)
SwSetExpField::Copy() const
SwSetExpField::ExpandImpl(SwRootFrame const*) const
SwSetExpField::GetExpStr(SwRootFrame const*) const
SwSetExpField::GetValue(SwRootFrame const*) const
SwSetExpField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwSetExpField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwSetExpField::SetFormatField(SwFormatField&)
SwSetExpField::SetValue(double const&)
SwSetExpFieldType::Copy() const
SwSetExpFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwSetExpFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwSetExpFieldType::SetChapter(SwSetExpField&, SwNode const&, SwRootFrame const*)
SwSetExpFieldType::SetSeqFormat(unsigned long)
SwSetExpFieldType::SetSeqRefNo(SwSetExpField&)
SwSetExpFieldType::SwClientNotify(SwModify const&, SfxHint const&)
SwShadowCursorItem::Clone(SfxItemPool*) const
SwShadowCursorItem::FillViewOptions(SwViewOption&) const
SwShadowCursorItem::SwShadowCursorItem(SwViewOption const&)
SwSortKey::SwSortKey()
SwSortOptions::SwSortOptions(SwSortOptions const&)
SwSortedObjs::Contains(SwAnchoredObject const&) const
SwSortedObjs::Insert(SwAnchoredObject&)
SwSortedObjs::ListPosOf(SwAnchoredObject const&) const
SwSortedObjs::Remove(SwAnchoredObject&)
SwSortedObjs::SwSortedObjs()
SwSortedObjs::Update(SwAnchoredObject&)
SwSortedObjs::UpdateAll()
SwSortedObjs::is_sorted() const
SwSortedObjs::~SwSortedObjs()
SwSpellPopup::Execute(tools::Rectangle const&, vcl::Window*)
SwSpellPopup::Execute(unsigned short)
SwSpellPopup::InitItemCommands(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwSpellPopup::SwSpellPopup(SwWrtShell*, com::sun::star::linguistic2::ProofreadingResult const&, int, com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&)
SwSpellPopup::checkRedline()
SwSpellPopup::fillLangPopupMenu(PopupMenu*, unsigned short, com::sun::star::uno::Sequence<rtl::OUString> const&, SwWrtShell*, std::map<short, rtl::OUString, std::less<short>, std::allocator<std::pair<short const, rtl::OUString> > >&)
SwStdFontConfig::ImplCommit()
SwStdFontConfig::IsFontDefault(unsigned short) const
SwStdFontConfig::Notify(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwStdFontConfig::SwStdFontConfig()
SwStdFontConfig::~SwStdFontConfig()
SwStyleNameMapper::GetProgName(unsigned short, rtl::OUString const&)
SwTOXBase::CopyTOXBase(SwDoc*, SwTOXBase const&)
SwTOXBase::GetAttrSet() const
SwTOXBase::IsTOXBaseInReadonly() const
SwTOXBase::SetBookmarkName(rtl::OUString const&)
SwTOXBase::SetTitle(rtl::OUString const&)
SwTOXBase::operator=(SwTOXBase const&)
SwTOXMark::Clone(SfxItemPool*) const
SwTOXMark::InvalidateTOXMark()
SwTOXMark::Notify(SfxHint const&)
SwTOXMark::RegisterToTOXType(SwTOXType&)
SwTOXMark::SwTOXMark()
SwTOXMark::SwTOXMark(SwTOXMark const&)
SwTOXMark::operator==(SfxPoolItem const&) const
SwTabCols::Insert(long, long, long, bool, unsigned long)
SwTabCols::Remove(unsigned long, unsigned long)
SwTabCols::operator=(SwTabCols const&)
SwTableAutoFormatTable::AddAutoFormat(SwTableAutoFormat const&)
SwTableAutoFormatTable::EraseAutoFormat(rtl::OUString const&)
SwTableAutoFormatTable::ReleaseAutoFormat(rtl::OUString const&)
SwTableAutoFormatTable::operator[](unsigned long) const
SwTableBoxFormula::Calc(SwTableCalcPara&, double&)
SwTableBoxFormula::GetNodeOfFormula() const
SwTableBoxFormula::GetTableBox()
SwTableBoxFormula::SwTableBoxFormula(rtl::OUString const&)
SwTableBoxFormula::ToSplitMergeBoxNmWithHistory(SwTableFormulaUpdate&, SwHistory*)
SwTableBoxFormula::TryBoxNmToPtr()
SwTableBoxFormula::TryRelBoxNm()
SwTableBoxFormula::operator==(SfxPoolItem const&) const
SwTableBoxNumFormat::Clone(SfxItemPool*) const
SwTableBoxNumFormat::operator==(SfxPoolItem const&) const
SwTableBoxValue::Clone(SfxItemPool*) const
SwTableBoxValue::SwTableBoxValue()
SwTableBoxValue::operator==(SfxPoolItem const&) const
SwTableCellInfo::Impl::getNext()
SwTableCellInfo::Impl::getNextCellFrame(SwFrame const*)
SwTableCellInfo::Impl::getNextFrameInTable(SwFrame const*)
SwTableCellInfo::Impl::getNextTableBoxsCellFrame(SwFrame const*)
SwTableCellInfo::getCellFrame() const
SwTableCellRedline::SwTableCellRedline(SwRedlineData const&, SwTableBox const&)
SwTableCellRedline::~SwTableCellRedline()
SwTableFUNC::InsertChart(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataProvider> const&, bool, rtl::OUString const&, SwFlyFrameFormat**)
SwTableFUNC::UpdateChart()
SwTableFormat::supportsFullDrawingLayerFillAttributeSet() const
SwTableFormula::BoxNmToPtr(SwTable const*)
SwTableFormula::BoxNmsToPtr(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::BoxNmsToRelNm(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::FindTable(SwDoc&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SwTableFormula::GetBoxes(SwTableBox const&, SwTableBox const&, SwSelBoxes&)
SwTableFormula::GetBoxesOfFormula(SwTable const&, SwSelBoxes&)
SwTableFormula::GetFormulaBoxes(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::GetLnPosInTable(SwTable const&, SwTableBox const*)
SwTableFormula::HasValidBoxes() const
SwTableFormula::HasValidBoxes_(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::MakeFormula_(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::PtrToBoxNms(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::RelBoxNmsToPtr(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::RelNmsToBoxNms(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::ScanString(void (SwTableFormula::*)(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const, SwTable const&, void*) const
SwTableFormula::SplitMergeBoxNm_(SwTable const&, rtl::OUStringBuffer&, rtl::OUString&, rtl::OUString*, void*) const
SwTableFormula::SwTableFormula(rtl::OUString)
SwTableFormula::ToRelBoxNm(SwTable const*)
SwTableFormula::ToSplitMergeBoxNm(SwTableFormulaUpdate&)
SwTableNode::MakeCopy(SwDoc&, SwNodeIndex const&) const
SwTableNode::MakeFrame(SwFrame*)
SwTableNode::MakeFramesForAdjacentContentNode(SwNodeIndex const&)
SwTableNode::RemoveRedlines()
SwTableNode::SetNewTable(std::unique_ptr<SwTable, std::default_delete<SwTable> >, bool)
SwTableNode::SwTableNode(SwNode const&)
SwTableNode::dumpAsXml(_xmlTextWriter*) const
SwTableNode::~SwTableNode()
SwTableRep::FillTabCols(SwTabCols&) const
SwTableRowRedline::SwTableRowRedline(SwRedlineData const&, SwTableLine const&)
SwTableRowRedline::~SwTableRowRedline()
SwTemplNameField::Copy() const
SwTemplNameField::ExpandImpl(SwRootFrame const*) const
SwTemplNameField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwTemplNameField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwTextAttr::Destroy(SwTextAttr*)
SwTextAttr::GetEnd() const
SwTextAttr::SetEnd(int)
SwTextAttr::SwTextAttr(SfxPoolItemHolder const&, int)
SwTextAttr::dumpAsXml(_xmlTextWriter*) const
SwTextAttr::operator==(SwTextAttr const&) const
SwTextAttr::~SwTextAttr()
SwTextAttrEnd::SetEnd(int)
SwTextAttrEnd::SwTextAttrEnd(SfxPoolItemHolder const&, int, int)
SwTextBlocks::BeginGetDoc(unsigned short)
SwTextBlocks::CopyBlock(SwTextBlocks const&, rtl::OUString&, rtl::OUString const&)
SwTextBlocks::Delete(unsigned short)
SwTextBlocks::EndGetDoc()
SwTextBlocks::GetLongIndex(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
SwTextBlocks::GetMacroTable(unsigned short, SvxMacroTableDtor&)
SwTextBlocks::GetName() const
SwTextBlocks::GetShortName(unsigned short) const
SwTextBlocks::IsOnlyTextBlock(rtl::OUString const&) const
SwTextBlocks::IsOnlyTextBlock(unsigned short) const
SwTextBlocks::IsReadOnly() const
SwTextBlocks::PutText(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
SwTextBlocks::Rename(unsigned short, rtl::OUString const*, rtl::OUString const*)
SwTextBlocks::SetMacroTable(unsigned short, SvxMacroTableDtor const&)
SwTextBlocks::SetName(rtl::OUString const&)
SwTextContentControl::ChgTextNode(SwTextNode*)
SwTextContentControl::CreateTextContentControl(SwDoc&, SwTextNode*, SfxPoolItemHolder const&, int, int, bool)
SwTextContentControl::GetTextNode() const
SwTextContentControl::SwTextContentControl(SwContentControlManager*, SfxPoolItemHolder const&, int, int)
SwTextContentControl::ToString() const
SwTextContentControl::dumpAsXml(_xmlTextWriter*) const
SwTextContentControl::~SwTextContentControl()
SwTextGridItem::Clone(SfxItemPool*) const
SwTextGridItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
SwTextGridItem::Init()
SwTextGridItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwTextGridItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwTextGridItem::SwitchPaperMode(bool)
SwTextGridItem::operator==(SfxPoolItem const&) const
SwTextINetFormat::IsProtect() const
SwTextINetFormat::SwClientNotify(SwModify const&, SfxHint const&)
SwTextINetFormat::SwTextINetFormat(SfxPoolItemHolder const&, int, int)
SwTextINetFormat::~SwTextINetFormat()
SwTextLineBreak::GetTextNode() const
SwTextLineBreak::SetTextNode(SwTextNode*)
SwTextLineBreak::SwTextLineBreak(SfxPoolItemHolder const&, int)
SwTextLineBreak::dumpAsXml(_xmlTextWriter*) const
SwTextLineBreak::~SwTextLineBreak()
SwTextRuby::SwClientNotify(SwModify const&, SfxHint const&)
SwTextRuby::SwTextRuby(SfxPoolItemHolder const&, int, int)
SwTextRuby::~SwTextRuby()
SwTranslateHelper::ExportPaMToHTML(SwPaM*)
SwTranslateHelper::PasteHTMLToPaM(SwWrtShell&, SwPaM*, rtl::OString const&)
SwTranslateHelper::TranslateDocument(SwWrtShell&, SwTranslateHelper::TranslateAPIConfig const&)
SwUINumRuleItem::Clone(SfxItemPool*) const
SwUINumRuleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
SwUINumRuleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
SwUINumRuleItem::SwUINumRuleItem(SwUINumRuleItem const&)
SwUINumRuleItem::operator==(SfxPoolItem const&) const
SwUnoCursorHelper::GetSelectableFromAny(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, SwDoc&, SwPaM*&, std::pair<rtl::OUString, FlyCntType>&, rtl::OUString&, SwUnoTableCursor const*&, sw::mark::IMark const*&, std::vector<SdrObject*, std::allocator<SdrObject*> >&)
SwUnoInternalPaM::operator=(SwPaM const&)
SwUserField::Copy() const
SwUserField::ExpandImpl(SwRootFrame const*) const
SwUserField::GetFieldName() const
SwUserField::GetPar1() const
SwUserField::GetPar2() const
SwUserField::GetSubType() const
SwUserField::GetValue() const
SwUserField::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwUserField::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwUserField::SetPar2(rtl::OUString const&)
SwUserField::SetSubType(unsigned short)
SwUserField::SetValue(double const&)
SwUserField::dumpAsXml(_xmlTextWriter*) const
SwUserFieldType::Copy() const
SwUserFieldType::EnsureValid()
SwUserFieldType::Expand(unsigned int, unsigned short, o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwUserFieldType::GetValue(SwCalc&)
SwUserFieldType::PutValue(com::sun::star::uno::Any const&, unsigned short)
SwUserFieldType::QueryValue(com::sun::star::uno::Any&, unsigned short) const
SwUserFieldType::SwClientNotify(SwModify const&, SfxHint const&)
SwUserFieldType::dumpAsXml(_xmlTextWriter*) const
SwValueField::ChgTyp(SwFieldType*)
SwValueField::GetValue() const
SwValueField::SetLanguage(o3tl::strong_int<unsigned short, LanguageTypeTag>)
SwValueField::SetValue(double const&)
SwValueField::SwValueField(SwValueField const&)
SwValueField::SwValueField(SwValueFieldType*, unsigned int, o3tl::strong_int<unsigned short, LanguageTypeTag>, double)
SwValueField::dumpAsXml(_xmlTextWriter*) const
SwView::StopShellTimer()
SwVisibleCursor::Hide()
SwVisibleCursor::SetPosAndShow(SfxViewShell const*)
SwVisibleCursor::Show()
SwVisibleCursor::SwVisibleCursor(SwCursorShell const*)
SwVisibleCursor::getLOKPayload(int, int) const
SwVisibleCursor::~SwVisibleCursor()
SwWait::EnterWaitAndLockDispatcher()
SwWait::LeaveWaitAndUnlockDispatcher()
SwWebDocShell::Factory()
SwWebDocShell::FillClass(SvGlobalName*, SotClipboardFormatId*, rtl::OUString*, int, bool) const
SwWebDocShell::GetInterface() const
SwWebDocShell::GetStaticInterface()
SwWebDocShell::InitInterface_Impl()
SwWebDocShell::RegisterInterface(SfxModule const*)
SwWebDocShell::SwWebDocShell()
SwWebDocShell::~SwWebDocShell()
SwWebView::CreateInstance(SfxViewFrame&, SfxViewShell*)
SwWebView::GetInterface() const
SwWebView::GetStaticInterface()
SwWebView::InitFactory()
SwWebView::InitInterface_Impl()
SwWebView::RegisterFactory(o3tl::strong_int<unsigned short, SfxInterfaceIdTag>)
SwWebView::RegisterInterface(SfxModule const*)
SwWebView::SelectShell()
SwWebView::SwWebView(SfxViewFrame&, SfxViewShell*)
SwWebView::~SwWebView()
SwWriter::SwWriter(SfxMedium&, SwCursorShell&, bool)
SwWriter::SwWriter(SfxMedium&, SwDoc&)
SwWriter::SwWriter(SvStream&, SwCursorShell&, bool)
SwWriter::SwWriter(com::sun::star::uno::Reference<com::sun::star::embed::XStorage>, SwDoc&)
SwWrtShellItem::Clone(SfxItemPool*) const
SwWrtShellItem::SwWrtShellItem(SwWrtShell*)
SwWrtShellItem::operator==(SfxPoolItem const&) const
SwXDocumentSettings::SwXDocumentSettings(SwXTextDocument*)
SwXDocumentSettings::_getSingleValue(comphelper::PropertyInfo const&, com::sun::star::uno::Any&)
SwXDocumentSettings::_postGetValues()
SwXDocumentSettings::_postSetValues()
SwXDocumentSettings::_preGetValues()
SwXDocumentSettings::_preSetValues()
SwXDocumentSettings::_setSingleValue(comphelper::PropertyInfo const&, com::sun::star::uno::Any const&)
SwXDocumentSettings::acquire()
SwXDocumentSettings::getImplementationId()
SwXDocumentSettings::getImplementationName()
SwXDocumentSettings::getSupportedServiceNames()
SwXDocumentSettings::getTypes()
SwXDocumentSettings::queryInterface(com::sun::star::uno::Type const&)
SwXDocumentSettings::supportsService(rtl::OUString const&)
SwXDocumentSettings::~SwXDocumentSettings()
SwXTextDefaults::SwXTextDefaults(SwDoc*)
SwXTextDefaults::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextDefaults::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextDefaults::getImplementationName()
SwXTextDefaults::getPropertyDefault(rtl::OUString const&)
SwXTextDefaults::getPropertySetInfo()
SwXTextDefaults::getPropertyState(rtl::OUString const&)
SwXTextDefaults::getPropertyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
SwXTextDefaults::getPropertyValue(rtl::OUString const&)
SwXTextDefaults::getSupportedServiceNames()
SwXTextDefaults::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextDefaults::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextDefaults::setPropertyToDefault(rtl::OUString const&)
SwXTextDefaults::supportsService(rtl::OUString const&)
SwXTextDefaults::~SwXTextDefaults()
SwXTextTableCursor::GetCursor()
SwXTextTableCursor::GetCursor() const
SwXTextTableCursor::GetDoc()
SwXTextTableCursor::GetDoc() const
SwXTextTableCursor::GetPaM()
SwXTextTableCursor::GetPaM() const
SwXTextTableCursor::Notify(SfxHint const&)
SwXTextTableCursor::SwXTextTableCursor(SwFrameFormat&, SwTableCursor const*)
SwXTextTableCursor::SwXTextTableCursor(SwFrameFormat*, SwTableBox const*)
SwXTextTableCursor::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextTableCursor::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextTableCursor::getImplementationName()
SwXTextTableCursor::getPropertySetInfo()
SwXTextTableCursor::getPropertyValue(rtl::OUString const&)
SwXTextTableCursor::getRangeName()
SwXTextTableCursor::getSupportedServiceNames()
SwXTextTableCursor::goDown(short, unsigned char)
SwXTextTableCursor::goLeft(short, unsigned char)
SwXTextTableCursor::goRight(short, unsigned char)
SwXTextTableCursor::goUp(short, unsigned char)
SwXTextTableCursor::gotoCellByName(rtl::OUString const&, unsigned char)
SwXTextTableCursor::gotoEnd(unsigned char)
SwXTextTableCursor::gotoStart(unsigned char)
SwXTextTableCursor::mergeRange()
SwXTextTableCursor::release()
SwXTextTableCursor::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
SwXTextTableCursor::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
SwXTextTableCursor::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
SwXTextTableCursor::splitRange(short, unsigned char)
SwXTextTableCursor::supportsService(rtl::OUString const&)
SwpHints::Resort() const
SwpHints::ResortWhichMap() const
SyntaxHighlighter::GetLanguage() const
SyntaxHighlighter::Tokenizer::Tokenizer(HighlighterLanguage)
SyntaxHighlighter::Tokenizer::getHighlightPortions(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::vector<HighlightPortion, std::allocator<HighlightPortion> >&) const
SyntaxHighlighter::Tokenizer::getNextToken(char16_t const*&, char16_t const*, TokenType&, char16_t const*&, char16_t const*&) const
SyntaxHighlighter::Tokenizer::setKeyWords(char const**, unsigned short)
SystemChildWindow::GetOptimalSize() const
SystemChildWindow::GetSystemData() const
SystemChildWindow::SetLeaveEnterBackgrounds(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
SystemChildWindow::dispose()
SystemChildWindow::~SystemChildWindow()
SystemWindow::CloseNotebookBar()
SystemWindow::CollectMenuBarMnemonics(MnemonicGenerator&) const
SystemWindow::GetCloseHdl() const
SystemWindow::GetMenuBarHeight() const
SystemWindow::GetNotebookBar() const
SystemWindow::GetScreenNumber() const
SystemWindow::GetWindowState(vcl::WindowDataMask) const
SystemWindow::ImplData::ImplData()
SystemWindow::SetApplicationID(rtl::OUString const&)
SystemWindow::SetMenuBar(MenuBar*)
SystemWindow::SetNotebookBar(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, NotebookBarAddonsItem const&, bool)
SystemWindow::SetRepresentedURL(rtl::OUString const&)
SystemWindow::SetScreenNumber(unsigned int)
SystemWindow::SetWindowState(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
SystemWindow::UpdatePositionData()
SystemWindow::createScreenshot()
TBCExtraInfo::Read(SvStream&)
TBCExtraInfo::TBCExtraInfo()
TBCExtraInfo::getOnAction() const
TBCGeneralInfo::ImportToolBarControlData(CustomToolBarImportHelper&, std::vector<com::sun::star::beans::PropertyValue, std::allocator<com::sun::star::beans::PropertyValue> >&)
TBCGeneralInfo::Read(SvStream&)
TBCGeneralInfo::TBCGeneralInfo()
TBCMenuSpecific::Read(SvStream&)
TBCMenuSpecific::TBCMenuSpecific()
TIFFCIELab16ToXYZ
TIFFCIELabToRGBInit
TIFFCIELabToXYZ
TIFFCheckTile
TIFFCheckpointDirectory
TIFFCleanup
TIFFClientOpen
TIFFClientOpenExt
TIFFClientdata
TIFFClose
TIFFComputeStrip
TIFFComputeTile
TIFFCreateCustomDirectory
TIFFCreateDirectory
TIFFCreateEXIFDirectory
TIFFCreateGPSDirectory
TIFFCurrentDirOffset
TIFFCurrentDirectory
TIFFCurrentRow
TIFFCurrentStrip
TIFFCurrentTile
TIFFDataWidth
TIFFDefaultDirectory
TIFFDefaultStripSize
TIFFDefaultTileSize
TIFFDeferStrileArrayWriting
TIFFError
TIFFErrorExt
TIFFErrorExtR
TIFFFdOpen
TIFFFdOpenExt
TIFFFieldDataType
TIFFFieldIsAnonymous
TIFFFieldName
TIFFFieldPassCount
TIFFFieldReadCount
TIFFFieldSetGetCountSize
TIFFFieldSetGetSize
TIFFFieldTag
TIFFFieldWithName
TIFFFieldWithTag
TIFFFieldWriteCount
TIFFFileName
TIFFFileno
TIFFFillStrip
TIFFFillTile
TIFFFindCODEC
TIFFFindField
TIFFFlush
TIFFFlushData
TIFFFlushData1
TIFFForceStrileArrayWriting
TIFFFreeDirectory
TIFFGetBitRevTable
TIFFGetCloseProc
TIFFGetConfiguredCODECs
TIFFGetField
TIFFGetFieldDefaulted
TIFFGetMapFileProc
TIFFGetMode
TIFFGetReadProc
TIFFGetSeekProc
TIFFGetSizeProc
TIFFGetStrileByteCount
TIFFGetStrileByteCountWithErr
TIFFGetStrileOffset
TIFFGetStrileOffsetWithErr
TIFFGetUnmapFileProc
TIFFGetWriteProc
TIFFHashSetDestroy
TIFFHashSetInsert
TIFFHashSetLookup
TIFFHashSetNew
TIFFHashSetRemove
TIFFHashSetSize
TIFFInitCCITTFax3
TIFFInitCCITTFax4
TIFFInitCCITTRLE
TIFFInitCCITTRLEW
TIFFInitDumpMode
TIFFInitJPEG
TIFFInitLZW
TIFFInitNeXT
TIFFInitOJPEG
TIFFInitPackBits
TIFFInitPixarLog
TIFFInitSGILog
TIFFInitThunderScan
TIFFInitWebP
TIFFInitZIP
TIFFIsBigEndian
TIFFIsBigTIFF
TIFFIsByteSwapped
TIFFIsCODECConfigured
TIFFIsMSB2LSB
TIFFIsTiled
TIFFIsUpSampled
TIFFJPEGIsFullStripRequired
TIFFLastDirectory
TIFFMergeFieldInfo
TIFFNumberOfDirectories
TIFFNumberOfStrips
TIFFNumberOfTiles
TIFFOpen
TIFFOpenExt
TIFFOpenOptionsAlloc
TIFFOpenOptionsFree
TIFFOpenOptionsSetErrorHandlerExtR
TIFFOpenOptionsSetMaxSingleMemAlloc
TIFFOpenOptionsSetWarningHandlerExtR
TIFFPredictorCleanup
TIFFPredictorInit
TIFFRGBAImageBegin
TIFFRGBAImageEnd
TIFFRGBAImageGet
TIFFRGBAImageOK
TIFFRasterScanlineSize
TIFFRasterScanlineSize64
TIFFRawStripSize
TIFFRawStripSize64
TIFFReadBufferSetup
TIFFReadCustomDirectory
TIFFReadDirectory
TIFFReadEXIFDirectory
TIFFReadEncodedStrip
TIFFReadEncodedTile
TIFFReadFromUserBuffer
TIFFReadGPSDirectory
TIFFReadRGBAImage
TIFFReadRGBAImageOriented
TIFFReadRGBAStrip
TIFFReadRGBAStripExt
TIFFReadRGBATile
TIFFReadRGBATileExt
TIFFReadRawStrip
TIFFReadRawTile
TIFFReadScanline
TIFFReadTile
TIFFRegisterCODEC
TIFFReverseBits
TIFFRewriteDirectory
TIFFScanlineSize
TIFFScanlineSize64
TIFFSetClientdata
TIFFSetCompressionScheme
TIFFSetDirectory
TIFFSetErrorHandler
TIFFSetErrorHandlerExt
TIFFSetField
TIFFSetFileName
TIFFSetFileno
TIFFSetMode
TIFFSetSubDirectory
TIFFSetTagExtender
TIFFSetWarningHandler
TIFFSetWarningHandlerExt
TIFFSetWriteOffset
TIFFSetupStrips
TIFFStripSize
TIFFStripSize64
TIFFSwabArrayOfDouble
TIFFSwabArrayOfFloat
TIFFSwabArrayOfLong
TIFFSwabArrayOfLong8
TIFFSwabArrayOfShort
TIFFSwabArrayOfTriples
TIFFSwabDouble
TIFFSwabFloat
TIFFSwabLong
TIFFSwabLong8
TIFFSwabShort
TIFFTileRowSize
TIFFTileRowSize64
TIFFTileSize
TIFFTileSize64
TIFFUnRegisterCODEC
TIFFUnlinkDirectory
TIFFUnsetField
TIFFVGetField
TIFFVGetFieldDefaulted
TIFFVSetField
TIFFVStripSize
TIFFVStripSize64
TIFFVTileSize
TIFFVTileSize64
TIFFWarning
TIFFWarningExt
TIFFWarningExtR
TIFFWriteBufferSetup
TIFFWriteCheck
TIFFWriteCustomDirectory
TIFFWriteDirectory
TIFFWriteEncodedStrip
TIFFWriteEncodedTile
TIFFWriteRawStrip
TIFFWriteRawTile
TIFFWriteScanline
TIFFWriteTile
TIFFXYZToRGB
TIFFYCbCrToRGBInit
TIFFYCbCrtoRGB
TabBar::CalcWindowSizePixel() const
TabBar::GetHelpText(unsigned short) const
TabBar::GetPageArea() const
TabBar::GetPageBits(unsigned short) const
TabBar::GetSelectPageCount() const
TabBar::IsPageEnabled(unsigned short) const
TabBar::MakeVisible(unsigned short)
TabBar::MovePage(unsigned short, unsigned short)
TabBar::RemovePage(unsigned short)
TabBar::SetFirstPageId(unsigned short)
TabBar::SetMirrored(bool)
TabBar::Split()
TabBar::next()
TabBar::prev()
TabBar::seek(unsigned long)
TabPaneValue::clone() const
Task::SetDeletionFlags()
Task::Start(bool)
Task::StartTimer(unsigned long)
Task::Task(Task const&)
Task::Task(char const*)
Task::operator=(Task const&)
Task::~Task()
TestFODSExportXLS
TestFontSubset(void const*, unsigned int)
TestPDFExportFODT
TextAttrib::operator==(TextAttrib const&) const
TextAttribFontColor::Clone() const
TextAttribFontColor::SetFont(vcl::Font&) const
TextAttribFontColor::operator==(TextAttrib const&) const
TextEngine::FindAttrib(TextPaM const&, unsigned short) const
TextEngine::GetLineCount(unsigned int) const
TextEngine::GetLineLen(unsigned int, unsigned short) const
TextEngine::GetLocale()
TextEngine::GetPaM(Point const&)
TextEngine::GetText(TextSelection const&, LineEnd) const
TextEngine::GetTextHeight(unsigned int) const
TextEngine::GetTextLen(unsigned int) const
TextEngine::GetTextPortionRange(TextPaM const&, int&, int&)
TextEngine::PaMtoEditCursor(TextPaM const&, bool)
TextEngine::ReplaceText(TextSelection const&, rtl::OUString const&)
TextEngine::SetMaxTextWidth(long)
TextEngine::SetText(rtl::OUString const&)
TextEngine::TextEngine()
TextEngine::~TextEngine()
TextListenerMultiplexer::TextListenerMultiplexer(cppu::OWeakObject&)
TextListenerMultiplexer::acquire()
TextListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
TextListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
TextListenerMultiplexer::release()
TextListenerMultiplexer::textChanged(com::sun::star::awt::TextEvent const&)
TextRanger::GetBoundRect_() const
TextRanger::SetVertical(bool)
TextSelection::Justify()
TextSelection::TextSelection()
TextSelection::TextSelection(TextPaM const&)
TextView::CursorEndOfLine(TextPaM const&)
TextView::DeleteSelected()
TextView::GetDocPos(Point const&) const
TextView::GetLineNumberOfCursorInSelection() const
TextView::GetWindow() const
TextView::GetWindowPos(Point const&) const
TextView::HideCursor()
TextView::IndentBlock()
TextView::InsertText(rtl::OUString const&)
TextView::IsInsertMode() const
TextView::IsReadOnly() const
TextView::MatchGroup()
TextView::Read(SvStream&)
TextView::SetReadOnly(bool)
TextView::ToggleComment()
TextView::UnindentBlock()
ThumbnailView::AppendItem(std::unique_ptr<ThumbnailViewItem, std::default_delete<ThumbnailViewItem> >)
ThumbnailView::CalculateItemPositions(bool)
ThumbnailView::Clear()
ThumbnailView::CreateAccessible()
ThumbnailView::DrawItem(ThumbnailViewItem const*)
ThumbnailView::DrawMnemonics(bool)
ThumbnailView::GetFocus()
ThumbnailView::GetItemId(Point const&) const
ThumbnailView::GetItemId(unsigned long) const
ThumbnailView::GetItemPos(unsigned short) const
ThumbnailView::ImplDeleteItems()
ThumbnailView::ImplFireAccessibleEvent(short, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
ThumbnailView::ImplGetItem(Point const&) const
ThumbnailView::ImplGetItem(unsigned long)
ThumbnailView::ImplGetVisibleItem(unsigned short)
ThumbnailView::ImplGetVisibleItemCount() const
ThumbnailView::ImplHasAccessibleListeners() const
ThumbnailView::ImplInit()
ThumbnailView::IsItemSelected(unsigned short) const
ThumbnailView::KeyInput(KeyEvent const&)
ThumbnailView::LoseFocus()
ThumbnailView::MakeItemVisible(unsigned short)
ThumbnailView::MouseButtonDown(MouseEvent const&)
ThumbnailView::MouseMove(MouseEvent const&)
ThumbnailView::OnItemDblClicked(ThumbnailViewItem*)
ThumbnailView::Paint(OutputDevice&, tools::Rectangle const&)
ThumbnailView::RemoveItem(unsigned short)
ThumbnailView::RequestHelp(tools::Rectangle&)
ThumbnailView::Resize()
ThumbnailView::SelectItem(unsigned short)
ThumbnailView::SetDrawingArea(weld::DrawingArea*)
ThumbnailView::ShowTooltips(bool)
ThumbnailView::ThumbnailView(std::unique_ptr<weld::ScrolledWindow, std::default_delete<weld::ScrolledWindow> >, std::unique_ptr<weld::Menu, std::default_delete<weld::Menu> >)
ThumbnailView::UpdateColors()
ThumbnailView::deselectItems()
ThumbnailView::filterItems(std::function<bool (ThumbnailViewItem const*)> const&)
ThumbnailView::getAccessible() const
ThumbnailView::renameItem(ThumbnailViewItem*, rtl::OUString const&)
ThumbnailView::setItemDimensions(long, long, long, int)
ThumbnailView::setItemMaxTextLength(unsigned int)
ThumbnailView::updateItems(std::vector<std::unique_ptr<ThumbnailViewItem, std::default_delete<ThumbnailViewItem> >, std::allocator<std::unique_ptr<ThumbnailViewItem, std::default_delete<ThumbnailViewItem> > > >)
ThumbnailView::~ThumbnailView()
TightBounds(SkPath const&, SkRect*)
Timer::Invoke(Timer*)
Timer::Timer(bool, char const*)
ToolBox::AlwaysLocked()
ToolBox::CalcFloatingWindowSizePixel()
ToolBox::CalcFloatingWindowSizePixel(unsigned long)
ToolBox::CalcMinimumWindowSizePixel()
ToolBox::CalcPopupWindowSizePixel()
ToolBox::CalcWindowSizePixel(unsigned long, WindowAlign)
ToolBox::ChangeHighlight(unsigned long)
ToolBox::CopyItem(ToolBox const&, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>)
ToolBox::DoubleClick()
ToolBox::EnableCustomize(bool)
ToolBox::ExecuteCustomMenu(tools::Rectangle const&)
ToolBox::GetAccessibleName(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetCharacterBounds(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, long)
ToolBox::GetDefaultImageSize() const
ToolBox::GetDefaultImageSize(ToolBoxButtonSize)
ToolBox::GetHelpText(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetIndexForPoint(Point const&, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>&)
ToolBox::GetItemCount() const
ToolBox::GetItemData(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetItemId(Point const&) const
ToolBox::GetItemId(rtl::OUString const&) const
ToolBox::GetItemId(unsigned long) const
ToolBox::GetItemImage(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetItemPos(Point const&) const
ToolBox::GetItemPosRect(unsigned long)
ToolBox::GetItemState(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetItemText(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::GetItemType(unsigned long) const
ToolBox::GetMenu() const
ToolBox::GetMenuType() const
ToolBox::GetOverflowRect() const
ToolBox::Highlight()
ToolBox::InsertBreak(unsigned long)
ToolBox::InsertItem(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&, rtl::OUString const&, ToolBoxItemBits, unsigned long)
ToolBox::InsertSpace()
ToolBox::IsItemClipped(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::IsItemEnabled(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::IsItemReallyVisible(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::IsItemVisible(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>) const
ToolBox::IsMenuEnabled() const
ToolBox::Lock(bool)
ToolBox::RemoveItem(unsigned long)
ToolBox::SetAccessibleName(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
ToolBox::SetAlign(WindowAlign)
ToolBox::SetButtonType(ButtonType)
ToolBox::SetHelpText(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
ToolBox::SetItemCommand(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
ToolBox::SetItemData(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, void*)
ToolBox::SetItemExpand(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, bool)
ToolBox::SetItemImageAngle(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, o3tl::strong_int<short, FractionTag<10> >)
ToolBox::SetItemImageMirrorMode(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, bool)
ToolBox::SetItemWindow(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, vcl::Window*)
ToolBox::SetItemWindowNonInteractive(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, bool)
ToolBox::SetLineCount(unsigned long)
ToolBox::SetMenuExecuteHdl(Link<ToolBox*, void> const&)
ToolBox::SetMenuType(ToolBoxMenuType)
ToolBox::SetStyle(long)
ToolBox::SetToolBoxTextPosition(ToolBoxTextPosition)
ToolBox::SetToolboxButtonSize(ToolBoxButtonSize)
ToolBox::ShowLine(bool)
ToolBox::ToolBox(vcl::Window*, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
ToolBox::TriggerItem(o3tl::strong_int<unsigned short, ToolBoxItemIdTag>)
ToolBox::UpdateCustomMenu()
ToolBox::WillUsePopupMode() const
ToolBox::WillUsePopupMode(bool)
ToolbarPopupContainer::unsetPopover()
ToolbarUnoDispatcher::CreateController(rtl::OUString const&)
ToolbarUnoDispatcher::GetIconSize()
ToolbarUnoDispatcher::dispose()
TransferDataContainer::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
TransferDataContainer::StartDrag(vcl::Window*, signed char, Link<signed char, void> const&)
TransferableClipboardListener::changedContents(com::sun::star::datatransfer::clipboard::ClipboardEvent const&)
TransferableClipboardListener::disposing(com::sun::star::lang::EventObject const&)
TransferableClipboardListener::~TransferableClipboardListener()
TransferableDataHelper::FillDataFlavorExVector(com::sun::star::uno::Sequence<com::sun::star::datatransfer::DataFlavor> const&, std::vector<DataFlavorEx, std::allocator<DataFlavorEx> >&)
TransferableDataHelper::GetBitmapEx(com::sun::star::datatransfer::DataFlavor const&, BitmapEx&) const
TransferableDataHelper::GetFileList(FileList&) const
TransferableDataHelper::GetFormatDataFlavor(unsigned int) const
TransferableDataHelper::GetGDIMetaFile(com::sun::star::datatransfer::DataFlavor const&, GDIMetaFile&) const
TransferableDataHelper::GetGraphic(com::sun::star::datatransfer::DataFlavor const&, Graphic&) const
TransferableDataHelper::GetINetBookmark(com::sun::star::datatransfer::DataFlavor const&, INetBookmark&) const
TransferableDataHelper::GetINetImage(com::sun::star::datatransfer::DataFlavor const&, INetImage&) const
TransferableDataHelper::GetImageMap(com::sun::star::datatransfer::DataFlavor const&, ImageMap&) const
TransferableDataHelper::GetInputStream(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&) const
TransferableDataHelper::GetSequence(SotClipboardFormatId, rtl::OUString const&) const
TransferableDataHelper::GetSequence(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&) const
TransferableDataHelper::GetString(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString&) const
TransferableDataHelper::GetTransferableObjectDescriptor(TransferableObjectDescriptor&) const
TransferableDataHelper::InitFormats()
TransferableDataHelper::Rebind(com::sun::star::uno::Reference<com::sun::star::datatransfer::XTransferable> const&)
TransferableDataHelper::StartClipboardListening()
TransferableDataHelper::StopClipboardListening()
TransferableDataHelper::operator=(TransferableDataHelper const&)
TransferableHelper::CopyToSelection(com::sun::star::uno::Reference<com::sun::star::datatransfer::clipboard::XClipboard> const&) const
TransferableHelper::RemoveFormat(com::sun::star::datatransfer::DataFlavor const&)
TypeSerializer::readGfxLink(GfxLink&)
TypeSerializer::writeGfxLink(GfxLink const&)
UCBStorage::UCBStorage(ucbhelper::Content const&, rtl::OUString const&, StreamMode, bool, bool)
UIObject::execute(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
UIObject::get_state()
UIObject::get_type() const
UITestLogger::UITestLogger()
UITestLogger::log(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
UITestLogger::logAction(VclPtr<Control> const&, VclEventId)
UITestLogger::logAction(vcl::Window* const&, VclEventId)
UITestLogger::logKeyInput(VclPtr<vcl::Window> const&, KeyEvent const&)
URIHelper::SetMaybeFileHdl(Link<rtl::OUString*, bool> const&)
UnoControl::GetComponentServiceName() const
UnoControl::ImplCheckLocalize(rtl::OUString&)
UnoControl::ImplGetCompatiblePeer()
UnoControl::ImplLockPropertyChangeNotification(rtl::OUString const&, bool)
UnoControl::ImplLockPropertyChangeNotifications(com::sun::star::uno::Sequence<rtl::OUString> const&, bool)
UnoControl::getParentPeer() const
UnoControl::getVclWindowPeer()
UnoControl::peerCreated()
UnoTheme::getColorSet()
UnoTheme::getName()
UnoWrapperBase::SetUnoWrapper(UnoWrapperBase*)
VBAEncryption::VBAEncryption(unsigned char const*, unsigned short, SvStream&, unsigned char, unsigned short)
VBAEncryption::write()
VBAEncryption::writeDataEnc()
VBAEncryption::writeDataLengthEnc()
VBAEncryption::writeIgnoredEnc()
VBAEncryption::writeProjKeyEnc()
VBAEncryption::writeSeed()
VBAEncryption::writeVersionEnc()
VCLUnoHelper::ConvertToAWTPoint(Point const&)
VCLUnoHelper::ConvertToAWTSize(Size const&)
VCLUnoHelper::ConvertToMapModeUnit(short)
VCLUnoHelper::ConvertToVCLPoint(com::sun::star::awt::Point const&)
VCLUnoHelper::ConvertToVCLSize(com::sun::star::awt::Size const&)
VCLUnoHelper::CreateFont(com::sun::star::awt::FontDescriptor const&, vcl::Font const&)
VCLUnoHelper::CreateFont(com::sun::star::uno::Reference<com::sun::star::awt::XFont> const&)
VCLUnoHelper::CreateFontMetric(FontMetric const&)
VCLUnoHelper::CreatePolygon(com::sun::star::uno::Sequence<int> const&, com::sun::star::uno::Sequence<int> const&)
VCLUnoHelper::GetOutputDevice(com::sun::star::uno::Reference<com::sun::star::awt::XDevice> const&)
VCLUnoHelper::GetOutputDevice(com::sun::star::uno::Reference<com::sun::star::awt::XGraphics> const&)
VCLUnoHelper::GetRegion(com::sun::star::uno::Reference<com::sun::star::awt::XRegion> const&)
VCLUnoHelper::GetWindow(com::sun::star::uno::Reference<com::sun::star::awt::XWindow2> const&)
VCLUnoHelper::IsZero(com::sun::star::awt::Rectangle const&)
VCLUnoHelper::VCL2UnoEmbedMapUnit(MapUnit)
VCLUnoHelper::createVCLKeyEvent(com::sun::star::awt::KeyEvent const&)
VCLUnoHelper::createVCLMouseEvent(com::sun::star::awt::MouseEvent const&)
VCLUnoHelper::getMousePointer(com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&)
VCLUnoHelper::setMousePointer(com::sun::star::uno::Reference<com::sun::star::awt::XWindowPeer> const&, PointerStyle)
VCLXAccessibleComponent::DisconnectEvents()
VCLXAccessibleComponent::GetVCLXWindow() const
VCLXAccessibleComponent::getAccessibleIndexInParent()
VCLXAccessibleComponent::getAccessibleParent()
VCLXDevice::~VCLXDevice()
VCLXMenu::ImplAddListener()
VCLXMenu::ImplCreateMenu(bool)
VCLXMenu::IsPopupMenu() const
VCLXMenu::VCLXMenu()
VCLXMenu::VCLXMenu(Menu*)
VCLXMenu::addMenuListener(com::sun::star::uno::Reference<com::sun::star::awt::XMenuListener> const&)
VCLXMenu::checkItem(short, unsigned char)
VCLXMenu::clear()
VCLXMenu::enableAutoMnemonics(unsigned char)
VCLXMenu::enableItem(short, unsigned char)
VCLXMenu::endExecute()
VCLXMenu::getAcceleratorKeyEvent(short)
VCLXMenu::getDefaultItem()
VCLXMenu::getHelpCommand(short)
VCLXMenu::getHelpText(short)
VCLXMenu::getImplementationId()
VCLXMenu::getImplementationName()
VCLXMenu::getItemCount()
VCLXMenu::getItemId(short)
VCLXMenu::getItemImage(short)
VCLXMenu::getItemPos(short)
VCLXMenu::getItemText(short)
VCLXMenu::getItemType(short)
VCLXMenu::getPopupMenu(short)
VCLXMenu::getSupportedServiceNames()
VCLXMenu::getTipHelpText(short)
VCLXMenu::getTypes()
VCLXMenu::getUserValue(unsigned short)
VCLXMenu::hideDisabledEntries(unsigned char)
VCLXMenu::insertItem(short, rtl::OUString const&, short, short)
VCLXMenu::insertSeparator(short)
VCLXMenu::isInExecute()
VCLXMenu::isItemChecked(short)
VCLXMenu::isItemEnabled(short)
VCLXMenu::isPopupMenu()
VCLXMenu::queryInterface(com::sun::star::uno::Type const&)
VCLXMenu::removeItem(short, short)
VCLXMenu::removeMenuListener(com::sun::star::uno::Reference<com::sun::star::awt::XMenuListener> const&)
VCLXMenu::setAcceleratorKeyEvent(short, com::sun::star::awt::KeyEvent const&)
VCLXMenu::setCommand(short, rtl::OUString const&)
VCLXMenu::setDefaultItem(short)
VCLXMenu::setHelpCommand(short, rtl::OUString const&)
VCLXMenu::setHelpText(short, rtl::OUString const&)
VCLXMenu::setItemImage(short, com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&, unsigned char)
VCLXMenu::setItemText(short, rtl::OUString const&)
VCLXMenu::setPopupMenu(short, com::sun::star::uno::Reference<com::sun::star::awt::XPopupMenu> const&)
VCLXMenu::setTipHelpText(short, rtl::OUString const&)
VCLXMenu::setUserValue(unsigned short, void*, void (*)(void*))
VCLXMenu::supportsService(rtl::OUString const&)
VCLXMenu::~VCLXMenu()
VCLXPopupMenu::VCLXPopupMenu()
VCLXWindow::GetContainerListeners()
VCLXWindow::GetPropHelper()
VCLXWindow::GetTopWindowListeners()
VCLXWindow::ImplCalcWindowSize(Size const&) const
VCLXWindow::ImplExecuteAsyncWithoutSolarLock(std::function<void ()> const&)
VCLXWindow::ImplGetPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&, bool)
VCLXWindow::IsDisposed() const
VCLXWindow::IsSynthesizingVCLEvent() const
VCLXWindow::PushPropertyIds(std::vector<unsigned short, std::allocator<unsigned short> >&, int, ...)
VCLXWindow::SetSynthesizingVCLEvent(bool)
VCLXWindow::SetSystemParent_Impl(com::sun::star::uno::Any const&)
VCLXWindow::getAccessibleFactory()
VCLXWindow::notifyWindowRemoved(vcl::Window const&)
VCLXWindow::resumeVclEventListening()
VCLXWindow::suspendVclEventListening()
VP8CheckSignature
VP8GetInfo
VP8LCheckSignature
VP8LGetInfo
ValueSet::Format(OutputDevice const&)
ValueSet::GetLargestItemSize()
ValueSet::SetItemColor(unsigned short, Color const&)
VbaApplicationBase::getServiceImplName()
VbaApplicationBase::getServiceNames()
VbaDocumentBase::getNameFromModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
VbaEventsHelperBase::ensureVBALibrary()
VbaEventsHelperBase::getEventHandlerInfo(int) const
VbaEventsHelperBase::getEventHandlerPath(VbaEventsHelperBase::EventHandlerInfo const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
VbaEventsHelperBase::getModuleType(rtl::OUString const&)
VbaEventsHelperBase::startListening()
VbaEventsHelperBase::stopListening()
VbaEventsHelperBase::updateModulePathMap(rtl::OUString const&)
VbaExport::getBasicLibrary() const
VbaExport::getLibraryContainer() const
VbaExport::getProjectName() const
VbaExport::getVBATextEncoding() const
VbaGlobalsBase::hasServiceName(rtl::OUString const&)
VbaTextFrame::getMargin(rtl::OUString const&)
VbaTextFrame::setAsMSObehavior()
VbaTextFrame::setMargin(rtl::OUString const&, float)
VbaWindowBase::construct(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
VbaWindowBase::getServiceImplName()
VbaWindowBase::getServiceNames()
VbaWindowBase::getWindow2() const
VclAbstractDialogFactory::~VclAbstractDialogFactory()
VclBox::accumulateMaxes(Size const&, Size&) const
VclBox::finalizeMaxes(Size const&, unsigned short) const
VclBuilder::MenuAndId::MenuAndId(rtl::OUString, Menu*)
VclBuilder::ParserState::ParserState()
VclBuilder::applyAtkProperties(vcl::Window*, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&, bool)
VclBuilder::applyPackingProperty(vcl::Window*, vcl::Window*, xmlreader::XmlReader&)
VclBuilder::cleanupWidgetOwnScrolling(vcl::Window*, vcl::Window*, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::collectProperty(xmlreader::XmlReader&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&) const
VclBuilder::connectFormattedFormatterAdjustment(rtl::OUString const&, rtl::OUString const&)
VclBuilder::connectNumericFormatterAdjustment(rtl::OUString const&, rtl::OUString const&)
VclBuilder::delete_by_name(rtl::OUString const&)
VclBuilder::delete_by_window(vcl::Window*)
VclBuilder::disposeBuilder()
VclBuilder::drop_ownership(vcl::Window const*)
VclBuilder::extractAdjustmentToMap(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&, std::vector<VclBuilder::UStringPair, std::allocator<VclBuilder::UStringPair> >&)
VclBuilder::extractBuffer(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::extractButtonImage(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&, bool)
VclBuilder::extractGroup(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::extractMnemonicWidget(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::extractModel(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::getImageSize(std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
VclBuilder::getStyleClass(xmlreader::XmlReader&)
VclBuilder::get_adjustment_by_name(rtl::OUString const&) const
VclBuilder::get_buffer_by_name(rtl::OUString const&) const
VclBuilder::get_by_name(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
VclBuilder::get_by_window(vcl::Window const*) const
VclBuilder::get_model_by_name(rtl::OUString const&) const
VclBuilder::get_widget_root()
VclBuilder::get_window_packing_data(vcl::Window const*) const
VclBuilder::handleActionWidget(xmlreader::XmlReader&)
VclBuilder::handleAtkObject(xmlreader::XmlReader&) const
VclBuilder::handleChild(vcl::Window*, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >*, xmlreader::XmlReader&, bool)
VclBuilder::handleItems(xmlreader::XmlReader&) const
VclBuilder::handleListStore(xmlreader::XmlReader&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
VclBuilder::handleMenu(xmlreader::XmlReader&, vcl::Window*, rtl::OUString const&, bool)
VclBuilder::handleMenuChild(Menu*, xmlreader::XmlReader&)
VclBuilder::handleMenuObject(Menu*, xmlreader::XmlReader&)
VclBuilder::handleObject(vcl::Window*, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >*, xmlreader::XmlReader&, bool)
VclBuilder::handlePacking(vcl::Window*, vcl::Window*, xmlreader::XmlReader&)
VclBuilder::handleRow(xmlreader::XmlReader&, rtl::OUString const&)
VclBuilder::handleSizeGroup(xmlreader::XmlReader&)
VclBuilder::handleStyle(xmlreader::XmlReader&, int&)
VclBuilder::handleTabChild(vcl::Window*, xmlreader::XmlReader&)
VclBuilder::insertMenuObject(Menu*, PopupMenu*, rtl::OUString const&, rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&, std::map<rtl::OUString, std::pair<rtl::OUString, rtl::OUString>, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::pair<rtl::OUString, rtl::OUString> > > >&)
VclBuilder::insertObject(vcl::Window*, rtl::OUString const&, rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::makeObject(vcl::Window*, rtl::OUString const&, rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
VclBuilder::mungeAdjustment(FormattedField&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
VclBuilder::mungeAdjustment(NumericFormatter&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
VclBuilder::mungeAdjustment(ScrollBar&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
VclBuilder::mungeAdjustment(Slider&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
VclBuilder::mungeModel(ComboBox&, VclBuilder::ListStore const&, unsigned short)
VclBuilder::mungeModel(ListBox&, VclBuilder::ListStore const&, unsigned short)
VclBuilder::mungeModel(SvTabListBox&, VclBuilder::ListStore const&, unsigned short)
VclBuilder::mungeTextBuffer(VclMultiLineEdit&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > > const&)
VclBuilder::prepareWidgetOwnScrolling(vcl::Window*, long&)
VclBuilder::setDeferredProperties()
VclBuilder::set_response(std::basic_string_view<char16_t, std::char_traits<char16_t> >, short)
VclBuilder::set_window_packing_position(vcl::Window const*, int)
VclBuilder::sortIntoBestTabTraversalOrder::operator()(vcl::Window const*, vcl::Window const*) const
VclBuilder::tweakInsertedChild(vcl::Window*, vcl::Window*, std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >)
VclBuilderContainer::VclBuilderContainer()
VclBuilderContainer::disposeBuilder()
VclBuilderContainer::~VclBuilderContainer()
VclButtonBox::addReqGroups(VclButtonBox::Requisition const&) const
VclButtonBox::addSpacing(Size const&, unsigned short) const
VclButtonBox::calculatePrimarySecondaryRequisitions() const
VclContainer::getLayoutRequisition(vcl::Window const&)
VclContainer::setLayoutAllocation(vcl::Window&, Point const&, Size const&)
VclContainer::setLayoutPosSize(vcl::Window&, Point const&, Size const&)
VclDrawingArea::DeleteSurroundingText(Selection const&)
VclDrawingArea::DumpAsPropertyTree(tools::JsonWriter&)
VclDrawingArea::GetSurroundingText() const
VclDrawingArea::GetSurroundingTextSelection() const
VclDrawingArea::GetUITestFactory() const
VclDrawingArea::RequestHelp(HelpEvent const&)
VclDrawingArea::StartDrag(signed char, Point const&)
VclGrid::DumpAsPropertyTree(tools::JsonWriter&)
VclGrid::calculateRequisition() const
VclGrid::calculateRequisitionForSpacings(int, int) const
VclGrid::setAllocation(Size const&)
VclGrid::set_property(rtl::OUString const&, rtl::OUString const&)
VclMenuEvent::VclMenuEvent(Menu*, VclEventId, unsigned short)
VclMenuEvent::~VclMenuEvent()
VclTestResult::getStatus(bool)
VclWindowEvent::VclWindowEvent(vcl::Window*, VclEventId, void*)
VclWindowEvent::~VclWindowEvent()
VectorGraphicData::VectorGraphicData(rtl::OUString const&, VectorGraphicDataType)
VectorGraphicData::ensurePdfReplacement()
VectorGraphicData::ensureReplacement()
VectorGraphicData::ensureSequenceAndRange()
VectorGraphicData::getSizeBytes() const
VectorGraphicData::operator==(VectorGraphicData const&) const
VectorGraphicSearch::searchPDF(std::shared_ptr<VectorGraphicData> const&)
Viewport3D::GetViewPoint()
Viewport3D::SetDeviceWindow(tools::Rectangle const&)
Viewport3D::SetVPN(basegfx::B3DVector const&)
Viewport3D::SetVRP(basegfx::B3DPoint const&)
Viewport3D::SetVUV(basegfx::B3DVector const&)
Viewport3D::SetViewWindow(double, double, double, double)
Viewport3D::Viewport3D()
VirtualDevice::AcquireGraphics() const
VirtualDevice::CanEnableNativeWidget() const
VirtualDevice::EnableRTL(bool)
VirtualDevice::GetBitCount() const
VirtualDevice::GetFontExtLeading() const
VirtualDevice::IsVirtual() const
VirtualDevice::ReleaseGraphics(bool)
VirtualDevice::SetReferenceDevice(int, int)
VirtualDevice::UsePolyPolygonForComplexGradient()
VirtualDevice::dispose()
VirtualDevice::~VirtualDevice()
WString::Read(SvStream&)
Wallpaper::GetBitmap() const
Wallpaper::GetGradient() const
Wallpaper::IsFixed() const
Wallpaper::IsRect() const
Wallpaper::IsScrollable() const
Wallpaper::SetBitmap(BitmapEx const&)
Wallpaper::SetColor(Color const&)
Wallpaper::SetGradient(Gradient const&)
Wallpaper::SetStyle(WallpaperStyle)
Wallpaper::Wallpaper(BitmapEx const&)
Wallpaper::Wallpaper(Wallpaper&&)
Wallpaper::operator=(Wallpaper const&)
Wallpaper::operator==(Wallpaper const&) const
WebPBlendAlpha
WebPCleanupTransparentArea
WebPConfigInitInternal
WebPConfigLosslessPreset
WebPCopyPixels
WebPCopyPlane
WebPDecode
WebPDecodeARGB
WebPDecodeARGBInto
WebPDecodeBGR
WebPDecodeBGRA
WebPDecodeBGRAInto
WebPDecodeBGRInto
WebPDecodeRGB
WebPDecodeRGBA
WebPDecodeRGBAInto
WebPDecodeRGBInto
WebPDecodeYUV
WebPDecodeYUVInto
WebPEncode
WebPEncodeBGR
WebPEncodeBGRA
WebPEncodeLosslessBGR
WebPEncodeLosslessBGRA
WebPEncodeLosslessRGB
WebPEncodeLosslessRGBA
WebPEncodeRGB
WebPEncodeRGBA
WebPFree
WebPFreeDecBuffer
WebPGetColorPalette
WebPGetDecoderVersion
WebPGetEncoderVersion
WebPGetFeaturesInternal
WebPGetInfo
WebPGetWorkerInterface
WebPIAppend
WebPIDecGetRGB
WebPIDecGetYUVA
WebPIDecode
WebPIDecodedArea
WebPIDelete
WebPINewDecoder
WebPINewRGB
WebPINewYUV
WebPINewYUVA
WebPIUpdate
WebPInitDecBufferInternal
WebPInitDecoderConfigInternal
WebPMalloc
WebPMemoryWrite
WebPMemoryWriterClear
WebPMemoryWriterInit
WebPPictureARGBToYUVA
WebPPictureARGBToYUVADithered
WebPPictureAlloc
WebPPictureCopy
WebPPictureCrop
WebPPictureFree
WebPPictureHasTransparency
WebPPictureImportBGR
WebPPictureImportBGRA
WebPPictureImportBGRX
WebPPictureImportRGB
WebPPictureImportRGBA
WebPPictureImportRGBX
WebPPictureInitInternal
WebPPictureIsView
WebPPictureRescale
WebPPictureSharpARGBToYUVA
WebPPictureSmartARGBToYUVA
WebPPictureView
WebPPictureYUVAToARGB
WebPSafeCalloc
WebPSafeFree
WebPSafeMalloc
WebPSetWorkerInterface
WebPValidateConfig
WeldEditView::HasSelection() const
WeldEditView::SetModifyHdl(Link<LinkParamNone*, void> const&)
WeldEditView::SetText(rtl::OUString const&)
WhichRangesContainer::getOffsetFromWhich(unsigned short) const
WhichRangesContainer::getWhichFromOffset(unsigned short) const
WhichRangesContainer::operator==(WhichRangesContainer const&) const
WildCard::ImpMatch(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
WindowListenerMultiplexer::WindowListenerMultiplexer(cppu::OWeakObject&)
WindowListenerMultiplexer::acquire()
WindowListenerMultiplexer::disposing(com::sun::star::lang::EventObject const&)
WindowListenerMultiplexer::queryInterface(com::sun::star::uno::Type const&)
WindowListenerMultiplexer::release()
WindowListenerMultiplexer::windowHidden(com::sun::star::lang::EventObject const&)
WindowListenerMultiplexer::windowMoved(com::sun::star::awt::WindowEvent const&)
WindowListenerMultiplexer::windowResized(com::sun::star::awt::WindowEvent const&)
WindowListenerMultiplexer::windowShown(com::sun::star::lang::EventObject const&)
WindowUIObject::get_name() const
WindowUIObject::get_visible_child(rtl::OUString const&)
WmfExternal::setSequence(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
WorkWindow::SetPluginParent(SystemParentData*)
WorkWindow::ShowFullScreenMode(bool)
WorkWindow::WorkWindow(SystemParentData*)
WorkWindow::WorkWindow(WindowType)
WorkWindow::WorkWindow(vcl::Window*, com::sun::star::uno::Any const&, long)
WriteClipboardFormat(SvStream&, SotClipboardFormatId)
WriteDIB(BitmapEx const&, SvStream&, bool)
WriteJobSetup(SvStream&, JobSetup const&)
WriteSvGlobalName(SvStream&, SvGlobalName const&)
WriteSvtGraphicFill(SvStream&, SvtGraphicFill const&)
WriteSvtGraphicStroke(SvStream&, SvtGraphicStroke const&)
WriteTransferableObjectDescriptor(SvStream&, TransferableObjectDescriptor const&)
WriteWindowMetafileBits(SvStream&, GDIMetaFile const&)
Writer::AddFontItem(SfxItemPool&, SvxFontItem const&)
Writer::AddFontItems_(SfxItemPool&, unsigned short)
Writer::CopyLocalFileToINet(rtl::OUString&)
Writer::CopyNextPam(SwPaM**)
Writer::FindPos_Bkmk(SwPosition const&) const
Writer::PutEditEngFontsInAttrPool()
Writer::PutNumFormatFontsInAttrPool()
Writer::ResetWriter()
Writer::Write(SwPaM&, SvStream&, rtl::OUString const*)
Writer::getIDocumentSettingAccess() const
Writer::getIDocumentStylePoolAccess()
Writer::getIDocumentStylePoolAccess() const
X11SalObject::CreateObject(SalFrame*, SystemWindowData*, bool)
X11SalObject::Dispatch(_XEvent*)
X11SkiaSalGraphicsImpl::Flush()
X11SkiaSalGraphicsImpl::Init()
X11SkiaSalGraphicsImpl::X11SkiaSalGraphicsImpl(X11SalGraphics&)
X11SkiaSalGraphicsImpl::avoidRecreateByResize() const
X11SkiaSalGraphicsImpl::createWindowContext(_XDisplay*, unsigned long, XVisualInfo const*, int, int, SkiaHelper::RenderMethod, bool)
X11SkiaSalGraphicsImpl::createWindowSurfaceInternal(bool)
X11SkiaSalGraphicsImpl::freeResources()
X11SkiaSalGraphicsImpl::prepareSkia()
XBitmapEntry::XBitmapEntry(GraphicObject const&, rtl::OUString const&)
XBitmapEntry::XBitmapEntry(XBitmapEntry const&)
XBitmapList::Create()
XBitmapList::CreateBitmap(long, Size const&) const
XBitmapList::CreateBitmapForUI(long)
XBitmapList::GetBitmapForPreview(long, Size const&)
XColorEntry::XColorEntry(Color const&, rtl::OUString const&)
XColorItem::Clone(SfxItemPool*) const
XColorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XColorItem::XColorItem(TypedWhichId<XColorItem>, int, Color const&)
XColorItem::dumpAsXml(_xmlTextWriter*) const
XColorItem::operator==(SfxPoolItem const&) const
XColorList::Create()
XColorList::CreateBitmapForUI(long)
XColorList::Replace(long, std::unique_ptr<XColorEntry, std::default_delete<XColorEntry> >)
XColorList::createInstance()
XDash::CreateDotDashArray(std::vector<double, std::allocator<double> >&, double) const
XDash::operator==(XDash const&) const
XDashEntry::XDashEntry(XDashEntry const&)
XDashList::Create()
XDashList::CreateBitmapForUI(long)
XDashList::CreateBitmapForXDash(XDash const*, double)
XDashList::GetBitmapForUISolidLine() const
XDashList::GetStringForUiNoLine() const
XDashList::GetStringForUiSolidLine() const
XDashList::ImpGetDefaultLineThickness()
XDashList::XDashList(rtl::OUString const&, rtl::OUString const&)
XDashList::createInstance()
XDashList::~XDashList()
XFillAttrSetItem::Clone(SfxItemPool*) const
XFillAttrSetItem::XFillAttrSetItem(SfxItemPool*)
XFillAttrSetItem::XFillAttrSetItem(SfxItemSet&&)
XFillAttrSetItem::XFillAttrSetItem(XFillAttrSetItem const&)
XFillAttrSetItem::XFillAttrSetItem(XFillAttrSetItem const&, SfxItemPool*)
XFillBackgroundItem::dumpAsXml(_xmlTextWriter*) const
XFillBitmapItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillBitmapItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillBitmapItem::dumpAsXml(_xmlTextWriter*) const
XFillBitmapItem::operator==(SfxPoolItem const&) const
XFillBmpPosItem::dumpAsXml(_xmlTextWriter*) const
XFillBmpStretchItem::Clone(SfxItemPool*) const
XFillBmpStretchItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillBmpStretchItem::dumpAsXml(_xmlTextWriter*) const
XFillBmpTileItem::Clone(SfxItemPool*) const
XFillBmpTileItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillBmpTileItem::dumpAsXml(_xmlTextWriter*) const
XFillColorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillColorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillColorItem::dumpAsJSON[abi:cxx11]() const
XFillColorItem::dumpAsXml(_xmlTextWriter*) const
XFillFloatTransparenceItem::Clone(SfxItemPool*) const
XFillFloatTransparenceItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillFloatTransparenceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillFloatTransparenceItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillFloatTransparenceItem::XFillFloatTransparenceItem()
XFillFloatTransparenceItem::XFillFloatTransparenceItem(XFillFloatTransparenceItem const&)
XFillFloatTransparenceItem::XFillFloatTransparenceItem(rtl::OUString const&, basegfx::BGradient const&, bool)
XFillFloatTransparenceItem::dumpAsJSON[abi:cxx11]() const
XFillFloatTransparenceItem::operator==(SfxPoolItem const&) const
XFillGradientItem::Clone(SfxItemPool*) const
XFillGradientItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillGradientItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillGradientItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillGradientItem::XFillGradientItem(int, basegfx::BGradient const&)
XFillGradientItem::dumpAsJSON[abi:cxx11]() const
XFillGradientItem::operator==(SfxPoolItem const&) const
XFillHatchItem::Clone(SfxItemPool*) const
XFillHatchItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XFillHatchItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillHatchItem::HasMetrics() const
XFillHatchItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillHatchItem::ScaleMetrics(long, long)
XFillHatchItem::operator==(SfxPoolItem const&) const
XFillStyleItem::Clone(SfxItemPool*) const
XFillStyleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillStyleItem::GetValueCount() const
XFillStyleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFillStyleItem::dumpAsJSON[abi:cxx11]() const
XFillStyleItem::dumpAsXml(_xmlTextWriter*) const
XFillTransparenceItem::Clone(SfxItemPool*) const
XFillTransparenceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillTransparenceItem::dumpAsXml(_xmlTextWriter*) const
XFillUseSlideBackgroundItem::Clone(SfxItemPool*) const
XFillUseSlideBackgroundItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XFillUseSlideBackgroundItem::XFillUseSlideBackgroundItem(bool)
XFillUseSlideBackgroundItem::dumpAsXml(_xmlTextWriter*) const
XFormTextAdjustItem::Clone(SfxItemPool*) const
XFormTextAdjustItem::GetValueCount() const
XFormTextAdjustItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XFormTextAdjustItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFormTextAdjustItem::XFormTextAdjustItem(XFormTextAdjust)
XFormTextDistanceItem::Clone(SfxItemPool*) const
XFormTextDistanceItem::XFormTextDistanceItem(long)
XFormTextHideFormItem::Clone(SfxItemPool*) const
XFormTextHideFormItem::XFormTextHideFormItem(bool)
XFormTextMirrorItem::Clone(SfxItemPool*) const
XFormTextMirrorItem::XFormTextMirrorItem(bool)
XFormTextOutlineItem::Clone(SfxItemPool*) const
XFormTextOutlineItem::XFormTextOutlineItem(bool)
XFormTextShadowColorItem::Clone(SfxItemPool*) const
XFormTextShadowColorItem::XFormTextShadowColorItem(rtl::OUString const&, Color const&)
XFormTextShadowItem::Clone(SfxItemPool*) const
XFormTextShadowItem::GetValueCount() const
XFormTextShadowItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XFormTextShadowItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFormTextShadowItem::XFormTextShadowItem(XFormTextShadow)
XFormTextShadowXValItem::Clone(SfxItemPool*) const
XFormTextShadowXValItem::XFormTextShadowXValItem(long)
XFormTextShadowYValItem::Clone(SfxItemPool*) const
XFormTextShadowYValItem::XFormTextShadowYValItem(long)
XFormTextStartItem::Clone(SfxItemPool*) const
XFormTextStartItem::XFormTextStartItem(long)
XFormTextStyleItem::Clone(SfxItemPool*) const
XFormTextStyleItem::GetValueCount() const
XFormTextStyleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XFormTextStyleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XFormTextStyleItem::XFormTextStyleItem(XFormTextStyle)
XGradientEntry::XGradientEntry(XGradientEntry const&)
XGradientList::Create()
XGradientList::CreateBitmap(long, Size const&) const
XGradientList::CreateBitmapForUI(long)
XGradientList::GetBitmapForPreview(long, Size const&)
XGradientList::Replace(std::unique_ptr<XGradientEntry, std::default_delete<XGradientEntry> >, long)
XGradientList::XGradientList(rtl::OUString const&, rtl::OUString const&)
XGradientList::createInstance()
XGradientList::~XGradientList()
XGradientStepCountItem::Clone(SfxItemPool*) const
XGradientStepCountItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XHatch::operator==(XHatch const&) const
XHatchEntry::XHatchEntry(XHatchEntry const&)
XHatchList::Create()
XHatchList::CreateBitmap(long, Size const&) const
XHatchList::CreateBitmapForUI(long)
XHatchList::GetBitmapForPreview(long, Size const&)
XHatchList::Replace(std::unique_ptr<XHatchEntry, std::default_delete<XHatchEntry> >, long)
XHatchList::XHatchList(rtl::OUString const&, rtl::OUString const&)
XHatchList::createInstance()
XHatchList::~XHatchList()
XLineAttrSetItem::Clone(SfxItemPool*) const
XLineAttrSetItem::XLineAttrSetItem(SfxItemPool*)
XLineAttrSetItem::XLineAttrSetItem(SfxItemSet&&)
XLineAttrSetItem::XLineAttrSetItem(XLineAttrSetItem const&)
XLineAttrSetItem::XLineAttrSetItem(XLineAttrSetItem const&, SfxItemPool*)
XLineCapItem::Clone(SfxItemPool*) const
XLineCapItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineCapItem::GetValue() const
XLineCapItem::GetValueCount() const
XLineCapItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineCapItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineCapItem::XLineCapItem(com::sun::star::drawing::LineCap)
XLineColorItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineColorItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineColorItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineDashItem::Clone(SfxItemPool*) const
XLineDashItem::CompareValueFunc(NameOrIndex const*, NameOrIndex const*)
XLineDashItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineDashItem::HasMetrics() const
XLineDashItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineDashItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineDashItem::ScaleMetrics(long, long)
XLineDashItem::XLineDashItem(XLineDashItem const&)
XLineDashItem::operator==(SfxPoolItem const&) const
XLineEndCenterItem::Clone(SfxItemPool*) const
XLineEndCenterItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineEndCenterItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineEndCenterItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineEndEntry::XLineEndEntry(XLineEndEntry const&)
XLineEndItem::Clone(SfxItemPool*) const
XLineEndItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineEndItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineEndItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineEndItem::XLineEndItem(XLineEndItem const&)
XLineEndItem::operator==(SfxPoolItem const&) const
XLineEndList::Create()
XLineEndList::CreateBitmapForUI(long)
XLineEndList::XLineEndList(rtl::OUString const&, rtl::OUString const&)
XLineEndList::createInstance()
XLineEndList::~XLineEndList()
XLineEndWidthItem::Clone(SfxItemPool*) const
XLineEndWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineEndWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineEndWidthItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineJointItem::Clone(SfxItemPool*) const
XLineJointItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineJointItem::GetValueCount() const
XLineJointItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineJointItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStartCenterItem::Clone(SfxItemPool*) const
XLineStartCenterItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStartCenterItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStartCenterItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStartItem::Clone(SfxItemPool*) const
XLineStartItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStartItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStartItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStartItem::XLineStartItem(XLineStartItem const&)
XLineStartItem::XLineStartItem(int)
XLineStartItem::operator==(SfxPoolItem const&) const
XLineStartWidthItem::Clone(SfxItemPool*) const
XLineStartWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStartWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStartWidthItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineStyleItem::Clone(SfxItemPool*) const
XLineStyleItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineStyleItem::GetValueCount() const
XLineStyleItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineStyleItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XLineTransparenceItem::Clone(SfxItemPool*) const
XLineTransparenceItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineWidthItem::Clone(SfxItemPool*) const
XLineWidthItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
XLineWidthItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
XLineWidthItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
XMLBase64ImportContext::characters(rtl::OUString const&)
XMLBase64ImportContext::endFastElement(int)
XMLBase64ImportContext::~XMLBase64ImportContext()
XMLCellStyleExport::exportStyleAttributes(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
XMLCellStyleExport::exportStyleContent(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
XMLComplexColorContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLComplexColorExport::doExport(model::ComplexColor const&, unsigned short, rtl::OUString const&)
XMLDocumentSettingsContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLDocumentSettingsContext::endFastElement(int)
XMLDocumentSettingsContext::~XMLDocumentSettingsContext()
XMLDocumentWrapper_XmlSecImpl::XMLDocumentWrapper_XmlSecImpl()
XMLDrawingPageStyleContext::FillPropertySet(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLEventExport::AddHandler(rtl::OUString const&, std::unique_ptr<XMLEventExportHandler, std::default_delete<XMLEventExportHandler> >)
XMLEventExport::AddTranslationTable(XMLEventNameTranslation const*)
XMLEventExport::Export(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, bool)
XMLEventExport::Export(com::sun::star::uno::Reference<com::sun::star::container::XNameReplace> const&, bool)
XMLEventExport::Export(com::sun::star::uno::Reference<com::sun::star::document::XEventsSupplier> const&, bool)
XMLEventExport::XMLEventExport(SvXMLExport&)
XMLEventExport::~XMLEventExport()
XMLEventsImportContext::AddEventValues(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
XMLEventsImportContext::SetEvents(com::sun::star::uno::Reference<com::sun::star::container::XNameReplace> const&)
XMLEventsImportContext::SetEvents(com::sun::star::uno::Reference<com::sun::star::document::XEventsSupplier> const&)
XMLEventsImportContext::XMLEventsImportContext(SvXMLImport&, com::sun::star::uno::Reference<com::sun::star::container::XNameReplace> const&)
XMLEventsImportContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLEventsImportContext::~XMLEventsImportContext()
XMLFontAutoStylePool::embedFontFile(rtl::OUString const&, rtl::OUString const&)
XMLFontAutoStylePool::exportXML()
XMLFontAutoStylePool::getUsedFontList()
XMLFontStylesContext::CreateStyleChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLFontStylesContext::FillProperties(rtl::OUString const&, std::vector<XMLPropertyState, std::allocator<XMLPropertyState> >&, int, int, int, int, int) const
XMLFontStylesContext::~XMLFontStylesContext()
XMLGradientStopContext::~XMLGradientStopContext()
XMLGraphicsDefaultStyle::SetDefaults()
XMLGraphicsDefaultStyle::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLGraphicsDefaultStyle::~XMLGraphicsDefaultStyle()
XMLNumberFormatAttributesExportHelper::GetCellType(int, bool&)
XMLNumberFormatAttributesExportHelper::GetCellType(int, bool&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
XMLNumberFormatAttributesExportHelper::GetCurrencySymbol(int, rtl::OUString&)
XMLNumberFormatAttributesExportHelper::GetCurrencySymbol(int, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
XMLNumberFormatAttributesExportHelper::SetNumberFormatAttributes(SvXMLExport&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, bool)
XMLNumberFormatAttributesExportHelper::WriteAttributes(SvXMLExport&, short, double const&, rtl::OUString const&, bool)
XMLNumberFormatAttributesExportHelper::WriteAttributes(short, double const&, rtl::OUString const&, bool, unsigned short)
XMLPageExport::XMLPageExport(SvXMLExport&)
XMLPageExport::collectPageMasterAutoStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, XMLPageExportNameEntry&)
XMLPageExport::exportMasterPageContent(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLPageExport::exportStyle(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&, bool)
XMLPageExport::~XMLPageExport()
XMLPropStyleContext::deactivateOldFillStyleDefinitions(std::unordered_set<rtl::OUString, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<rtl::OUString> > const&)
XMLPropStyleContext::doNewDrawingLayerFillStyleDefinitionsExist(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
XMLPropStyleContext::getFooterSet()
XMLPropStyleContext::getHeaderSet()
XMLPropStyleContext::getStandardSet()
XMLPropStyleContext::translateNameBasedDrawingLayerFillStyleDefinitionsToStyleDisplayNames()
XMLPropertyComplexColorContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLPropertyComplexColorContext::endFastElement(int)
XMLPropertyHandler::equals(com::sun::star::uno::Any const&, com::sun::star::uno::Any const&) const
XMLPropertyHandlerFactory::GetHdlCache(int) const
XMLPropertySetMapper::AddMapperEntry(rtl::Reference<XMLPropertySetMapper> const&)
XMLPropertySetMapper::GetEarliestODFVersionForExport(int) const
XMLPropertySetMapper::GetEntryFlags(int) const
XMLPropertySetMapper::GetEntryIndex(int, unsigned int, int) const
XMLPropertySetMapper::GetEntryType(int) const
XMLPropertySetMapper::GetPropertyHandler(int) const
XMLPropertySetMapper::RemoveEntry(int)
XMLPropertySetMapper::exportXML(rtl::OUString&, XMLPropertyState const&, SvXMLUnitConverter const&) const
XMLPropertySetMapper::importXML(rtl::OUString const&, XMLPropertyState&, SvXMLUnitConverter const&) const
XMLPropertySetMapper::~XMLPropertySetMapper()
XMLScriptContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLScriptContext::~XMLScriptContext()
XMLShapeExport::checkForCustomShapeReplacement(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
XMLShapeExport::collectShapesAutoStyles(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&)
XMLShapeExport::export3DLamps(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLShapeExport::export3DSceneAttributes(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLShapeExport::exportShapes(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, XMLShapeExportFlags, com::sun::star::awt::Point*)
XMLShapeExport::onExport(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
XMLShapeImportHelper::Create3DSceneChildContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&)
XMLShapeImportHelper::CreateFrameChildContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLShapeImportHelper::CreateFrameChildContext(SvXMLImportContext*, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLShapeImportHelper::CreateShapePropMapper(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, SvXMLImport&)
XMLShapeImportHelper::IsHandleProgressBarEnabled() const
XMLShapeImportHelper::IsPresentationShapesSupported() const
XMLShapeImportHelper::SetAutoStylesContext(SvXMLStylesContext*)
XMLShapeImportHelper::SetStylesContext(SvXMLStylesContext*)
XMLShapeImportHelper::addGluePointMapping(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, int, int)
XMLShapeImportHelper::addShapeConnection(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool, rtl::OUString const&, int)
XMLShapeImportHelper::addShapeEvents(SdXMLEventContextData&)
XMLShapeImportHelper::enableHandleProgressBar()
XMLShapeImportHelper::getGluePointId(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, int)
XMLShapeImportHelper::moveGluePointMapping(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, int)
XMLShapeImportHelper::restoreConnections()
XMLShapeImportHelper::shapeRemoved(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
XMLShapeStyleContext::Finish(bool)
XMLSignature_GpgImpl::XMLSignature_GpgImpl()
XMLSignature_GpgImpl::generate(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSignatureTemplate> const&, com::sun::star::uno::Reference<com::sun::star::xml::crypto::XSecurityEnvironment> const&)
XMLSignature_GpgImpl::getImplementationName()
XMLSignature_GpgImpl::getSupportedServiceNames()
XMLSignature_GpgImpl::impl_createInstance(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&)
XMLSignature_GpgImpl::impl_getImplementationName()
XMLSignature_GpgImpl::impl_getSupportedServiceNames()
XMLSignature_GpgImpl::supportsService(rtl::OUString const&)
XMLSignature_GpgImpl::validate(com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSignatureTemplate> const&, com::sun::star::uno::Reference<com::sun::star::xml::crypto::XXMLSecurityContext> const&)
XMLSignature_GpgImpl::~XMLSignature_GpgImpl()
XMLStyleExport::exportStyle(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&, rtl::OUString const&, rtl::Reference<SvXMLExportPropertyMapper> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const*)
XMLStyleExport::exportStyleAttributes(com::sun::star::uno::Reference<com::sun::star::style::XStyle> const&)
XMLStyleExport::~XMLStyleExport()
XMLTableExport::ExportCell(com::sun::star::uno::Reference<com::sun::star::table::XCell> const&, std::shared_ptr<XMLTableInfo> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
XMLTableExport::ExportTableColumns(com::sun::star::uno::Reference<com::sun::star::container::XIndexAccess> const&, std::shared_ptr<XMLTableInfo> const&)
XMLTableExport::XMLTableExport(SvXMLExport&, rtl::Reference<SvXMLExportPropertyMapper> const&, rtl::Reference<XMLPropertyHandlerFactory> const&)
XMLTableExport::collectTableAutoStyles(com::sun::star::uno::Reference<com::sun::star::table::XColumnRowRange> const&)
XMLTableExport::exportAutoStyles()
XMLTableExport::exportTable(com::sun::star::uno::Reference<com::sun::star::table::XColumnRowRange> const&)
XMLTableExport::exportTableTemplates()
XMLTableExport::~XMLTableExport()
XMLTableImport::CreateTableContext(com::sun::star::uno::Reference<com::sun::star::table::XColumnRowRange> const&)
XMLTableImport::XMLTableImport(SvXMLImport&, rtl::Reference<XMLPropertySetMapper> const&, rtl::Reference<XMLPropertyHandlerFactory> const&)
XMLTableImport::addTableTemplate(rtl::OUString const&, std::map<rtl::OUString, rtl::OUString, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
XMLTableImport::~XMLTableImport()
XMLTextImportHelper::AddCrossRefHeadingMapping(rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::AddOutlineStyleCandidate(signed char, rtl::OUString const&)
XMLTextImportHelper::ClearLastImportedTextFrameName()
XMLTextImportHelper::ConnectFrameChains(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextImportHelper::ConvertStarFonts(rtl::OUString const&, rtl::OUString const&, unsigned char&, bool, SvXMLImport&) const
XMLTextImportHelper::CreateParaDefaultExtPropMapper(SvXMLImport&)
XMLTextImportHelper::CreateShapeExtPropMapper(SvXMLImport&)
XMLTextImportHelper::CreateTableChildContext(SvXMLImport&, int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLTextImportHelper::FindAndRemoveBookmarkStartRange(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange>&, rtl::OUString&, std::shared_ptr<xmloff::ParsedRDFaAttributes>&)
XMLTextImportHelper::FindAutoCharStyle(rtl::OUString const&) const
XMLTextImportHelper::FindAutoListStyle(rtl::OUString const&) const
XMLTextImportHelper::FindDrawingPage(rtl::OUString const&) const
XMLTextImportHelper::FindOutlineStyleName(rtl::OUString&, signed char)
XMLTextImportHelper::FindPageMaster(rtl::OUString const&) const
XMLTextImportHelper::FindSectionStyle(rtl::OUString const&) const
XMLTextImportHelper::GetChapterNumbering() const
XMLTextImportHelper::GetNumberingStyles() const
XMLTextImportHelper::GetPageStyles() const
XMLTextImportHelper::GetParaImportPropertySetMapper() const
XMLTextImportHelper::GetParaStyles() const
XMLTextImportHelper::GetRubyImportPropertySetMapper() const
XMLTextImportHelper::GetSectionImportPropertySetMapper() const
XMLTextImportHelper::GetTextListHelper()
XMLTextImportHelper::HasFrameByName(rtl::OUString const&) const
XMLTextImportHelper::InsertBookmarkStartRange(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, rtl::OUString const&, std::shared_ptr<xmloff::ParsedRDFaAttributes>&)
XMLTextImportHelper::InsertControlCharacter(short)
XMLTextImportHelper::InsertFootnoteID(rtl::OUString const&, short)
XMLTextImportHelper::InsertSequenceID(rtl::OUString const&, rtl::OUString const&, short)
XMLTextImportHelper::InsertString(rtl::OUString const&)
XMLTextImportHelper::InsertString(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool&)
XMLTextImportHelper::IsBlockMode() const
XMLTextImportHelper::IsDuplicateFrame(rtl::OUString const&, int, int, int, int) const
XMLTextImportHelper::IsInFrame() const
XMLTextImportHelper::IsInHeaderFooter() const
XMLTextImportHelper::IsInsideDeleteContext() const
XMLTextImportHelper::IsOrganizerMode() const
XMLTextImportHelper::IsProgress() const
XMLTextImportHelper::IsStylesOnlyMode() const
XMLTextImportHelper::MakeBackpatcherImpl()
XMLTextImportHelper::MapCrossRefHeadingFieldsHorribly()
XMLTextImportHelper::PopListContext()
XMLTextImportHelper::ProcessFootnoteReference(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextImportHelper::ProcessSequenceReference(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextImportHelper::PushListContext()
XMLTextImportHelper::RedlineAdd(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::util::DateTime const&, rtl::OUString const&, bool)
XMLTextImportHelper::RedlineAdjustStartNodeCursor()
XMLTextImportHelper::RedlineCreateText(com::sun::star::uno::Reference<com::sun::star::text::XTextCursor>&, rtl::OUString const&)
XMLTextImportHelper::RedlineSetCursor(rtl::OUString const&, bool, bool)
XMLTextImportHelper::SetChangesProtectionKey(com::sun::star::uno::Sequence<signed char> const&)
XMLTextImportHelper::SetHyperlink(SvXMLImport const&, com::sun::star::uno::Reference<com::sun::star::text::XTextCursor> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, XMLEventsImportContext*)
XMLTextImportHelper::SetInsideDeleteContext(bool)
XMLTextImportHelper::SetOpenRedlineId(rtl::OUString const&)
XMLTextImportHelper::SetRecordChanges(bool)
XMLTextImportHelper::SetRuby(SvXMLImport const&, com::sun::star::uno::Reference<com::sun::star::text::XTextCursor> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::SetShowChanges(bool)
XMLTextImportHelper::StoreLastImportedFrameName(rtl::OUString const&)
XMLTextImportHelper::addFieldParam(rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::createAndInsertApplet(rtl::OUString const&, rtl::OUString const&, bool, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertFloatingFrame(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertOLEObject(SvXMLImport&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertOOoLink(SvXMLImport&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::createAndInsertPlugin(rtl::OUString const&, rtl::OUString const&, int, int)
XMLTextImportHelper::dispose()
XMLTextImportHelper::endAppletOrPlugin(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, std::map<rtl::OUString const, rtl::OUString, std::less<rtl::OUString const>, std::allocator<std::pair<rtl::OUString const, rtl::OUString> > >&)
XMLTextImportHelper::getBookmarkCondition(rtl::OUString const&) const
XMLTextImportHelper::getBookmarkHidden(rtl::OUString const&) const
XMLTextImportHelper::getCurrentFieldStart() const
XMLTextImportHelper::getCurrentFieldType() const
XMLTextImportHelper::hasCurrentFieldCtx() const
XMLTextImportHelper::hasCurrentFieldSeparator() const
XMLTextImportHelper::popFieldCtx()
XMLTextImportHelper::pushFieldCtx(rtl::OUString const&, rtl::OUString const&)
XMLTextImportHelper::setBookmarkAttributes(rtl::OUString const&, bool, rtl::OUString const&)
XMLTextImportHelper::setCurrentFieldParamsTo(com::sun::star::uno::Reference<com::sun::star::text::XFormField> const&)
XMLTextListAutoStylePool::Add(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&)
XMLTextListAutoStylePool::Find(com::sun::star::uno::Reference<com::sun::star::container::XIndexReplace> const&) const
XMLTextListAutoStylePool::RegisterName(rtl::OUString const&)
XMLTextListAutoStylePool::XMLTextListAutoStylePool(SvXMLExport&)
XMLTextListAutoStylePool::exportXML() const
XMLTextListAutoStylePool::~XMLTextListAutoStylePool()
XMLTextMasterPageContext::CreateHeaderFooterContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&, bool, bool, bool)
XMLTextMasterPageExport::exportHeaderFooterContent(com::sun::star::uno::Reference<com::sun::star::text::XText> const&, bool, bool)
XMLTextMasterPageExport::exportMasterPageContent(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLTextParagraphExport::Add(XmlStyleFamily, MultiPropertySetHelper&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextParagraphExport::CreateParaDefaultExtPropMapper(SvXMLExport&)
XMLTextParagraphExport::ExportContentControl(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, bool, bool&)
XMLTextParagraphExport::ExportListId() const
XMLTextParagraphExport::FindTextStyle(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool&, bool&, XMLPropertyState const**) const
XMLTextParagraphExport::PopTextListsHelper()
XMLTextParagraphExport::PushNewTextListsHelper()
XMLTextParagraphExport::RecordNodeIndex(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
XMLTextParagraphExport::ShouldSkipListId(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&)
XMLTextParagraphExport::_collectTextEmbeddedAutoStyles(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextParagraphExport::_exportTextEmbedded(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&)
XMLTextParagraphExport::_exportTextFrame(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&, bool)
XMLTextParagraphExport::_exportTextGraphic(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo> const&)
XMLTextParagraphExport::exportAnyTextFrame(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, XMLTextParagraphExport::FrameType, bool, bool, bool, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*)
XMLTextParagraphExport::exportFrameFrames(bool, bool, com::sun::star::uno::Reference<com::sun::star::text::XTextFrame> const&)
XMLTextParagraphExport::exportListAndSectionChange(com::sun::star::uno::Reference<com::sun::star::text::XTextSection>&, MultiPropertySetHelper&, short, com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&, bool)
XMLTextParagraphExport::exportListAndSectionChange(com::sun::star::uno::Reference<com::sun::star::text::XTextSection>&, com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&, bool)
XMLTextParagraphExport::exportListAndSectionChange(com::sun::star::uno::Reference<com::sun::star::text::XTextSection>&, com::sun::star::uno::Reference<com::sun::star::text::XTextSection> const&, XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&, bool)
XMLTextParagraphExport::exportListChange(XMLTextNumRuleInfo const&, XMLTextNumRuleInfo const&)
XMLTextParagraphExport::exportMeta(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool, bool, bool&)
XMLTextParagraphExport::exportNumStyles(bool)
XMLTextParagraphExport::exportParagraph(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, bool, bool, bool, MultiPropertySetHelper&, TextPNS)
XMLTextParagraphExport::exportRuby(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLTextParagraphExport::exportSoftPageBreak()
XMLTextParagraphExport::exportTable(com::sun::star::uno::Reference<com::sun::star::text::XTextContent> const&, bool, bool)
XMLTextParagraphExport::exportTableAutoStyles()
XMLTextParagraphExport::exportTextContentEnumeration(com::sun::star::uno::Reference<com::sun::star::container::XEnumeration> const&, bool, com::sun::star::uno::Reference<com::sun::star::text::XTextSection> const&, bool, bool, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, TextPNS)
XMLTextParagraphExport::exportTextField(com::sun::star::uno::Reference<com::sun::star::text::XTextField> const&, bool, bool, bool, bool*)
XMLTextParagraphExport::exportTextField(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, bool, bool, bool*)
XMLTextParagraphExport::exportTextFootnote(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, bool, bool)
XMLTextParagraphExport::exportTextFootnoteConfiguration()
XMLTextParagraphExport::exportTextFootnoteConfigurationHelper(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, bool)
XMLTextParagraphExport::exportTextFootnoteHelper(com::sun::star::uno::Reference<com::sun::star::text::XFootnote> const&, com::sun::star::uno::Reference<com::sun::star::text::XText> const&, rtl::OUString const&, bool, bool, bool)
XMLTextParagraphExport::exportTextLineBreak(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
XMLTextParagraphExport::exportTextMark(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, xmloff::token::XMLTokenEnum const*, bool)
XMLTextParagraphExport::exportTextRange(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, bool, bool&, XMLTextParagraphExport::FieldmarkType&)
XMLTextParagraphExport::exportTextRangeEnumeration(com::sun::star::uno::Reference<com::sun::star::container::XEnumeration> const&, bool, bool, bool&)
XMLTextParagraphExport::exportTextRangeSpan(com::sun::star::uno::Reference<com::sun::star::text::XTextRange> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySetInfo>&, bool, bool, rtl::OUString const&, bool&, XMLTextParagraphExport::FieldmarkType&)
XMLTextParagraphExport::exportTrackedChanges(com::sun::star::uno::Reference<com::sun::star::text::XText> const&, bool)
XMLTextParagraphExport::recordTrackedChangesForXText(com::sun::star::uno::Reference<com::sun::star::text::XText> const&)
XMLTextParagraphExport::recordTrackedChangesNoXText()
XMLTextShapeStyleContext::CreateAndInsert(bool)
XMLTextShapeStyleContext::Finish(bool)
XMLTextShapeStyleContext::SetAttribute(int, rtl::OUString const&)
XMLTextShapeStyleContext::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
XMLTextShapeStyleContext::~XMLTextShapeStyleContext()
XOBitmap::GetGraphicObject() const
XOutBitmap::ExportGraphic(Graphic const&, INetURLObject const&, GraphicFilter&, unsigned short, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const*)
XOutBitmap::MirrorAnimation(Animation const&, bool, bool)
XOutBitmap::MirrorGraphic(Graphic const&, BmpMirrorFlags)
XPatternList::Create()
XPatternList::CreateBitmap(long, Size const&) const
XPatternList::CreateBitmapForUI(long)
XPatternList::GetBitmapForPreview(long, Size const&)
XPatternList::createInstance()
XPolygon::GetSize() const
XPolygon::XPolygon(tools::Polygon const&)
XPolygon::XPolygon(tools::Rectangle const&, long, long)
XPolygon::operator[](unsigned short)
XPolygon::operator[](unsigned short) const
XPropertyEntry::XPropertyEntry(rtl::OUString)
XPropertyList::Get(long) const
XPropertyList::GetIndex(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
XPropertyList::GetUiBitmap(long) const
XPropertyList::Remove(long)
XPropertyList::Replace(std::unique_ptr<XPropertyEntry, std::default_delete<XPropertyEntry> >, long)
XPropertyList::isValidIdx(long) const
XPropertyList::~XPropertyList()
XShapeDumper::dump(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool)
XYZtoRGB24
XmlSecStatusBarControl::Command(CommandEvent const&)
XmlSecStatusBarControl::CreateImpl(unsigned short, unsigned short, StatusBar&)
XmlSecStatusBarControl::Paint(UserDrawEvent const&)
XmlSecStatusBarControl::StateChangedAtStatusBarControl(unsigned short, SfxItemState, SfxPoolItem const*)
XmlSecStatusBarControl::XmlSecStatusBarControl(unsigned short, unsigned short, StatusBar&)
XmlSecStatusBarControl::~XmlSecStatusBarControl()
ZCodec::AttemptDecompression(SvStream&, SvStream&)
ZCodec::ImplWriteBack()
ZCodec::InitCompress()
ZCodec::InitDecompress(SvStream&)
ZCodec::IsZCompressed(SvStream&)
ZCodec::Read(SvStream&, unsigned char*, unsigned int)
ZCodec::Write(SvStream&, unsigned char const*, unsigned int)
_TIFFCastUInt64ToSSize
_TIFFCheckDirNumberAndOffset
_TIFFCheckFieldIsValidForCodec
_TIFFCheckMalloc
_TIFFCheckRealloc
_TIFFClampDoubleToFloat
_TIFFClampDoubleToUInt32
_TIFFCleanupIFDOffsetAndNumberMaps
_TIFFCreateAnonField
_TIFFDefaultStripSize
_TIFFDefaultTileSize
_TIFFErrorEarly
_TIFFFax3fillruns
_TIFFFillStriles
_TIFFFindOrRegisterField
_TIFFGetDirNumberFromOffset
_TIFFGetExifFields
_TIFFGetFields
_TIFFGetGpsFields
_TIFFGetOffsetFromDirNumber
_TIFFMergeFields
_TIFFMultiply32
_TIFFMultiply64
_TIFFMultiplySSize
_TIFFNoPostDecode
_TIFFNoPreCode
_TIFFNoRowDecode
_TIFFNoRowEncode
_TIFFNoSeek
_TIFFNoStripDecode
_TIFFNoStripEncode
_TIFFNoTileDecode
_TIFFNoTileEncode
_TIFFPrintFieldInfo
_TIFFReadEncodedStripAndAllocBuffer
_TIFFReadEncodedTileAndAllocBuffer
_TIFFReadTileAndAllocBuffer
_TIFFRemoveEntryFromDirectoryListByOffset
_TIFFRewriteField
_TIFFSeekOK
_TIFFSetDefaultCompressionState
_TIFFSetupFields
_TIFFSwab16BitData
_TIFFSwab24BitData
_TIFFSwab32BitData
_TIFFSwab64BitData
_TIFFUInt64ToDouble
_TIFFUInt64ToFloat
_TIFFcalloc
_TIFFcallocExt
_TIFFfree
_TIFFfreeExt
_TIFFgetMode
_TIFFmalloc
_TIFFmallocExt
_TIFFmemcmp
_TIFFmemcpy
_TIFFmemset
_TIFFrealloc
_TIFFreallocExt
_TIFFsetByteArray
_TIFFsetByteArrayExt
_TIFFsetDoubleArray
_TIFFsetDoubleArrayExt
_TIFFsetFloatArray
_TIFFsetFloatArrayExt
_TIFFsetLongArray
_TIFFsetLongArrayExt
_TIFFsetShortArray
_TIFFsetShortArrayExt
__cnd_FormatDebug(char const*, int, int, char const*, int)
_lucene_shutdown()
accessibility::AccessibleComponentBase::getAccessibleAtPoint(com::sun::star::awt::Point const&)
accessibility::AccessibleComponentBase::getBackground()
accessibility::AccessibleComponentBase::getBounds()
accessibility::AccessibleComponentBase::getForeground()
accessibility::AccessibleComponentBase::getLocation()
accessibility::AccessibleComponentBase::getLocationOnScreen()
accessibility::AccessibleComponentBase::getSize()
accessibility::AccessibleContextBase::CreateAccessibleName()
accessibility::AccessibleContextBase::FireEvent(com::sun::star::accessibility::AccessibleEventObject const&)
accessibility::AccessibleContextBase::GetState(long)
accessibility::AccessibleContextBase::SetAccessibleDescription(rtl::OUString const&, accessibility::AccessibleContextBase::StringOrigin)
accessibility::AccessibleContextBase::SetAccessibleRole(short)
accessibility::AccessibleContextBase::getAccessibleChild(long)
accessibility::AccessibleContextBase::getAccessibleChildCount()
accessibility::AccessibleContextBase::getImplementationName()
accessibility::AccessibleGraphicShape::CreateAccessibleBaseName()
accessibility::AccessibleGraphicShape::getImplementationName()
accessibility::AccessibleOLEShape::CreateAccessibleBaseName()
accessibility::AccessibleOLEShape::getImplementationName()
accessibility::AccessibleShape::CreateAccessibleBaseName()
accessibility::AccessibleShape::GetFullAccessibleName(accessibility::AccessibleShape*)
accessibility::AccessibleShape::UpdateNameAndDescription()
accessibility::AccessibleShape::UpdateStates()
accessibility::AccessibleShape::disposing(com::sun::star::lang::EventObject const&)
accessibility::AccessibleShape::getImplementationName()
accessibility::AccessibleShapeInfo::AccessibleShapeInfo(accessibility::AccessibleShapeInfo const&)
accessibility::AccessibleShapeTreeInfo::AccessibleShapeTreeInfo(accessibility::AccessibleShapeTreeInfo const&)
accessibility::AccessibleShapeTreeInfo::operator=(accessibility::AccessibleShapeTreeInfo const&)
accessibility::AccessibleTextHelper::HaveFocus()
accessibility::AccessibleTextHelper::UpdateSelection()
accessibility::ShapeTypeHandler::CreateAccessibleBaseName(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
accessibility::ShapeTypeHandler::GetTypeId(rtl::OUString const&) const
accessibility::ShapeTypeHandler::ShapeTypeHandler()
accessibility::ShapeTypeHandler::~ShapeTypeHandler()
accumulate_for_scale
addCandidateVar
addUndoPresolve
add_GUB
add_SOS
add_artificial
add_column
add_columnex
add_constraint_name
add_constraintex
add_lag_con
add_polygon_path(_cairo*, basegfx::B2DPolyPolygon const&, basegfx::B2DHomMatrix const&, bool)
add_row
addmpscolumn
allocCHAR
allocFREE
allocINT
allocLREAL
allocMYBOOL
allocREAL
appendBinaryPQExpBuffer
appendLink
appendPQExpBuffer
appendPQExpBufferChar
appendPQExpBufferStr
appendUndoPresolve
append_SOSgroup
append_SOSrec
append_columns
append_rows
appendmpsitem
auto_scale
avmedia::MediaFloater::MediaFloater(SfxBindings*, SfxChildWindow*, vcl::Window*)
avmedia::MediaFloater::Resize()
avmedia::MediaFloater::ToggleFloatingMode()
avmedia::MediaFloater::dispatchCurrentURL()
avmedia::MediaFloater::dispose()
avmedia::MediaFloater::~MediaFloater()
avmedia::MediaItem::Clone(SfxItemPool*) const
avmedia::MediaItem::GetPresentation(SfxItemPresentation, MapUnit, MapUnit, rtl::OUString&, IntlWrapper const&) const
avmedia::MediaItem::PutValue(com::sun::star::uno::Any const&, unsigned char)
avmedia::MediaItem::QueryValue(com::sun::star::uno::Any&, unsigned char) const
avmedia::MediaItem::getDuration() const
avmedia::MediaItem::getTime() const
avmedia::MediaItem::merge(avmedia::MediaItem const&)
avmedia::MediaItem::operator==(SfxPoolItem const&) const
avmedia::MediaItem::setDuration(double)
avmedia::MediaItem::setState(avmedia::MediaState)
avmedia::MediaItem::setTime(double)
avmedia::MediaPlayer::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
avmedia::MediaPlayer::GetInfo() const
avmedia::MediaPlayer::MediaPlayer(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
avmedia::MediaPlayer::~MediaPlayer()
avmedia::MediaToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
avmedia::MediaToolBoxControl::CreateItemWindow(vcl::Window*)
avmedia::MediaToolBoxControl::MediaToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
avmedia::MediaToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
avmedia::MediaToolBoxControl::~MediaToolBoxControl()
avmedia::MediaWindow::AcceptDrop(AcceptDropEvent const&)
avmedia::MediaWindow::Command(CommandEvent const&)
avmedia::MediaWindow::ExecuteDrop(ExecuteDropEvent const&)
avmedia::MediaWindow::KeyInput(KeyEvent const&)
avmedia::MediaWindow::KeyUp(KeyEvent const&)
avmedia::MediaWindow::MouseButtonDown(MouseEvent const&)
avmedia::MediaWindow::MouseButtonUp(MouseEvent const&)
avmedia::MediaWindow::MouseMove(MouseEvent const&)
avmedia::MediaWindow::StartDrag(signed char, Point const&)
avmedia::MediaWindow::getMediaFilters()
avmedia::MediaWindow::getURL() const
avmedia::MediaWindow::isValid() const
avmedia::MediaWindow::setURL(rtl::OUString const&, rtl::OUString const&)
avmedia::MediaWindow::start()
avmedia::PlayerListener::disposing(com::sun::star::lang::EventObject const&)
avmedia::PlayerListener::disposing(std::unique_lock<std::mutex>&)
avmedia::PlayerListener::preferredPlayerWindowSizeAvailable(com::sun::star::lang::EventObject const&)
avmedia::PlayerListener::startListening(com::sun::star::uno::Reference<com::sun::star::media::XPlayerNotifier> const&)
avmedia::PlayerListener::stopListening(std::unique_lock<std::mutex>&)
avmedia::PlayerListener::~PlayerListener()
basegfx::B2DCubicBezier::B2DCubicBezier(basegfx::B2DCubicBezier const&)
basegfx::B2DCubicBezier::adaptiveSubdivideByDistance(basegfx::B2DPolygon&, double, int) const
basegfx::B2DCubicBezier::equal(basegfx::B2DCubicBezier const&) const
basegfx::B2DCubicBezier::getRange() const
basegfx::B2DCubicBezier::operator=(basegfx::B2DCubicBezier const&)
basegfx::B2DCubicBezier::operator==(basegfx::B2DCubicBezier const&) const
basegfx::B2DCubicBezier::transform(basegfx::B2DHomMatrix const&)
basegfx::B2DHomMatrix::computeAdjoint(double (&) [6]) const
basegfx::B2DHomMatrix::computeDeterminant(double (&) [6]) const
basegfx::B2DHomMatrix::doMulMatrix(basegfx::B2DHomMatrix const&)
basegfx::B2DHomMatrix::isInvertible() const
basegfx::B2DHomMatrix::scale(basegfx::B2DTuple const&)
basegfx::B2DHomMatrix::set3x2(double, double, double, double, double, double)
basegfx::B2DPolyPolygon::addOrReplaceSystemDependentDataInternal(std::shared_ptr<basegfx::SystemDependentData>&) const
basegfx::B2DPolyPolygon::getDefaultAdaptiveSubdivision() const
basegfx::B2DPolyPolygon::getSystemDependantDataInternal(unsigned long) const
basegfx::B2DPolyPolygon::hasDoublePoints() const
basegfx::B2DPolyPolygon::makeUnique()
basegfx::B2DPolyRange::B2DPolyRange(basegfx::B2DPolyRange const&)
basegfx::B2DPolyRange::operator==(basegfx::B2DPolyRange const&) const
basegfx::B2DPolyRange::transform(basegfx::B2DHomMatrix const&)
basegfx::B2DPolygon::addOrReplaceSystemDependentDataInternal(std::shared_ptr<basegfx::SystemDependentData>&) const
basegfx::B2DPolygon::getNextControlVector(unsigned int) const
basegfx::B2DPolygon::getPrevControlVector(unsigned int) const
basegfx::B2DPolygon::getSystemDependantDataInternal(unsigned long) const
basegfx::B2DPolygon::hasDoublePoints() const
basegfx::B2DPolygon::makeUnique()
basegfx::B2DRange::getUnitB2DRange()
basegfx::B2DVector::getEmptyVector()
basegfx::B2DVector::operator*=(basegfx::B2DHomMatrix const&)
basegfx::B2IVector::operator*=(basegfx::B2DHomMatrix const&)
basegfx::B2IVector::operator=(basegfx::B2ITuple const&)
basegfx::B3DHomMatrix::decompose(basegfx::B3DTuple&, basegfx::B3DTuple&, basegfx::B3DTuple&, basegfx::B3DTuple&) const
basegfx::B3DHomMatrix::determinant() const
basegfx::B3DHomMatrix::isLastLineDefault() const
basegfx::B3DHomMatrix::operator*=(double)
basegfx::B3DHomMatrix::operator+=(basegfx::B3DHomMatrix const&)
basegfx::B3DHomMatrix::operator-=(basegfx::B3DHomMatrix const&)
basegfx::B3DHomMatrix::operator/=(double)
basegfx::B3DHomMatrix::rotate(basegfx::B3DTuple const&)
basegfx::B3DHomMatrix::scale(basegfx::B3DTuple const&)
basegfx::B3DHomMatrix::shearXY(double, double)
basegfx::B3DHomMatrix::shearXZ(double, double)
basegfx::B3DHomMatrix::translate(basegfx::B3DTuple const&)
basegfx::B3DPolyPolygon::B3DPolyPolygon(basegfx::B3DPolygon const&)
basegfx::B3DPolyPolygon::append(basegfx::B3DPolyPolygon const&)
basegfx::B3DPolyPolygon::areBColorsUsed() const
basegfx::B3DPolyPolygon::areNormalsUsed() const
basegfx::B3DPolyPolygon::areTextureCoordinatesUsed() const
basegfx::B3DPolyPolygon::begin()
basegfx::B3DPolyPolygon::begin() const
basegfx::B3DPolyPolygon::clearBColors()
basegfx::B3DPolyPolygon::clearNormals()
basegfx::B3DPolyPolygon::clearTextureCoordinates()
basegfx::B3DPolyPolygon::end()
basegfx::B3DPolyPolygon::end() const
basegfx::B3DPolyPolygon::hasDoublePoints() const
basegfx::B3DPolyPolygon::remove(unsigned int, unsigned int)
basegfx::B3DPolyPolygon::removeDoublePoints()
basegfx::B3DPolyPolygon::transformNormals(basegfx::B3DHomMatrix const&)
basegfx::B3DPolyPolygon::transformTextureCoordinates(basegfx::B2DHomMatrix const&)
basegfx::B3DPolygon::B3DPolygon(basegfx::B3DPolygon&&)
basegfx::B3DPolygon::append(basegfx::B3DPolygon const&, unsigned int, unsigned int)
basegfx::B3DPolygon::areBColorsUsed() const
basegfx::B3DPolygon::areNormalsUsed() const
basegfx::B3DPolygon::areTextureCoordinatesUsed() const
basegfx::B3DPolygon::clear()
basegfx::B3DPolygon::clearBColors()
basegfx::B3DPolygon::clearNormals()
basegfx::B3DPolygon::clearTextureCoordinates()
basegfx::B3DPolygon::flip()
basegfx::B3DPolygon::getBColor(unsigned int) const
basegfx::B3DPolygon::getNormal(unsigned int) const
basegfx::B3DPolygon::getTextureCoordinate(unsigned int) const
basegfx::B3DPolygon::hasDoublePoints() const
basegfx::B3DPolygon::operator=(basegfx::B3DPolygon&&)
basegfx::B3DPolygon::operator==(basegfx::B3DPolygon const&) const
basegfx::B3DPolygon::remove(unsigned int, unsigned int)
basegfx::B3DPolygon::removeDoublePoints()
basegfx::B3DPolygon::setB3DPoint(unsigned int, basegfx::B3DPoint const&)
basegfx::B3DPolygon::setBColor(unsigned int, basegfx::BColor const&)
basegfx::B3DPolygon::setClosed(bool)
basegfx::B3DPolygon::transform(basegfx::B3DHomMatrix const&)
basegfx::B3DPolygon::transformNormals(basegfx::B3DHomMatrix const&)
basegfx::B3DPolygon::transformTextureCoordinates(basegfx::B2DHomMatrix const&)
basegfx::BColorModifier::~BColorModifier()
basegfx::BColorStops::checkPenultimate() const
basegfx::BColorStops::createSpaceAtStart(double)
basegfx::BColorStops::detectPossibleOffsetAtStart() const
basegfx::BColorStops::getInterpolatedBColor(double, unsigned int, basegfx::BColorStops::BColorStopRange&) const
basegfx::BColorStops::removeSpaceAtStart(double)
basegfx::BColorStops::sortAndCorrect()
basegfx::BGradient::GradientStyleToString[abi:cxx11](com::sun::star::awt::GradientStyle)
basegfx::BGradient::tryToApplySteps()
basegfx::SystemDependentData::SystemDependentData(basegfx::SystemDependentDataManager&)
basegfx::SystemDependentData::calculateCombinedHoldCyclesInSeconds() const
basegfx::SystemDependentData::estimateUsageInBytes() const
basegfx::SystemDependentData::~SystemDependentData()
basegfx::SystemDependentDataHolder::SystemDependentDataHolder()
basegfx::SystemDependentDataHolder::addOrReplaceSystemDependentData(std::shared_ptr<basegfx::SystemDependentData>&)
basegfx::SystemDependentDataHolder::getSystemDependentData(unsigned long) const
basegfx::SystemDependentDataHolder::~SystemDependentDataHolder()
basegfx::SystemDependentDataManager::SystemDependentDataManager()
basegfx::SystemDependentDataManager::~SystemDependentDataManager()
basegfx::areParallel(basegfx::B3DVector const&, basegfx::B3DVector const&)
basegfx::computeSetDifference(std::vector<basegfx::B2DRange, std::allocator<basegfx::B2DRange> >&, basegfx::B2DRange const&, basegfx::B2DRange const&)
basegfx::computeSetDifference(std::vector<basegfx::B2IRange, std::allocator<basegfx::B2IRange> >&, basegfx::B2IRange const&, basegfx::B2IRange const&)
basegfx::createWaveLinePolygon(basegfx::B2DRange const&)
basegfx::fround(basegfx::B2DTuple const&)
basegfx::fround(basegfx::B3DTuple const&)
basegfx::getContinuity(basegfx::B2DVector const&, basegfx::B2DVector const&)
basegfx::getOrientation(basegfx::B2DVector const&, basegfx::B2DVector const&)
basegfx::getPerpendicular(basegfx::B2DVector const&)
basegfx::snapToNearestMultiple(double, double)
basegfx::triangulator::triangulate(basegfx::B2DPolyPolygon const&)
basegfx::unotools::b2DPointFromRealPoint2D(com::sun::star::geometry::RealPoint2D const&)
basegfx::unotools::b2DRectangleFromRealRectangle2D(com::sun::star::geometry::RealRectangle2D const&)
basegfx::unotools::b2DSurroundingIntegerRangeFromB2DRange(basegfx::B2DRange const&)
basegfx::unotools::b2IRectangleFromAwtRectangle(com::sun::star::awt::Rectangle const&)
basegfx::unotools::b2IRectangleFromIntegerRectangle2D(com::sun::star::geometry::IntegerRectangle2D const&)
basegfx::unotools::homMatrixFromAffineMatrix3D(com::sun::star::geometry::AffineMatrix3D const&)
basegfx::unotools::integerSize2DFromB2ISize(basegfx::B2ISize const&)
basegfx::unotools::point2DFromB2DPoint(basegfx::B2DPoint const&)
basegfx::unotools::polyPolygonFromBezier2DSequenceSequence(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::geometry::RealBezierSegment2D> > const&)
basegfx::unotools::polyPolygonFromPoint2DSequenceSequence(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::geometry::RealPoint2D> > const&)
basegfx::unotools::rectangle2DFromB2DRectangle(basegfx::B2DRange const&)
basegfx::unotools::rectangle3DFromB3DRectangle(basegfx::B3DRange const&)
basegfx::unotools::size2DFromB2DSize(basegfx::B2DSize const&)
basegfx::unotools::xPolyPolygonFromB2DPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, basegfx::B2DPolygon const&)
basegfx::utils::B2DClipState::B2DClipState(basegfx::utils::B2DClipState const&)
basegfx::utils::B2DClipState::B2DClipState(basegfx::utils::B2DClipState&&)
basegfx::utils::B2DClipState::operator=(basegfx::utils::B2DClipState const&)
basegfx::utils::B2DClipState::operator=(basegfx::utils::B2DClipState&&)
basegfx::utils::B2DClipState::operator==(basegfx::utils::B2DClipState const&) const
basegfx::utils::B2DClipState::subtractPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DClipState::transform(basegfx::B2DHomMatrix const&)
basegfx::utils::B2DClipState::unionPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DClipState::xorPolyPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::B2DPolygonToUnoPointSequence(basegfx::B2DPolygon const&, com::sun::star::uno::Sequence<com::sun::star::awt::Point>&)
basegfx::utils::B3DPolyPolygonToUnoPolyPolygonShape3D(basegfx::B3DPolyPolygon const&, com::sun::star::drawing::PolyPolygonShape3D&)
basegfx::utils::KeyStopLerp::KeyStopLerp(com::sun::star::uno::Sequence<double> const&)
basegfx::utils::UnoPointSequenceToB2DPolygon(com::sun::star::uno::Sequence<com::sun::star::awt::Point> const&)
basegfx::utils::UnoPolyPolygonShape3DToB3DPolyPolygon(com::sun::star::drawing::PolyPolygonShape3D const&)
basegfx::utils::adaptiveSubdivideByDistance(basegfx::B2DPolyPolygon const&, double, int)
basegfx::utils::adaptiveSubdivideByDistance(basegfx::B2DPolygon const&, double, int)
basegfx::utils::applyDefaultNormalsSphere(basegfx::B3DPolyPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::applyDefaultTextureCoordinatesParallel(basegfx::B3DPolyPolygon const&, basegfx::B3DRange const&, bool, bool)
basegfx::utils::applyDefaultTextureCoordinatesSphere(basegfx::B3DPolyPolygon const&, basegfx::B3DPoint const&, bool, bool)
basegfx::utils::applyLineDashing(basegfx::B2DPolygon const&, std::vector<double, std::allocator<double> > const&, std::function<void (basegfx::B2DPolygon const&)> const&, std::function<void (basegfx::B2DPolygon const&)> const&, double)
basegfx::utils::applyLineDashing(basegfx::B3DPolygon const&, std::vector<double, std::allocator<double> > const&, basegfx::B3DPolyPolygon*, double)
basegfx::utils::calculateNumberOfSteps(unsigned int, basegfx::BColor const&, basegfx::BColor const&)
basegfx::utils::clipPolygonOnParallelAxis(basegfx::B2DPolygon const&, bool, bool, double, bool)
basegfx::utils::clipTriangleListOnRange(basegfx::B2DPolygon const&, basegfx::B2DRange const&)
basegfx::utils::correctOutmostPolygon(basegfx::B2DPolyPolygon const&)
basegfx::utils::createAreaGeometry(basegfx::B2DPolygon const&, double, basegfx::B2DLineJoin, com::sun::star::drawing::LineCap, double, double, double)
basegfx::utils::createAreaGeometryForLineStartEnd(basegfx::B2DPolygon const&, basegfx::B2DPolyPolygon const&, bool, double, double, double, double*, double)
basegfx::utils::createAxialODFGradientInfo(basegfx::B2DRange const&, unsigned int, double, double)
basegfx::utils::createB2DPolygonFromB3DPolygon(basegfx::B3DPolygon const&, basegfx::B3DHomMatrix const&)
basegfx::utils::createB3DPolygonFromB2DPolygon(basegfx::B2DPolygon const&, double)
basegfx::utils::createCubeFillPolyPolygonFromB3DRange(basegfx::B3DRange const&)
basegfx::utils::createEllipticalODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double, double)
basegfx::utils::createLinearODFGradientInfo(basegfx::B2DRange const&, unsigned int, double, double)
basegfx::utils::createRadialODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double)
basegfx::utils::createRectangularODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double, double)
basegfx::utils::createSphereFillPolyPolygonFromB3DRange(basegfx::B3DRange const&, unsigned int, unsigned int, bool, double, double, double, double)
basegfx::utils::createSpherePolyPolygonFromB3DRange(basegfx::B3DRange const&, unsigned int, unsigned int, double, double, double, double)
basegfx::utils::createSquareODFGradientInfo(basegfx::B2DRange const&, basegfx::B2DVector const&, unsigned int, double, double)
basegfx::utils::createUnitSphereFillPolyPolygon(unsigned int, unsigned int, bool, double, double, double, double)
basegfx::utils::createWaveline(basegfx::B2DPolygon const&, double, double)
basegfx::utils::distort(basegfx::B2DPoint const&, basegfx::B2DRange const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::utils::distort(basegfx::B2DPolygon const&, basegfx::B2DRange const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&)
basegfx::utils::exportToSvgPoints(basegfx::B2DPolygon const&)
basegfx::utils::getArea(basegfx::B2DPolyPolygon const&)
basegfx::utils::getArea(basegfx::B2DPolygon const&)
basegfx::utils::getAxialGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getCutBetweenLineAndPlane(basegfx::B3DVector const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, double&)
basegfx::utils::getEdgeLength(basegfx::B2DPolygon const&, unsigned int)
basegfx::utils::getEllipticalGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getIndexOfPredecessor(unsigned int, basegfx::B2DPolygon const&)
basegfx::utils::getIndexOfSuccessor(unsigned int, basegfx::B2DPolygon const&)
basegfx::utils::getIndexOfSuccessor(unsigned int, basegfx::B3DPolygon const&)
basegfx::utils::getLength(basegfx::B3DPolygon const&)
basegfx::utils::getLinearGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getOrientationForIndex(basegfx::B2DPolygon const&, unsigned int)
basegfx::utils::getRadialGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getRectangularGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::getSignedArea(basegfx::B2DPolyPolygon const&)
basegfx::utils::getSignedArea(basegfx::B2DPolygon const&)
basegfx::utils::getSmallestDistancePointToEdge(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, double&)
basegfx::utils::getSmallestDistancePointToPolygon(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, unsigned int&, double&)
basegfx::utils::getSnippetAbsolute(basegfx::B2DPolygon const&, double, double, double)
basegfx::utils::getSquareGradientAlpha(basegfx::B2DPoint const&, basegfx::ODFGradientInfo const&)
basegfx::utils::growInNormalDirection(basegfx::B2DPolygon const&, double)
basegfx::utils::hasNeutralPoints(basegfx::B2DPolygon const&)
basegfx::utils::infiniteLineFromParallelogram(basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DPoint&, basegfx::B2DRange const&)
basegfx::utils::interpolate(basegfx::B2DPolyPolygon const&, basegfx::B2DPolyPolygon const&, double)
basegfx::utils::interpolate(basegfx::B2DPolygon const&, basegfx::B2DPolygon const&, double)
basegfx::utils::invertNormals(basegfx::B3DPolyPolygon const&)
basegfx::utils::invertNormals(basegfx::B3DPolygon const&)
basegfx::utils::isConvex(basegfx::B2DPolygon const&)
basegfx::utils::isInEpsilonRange(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, double)
basegfx::utils::isInEpsilonRange(basegfx::B2DPolyPolygon const&, basegfx::B2DPoint const&, double)
basegfx::utils::isInEpsilonRange(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, double)
basegfx::utils::isInside(basegfx::B2DPolyPolygon const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isInside(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isInside(basegfx::B2DPolygon const&, basegfx::B2DPolygon const&, bool)
basegfx::utils::isInside(basegfx::B3DPolyPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::isInside(basegfx::B3DPolygon const&, basegfx::B3DPoint const&, bool)
basegfx::utils::isPointInTriangle(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isPointOnEdge(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DVector const&, double*)
basegfx::utils::isPointOnLine(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isPointOnLine(basegfx::B3DPoint const&, basegfx::B3DPoint const&, basegfx::B3DPoint const&, bool)
basegfx::utils::isPointOnPolygon(basegfx::B2DPolygon const&, basegfx::B2DPoint const&, bool)
basegfx::utils::isPointOnPolygon(basegfx::B3DPolygon const&, basegfx::B3DPoint const&)
basegfx::utils::number2PolyPolygon(double, int, int, bool)
basegfx::utils::reSegmentPolyPolygon(basegfx::B2DPolyPolygon const&, unsigned int)
basegfx::utils::reSegmentPolygon(basegfx::B2DPolygon const&, unsigned int)
basegfx::utils::simplifyCurveSegments(basegfx::B2DPolygon const&)
basegfx::utils::snapPointsOfHorizontalOrVerticalEdges(basegfx::B2DPolygon const&)
basegfx::utils::snapPointsOfHorizontalOrVerticalEdges(basegfx::B3DPolygon const&)
basegfx::utils::solveCrossovers(basegfx::B2DPolygon const&)
basegfx::utils::solveCrossovers(std::vector<basegfx::B2DRange, std::allocator<basegfx::B2DRange> > const&, std::vector<basegfx::B2VectorOrientation, std::allocator<basegfx::B2VectorOrientation> > const&)
basic::vba::enableContainerWindowsOfAllDocuments(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, bool)
basic::vba::lockControllersOfAllDocuments(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, bool)
basic::vba::registerCurrentDirectory(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, rtl::OUString const&)
basicide_choose_macro
basicide_handle_basic_error
basicide_macro_organizer
bb_better
bimprove
bin_count
blockWriteAMAT
blockWriteBMAT
blockWriteBOOL
blockWriteINT
blockWriteLREAL
blockWriteREAL
bsolve
bsolve_xA2
btran
canvas::CachedPrimitiveBase::CachedPrimitiveBase(com::sun::star::rendering::ViewState, com::sun::star::uno::Reference<com::sun::star::rendering::XCanvas>)
canvas::CachedPrimitiveBase::disposing(std::unique_lock<std::mutex>&)
canvas::CachedPrimitiveBase::getImplementationName()
canvas::CachedPrimitiveBase::getSupportedServiceNames()
canvas::CachedPrimitiveBase::redraw(com::sun::star::rendering::ViewState const&)
canvas::CachedPrimitiveBase::supportsService(rtl::OUString const&)
canvas::CachedPrimitiveBase::~CachedPrimitiveBase()
canvas::CanvasCustomSpriteHelper::CanvasCustomSpriteHelper()
canvas::CanvasCustomSpriteHelper::checkDrawBitmap(rtl::Reference<canvas::Sprite> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XBitmap> const&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&)
canvas::CanvasCustomSpriteHelper::clearingContent(rtl::Reference<canvas::Sprite> const&)
canvas::CanvasCustomSpriteHelper::clip(rtl::Reference<canvas::Sprite> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XPolyPolygon2D> const&)
canvas::CanvasCustomSpriteHelper::disposing()
canvas::CanvasCustomSpriteHelper::getUpdateArea() const
canvas::CanvasCustomSpriteHelper::getUpdateArea(basegfx::B2DRange const&) const
canvas::CanvasCustomSpriteHelper::hide(rtl::Reference<canvas::Sprite> const&)
canvas::CanvasCustomSpriteHelper::init(com::sun::star::geometry::RealSize2D const&, rtl::Reference<canvas::SpriteSurface> const&)
canvas::CanvasCustomSpriteHelper::isAreaUpdateOpaque(basegfx::B2DRange const&) const
canvas::CanvasCustomSpriteHelper::move(rtl::Reference<canvas::Sprite> const&, com::sun::star::geometry::RealPoint2D const&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&)
canvas::CanvasCustomSpriteHelper::setAlpha(rtl::Reference<canvas::Sprite> const&, double)
canvas::CanvasCustomSpriteHelper::setPriority(rtl::Reference<canvas::Sprite> const&, double)
canvas::CanvasCustomSpriteHelper::show(rtl::Reference<canvas::Sprite> const&)
canvas::CanvasCustomSpriteHelper::transform(rtl::Reference<canvas::Sprite> const&, com::sun::star::geometry::AffineMatrix2D const&)
canvas::CanvasCustomSpriteHelper::updateClipState(rtl::Reference<canvas::Sprite> const&)
canvas::ParametricPolyPolygon::ParametricPolyPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice>, basegfx::B2DPolygon const&, canvas::ParametricPolyPolygon::GradientType, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&, double)
canvas::ParametricPolyPolygon::ParametricPolyPolygon(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice>, canvas::ParametricPolyPolygon::GradientType, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&)
canvas::ParametricPolyPolygon::create(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
canvas::ParametricPolyPolygon::createEllipticalGradient(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&, double)
canvas::ParametricPolyPolygon::createLinearHorizontalGradient(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&)
canvas::ParametricPolyPolygon::createRectangularGradient(com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<double> > const&, com::sun::star::uno::Sequence<double> const&, double)
canvas::ParametricPolyPolygon::disposing(std::unique_lock<std::mutex>&)
canvas::ParametricPolyPolygon::getAvailableServiceNames()
canvas::ParametricPolyPolygon::getColor(double)
canvas::ParametricPolyPolygon::getColorSpace()
canvas::ParametricPolyPolygon::getImplementationName()
canvas::ParametricPolyPolygon::getOutline(double)
canvas::ParametricPolyPolygon::getPointColor(com::sun::star::geometry::RealPoint2D const&)
canvas::ParametricPolyPolygon::getSupportedServiceNames()
canvas::ParametricPolyPolygon::getValues() const
canvas::ParametricPolyPolygon::supportsService(rtl::OUString const&)
canvas::ParametricPolyPolygon::~ParametricPolyPolygon()
canvas::PropertySetHelper::PropertySetHelper()
canvas::PropertySetHelper::addProperties(std::vector<canvas::tools::ValueMap<canvas::PropertySetHelper::Callbacks>::MapEntry, std::allocator<canvas::tools::ValueMap<canvas::PropertySetHelper::Callbacks>::MapEntry> > const&)
canvas::PropertySetHelper::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
canvas::PropertySetHelper::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
canvas::PropertySetHelper::getPropertySetInfo() const
canvas::PropertySetHelper::getPropertyValue(rtl::OUString const&) const
canvas::PropertySetHelper::initProperties(std::vector<canvas::tools::ValueMap<canvas::PropertySetHelper::Callbacks>::MapEntry, std::allocator<canvas::tools::ValueMap<canvas::PropertySetHelper::Callbacks>::MapEntry> >&&)
canvas::PropertySetHelper::isPropertyName(rtl::OUString const&) const
canvas::PropertySetHelper::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
canvas::SpriteRedrawManager::SpriteRedrawManager()
canvas::SpriteRedrawManager::areSpritesChanged(basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>::ConnectedComponents const&) const
canvas::SpriteRedrawManager::clearChangeRecords()
canvas::SpriteRedrawManager::disposing()
canvas::SpriteRedrawManager::hideSprite(rtl::Reference<canvas::Sprite> const&)
canvas::SpriteRedrawManager::isAreaUpdateNotOpaque(basegfx::B2DRange const&, std::pair<basegfx::B2DRange, canvas::SpriteRedrawManager::SpriteInfo> const&) const
canvas::SpriteRedrawManager::isAreaUpdateOpaque(basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>::ConnectedComponents const&, unsigned long) const
canvas::SpriteRedrawManager::isAreaUpdateScroll(basegfx::B2DRange&, basegfx::B2DRange&, basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>::ConnectedComponents const&, unsigned long) const
canvas::SpriteRedrawManager::moveSprite(rtl::Reference<canvas::Sprite> const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DVector const&)
canvas::SpriteRedrawManager::setupUpdateAreas(basegfx::B2DConnectedRanges<canvas::SpriteRedrawManager::SpriteInfo>&) const
canvas::SpriteRedrawManager::showSprite(rtl::Reference<canvas::Sprite> const&)
canvas::SpriteRedrawManager::updateSprite(rtl::Reference<canvas::Sprite> const&, basegfx::B2DPoint const&, basegfx::B2DRange const&)
canvas::createSurfaceProxyManager(std::shared_ptr<canvas::IRenderModule> const&)
canvas::tools::ElapsedTime::getCurrentTime() const
canvas::tools::ElapsedTime::getElapsedTimeImpl() const
canvas::tools::ElapsedTime::getSystemTime()
canvas::tools::appendToRenderState(com::sun::star::rendering::RenderState&, basegfx::B2DHomMatrix const&)
canvas::tools::calcGradientStepCount(basegfx::B2DHomMatrix&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::rendering::Texture const&, int)
canvas::tools::calcRectToOriginTransform(basegfx::B2DHomMatrix&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
canvas::tools::clipOutDev(com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, OutputDevice&, OutputDevice*)
canvas::tools::clipScrollArea(basegfx::B2IRange&, basegfx::B2IPoint&, std::vector<basegfx::B2IRange, std::allocator<basegfx::B2IRange> >&, basegfx::B2IRange const&)
canvas::tools::colorToStdIntSequence(Color const&)
canvas::tools::createInfiniteSize2D()
canvas::tools::extractExtraFontProperties(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, unsigned int&)
canvas::tools::getAbsoluteWindowRect(com::sun::star::awt::Rectangle const&, com::sun::star::uno::Reference<com::sun::star::awt::XWindow2> const&)
canvas::tools::getBoundMarksPolyPolygon(basegfx::B2DRange const&)
canvas::tools::getRenderStateTransform(basegfx::B2DHomMatrix&, com::sun::star::rendering::RenderState const&)
canvas::tools::getStdColorSpace()
canvas::tools::getStdColorSpaceWithoutAlpha()
canvas::tools::getStdMemoryLayout(com::sun::star::geometry::IntegerSize2D const&)
canvas::tools::getViewStateTransform(basegfx::B2DHomMatrix&, com::sun::star::rendering::ViewState const&)
canvas::tools::isInside(basegfx::B2DRange const&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
canvas::tools::mergeViewAndRenderTransform(basegfx::B2DHomMatrix&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&)
canvas::tools::prependToRenderState(com::sun::star::rendering::RenderState&, basegfx::B2DHomMatrix const&)
canvas::tools::setIdentityMatrix2D(com::sun::star::geometry::Matrix2D&)
canvas::tools::setViewStateTransform(com::sun::star::rendering::ViewState&, basegfx::B2DHomMatrix const&)
canvas::tools::spritePixelAreaFromB2DRange(basegfx::B2DRange const&)
canvas::tools::verifyBitmapSize(com::sun::star::geometry::IntegerSize2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
canvas::tools::verifyIndexRange(com::sun::star::geometry::IntegerPoint2D const&, com::sun::star::geometry::IntegerSize2D const&)
canvas::tools::verifyIndexRange(com::sun::star::geometry::IntegerRectangle2D const&, com::sun::star::geometry::IntegerSize2D const&)
canvas::tools::verifyInput(com::sun::star::geometry::AffineMatrix2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::geometry::Matrix2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::geometry::RealBezierSegment2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::geometry::RealPoint2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::geometry::RealRectangle2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::rendering::FontRequest const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::rendering::IntegerBitmapLayout const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::rendering::RenderState const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short, int)
canvas::tools::verifyInput(com::sun::star::rendering::StrokeAttributes const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::rendering::Texture const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifyInput(com::sun::star::rendering::ViewState const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, short)
canvas::tools::verifySpriteSize(com::sun::star::geometry::RealSize2D const&, char const*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
chart::AddPointToPoly(com::sun::star::drawing::PolyPolygonShape3D&, com::sun::star::drawing::Position3D const&, int)
chart::AddPointToPoly(std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > >&, com::sun::star::drawing::Position3D const&, int)
chart::B2DHomMatrixToHomogenMatrix3(basegfx::B2DHomMatrix const&)
chart::B3DHomMatrixToHomogenMatrix(basegfx::B3DHomMatrix const&)
chart::B3DPointToPosition3D(basegfx::B3DPoint const&)
chart::B3DVectorToDirection3D(basegfx::B3DVector const&)
chart::BezierToPoly(com::sun::star::drawing::PolyPolygonBezierCoords const&)
chart::DataSequenceToDoubleSequence(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&)
chart::DataSequenceToStringSequence(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataSequence> const&)
chart::Direction3DToAWTSize(com::sun::star::drawing::Direction3D const&)
chart::Direction3DToB3DVector(com::sun::star::drawing::Direction3D const&)
chart::HomogenMatrixToB3DHomMatrix(com::sun::star::drawing::HomogenMatrix const&)
chart::IgnoreZ(basegfx::B3DHomMatrix const&)
chart::PolyToB2DPolyPolygon(std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > > const&)
chart::PolyToPointSequence(com::sun::star::drawing::PolyPolygonShape3D const&)
chart::PolyToPointSequence(std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > > const&)
chart::Position3DToAWTPoint(com::sun::star::drawing::Position3D const&)
chart::Position3DToB3DPoint(com::sun::star::drawing::Position3D const&)
chart::SchResId(TranslateId)
chart::SequenceToPosition3D(com::sun::star::uno::Sequence<double> const&)
chart::StaticAxisDefaults()
chart::StaticDataSeriesDefaults()
chart::StaticFormattedStringDefaults()
chart::StaticLegendDefaults()
chart::ToPoint(com::sun::star::awt::Rectangle const&)
chart::ToSize(com::sun::star::awt::Rectangle const&)
chart::addPolygon(std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > >&, std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > > const&)
chart::appendPointSequence(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::awt::Point> >&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::awt::Point> > const&)
chart::appendPoly(std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > >&, std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > > const&)
chart::createConfigColorScheme(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::getPointFromPoly(com::sun::star::drawing::PolyPolygonShape3D const&, int, int)
chart::getPointFromPoly(std::vector<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> >, std::allocator<std::vector<com::sun::star::drawing::Position3D, std::allocator<com::sun::star::drawing::Position3D> > > > const&, int, int)
chart::getShortForLongAlso(com::sun::star::uno::Any const&)
chart::hasDoubleValue(com::sun::star::uno::Any const&)
chart::hasLongOrShortValue(com::sun::star::uno::Any const&)
chart::operator+(com::sun::star::drawing::Position3D const&, com::sun::star::drawing::Direction3D const&)
chart::operator-(com::sun::star::drawing::Position3D const&, com::sun::star::drawing::Position3D const&)
chart::replaceParamterInString(rtl::OUString&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
checkForUpdates(UpdateInfo&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&, com::sun::star::uno::Reference<com::sun::star::deployment::XUpdateInformationProvider> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<rtl::OUString> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
check_degeneracy
check_if_less
check_int_sec_sos_free_decl
check_solution
chsign_bounds
cl_isalnum(unsigned long)
cl_isdigit(unsigned long)
cl_isletter(unsigned long)
cl_isspace(unsigned long)
cl_tcscasefold(wchar_t*, int)
cl_tcscasefoldcmp(wchar_t const*, wchar_t const*)
cl_tolower(wchar_t)
cl_toupper(wchar_t)
clean_SOSgroup
clean_realloc
clear_action
clear_artificials
clewErrorString
cloneINT
cloneLink
cloneMYBOOL
cloneREAL
colamd
colamd_recommended
colamd_report
colamd_set_defaults
coldual
collectMinorVar
colprim
column_in_lp
com_sun_star_comp_MemoryStream
com_sun_star_comp_SequenceInputStreamService
com_sun_star_comp_SequenceOutputStreamService
com_sun_star_comp_Xmloff_AnimationsImport
com_sun_star_comp_comphelper_OPropertyBag
com_sun_star_comp_dba_DataAccessDescriptorFactory
com_sun_star_comp_dba_OCommandDefinition
com_sun_star_comp_dba_OComponentDefinition
com_sun_star_comp_dba_ODatabaseDocument
com_sun_star_comp_dba_ODatabaseSource
com_sun_star_comp_embed_InstanceLocker
com_sun_star_comp_embed_OLESimpleStorage
com_sun_star_comp_extensions_ConsoleHandler
com_sun_star_comp_extensions_CsvFormatter
com_sun_star_comp_extensions_FileHandler
com_sun_star_comp_extensions_LoggerPool
com_sun_star_comp_extensions_PlainTextFormatter
com_sun_star_comp_extensions_SimpleTextFormatter
com_sun_star_comp_rendering_SimpleCanvas
com_sun_star_comp_task_OfficeRestartManager
com_sun_star_comp_util_OfficeInstallationDirectories
com_sun_star_comp_xmlscript_XMLBasicExporter
com_sun_star_comp_xmlscript_XMLOasisBasicExporter
com_sun_star_cui_GetCreateDialogFactoryService
compAggregate
compRedundant
compSparsity
comp_bits
compareBoundFlipVar
compareCHAR
compareINT
compareImprovementQS
compareImprovementVar
compareLink
compareREAL
compareSubstitutionQS
compareSubstitutionVar
compare_basis
comphelper::AccessibleEventNotifier::shutdown()
comphelper::AsyncEventNotifier::terminate()
comphelper::AsyncEventNotifierBase::AsyncEventNotifierBase()
comphelper::AsyncEventNotifierBase::terminate()
comphelper::AttributeList::AppendAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
comphelper::AttributeList::AttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XAttributeList> const&)
comphelper::AttributeList::GetIndexByName(rtl::OUString const&) const
comphelper::AttributeList::RemoveAttribute(rtl::OUString const&)
comphelper::AttributeList::RemoveAttributeByIndex(short)
comphelper::AttributeList::RenameAttributeByIndex(short, rtl::OUString const&)
comphelper::AttributeList::SetValueByIndex(short, rtl::OUString const&)
comphelper::AttributeList::createClone()
comphelper::AttributeList::getValueByName(rtl::OUString const&)
comphelper::AttributeList::~AttributeList()
comphelper::Automation::AutomationInvokedZone::AutomationInvokedZone()
comphelper::Automation::AutomationInvokedZone::~AutomationInvokedZone()
comphelper::BackupFileHelper::fillDirFileInfo()
comphelper::BackupFileHelper::getCustomizationDirNames()
comphelper::BackupFileHelper::getCustomizationFileNames()
comphelper::BackupFileHelper::getInitialBaseURL()
comphelper::BackupFileHelper::getPackURL()
comphelper::BackupFileHelper::getSafeModeName()
comphelper::BackupFileHelper::getUserProfileURL()
comphelper::BackupFileHelper::getUserProfileWorkURL()
comphelper::BackupFileHelper::isPopPossible()
comphelper::BackupFileHelper::isPopPossibleExtensionInfo() const
comphelper::BackupFileHelper::isPopPossible_extensionInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::isPopPossible_file(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::isPopPossible_files(std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::isTryDeinstallUserExtensionsPossible()
comphelper::BackupFileHelper::isTryDisableAllExtensionsPossible()
comphelper::BackupFileHelper::isTryResetBundledExtensionsPossible()
comphelper::BackupFileHelper::isTryResetCustomizationsPossible()
comphelper::BackupFileHelper::isTryResetSharedExtensionsPossible()
comphelper::BackupFileHelper::tryDeinstallUserExtensions()
comphelper::BackupFileHelper::tryDisableAllExtensions()
comphelper::BackupFileHelper::tryDisableHWAcceleration()
comphelper::BackupFileHelper::tryPop()
comphelper::BackupFileHelper::tryPopExtensionInfo()
comphelper::BackupFileHelper::tryPop_extensionInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryPop_file(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryPop_files(std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
comphelper::BackupFileHelper::tryPush_Files(std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
comphelper::BackupFileHelper::tryPush_extensionInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryPush_file(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::BackupFileHelper::tryResetBundledExtensions()
comphelper::BackupFileHelper::tryResetCustomizations()
comphelper::BackupFileHelper::tryResetSharedExtensions()
comphelper::BackupFileHelper::tryResetUserProfile()
comphelper::ChainablePropertySetInfo::getProperties()
comphelper::ChainablePropertySetInfo::getPropertyByName(rtl::OUString const&)
comphelper::ChainablePropertySetInfo::hasPropertyByName(rtl::OUString const&)
comphelper::ChainablePropertySetInfo::~ChainablePropertySetInfo()
comphelper::ComponentBase::getComponent()
comphelper::ConfigurationChanges::~ConfigurationChanges()
comphelper::ConfigurationHelper::flush(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::ConfigurationHelper::makeSureSetNodeExists(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString const&)
comphelper::ConfigurationHelper::readDirectKey(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, comphelper::EConfigurationModes)
comphelper::ConfigurationHelper::writeDirectKey(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Any const&, comphelper::EConfigurationModes)
comphelper::ConfigurationHelper::writeRelativeKey(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Any const&)
comphelper::ConfigurationListener::disposing(com::sun::star::lang::EventObject const&)
comphelper::ConfigurationListener::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
comphelper::DirectoryHelper::moveDirContent(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> > const&)
comphelper::DirectoryHelper::scanDirsAndFiles(rtl::OUString const&, std::set<rtl::OUString, std::less<rtl::OUString>, std::allocator<rtl::OUString> >&, std::set<std::pair<rtl::OUString, rtl::OUString>, std::less<std::pair<rtl::OUString, rtl::OUString> >, std::allocator<std::pair<rtl::OUString, rtl::OUString> > >&)
comphelper::DirectoryHelper::splitAtLastToken(std::basic_string_view<char16_t, std::char_traits<char16_t> >, char16_t, rtl::OUString&)
comphelper::DocPasswordHelper::GenerateNewModifyPasswordInfo(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GenerateNewModifyPasswordInfoOOXML(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GenerateStd97Key(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Sequence<signed char> const&)
comphelper::DocPasswordHelper::GenerateStd97Key(unsigned short const*, com::sun::star::uno::Sequence<signed char> const&)
comphelper::DocPasswordHelper::GenerateStd97Key(unsigned short const*, unsigned char const*)
comphelper::DocPasswordHelper::GetOoxHashAsSequence(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned int, comphelper::Hash::IterCount, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GetWordHashAsUINT32(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::DocPasswordHelper::GetXLHashAsUINT16(std::basic_string_view<char16_t, std::char_traits<char16_t> >, unsigned short)
comphelper::DocPasswordHelper::decryptGpgSession(com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> > const&)
comphelper::DocPasswordRequest::getContinuations()
comphelper::DocPasswordRequest::getPasswordToModify() const
comphelper::DocPasswordRequest::getRecommendReadOnly() const
comphelper::DocPasswordRequest::getRequest()
comphelper::DocPasswordRequest::~DocPasswordRequest()
comphelper::EmbeddedObjectContainer::CloseEmbeddedObjects()
comphelper::EmbeddedObjectContainer::CommitImageSubStorage()
comphelper::EmbeddedObjectContainer::EmbeddedObjectContainer(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::EmbeddedObjectContainer::GetGraphicReplacementStream(long, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, rtl::OUString*)
comphelper::EmbeddedObjectContainer::Get_Impl(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&, rtl::OUString const*)
comphelper::EmbeddedObjectContainer::InsertGraphicStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&, rtl::OUString const&)
comphelper::EmbeddedObjectContainer::InsertGraphicStreamDirectly(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&, rtl::OUString const&)
comphelper::EmbeddedObjectContainer::ReleaseImageSubStorage()
comphelper::EmbeddedObjectContainer::RemoveGraphicStream(rtl::OUString const&)
comphelper::EmbeddedObjectContainer::SetPersistentEntries(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, bool)
comphelper::EmbeddedObjectContainer::StoreAsChildren(bool, bool, bool, com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
comphelper::EmbeddedObjectContainer::StoreChildren(bool, bool)
comphelper::EmbeddedObjectContainer::TryToCopyGraphReplacement(comphelper::EmbeddedObjectContainer&, rtl::OUString const&, rtl::OUString const&)
comphelper::GraphicMimeTypeHelper::GetMimeTypeForImageStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
comphelper::GuessMediaMimeType(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::Hash::calculateHash(rtl::OUString const&, std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned int, comphelper::Hash::IterCount, comphelper::HashType)
comphelper::Hash::getLength() const
comphelper::IndexedPropertyValuesContainer::getByIndex(int)
comphelper::IndexedPropertyValuesContainer::getCount()
comphelper::IndexedPropertyValuesContainer::getElementType()
comphelper::IndexedPropertyValuesContainer::getImplementationName()
comphelper::IndexedPropertyValuesContainer::getSupportedServiceNames()
comphelper::IndexedPropertyValuesContainer::hasElements()
comphelper::IndexedPropertyValuesContainer::removeByIndex(int)
comphelper::IndexedPropertyValuesContainer::replaceByIndex(int, com::sun::star::uno::Any const&)
comphelper::IndexedPropertyValuesContainer::supportsService(rtl::OUString const&)
comphelper::IsMediaMimeType(rtl::OUString const&)
comphelper::IsMediaMimeType(std::basic_string_view<char, std::char_traits<char> >)
comphelper::JoinAsyncEventNotifiers()
comphelper::LibreOfficeKit::getLocale()
comphelper::LibreOfficeKit::isAllowlistedLanguage(rtl::OUString const&)
comphelper::LibreOfficeKit::isForkedChild()
comphelper::LibreOfficeKit::isLocalRendering()
comphelper::LibreOfficeKit::statusIndicatorFinish()
comphelper::LibreOfficeKit::statusIndicatorSetValue(int)
comphelper::LibreOfficeKit::statusIndicatorStart(rtl::OUString const&)
comphelper::LifecycleProxy::commitStorages()
comphelper::MasterPropertySetInfo::add(std::unordered_map<rtl::OUString, comphelper::PropertyInfo const*, std::hash<rtl::OUString>, std::equal_to<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, comphelper::PropertyInfo const*> > >&, unsigned char)
comphelper::MasterPropertySetInfo::getProperties()
comphelper::MasterPropertySetInfo::getPropertyByName(rtl::OUString const&)
comphelper::MasterPropertySetInfo::hasPropertyByName(rtl::OUString const&)
comphelper::MasterPropertySetInfo::~MasterPropertySetInfo()
comphelper::MemoryInputStream::MemoryInputStream(signed char const*, int)
comphelper::MemoryInputStream::available()
comphelper::MemoryInputStream::closeInput()
comphelper::MemoryInputStream::getLength()
comphelper::MemoryInputStream::getPosition()
comphelper::MemoryInputStream::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::MemoryInputStream::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::MemoryInputStream::readSomeBytes(signed char*, int)
comphelper::MemoryInputStream::seek(long)
comphelper::MemoryInputStream::skipBytes(int)
comphelper::MimeConfigurationHelper::ClassIDsEqual(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::uno::Sequence<signed char> const&)
comphelper::MimeConfigurationHelper::GetConfigurationByPathImpl(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetDefaultFilterFromServiceName(rtl::OUString const&, int)
comphelper::MimeConfigurationHelper::GetDocServiceNameFromFilter(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetDocServiceNameFromMediaType(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetExplicitlyRegisteredObjClassID(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetExportFilterFromImportFilter(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetFactoryNameByClassID(com::sun::star::uno::Sequence<signed char> const&)
comphelper::MimeConfigurationHelper::GetFactoryNameByDocumentName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::MimeConfigurationHelper::GetFactoryNameByMediaType(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetFactoryNameByStringClassID(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetFilterFactory()
comphelper::MimeConfigurationHelper::GetMediaTypeConfiguration()
comphelper::MimeConfigurationHelper::GetObjConfiguration()
comphelper::MimeConfigurationHelper::GetObjPropsFromConfigEntry(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&)
comphelper::MimeConfigurationHelper::GetObjectPropsByClassID(com::sun::star::uno::Sequence<signed char> const&)
comphelper::MimeConfigurationHelper::GetObjectPropsByDocumentName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::MimeConfigurationHelper::GetObjectPropsByFilter(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetObjectPropsByMediaType(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetObjectPropsByStringClassID(rtl::OUString const&)
comphelper::MimeConfigurationHelper::GetSequenceClassIDRepresentation(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::MimeConfigurationHelper::GetStringClassIDRepresentation(com::sun::star::uno::Sequence<signed char> const&)
comphelper::MimeConfigurationHelper::GetVerbByShortcut(rtl::OUString const&, com::sun::star::embed::VerbDescriptor&)
comphelper::MimeConfigurationHelper::GetVerbsConfiguration()
comphelper::MimeConfigurationHelper::MimeConfigurationHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>)
comphelper::MimeConfigurationHelper::SearchForFilter(com::sun::star::uno::Reference<com::sun::star::container::XContainerQuery> const&, com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&, SfxFilterFlags, SfxFilterFlags)
comphelper::MimeConfigurationHelper::UpdateMediaDescriptorWithFilterName(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, bool)
comphelper::MimeConfigurationHelper::UpdateMediaDescriptorWithFilterName(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue>&)
comphelper::ModifyPropertyAttributes(com::sun::star::uno::Sequence<com::sun::star::beans::Property>&, rtl::OUString const&, short, short)
comphelper::NameContainer_createInstance(com::sun::star::uno::Type const&)
comphelper::NamedValueCollection::NamedValueCollection(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::NamedValueCollection::canExtractFrom(com::sun::star::uno::Any const&)
comphelper::NamedValueCollection::empty() const
comphelper::NamedValueCollection::get(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::NamedValueCollection::getNames() const
comphelper::NamedValueCollection::get_ensureType(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, void*, com::sun::star::uno::Type const&)
comphelper::NamedValueCollection::impl_assign(com::sun::star::uno::Any const&)
comphelper::NamedValueCollection::impl_assign(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::NamedValueCollection::impl_assign(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
comphelper::NamedValueCollection::impl_assign(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
comphelper::NamedValueCollection::impl_remove(rtl::OUString const&)
comphelper::NamedValueCollection::merge(comphelper::NamedValueCollection const&, bool)
comphelper::NamedValueCollection::size() const
comphelper::OAccessibleExtendedComponentHelper::OAccessibleExtendedComponentHelper()
comphelper::OAccessibleExtendedComponentHelper::getLocationOnScreen()
comphelper::OAccessibleKeyBindingHelper::AddKeyBinding(com::sun::star::uno::Sequence<com::sun::star::awt::KeyStroke> const&)
comphelper::OAccessibleKeyBindingHelper::OAccessibleKeyBindingHelper(comphelper::OAccessibleKeyBindingHelper const&)
comphelper::OAccessibleKeyBindingHelper::getAccessibleKeyBinding(int)
comphelper::OAccessibleKeyBindingHelper::getAccessibleKeyBindingCount()
comphelper::OAccessibleKeyBindingHelper::~OAccessibleKeyBindingHelper()
comphelper::OCommonAccessibleComponent::OCommonAccessibleComponent()
comphelper::OCommonAccessibleComponent::containsPoint(com::sun::star::awt::Point const&)
comphelper::OCommonAccessibleComponent::getAccessibleCreator() const
comphelper::OCommonAccessibleComponent::getBounds()
comphelper::OCommonAccessibleComponent::getLocation()
comphelper::OCommonAccessibleComponent::getLocationOnScreen()
comphelper::OCommonAccessibleComponent::getSize()
comphelper::OCommonAccessibleComponent::implGetParentContext()
comphelper::OCommonAccessibleComponent::lateInit(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
comphelper::OCommonAccessibleText::implGetBreakIterator()
comphelper::OCommonAccessibleText::implGetCharacterClassification()
comphelper::OCommonAccessibleText::implGetGlyphBoundary(rtl::OUString const&, com::sun::star::i18n::Boundary&, int)
comphelper::OCommonAccessibleText::implGetLineBoundary(rtl::OUString const&, com::sun::star::i18n::Boundary&, int)
comphelper::OCommonAccessibleText::implGetParagraphBoundary(rtl::OUString const&, com::sun::star::i18n::Boundary&, int)
comphelper::OCommonAccessibleText::implGetSentenceBoundary(rtl::OUString const&, com::sun::star::i18n::Boundary&, int)
comphelper::OCommonAccessibleText::implIsValidIndex(int, int)
comphelper::OCommonAccessibleText::implIsValidRange(int, int, int)
comphelper::OEnumerationByIndex::disposing(com::sun::star::lang::EventObject const&)
comphelper::OEnumerationByIndex::hasMoreElements()
comphelper::OEnumerationByIndex::nextElement()
comphelper::OEnumerationByIndex::~OEnumerationByIndex()
comphelper::OFOPXMLHelper::ReadRelationsInfoSequence(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OFOPXMLHelper::WriteContentSequence(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, com::sun::star::uno::Sequence<com::sun::star::beans::StringPair> const&, com::sun::star::uno::Sequence<com::sun::star::beans::StringPair> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OFOPXMLHelper::WriteRelationsInfoSequence(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Sequence<com::sun::star::beans::StringPair> > const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OInteractionRequest::OInteractionRequest(com::sun::star::uno::Any, std::vector<com::sun::star::uno::Reference<com::sun::star::task::XInteractionContinuation>, std::allocator<com::sun::star::uno::Reference<com::sun::star::task::XInteractionContinuation> > >&&)
comphelper::OInteractionRequest::getContinuations()
comphelper::OInteractionRequest::getRequest()
comphelper::OInterfaceContainerHelper2::copyAndResetInUse()
comphelper::OInterfaceContainerHelper2::getInterface(int) const
comphelper::OMultiTypeInterfaceContainerHelper2::OMultiTypeInterfaceContainerHelper2(osl::Mutex&)
comphelper::OMultiTypeInterfaceContainerHelper2::addInterface(com::sun::star::uno::Type const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::OMultiTypeInterfaceContainerHelper2::clear()
comphelper::OMultiTypeInterfaceContainerHelper2::disposeAndClear(com::sun::star::lang::EventObject const&)
comphelper::OMultiTypeInterfaceContainerHelper2::findType(com::sun::star::uno::Type const&)
comphelper::OMultiTypeInterfaceContainerHelper2::findType(com::sun::star::uno::Type const&) const
comphelper::OMultiTypeInterfaceContainerHelper2::getContainedTypes() const
comphelper::OMultiTypeInterfaceContainerHelper2::getContainer(com::sun::star::uno::Type const&) const
comphelper::OMultiTypeInterfaceContainerHelper2::removeInterface(com::sun::star::uno::Type const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::OMultiTypeInterfaceContainerHelper2::~OMultiTypeInterfaceContainerHelper2()
comphelper::OPropertyArrayAggregationHelper::classifyProperty(rtl::OUString const&)
comphelper::OPropertyArrayAggregationHelper::fillAggregatePropertyInfoByHandle(rtl::OUString*, int*, int) const
comphelper::OPropertyArrayAggregationHelper::fillHandles(int*, com::sun::star::uno::Sequence<rtl::OUString> const&)
comphelper::OPropertyArrayAggregationHelper::fillPropertyMembersByHandle(rtl::OUString*, short*, int)
comphelper::OPropertyArrayAggregationHelper::findPropertyByName(rtl::OUString const&) const
comphelper::OPropertyArrayAggregationHelper::getHandleByName(rtl::OUString const&)
comphelper::OPropertyArrayAggregationHelper::getProperties()
comphelper::OPropertyArrayAggregationHelper::getPropertyByHandle(int, com::sun::star::beans::Property&) const
comphelper::OPropertyArrayAggregationHelper::getPropertyByName(rtl::OUString const&)
comphelper::OPropertyArrayAggregationHelper::hasPropertyByName(rtl::OUString const&)
comphelper::OPropertyChangeListener::setAdapter(comphelper::OPropertyChangeMultiplexer*)
comphelper::OPropertyChangeMultiplexer::disposing(com::sun::star::lang::EventObject const&)
comphelper::OPropertyChangeMultiplexer::lock()
comphelper::OPropertyChangeMultiplexer::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
comphelper::OPropertyChangeMultiplexer::unlock()
comphelper::OPropertyChangeMultiplexer::~OPropertyChangeMultiplexer()
comphelper::OPropertyContainer2::getBaseTypes()
comphelper::OPropertyContainer::getBaseTypes()
comphelper::OPropertyContainerHelper::getProperty(rtl::OUString const&) const
comphelper::OPropertyContainerHelper::isRegisteredProperty(int) const
comphelper::OPropertyContainerHelper::isRegisteredProperty(rtl::OUString const&) const
comphelper::OPropertyContainerHelper::registerMayBeVoidProperty(rtl::OUString const&, int, int, com::sun::star::uno::Any*, com::sun::star::uno::Type const&)
comphelper::OPropertyContainerHelper::revokeProperty(int)
comphelper::OPropertySetHelper::OPropertySetHelper()
comphelper::OPropertySetHelper::OPropertySetHelper(bool)
comphelper::OPropertySetHelper::disposing(std::unique_lock<std::mutex>&)
comphelper::OPropertySetHelper::fire(std::unique_lock<std::mutex>&, int*, com::sun::star::uno::Any const*, com::sun::star::uno::Any const*, int, bool)
comphelper::OPropertySetHelper::firePropertyChangeListeners(std::unique_lock<std::mutex>&, comphelper::OInterfaceContainerHelper4<com::sun::star::beans::XPropertyChangeListener>*, com::sun::star::beans::PropertyChangeEvent const&)
comphelper::OPropertySetHelper::fireVetoableChangeListeners(std::unique_lock<std::mutex>&, comphelper::OInterfaceContainerHelper4<com::sun::star::beans::XVetoableChangeListener>*, com::sun::star::beans::PropertyChangeEvent const&)
comphelper::OPropertySetHelper::impl_fireAll(std::unique_lock<std::mutex>&, int*, com::sun::star::uno::Any const*, com::sun::star::uno::Any const*, int)
comphelper::OPropertySetHelper::setDependentFastPropertyValue(std::unique_lock<std::mutex>&, int, com::sun::star::uno::Any const&)
comphelper::OPropertySetHelper::setFastPropertyValues(std::unique_lock<std::mutex>&, int, int*, com::sun::star::uno::Any const*, int)
comphelper::OSLOutputStreamWrapper::OSLOutputStreamWrapper(osl::File&)
comphelper::OSeekableInputWrapper::available()
comphelper::OSeekableInputWrapper::closeInput()
comphelper::OSeekableInputWrapper::getLength()
comphelper::OSeekableInputWrapper::getPosition()
comphelper::OSeekableInputWrapper::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::OSeekableInputWrapper::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
comphelper::OSeekableInputWrapper::seek(long)
comphelper::OSeekableInputWrapper::skipBytes(int)
comphelper::OSeekableInputWrapper::~OSeekableInputWrapper()
comphelper::OStorageHelper::CreateGpgPackageEncryptionData()
comphelper::OStorageHelper::CreatePackageEncryptionData(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::OStorageHelper::GetFileSystemStorageFactory(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OStorageHelper::GetODFVersionFromStorage(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
comphelper::OStorageHelper::GetStorageFromURL2(rtl::OUString const&, int, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::OStorageHelper::IsValidZipEntryFileName(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
comphelper::OStorageHelper::PathHasSegment(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::OStorageHelper::SetCommonStorageEncryptionData(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&, com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::PropertySetInfo::getProperties()
comphelper::PropertySetInfo::getPropertyByName(rtl::OUString const&)
comphelper::PropertySetInfo::hasPropertyByName(rtl::OUString const&)
comphelper::PropertySetInfo::~PropertySetInfo()
comphelper::RefCountedMutex::~RefCountedMutex()
comphelper::RemoveProperty(com::sun::star::uno::Sequence<com::sun::star::beans::Property>&, rtl::OUString const&)
comphelper::SequenceAsHashMap::getAsConstAny(bool) const
comphelper::SequenceAsHashMap::match(comphelper::SequenceAsHashMap const&) const
comphelper::SequenceAsHashMap::operator<<(com::sun::star::uno::Sequence<com::sun::star::beans::NamedValue> const&)
comphelper::SequenceAsHashMap::operator<<(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
comphelper::SimpleFileAccessInteraction::intercepted(ucbhelper::InterceptedInteraction::InterceptedRequest const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
comphelper::SimpleFileAccessInteraction::~SimpleFileAccessInteraction()
comphelper::SimplePasswordRequest::SimplePasswordRequest()
comphelper::SimplePasswordRequest::getContinuations()
comphelper::SimplePasswordRequest::getPassword() const
comphelper::SimplePasswordRequest::getRequest()
comphelper::SimplePasswordRequest::isPassword() const
comphelper::SimplePasswordRequest::~SimplePasswordRequest()
comphelper::SolarMutex::SolarMutex()
comphelper::SolarMutex::~SolarMutex()
comphelper::ThreadPool::decBusyWorker()
comphelper::ThreadPool::incBusyWorker()
comphelper::ThreadPool::popWorkLocked(std::unique_lock<std::mutex>&, bool)
comphelper::ThreadPool::shutdownLocked(std::unique_lock<std::mutex>&)
comphelper::ThreadTask::exec()
comphelper::UnoInterfaceToUniqueIdentifierMapper::getIdentifier(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&) const
comphelper::UnoInterfaceToUniqueIdentifierMapper::registerReference(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
comphelper::anyLess(com::sun::star::uno::Any const&, com::sun::star::uno::Any const&)
comphelper::createEventAttacherManager(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
comphelper::detail::ConfigurationWrapper::createChanges() const
comphelper::detail::ConfigurationWrapper::getGroupReadWrite(std::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&)
comphelper::detail::ConfigurationWrapper::getLocalizedPropertyValue(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
comphelper::detail::ConfigurationWrapper::setLocalizedPropertyValue(std::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&, com::sun::star::uno::Any const&)
comphelper::getNumberFormatProperty(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, int, rtl::OUString const&)
comphelper::getNumberFormatType(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, int)
comphelper::getStandardLessPredicate(com::sun::star::uno::Type const&, com::sun::star::uno::Reference<com::sun::star::i18n::XCollator> const&)
comphelper::isAssignableFrom(com::sun::star::uno::Type const&, com::sun::star::uno::Type const&)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, bool)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, com::sun::star::awt::FontDescriptor const&)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, int)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, rtl::OUString const&)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, short)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, unsigned int)
comphelper::operator<<(com::sun::star::uno::Reference<com::sun::star::io::XObjectOutputStream> const&, unsigned short)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, bool&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, com::sun::star::awt::FontDescriptor&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, int&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, rtl::OUString&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, short&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, unsigned int&)
comphelper::operator>>(com::sun::star::uno::Reference<com::sun::star::io::XObjectInputStream> const&, unsigned short&)
comphelper::string::strip(std::basic_string_view<char, std::char_traits<char> >, char)
comphelper::string::stripEnd(std::basic_string_view<char, std::char_traits<char> >, char)
comphelper::string::stripStart(std::basic_string_view<char, std::char_traits<char> >, char)
comphelper::tryPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, com::sun::star::uno::Any const&, com::sun::star::uno::Any const&, com::sun::star::uno::Type const&)
comphelper::xml::makeXMLChaff()
comphelper::xmlsec::GetCertificateKind(com::sun::star::security::CertificateKind const&)
comphelper::xmlsec::GetContentPart(rtl::OUString const&, com::sun::star::security::CertificateKind const&)
comphelper::xmlsec::GetDNForCertDetailsView(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
comphelper::xmlsec::GetHexString(com::sun::star::uno::Sequence<signed char> const&, char const*, unsigned short)
comphelper::xmlsec::parseDN(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
compileExtensionHelp(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, rtl::OUString const*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, HelpProcessingErrorInfo&)
component_getImplementationEnvironment
compute_dualslacks
compute_feasibilitygap
compute_reducedcosts
compute_theta
compute_violation
connectivity::OColumnsHelper::createDescriptor()
connectivity::OConnectionWrapper::createUniqueId(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, unsigned char*, rtl::OUString const&, rtl::OUString const&)
connectivity::OConnectionWrapper::getImplementationName()
connectivity::OConnectionWrapper::getSupportedServiceNames()
connectivity::OConnectionWrapper::getUnoTunnelId()
connectivity::OConnectionWrapper::setDelegation(com::sun::star::uno::Reference<com::sun::star::uno::XAggregation>&, int&)
connectivity::OConnectionWrapper::supportsService(rtl::OUString const&)
connectivity::ODatabaseMetaDataBase::getTablePrivileges(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&)
connectivity::ODatabaseMetaDataResultSet::acquire()
connectivity::ODatabaseMetaDataResultSet::createArrayHelper() const
connectivity::ODatabaseMetaDataResultSet::get0Value()
connectivity::ODatabaseMetaDataResultSet::get1Value()
connectivity::ODatabaseMetaDataResultSet::getAlterValue()
connectivity::ODatabaseMetaDataResultSet::getBasicValue()
connectivity::ODatabaseMetaDataResultSet::getCreateValue()
connectivity::ODatabaseMetaDataResultSet::getDeleteValue()
connectivity::ODatabaseMetaDataResultSet::getDropValue()
connectivity::ODatabaseMetaDataResultSet::getInfoHelper()
connectivity::ODatabaseMetaDataResultSet::getInsertValue()
connectivity::ODatabaseMetaDataResultSet::getPropertySetInfo()
connectivity::ODatabaseMetaDataResultSet::getQuoteValue()
connectivity::ODatabaseMetaDataResultSet::getReadValue()
connectivity::ODatabaseMetaDataResultSet::getSelectValue()
connectivity::ODatabaseMetaDataResultSet::getUpdateValue()
connectivity::ODatabaseMetaDataResultSet::queryInterface(com::sun::star::uno::Type const&)
connectivity::ODatabaseMetaDataResultSet::release()
connectivity::OIndexesHelper::appendObject(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::OIndexesHelper::createDescriptor()
connectivity::OIndexesHelper::createObject(rtl::OUString const&)
connectivity::OIndexesHelper::dropObject(int, rtl::OUString const&)
connectivity::OIndexesHelper::impl_refresh()
connectivity::OKeyValue::OKeyValue(int)
connectivity::OKeyValue::createKeyValue(int)
connectivity::OKeyValue::~OKeyValue()
connectivity::OKeysHelper::appendObject(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::OKeysHelper::cloneDescriptorColumns(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::OKeysHelper::createDescriptor()
connectivity::OKeysHelper::createObject(rtl::OUString const&)
connectivity::OKeysHelper::dropObject(int, rtl::OUString const&)
connectivity::OKeysHelper::getDropForeignKey() const
connectivity::OKeysHelper::impl_refresh()
connectivity::OResultSetPrivileges::disposing(std::unique_lock<std::mutex>&)
connectivity::OResultSetPrivileges::getValue(int)
connectivity::OResultSetPrivileges::next()
connectivity::ORowSetValue::fill(int, com::sun::star::uno::Reference<com::sun::star::sdb::XColumn> const&)
connectivity::ORowSetValue::fill(int, int, bool, com::sun::star::uno::Reference<com::sun::star::sdbc::XRow> const&)
connectivity::ORowSetValue::fill(int, int, com::sun::star::uno::Reference<com::sun::star::sdbc::XRow> const&)
connectivity::ORowSetValue::getDate() const
connectivity::ORowSetValue::getDateTime() const
connectivity::ORowSetValue::getSequence() const
connectivity::ORowSetValue::getTime() const
connectivity::ORowSetValue::getUInt8() const
connectivity::ORowSetValue::impl_fill(int, bool, connectivity::detail::IValueSource const&)
connectivity::ORowSetValue::operator=(com::sun::star::uno::Any const&)
connectivity::ORowSetValue::operator=(com::sun::star::uno::Sequence<signed char> const&)
connectivity::ORowSetValue::operator=(connectivity::ORowSetValue const&)
connectivity::ORowSetValue::setSigned(bool)
connectivity::OSQLParseNode::OSQLParseNode(char const*, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::OSQLParseNode(connectivity::OSQLParseNode const&)
connectivity::OSQLParseNode::OSQLParseNode(rtl::OUString, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::OSQLParseNode(std::basic_string_view<char, std::char_traits<char> >, connectivity::SQLNodeType, unsigned int)
connectivity::OSQLParseNode::absorptions(connectivity::OSQLParseNode*&)
connectivity::OSQLParseNode::addDateValue(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::append(connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::compress(connectivity::OSQLParseNode*&)
connectivity::OSQLParseNode::convertDateString(connectivity::SQLParseNodeParameter const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::OSQLParseNode::convertDateTimeString(connectivity::SQLParseNodeParameter const&, rtl::OUString const&)
connectivity::OSQLParseNode::convertTimeString(connectivity::SQLParseNodeParameter const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::OSQLParseNode::disjunctiveNormalForm(connectivity::OSQLParseNode*&)
connectivity::OSQLParseNode::eraseBraces(connectivity::OSQLParseNode*&)
connectivity::OSQLParseNode::getByRule(connectivity::OSQLParseNode::Rule) const
connectivity::OSQLParseNode::getKnownRuleID() const
connectivity::OSQLParseNode::getTableComponents(connectivity::OSQLParseNode const*, com::sun::star::uno::Any&, rtl::OUString&, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::sdbc::XDatabaseMetaData> const&)
connectivity::OSQLParseNode::getTableRange(connectivity::OSQLParseNode const*)
connectivity::OSQLParseNode::impl_parseLikeNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&, bool) const
connectivity::OSQLParseNode::impl_parseNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&, bool) const
connectivity::OSQLParseNode::impl_parseTableNameNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::impl_parseTableRangeNodeToString_throw(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::insert(unsigned int, connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::negateSearchCondition(connectivity::OSQLParseNode*&, bool)
connectivity::OSQLParseNode::operator=(connectivity::OSQLParseNode const&)
connectivity::OSQLParseNode::operator==(connectivity::OSQLParseNode const&) const
connectivity::OSQLParseNode::parseLeaf(rtl::OUStringBuffer&, connectivity::SQLParseNodeParameter const&) const
connectivity::OSQLParseNode::parseNodeToExecutableStatement(rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, connectivity::OSQLParser&, com::sun::star::sdbc::SQLException*) const
connectivity::OSQLParseNode::parseNodeToPredicateStr(rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, com::sun::star::lang::Locale const&, rtl::OUString const&, connectivity::IParseContext const*) const
connectivity::OSQLParseNode::parseNodeToStr(rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, com::sun::star::lang::Locale const&, connectivity::IParseContext const*, bool, bool, rtl::OUString const&, bool) const
connectivity::OSQLParseNode::removeAt(unsigned int)
connectivity::OSQLParseNode::replaceAndDelete(connectivity::OSQLParseNode*, connectivity::OSQLParseNode*)
connectivity::OSQLParseNode::replaceNodeValue(rtl::OUString const&, rtl::OUString const&)
connectivity::OSQLParseNode::substituteParameterNames(connectivity::OSQLParseNode const*)
connectivity::OSQLParseNode::~OSQLParseNode()
connectivity::OSQLParseTreeIterator::OSQLParseTreeIterator(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, connectivity::OSQLParser const&)
connectivity::OSQLParseTreeIterator::dispose()
connectivity::OSQLParseTreeIterator::getColumnAlias(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::getColumnRange(connectivity::OSQLParseNode const*, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString&, rtl::OUString&)
connectivity::OSQLParseTreeIterator::getColumnRange(connectivity::OSQLParseNode const*, rtl::OUString&, rtl::OUString&) const
connectivity::OSQLParseTreeIterator::getJoinConditions() const
connectivity::OSQLParseTreeIterator::getOrderTree() const
connectivity::OSQLParseTreeIterator::getSimpleGroupByTree() const
connectivity::OSQLParseTreeIterator::getSimpleHavingTree() const
connectivity::OSQLParseTreeIterator::getSimpleOrderTree() const
connectivity::OSQLParseTreeIterator::getSimpleWhereTree() const
connectivity::OSQLParseTreeIterator::getTables() const
connectivity::OSQLParseTreeIterator::getWhereTree() const
connectivity::OSQLParseTreeIterator::isCaseSensitive() const
connectivity::OSQLParseTreeIterator::isTableNode(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::setParseTree(connectivity::OSQLParseNode const*)
connectivity::OSQLParseTreeIterator::traverseAll()
connectivity::OSQLParseTreeIterator::~OSQLParseTreeIterator()
connectivity::OSQLParser::RuleID(connectivity::OSQLParseNode::Rule)
connectivity::OSQLParser::RuleIDToRule(unsigned int)
connectivity::OSQLParser::SQLlex()
connectivity::OSQLParser::StrToRuleID(rtl::OString const&)
connectivity::OSQLParser::TokenIDToStr(unsigned int, connectivity::IParseContext const*)
connectivity::OSQLParser::buildComparisonRule(connectivity::OSQLParseNode*&, connectivity::OSQLParseNode*)
connectivity::OSQLParser::buildDate(int, connectivity::OSQLParseNode*&)
connectivity::OSQLParser::buildLikeRule(connectivity::OSQLParseNode*, connectivity::OSQLParseNode*&, connectivity::OSQLParseNode const*)
connectivity::OSQLParser::buildNode(connectivity::OSQLParseNode*&, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*)
connectivity::OSQLParser::buildNode_Date(double const&, int)
connectivity::OSQLParser::buildNode_STR_NUM(connectivity::OSQLParseNode*&)
connectivity::OSQLParser::buildPredicateRule(connectivity::OSQLParseNode*&, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*, connectivity::OSQLParseNode*)
connectivity::OSQLParser::buildStringNodes(connectivity::OSQLParseNode*&)
connectivity::OSQLParser::convertNode(int, connectivity::OSQLParseNode*)
connectivity::OSQLParser::error(char const*)
connectivity::OSQLParser::extractDate(connectivity::OSQLParseNode const*, double&)
connectivity::OSQLParser::getErrorHelper() const
connectivity::OSQLParser::getFunctionParameterType(unsigned int, unsigned int)
connectivity::OSQLParser::getFunctionReturnType(std::basic_string_view<char16_t, std::char_traits<char16_t> >, connectivity::IParseContext const*)
connectivity::OSQLParser::getMutex()
connectivity::OSQLParser::killThousandSeparator(connectivity::OSQLParseNode*)
connectivity::OSQLParser::parseTree(rtl::OUString&, rtl::OUString const&, bool)
connectivity::OSQLParser::reduceLiteral(connectivity::OSQLParseNode*&, bool)
connectivity::OSQLParser::setParseTree(connectivity::OSQLParseNode*)
connectivity::OSQLParser::stringToDouble(rtl::OUString const&, short)
connectivity::OSkipDeletedSet::OSkipDeletedSet(connectivity::IResultSetHelper*)
connectivity::OSkipDeletedSet::clear()
connectivity::OSkipDeletedSet::deletePosition(int)
connectivity::OSkipDeletedSet::getMappedPosition(int) const
connectivity::OSkipDeletedSet::insertNewPosition(int)
connectivity::OSkipDeletedSet::moveAbsolute(int, bool)
connectivity::OSkipDeletedSet::skipDeleted(connectivity::IResultSetHelper::Movement, int, bool)
connectivity::OSkipDeletedSet::~OSkipDeletedSet()
connectivity::OSortIndex::AddKeyValue(std::unique_ptr<connectivity::OKeyValue, std::default_delete<connectivity::OKeyValue> >)
connectivity::OSortIndex::CreateKeySet()
connectivity::OSortIndex::Freeze()
connectivity::OSortIndex::OSortIndex(std::vector<connectivity::OKeyType, std::allocator<connectivity::OKeyType> >&&, std::vector<connectivity::TAscendingOrder, std::allocator<connectivity::TAscendingOrder> >&&)
connectivity::OSortIndex::~OSortIndex()
connectivity::OTableHelper::addKey(rtl::OUString const&, std::shared_ptr<connectivity::sdbcx::KeyProperties> const&)
connectivity::OTableHelper::getAlterService() const
connectivity::OTableHelper::getColumnDescription(rtl::OUString const&) const
connectivity::OTableHelper::getIndexService() const
connectivity::OTableHelper::getKeyProperties(rtl::OUString const&) const
connectivity::OTableHelper::getKeyService() const
connectivity::OTableHelper::getRenameService() const
connectivity::OTableHelper::getTableName()
connectivity::OTableHelper::refreshForeignKeys(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
connectivity::OTableHelper::refreshPrimaryKeys(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
connectivity::OTableHelper::rename(rtl::OUString const&)
connectivity::QuotedTokenizedString::GetTokenCount(char16_t, char16_t) const
connectivity::QuotedTokenizedString::GetTokenSpecial(int&, char16_t, char16_t) const
connectivity::component::OComponentPreparedStatement::createResultSet()
connectivity::component::OComponentPreparedStatement::getImplementationName()
connectivity::component::OComponentPreparedStatement::getSupportedServiceNames()
connectivity::component::OComponentPreparedStatement::supportsService(rtl::OUString const&)
connectivity::component::OComponentStatement::createResultSet()
connectivity::component::OComponentStatement::getImplementationName()
connectivity::component::OComponentStatement::getSupportedServiceNames()
connectivity::component::OComponentStatement::supportsService(rtl::OUString const&)
connectivity::dbase::dbfDecodeCharset(unsigned short&, unsigned char, unsigned char)
connectivity::existsJavaClassByName(rtl::Reference<jvmaccess::VirtualMachine> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
connectivity::file::OBoolOperator::Exec(std::stack<connectivity::file::OOperand*, std::deque<connectivity::file::OOperand*, std::allocator<connectivity::file::OOperand*> > >&)
connectivity::file::OBoolOperator::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OConnection::construct(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::file::OConnection::createCatalog()
connectivity::file::OConnection::createStatement()
connectivity::file::OConnection::getDir() const
connectivity::file::OConnection::getImplementationName()
connectivity::file::OConnection::getMetaData()
connectivity::file::OConnection::getSupportedServiceNames()
connectivity::file::OConnection::getUnoTunnelId()
connectivity::file::OConnection::matchesExtension(rtl::OUString const&) const
connectivity::file::OConnection::prepareCall(rtl::OUString const&)
connectivity::file::OConnection::prepareStatement(rtl::OUString const&)
connectivity::file::OConnection::supportsService(rtl::OUString const&)
connectivity::file::OConnection::throwUrlNotValid(rtl::OUString const&, rtl::OUString const&)
connectivity::file::ODatabaseMetaData::ODatabaseMetaData(connectivity::file::OConnection*)
connectivity::file::ODatabaseMetaData::getColumns(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::file::ODatabaseMetaData::getMaxBinaryLiteralLength()
connectivity::file::ODatabaseMetaData::getMaxCharLiteralLength()
connectivity::file::ODatabaseMetaData::getMaxColumnNameLength()
connectivity::file::ODatabaseMetaData::getMaxColumnsInIndex()
connectivity::file::ODatabaseMetaData::getMaxColumnsInTable()
connectivity::file::ODatabaseMetaData::getTables(com::sun::star::uno::Any const&, rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&)
connectivity::file::ODatabaseMetaData::getURL()
connectivity::file::ODatabaseMetaData::impl_getTypeInfo_throw()
connectivity::file::ODatabaseMetaData::~ODatabaseMetaData()
connectivity::file::OFileCatalog::refreshTables()
connectivity::file::OFileDriver::acceptsURL(rtl::OUString const&)
connectivity::file::OFileDriver::connect(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::file::OFileDriver::getImplementationName()
connectivity::file::OFileDriver::getPropertyInfo(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::file::OFileTable::FileClose()
connectivity::file::OFileTable::OFileTable(connectivity::sdbcx::OCollection*, connectivity::file::OConnection*)
connectivity::file::OFileTable::OFileTable(connectivity::sdbcx::OCollection*, connectivity::file::OConnection*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
connectivity::file::OFileTable::createStream_simpleError(rtl::OUString const&, StreamMode)
connectivity::file::OFileTable::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OFileTable::refreshColumns()
connectivity::file::OFileTable::refreshIndexes()
connectivity::file::OOp_ISNOTNULL::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OOp_ISNULL::Exec(std::stack<connectivity::file::OOperand*, std::deque<connectivity::file::OOperand*, std::allocator<connectivity::file::OOperand*> > >&)
connectivity::file::OOp_ISNULL::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OOp_LIKE::operate(connectivity::file::OOperand const*, connectivity::file::OOperand const*) const
connectivity::file::OPreparedStatement::AddParameter(connectivity::OSQLParseNode const*, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::file::OPreparedStatement::acquire()
connectivity::file::OPreparedStatement::checkAndResizeParameters(int)
connectivity::file::OPreparedStatement::clearParameters()
connectivity::file::OPreparedStatement::close()
connectivity::file::OPreparedStatement::construct(rtl::OUString const&)
connectivity::file::OPreparedStatement::createResultSet()
connectivity::file::OPreparedStatement::describeColumn(connectivity::OSQLParseNode const*, connectivity::OSQLParseNode const*, com::sun::star::uno::Reference<com::sun::star::sdbcx::XColumnsSupplier> const&)
connectivity::file::OPreparedStatement::describeParameter()
connectivity::file::OPreparedStatement::disposing()
connectivity::file::OPreparedStatement::execute()
connectivity::file::OPreparedStatement::executeQuery()
connectivity::file::OPreparedStatement::executeUpdate()
connectivity::file::OPreparedStatement::getConnection()
connectivity::file::OPreparedStatement::getImplementationName()
connectivity::file::OPreparedStatement::getMetaData()
connectivity::file::OPreparedStatement::getSupportedServiceNames()
connectivity::file::OPreparedStatement::getTypes()
connectivity::file::OPreparedStatement::initResultSet(connectivity::file::OResultSet*)
connectivity::file::OPreparedStatement::initializeResultSet(connectivity::file::OResultSet*)
connectivity::file::OPreparedStatement::makeResultSet()
connectivity::file::OPreparedStatement::parseParamterElem(rtl::OUString const&, connectivity::OSQLParseNode*)
connectivity::file::OPreparedStatement::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OPreparedStatement::release()
connectivity::file::OPreparedStatement::scanParameter(connectivity::OSQLParseNode*, std::vector<connectivity::OSQLParseNode*, std::allocator<connectivity::OSQLParseNode*> >&)
connectivity::file::OPreparedStatement::setArray(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XArray> const&)
connectivity::file::OPreparedStatement::setBinaryStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, int)
connectivity::file::OPreparedStatement::setBlob(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XBlob> const&)
connectivity::file::OPreparedStatement::setBoolean(int, unsigned char)
connectivity::file::OPreparedStatement::setByte(int, signed char)
connectivity::file::OPreparedStatement::setBytes(int, com::sun::star::uno::Sequence<signed char> const&)
connectivity::file::OPreparedStatement::setCharacterStream(int, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, int)
connectivity::file::OPreparedStatement::setClob(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XClob> const&)
connectivity::file::OPreparedStatement::setDate(int, com::sun::star::util::Date const&)
connectivity::file::OPreparedStatement::setDouble(int, double)
connectivity::file::OPreparedStatement::setFloat(int, float)
connectivity::file::OPreparedStatement::setInt(int, int)
connectivity::file::OPreparedStatement::setLong(int, long)
connectivity::file::OPreparedStatement::setNull(int, int)
connectivity::file::OPreparedStatement::setObject(int, com::sun::star::uno::Any const&)
connectivity::file::OPreparedStatement::setObjectNull(int, int, rtl::OUString const&)
connectivity::file::OPreparedStatement::setObjectWithInfo(int, com::sun::star::uno::Any const&, int, int)
connectivity::file::OPreparedStatement::setParameter(int, connectivity::ORowSetValue const&)
connectivity::file::OPreparedStatement::setRef(int, com::sun::star::uno::Reference<com::sun::star::sdbc::XRef> const&)
connectivity::file::OPreparedStatement::setShort(int, short)
connectivity::file::OPreparedStatement::setString(int, rtl::OUString const&)
connectivity::file::OPreparedStatement::setTime(int, com::sun::star::util::Time const&)
connectivity::file::OPreparedStatement::setTimestamp(int, com::sun::star::util::DateTime const&)
connectivity::file::OPreparedStatement::supportsService(rtl::OUString const&)
connectivity::file::OPreparedStatement::~OPreparedStatement()
connectivity::file::OStatement::acquire()
connectivity::file::OStatement::createResultSet()
connectivity::file::OStatement::execute(rtl::OUString const&)
connectivity::file::OStatement::executeQuery(rtl::OUString const&)
connectivity::file::OStatement::executeUpdate(rtl::OUString const&)
connectivity::file::OStatement::getConnection()
connectivity::file::OStatement::getImplementationName()
connectivity::file::OStatement::getSupportedServiceNames()
connectivity::file::OStatement::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OStatement::release()
connectivity::file::OStatement::supportsService(rtl::OUString const&)
connectivity::file::OStatement_BASE2::disposing()
connectivity::file::OStatement_BASE2::release()
connectivity::file::OStatement_Base::GetAssignValues()
connectivity::file::OStatement_Base::ParseAssignValues(std::vector<rtl::OUString, std::allocator<rtl::OUString> > const&, connectivity::OSQLParseNode*, int)
connectivity::file::OStatement_Base::SetAssignValue(rtl::OUString const&, rtl::OUString const&, bool, unsigned int)
connectivity::file::OStatement_Base::acquire()
connectivity::file::OStatement_Base::analyzeSQL()
connectivity::file::OStatement_Base::cancel()
connectivity::file::OStatement_Base::clearWarnings()
connectivity::file::OStatement_Base::close()
connectivity::file::OStatement_Base::closeResultSet()
connectivity::file::OStatement_Base::construct(rtl::OUString const&)
connectivity::file::OStatement_Base::createArrayHelper() const
connectivity::file::OStatement_Base::createColumnMapping()
connectivity::file::OStatement_Base::disposeResultSet()
connectivity::file::OStatement_Base::disposing()
connectivity::file::OStatement_Base::getInfoHelper()
connectivity::file::OStatement_Base::getPropertySetInfo()
connectivity::file::OStatement_Base::getTypes()
connectivity::file::OStatement_Base::getWarnings()
connectivity::file::OStatement_Base::initializeResultSet(connectivity::file::OResultSet*)
connectivity::file::OStatement_Base::parseParamterElem(rtl::OUString const&, connectivity::OSQLParseNode*)
connectivity::file::OStatement_Base::queryInterface(com::sun::star::uno::Type const&)
connectivity::file::OStatement_Base::setOrderbyColumn(connectivity::OSQLParseNode const*, connectivity::OSQLParseNode const*)
connectivity::file::OStatement_Base::~OStatement_Base()
connectivity::file::OTables::createObject(rtl::OUString const&)
connectivity::find(__gnu_cxx::__normal_iterator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > >, __gnu_cxx::__normal_iterator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > > const&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, comphelper::UStringMixEqual const&)
connectivity::findRealName(__gnu_cxx::__normal_iterator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > > const&, __gnu_cxx::__normal_iterator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const*, std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> > > > const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, comphelper::UStringMixEqual const&)
connectivity::odbc::ODBCDriver::ODBCDriver(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>)
connectivity::odbc::ODBCDriver::acceptsURL(rtl::OUString const&)
connectivity::odbc::ODBCDriver::connect(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::odbc::ODBCDriver::disposing()
connectivity::odbc::ODBCDriver::getImplementationName()
connectivity::odbc::ODBCDriver::getMajorVersion()
connectivity::odbc::ODBCDriver::getMinorVersion()
connectivity::odbc::ODBCDriver::getPropertyInfo(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
connectivity::odbc::ODBCDriver::getSupportedServiceNames()
connectivity::odbc::ODBCDriver::supportsService(rtl::OUString const&)
connectivity::odbc::OStatement_BASE2::disposing()
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, int&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, rtl::OUString&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, unsigned short)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, unsigned int&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::GetInfo(connectivity::odbc::OConnection const*, void*, unsigned short, unsigned short&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::MapOdbcType2Jdbc(short)
connectivity::odbc::OTools::ThrowException(connectivity::odbc::OConnection const*, short, void*, short, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, bool)
connectivity::odbc::OTools::bindValue(connectivity::odbc::OConnection const*, void*, int, short, short, void const*, void*, long*, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, unsigned short, bool)
connectivity::odbc::OTools::getBindTypes(bool, bool, short, short&, short&)
connectivity::odbc::OTools::getBytesValue(connectivity::odbc::OConnection const*, void*, int, short, bool&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
connectivity::odbc::OTools::getStringValue(connectivity::odbc::OConnection const*, void*, int, short, bool&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, unsigned short)
connectivity::odbc::OTools::getValue(connectivity::odbc::OConnection const*, void*, int, short, bool&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, void*, long)
connectivity::odbc::OTools::jdbcTypeToOdbc(int)
connectivity::sdbcx::IObjectCollection::~IObjectCollection()
connectivity::sdbcx::OCollection::clear_NoDispose()
connectivity::sdbcx::OCollection::cloneDescriptor(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
connectivity::sdbcx::OCollection::disposeElements()
connectivity::sdbcx::OCollection::dropImpl(int, bool)
connectivity::sdbcx::OCollection::notifyElementRemoved(rtl::OUString const&)
connectivity::sdbcx::OCollection::renameObject(rtl::OUString const&, rtl::OUString const&)
connectivity::sdbcx::OColumn::construct()
connectivity::sdbcx::OColumn::createArrayHelper(int) const
connectivity::sdbcx::OColumn::getInfoHelper()
connectivity::sdbcx::OColumn::getSupportedServiceNames()
connectivity::sdbcx::ODescriptor::ODescriptor(cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, bool, bool)
connectivity::sdbcx::ODescriptor::getTypes()
connectivity::sdbcx::ODescriptor::setNew(bool)
connectivity::sdbcx::ODescriptor::~ODescriptor()
connectivity::sdbcx::OGroup::OGroup(bool)
connectivity::sdbcx::OGroup::OGroup(rtl::OUString const&, bool)
connectivity::sdbcx::OGroup::acquire()
connectivity::sdbcx::OGroup::createArrayHelper() const
connectivity::sdbcx::OGroup::disposing()
connectivity::sdbcx::OGroup::getGrantablePrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OGroup::getImplementationName()
connectivity::sdbcx::OGroup::getInfoHelper()
connectivity::sdbcx::OGroup::getName()
connectivity::sdbcx::OGroup::getPrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OGroup::getPropertySetInfo()
connectivity::sdbcx::OGroup::getSupportedServiceNames()
connectivity::sdbcx::OGroup::getTypes()
connectivity::sdbcx::OGroup::getUsers()
connectivity::sdbcx::OGroup::grantPrivileges(rtl::OUString const&, int, int)
connectivity::sdbcx::OGroup::queryInterface(com::sun::star::uno::Type const&)
connectivity::sdbcx::OGroup::release()
connectivity::sdbcx::OGroup::revokePrivileges(rtl::OUString const&, int, int)
connectivity::sdbcx::OGroup::setName(rtl::OUString const&)
connectivity::sdbcx::OGroup::supportsService(rtl::OUString const&)
connectivity::sdbcx::OGroup::~OGroup()
connectivity::sdbcx::OKey::OKey(bool)
connectivity::sdbcx::OKey::OKey(rtl::OUString const&, std::shared_ptr<connectivity::sdbcx::KeyProperties>, bool)
connectivity::sdbcx::OKey::acquire()
connectivity::sdbcx::OKey::construct()
connectivity::sdbcx::OKey::createArrayHelper(int) const
connectivity::sdbcx::OKey::createDataDescriptor()
connectivity::sdbcx::OKey::disposing()
connectivity::sdbcx::OKey::getColumns()
connectivity::sdbcx::OKey::getImplementationName()
connectivity::sdbcx::OKey::getInfoHelper()
connectivity::sdbcx::OKey::getName()
connectivity::sdbcx::OKey::getPropertySetInfo()
connectivity::sdbcx::OKey::getSupportedServiceNames()
connectivity::sdbcx::OKey::getTypes()
connectivity::sdbcx::OKey::queryInterface(com::sun::star::uno::Type const&)
connectivity::sdbcx::OKey::release()
connectivity::sdbcx::OKey::setName(rtl::OUString const&)
connectivity::sdbcx::OKey::supportsService(rtl::OUString const&)
connectivity::sdbcx::OKey::~OKey()
connectivity::sdbcx::OTable::OTable(connectivity::sdbcx::OCollection*, bool)
connectivity::sdbcx::OTable::OTable(connectivity::sdbcx::OCollection*, bool, rtl::OUString const&, rtl::OUString, rtl::OUString, rtl::OUString, rtl::OUString)
connectivity::sdbcx::OTable::disposing()
connectivity::sdbcx::OTable::getName()
connectivity::sdbcx::OTable::refreshColumns()
connectivity::sdbcx::OTable::refreshIndexes()
connectivity::sdbcx::OTable::refreshKeys()
connectivity::sdbcx::OTable::~OTable()
connectivity::sdbcx::OUser::changePassword(rtl::OUString const&, rtl::OUString const&)
connectivity::sdbcx::OUser::getGrantablePrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OUser::getPrivileges(rtl::OUString const&, int)
connectivity::sdbcx::OUser::grantPrivileges(rtl::OUString const&, int, int)
connectivity::sdbcx::OUser::revokePrivileges(rtl::OUString const&, int, int)
connectivity_calc_ODriver
connectivity_dbase_ODriver
connectivity_flat_ODriver
connectivity_hsqldb_ODriverDelegator_implementation
connectivity_writer_ODriver
construct_duals
construct_sensitivity_duals
construct_sensitivity_obj
construct_solution
convertPrimitive2DSequenceToBitmapEx(std::deque<com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive2D>, std::allocator<com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive2D> > > const&, basegfx::B2DRange const&, unsigned int, o3tl::Length, std::optional<Size> const&)
copy_field(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
copy_hash_table
copy_lp
countActiveLink
countInactiveLink
countsUndoLadder
covariant return thunk to ScEditWindow::GetEditEngine() const
cppcanvas::VCLFactory::createBitmapCanvas(com::sun::star::uno::Reference<com::sun::star::rendering::XBitmapCanvas> const&)
cppu_Any_extraction_failure_msg@@UDK_3.1
cppu_unsatisfied_iquery_msg@@UDK_3_0_0
cppu_unsatisfied_iset_msg@@UDK_3.3
cppunitTestPlugIn
cpuid::getCpuInstructionSetFlags()
crash_basis
createAllObjectProperties(SbxObject*)
createBlendFrame(Size const&, unsigned char, Color, Color)
createLink
createPQExpBuffer
createPackedVector
createUndoLadder
create_BB
create_SOSgroup
create_SOSrec
create_SalInstance
create_hash_table
css_comp_Impress_oox_PowerPointExport
daxpy
dbaccess::operator==(dbaccess::ODsnTypeCollection::TypeIterator const&, dbaccess::ODsnTypeCollection::TypeIterator const&)
dbahsql::CreateStmtParser::parseColumnPart(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbahsql::CreateStmtParser::parsePrimaryKeys(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbahsql::FbCreateStmtParser::appendPrimaryKeyPart(rtl::OUStringBuffer&) const
dbahsql::FbCreateStmtParser::ensureProperTableLengths() const
dbaui::UndoManager::GetSfxUndoManager() const
dbaui::UndoManager::UndoManager(cppu::OWeakObject&, osl::Mutex&)
dbaui::UndoManager::acquire()
dbaui::UndoManager::release()
dbtools::DBTypeConversion::convertUnicodeString(rtl::OUString const&, rtl::OString&, unsigned short)
dbtools::DBTypeConversion::convertUnicodeStringToLength(rtl::OUString const&, rtl::OString&, int, unsigned short)
dbtools::DBTypeConversion::getNULLDate(com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatsSupplier> const&)
dbtools::DBTypeConversion::getNsFromTime(com::sun::star::util::Time const&)
dbtools::DBTypeConversion::setValue(com::sun::star::uno::Reference<com::sun::star::sdb::XColumnUpdate> const&, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatter> const&, com::sun::star::util::Date const&, rtl::OUString const&, int, short, short)
dbtools::DBTypeConversion::setValue(com::sun::star::uno::Reference<com::sun::star::sdb::XColumnUpdate> const&, com::sun::star::util::Date const&, double const&, short)
dbtools::DBTypeConversion::toDate(double, com::sun::star::util::Date const&)
dbtools::DBTypeConversion::toDateTime(double, com::sun::star::util::Date const&)
dbtools::DBTypeConversion::toDays(com::sun::star::util::Date const&, com::sun::star::util::Date const&)
dbtools::DBTypeConversion::toDouble(com::sun::star::util::DateTime const&, com::sun::star::util::Date const&)
dbtools::DBTypeConversion::toSQLString(int, com::sun::star::uno::Any const&, com::sun::star::uno::Reference<com::sun::star::script::XTypeConverter> const&)
dbtools::DBTypeConversion::toTime(double, short)
dbtools::DatabaseMetaData::DatabaseMetaData()
dbtools::DatabaseMetaData::DatabaseMetaData(dbtools::DatabaseMetaData const&)
dbtools::DatabaseMetaData::DatabaseMetaData(dbtools::DatabaseMetaData&&)
dbtools::DatabaseMetaData::displayEmptyTableFolders() const
dbtools::DatabaseMetaData::generateASBeforeCorrelationName() const
dbtools::DatabaseMetaData::getCatalogSeparator() const
dbtools::DatabaseMetaData::getIdentifierQuoteString() const
dbtools::DatabaseMetaData::isAutoIncrementPrimaryKey() const
dbtools::DatabaseMetaData::isConnected() const
dbtools::DatabaseMetaData::operator=(dbtools::DatabaseMetaData const&)
dbtools::DatabaseMetaData::operator=(dbtools::DatabaseMetaData&&)
dbtools::DatabaseMetaData::restrictIdentifiersToSQL92() const
dbtools::DatabaseMetaData::shouldEscapeDateTime() const
dbtools::DatabaseMetaData::shouldSubstituteParameterNames() const
dbtools::DatabaseMetaData::supportsColumnAliasInOrderBy() const
dbtools::DatabaseMetaData::supportsPrimaryKeys() const
dbtools::DatabaseMetaData::supportsRelations() const
dbtools::DatabaseMetaData::supportsSubqueriesInFrom() const
dbtools::DatabaseMetaData::supportsThreads() const
dbtools::DatabaseMetaData::supportsUserAdministration(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&) const
dbtools::FormattedColumnValue::getColumn() const
dbtools::FormattedColumnValue::getKeyType() const
dbtools::FormattedColumnValue::setFormattedValue(rtl::OUString const&) const
dbtools::OAutoConnectionDisposer::clearConnection()
dbtools::OAutoConnectionDisposer::cursorMoved(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::disposing(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
dbtools::OAutoConnectionDisposer::rowChanged(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::rowSetChanged(com::sun::star::lang::EventObject const&)
dbtools::OAutoConnectionDisposer::startPropertyListening(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::OAutoConnectionDisposer::startRowSetListening()
dbtools::OAutoConnectionDisposer::stopPropertyListening(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::OAutoConnectionDisposer::stopRowSetListening()
dbtools::OPropertyMap::OPropertyMap()
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::sdbc::SQLException const&)
dbtools::SQLExceptionInfo::SQLExceptionInfo(com::sun::star::sdbc::SQLWarning const&)
dbtools::SQLExceptionInfo::SQLExceptionInfo(rtl::OUString const&)
dbtools::SQLExceptionInfo::append(dbtools::SQLExceptionInfo::TYPE, rtl::OUString const&, rtl::OUString const&, int)
dbtools::SQLExceptionInfo::createException(dbtools::SQLExceptionInfo::TYPE, rtl::OUString const&, rtl::OUString const&, int)
dbtools::SQLExceptionInfo::doThrow()
dbtools::SQLExceptionInfo::getLastException(com::sun::star::sdbc::SQLException*)
dbtools::SQLExceptionInfo::implDetermineType()
dbtools::SQLExceptionInfo::isKindOf(dbtools::SQLExceptionInfo::TYPE) const
dbtools::SQLExceptionInfo::operator com::sun::star::sdb::SQLContext const*() const
dbtools::SQLExceptionInfo::operator com::sun::star::sdbc::SQLException const*() const
dbtools::SQLExceptionInfo::operator=(com::sun::star::sdb::SQLErrorEvent const&)
dbtools::SQLExceptionInfo::operator=(com::sun::star::uno::Any const&)
dbtools::SQLExceptionInfo::prepend(rtl::OUString const&)
dbtools::askForParameters(com::sun::star::uno::Reference<com::sun::star::sdb::XSingleSelectQueryComposer> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XParameters> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionHandler> const&, std::vector<bool, std::allocator<bool> > const&)
dbtools::canDelete(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::collectColumnInformation(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::multimap<rtl::OUString, std::pair<std::pair<bool, bool>, int>, comphelper::UStringMixLess, std::allocator<std::pair<rtl::OUString const, std::pair<std::pair<bool, bool>, int> > > >&)
dbtools::convertName2SQLName(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbtools::createSDBCXColumn(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&, bool, bool, bool, bool, int)
dbtools::createStandardCreateStatement(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, dbtools::ISQLStatementHelper*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbtools::createStandardKeyStatement(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
dbtools::createStandardTypePart(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbtools::createUniqueName(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const&, bool)
dbtools::createUniqueName(com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, bool)
dbtools::findDataSource(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
dbtools::getBooleanDataSourceSetting(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, char const*)
dbtools::getBooleanDataSourceSetting(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
dbtools::getDataDefinitionByURLAndConnection(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
dbtools::getDataSourceSetting(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, char const*, com::sun::star::uno::Any&)
dbtools::getDataSourceSetting(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, com::sun::star::uno::Any&)
dbtools::getDefaultNumberFormat(int, int, bool, com::sun::star::uno::Reference<com::sun::star::util::XNumberFormatTypes> const&, com::sun::star::lang::Locale const&)
dbtools::getDefaultReportEngineServiceName(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
dbtools::getPrimaryKeyColumns_throw(com::sun::star::uno::Any const&)
dbtools::getPrimaryKeyColumns_throw(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::getSearchColumnFlag(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, int)
dbtools::getStandardSQLState(dbtools::StandardSQLState)
dbtools::getTableFields(com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, rtl::OUString const&)
dbtools::isAggregateColumn(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::isAggregateColumn(com::sun::star::uno::Reference<com::sun::star::container::XNameAccess> const&, rtl::OUString const&)
dbtools::isAggregateColumn(com::sun::star::uno::Reference<com::sun::star::sdb::XSingleSelectQueryComposer> const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::isDataSourcePropertyEnabled(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, bool)
dbtools::isValidSQLName(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dbtools::operator==(dbtools::OCharsetMap::CharsetIterator const&, dbtools::OCharsetMap::CharsetIterator const&)
dbtools::param::ParameterWrapper::ParameterWrapper(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
dbtools::param::ParameterWrapper::ParameterWrapper(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XParameters> const&, std::vector<int, std::allocator<int> >&&)
dbtools::param::ParameterWrapper::acquire()
dbtools::param::ParameterWrapper::convertFastPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, int, com::sun::star::uno::Any const&)
dbtools::param::ParameterWrapper::dispose()
dbtools::param::ParameterWrapper::getFastPropertyValue(com::sun::star::uno::Any&, int) const
dbtools::param::ParameterWrapper::getImplementationId()
dbtools::param::ParameterWrapper::getInfoHelper()
dbtools::param::ParameterWrapper::getPropertySetInfo()
dbtools::param::ParameterWrapper::getTypes()
dbtools::param::ParameterWrapper::impl_getPseudoAggregatePropertyName(int) const
dbtools::param::ParameterWrapper::queryInterface(com::sun::star::uno::Type const&)
dbtools::param::ParameterWrapper::release()
dbtools::param::ParameterWrapper::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
dbtools::param::ParameterWrapper::~ParameterWrapper()
dbtools::prependErrorInfo(com::sun::star::sdbc::SQLException const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, dbtools::StandardSQLState)
dbtools::setObjectWithInfo(com::sun::star::uno::Reference<com::sun::star::sdbc::XParameters> const&, int, com::sun::star::uno::Any const&, int, int)
dbtools::setObjectWithInfo(com::sun::star::uno::Reference<com::sun::star::sdbc::XParameters> const&, int, connectivity::ORowSetValue const&, int, int)
dbtools::throwFeatureNotImplementedRuntimeException(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
dbtools::throwFunctionNotSupportedRuntimeException(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
dbtools::throwFunctionNotSupportedSQLException(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
dbtools::throwInvalidIndexException(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, com::sun::star::uno::Any const&)
dbtools::throwSQLException(rtl::OUString const&, dbtools::StandardSQLState, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, int)
dbtools::throwSQLException(rtl::OUString const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, int)
dcopy
ddot
ddrand
deInitXmlSec()
debug_print
debug_print_bounds
debug_print_solution
decrementUndoLadder
default_basis
del_column
del_columnex
del_constraint
del_constraintex
del_splitvars
del_varnameex
delete_SOSrec
der_alloc
desktop::LibLibreOffice_Impl::dumpState(rtl::OStringBuffer&)
desktop::Lockfile::isStale() const
desktop::Lockfile::syncToFile() const
destroyPQExpBuffer
displayException(com::sun::star::sdb::SQLContext const&, com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&)
dl_cairo_surface_set_device_scale(_cairo_surface*, double, double)
dload
dnormi
dp_misc::DescriptionInfoset::getDependencies() const
dp_misc::DescriptionInfoset::getIconURL(bool) const
dp_misc::DescriptionInfoset::getLocalizedDescriptionURL() const
dp_misc::DescriptionInfoset::getLocalizedDisplayName() const
dp_misc::DescriptionInfoset::getLocalizedLicenseURL() const
dp_misc::DescriptionInfoset::getSimpleLicenseAttributes() const
dp_misc::DescriptionInfoset::getSupportedPlatforms() const
dp_misc::DescriptionInfoset::getUpdateInformationUrls() const
dp_misc::expandUnoRcTerm(rtl::OUString const&)
dp_misc::expandUnoRcUrl(rtl::OUString const&)
dp_misc::generateIdentifier(std::optional<rtl::OUString> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::generateLegacyIdentifier(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::getDescriptionInfoset(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::getExtensionDefaultUpdateURL()
dp_misc::getHighestVersion(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
dp_misc::getOfficeLanguageTag()
dp_misc::getPlatformString()
dp_misc::hasValidPlatform(com::sun::star::uno::Sequence<rtl::OUString> const&)
dp_misc::interactContinuation(com::sun::star::uno::Any const&, com::sun::star::uno::Type const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, bool*, bool*)
dp_misc::makeRcTerm(rtl::OUString const&)
dp_misc::makeURLAppendSysPathSegment(std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&)
dp_misc::platform_fits(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
dp_misc::readFile(ucbhelper::Content&)
dp_misc::readLine(rtl::OUString*, std::basic_string_view<char16_t, std::char_traits<char16_t> >, ucbhelper::Content&, unsigned short)
dp_misc::readProperties(std::vector<std::pair<rtl::OUString, rtl::OUString>, std::allocator<std::pair<rtl::OUString, rtl::OUString> > >&, ucbhelper::Content&)
drawinglayer::Primitive2dXmlDump::dump(drawinglayer::primitive2d::Primitive2DContainer const&, rtl::OUString const&)
drawinglayer::animation::AnimationEntry::AnimationEntry()
drawinglayer::animation::AnimationEntry::~AnimationEntry()
drawinglayer::animation::AnimationEntryFixed::clone() const
drawinglayer::animation::AnimationEntryFixed::getDuration() const
drawinglayer::animation::AnimationEntryFixed::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryFixed::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryFixed::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryLinear::clone() const
drawinglayer::animation::AnimationEntryLinear::getDuration() const
drawinglayer::animation::AnimationEntryLinear::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryLinear::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryLinear::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryList::clone() const
drawinglayer::animation::AnimationEntryList::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryList::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryList::impGetIndexAtTime(double, double&) const
drawinglayer::animation::AnimationEntryList::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::animation::AnimationEntryLoop::clone() const
drawinglayer::animation::AnimationEntryLoop::getDuration() const
drawinglayer::animation::AnimationEntryLoop::getNextEventTime(double) const
drawinglayer::animation::AnimationEntryLoop::getStateAtTime(double) const
drawinglayer::animation::AnimationEntryLoop::operator==(drawinglayer::animation::AnimationEntry const&) const
drawinglayer::attribute::FillGradientAttribute::cannotBeHandledByVCL() const
drawinglayer::attribute::FillGradientAttribute::getAngle() const
drawinglayer::attribute::FillGradientAttribute::getBorder() const
drawinglayer::attribute::FillGradientAttribute::getOffsetX() const
drawinglayer::attribute::FillGradientAttribute::getOffsetY() const
drawinglayer::attribute::FillGradientAttribute::getSteps() const
drawinglayer::attribute::FillGradientAttribute::getStyle() const
drawinglayer::attribute::FillGraphicAttribute::FillGraphicAttribute(Graphic const&, basegfx::B2DRange const&, bool, double, double)
drawinglayer::attribute::FillGraphicAttribute::FillGraphicAttribute(drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::attribute::FillGraphicAttribute::getGraphic() const
drawinglayer::attribute::FillGraphicAttribute::getGraphicRange() const
drawinglayer::attribute::FillGraphicAttribute::getOffsetX() const
drawinglayer::attribute::FillGraphicAttribute::getOffsetY() const
drawinglayer::attribute::FillGraphicAttribute::getTiling() const
drawinglayer::attribute::FillGraphicAttribute::isDefault() const
drawinglayer::attribute::FillGraphicAttribute::operator=(drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::attribute::FillGraphicAttribute::operator==(drawinglayer::attribute::FillGraphicAttribute const&) const
drawinglayer::attribute::FillHatchAttribute::getAngle() const
drawinglayer::attribute::FillHatchAttribute::getDistance() const
drawinglayer::attribute::FillHatchAttribute::getMinimalDiscreteDistance() const
drawinglayer::attribute::FillHatchAttribute::getStyle() const
drawinglayer::attribute::FillHatchAttribute::operator=(drawinglayer::attribute::FillHatchAttribute const&)
drawinglayer::attribute::FillHatchAttribute::operator==(drawinglayer::attribute::FillHatchAttribute const&) const
drawinglayer::attribute::FontAttribute::FontAttribute()
drawinglayer::attribute::FontAttribute::getBiDiStrong() const
drawinglayer::attribute::FontAttribute::getFamilyName() const
drawinglayer::attribute::FontAttribute::getItalic() const
drawinglayer::attribute::FontAttribute::getMonospaced() const
drawinglayer::attribute::FontAttribute::getOutline() const
drawinglayer::attribute::FontAttribute::getRTL() const
drawinglayer::attribute::FontAttribute::getStyleName() const
drawinglayer::attribute::FontAttribute::getSymbol() const
drawinglayer::attribute::FontAttribute::getVertical() const
drawinglayer::attribute::FontAttribute::getWeight() const
drawinglayer::attribute::FontAttribute::operator=(drawinglayer::attribute::FontAttribute const&)
drawinglayer::attribute::FontAttribute::operator==(drawinglayer::attribute::FontAttribute const&) const
drawinglayer::attribute::LineAttribute::getColor() const
drawinglayer::attribute::LineAttribute::getLineCap() const
drawinglayer::attribute::LineAttribute::getLineJoin() const
drawinglayer::attribute::LineAttribute::getMiterMinimumAngle() const
drawinglayer::attribute::LineAttribute::isDefault() const
drawinglayer::attribute::LineAttribute::operator=(drawinglayer::attribute::LineAttribute const&)
drawinglayer::attribute::LineStartEndAttribute::LineStartEndAttribute()
drawinglayer::attribute::LineStartEndAttribute::LineStartEndAttribute(drawinglayer::attribute::LineStartEndAttribute const&)
drawinglayer::attribute::LineStartEndAttribute::getB2DPolyPolygon() const
drawinglayer::attribute::LineStartEndAttribute::getWidth() const
drawinglayer::attribute::LineStartEndAttribute::isActive() const
drawinglayer::attribute::LineStartEndAttribute::isCentered() const
drawinglayer::attribute::LineStartEndAttribute::isDefault() const
drawinglayer::attribute::LineStartEndAttribute::operator=(drawinglayer::attribute::LineStartEndAttribute const&)
drawinglayer::attribute::LineStartEndAttribute::operator==(drawinglayer::attribute::LineStartEndAttribute const&) const
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D()
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D(basegfx::BColor const&)
drawinglayer::attribute::MaterialAttribute3D::MaterialAttribute3D(drawinglayer::attribute::MaterialAttribute3D const&)
drawinglayer::attribute::MaterialAttribute3D::getColor() const
drawinglayer::attribute::MaterialAttribute3D::getEmission() const
drawinglayer::attribute::MaterialAttribute3D::getSpecular() const
drawinglayer::attribute::MaterialAttribute3D::getSpecularIntensity() const
drawinglayer::attribute::MaterialAttribute3D::operator=(drawinglayer::attribute::MaterialAttribute3D const&)
drawinglayer::attribute::MaterialAttribute3D::operator==(drawinglayer::attribute::MaterialAttribute3D const&) const
drawinglayer::attribute::Sdr3DLightAttribute::getColor() const
drawinglayer::attribute::Sdr3DLightAttribute::getSpecular() const
drawinglayer::attribute::Sdr3DLightAttribute::operator=(drawinglayer::attribute::Sdr3DLightAttribute const&)
drawinglayer::attribute::Sdr3DLightAttribute::operator==(drawinglayer::attribute::Sdr3DLightAttribute const&) const
drawinglayer::attribute::Sdr3DObjectAttribute::Sdr3DObjectAttribute(drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::attribute::Sdr3DObjectAttribute::getDoubleSided() const
drawinglayer::attribute::Sdr3DObjectAttribute::getMaterial() const
drawinglayer::attribute::Sdr3DObjectAttribute::getNormalsInvert() const
drawinglayer::attribute::Sdr3DObjectAttribute::getNormalsKind() const
drawinglayer::attribute::Sdr3DObjectAttribute::getReducedLineGeometry() const
drawinglayer::attribute::Sdr3DObjectAttribute::getShadow3D() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureFilter() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureKind() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureMode() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureProjectionX() const
drawinglayer::attribute::Sdr3DObjectAttribute::getTextureProjectionY() const
drawinglayer::attribute::Sdr3DObjectAttribute::operator=(drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::attribute::Sdr3DObjectAttribute::operator==(drawinglayer::attribute::Sdr3DObjectAttribute const&) const
drawinglayer::attribute::SdrAllFillAttributesHelper::createPrimitive2DSequence(basegfx::B2DRange const&, basegfx::B2DRange const&)
drawinglayer::attribute::SdrAllFillAttributesHelper::getFillGradientAttribute() const
drawinglayer::attribute::SdrFillGraphicAttribute::SdrFillGraphicAttribute(drawinglayer::attribute::SdrFillGraphicAttribute const&)
drawinglayer::attribute::SdrFillGraphicAttribute::SdrFillGraphicAttribute(drawinglayer::attribute::SdrFillGraphicAttribute&&)
drawinglayer::attribute::SdrFillGraphicAttribute::getGraphicLogicSize() const
drawinglayer::attribute::SdrFillGraphicAttribute::getOffset() const
drawinglayer::attribute::SdrFillGraphicAttribute::getOffsetPosition() const
drawinglayer::attribute::SdrFillGraphicAttribute::getRectPoint() const
drawinglayer::attribute::SdrFillGraphicAttribute::getSize() const
drawinglayer::attribute::SdrFillGraphicAttribute::getTiling() const
drawinglayer::attribute::SdrFillGraphicAttribute::operator=(drawinglayer::attribute::SdrFillGraphicAttribute const&)
drawinglayer::attribute::SdrFillGraphicAttribute::operator==(drawinglayer::attribute::SdrFillGraphicAttribute const&) const
drawinglayer::attribute::SdrGlowAttribute::operator=(drawinglayer::attribute::SdrGlowAttribute&&)
drawinglayer::attribute::SdrGlowTextAttribute::operator=(drawinglayer::attribute::SdrGlowTextAttribute&&)
drawinglayer::attribute::SdrLightingAttribute::SdrLightingAttribute(drawinglayer::attribute::SdrLightingAttribute&&)
drawinglayer::attribute::SdrLightingAttribute::getAmbientLightColor() const
drawinglayer::attribute::SdrLightingAttribute::operator=(drawinglayer::attribute::SdrLightingAttribute const&)
drawinglayer::attribute::SdrLightingAttribute::operator==(drawinglayer::attribute::SdrLightingAttribute const&) const
drawinglayer::attribute::SdrLightingAttribute::solveColorModel(basegfx::B3DVector const&, basegfx::BColor const&, basegfx::BColor const&, basegfx::BColor const&, unsigned short) const
drawinglayer::attribute::SdrLineFillShadowAttribute3D::operator==(drawinglayer::attribute::SdrLineFillShadowAttribute3D const&) const
drawinglayer::attribute::SdrSceneAttribute::SdrSceneAttribute(drawinglayer::attribute::SdrSceneAttribute&&)
drawinglayer::attribute::SdrSceneAttribute::getShadeMode() const
drawinglayer::attribute::SdrSceneAttribute::getTwoSidedLighting() const
drawinglayer::attribute::SdrSceneAttribute::operator=(drawinglayer::attribute::SdrSceneAttribute const&)
drawinglayer::attribute::SdrSceneAttribute::operator==(drawinglayer::attribute::SdrSceneAttribute const&) const
drawinglayer::attribute::StrokeAttribute::getDotDashArray() const
drawinglayer::attribute::StrokeAttribute::getFullDotDashLen() const
drawinglayer::attribute::StrokeAttribute::isDefault() const
drawinglayer::attribute::StrokeAttribute::operator=(drawinglayer::attribute::StrokeAttribute const&)
drawinglayer::attribute::StrokeAttribute::operator=(drawinglayer::attribute::StrokeAttribute&&)
drawinglayer::createAlphaMask(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::geometry::ViewInformation2D const&, unsigned int, unsigned int, unsigned int, bool)
drawinglayer::geometry::ViewInformation2D::ViewInformation2D(drawinglayer::geometry::ViewInformation2D&&)
drawinglayer::geometry::ViewInformation2D::forwardPixelSnapHairline(bool)
drawinglayer::geometry::ViewInformation2D::getAutoColor() const
drawinglayer::geometry::ViewInformation2D::getDiscreteViewport() const
drawinglayer::geometry::ViewInformation2D::getEditViewActive() const
drawinglayer::geometry::ViewInformation2D::getGlobalAntiAliasing()
drawinglayer::geometry::ViewInformation2D::getObjectTransformation() const
drawinglayer::geometry::ViewInformation2D::getPixelSnapHairline() const
drawinglayer::geometry::ViewInformation2D::getReducedDisplayQuality() const
drawinglayer::geometry::ViewInformation2D::getTextEditActive() const
drawinglayer::geometry::ViewInformation2D::getViewTime() const
drawinglayer::geometry::ViewInformation2D::operator==(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::geometry::ViewInformation2D::setGlobalAntiAliasing(bool, bool)
drawinglayer::geometry::ViewInformation2D::setPixelSnapHairline(bool)
drawinglayer::geometry::ViewInformation2D::setReducedDisplayQuality(bool)
drawinglayer::geometry::ViewInformation2D::setUseAntiAliasing(bool)
drawinglayer::geometry::ViewInformation3D::operator==(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive2d::AnimatedBlinkPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::AnimatedBlinkPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::AnimatedInterpolatePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::AnimatedInterpolatePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::AnimatedSwitchPrimitive2D(drawinglayer::animation::AnimationEntry const&, drawinglayer::primitive2d::Primitive2DContainer&&, bool)
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::setAnimationEntry(drawinglayer::animation::AnimationEntry const&)
drawinglayer::primitive2d::AnimatedSwitchPrimitive2D::~AnimatedSwitchPrimitive2D()
drawinglayer::primitive2d::BackgroundColorPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::BackgroundColorPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::BasePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BasePrimitive2D::getDecomposition(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::primitive2d::BasePrimitive2D::getRange(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::primitive2d::BitmapPrimitive2D::estimateUsage()
drawinglayer::primitive2d::BitmapPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BitmapPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::BitmapPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::BorderLine::operator==(drawinglayer::primitive2d::BorderLine const&) const
drawinglayer::primitive2d::BorderLinePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BorderLinePrimitive2D::getFullWidth() const
drawinglayer::primitive2d::BorderLinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::BorderLinePrimitive2D::isHorizontalOrVertical(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::BorderLinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::createBitmapDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::createPlaceholderDecomposition() const
drawinglayer::primitive2d::ControlPrimitive2D::createXControl()
drawinglayer::primitive2d::ControlPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ControlPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ControlPrimitive2D::getXControl() const
drawinglayer::primitive2d::ControlPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::DiscreteBitmapPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::DiscreteShadowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::Embedded3DPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::Embedded3DPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::Embedded3DPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::Embedded3DPrimitive2D::impGetShadow3D() const
drawinglayer::primitive2d::Embedded3DPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ExclusiveEditViewPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ExclusiveEditViewPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ExclusiveEditViewPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::FillGradientPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::createFill(bool) const
drawinglayer::primitive2d::FillGradientPrimitive2D::generateMatricesAndColors(std::function<void (basegfx::B2DHomMatrix const&, basegfx::BColor const&)>) const
drawinglayer::primitive2d::FillGradientPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGradientPrimitive2D::getOuterColor() const
drawinglayer::primitive2d::FillGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::FillGradientPrimitive2D::getUnitPolygon() const
drawinglayer::primitive2d::FillGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::FillGraphicPrimitive2D::FillGraphicPrimitive2D(basegfx::B2DHomMatrix, drawinglayer::attribute::FillGraphicAttribute const&)
drawinglayer::primitive2d::FillGraphicPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGraphicPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::FillGraphicPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::FillGraphicPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GlowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GlowPrimitive2D::prepareValuesAndcheckValidity(basegfx::B2DRange&, basegfx::B2DRange&, basegfx::B2DVector&, double&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GraphicPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GraphicPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GraphicPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GraphicPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GridPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GridPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::GroupPrimitive2D::estimateUsage()
drawinglayer::primitive2d::GroupPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::GroupPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::GroupPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::HelplinePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HelplinePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HelplinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::HelplinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::HiddenGeometryPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::InvertPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::LocalesAreEqual(com::sun::star::lang::Locale const&, com::sun::star::lang::Locale const&)
drawinglayer::primitive2d::MarkerArrayPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MarkerArrayPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MarkerArrayPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MarkerArrayPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::MaskPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MaskPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MaskPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::MediaPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MediaPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MediaPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MediaPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::MetafilePrimitive2D::accessMetafile(GDIMetaFile&) const
drawinglayer::primitive2d::MetafilePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MetafilePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::MetafilePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::MetafilePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ModifiedColorPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ModifiedColorPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ObjectAndViewTransformationDependentPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ObjectInfoPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ObjectInfoPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PageHierarchyPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PagePreviewPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PagePreviewPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PagePreviewPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PagePreviewPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::calculateNeededDiscreteBufferSize(unsigned int&, unsigned int&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::createContent(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::createTileImage(unsigned int, unsigned int) const
drawinglayer::primitive2d::PatternFillPrimitive2D::estimateUsage()
drawinglayer::primitive2d::PatternFillPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PatternFillPrimitive2D::getTileSize(unsigned int&, unsigned int&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PatternFillPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonColorPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonGraphicPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonHairlinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonHatchPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonMarkerPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonSelectionPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolyPolygonStrokePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonHairlinePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonMarkerPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonStrokeArrowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::PolygonStrokePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::Primitive2DContainer::maybeInvert(bool)
drawinglayer::primitive2d::ScenePrimitive2D::calculateDiscreteSizes(drawinglayer::geometry::ViewInformation2D const&, basegfx::B2DRange&, basegfx::B2DRange&, basegfx::B2DRange&) const
drawinglayer::primitive2d::ScenePrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::getGeometry2D() const
drawinglayer::primitive2d::ScenePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ScenePrimitive2D::getShadow2D() const
drawinglayer::primitive2d::ScenePrimitive2D::impGetShadow3D() const
drawinglayer::primitive2d::ScenePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ScenePrimitive2D::tryToCheckLastVisualisationDirectHit(basegfx::B2DPoint const&, bool&) const
drawinglayer::primitive2d::SdrFrameBorderData::SdrConnectStyleData::SdrConnectStyleData(svx::frame::Style const&, basegfx::B2DVector const&, bool)
drawinglayer::primitive2d::SdrFrameBorderData::SdrConnectStyleData::operator==(drawinglayer::primitive2d::SdrFrameBorderData::SdrConnectStyleData const&) const
drawinglayer::primitive2d::SdrFrameBorderData::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, double) const
drawinglayer::primitive2d::SdrFrameBorderData::getMinimalNonZeroBorderWidth() const
drawinglayer::primitive2d::SdrFrameBorderData::operator==(drawinglayer::primitive2d::SdrFrameBorderData const&) const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SdrFrameBorderPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::getFullyEmbeddedShadowPrimitives(drawinglayer::primitive2d::Primitive2DContainer&) const
drawinglayer::primitive2d::ShadowPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::ShadowPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ShadowPrimitive2D::prepareValuesAndcheckValidity(basegfx::B2DRange&, basegfx::B2DRange&, basegfx::B2DVector&, double&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::create2DDecomposition(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SoftEdgePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SoftEdgePrimitive2D::prepareValuesAndcheckValidity(basegfx::B2DRange&, basegfx::B2DRange&, basegfx::B2DVector&, double&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::StructureTagPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::StructureTagPrimitive2D::isTaggedSdrObject() const
drawinglayer::primitive2d::StructureTagPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::checkPreconditions()
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::createAtom(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SvgGradientEntry const&, drawinglayer::primitive2d::SvgGradientEntry const&, int, int) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SvgLinearGradientPrimitive2D::~SvgLinearGradientPrimitive2D()
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::checkPreconditions()
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::createAtom(drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::Primitive2DContainer&, drawinglayer::primitive2d::SvgGradientEntry const&, drawinglayer::primitive2d::SvgGradientEntry const&, int, int) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::SvgRadialGradientPrimitive2D::~SvgRadialGradientPrimitive2D()
drawinglayer::primitive2d::TextBreakupHelper::allowChange(unsigned int, basegfx::B2DHomMatrix&, unsigned int, unsigned int)
drawinglayer::primitive2d::TextBreakupHelper::breakup(drawinglayer::primitive2d::BreakupUnit)
drawinglayer::primitive2d::TextBreakupHelper::breakupPortion(drawinglayer::primitive2d::Primitive2DContainer&, int, int, bool)
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::impCreateGeometryContent(drawinglayer::primitive2d::Primitive2DContainer&, basegfx::utils::B2DHomMatrixBufferedOnDemandDecompose const&, rtl::OUString const&, int, int, std::vector<double, std::allocator<double> > const&, std::vector<unsigned char, std::allocator<unsigned char> > const&, drawinglayer::attribute::FontAttribute const&) const
drawinglayer::primitive2d::TextDecoratedPortionPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TextHierarchyBlockPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyBulletPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyEditPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextHierarchyEditPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyFieldPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyFieldPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TextHierarchyLinePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyParagraphPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextHierarchyParagraphPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TextLayouterDevice::addTextRectActions(tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, GDIMetaFile&) const
drawinglayer::primitive2d::TextLayouterDevice::getFontAscent() const
drawinglayer::primitive2d::TextLayouterDevice::getFontDescent() const
drawinglayer::primitive2d::TextLayouterDevice::getOverlineHeight() const
drawinglayer::primitive2d::TextLayouterDevice::getStrikeoutOffset() const
drawinglayer::primitive2d::TextLayouterDevice::getUnderlineHeight() const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TextSimplePortionPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TransformPrimitive2D::TransformPrimitive2D(basegfx::B2DHomMatrix, drawinglayer::primitive2d::GroupPrimitive2D&)
drawinglayer::primitive2d::TransformPrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::TransformPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TransformPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::TransparencePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::TransparencePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::getB2DRange(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::UnifiedTransparencePrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::ViewTransformationDependentPrimitive2D::get2DDecomposition(drawinglayer::primitive2d::Primitive2DDecompositionVisitor&, drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::WrongSpellPrimitive2D::create2DDecomposition(drawinglayer::geometry::ViewInformation2D const&) const
drawinglayer::primitive2d::WrongSpellPrimitive2D::getPrimitive2DID() const
drawinglayer::primitive2d::WrongSpellPrimitive2D::operator==(drawinglayer::primitive2d::BasePrimitive2D const&) const
drawinglayer::primitive2d::arePrimitive2DReferencesEqual(rtl::Reference<drawinglayer::primitive2d::BasePrimitive2D> const&, rtl::Reference<drawinglayer::primitive2d::BasePrimitive2D> const&)
drawinglayer::primitive2d::createEmbeddedGlowPrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::attribute::SdrGlowAttribute const&)
drawinglayer::primitive2d::createEmbeddedTextGlowPrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::attribute::SdrGlowTextAttribute const&)
drawinglayer::primitive2d::createEmbeddedShadowPrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, drawinglayer::attribute::SdrShadowAttribute const&, basegfx::B2DHomMatrix const&, drawinglayer::primitive2d::Primitive2DContainer const*)
drawinglayer::primitive2d::createEmbeddedSoftEdgePrimitive(drawinglayer::primitive2d::Primitive2DContainer&&, int)
drawinglayer::primitive2d::createHiddenGeometryPrimitives2D(bool, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
drawinglayer::primitive2d::createNewSdrFillAttribute(SfxItemSet const&)
drawinglayer::primitive2d::createNewSdrLineAttribute(SfxItemSet const&)
drawinglayer::primitive2d::createNewSdrLineStartEndAttribute(SfxItemSet const&, double)
drawinglayer::primitive2d::createNewTransparenceGradientAttribute(SfxItemSet const&)
drawinglayer::primitive2d::createPolyPolygonFillPrimitive(basegfx::B2DPolyPolygon const&, basegfx::B2DRange const&, drawinglayer::attribute::SdrFillAttribute const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::createPolyPolygonFillPrimitive(basegfx::B2DPolyPolygon const&, drawinglayer::attribute::SdrFillAttribute const&, drawinglayer::attribute::FillGradientAttribute const&)
drawinglayer::primitive2d::createPolygonLinePrimitive(basegfx::B2DPolygon const&, drawinglayer::attribute::SdrLineAttribute const&, drawinglayer::attribute::SdrLineStartEndAttribute const&)
drawinglayer::primitive2d::createTextPrimitive(basegfx::B2DPolyPolygon const&, basegfx::B2DHomMatrix const&, drawinglayer::attribute::SdrTextAttribute const&, drawinglayer::attribute::SdrLineAttribute const&, bool, bool)
drawinglayer::primitive2d::getVclFontFromFontAttribute(drawinglayer::attribute::FontAttribute const&, double, double, double, com::sun::star::lang::Locale const&)
drawinglayer::primitive2d::idToString(unsigned int)
drawinglayer::primitive2d::mapTextLineToFontLineStyle(drawinglayer::primitive2d::TextLine)
drawinglayer::primitive2d::mapTextStrikeoutToFontStrikeout(drawinglayer::primitive2d::TextStrikeout)
drawinglayer::primitive3d::BasePrimitive3D::BasePrimitive3D()
drawinglayer::primitive3d::BasePrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::BasePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::BasePrimitive3D::getDecomposition(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::primitive3d::BasePrimitive3D::getRange(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
drawinglayer::primitive3d::BasePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::BasePrimitive3D::~BasePrimitive3D()
drawinglayer::primitive3d::BufferedDecompositionPrimitive3D::BufferedDecompositionPrimitive3D()
drawinglayer::primitive3d::BufferedDecompositionPrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::BufferedDecompositionPrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::GroupPrimitive3D::GroupPrimitive3D(drawinglayer::primitive3d::Primitive3DContainer)
drawinglayer::primitive3d::GroupPrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::GroupPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::GroupPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::ModifiedColorPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::ModifiedColorPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::PolyPolygonMaterialPrimitive3D(basegfx::B3DPolyPolygon, drawinglayer::attribute::MaterialAttribute3D const&, bool)
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::PolyPolygonMaterialPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::PolygonHairlinePrimitive3D(basegfx::B3DPolygon, basegfx::BColor const&)
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::PolygonHairlinePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrCubePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrCubePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrCubePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::getSlices() const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::impCreateSlices()
drawinglayer::primitive3d::SdrExtrudePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrExtrudePrimitive3D::~SdrExtrudePrimitive3D()
drawinglayer::primitive3d::SdrLathePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::get3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrLathePrimitive3D::getSlices() const
drawinglayer::primitive3d::SdrLathePrimitive3D::impCreateSlices()
drawinglayer::primitive3d::SdrLathePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrLathePrimitive3D::~SdrLathePrimitive3D()
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrPolyPolygonPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrPrimitive3D::SdrPrimitive3D(basegfx::B3DHomMatrix, basegfx::B2DVector const&, drawinglayer::attribute::SdrLineFillShadowAttribute3D, drawinglayer::attribute::Sdr3DObjectAttribute const&)
drawinglayer::primitive3d::SdrPrimitive3D::get3DRangeFromSlices(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&) const
drawinglayer::primitive3d::SdrPrimitive3D::getStandard3DRange() const
drawinglayer::primitive3d::SdrPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::SdrSpherePrimitive3D::create3DDecomposition(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrSpherePrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::SdrSpherePrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::SdrSpherePrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::TransformPrimitive3D::getB3DRange(drawinglayer::geometry::ViewInformation3D const&) const
drawinglayer::primitive3d::TransformPrimitive3D::getPrimitive3DID() const
drawinglayer::primitive3d::TransformPrimitive3D::operator==(drawinglayer::primitive3d::BasePrimitive3D const&) const
drawinglayer::primitive3d::arePrimitive3DReferencesEqual(com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive3D> const&, com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive3D> const&)
drawinglayer::primitive3d::createExtrudeSlices(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> >&, basegfx::B2DPolyPolygon const&, double, double, double, bool, bool, bool)
drawinglayer::primitive3d::createLatheSlices(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> >&, basegfx::B2DPolyPolygon const&, double, double, double, unsigned int, bool, bool, bool)
drawinglayer::primitive3d::createReducedOutlines(drawinglayer::geometry::ViewInformation3D const&, basegfx::B3DHomMatrix const&, basegfx::B3DPolygon const&, basegfx::B3DPolygon const&, basegfx::B3DPolyPolygon&)
drawinglayer::primitive3d::extractHorizontalLinesFromSlice(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&, bool)
drawinglayer::primitive3d::extractPlanesFromSlice(std::vector<basegfx::B3DPolyPolygon, std::allocator<basegfx::B3DPolyPolygon> >&, std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&, bool, bool, bool, bool, double, double, bool, basegfx::B2DHomMatrix const&)
drawinglayer::primitive3d::extractVerticalLinesFromSlice(std::vector<drawinglayer::primitive3d::Slice3D, std::allocator<drawinglayer::primitive3d::Slice3D> > const&)
drawinglayer::primitive3d::getB3DRangeFromPrimitive3DReference(com::sun::star::uno::Reference<com::sun::star::graphic::XPrimitive3D> const&, drawinglayer::geometry::ViewInformation3D const&)
drawinglayer::primitive3d::idToString(unsigned int)
drawinglayer::processor2d::BaseProcessor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::ContourExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::HitTestProcessor2D::check3DHit(drawinglayer::primitive2d::ScenePrimitive2D const&)
drawinglayer::processor2d::HitTestProcessor2D::checkFillHitWithTolerance(basegfx::B2DPolyPolygon const&, basegfx::B2DVector const&) const
drawinglayer::processor2d::HitTestProcessor2D::checkHairlineHitWithTolerance(basegfx::B2DPolygon const&, basegfx::B2DVector const&) const
drawinglayer::processor2d::HitTestProcessor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::LineGeometryExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::ObjectInfoPrimitiveExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::TextAsPolygonExtractor2D::processBasePrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor2d::TextAsPolygonExtractor2D::processTextPrimitive2D(drawinglayer::primitive2d::BasePrimitive2D const&)
drawinglayer::processor3d::BaseProcessor3D::processBasePrimitive3D(drawinglayer::primitive3d::BasePrimitive3D const&)
drawinglayer::processor3d::CutFindProcessor::processBasePrimitive3D(drawinglayer::primitive3d::BasePrimitive3D const&)
drawinglayer_XPrimitive2DRenderer
drophash
dscal
dswap
dualize_lp
dualloop
editeng::CustomPropertyField::Clone() const
editeng::CustomPropertyField::createBeginComment() const
editeng::CustomPropertyField::operator==(SvxFieldData const&) const
editeng::FieldUpdater::FieldUpdater(EditTextObject&)
editeng::FieldUpdater::FieldUpdater(editeng::FieldUpdater const&)
editeng::HangulHanjaConversion::IsUseSavedConversionDirectionState()
editeng::SvxBorderLine::GetValueString(MapUnit, MapUnit, IntlWrapper const*, bool) const
editeng::SvxBorderLine::ScaleMetrics(long, long)
editeng::SvxBorderLine::setComplexColorFromAny(com::sun::star::uno::Any const&)
eliminate_artificials
endlu(SvStream&)
enlargePQExpBuffer
epoxy_egl_version
epoxy_extension_in_string
epoxy_glsl_version
epoxy_glx_version
epoxy_has_egl
epoxy_has_egl_extension
epoxy_has_glx
epoxy_has_glx_extension
epoxy_is_desktop_gl
epoxy_set_resolver_failure_handler
eventattacher_EventAttacher
exceptionToString(com::sun::star::uno::Any const&)
expand_column
explain
feasibilityOffset
feasiblePhase1
fieldlen(char const*)
fillLink
fillbranches_BB
fimprove
finalize_scaling
findAnti_artificial
findBasicArtificial
findBasicFixedvar
findBasisPos
findImprovementVar
findIndex
findIndexEx
findNonBasicSlack
findSubstitutionVar
find_int_bbvar
find_row
find_rowReplacement
find_sc_bbvar
find_sos_bbvar
find_var
findhash
findnode_BB
findself_BB
firebird_plugin
firstActiveLink
firstInactiveLink
firstfunc
fix16_div(int, int)
fix16_mul(int, int)
formWeights
formula::DoubleVectorRefToken::Clone() const
formula::FormEditData::FormEditData(formula::FormEditData const&)
formula::FormEditData::SaveValues()
formula::FormEditData::operator=(formula::FormEditData const&)
formula::FormulaByteToken::GetByte() const
formula::FormulaByteToken::GetInForceArray() const
formula::FormulaByteToken::SetByte(unsigned char)
formula::FormulaByteToken::SetInForceArray(formula::ParamClass)
formula::FormulaByteToken::operator==(formula::FormulaToken const&) const
formula::FormulaCompiler::AddSubLine()
formula::FormulaCompiler::CheckSetForceArrayParameter(boost::intrusive_ptr<formula::FormulaToken> const&, unsigned char)
formula::FormulaCompiler::CompareLine()
formula::FormulaCompiler::ConcatLine()
formula::FormulaCompiler::CreateStringFromDoubleRef(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromExternal(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromIndex(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromMatrix(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::CreateStringFromSingleRef(rtl::OUStringBuffer&, formula::FormulaToken const*) const
formula::FormulaCompiler::DestroyOpCodeMap(int)
formula::FormulaCompiler::Expression()
formula::FormulaCompiler::ExtendRangeReference(formula::FormulaToken&, formula::FormulaToken&)
formula::FormulaCompiler::Factor()
formula::FormulaCompiler::FindAddInFunction(rtl::OUString const&, bool) const
formula::FormulaCompiler::ForceArrayOperator(boost::intrusive_ptr<formula::FormulaToken> const&)
formula::FormulaCompiler::GetForceArrayParameter(formula::FormulaToken const*, unsigned short) const
formula::FormulaCompiler::HandleColRowName()
formula::FormulaCompiler::HandleDbData()
formula::FormulaCompiler::HandleExternalReference(formula::FormulaToken const&)
formula::FormulaCompiler::HandleRange()
formula::FormulaCompiler::HandleTableRef()
formula::FormulaCompiler::HasOpCodeMap(int) const
formula::FormulaCompiler::InitSymbolsAPI(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::InitSymbolsEnglish(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::InitSymbolsEnglishXL(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::InitSymbolsNative(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::InitSymbolsODFF(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::InitSymbolsOOXML(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::InitSymbolsPODF(formula::FormulaCompiler::InitSymbols) const
formula::FormulaCompiler::IntersectionLine()
formula::FormulaCompiler::LocalizeString(rtl::OUString&) const
formula::FormulaCompiler::MergeRangeReference(formula::FormulaToken**, formula::FormulaToken* const*)
formula::FormulaCompiler::MulDivLine()
formula::FormulaCompiler::NextToken()
formula::FormulaCompiler::OpCodeMap::copyFrom(formula::FormulaCompiler::OpCodeMap const&)
formula::FormulaCompiler::OpCodeMap::createSequenceOfAvailableMappings(formula::FormulaCompiler const&, int) const
formula::FormulaCompiler::OpCodeMap::createSequenceOfFormulaTokens(formula::FormulaCompiler const&, com::sun::star::uno::Sequence<rtl::OUString> const&) const
formula::FormulaCompiler::OpCodeMap::putCopyOpCode(rtl::OUString const&, OpCode)
formula::FormulaCompiler::OpCodeMap::putOpCode(rtl::OUString const&, OpCode, CharClass const*)
formula::FormulaCompiler::PopTokenArray()
formula::FormulaCompiler::PostOpLine()
formula::FormulaCompiler::PowLine()
formula::FormulaCompiler::PutCode(boost::intrusive_ptr<formula::FormulaToken>&)
formula::FormulaCompiler::RangeLine()
formula::FormulaCompiler::SetError(FormulaError)
formula::FormulaCompiler::UnaryLine()
formula::FormulaCompiler::UnionLine()
formula::FormulaCompiler::fillAddInToken(std::vector<com::sun::star::sheet::FormulaOpCodeMapEntry, std::allocator<com::sun::star::sheet::FormulaOpCodeMapEntry> >&, bool) const
formula::FormulaCompiler::fillFromAddInCollectionEnglishName(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&) const
formula::FormulaCompiler::fillFromAddInCollectionUpperName(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&) const
formula::FormulaCompiler::fillFromAddInMap(std::shared_ptr<formula::FormulaCompiler::OpCodeMap> const&, formula::FormulaGrammar::Grammar) const
formula::FormulaCompiler::loadSymbols(std::pair<char const*, int> const*, formula::FormulaGrammar::Grammar, std::shared_ptr<formula::FormulaCompiler::OpCodeMap>&, formula::FormulaCompiler::SeparatorType) const
formula::FormulaDoubleToken::GetDoubleType() const
formula::FormulaDoubleToken::operator==(formula::FormulaToken const&) const
formula::FormulaErrorToken::GetError() const
formula::FormulaErrorToken::SetError(FormulaError)
formula::FormulaErrorToken::operator==(formula::FormulaToken const&) const
formula::FormulaExternalToken::GetExternal() const
formula::FormulaExternalToken::operator==(formula::FormulaToken const&) const
formula::FormulaFAPToken::GetFAPOrigToken() const
formula::FormulaFAPToken::operator==(formula::FormulaToken const&) const
formula::FormulaGrammar::isSupported(formula::FormulaGrammar::Grammar)
formula::FormulaGrammar::setEnglishBit(formula::FormulaGrammar::Grammar, bool)
formula::FormulaHelper::FillArgStrings(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, unsigned short, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&) const
formula::FormulaHelper::GetArgStrings(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, unsigned short) const
formula::FormulaHelper::GetCategoryCount() const
formula::FormulaHelper::GetFunctionEnd(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int) const
formula::FormulaIndexToken::GetIndex() const
formula::FormulaIndexToken::GetSheet() const
formula::FormulaIndexToken::SetIndex(unsigned short)
formula::FormulaIndexToken::SetSheet(short)
formula::FormulaIndexToken::operator==(formula::FormulaToken const&) const
formula::FormulaJumpToken::GetInForceArray() const
formula::FormulaJumpToken::GetJump() const
formula::FormulaJumpToken::SetInForceArray(formula::ParamClass)
formula::FormulaJumpToken::operator==(formula::FormulaToken const&) const
formula::FormulaJumpToken::~FormulaJumpToken()
formula::FormulaMissingToken::GetDouble() const
formula::FormulaMissingToken::GetString() const
formula::FormulaMissingToken::operator==(formula::FormulaToken const&) const
formula::FormulaSpaceToken::GetByte() const
formula::FormulaSpaceToken::GetChar() const
formula::FormulaSpaceToken::operator==(formula::FormulaToken const&) const
formula::FormulaStringOpToken::Clone() const
formula::FormulaStringOpToken::FormulaStringOpToken(formula::FormulaStringOpToken const&)
formula::FormulaStringOpToken::GetString() const
formula::FormulaStringOpToken::SetString(svl::SharedString const&)
formula::FormulaStringOpToken::operator==(formula::FormulaToken const&) const
formula::FormulaStringToken::Clone() const
formula::FormulaStringToken::FormulaStringToken(formula::FormulaStringToken const&)
formula::FormulaStringToken::GetString() const
formula::FormulaStringToken::SetString(svl::SharedString const&)
formula::FormulaStringToken::operator==(formula::FormulaToken const&) const
formula::FormulaToken::IsRef() const
formula::FormulaTokenArray::AddOpCode(OpCode)
formula::FormulaTokenArray::AddStringXML(rtl::OUString const&)
formula::FormulaTokenArray::CheckAllRPNTokens()
formula::FormulaTokenArray::CheckToken(formula::FormulaToken const&)
formula::FormulaTokenArray::MergeArray()
formula::FormulaTokenArray::NeedsOoxmlRewrite()
formula::FormulaTokenArray::NeedsPodfRewrite(formula::MissingConventionODF const&)
formula::FormulaTokenArray::RemoveToken(unsigned short, unsigned short)
formula::FormulaTokenArray::RewriteMissing(formula::MissingConvention const&)
formula::FormulaTokenArray::operator=(formula::FormulaTokenArray const&)
formula::FormulaTokenArray::operator=(formula::FormulaTokenArray&&)
formula::FormulaTokenArrayPlainIterator::AfterRemoveToken(unsigned short, unsigned short)
formula::FormulaTokenArrayPlainIterator::PeekNext()
formula::FormulaTokenArrayPlainIterator::PrevRPN()
formula::FormulaTokenIterator::Item::Item(formula::FormulaTokenArray const*, short, short)
formula::FormulaTokenIterator::Push(formula::FormulaTokenArray const*)
formula::FormulaTypedDoubleToken::GetDoubleType() const
formula::FormulaTypedDoubleToken::operator==(formula::FormulaToken const&) const
formula::FormulaUnknownToken::operator==(formula::FormulaToken const&) const
formula::RefButton::LinkStubClick(void*, weld::Button&)
formula::RefEdit::GetFocus()
formula::RefEdit::LoseFocus()
formula::SingleVectorRefToken::Clone() const
framework::CreateDockingWindow(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
framework::CreateStatusBarController(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, StatusBar*, unsigned short, rtl::OUString const&)
framework::CreateToolBoxController(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&)
framework::Desktop::Desktop(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext>)
framework::Desktop::activate()
framework::Desktop::addEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
framework::Desktop::addFrameActionListener(com::sun::star::uno::Reference<com::sun::star::frame::XFrameActionListener> const&)
framework::Desktop::addTerminateListener(com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> const&)
framework::Desktop::constructorInit()
framework::Desktop::contextChanged()
framework::Desktop::convertFastPropertyValue(com::sun::star::uno::Any&, com::sun::star::uno::Any&, int, com::sun::star::uno::Any const&)
framework::Desktop::deactivate()
framework::Desktop::dispatchFinished(com::sun::star::frame::DispatchResultEvent const&)
framework::Desktop::disposing()
framework::Desktop::disposing(com::sun::star::lang::EventObject const&)
framework::Desktop::findFrame(rtl::OUString const&, int)
framework::Desktop::getActiveFrame()
framework::Desktop::getActiveTask()
framework::Desktop::getComponentWindow()
framework::Desktop::getComponents()
framework::Desktop::getContainerWindow()
framework::Desktop::getController()
framework::Desktop::getCreator()
framework::Desktop::getCurrentComponent()
framework::Desktop::getCurrentFrame()
framework::Desktop::getFastPropertyValue(com::sun::star::uno::Any&, int) const
framework::Desktop::getFrames()
framework::Desktop::getImplementationName()
framework::Desktop::getInfoHelper()
framework::Desktop::getName()
framework::Desktop::getPropertySetInfo()
framework::Desktop::getSupportedServiceNames()
framework::Desktop::getTasks()
framework::Desktop::getTypes()
framework::Desktop::getUntitledPrefix()
framework::Desktop::handle(com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
framework::Desktop::impl_closeFrames(bool)
framework::Desktop::impl_getFrameComponent(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&) const
framework::Desktop::impl_sendCancelTerminationEvent(std::vector<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> > > const&)
framework::Desktop::impl_sendNotifyTerminationEvent()
framework::Desktop::impl_sendQueryTerminationEvent(std::vector<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> > >&)
framework::Desktop::impl_sendTerminateToClipboard()
framework::Desktop::initialize(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&)
framework::Desktop::isActive()
framework::Desktop::isTop()
framework::Desktop::leaseNumber(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::Desktop::loadComponentFromURL(rtl::OUString const&, rtl::OUString const&, int, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
framework::Desktop::queryDispatch(com::sun::star::util::URL const&, rtl::OUString const&, int)
framework::Desktop::queryDispatches(com::sun::star::uno::Sequence<com::sun::star::frame::DispatchDescriptor> const&)
framework::Desktop::queryInterface(com::sun::star::uno::Type const&)
framework::Desktop::registerDispatchProviderInterceptor(com::sun::star::uno::Reference<com::sun::star::frame::XDispatchProviderInterceptor> const&)
framework::Desktop::releaseDispatchProviderInterceptor(com::sun::star::uno::Reference<com::sun::star::frame::XDispatchProviderInterceptor> const&)
framework::Desktop::releaseNumber(int)
framework::Desktop::releaseNumberForComponent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::Desktop::removeEventListener(com::sun::star::uno::Reference<com::sun::star::lang::XEventListener> const&)
framework::Desktop::removeFrameActionListener(com::sun::star::uno::Reference<com::sun::star::frame::XFrameActionListener> const&)
framework::Desktop::removeTerminateListener(com::sun::star::uno::Reference<com::sun::star::frame::XTerminateListener> const&)
framework::Desktop::setActiveFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
framework::Desktop::setComponent(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
framework::Desktop::setCreator(com::sun::star::uno::Reference<com::sun::star::frame::XFramesSupplier> const&)
framework::Desktop::setFastPropertyValue_NoBroadcast(int, com::sun::star::uno::Any const&)
framework::Desktop::setName(rtl::OUString const&)
framework::Desktop::supportsService(rtl::OUString const&)
framework::Desktop::terminate()
framework::Desktop::terminateQuickstarterToo()
framework::Desktop::~Desktop()
framework::DocumentUndoGuard::DocumentUndoGuard(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
framework::DocumentUndoGuard::~DocumentUndoGuard()
framework::GetFirstListenerWith(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, std::function<bool (com::sun::star::uno::Reference<com::sun::star::ui::XContextChangeEventListener> const&)> const&)
framework::IsDockingWindowVisible(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
framework::RefreshToolbars(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
framework::SetDockingWindowCreator(void (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >))
framework::SetIsDockingWindowVisible(bool (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >))
framework::SetRefreshToolbars(void (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&))
framework::SetStatusBarControllerCreator(rtl::Reference<svt::StatusbarController> (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, StatusBar*, unsigned short, rtl::OUString const&))
framework::SetToolBoxControllerCreator(rtl::Reference<svt::ToolboxController> (*)(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, ToolBox*, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, rtl::OUString const&))
freeLink
freePackedVector
freePricer
freeUndoLadder
freeWeights
free_BB
free_SOSgroup
free_SOSrec
free_duals
free_hash_item
free_hash_table
free_lp
free_pseudoclass
free_pseudocost
freecuts_BB
fsolve
ftran
gcd
getAllHit3DObjectsSortedFrontToBack(basegfx::B2DPoint const&, E3dScene const&, std::vector<E3dCompoundObject const*, std::allocator<E3dCompoundObject const*> >&)
getBasicObjectTypeName(SbxObject*)
getBasicTypeName(SbxDataType)
getCairoFormat(BitmapBuffer const&)
getClipBox(_cairo*)
getClippedFillDamage(_cairo*)
getClippedStrokeDamage(_cairo*)
getDIBV5HeaderSize()
getDataArea
getDrawPreviewOptimalSize(OutputDevice const&)
getExistMark
getFillDamage(_cairo*)
getFollowPageWords_af_NA
getFollowPageWords_af_ZA
getFollowPageWords_ak_GH
getFollowPageWords_am_ET
getFollowPageWords_an_ES
getFollowPageWords_ar_AE
getFollowPageWords_ar_BH
getFollowPageWords_ar_DZ
getFollowPageWords_ar_EG
getFollowPageWords_ar_IQ
getFollowPageWords_ar_JO
getFollowPageWords_ar_KW
getFollowPageWords_ar_LB
getFollowPageWords_ar_LY
getFollowPageWords_ar_MA
getFollowPageWords_ar_OM
getFollowPageWords_ar_QA
getFollowPageWords_ar_SA
getFollowPageWords_ar_SY
getFollowPageWords_ar_TN
getFollowPageWords_ar_YE
getFollowPageWords_ast_ES
getFollowPageWords_axk_CG
getFollowPageWords_az_AZ
getFollowPageWords_be_BY
getFollowPageWords_beq_CG
getFollowPageWords_bg_BG
getFollowPageWords_bkw_CG
getFollowPageWords_bm_ML
getFollowPageWords_bn_BD
getFollowPageWords_bn_IN
getFollowPageWords_bo_CN
getFollowPageWords_bo_IN
getFollowPageWords_br_FR
getFollowPageWords_bs_BA
getFollowPageWords_bvx_CG
getFollowPageWords_ca_ES
getFollowPageWords_ca_ES_valencia
getFollowPageWords_cs_CZ
getFollowPageWords_cu_RU
getFollowPageWords_cv_RU
getFollowPageWords_cy_GB
getFollowPageWords_da_DK
getFollowPageWords_dde_CG
getFollowPageWords_de_AT
getFollowPageWords_de_CH
getFollowPageWords_de_DE
getFollowPageWords_de_LI
getFollowPageWords_de_LU
getFollowPageWords_dsb_DE
getFollowPageWords_dv_MV
getFollowPageWords_dz_BT
getFollowPageWords_ebo_CG
getFollowPageWords_ee_GH
getFollowPageWords_el_GR
getFollowPageWords_en_AU
getFollowPageWords_en_BW
getFollowPageWords_en_BZ
getFollowPageWords_en_CA
getFollowPageWords_en_DK
getFollowPageWords_en_GH
getFollowPageWords_en_GM
getFollowPageWords_en_HK
getFollowPageWords_en_IE
getFollowPageWords_en_IL
getFollowPageWords_en_IN
getFollowPageWords_en_JM
getFollowPageWords_en_KE
getFollowPageWords_en_LK
getFollowPageWords_en_MU
getFollowPageWords_en_MW
getFollowPageWords_en_MY
getFollowPageWords_en_NA
getFollowPageWords_en_NG
getFollowPageWords_en_NZ
getFollowPageWords_en_PH
getFollowPageWords_en_TT
getFollowPageWords_en_ZA
getFollowPageWords_en_ZM
getFollowPageWords_en_ZW
getFollowPageWords_eo
getFollowPageWords_es_AR
getFollowPageWords_es_BO
getFollowPageWords_es_CL
getFollowPageWords_es_CO
getFollowPageWords_es_CR
getFollowPageWords_es_DO
getFollowPageWords_es_EC
getFollowPageWords_es_ES
getFollowPageWords_es_GT
getFollowPageWords_es_HN
getFollowPageWords_es_MX
getFollowPageWords_es_NI
getFollowPageWords_es_PA
getFollowPageWords_es_PE
getFollowPageWords_es_PR
getFollowPageWords_es_PY
getFollowPageWords_es_SV
getFollowPageWords_es_UY
getFollowPageWords_es_VE
getFollowPageWords_et_EE
getFollowPageWords_eu_ES
getFollowPageWords_fa_IR
getFollowPageWords_fi_FI
getFollowPageWords_fo_FO
getFollowPageWords_fr_BE
getFollowPageWords_fr_BF
getFollowPageWords_fr_BJ
getFollowPageWords_fr_CA
getFollowPageWords_fr_CH
getFollowPageWords_fr_CI
getFollowPageWords_fr_FR
getFollowPageWords_fr_LU
getFollowPageWords_fr_MC
getFollowPageWords_fr_ML
getFollowPageWords_fr_NE
getFollowPageWords_fr_SN
getFollowPageWords_fr_TG
getFollowPageWords_fur_IT
getFollowPageWords_fy_NL
getFollowPageWords_ga_IE
getFollowPageWords_gd_GB
getFollowPageWords_gl_ES
getFollowPageWords_gsc_FR
getFollowPageWords_gu_IN
getFollowPageWords_gug_PY
getFollowPageWords_ha_Latn_GH
getFollowPageWords_ha_Latn_NG
getFollowPageWords_haw_US
getFollowPageWords_he_IL
getFollowPageWords_hi_IN
getFollowPageWords_hil_PH
getFollowPageWords_hr_HR
getFollowPageWords_hsb_DE
getFollowPageWords_ht_HT
getFollowPageWords_hu_HU
getFollowPageWords_hy_AM
getFollowPageWords_ia
getFollowPageWords_id_ID
getFollowPageWords_ilo_PH
getFollowPageWords_is_IS
getFollowPageWords_it_CH
getFollowPageWords_it_IT
getFollowPageWords_iyx_CG
getFollowPageWords_ja_JP
getFollowPageWords_jbo
getFollowPageWords_ka_GE
getFollowPageWords_kab_DZ
getFollowPageWords_kk_KZ
getFollowPageWords_kkw_CG
getFollowPageWords_kl_GL
getFollowPageWords_km_KH
getFollowPageWords_kmr_Latn_TR
getFollowPageWords_kn_IN
getFollowPageWords_kng_CG
getFollowPageWords_ko_KR
getFollowPageWords_ky_KG
getFollowPageWords_la_VA
getFollowPageWords_lb_LU
getFollowPageWords_ldi_CG
getFollowPageWords_lg_UG
getFollowPageWords_lgr_SB
getFollowPageWords_lif_NP
getFollowPageWords_lij_IT
getFollowPageWords_lld_IT
getFollowPageWords_ln_CD
getFollowPageWords_lo_LA
getFollowPageWords_lt_LT
getFollowPageWords_ltg_LV
getFollowPageWords_lv_LV
getFollowPageWords_mai_IN
getFollowPageWords_mdw_CG
getFollowPageWords_mfe_MU
getFollowPageWords_min_ID
getFollowPageWords_mk_MK
getFollowPageWords_mkw_CG
getFollowPageWords_ml_IN
getFollowPageWords_mn_Cyrl_MN
getFollowPageWords_mos_BF
getFollowPageWords_mr_IN
getFollowPageWords_ms_MY
getFollowPageWords_mt_MT
getFollowPageWords_my_MM
getFollowPageWords_myv_RU
getFollowPageWords_nb_NO
getFollowPageWords_nds_DE
getFollowPageWords_ne_NP
getFollowPageWords_ngz_CG
getFollowPageWords_njx_CG
getFollowPageWords_njy_CG
getFollowPageWords_nl_BE
getFollowPageWords_nl_NL
getFollowPageWords_nn_NO
getFollowPageWords_no_NO
getFollowPageWords_nr_ZA
getFollowPageWords_nso_ZA
getFollowPageWords_ny_MW
getFollowPageWords_oc_ES_aranes
getFollowPageWords_oc_FR_lengadoc
getFollowPageWords_om_ET
getFollowPageWords_or_IN
getFollowPageWords_pa_IN
getFollowPageWords_pap_BQ
getFollowPageWords_pap_CW
getFollowPageWords_pdc_US
getFollowPageWords_pjt_AU
getFollowPageWords_pl_PL
getFollowPageWords_plt_MG
getFollowPageWords_pt_AO
getFollowPageWords_pt_BR
getFollowPageWords_pt_MZ
getFollowPageWords_pt_PT
getFollowPageWords_pui_CO
getFollowPageWords_puu_CG
getFollowPageWords_ro_RO
getFollowPageWords_ru_RU
getFollowPageWords_rue_SK
getFollowPageWords_rw_RW
getFollowPageWords_sat_IN
getFollowPageWords_sc_IT
getFollowPageWords_sdj_CG
getFollowPageWords_sg_CF
getFollowPageWords_shs_CA
getFollowPageWords_sid_ET
getFollowPageWords_sk_SK
getFollowPageWords_sl_SI
getFollowPageWords_so_SO
getFollowPageWords_sr_CS
getFollowPageWords_sr_Latn_CS
getFollowPageWords_sr_Latn_ME
getFollowPageWords_sr_Latn_RS
getFollowPageWords_sr_ME
getFollowPageWords_sr_RS
getFollowPageWords_ss_ZA
getFollowPageWords_st_ZA
getFollowPageWords_sun_ID
getFollowPageWords_sv_FI
getFollowPageWords_sv_SE
getFollowPageWords_sw_TZ
getFollowPageWords_szl_PL
getFollowPageWords_ta_IN
getFollowPageWords_te_IN
getFollowPageWords_tek_CG
getFollowPageWords_tg_TJ
getFollowPageWords_th_TH
getFollowPageWords_ti_ER
getFollowPageWords_ti_ET
getFollowPageWords_tk_TM
getFollowPageWords_tn_ZA
getFollowPageWords_tpi_PG
getFollowPageWords_tr_TR
getFollowPageWords_ts_ZA
getFollowPageWords_tsa_CG
getFollowPageWords_tt_RU
getFollowPageWords_tyx_CG
getFollowPageWords_ug_CN
getFollowPageWords_uk_UA
getFollowPageWords_ur_PK
getFollowPageWords_uz_UZ
getFollowPageWords_ve_ZA
getFollowPageWords_vec_IT
getFollowPageWords_vi_VN
getFollowPageWords_vif_CG
getFollowPageWords_vro_EE
getFollowPageWords_wa_BE
getFollowPageWords_xh_ZA
getFollowPageWords_xku_CG
getFollowPageWords_yi_US
getFollowPageWords_yom_CG
getFollowPageWords_zh_CN
getFollowPageWords_zh_HK
getFollowPageWords_zh_MO
getFollowPageWords_zh_SG
getFollowPageWords_zh_TW
getFollowPageWords_zu_ZA
getIndex1
getIndex2
getLabelName(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
getLenArray
getMDO
getPreviewStripSize(OutputDevice const&)
getPricer
getStarBasicAccess(BasicManager*)
getStrokeDamage(_cairo*)
getSvtAccessibilityComponentFactory
get_Lrows
get_Ncolumns
get_Norig_columns
get_Norig_rows
get_Nrows
get_OF_active
get_anti_degen
get_artificialRow
get_basis
get_basisOF
get_basiscolumn
get_basiscrash
get_bb_depthlimit
get_bb_floorfirst
get_bb_rule
get_bounds
get_bounds_tighter
get_break_at_value
get_captype(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cs_info*)
get_captype_utf8(std::vector<w_char, std::allocator<w_char> > const&, int)
get_casechars[abi:cxx11](char const*)
get_colIndexA
get_col_name
get_column
get_columnex
get_constr_class
get_constr_type
get_constr_value
get_constraints
get_current_cs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
get_dual_solution
get_dv_lower
get_dv_upper
get_encoding_name_for_icu
get_epsb
get_epsd
get_epsel
get_epsint
get_epsperturb
get_epspivot
get_improve
get_infinite
get_lambda
get_lang_num(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
get_lowbo
get_lp_index
get_lp_name
get_mat
get_mat_byindex
get_max_level
get_maxpivot
get_mip_gap
get_multiprice
get_nameindex
get_negrange
get_nonzeros
get_obj_bound
get_orig_index
get_origcol_name
get_origrow_name
get_partialprice
get_piv_rule
get_pivoting
get_presolve
get_presolveloops
get_primal_solution
get_print_sol
get_pseudobranchcost
get_pseudocosts
get_pseudonodecost
get_pseudorange
get_ptr_constraints
get_ptr_dual_solution
get_ptr_lambda
get_ptr_primal_solution
get_ptr_sensitivity_obj
get_ptr_sensitivity_objex
get_ptr_sensitivity_rhs
get_refactfrequency
get_rh
get_rh_lower
get_rh_range
get_rh_upper
get_row
get_row_name
get_rowex
get_scalelimit
get_scaling
get_sensitivity_obj
get_sensitivity_objex
get_sensitivity_rhs
get_simplextype
get_solutioncount
get_solutionlimit
get_status
get_statustext
get_stored_pointer(char const*)
get_str_constr_class
get_str_constr_type
get_str_piv_rule
get_timeout
get_total_iter
get_total_nodes
get_upbo
get_var_branch
get_var_dualresult
get_var_primalresult
get_var_priority
get_variables
get_verbose
get_working_objective
getpeereid
getvaluePackedVector
guess_basis
has_BFP
has_XLI
hashval
heuristics
hnj_fopen
hnj_free
hnj_hyphen_free
hnj_hyphen_hyph_
hnj_hyphen_hyphenate
hnj_hyphen_hyphenate2
hnj_hyphen_hyphenate3
hnj_hyphen_hyphword
hnj_hyphen_lhmin
hnj_hyphen_load
hnj_hyphen_load_file
hnj_hyphen_load_line
hnj_hyphen_norm
hnj_hyphen_rhmin
hnj_hyphen_strnlen
hnj_ligature
hnj_malloc
hnj_realloc
hnj_strchomp
hpsort
hpsortex
i18npool::Calendar_hijri::NewMoon(int)
idamax
identify_GUB
impose_bounds
inc_col_space
inc_columns
inc_lag_space
inc_mat_space
inc_matcol_space
inc_matrow_space
inc_presolve_space
inc_row_space
inc_rowcol_space
inc_rows
includeMDO
incrementUndoLadder
ini_close
ini_create
ini_open
ini_readdata
ini_writecomment
ini_writedata
ini_writeheader
initPQExpBuffer
initPricer
initXmlSec()
init_BLAS
init_phonet_hash(phonetable&)
init_pseudocost
init_rowcol_names
initbranches_BB
initcuts_BB
initialize_solution
insertLink
intpow
invert
isActiveLink
isBasisVarFeasible
isDegenerateBasis
isDualFeasible
isINT
isLayoutEnabled(vcl::Window const*)
isOrigFixed
isP1extra
isPhase1
isPrimalFeasible
isPrimalSimplex
is_BasisReady
is_OF_nz
is_SOS_var
is_action
is_add_rowmode
is_anti_degen
is_bb_mode
is_binary
is_break_at_first
is_chsign
is_constr_type
is_debug
is_encoding_supported_by_icu
is_feasible
is_fixedvar
is_infinite
is_int
is_integerscaling
is_lag_trace
is_maxim
is_nativeBFP
is_nativeBLAS
is_nativeXLI
is_negative
is_obj_in_basis
is_piv_mode
is_piv_rule
is_presolve
is_sc_violated
is_scalemode
is_scaletype
is_semicont
is_slackbasis
is_splitvar
is_trace
is_unbounded
is_use_names
isnz_origobj
jvmaccess::UnoVirtualMachine::CreationException::CreationException()
jvmaccess::UnoVirtualMachine::CreationException::CreationException(jvmaccess::UnoVirtualMachine::CreationException const&)
jvmaccess::UnoVirtualMachine::CreationException::operator=(jvmaccess::UnoVirtualMachine::CreationException const&)
jvmaccess::UnoVirtualMachine::~UnoVirtualMachine()
jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException()
jvmaccess::VirtualMachine::AttachGuard::CreationException::CreationException(jvmaccess::VirtualMachine::AttachGuard::CreationException const&)
jvmaccess::VirtualMachine::AttachGuard::CreationException::operator=(jvmaccess::VirtualMachine::AttachGuard::CreationException const&)
jvmaccess::VirtualMachine::attachThread(bool*) const
jvmaccess::VirtualMachine::detachThread() const
jvmaccess::VirtualMachine::~VirtualMachine()
lag_solve
lastActiveLink
lastInactiveLink
ldif_close
ldif_countlines
ldif_fetch_url
ldif_getline
ldif_is_not_printable
ldif_must_b64_encode_register
ldif_must_b64_encode_release
ldif_open
ldif_open_mem
ldif_open_url
ldif_parse_line
ldif_parse_line2
ldif_put
ldif_put_wrap
ldif_read_record
ldif_sput
ldif_sput_wrap
legacy::CntInt32::Create(CntInt32Item&, SvStream&, unsigned short)
legacy::CntInt32::GetVersion(unsigned short)
legacy::CntInt32::Store(CntInt32Item const&, SvStream&, unsigned short)
legacy::SfxBool::Create(SfxBoolItem&, SvStream&, unsigned short)
legacy::SfxBool::GetVersion(unsigned short)
legacy::SfxBool::Store(SfxBoolItem const&, SvStream&, unsigned short)
lenfield
lex_fatal_error
libabw::AbiDocument::isFileFormatSupported(librevenge::RVNGInputStream*)
libabw::AbiDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGTextInterface*)
libcdr::CDRDocument::isSupported(librevenge::RVNGInputStream*)
libcdr::CDRDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libcdr::CMXDocument::isSupported(librevenge::RVNGInputStream*)
libcdr::CMXDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libebook::EBOOKDocument::isSupported(librevenge::RVNGInputStream*, libebook::EBOOKDocument::Type*)
libebook::EBOOKDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGTextInterface*, char const*)
libebook::EBOOKDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGTextInterface*, libebook::EBOOKDocument::Type, char const*)
libfreehand::FreeHandDocument::isSupported(librevenge::RVNGInputStream*)
libfreehand::FreeHandDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libmspub::MSPUBDocument::isSupported(librevenge::RVNGInputStream*)
libmspub::MSPUBDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libpagemaker::PMDocument::isSupported(librevenge::RVNGInputStream*)
libpagemaker::PMDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libqxp::QXPDocument::isSupported(librevenge::RVNGInputStream*, libqxp::QXPDocument::Type*)
libqxp::QXPDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*, libqxp::QXPPathResolver*)
libreofficekit_hook
libreofficekit_hook_2
libvisio::VisioDocument::isSupported(librevenge::RVNGInputStream*)
libvisio::VisioDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libvisio::VisioDocument::parseStencils(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
libzmf::ZMFDocument::isSupported(librevenge::RVNGInputStream*, libzmf::ZMFDocument::Type*, libzmf::ZMFDocument::Kind*)
libzmf::ZMFDocument::parse(librevenge::RVNGInputStream*, librevenge::RVNGDrawingInterface*)
lin_solve
line_tok(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)
line_uniq(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
line_uniq_app(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
linguistic::GetLinguProperties()
linguistic::GetPosInWordToCheck(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int)
linguistic::IsNumeric(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
linguistic::IsUpper(rtl::OUString const&, int, int, o3tl::strong_int<unsigned short, LanguageTypeTag>)
linguistic::LinguIsUnspecified(o3tl::strong_int<unsigned short, LanguageTypeTag>)
linguistic::LinguIsUnspecified(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
linguistic::LinguLanguageToLocale(o3tl::strong_int<unsigned short, LanguageTypeTag>)
linguistic::LinguLocaleToLanguage(com::sun::star::lang::Locale const&)
linguistic::SaveDictionaries(com::sun::star::uno::Reference<com::sun::star::linguistic2::XSearchableDictionaryList> const&)
linguistic::capitalType(rtl::OUString const&, CharClass const*)
load_BLAS
localizeWebserviceURI(rtl::OUString&)
longdual_testset
lower_utf(w_char, int)
lp_solve_version
lp_yy_create_buffer
lp_yy_delete_buffer
lp_yy_flush_buffer
lp_yy_init_buffer
lp_yy_load_buffer_state
lp_yy_scan_buffer
lp_yy_scan_bytes
lp_yy_scan_string
lp_yy_switch_to_buffer
lp_yylex
lp_yyparse
lp_yyrestart
lucene_i64tot(long, wchar_t*, int)
lucene_snwprintf(wchar_t*, unsigned long, wchar_t const*, ...)
lucene_tcscasecmp(wchar_t const*, wchar_t const*)
lucene_tcslwr(wchar_t*)
lucene_utf8charlen(unsigned char)
lucene_utf8towc(wchar_t&, char const*)
lucene_utf8towcs(wchar_t*, char const*, unsigned long)
lucene_vsnwprintf(wchar_t*, unsigned long, wchar_t const*, __va_list_tag (&) [1])
lucene_wcstoutf8(char*, wchar_t const*, unsigned long)
lucene_wcstoutf8string[abi:cxx11](wchar_t const*, unsigned long)
lucene_wctoutf8(char*, wchar_t)
lucene_wprintf(wchar_t const*, ...)
main
makeNotebookbarTabControl
makeNotebookbarToolBox
makePriceLoop
makeRepresentativeTextForFont(short, vcl::Font const&)
make_SOSchain
make_lag
mat_additem
mat_appendcol
mat_appendrow
mat_appendvalue
mat_checkcounts
mat_colcompact
mat_collength
mat_computemax
mat_create
mat_equalRows
mat_expandcolumn
mat_extractmat
mat_findcolumn
mat_findelm
mat_findins
mat_free
mat_get_data
mat_getitem
mat_indexrange
mat_mapreplace
mat_memopt
mat_mergemat
mat_multadd
mat_multcol
mat_multrow
mat_nonzeros
mat_nz_unused
mat_rowcompact
mat_rowlength
mat_set_rowmap
mat_setcol
mat_setitem
mat_setrow
mat_setvalue
mat_shiftcols
mat_shiftrows
mat_transpose
mat_validate
mat_zerocompact
mdo_calloc
mdo_free
memopt_lp
mempool_create
mempool_free
mempool_obtainVector
mempool_releaseVector
minmax_to_scale
mkallcap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkallcap_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mkallsmall(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkallsmall_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mkinitcap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkinitcap_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mkinitsmall(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, cs_info const*)
mkinitsmall_utf(std::vector<w_char, std::allocator<w_char> >&, int)
mm_is_valid
mm_read_banner
mm_read_mtx_array_size
mm_read_mtx_crd
mm_read_mtx_crd_data
mm_read_mtx_crd_entry
mm_read_mtx_crd_size
mm_read_unsymmetric_sparse
mm_typecode_to_str
mm_write_banner
mm_write_mtx_array_size
mm_write_mtx_crd
mm_write_mtx_crd_size
mod
model::ColorSet::dumpAsXml(_xmlTextWriter*) const
model::Theme::GetColors() const
model::Theme::Theme(model::Theme const&)
modifyOF1
modifyUndoLadder
msfilter::MSCodec97::MSCodec97(unsigned long, rtl::OUString)
msfilter::MSCodec_CryptoAPI::GetDigestFromSalt(unsigned char const*, unsigned char*)
msfilter::MSCodec_CryptoAPI::GetEncryptionData()
msfilter::MSCodec_CryptoAPI::InitCipher(unsigned int)
msfilter::MSCodec_CryptoAPI::InitKey(unsigned short const*, unsigned char const*)
msfilter::MSCodec_Std97::GetDigestFromSalt(unsigned char const*, unsigned char*)
msfilter::rtfutil::OutChar(char16_t, int*, unsigned short, bool*, bool)
msfilter::util::GETVMLShapeType(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
multi_create
multi_enteringtheta
multi_enteringvar
multi_free
multi_getvar
multi_indexSet
multi_mustupdate
multi_populateSet
multi_recompute
multi_removevar
multi_resize
multi_restart
multi_size
multi_truncatingvar
multi_used
multi_valueInit
multi_valueList
my_daxpy
my_dcopy
my_ddot
my_dload
my_dnormi
my_dscal
my_dswap
my_idamax
mychomp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
myopen(std::basic_ifstream<char, std::char_traits<char> >&, char const*, std::_Ios_Openmode)
mystrrep(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
mystrsep(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&)
namecpy
negate_constraint
nextActiveLink
nextInactiveLink
nextbranch_BB
normalizeVector
null_tmp_store
obtain_column
ooo::vba::ConcreteXShapeGeometryAttributes::ConcreteXShapeGeometryAttributes(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
ooo::vba::ConcreteXShapeGeometryAttributes::getHeight() const
ooo::vba::ConcreteXShapeGeometryAttributes::getLeft() const
ooo::vba::ConcreteXShapeGeometryAttributes::getTop() const
ooo::vba::ConcreteXShapeGeometryAttributes::getWidth() const
ooo::vba::ConcreteXShapeGeometryAttributes::setHeight(double)
ooo::vba::ConcreteXShapeGeometryAttributes::setLeft(double)
ooo::vba::ConcreteXShapeGeometryAttributes::setTop(double)
ooo::vba::ConcreteXShapeGeometryAttributes::setWidth(double)
ooo::vba::ConcreteXShapeGeometryAttributes::~ConcreteXShapeGeometryAttributes()
ooo::vba::ContainerUtilities::FieldInList(com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&)
ooo::vba::DebugHelper::basicexception(com::sun::star::uno::Exception const&, ErrCode, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
ooo::vba::Millimeter::Millimeter()
ooo::vba::Millimeter::Millimeter(double)
ooo::vba::Millimeter::getInHundredthsOfOneMillimeter() const
ooo::vba::Millimeter::setInPoints(double)
ooo::vba::UserFormGeometryHelper::UserFormGeometryHelper(com::sun::star::uno::Reference<com::sun::star::awt::XControl> const&, double, double)
ooo::vba::UserFormGeometryHelper::getHeight() const
ooo::vba::UserFormGeometryHelper::getInnerHeight() const
ooo::vba::UserFormGeometryHelper::getInnerWidth() const
ooo::vba::UserFormGeometryHelper::getLeft() const
ooo::vba::UserFormGeometryHelper::getOffsetX() const
ooo::vba::UserFormGeometryHelper::getOffsetY() const
ooo::vba::UserFormGeometryHelper::getTop() const
ooo::vba::UserFormGeometryHelper::getWidth() const
ooo::vba::UserFormGeometryHelper::implGetPos(bool) const
ooo::vba::UserFormGeometryHelper::implGetSize(bool, bool) const
ooo::vba::UserFormGeometryHelper::implSetPos(double, bool)
ooo::vba::UserFormGeometryHelper::implSetSize(double, bool, bool)
ooo::vba::UserFormGeometryHelper::setHeight(double)
ooo::vba::UserFormGeometryHelper::setInnerHeight(double)
ooo::vba::UserFormGeometryHelper::setInnerWidth(double)
ooo::vba::UserFormGeometryHelper::setLeft(double)
ooo::vba::UserFormGeometryHelper::setTop(double)
ooo::vba::UserFormGeometryHelper::setWidth(double)
ooo::vba::executeMacro(SfxObjectShell*, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&, com::sun::star::uno::Any&, com::sun::star::uno::Any const&)
ooo::vba::extractStringFromAny(com::sun::star::uno::Any const&, bool)
ooo::vba::extractStringFromAny(com::sun::star::uno::Any const&, rtl::OUString const&, bool)
ooo::vba::getDefaultProjectName(SfxObjectShell const*)
ooo::vba::getIntrospectionAccess(com::sun::star::uno::Any const&)
ooo::vba::resolveVBAMacro(SfxObjectShell const*, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, bool, rtl::OUString const&)
ooo::vba::setPropertyValue(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&, rtl::OUString const&, com::sun::star::uno::Any const&)
oox::AttributeConversion::decodeHyper(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::AttributeConversion::decodeInteger(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::AttributeConversion::decodeIntegerHex(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::AttributeConversion::decodeUnsigned(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::AttributeList::AttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::AttributeList::getAttribList() const
oox::AttributeList::getBool(int) const
oox::AttributeList::getDateTime(int) const
oox::AttributeList::getHighlightColor(int) const
oox::AttributeList::getHyper(int) const
oox::AttributeList::getIntegerHex(int) const
oox::AttributeList::getTokenList(int) const
oox::BinaryInputStream::copyToStream(oox::BinaryOutputStream&)
oox::BinaryInputStream::readCharArray(int)
oox::BinaryInputStream::readCharArrayUC(int, unsigned short)
oox::BinaryInputStream::readCompressedUnicodeArray(int, bool)
oox::BinaryInputStream::readNulUnicodeArray()
oox::BinaryStreamBase::alignToBlock(int, long)
oox::BinaryStreamBase::~BinaryStreamBase()
oox::BinaryXInputStream::readData(com::sun::star::uno::Sequence<signed char>&, int, unsigned long)
oox::BinaryXInputStream::readMemory(void*, int, unsigned long)
oox::BinaryXInputStream::skip(int, unsigned long)
oox::BinaryXOutputStream::writeData(com::sun::star::uno::Sequence<signed char> const&, unsigned long)
oox::BinaryXOutputStream::writeMemory(void const*, int, unsigned long)
oox::GrabBagStack::isStackEmpty() const
oox::GraphicHelper::convertHmmToAppFont(com::sun::star::awt::Point const&) const
oox::GraphicHelper::convertHmmToAppFont(com::sun::star::awt::Size const&) const
oox::GraphicHelper::convertHmmToScreenPixel(com::sun::star::awt::Point const&) const
oox::GraphicHelper::convertHmmToScreenPixel(com::sun::star::awt::Size const&) const
oox::GraphicHelper::convertHmmToScreenPixelX(int) const
oox::GraphicHelper::convertHmmToScreenPixelY(int) const
oox::GraphicHelper::convertScreenPixelToHmm(com::sun::star::awt::Size const&) const
oox::GraphicHelper::convertScreenPixelXToHmm(double) const
oox::GraphicHelper::convertScreenPixelYToHmm(double) const
oox::GraphicHelper::getDefaultChartAreaLineStyle()
oox::GraphicHelper::getDefaultChartAreaLineWidth()
oox::GraphicHelper::getOriginalSize(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&) const
oox::GraphicHelper::getPaletteColor(int) const
oox::GraphicHelper::getSchemeColor(int) const
oox::GraphicHelper::importGraphic(com::sun::star::uno::Sequence<signed char> const&) const
oox::GraphicHelper::initializeGraphicMapperIfNeeded() const
oox::GraphicHelper::setGraphicMapper(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphicMapper> const&)
oox::IProgressBar::~IProgressBar()
oox::ModelObjectHelper::getFillBitmap(rtl::OUString const&)
oox::ModelObjectHelper::hasLineMarker(rtl::OUString const&) const
oox::ModelObjectHelper::insertFillBitmapXGraphic(com::sun::star::uno::Reference<com::sun::star::graphic::XGraphic> const&)
oox::ModelObjectHelper::insertFillGradient(com::sun::star::awt::Gradient const&)
oox::ModelObjectHelper::insertFillGradient(com::sun::star::awt::Gradient2 const&)
oox::ModelObjectHelper::insertFillHatch(com::sun::star::drawing::Hatch const&)
oox::ModelObjectHelper::insertLineDash(com::sun::star::drawing::LineDash const&)
oox::ModelObjectHelper::insertLineMarker(rtl::OUString const&, com::sun::star::drawing::PolyPolygonBezierCoords const&)
oox::ModelObjectHelper::insertTransGrandient(com::sun::star::awt::Gradient const&)
oox::ModelObjectHelper::insertTransGrandient(com::sun::star::awt::Gradient2 const&)
oox::ObjectContainer::ObjectContainer(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString)
oox::ObjectContainer::createContainer() const
oox::ObjectContainer::getObject(rtl::OUString const&) const
oox::ObjectContainer::hasObject(rtl::OUString const&) const
oox::ObjectContainer::insertObject(rtl::OUString const&, com::sun::star::uno::Any const&, bool)
oox::ProgressBar::ProgressBar(com::sun::star::uno::Reference<com::sun::star::task::XStatusIndicator> const&, rtl::OUString const&)
oox::ProgressBar::getPosition() const
oox::ProgressBar::setPosition(double)
oox::PropertyMap::assignAll(oox::PropertyMap const&)
oox::PropertyMap::assignUsed(oox::PropertyMap const&)
oox::PropertyMap::empty() const
oox::PropertyMap::erase(int)
oox::PropertyMap::fillPropertyNameMap(std::map<rtl::OUString, com::sun::star::uno::Any, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, com::sun::star::uno::Any> > >&) const
oox::PropertyMap::getPropertyId(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::PropertyMap::getPropertyName(int)
oox::PropertyMap::hasProperty(int) const
oox::PropertyMap::makePropertySet() const
oox::PropertyMap::setAnyProperty(int, com::sun::star::uno::Any const&)
oox::PropertySet::hasProperty(int) const
oox::PropertySet::implGetPropertyValue(com::sun::star::uno::Any&, rtl::OUString const&) const
oox::PropertySet::implSetPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
oox::PropertySet::setProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
oox::SegmentProgressBar::getPosition() const
oox::SegmentProgressBar::setPosition(double)
oox::SequenceInputStream::SequenceInputStream(com::sun::star::uno::Sequence<signed char> const&)
oox::SequenceInputStream::readMemory(void*, int, unsigned long)
oox::SequenceSeekableStream::SequenceSeekableStream(com::sun::star::uno::Sequence<signed char> const&)
oox::SequenceSeekableStream::close()
oox::SequenceSeekableStream::size() const
oox::StorageBase::StorageBase(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
oox::StorageBase::StorageBase(com::sun::star::uno::Reference<com::sun::star::io::XStream> const&, bool)
oox::StorageBase::StorageBase(oox::StorageBase const&, rtl::OUString, bool)
oox::StorageBase::copyStorageToStorage(oox::StorageBase&)
oox::StorageBase::copyToStorage(oox::StorageBase&, rtl::OUString const&)
oox::StorageBase::getElementNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&) const
oox::StorageBase::getPath() const
oox::StorageBase::getSubStorage(rtl::OUString const&, bool)
oox::StorageBase::getXStorage() const
oox::StorageBase::isRootStorage() const
oox::StorageBase::openInputStream(rtl::OUString const&)
oox::StorageBase::~StorageBase()
oox::ThemeExport::writeBackgroundFillStyle(model::FillStyle const&)
oox::ThemeExport::writeBlip(model::BlipFill const&)
oox::ThemeExport::writeBlipFill(model::BlipFill const&)
oox::ThemeExport::writeColorCRGB(model::ComplexColor const&)
oox::ThemeExport::writeColorHSL(model::ComplexColor const&)
oox::ThemeExport::writeColorPlaceholder(model::ComplexColor const&)
oox::ThemeExport::writeColorRGB(model::ComplexColor const&)
oox::ThemeExport::writeColorSet(model::Theme const&)
oox::ThemeExport::writeColorSystem(model::ComplexColor const&)
oox::ThemeExport::writeColorTheme(model::ComplexColor const&)
oox::ThemeExport::writeColorTransformations(std::vector<model::Transformation, std::allocator<model::Transformation> > const&)
oox::ThemeExport::writeComplexColor(model::ComplexColor const&)
oox::ThemeExport::writeEffectStyle(model::EffectStyle const&)
oox::ThemeExport::writeFillStyle(model::FillStyle const&)
oox::ThemeExport::writeFontScheme(model::FontScheme const&)
oox::ThemeExport::writeFormatScheme(model::FormatScheme const&)
oox::ThemeExport::writeGradientFill(model::GradientFill const&)
oox::ThemeExport::writeLineStyle(model::LineStyle const&)
oox::ThemeExport::writePatternFill(model::PatternFill const&)
oox::ThemeExport::writeSolidFill(model::SolidFill const&)
oox::core::ContextHandler2Helper::ContextHandler2Helper(bool, oox::core::XmlFilterBase&)
oox::core::ContextHandler2Helper::implCharacters(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::core::ContextHandler2Helper::implCreateChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler2Helper::implCreateRecordContext(int, oox::SequenceInputStream&)
oox::core::ContextHandler2Helper::implEndElement(int)
oox::core::ContextHandler2Helper::implEndRecord(int)
oox::core::ContextHandler2Helper::implStartElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler2Helper::implStartRecord(int, oox::SequenceInputStream&)
oox::core::ContextHandler2Helper::popElementInfo()
oox::core::ContextHandler2Helper::prepareMceContext(int, oox::AttributeList const&)
oox::core::ContextHandler2Helper::processCollectedChars()
oox::core::ContextHandler2Helper::pushElementInfo(int)
oox::core::ContextHandler2Helper::~ContextHandler2Helper()
oox::core::ContextHandler::ContextHandler(std::shared_ptr<oox::core::FragmentBaseData>)
oox::core::ContextHandler::characters(rtl::OUString const&)
oox::core::ContextHandler::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler::createRecordContext(int, oox::SequenceInputStream&)
oox::core::ContextHandler::endFastElement(int)
oox::core::ContextHandler::endRecord(int)
oox::core::ContextHandler::getFragmentPath() const
oox::core::ContextHandler::implSetLocator(com::sun::star::uno::Reference<com::sun::star::xml::sax::XLocator> const&)
oox::core::ContextHandler::startFastElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::ContextHandler::startRecord(int, oox::SequenceInputStream&)
oox::core::FastParser::FastParser()
oox::core::FastParser::clearDocumentHandler()
oox::core::FastParser::parseStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, rtl::OUString const&)
oox::core::FastParser::parseStream(com::sun::star::xml::sax::InputSource const&, bool)
oox::core::FastParser::parseStream(oox::StorageBase&, rtl::OUString const&)
oox::core::FastParser::registerNamespace(int)
oox::core::FastParser::setDocumentHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastDocumentHandler> const&)
oox::core::FastTokenHandler::getImplementationName()
oox::core::FastTokenHandler::getSupportedServiceNames()
oox::core::FastTokenHandler::getTokenDirect(char const*, int) const
oox::core::FastTokenHandler::getTokenFromUTF8(com::sun::star::uno::Sequence<signed char> const&)
oox::core::FastTokenHandler::getUTF8Identifier(int)
oox::core::FastTokenHandler::supportsService(rtl::OUString const&)
oox::core::FastTokenHandler::~FastTokenHandler()
oox::core::FilterBase::FilterBase(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
oox::core::FilterBase::getFilterData() const
oox::core::FilterBase::getMainDocumentStream() const
oox::core::FilterBase::getModelObjectHelper() const
oox::core::FilterBase::getModelObjectHelperForModel(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&) const
oox::core::FilterBase::getOleObjectHelper() const
oox::core::FilterBase::implFinalizeExport(utl::MediaDescriptor&)
oox::core::FilterBase::implGetInputStream(utl::MediaDescriptor&) const
oox::core::FilterBase::implGetOutputStream(utl::MediaDescriptor&) const
oox::core::FilterBase::openOutputStream(rtl::OUString const&) const
oox::core::FilterBase::setMediaDescriptor(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
oox::core::FilterBase::~FilterBase()
oox::core::FilterDetect::detect(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
oox::core::FilterDetect::getImplementationName()
oox::core::FilterDetect::getSupportedServiceNames()
oox::core::FilterDetect::supportsService(rtl::OUString const&)
oox::core::FilterDetect::~FilterDetect()
oox::core::FragmentHandler::FragmentHandler(oox::core::XmlFilterBase&, rtl::OUString const&)
oox::core::FragmentHandler::FragmentHandler(oox::core::XmlFilterBase&, rtl::OUString const&, std::shared_ptr<oox::core::Relations>)
oox::core::FragmentHandler::characters(rtl::OUString const&)
oox::core::FragmentHandler::createFastChildContext(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::FragmentHandler::endDocument()
oox::core::FragmentHandler::endFastElement(int)
oox::core::FragmentHandler::startDocument()
oox::core::FragmentHandler::startFastElement(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::core::FragmentHandler::~FragmentHandler()
oox::core::Relations::Relations(rtl::OUString)
oox::core::Relations::getFragmentPathFromFirstType(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::core::Relations::getFragmentPathFromFirstTypeFromOfficeDoc(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::core::Relations::getFragmentPathFromRelation(oox::core::Relation const&) const
oox::core::Relations::getInternalTargetFromRelId(rtl::OUString const&) const
oox::core::Relations::getRelationFromFirstType(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::core::XmlFilterBase::checkDocumentProperties(com::sun::star::uno::Reference<com::sun::star::document::XDocumentProperties> const&)
oox::core::XmlFilterBase::getDiagramFontHeights()
oox::core::XmlFilterBase::importCustomFragments(com::sun::star::uno::Reference<com::sun::star::embed::XStorage> const&)
oox::core::XmlFilterBase::importFragment(rtl::OUString const&)
oox::core::XmlFilterBase::importFragment(rtl::Reference<oox::core::FragmentHandler> const&, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastSAXSerializable> const&)
oox::core::XmlFilterBase::importRelations(rtl::OUString const&)
oox::core::XmlFilterBase::isMSO2007Document() const
oox::core::XmlFilterBase::setDiagramFontHeights(std::map<rtl::OUString, std::map<std::shared_ptr<oox::drawingml::Shape>, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>, std::less<std::shared_ptr<oox::drawingml::Shape> >, std::allocator<std::pair<std::shared_ptr<oox::drawingml::Shape> const, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> > > >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::map<std::shared_ptr<oox::drawingml::Shape>, com::sun::star::uno::Reference<com::sun::star::drawing::XShape>, std::less<std::shared_ptr<oox::drawingml::Shape> >, std::allocator<std::pair<std::shared_ptr<oox::drawingml::Shape> const, com::sun::star::uno::Reference<com::sun::star::drawing::XShape> > > > > > >*)
oox::core::XmlFilterBase::setMissingExtDrawing()
oox::crypto::AgileEngine::calculateBlock(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&)
oox::crypto::AgileEngine::calculateHashFinal(rtl::OUString const&, std::vector<unsigned char, std::allocator<unsigned char> >&)
oox::crypto::AgileEngine::cryptoType(oox::crypto::AgileEncryptionInfo const&)
oox::crypto::AgileEngine::decryptEncryptionKey(rtl::OUString const&)
oox::crypto::AgileEngine::decryptHmacKey()
oox::crypto::AgileEngine::decryptHmacValue()
oox::crypto::AgileEngine::encryptBlock(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&, std::vector<unsigned char, std::allocator<unsigned char> >&)
oox::crypto::AgileEngine::encryptEncryptionKey(rtl::OUString const&)
oox::crypto::AgileEngine::encryptHmacKey()
oox::crypto::AgileEngine::encryptHmacValue()
oox::crypto::AgileEngine::setupEncryptionKey(rtl::OUString const&)
oox::crypto::Crypto::Crypto()
oox::crypto::Standard2007Engine::calculateEncryptionKey(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::crypto::Standard2007Engine::checkDataIntegrity()
oox::crypto::Standard2007Engine::generateEncryptionKey(rtl::OUString const&)
oox::crypto::Standard2007Engine::generateVerifier()
oox::crypto::Standard2007Engine::readEncryptionInfo(com::sun::star::uno::Reference<com::sun::star::io::XInputStream>&)
oox::drawingml::ClrScheme::ToAny(com::sun::star::uno::Any&) const
oox::drawingml::ClrScheme::fill(model::ColorSet&) const
oox::drawingml::ClrScheme::setColor(int, Color)
oox::drawingml::Color::addChartTintTransformation(double)
oox::drawingml::Color::addTransformation(int, int)
oox::drawingml::Color::clearTransparence()
oox::drawingml::Color::equals(oox::drawingml::Color const&, oox::GraphicHelper const&, Color) const
oox::drawingml::Color::getColorTransformationName(int)
oox::drawingml::Color::getColorTransformationToken(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::drawingml::Color::getComplexColor() const
oox::drawingml::Color::getDmlPresetColor(int, Color)
oox::drawingml::Color::getHighlightColor(int, Color)
oox::drawingml::Color::getLumMod() const
oox::drawingml::Color::getLumOff() const
oox::drawingml::Color::getSchemeColorIndex() const
oox::drawingml::Color::getTintOrShade() const
oox::drawingml::Color::getTransparency() const
oox::drawingml::Color::hasTransparency() const
oox::drawingml::Color::setHighlight(int)
oox::drawingml::Color::setHslClr(int, int, int)
oox::drawingml::Color::setPrstClr(int)
oox::drawingml::Color::setResolvedRgb(Color) const
oox::drawingml::Color::setScrgbClr(int, int, int)
oox::drawingml::Color::setSysClr(int, int)
oox::drawingml::Color::setUnused()
oox::drawingml::Color::toCrgb() const
oox::drawingml::Color::toHsl() const
oox::drawingml::Color::toRgb() const
oox::drawingml::ConnectorShapeContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ConnectorShapeContext::~ConnectorShapeContext()
oox::drawingml::GraphicExport::writeBlip(Graphic const&, std::vector<model::BlipEffect, std::allocator<model::BlipEffect> > const&)
oox::drawingml::GraphicExport::writeNewEntryToStorage(Graphic const&, bool)
oox::drawingml::GraphicExport::writeNewSvgEntryToStorage(Graphic const&, bool)
oox::drawingml::GraphicShapeContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::GraphicalObjectFrameContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::GraphicalObjectFrameContext::onEndElement()
oox::drawingml::Shape::Shape(std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::Shape::addChildren(oox::core::XmlFilterBase&, oox::drawingml::Shape&, oox::drawingml::Theme const*, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, std::map<rtl::OUString, std::shared_ptr<oox::drawingml::Shape>, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, std::shared_ptr<oox::drawingml::Shape> > > >*, basegfx::B2DHomMatrix const&)
oox::drawingml::Shape::applyShapeReference(oox::drawingml::Shape const&, bool)
oox::drawingml::Shape::cloneFillProperties()
oox::drawingml::Shape::convertSmartArtToMetafile(oox::core::XmlFilterBase const&)
oox::drawingml::Shape::createAndInsert(oox::core::XmlFilterBase&, rtl::OUString const&, oox::drawingml::Theme const*, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, bool, bool, basegfx::B2DHomMatrix&, oox::drawingml::FillProperties const&, std::shared_ptr<oox::drawingml::Shape>)
oox::drawingml::Shape::finalizeServiceName(oox::core::XmlFilterBase&, rtl::OUString const&, com::sun::star::awt::Rectangle const&)
oox::drawingml::Shape::getActualEffectProperties(oox::drawingml::Theme const*) const
oox::drawingml::Shape::getActualFillProperties(oox::drawingml::Theme const*, oox::drawingml::FillProperties const*) const
oox::drawingml::Shape::getActualLineProperties(oox::drawingml::Theme const*) const
oox::drawingml::Shape::getShapeStyleRef(int) const
oox::drawingml::Shape::getTableProperties()
oox::drawingml::Shape::keepDiagramCompatibilityInfo()
oox::drawingml::Shape::keepDiagramDrawing(oox::core::XmlFilterBase&, rtl::OUString const&)
oox::drawingml::Shape::migrateDiagramHelperToNewShape(std::shared_ptr<oox::drawingml::Shape> const&)
oox::drawingml::Shape::prepareDiagramHelper(std::shared_ptr<oox::drawingml::Diagram> const&, std::shared_ptr<oox::drawingml::Theme> const&)
oox::drawingml::Shape::propagateDiagramHelper()
oox::drawingml::Shape::putPropertiesToGrabBag(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
oox::drawingml::Shape::putPropertyToGrabBag(com::sun::star::beans::PropertyValue const&)
oox::drawingml::Shape::putPropertyToGrabBag(rtl::OUString const&, com::sun::star::uno::Any const&)
oox::drawingml::Shape::renderDiagramToGraphic(oox::core::XmlFilterBase const&)
oox::drawingml::Shape::resolveRelationshipsOfTypeFromOfficeDoc(oox::core::XmlFilterBase&, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::drawingml::Shape::setChartType(bool)
oox::drawingml::Shape::setDefaults(bool)
oox::drawingml::Shape::setDiagramType()
oox::drawingml::Shape::setLockedCanvas(bool)
oox::drawingml::Shape::setMasterTextListStyle(std::shared_ptr<oox::drawingml::TextListStyle> const&)
oox::drawingml::Shape::setOleObjectType()
oox::drawingml::Shape::setTableType()
oox::drawingml::Shape::setTextBody(std::shared_ptr<oox::drawingml::TextBody> const&)
oox::drawingml::Shape::setTextBox(bool)
oox::drawingml::Shape::setWPGChild(bool)
oox::drawingml::Shape::setWordprocessingCanvas(bool)
oox::drawingml::Shape::setWps(bool)
oox::drawingml::ShapeContext::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ShapeContext::~ShapeContext()
oox::drawingml::ShapeExport::GetNewShapeID(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::GetNewShapeID(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, oox::core::XmlFilterBase*)
oox::drawingml::ShapeExport::GetShapeID(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::GetShapeName(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::MapSize(com::sun::star::awt::Size const&) const
oox::drawingml::ShapeExport::NonEmptyText(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
oox::drawingml::ShapeExport::WriteBorderLine(int, com::sun::star::table::BorderLine2 const&)
oox::drawingml::ShapeExport::WriteClosedPolyPolygonShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteConnectorShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteCustomShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteEllipseShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteGraphicObjectShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteGraphicObjectShapePart(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, Graphic const*)
oox::drawingml::ShapeExport::WriteGroupShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteLineShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteMathShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteNonVisualProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteOLE2Shape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteOpenPolyPolygonShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WritePolyPolygonShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, bool)
oox::drawingml::ShapeExport::WriteRectangleShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteTable(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteTableCellBorders(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ShapeExport::WriteTableCellProperties(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
oox::drawingml::ShapeExport::WriteTableShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapeExport::WriteUnknownShape(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&)
oox::drawingml::ShapePropertyInfo::ShapePropertyInfo(o3tl::enumarray<oox::drawingml::ShapeProperty, int> const&, bool, bool, bool, bool, bool)
oox::drawingml::ShapePropertyMap::hasNamedLineMarkerInTable(rtl::OUString const&) const
oox::drawingml::ShapePropertyMap::setAnyProperty(oox::drawingml::ShapeProperty, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillBitmap(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillBitmapName(com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillGradient(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setFillHatch(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setGradientTrans(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setLineDash(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::setLineMarker(int, com::sun::star::uno::Any const&)
oox::drawingml::ShapePropertyMap::supportsProperty(oox::drawingml::ShapeProperty) const
oox::drawingml::Theme::getEffectStyle(int) const
oox::drawingml::Theme::getFillStyle(int) const
oox::drawingml::Theme::getFontStyle(int) const
oox::drawingml::Theme::getLineStyle(int) const
oox::drawingml::Theme::resolveFont(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::drawingml::ThemeFilterBase::getChartConverter()
oox::drawingml::ThemeFilterBase::getCurrentTheme() const
oox::drawingml::ThemeFilterBase::getCurrentThemePtr() const
oox::drawingml::ThemeFilterBase::getImplementationName()
oox::drawingml::ThemeFilterBase::getTableStyles()
oox::drawingml::ThemeFilterBase::getVmlDrawing()
oox::drawingml::ThemeFilterBase::implCreateVbaProject() const
oox::drawingml::ThemeFilterBase::setCurrentTheme(std::shared_ptr<oox::drawingml::Theme> const&)
oox::drawingml::ThemeFilterBase::~ThemeFilterBase()
oox::drawingml::ThemeFragmentHandler::onCreateContext(int, oox::AttributeList const&)
oox::drawingml::ThemeFragmentHandler::onStartElement(oox::AttributeList const&)
oox::drawingml::ThemeFragmentHandler::~ThemeFragmentHandler()
oox::drawingml::chart::ChartConverter::convertFromModel(oox::core::XmlFilterBase&, oox::drawingml::chart::ChartSpaceModel&, com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::awt::Point const&, com::sun::star::awt::Size const&)
oox::drawingml::chart::ChartConverter::createDataProvider(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&)
oox::drawingml::chart::ChartConverter::createDataSequence(com::sun::star::uno::Reference<com::sun::star::chart2::data::XDataProvider> const&, oox::drawingml::chart::DataSequenceModel const&, rtl::OUString const&, rtl::OUString const&)
oox::formulaimport::XmlStream::Tag::Tag(int, com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
oox::formulaimport::XmlStream::Tag::Tag(int, oox::formulaimport::XmlStream::AttributeList)
oox::formulaimport::XmlStream::checkTag(int, bool)
oox::formulaimport::XmlStream::currentTag() const
oox::formulaimport::XmlStream::findTagInternal(int, bool)
oox::formulaimport::XmlStream::moveToNextTag()
oox::formulaimport::XmlStream::skipElementInternal(int, bool)
oox::ole::AxCheckBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxCheckBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxCheckBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxCheckBoxModel::getControlType() const
oox::ole::AxComboBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxComboBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxComboBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxComboBoxModel::getControlType() const
oox::ole::AxCommandButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxCommandButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxCommandButtonModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxCommandButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxCommandButtonModel::getControlType() const
oox::ole::AxCommandButtonModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxCommandButtonModel::importPictureData(int, oox::BinaryInputStream&)
oox::ole::AxCommandButtonModel::importProperty(int, rtl::OUString const&)
oox::ole::AxContainerModelBase::AxContainerModelBase(bool)
oox::ole::AxContainerModelBase::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxContainerModelBase::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxContainerModelBase::importClassTable(oox::BinaryInputStream&, std::vector<rtl::OUString, std::allocator<rtl::OUString> >&)
oox::ole::AxContainerModelBase::importProperty(int, rtl::OUString const&)
oox::ole::AxControlModelBase::AxControlModelBase()
oox::ole::AxControlModelBase::importProperty(int, rtl::OUString const&)
oox::ole::AxFontData::AxFontData()
oox::ole::AxFontData::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxFontData::getHeightPoints() const
oox::ole::AxFontData::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxFontData::importGuidAndFont(oox::BinaryInputStream&)
oox::ole::AxFontData::importStdFont(oox::BinaryInputStream&)
oox::ole::AxFontDataModel::AxFontDataModel(bool)
oox::ole::AxFontDataModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxFontDataModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxFontDataModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxFontDataModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxFontDataModel::importProperty(int, rtl::OUString const&)
oox::ole::AxFrameModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxFrameModel::getControlType() const
oox::ole::AxLabelModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxLabelModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxLabelModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxLabelModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxLabelModel::getControlType() const
oox::ole::AxLabelModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxLabelModel::importProperty(int, rtl::OUString const&)
oox::ole::AxListBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxListBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxListBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxListBoxModel::getControlType() const
oox::ole::AxMorphDataModelBase::AxMorphDataModelBase()
oox::ole::AxMorphDataModelBase::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxMorphDataModelBase::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxMorphDataModelBase::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxMorphDataModelBase::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxMorphDataModelBase::importPictureData(int, oox::BinaryInputStream&)
oox::ole::AxMorphDataModelBase::importProperty(int, rtl::OUString const&)
oox::ole::AxNumericFieldModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxNumericFieldModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxNumericFieldModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxNumericFieldModel::getControlType() const
oox::ole::AxOptionButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxOptionButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxOptionButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxOptionButtonModel::getControlType() const
oox::ole::AxScrollBarModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxScrollBarModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxScrollBarModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxScrollBarModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxScrollBarModel::getControlType() const
oox::ole::AxScrollBarModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxScrollBarModel::importProperty(int, rtl::OUString const&)
oox::ole::AxSpinButtonModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxSpinButtonModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxSpinButtonModel::exportBinaryModel(oox::BinaryOutputStream&)
oox::ole::AxSpinButtonModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxSpinButtonModel::getControlType() const
oox::ole::AxSpinButtonModel::importBinaryModel(oox::BinaryInputStream&)
oox::ole::AxSpinButtonModel::importProperty(int, rtl::OUString const&)
oox::ole::AxTextBoxModel::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::AxTextBoxModel::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::AxTextBoxModel::exportCompObj(oox::BinaryOutputStream&)
oox::ole::AxTextBoxModel::getControlType() const
oox::ole::ControlConverter::convertAxBackground(oox::PropertyMap&, unsigned int, unsigned int, oox::ole::ApiTransparencyMode) const
oox::ole::ControlConverter::convertAxBorder(oox::PropertyMap&, unsigned int, int, int) const
oox::ole::ControlConverter::convertAxOrientation(oox::PropertyMap&, std::pair<int, int> const&, int)
oox::ole::ControlConverter::convertAxPicture(oox::PropertyMap&, com::sun::star::uno::Sequence<signed char> const&, int) const
oox::ole::ControlConverter::convertAxPicture(oox::PropertyMap&, com::sun::star::uno::Sequence<signed char> const&, unsigned int) const
oox::ole::ControlConverter::convertAxState(oox::PropertyMap&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, oox::ole::ApiDefaultStateMode, bool)
oox::ole::ControlConverter::convertAxVisualEffect(oox::PropertyMap&, int)
oox::ole::ControlConverter::convertColor(oox::PropertyMap&, int, unsigned int) const
oox::ole::ControlConverter::convertOrientation(oox::PropertyMap&, bool)
oox::ole::ControlConverter::convertPicture(oox::PropertyMap&, com::sun::star::uno::Sequence<signed char> const&) const
oox::ole::ControlConverter::convertPosition(oox::PropertyMap&, std::pair<int, int> const&) const
oox::ole::ControlConverter::convertScrollBar(oox::PropertyMap&, int, int, int, int, int, bool)
oox::ole::ControlConverter::convertScrollabilitySettings(oox::PropertyMap&, std::pair<int, int> const&, std::pair<int, int> const&, int) const
oox::ole::ControlConverter::convertSize(oox::PropertyMap&, std::pair<int, int> const&) const
oox::ole::ControlConverter::convertToAxBorder(oox::PropertySet const&, unsigned int&, int&, int&)
oox::ole::ControlConverter::convertToAxOrientation(oox::PropertySet const&, int&)
oox::ole::ControlConverter::convertToAxState(oox::PropertySet const&, rtl::OUString&, int&, oox::ole::ApiDefaultStateMode)
oox::ole::ControlConverter::convertToAxVisualEffect(oox::PropertySet const&, int&)
oox::ole::ControlConverter::convertToMSColor(oox::PropertySet const&, int, unsigned int&, unsigned int)
oox::ole::ControlConverter::convertToMSOrientation(oox::PropertySet const&, bool&)
oox::ole::ControlConverter::convertVerticalAlign(oox::PropertyMap&, int)
oox::ole::ControlModelBase::ControlModelBase()
oox::ole::ControlModelBase::convertFromProperties(oox::PropertySet&, oox::ole::ControlConverter const&)
oox::ole::ControlModelBase::convertProperties(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::ControlModelBase::convertSize(oox::PropertyMap&, oox::ole::ControlConverter const&) const
oox::ole::ControlModelBase::getServiceName() const
oox::ole::ControlModelBase::importPictureData(int, oox::BinaryInputStream&)
oox::ole::ControlModelBase::importProperty(int, rtl::OUString const&)
oox::ole::EmbeddedControl::convertFromProperties(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, oox::ole::ControlConverter const&)
oox::ole::EmbeddedControl::convertProperties(com::sun::star::uno::Reference<com::sun::star::awt::XControlModel> const&, oox::ole::ControlConverter const&) const
oox::ole::EmbeddedControl::createModelFromGuid(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::ole::EmbeddedControl::getServiceName() const
oox::ole::MSConvertOCXControls::importControlFromStream(oox::BinaryInputStream&, com::sun::star::uno::Reference<com::sun::star::form::XFormComponent>&, rtl::OUString const&, int)
oox::ole::MSConvertOCXControls::importControlFromStream(oox::BinaryInputStream&, com::sun::star::uno::Reference<com::sun::star::form::XFormComponent>&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::ole::OleFormCtrlExportHelper::exportCompObj(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
oox::ole::OleFormCtrlExportHelper::exportName(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
oox::ole::OleHelper::decodeOleColor(oox::GraphicHelper const&, unsigned int, bool)
oox::ole::OleHelper::exportGuid(oox::BinaryOutputStream&, SvGlobalName const&)
oox::ole::OleHelper::importGuid(oox::BinaryInputStream&)
oox::ole::OleHelper::importStdFont(oox::ole::StdFontInfo&, oox::BinaryInputStream&, bool)
oox::ole::OleHelper::importStdPic(com::sun::star::uno::Sequence<signed char>&, oox::BinaryInputStream&)
oox::ole::OleStorage::OleStorage(oox::ole::OleStorage const&, com::sun::star::uno::Reference<com::sun::star::container::XNameContainer> const&, rtl::OUString const&, bool)
oox::ole::OleStorage::OleStorage(oox::ole::OleStorage const&, com::sun::star::uno::Reference<com::sun::star::io::XStream> const&, rtl::OUString const&)
oox::ole::OleStorage::implCommit() const
oox::ole::OleStorage::implGetElementNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&) const
oox::ole::OleStorage::implGetXStorage() const
oox::ole::OleStorage::implIsStorage() const
oox::ole::OleStorage::implOpenInputStream(rtl::OUString const&)
oox::ole::OleStorage::implOpenOutputStream(rtl::OUString const&)
oox::ole::OleStorage::implOpenSubStorage(rtl::OUString const&, bool)
oox::ole::OleStorage::initStorage(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&)
oox::ole::OleStorage::initStorage(com::sun::star::uno::Reference<com::sun::star::io::XStream> const&)
oox::ole::VbaMacroAttacherBase::resolveAndAttachMacro(com::sun::star::uno::Reference<com::sun::star::script::vba::XVBAMacroResolver> const&)
oox::ole::VbaProject::copyStorage(oox::StorageBase&)
oox::ole::VbaProject::createBasicLibrary()
oox::ole::VbaProject::createDialogLibrary()
oox::ole::VbaProject::getLibraryContainer(int)
oox::ole::VbaProject::importVba(oox::StorageBase&, oox::GraphicHelper const&)
oox::ole::VbaProject::openLibrary(int)
oox::ole::VbaProject::prepareImport()
oox::shape::ShapeContextHandler::applyFontRefColor(std::shared_ptr<oox::drawingml::Shape> const&, oox::drawingml::Color const&)
oox::shape::ShapeContextHandler::getChartShapeContext(int)
oox::shape::ShapeContextHandler::getContextHandler(int)
oox::shape::ShapeContextHandler::getDiagramShapeContext()
oox::shape::ShapeContextHandler::getDrawingShapeContext()
oox::shape::ShapeContextHandler::getGraphicShapeContext(int)
oox::shape::ShapeContextHandler::getLockedCanvasContext(int)
oox::shape::ShapeContextHandler::getWordprocessingCanvasContext(int)
oox::shape::ShapeContextHandler::getWpgContext(int)
oox::shape::ShapeContextHandler::getWpsContext(int, int)
oox::shape::ShapeContextHandler::popStartToken()
oox::shape::ShapeContextHandler::~ShapeContextHandler()
oox::shape::ShapeDrawingFragmentHandler::endDocument()
oox::shape::ShapeDrawingFragmentHandler::onCreateContext(int, oox::AttributeList const&)
oox::shape::ShapeDrawingFragmentHandler::~ShapeDrawingFragmentHandler()
oox::shape::ShapeFilterBase::getChartConverter()
oox::shape::ShapeFilterBase::getCurrentTheme() const
oox::shape::ShapeFilterBase::getCurrentThemePtr() const
oox::shape::ShapeFilterBase::getImplementationName()
oox::shape::ShapeFilterBase::getSchemeColor(int) const
oox::shape::ShapeFilterBase::getTableStyles()
oox::shape::ShapeFilterBase::getVmlDrawing()
oox::shape::ShapeFilterBase::implCreateGraphicHelper() const
oox::shape::ShapeFilterBase::implCreateVbaProject() const
oox::shape::ShapeFilterBase::setCurrentTheme(std::shared_ptr<oox::drawingml::Theme> const&)
oox::shape::ShapeFilterBase::~ShapeFilterBase()
oox::vml::ConversionHelper::decodeBool(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::vml::ConversionHelper::decodeMeasureToEmu(oox::GraphicHelper const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, bool, bool)
oox::vml::ConversionHelper::decodeMeasureToHmm(oox::GraphicHelper const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, bool, bool)
oox::vml::ConversionHelper::decodeMeasureToTwip(oox::GraphicHelper const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, int, bool, bool)
oox::vml::ConversionHelper::decodePercent(std::basic_string_view<char16_t, std::char_traits<char16_t> >, double)
oox::vml::ConversionHelper::decodeRotation(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::vml::ConversionHelper::decodeVmlPath(std::vector<std::vector<com::sun::star::awt::Point, std::allocator<com::sun::star::awt::Point> >, std::allocator<std::vector<com::sun::star::awt::Point, std::allocator<com::sun::star::awt::Point> > > >&, std::vector<std::vector<com::sun::star::drawing::PolygonFlags, std::allocator<com::sun::star::drawing::PolygonFlags> >, std::allocator<std::vector<com::sun::star::drawing::PolygonFlags, std::allocator<com::sun::star::drawing::PolygonFlags> > > >&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
oox::vml::ConversionHelper::separatePair(std::basic_string_view<char16_t, std::char_traits<char16_t> >&, std::basic_string_view<char16_t, std::char_traits<char16_t> >&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, char16_t)
oox::vml::Drawing::convertClientAnchor(com::sun::star::awt::Rectangle&, rtl::OUString const&) const
oox::vml::Drawing::createAndInsertClientXShape(oox::vml::ShapeBase const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::awt::Rectangle const&) const
oox::vml::Drawing::createAndInsertXShape(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, com::sun::star::awt::Rectangle const&) const
oox::vml::Drawing::finalizeFragmentImport()
oox::vml::Drawing::getControlInfo(rtl::OUString const&) const
oox::vml::Drawing::getLocalShapeIndex(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
oox::vml::Drawing::isShapeSupported(oox::vml::ShapeBase const&) const
oox::vml::Drawing::notifyXShapeInserted(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&, com::sun::star::awt::Rectangle const&, oox::vml::ShapeBase const&, bool)
oox::vml::Drawing::registerBlockId(int)
oox::vml::FillModel::assignUsed(oox::vml::FillModel const&)
oox::vml::ShapeBase::ShapeBase(oox::vml::Drawing&)
oox::vml::ShapeBase::calcShapeRectangle(oox::vml::ShapeParentAnchor const*) const
oox::vml::ShapeBase::convertAndInsert(com::sun::star::uno::Reference<com::sun::star::drawing::XShapes> const&, oox::vml::ShapeParentAnchor const*) const
oox::vml::ShapeBase::convertShapeProperties(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&) const
oox::vml::ShapeBase::finalizeFragmentImport()
oox::vml::ShapeBase::getChildById(rtl::OUString const&) const
oox::vml::ShapeBase::getChildTypeById(rtl::OUString const&) const
oox::vml::ShapeBase::getContainer() const
oox::vml::ShapeBase::setContainer(oox::vml::ShapeContainer*)
oox::vml::TextBox::TextBox(oox::vml::ShapeTypeModel&)
oox::vml::TextBox::appendPortion(oox::vml::TextParagraphModel const&, oox::vml::TextFontModel const&, rtl::OUString const&)
oox::vml::TextBox::convert(com::sun::star::uno::Reference<com::sun::star::drawing::XShape> const&) const
oox::vml::VMLExport::AddFlipXY()
oox::vml::VMLExport::AddLineDimensions(tools::Rectangle const&)
oox::vml::VMLExport::AddRectangleDimensions(rtl::OStringBuffer&, tools::Rectangle const&, bool)
oox::vml::VMLExport::ShapeIdString(unsigned int)
openclwrapper::GPUEnv::isOpenCLEnabled()
openclwrapper::errorString(int)
openclwrapper::setOpenCLCmdQueuePosition(int)
operator+(DateTime const&, int)
operator-(DateTime const&, DateTime const&)
operator-(DateTime const&, int)
operator-(DateTime const&, tools::Time const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, CodeCompleteDataCache const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, ErrCodeMsg const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpCode const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLConfig const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLConfig::ImplMatcher const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLDeviceInfo const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, OpenCLPlatformInfo const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, ScRangeList const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, SwContentIndex const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, SwPaM const&)
operator<<(std::basic_ostream<char, std::char_traits<char> >&, std::set<OpenCLConfig::ImplMatcher, std::less<OpenCLConfig::ImplMatcher>, std::allocator<OpenCLConfig::ImplMatcher> > const&)
operator<=(Fraction const&, Fraction const&)
operator==(BigInt const&, BigInt const&)
operator==(SkMatrix const&, SkMatrix const&)
operator==(SkPaint const&, SkPaint const&)
operator==(SkPath const&, SkPath const&)
operator>=(Fraction const&, Fraction const&)
operator>>(SvStream&, SvGlobalName&)
org_libreoffice_chart2_Chart2ToolboxController
org_libreoffice_comp_Math_sidebar_SmPanelFactory
org_libreoffice_comp_chart2_sidebar_ChartPanelFactory
org_openoffice_comp_abp_OAddressBookSourcePilot
org_openoffice_comp_comphelper_EnumerableMap
parse_array(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<w_char, std::allocator<w_char> >&, int, int)
parse_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int)
partial_activeBlocks
partial_blockEnd
partial_blockNextPos
partial_blockStart
partial_blockStep
partial_countBlocks
partial_createBlocks
partial_findBlocks
partial_freeBlocks
partial_isVarActive
performiteration
perturb_bounds
pgtls_close
pgtls_get_peer_certificate_hash
pgtls_init
pgtls_init_library
pgtls_open_client
pgtls_read
pgtls_read_pending
pgtls_verify_peer_name_matches_certificate_guts
pgtls_write
phonet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, phonetable&)
popPackedVector
pop_BB
pop_basis
posmat
post_BB
post_MIPOBJ
postprocess
postsolve
pre_BB
pre_MIPOBJ
prepareMDO
prepare_GUB
preprocess
presolve
prevActiveLink
prevInactiveLink
primloop
print_L0
print_constraints
print_debugdump
print_duals
print_indent
print_lp
print_objective
print_scales
print_solution
print_str
print_tableau
printfPQExpBuffer
printmatSQ
printmatUT
printvec
privateSnippetExecutor
probe_BB
prod_Ax
prod_xA
prod_xA2
psp::JobData::constructFromStreamBuffer(void const*, unsigned int, psp::JobData&)
psp::JobData::getStreamBuffer(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, unsigned int&)
psp::JobData::setCollate(bool)
psp::JobData::setPaper(int, int)
psp::JobData::setPaperBin(int)
psp::PrintFontManager::PrintFontManager()
psp::PrintFontManager::Substitute(vcl::font::FontSelectPattern&, rtl::OUString&)
psp::PrintFontManager::addFontFile(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
psp::PrintFontManager::addFontconfigDir(rtl::OString const&)
psp::PrintFontManager::addFontconfigFile(rtl::OString const&)
psp::PrintFontManager::analyzeFontFile(int, rtl::OString const&) const
psp::PrintFontManager::analyzeSfntFile(psp::PrintFontManager::PrintFont&) const
psp::PrintFontManager::countFontconfigFonts()
psp::PrintFontManager::deinitFontconfig()
psp::PrintFontManager::findFontFileID(int, rtl::OString const&, int, int) const
psp::PrintFontManager::findFontFileIDs(int, rtl::OString const&) const
psp::PrintFontManager::getDirectory(int) const
psp::PrintFontManager::getDirectoryAtom(rtl::OString const&)
psp::PrintFontManager::getFontOptions(FontAttributes const&, int)
psp::PrintFontManager::initFontconfig()
psp::PrintFontManager::initialize()
psp::PrintFontManager::matchFamilyName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
psp::PrintFontManager::~PrintFontManager()
psp::PrinterInfoManager::PrinterInfoManager(psp::PrinterInfoManager::Type)
psp::PrinterInfoManager::checkFeatureToken(rtl::OUString const&, std::basic_string_view<char, std::char_traits<char> >) const
psp::PrinterInfoManager::checkPrintersChanged(bool)
psp::PrinterInfoManager::endSpool(rtl::OUString const&, rtl::OUString const&, _IO_FILE*, psp::JobData const&, bool, rtl::OUString const&)
psp::PrinterInfoManager::initialize()
psp::PrinterInfoManager::setDefaultPaper(psp::PPDContext&) const
psp::PrinterInfoManager::setupJobContextData(psp::JobData&)
psp::PrinterInfoManager::startSpool(rtl::OUString const&, bool)
psp::PrinterInfoManager::~PrinterInfoManager()
pushPackedVector
push_BB
push_basis
put_abortfunc
put_bb_branchfunc
put_bb_nodefunc
put_logfunc
put_msgfunc
puthash
pyuno::Runtime::Runtime(pyuno::Runtime const&)
pyuno::Runtime::operator=(pyuno::Runtime const&)
pyuno::Runtime::pyIterUnpack(_object*, com::sun::star::uno::Any&) const
rand_uniform
randomdens
randomseed
rcfbound_BB
read_LP
read_LP1
read_MPS
read_XLI
read_basis
read_error
read_freeMPS
read_freemps
read_lp
read_lp1
read_lpex
read_mps
read_params
recompute_solution
refactRecent
reg_closeKey(void*)
reg_closeRegistry(void*)
reg_dumpRegistry(void*)
reg_openKey(void*, _rtl_uString*, void**)
reg_openRegistry(_rtl_uString*, void**)
reg_openRootKey(void*, void**)
relationChar
removeLink
removeMnemonicFromString(rtl::OUString const&)
remove_ignored_chars(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
remove_ignored_chars_utf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<w_char, std::allocator<w_char> > const&)
rename_var
replaceBasisVar
report
resetPQExpBuffer
reset_basis
reset_params
resizePricer
resize_SOSgroup
resize_lp
restartPricer
restoreINT
restoreUndoLadder
restore_basis
reverseword(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
reverseword_utf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
rhs_store
roundPower2
roundToPrecision
roundVector
row_decimals
row_intstats
rowdual
rowprim
rptui::OXUndoEnvironment::AddElement(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
rptui::OXUndoEnvironment::Lock()
rptui::OXUndoEnvironment::RemoveElement(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
rptui::OXUndoEnvironment::SetUndoMode(bool)
rptui::OXUndoEnvironment::UnLock()
rptui::getPropertyNameMap(SdrObjKind)
rptui::getUsedStyle(com::sun::star::uno::Reference<com::sun::star::report::XReportDefinition> const&)
run_BB
sal_detail_deinitialize@@PRIVATE_1.1
sal_detail_initialize@@PRIVATE_1.1
sal_detail_log@@PRIVATE_1.2
sal_detail_logFormat@@PRIVATE_1.2
sal_detail_log_report@@PRIVATE_1.3
sal_detail_set_log_selector@@PRIVATE_1.6
sal_getFullTextEncodingData
sax::Converter::GetConversionFactor(rtl::OStringBuffer&, short, short)
sax::Converter::GetConversionFactor(rtl::OUStringBuffer&, short, short)
sax::Converter::GetUnitFromString(std::basic_string_view<char, std::char_traits<char> >, short)
sax::Converter::convertAngle(rtl::OUStringBuffer&, short, SvtSaveOptions::ODFSaneDefaultVersion)
sax::Converter::convertAngle(short&, std::basic_string_view<char, std::char_traits<char> >, bool)
sax::Converter::convertAngle(short&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
sax::Converter::convertAny(rtl::OUStringBuffer&, rtl::OUStringBuffer&, com::sun::star::uno::Any const&)
sax::Converter::convertDate(rtl::OUStringBuffer&, com::sun::star::util::Date const&, short const*)
sax::Converter::convertDouble(double&, std::basic_string_view<char, std::char_traits<char> >, short, short)
sax::Converter::convertDuration(com::sun::star::util::Duration&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::convertMeasure(int&, std::basic_string_view<char, std::char_traits<char> >, short, int, int)
sax::Converter::convertMeasurePx(int&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::convertMeasurePx(int&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sax::Converter::convertMeasurePx(rtl::OUStringBuffer&, int)
sax::Converter::convertNumber64(long&, std::basic_string_view<char, std::char_traits<char> >, long, long)
sax::Converter::convertNumber64(long&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, long, long)
sax::Converter::convertPercent(int&, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::indexOfComma(std::basic_string_view<char16_t, std::char_traits<char16_t> >, int)
sax::Converter::parseDateOrDateTime(com::sun::star::util::Date*, com::sun::star::util::DateTime&, bool&, std::optional<short>*, std::basic_string_view<char, std::char_traits<char> >)
sax::Converter::parseDateOrDateTime(com::sun::star::util::Date*, com::sun::star::util::DateTime&, bool&, std::optional<short>*, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sax::Converter::parseTimeOrDateTime(com::sun::star::util::DateTime&, std::basic_string_view<char, std::char_traits<char> >)
sax_fastparser::FastAttributeList::FastAttributeList(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
sax_fastparser::FastAttributeList::add(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastAttributeList> const&)
sax_fastparser::FastAttributeList::add(sax_fastparser::FastAttributeList const&)
sax_fastparser::FastAttributeList::createClone()
sax_fastparser::FastAttributeList::getOptionalValueToken(int, int)
sax_fastparser::FastAttributeList::getValueToken(int)
sax_fastparser::FastAttributeList::~FastAttributeList()
sax_fastparser::FastSaxParser::getImplementationName()
sax_fastparser::FastSaxParser::getNamespaceURL(rtl::OUString const&)
sax_fastparser::FastSaxParser::getSupportedServiceNames()
sax_fastparser::FastSaxParser::initialize(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
sax_fastparser::FastSaxParser::setCustomEntityNames(com::sun::star::uno::Sequence<com::sun::star::beans::Pair<rtl::OUString, rtl::OUString> > const&)
sax_fastparser::FastSaxParser::setEntityResolver(com::sun::star::uno::Reference<com::sun::star::xml::sax::XEntityResolver> const&)
sax_fastparser::FastSaxParser::setErrorHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XErrorHandler> const&)
sax_fastparser::FastSaxParser::setLocale(com::sun::star::lang::Locale const&)
sax_fastparser::FastSaxParser::setNamespaceHandler(com::sun::star::uno::Reference<com::sun::star::xml::sax::XFastNamespaceHandler> const&)
sax_fastparser::FastSaxParser::supportsService(rtl::OUString const&)
sax_fastparser::FastSaxParser::~FastSaxParser()
sax_fastparser::FastSerializerHelper::startDocument()
sax_fastparser::FastTokenHandlerBase::getTokenFromChars(sax_fastparser::FastTokenHandlerBase const*, std::basic_string_view<char, std::char_traits<char> >)
sc::AggregateFunction::AggregateFunction(std::set<short, std::less<short>, std::allocator<short> >&&, sc::AGGREGATE_FUNCTION)
sc::AggregateFunction::Transform(ScDocument&) const
sc::AggregateFunction::getAggregateType() const
sc::AggregateFunction::getColumns() const
sc::AggregateFunction::getTransformationType() const
sc::ColumnRemoveTransformation::ColumnRemoveTransformation(std::set<short, std::less<short>, std::allocator<short> >&&)
sc::ColumnRemoveTransformation::Transform(ScDocument&) const
sc::ColumnRemoveTransformation::getColumns() const
sc::ColumnRemoveTransformation::getTransformationType() const
sc::ColumnRemoveTransformation::~ColumnRemoveTransformation()
sc::CompileFormulaContext::CompileFormulaContext(ScDocument&, formula::FormulaGrammar::Grammar)
sc::CompileFormulaContext::setGrammar(formula::FormulaGrammar::Grammar)
sc::CompileFormulaContext::updateTabNames()
sc::CopyFromClipContext::CopyFromClipContext(ScDocument&, ScDocument*, ScDocument*, InsertDeleteFlags, bool, bool)
sc::CopyFromClipContext::setDestRange(short, int, short, int)
sc::CopyFromClipContext::setTabRange(short, short)
sc::CopyFromClipContext::~CopyFromClipContext()
sc::DataTransformation::getLastRow(ScDocument const&, short)
sc::DataTransformation::~DataTransformation()
sc::DateTimeTransformation::DateTimeTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::DATETIME_TRANSFORMATION_TYPE)
sc::DateTimeTransformation::Transform(ScDocument&) const
sc::DateTimeTransformation::getColumn() const
sc::DateTimeTransformation::getDateTimeTransformationType() const
sc::DateTimeTransformation::getTransformationType() const
sc::ExternalDataMapper::ExternalDataMapper(ScDocument&)
sc::ExternalDataMapper::getDataSources() const
sc::ExternalDataMapper::~ExternalDataMapper()
sc::ExternalDataSource::AddDataTransformation(std::shared_ptr<sc::DataTransformation> const&)
sc::ExternalDataSource::getDBManager()
sc::ExternalDataSource::getDBName() const
sc::ExternalDataSource::getDataTransformation() const
sc::ExternalDataSource::getID() const
sc::ExternalDataSource::getProvider() const
sc::ExternalDataSource::getURL() const
sc::ExternalDataSource::getUpdateFrequency()
sc::ExternalDataSource::getXMLImportParam() const
sc::ExternalDataSource::setProvider(rtl::OUString const&)
sc::ExternalDataSource::setURL(rtl::OUString const&)
sc::FormulaGroupInterpreter::MergeCalcConfig(ScDocument const&)
sc::FormulaGroupInterpreter::enableOpenCL_UnitTestsOnly()
sc::FormulaGroupInterpreter::fillOpenCLInfo(std::vector<OpenCLPlatformInfo, std::allocator<OpenCLPlatformInfo> >&)
sc::FormulaGroupInterpreter::getOpenCLDeviceInfo(int&, int&)
sc::FormulaGroupInterpreter::getStatic()
sc::FormulaGroupInterpreter::switchOpenCLDevice(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, bool)
sc::MergeColumnTransformation::MergeColumnTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, rtl::OUString)
sc::MergeColumnTransformation::Transform(ScDocument&) const
sc::MergeColumnTransformation::getColumns() const
sc::MergeColumnTransformation::getMergeString() const
sc::MergeColumnTransformation::getTransformationType() const
sc::NumFmtUtil::isLatinScript(unsigned long, ScDocument&)
sc::NumberTransformation::NumberTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::NUMBER_TRANSFORM_TYPE)
sc::NumberTransformation::NumberTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::NUMBER_TRANSFORM_TYPE, int)
sc::NumberTransformation::Transform(ScDocument&) const
sc::NumberTransformation::getColumn() const
sc::NumberTransformation::getNumberTransformationType() const
sc::NumberTransformation::getPrecision() const
sc::NumberTransformation::getTransformationType() const
sc::RefUpdateDeleteTabContext::RefUpdateDeleteTabContext(ScDocument&, short, short)
sc::RefUpdateInsertTabContext::RefUpdateInsertTabContext(ScDocument&, short, short)
sc::ReplaceNullTransformation::ReplaceNullTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, rtl::OUString)
sc::ReplaceNullTransformation::Transform(ScDocument&) const
sc::ReplaceNullTransformation::getColumn() const
sc::ReplaceNullTransformation::getReplaceString() const
sc::ReplaceNullTransformation::getTransformationType() const
sc::RowHeightContext::setForceAutoSize(bool)
sc::SolverSettings::GetEngineOptions(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
sc::SolverSettings::ResetToDefaults()
sc::SolverSettings::SetEngineOptions(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue>&)
sc::SolverSettings::SetObjectiveType(sc::ObjectiveType)
sc::SolverSettings::TabHasSolverModel()
sc::SparklineAttributes::SparklineAttributes(sc::SparklineAttributes&&)
sc::SparklineAttributes::operator=(sc::SparklineAttributes const&)
sc::SparklineAttributes::operator=(sc::SparklineAttributes&&)
sc::SparklineGroup::SparklineGroup(sc::SparklineAttributes)
sc::SparklineGroup::SparklineGroup(sc::SparklineGroup const&)
sc::SparklineList::SparklineList()
sc::SparklineList::addSparkline(std::shared_ptr<sc::Sparkline> const&)
sc::SparklineList::removeSparkline(std::shared_ptr<sc::Sparkline> const&)
sc::SplitColumnTransformation::SplitColumnTransformation(short, char16_t)
sc::SplitColumnTransformation::Transform(ScDocument&) const
sc::SplitColumnTransformation::getColumn() const
sc::SplitColumnTransformation::getSeparator() const
sc::SplitColumnTransformation::getTransformationType() const
sc::TextTransformation::TextTransformation(std::set<short, std::less<short>, std::allocator<short> >&&, sc::TEXT_TRANSFORM_TYPE)
sc::TextTransformation::Transform(ScDocument&) const
sc::TextTransformation::getColumns() const
sc::TextTransformation::getTextTransformationType() const
sc::TextTransformation::getTransformationType() const
sc::ThemeColorChanger::doApply(std::shared_ptr<model::ColorSet> const&)
sc::calculateOrientation(int, ScRange const&)
scale
scaleCR
scale_columns
scale_rows
scale_updatecolumns
scale_updaterows
scaled_ceil
scaled_floor
scaled_mat
scaled_value
scan_lineFIXED
scan_lineFREE
scram_ClientKey
scram_H
scram_HMAC_final
scram_HMAC_init
scram_HMAC_update
scram_SaltedPassword
scram_ServerKey
scram_build_secret
scripting_StringResourcePersistenceImpl_implementation
sd::Annotation::getAuthor()
sd::Annotation::getDateTime()
sd::Annotation::getInitials()
sd::Annotation::getPosition()
sd::Annotation::getTextRange()
sd::CustomAnimationPreset::create(rtl::OUString const&)
sd::CustomAnimationPresets::getCustomAnimationPresets()
sd::CustomAnimationPresets::getEffectDescriptor(rtl::OUString const&) const
sd::EffectSequenceHelper::append(std::shared_ptr<sd::CustomAnimationEffect> const&)
sd::EffectSequenceHelper::createTextGroup(std::shared_ptr<sd::CustomAnimationEffect> const&, int, double, bool, bool)
sd::GraphicDocShell::Factory()
sd::GraphicDocShell::GetInterface() const
sd::GraphicDocShell::GetStaticInterface()
sd::GraphicDocShell::GraphicDocShell(SfxModelFlags)
sd::GraphicDocShell::GraphicDocShell(SfxObjectCreateMode)
sd::GraphicDocShell::InitInterface_Impl()
sd::GraphicDocShell::RegisterInterface(SfxModule const*)
sd::GraphicDocShell::~GraphicDocShell()
sd::LayerTabBar::MouseMove(MouseEvent const&)
sd::RandomAnimationNode_createInstance(short)
sd::ThemeColorChanger::doApply(std::shared_ptr<model::ColorSet> const&)
sd::ViewShell::GetFrameWeld() const
sd::ViewShell::GetShellType() const
sd::stl_process_after_effect_node_func(sd::AfterEffectNode const&)
sdr::MasterPageDescriptor::GetViewContact() const
sdr::MasterPageDescriptor::MasterPageDescriptor(SdrPage&, SdrPage&)
sdr::MasterPageDescriptor::PageInDestruction(SdrPage const&)
sdr::MasterPageDescriptor::SetVisibleLayers(SdrLayerIDSet const&)
sdr::MasterPageDescriptor::getCorrectSdrPageProperties() const
sdr::MasterPageDescriptor::~MasterPageDescriptor()
sdr::PolyPolygonEditor::GetRelativePolyPoint(basegfx::B2DPolyPolygon const&, unsigned int, unsigned int&, unsigned int&)
sdr::SelectionController::ApplyFormatPaintBrush(SfxItemSet&, short, bool, bool)
sdr::SelectionController::ChangeFontSize(bool, FontList const*)
sdr::SelectionController::DeleteMarked()
sdr::SelectionController::Execute(SfxRequest&)
sdr::SelectionController::GetAttributes(SfxItemSet&, bool) const
sdr::SelectionController::GetMarkedSdrObjClone(SdrModel&)
sdr::SelectionController::GetState(SfxItemSet&)
sdr::SelectionController::GetStyleSheet(SfxStyleSheet*&) const
sdr::SelectionController::PasteObjModel(SdrModel const&)
sdr::SelectionController::SetAttributes(SfxItemSet const&, bool)
sdr::SelectionController::SetStyleSheet(SfxStyleSheet*, bool)
sdr::SelectionController::getSelectedCells(sdr::table::CellPos&, sdr::table::CellPos&)
sdr::SelectionController::hasSelectedCells() const
sdr::SelectionController::onKeyInput(KeyEvent const&, vcl::Window*)
sdr::SelectionController::onMouseButtonDown(MouseEvent const&, vcl::Window*)
sdr::SelectionController::onMouseButtonUp(MouseEvent const&, vcl::Window*)
sdr::SelectionController::onMouseMove(MouseEvent const&, vcl::Window*)
sdr::SelectionController::onSelectAll()
sdr::SelectionController::onSelectionHasChanged()
sdr::SelectionController::setCursorLogicPosition(Point const&, bool)
sdr::animation::Event::~Event()
sdr::animation::Scheduler::Invoke()
sdr::animation::Scheduler::~Scheduler()
sdr::annotation::AnnotationData::get(sdr::annotation::Annotation&)
sdr::annotation::AnnotationData::set(sdr::annotation::Annotation&)
sdr::contact::DisplayInfo::ClearGhostedDrawMode()
sdr::contact::DisplayInfo::SetControlLayerProcessingActive(bool)
sdr::contact::DisplayInfo::SetGhostedDrawMode()
sdr::contact::DisplayInfo::SetProcessLayers(SdrLayerIDSet const&)
sdr::contact::DisplayInfo::SetRedrawArea(vcl::Region const&)
sdr::contact::DisplayInfo::SetSubContentActive(bool)
sdr::contact::ObjectContact::AddViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ObjectContact::AreGluePointsVisible() const
sdr::contact::ObjectContact::DoVisualizeEnteredGroup() const
sdr::contact::ObjectContact::GetPDFExtOutDevData() const
sdr::contact::ObjectContact::InvalidatePartOfView(basegfx::B2DRange const&) const
sdr::contact::ObjectContact::IsGraphicAnimationAllowed() const
sdr::contact::ObjectContact::IsTextAnimationAllowed() const
sdr::contact::ObjectContact::ObjectContact()
sdr::contact::ObjectContact::PrepareProcessDisplay()
sdr::contact::ObjectContact::ProcessDisplay(sdr::contact::DisplayInfo&)
sdr::contact::ObjectContact::RemoveViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ObjectContact::SetViewObjectContactRedirector(sdr::contact::ViewObjectContactRedirector*)
sdr::contact::ObjectContact::TryToGetOutputDevice() const
sdr::contact::ObjectContact::TryToGetSdrPageView() const
sdr::contact::ObjectContact::calculateGridOffsetForViewObjectContact(basegfx::B2DVector&, sdr::contact::ViewObjectContact const&) const
sdr::contact::ObjectContact::getActiveViewContact() const
sdr::contact::ObjectContact::isDrawModeGray() const
sdr::contact::ObjectContact::isDrawModeHighContrast() const
sdr::contact::ObjectContact::isExportTaggedPDF() const
sdr::contact::ObjectContact::isMasterPageActive() const
sdr::contact::ObjectContact::isOutputToPDFFile() const
sdr::contact::ObjectContact::isOutputToPrinter() const
sdr::contact::ObjectContact::isOutputToRecordingMetaFile() const
sdr::contact::ObjectContact::isPageDecorationActive() const
sdr::contact::ObjectContact::setLazyInvalidate(sdr::contact::ViewObjectContact&)
sdr::contact::ObjectContact::supportsGridOffsets() const
sdr::contact::ObjectContact::~ObjectContact()
sdr::contact::ObjectContactOfObjListPainter::GetPDFExtOutDevData() const
sdr::contact::ObjectContactOfObjListPainter::GetPaintObjectCount() const
sdr::contact::ObjectContactOfObjListPainter::GetPaintObjectViewContact(unsigned int)
sdr::contact::ObjectContactOfObjListPainter::ProcessDisplay(sdr::contact::DisplayInfo&)
sdr::contact::ObjectContactOfObjListPainter::TryToGetOutputDevice() const
sdr::contact::ObjectContactOfObjListPainter::isExportTaggedPDF() const
sdr::contact::ObjectContactOfObjListPainter::isOutputToPDFFile() const
sdr::contact::ObjectContactOfObjListPainter::isOutputToRecordingMetaFile() const
sdr::contact::ObjectContactOfPageView::DoProcessDisplay(sdr::contact::DisplayInfo&)
sdr::contact::ObjectContactOfPageView::GetSdrPage() const
sdr::contact::ObjectContactOfPageView::SetUNOControlsDesignMode(bool) const
sdr::contact::ViewContact::ActionChangedIfDifferentPageView(SdrPageView&)
sdr::contact::ViewContact::ActionChildInserted(sdr::contact::ViewContact&)
sdr::contact::ViewContact::AddViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ViewContact::CreateObjectSpecificViewObjectContact(sdr::contact::ObjectContact&)
sdr::contact::ViewContact::HasViewObjectContacts() const
sdr::contact::ViewContact::RemoveViewObjectContact(sdr::contact::ViewObjectContact&)
sdr::contact::ViewContact::deleteAllVOCs()
sdr::contact::ViewContact::hasMultipleViewObjectContacts() const
sdr::contact::ViewContact::isAnimatedInAnyViewObjectContact() const
sdr::contact::ViewContactOfVirtObj::GetVirtObj() const
sdr::contact::ViewObjectContact::ActionChangedIfDifferentPageView(SdrPageView&)
sdr::contact::ViewObjectContact::ActionChildInserted(sdr::contact::ViewContact&)
sdr::contact::ViewObjectContact::checkForPrimitive2DAnimations()
sdr::contact::ViewObjectContact::createPrimitive2DSequence(sdr::contact::DisplayInfo const&, drawinglayer::primitive2d::Primitive2DDecompositionVisitor&) const
sdr::contact::ViewObjectContact::createStructureTag(drawinglayer::primitive2d::Primitive2DContainer&) const
sdr::contact::ViewObjectContact::getPrimitive2DSequenceSubHierarchy(sdr::contact::DisplayInfo&, drawinglayer::primitive2d::Primitive2DDecompositionVisitor&) const
sdr::contact::ViewObjectContact::resetGridOffset()
sdr::contact::ViewObjectContact::triggerLazyInvalidate()
sdr::contact::ViewObjectContactOfSdrObj::getPageViewOutputDevice() const
sdr::contact::ViewObjectContactOfSdrObj::getSdrObject() const
sdr::contact::ViewObjectContactOfSdrObj::isObjectVisibleOnAnyLayer(SdrObject const&, SdrLayerIDSet const&)
sdr::overlay::OverlayAnimatedBitmapEx::Trigger(unsigned int)
sdr::overlay::OverlayAnimatedBitmapEx::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayAnimatedBitmapEx::~OverlayAnimatedBitmapEx()
sdr::overlay::OverlayBitmapEx::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayBitmapEx::~OverlayBitmapEx()
sdr::overlay::OverlayManager::ImpDrawMembers(basegfx::B2DRange const&, OutputDevice&) const
sdr::overlay::OverlayManager::ImpStripeDefinitionChanged()
sdr::overlay::OverlayManager::OverlayManager(OutputDevice&)
sdr::overlay::OverlayManager::RangeToInvalidateRectangle(basegfx::B2DRange const&) const
sdr::overlay::OverlayManager::completeRedraw(vcl::Region const&, OutputDevice*) const
sdr::overlay::OverlayManager::create(OutputDevice&)
sdr::overlay::OverlayManager::flush()
sdr::overlay::OverlayManager::getCurrentViewInformation2D() const
sdr::overlay::OverlayManager::getDiscreteOne() const
sdr::overlay::OverlayManager::impApplyAddActions(sdr::overlay::OverlayObject&)
sdr::overlay::OverlayManager::impApplyRemoveActions(sdr::overlay::OverlayObject&)
sdr::overlay::OverlayManager::invalidateRange(basegfx::B2DRange const&)
sdr::overlay::OverlayManager::setStripeColorA(Color)
sdr::overlay::OverlayManager::setStripeColorB(Color)
sdr::overlay::OverlayManager::setStripeLengthPixel(unsigned int)
sdr::overlay::OverlayManager::~OverlayManager()
sdr::overlay::OverlayObject::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayObject::getBaseRange() const
sdr::overlay::OverlayObject::impCheckBlinkTimeValueRange(unsigned long)
sdr::overlay::OverlayObject::setBaseColor(Color)
sdr::overlay::OverlayObject::setHittable(bool)
sdr::overlay::OverlayObject::setOffset(basegfx::B2DVector const&)
sdr::overlay::OverlayObjectList::clear()
sdr::overlay::OverlayObjectList::getBaseRange() const
sdr::overlay::OverlayObjectList::isHitLogic(basegfx::B2DPoint const&, double) const
sdr::overlay::OverlayObjectWithBasePosition::setBasePosition(basegfx::B2DPoint const&)
sdr::overlay::OverlayPolyPolygon::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayPolyPolygon::~OverlayPolyPolygon()
sdr::overlay::OverlayPrimitive2DSequenceObject::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlayPrimitive2DSequenceObject::~OverlayPrimitive2DSequenceObject()
sdr::overlay::OverlaySelection::createOverlayObjectPrimitive2DSequence()
sdr::overlay::OverlaySelection::getOverlayObjectPrimitive2DSequence() const
sdr::properties::BaseProperties::BaseProperties(SdrObject&)
sdr::properties::BaseProperties::BroadcastItemChange(sdr::properties::ItemChangeBroadcaster const&)
sdr::properties::BaseProperties::ClearMergedItem(unsigned short)
sdr::properties::BaseProperties::ForceStyleToHardAttributes()
sdr::properties::BaseProperties::GetMergedItemSet() const
sdr::properties::BaseProperties::GetSdrObject()
sdr::properties::BaseProperties::GetSdrObject() const
sdr::properties::BaseProperties::SetMergedItem(SfxPoolItem const&)
sdr::properties::BaseProperties::SetMergedItemSet(SfxItemSet const&, bool)
sdr::properties::BaseProperties::SetMergedItemSetAndBroadcast(SfxItemSet const&, bool)
sdr::properties::BaseProperties::dumpAsXml(_xmlTextWriter*) const
sdr::properties::BaseProperties::getVersion() const
sdr::properties::BaseProperties::~BaseProperties()
sdr::properties::DefaultProperties::AllowItemChange(unsigned short, SfxPoolItem const*) const
sdr::properties::DefaultProperties::ClearObjectItem(unsigned short)
sdr::properties::DefaultProperties::ClearObjectItemDirect(unsigned short)
sdr::properties::DefaultProperties::Clone(SdrObject&) const
sdr::properties::DefaultProperties::CreateObjectSpecificItemSet(SfxItemPool&)
sdr::properties::DefaultProperties::DefaultProperties(sdr::properties::DefaultProperties const&, SdrObject&)
sdr::properties::DefaultProperties::ForceDefaultAttributes()
sdr::properties::DefaultProperties::GetObjectItemSet() const
sdr::properties::DefaultProperties::GetStyleSheet() const
sdr::properties::DefaultProperties::ItemChange(unsigned short, SfxPoolItem const*)
sdr::properties::DefaultProperties::ItemSetChanged(std::span<SfxPoolItem const* const, 18446744073709551615ul>, unsigned short)
sdr::properties::DefaultProperties::PostItemChange(unsigned short)
sdr::properties::DefaultProperties::SetObjectItem(SfxPoolItem const&)
sdr::properties::DefaultProperties::SetObjectItemDirect(SfxPoolItem const&)
sdr::properties::DefaultProperties::SetObjectItemSet(SfxItemSet const&)
sdr::properties::DefaultProperties::SetStyleSheet(SfxStyleSheet*, bool, bool)
sdr::properties::DefaultProperties::dumpAsXml(_xmlTextWriter*) const
sdr::properties::DefaultProperties::~DefaultProperties()
sdr::table::SdrTableObj::AddToHdlList(SdrHdlList&) const
sdr::table::SdrTableObj::AddUndo(SdrUndoAction*)
sdr::table::SdrTableObj::AdjustTextFrameWidthAndHeight()
sdr::table::SdrTableObj::AdjustTextFrameWidthAndHeight(tools::Rectangle&, bool, bool) const
sdr::table::SdrTableObj::AdjustToMaxRect(tools::Rectangle const&, bool)
sdr::table::SdrTableObj::BckCreate(SdrDragStat&)
sdr::table::SdrTableObj::BegCreate(SdrDragStat&)
sdr::table::SdrTableObj::BegTextEdit(SdrOutliner&)
sdr::table::SdrTableObj::BrkCreate(SdrDragStat&)
sdr::table::SdrTableObj::CheckTableHit(Point const&, int&, int&, unsigned short) const
sdr::table::SdrTableObj::CheckTextHit(Point const&) const
sdr::table::SdrTableObj::CloneSdrObject(SdrModel&) const
sdr::table::SdrTableObj::CreateObjectSpecificProperties()
sdr::table::SdrTableObj::CreateObjectSpecificViewContact()
sdr::table::SdrTableObj::CropTableModelToSelection(sdr::table::CellPos const&, sdr::table::CellPos const&)
sdr::table::SdrTableObj::DistributeColumns(int, int, bool, bool)
sdr::table::SdrTableObj::DistributeRows(int, int, bool, bool)
sdr::table::SdrTableObj::EndCreate(SdrDragStat&, SdrCreateCmd)
sdr::table::SdrTableObj::EndTextEdit(SdrOutliner&)
sdr::table::SdrTableObj::GetActiveCellItemSet() const
sdr::table::SdrTableObj::GetCellTextEditOutliner(sdr::table::Cell const&) const
sdr::table::SdrTableObj::GetCreatePointer() const
sdr::table::SdrTableObj::GetHdlCount() const
sdr::table::SdrTableObj::GetObjIdentifier() const
sdr::table::SdrTableObj::GetOutlinerParaObject() const
sdr::table::SdrTableObj::GetOutlinerViewAnchorMode() const
sdr::table::SdrTableObj::GetSnapRect() const
sdr::table::SdrTableObj::GetWritingMode() const
sdr::table::SdrTableObj::HasText() const
sdr::table::SdrTableObj::IsAutoGrowHeight() const
sdr::table::SdrTableObj::IsAutoGrowWidth() const
sdr::table::SdrTableObj::IsFontwork() const
sdr::table::SdrTableObj::IsReallyEdited() const
sdr::table::SdrTableObj::IsTextEditActive(sdr::table::CellPos const&)
sdr::table::SdrTableObj::IsVerticalWriting() const
sdr::table::SdrTableObj::MovCreate(SdrDragStat&)
sdr::table::SdrTableObj::NbcMove(Size const&)
sdr::table::SdrTableObj::NbcReformatText()
sdr::table::SdrTableObj::NbcResize(Point const&, Fraction const&, Fraction const&)
sdr::table::SdrTableObj::NbcSetLogicRect(tools::Rectangle const&)
sdr::table::SdrTableObj::NbcSetOutlinerParaObject(std::optional<OutlinerParaObject>)
sdr::table::SdrTableObj::NbcSetSnapRect(tools::Rectangle const&)
sdr::table::SdrTableObj::NewGeoData() const
sdr::table::SdrTableObj::RecalcSnapRect()
sdr::table::SdrTableObj::RestoreGeoData(SdrObjGeoData const&)
sdr::table::SdrTableObj::SaveGeoData(SdrObjGeoData&) const
sdr::table::SdrTableObj::SdrTableObj(SdrModel&)
sdr::table::SdrTableObj::SdrTableObj(SdrModel&, sdr::table::SdrTableObj const&)
sdr::table::SdrTableObj::SetChanged()
sdr::table::SdrTableObj::SetVerticalWriting(bool)
sdr::table::SdrTableObj::TakeCreatePoly(SdrDragStat const&) const
sdr::table::SdrTableObj::TakeObjInfo(SdrObjTransformInfoRec&) const
sdr::table::SdrTableObj::TakeObjNamePlural() const
sdr::table::SdrTableObj::TakeObjNameSingul() const
sdr::table::SdrTableObj::TakeTextAnchorRect(sdr::table::CellPos const&, tools::Rectangle&) const
sdr::table::SdrTableObj::TakeTextAnchorRect(tools::Rectangle&) const
sdr::table::SdrTableObj::TakeTextEditArea(Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
sdr::table::SdrTableObj::TakeTextEditArea(sdr::table::CellPos const&, Size*, Size*, tools::Rectangle*, tools::Rectangle*) const
sdr::table::SdrTableObj::TakeTextRect(SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*, bool) const
sdr::table::SdrTableObj::TakeTextRect(sdr::table::CellPos const&, SdrOutliner&, tools::Rectangle&, bool, tools::Rectangle*) const
sdr::table::SdrTableObj::applySpecialDrag(SdrDragStat&)
sdr::table::SdrTableObj::beginSpecialDrag(SdrDragStat&) const
sdr::table::SdrTableObj::changeEdge(bool, int, int)
sdr::table::SdrTableObj::createCell(rtl::Reference<sdr::table::Cell>&)
sdr::table::SdrTableObj::createTableEdgesJson(boost::property_tree::basic_ptree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
sdr::table::SdrTableObj::dumpAsXml(_xmlTextWriter*) const
sdr::table::SdrTableObj::getActiveCell() const
sdr::table::SdrTableObj::getActiveText() const
sdr::table::SdrTableObj::getDownCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getLeftCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getNextCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getNextRow(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getPreviousCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getPreviousRow(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getRightCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::getRowCount() const
sdr::table::SdrTableObj::getSpecialDragPoly(SdrDragStat const&) const
sdr::table::SdrTableObj::getTableLayouter() const
sdr::table::SdrTableObj::getTableStyle() const
sdr::table::SdrTableObj::getTableStyleSettings() const
sdr::table::SdrTableObj::getTextCount() const
sdr::table::SdrTableObj::getUpCell(sdr::table::CellPos const&, bool) const
sdr::table::SdrTableObj::hasSpecialDrag() const
sdr::table::SdrTableObj::init(int, int)
sdr::table::SdrTableObj::isValid(sdr::table::CellPos const&) const
sdr::table::SdrTableObj::onEditOutlinerStatusEvent(EditStatus*)
sdr::table::SdrTableObj::setActiveText(int)
sdr::table::SdrTableObj::setTableStyleSettings(sdr::table::TableStyleSettings const&)
sdr::table::SdrTableObj::uno_lock()
sdr::table::SdrTableObj::uno_unlock()
sdr::table::SdrTableObj::~SdrTableObj()
sdr::table::SvxTableController::ChangeFontSize(bool, FontList const*)
sdr::table::SvxTableController::clearSelection()
sdr::table::SvxTableController::deselectColumn(int)
sdr::table::SvxTableController::deselectRow(int)
sdr::table::SvxTableController::isColumnHeader()
sdr::table::SvxTableController::isColumnSelected(int)
sdr::table::SvxTableController::isRowHeader()
sdr::table::SvxTableController::isRowSelected(int)
sdr::table::SvxTableController::selectAll()
sdr::table::SvxTableController::selectColumn(int)
sdr::table::SvxTableController::selectRow(int)
sdr::table::SvxTableController::setSelectedCells(sdr::table::CellPos const&, sdr::table::CellPos const&)
searchFor
serious_facterror
setBasicWatchMode(bool)
setDataProvider(com::sun::star::uno::Reference<com::sun::star::chart2::XChartDocument> const&, rtl::OUString const&)
setLink
set_BFP
set_OF_override
set_OF_p1extra
set_XLI
set_action
set_anti_degen
set_basis
set_basiscrash
set_basisvar
set_bb_floorfirst
set_bb_rule
set_bounds
set_bounds_tighter
set_break_at_first
set_break_at_value
set_callbacks
set_col_name
set_column
set_columnex
set_constr_type
set_debug
set_dv_bounds
set_epsb
set_epsd
set_epsel
set_epsint
set_epsperturb
set_epspivot
set_improve
set_infinite
set_lag_trace
set_lowbo
set_lp_name
set_mat
set_maxpivot
set_mip_gap
set_multiprice
set_negrange
set_obj
set_obj_bound
set_obj_dir
set_obj_fnex
set_obj_in_basis
set_outputstream
set_partialprice
set_pivoting
set_preferdual
set_presolve
set_print_sol
set_pseudocosts
set_rh_lower
set_rh_range
set_rh_upper
set_rh_vec
set_row
set_row_name
set_rowex
set_scalelimit
set_scaling
set_semicont
set_sense
set_simplextype
set_solutionlimit
set_sos_type
set_sos_weight
set_title
set_trace
set_upbo
set_use_names
set_var_branch
set_var_priority
set_var_weights
set_verbose
sfx2::FileDialogHelper::ControlStateChanged(com::sun::star::ui::dialogs::FilePickerEvent const&)
sfx2::FileDialogHelper::CreateMatcher(rtl::OUString const&)
sfx2::FileDialogHelper::DialogClosed(com::sun::star::ui::dialogs::DialogClosedEvent const&)
sfx2::FileDialogHelper::DialogSizeChanged()
sfx2::FileDialogHelper::DirectoryChanged()
sfx2::FileDialogHelper::Execute(std::optional<SfxAllItemSet>&, rtl::OUString&)
sfx2::FileDialogHelper::Execute(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, std::optional<SfxAllItemSet>&, rtl::OUString&, rtl::OUString const&)
sfx2::FileDialogHelper::FileDialogHelper(short, FileDialogFlags, rtl::OUString const&, short, SfxFilterFlags, SfxFilterFlags, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, weld::Window*)
sfx2::FileDialogHelper::FileDialogHelper(short, FileDialogFlags, rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, weld::Window*)
sfx2::FileDialogHelper::FileSelectionChanged()
sfx2::FileDialogHelper::GetDialogType() const
sfx2::FileDialogHelper::GetDisplayDirectory() const
sfx2::FileDialogHelper::GetMPath() const
sfx2::FileDialogHelper::HelpRequested(com::sun::star::ui::dialogs::FilePickerEvent const&)
sfx2::FileDialogHelper::IsPasswordEnabled() const
sfx2::FileDialogHelper::SetDisplayFolder(rtl::OUString const&)
sfx2::FileDialogHelper::contextToString(sfx2::FileDialogHelper::Context)
sfx2::LinkManager::CreateObj(sfx2::SvBaseLink const*)
sfx2::LinkManager::Insert(sfx2::SvBaseLink*)
sfx2::LinkManager::InsertCachedComp(com::sun::star::uno::Reference<com::sun::star::lang::XComponent> const&)
sfx2::LinkManager::InsertLink(sfx2::SvBaseLink*, sfx2::SvBaseLinkObjectType, SfxLinkUpdateMode, rtl::OUString const*)
sfx2::LinkManager::LinkServerShell(rtl::OUString const&, SfxObjectShell&, sfx2::SvBaseLink&)
sfx2::SafeMode::getFilePath(rtl::OUString const&)
sfx2::SafeMode::putRestartFlag()
sfx2::SafeMode::removeFlag()
sfx2::SfxNotebookBar::CloseMethod(SystemWindow*)
sfx2::SfxNotebookBar::ReloadNotebookBar(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::SfxNotebookBar::RemoveCurrentLOKWrapper()
sfx2::SfxNotebookBar::RemoveListeners(SystemWindow const*)
sfx2::SfxNotebookBar::ResetActiveToolbarModeToDefault(vcl::EnumContext::Application)
sfx2::SfxNotebookBar::ShowMenubar(SfxViewFrame const*, bool)
sfx2::SfxNotebookBar::ShowMenubar(bool)
sfx2::SfxNotebookBar::StateMethod(SystemWindow*, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool)
sfx2::SfxNotebookBar::ToggleMenubar()
sfx2::SvBaseLink::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
sfx2::SvBaseLink::ExecuteEdit(rtl::OUString const&)
sfx2::SvBaseLink::GetInsertFileDialog(rtl::OUString const&)
sfx2::SvBaseLink::GetLinkManager() const
sfx2::SvBaseLink::SetLinkManager(sfx2::LinkManager*)
sfx2::SvBaseLink::SetObj(sfx2::SvLinkSource*)
sfx2::SvLinkSource::DataChanged(rtl::OUString const&, com::sun::star::uno::Any const&)
sfx2::SvLinkSource::GetData(com::sun::star::uno::Any&, rtl::OUString const&, bool)
sfx2::SvLinkSource::clearStreamToLoadFrom()
sfx2::SvLinkSource::getStreamToLoadFrom()
sfx2::SvLinkSource::setStreamToLoadFrom(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
sfx2::isValidNCName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::isValidXmlId(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::Context::Context()
sfx2::sidebar::Context::Context(rtl::OUString, rtl::OUString)
sfx2::sidebar::Context::EvaluateMatch(sfx2::sidebar::Context const&) const
sfx2::sidebar::Context::operator!=(sfx2::sidebar::Context const&) const
sfx2::sidebar::Context::operator==(sfx2::sidebar::Context const&) const
sfx2::sidebar::ControllerItem::GetControlState(unsigned short, boost::property_tree::basic_ptree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
sfx2::sidebar::ControllerItem::RequestUpdate()
sfx2::sidebar::ControllerItem::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
sfx2::sidebar::Panel::DataChanged()
sfx2::sidebar::Panel::GetContents() const
sfx2::sidebar::Panel::GetElementParentWindow()
sfx2::sidebar::Panel::GetElementWindow()
sfx2::sidebar::Panel::GetFrameWeld()
sfx2::sidebar::Panel::GetTitleBar() const
sfx2::sidebar::Panel::HasIdPredicate(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::Panel::Panel(sfx2::sidebar::PanelDescriptor const&, weld::Widget*, bool, sfx2::sidebar::Deck*, std::function<sfx2::sidebar::Context ()>, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
sfx2::sidebar::Panel::SetExpanded(bool)
sfx2::sidebar::Panel::SetHeightPixel(int)
sfx2::sidebar::Panel::SetLurkMode(bool)
sfx2::sidebar::Panel::SetUIElement(com::sun::star::uno::Reference<com::sun::star::ui::XUIElement> const&)
sfx2::sidebar::Panel::Show(bool)
sfx2::sidebar::Panel::get_extents(tools::Rectangle&) const
sfx2::sidebar::Panel::set_margin_bottom(int)
sfx2::sidebar::Panel::set_margin_top(int)
sfx2::sidebar::Panel::set_vexpand(bool)
sfx2::sidebar::Panel::~Panel()
sfx2::sidebar::ResourceManager::GetDeckDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::GetLastActiveDeck(sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::GetLegacyAddonRootNode(rtl::OUString const&)
sfx2::sidebar::ResourceManager::GetMatchingDecks(std::vector<sfx2::sidebar::ResourceManager::DeckContextDescriptor, std::allocator<sfx2::sidebar::ResourceManager::DeckContextDescriptor> >&, sfx2::sidebar::Context const&, bool, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::GetMatchingPanels(std::vector<sfx2::sidebar::ResourceManager::PanelContextDescriptor, std::allocator<sfx2::sidebar::ResourceManager::PanelContextDescriptor> >&, sfx2::sidebar::Context const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::GetPanelDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::GetToolPanelNodeNames(std::vector<rtl::OUString, std::allocator<rtl::OUString> >&, utl::OConfigurationTreeRoot const&)
sfx2::sidebar::ResourceManager::ImplGetDeckDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::ImplGetPanelDescriptor(std::basic_string_view<char16_t, std::char_traits<char16_t> >) const
sfx2::sidebar::ResourceManager::InitDeckContext(sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::IsDeckEnabled(std::basic_string_view<char16_t, std::char_traits<char16_t> >, sfx2::sidebar::Context const&, com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::ReadContextList(utl::OConfigurationNode const&, sfx2::sidebar::ContextList&, rtl::OUString const&)
sfx2::sidebar::ResourceManager::ReadDeckList()
sfx2::sidebar::ResourceManager::ReadLastActive()
sfx2::sidebar::ResourceManager::ReadLegacyAddons(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::ResourceManager::ReadPanelList()
sfx2::sidebar::ResourceManager::ResourceManager()
sfx2::sidebar::ResourceManager::SaveDeckSettings(sfx2::sidebar::DeckDescriptor const*)
sfx2::sidebar::ResourceManager::SaveDecksSettings(sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::SaveLastActiveDeck(sfx2::sidebar::Context const&, rtl::OUString const&)
sfx2::sidebar::ResourceManager::SetLastActiveDeck(sfx2::sidebar::Context const&, rtl::OUString const&)
sfx2::sidebar::ResourceManager::StorePanelExpansionState(std::basic_string_view<char16_t, std::char_traits<char16_t> >, bool, sfx2::sidebar::Context const&)
sfx2::sidebar::ResourceManager::UpdateModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
sfx2::sidebar::ResourceManager::disposeDecks()
sfx2::sidebar::ResourceManager::~ResourceManager()
sfx2::sidebar::Sidebar::ShowDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >, SfxViewFrame*, bool)
sfx2::sidebar::SidebarChildWindow::CreateImpl(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
sfx2::sidebar::SidebarChildWindow::GetDefaultWidth(vcl::Window const*)
sfx2::sidebar::SidebarChildWindow::GetInfo() const
sfx2::sidebar::SidebarChildWindow::SidebarChildWindow(vcl::Window*, unsigned short, SfxBindings*, SfxChildWinInfo*)
sfx2::sidebar::SidebarController::BroadcastPropertyChange()
sfx2::sidebar::SidebarController::CanModifyChildWindowWidth()
sfx2::sidebar::SidebarController::CreateDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::CreateDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >, sfx2::sidebar::Context const&, bool)
sfx2::sidebar::SidebarController::CreatePanel(std::basic_string_view<char16_t, std::char_traits<char16_t> >, weld::Widget*, bool, sfx2::sidebar::Context const&, VclPtr<sfx2::sidebar::Deck> const&)
sfx2::sidebar::SidebarController::CreatePanels(std::basic_string_view<char16_t, std::char_traits<char16_t> >, sfx2::sidebar::Context const&)
sfx2::sidebar::SidebarController::CreateUIElement(com::sun::star::uno::Reference<com::sun::star::awt::XWindow> const&, rtl::OUString const&, bool, sfx2::sidebar::Context const&)
sfx2::sidebar::SidebarController::FadeIn()
sfx2::sidebar::SidebarController::FadeOut()
sfx2::sidebar::SidebarController::GetDeckDragArea() const
sfx2::sidebar::SidebarController::GetMatchingDecks()
sfx2::sidebar::SidebarController::GetMatchingPanels(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::GetSidebarControllerForFrame(com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
sfx2::sidebar::SidebarController::GetSplitWindow()
sfx2::sidebar::SidebarController::IsDeckOpen(int)
sfx2::sidebar::SidebarController::IsDeckVisible(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::NotifyResize()
sfx2::sidebar::SidebarController::OpenThenSwitchToDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::OpenThenToggleDeck(rtl::OUString const&)
sfx2::sidebar::SidebarController::PopulatePopupMenus(weld::Menu&, weld::Menu&, std::vector<sfx2::sidebar::TabBar::DeckMenuData, std::allocator<sfx2::sidebar::TabBar::DeckMenuData> > const&) const
sfx2::sidebar::SidebarController::ProcessNewWidth(int)
sfx2::sidebar::SidebarController::RequestCloseDeck()
sfx2::sidebar::SidebarController::RequestOpenDeck()
sfx2::sidebar::SidebarController::RestrictWidth(int)
sfx2::sidebar::SidebarController::SetChildWindowWidth(int)
sfx2::sidebar::SidebarController::ShowPanel(sfx2::sidebar::Panel const&)
sfx2::sidebar::SidebarController::ShowPopupMenu(weld::Menu&, weld::Menu&, std::vector<sfx2::sidebar::TabBar::DeckMenuData, std::allocator<sfx2::sidebar::TabBar::DeckMenuData> > const&) const
sfx2::sidebar::SidebarController::SidebarController(sfx2::sidebar::SidebarDockingWindow*, SfxViewFrame const*)
sfx2::sidebar::SidebarController::SwitchToDeck(sfx2::sidebar::DeckDescriptor const&, sfx2::sidebar::Context const&)
sfx2::sidebar::SidebarController::SwitchToDeck(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::SwitchToDefaultDeck()
sfx2::sidebar::SidebarController::SyncUpdate()
sfx2::sidebar::SidebarController::UpdateCloseIndicator(bool)
sfx2::sidebar::SidebarController::UpdateConfigurations()
sfx2::sidebar::SidebarController::UpdateDeckOpenState()
sfx2::sidebar::SidebarController::UpdateTitleBarIcons()
sfx2::sidebar::SidebarController::create(sfx2::sidebar::SidebarDockingWindow*, SfxViewFrame const*)
sfx2::sidebar::SidebarController::disposeDecks()
sfx2::sidebar::SidebarController::disposing(com::sun::star::lang::EventObject const&)
sfx2::sidebar::SidebarController::disposing(std::unique_lock<std::mutex>&)
sfx2::sidebar::SidebarController::frameAction(com::sun::star::frame::FrameActionEvent const&)
sfx2::sidebar::SidebarController::notifyContextChangeEvent(com::sun::star::ui::ContextChangeEventObject const&)
sfx2::sidebar::SidebarController::notifyDeckTitle(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
sfx2::sidebar::SidebarController::propertyChange(com::sun::star::beans::PropertyChangeEvent const&)
sfx2::sidebar::SidebarController::requestLayout()
sfx2::sidebar::SidebarController::saveDeckState()
sfx2::sidebar::SidebarController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
sfx2::sidebar::SidebarController::unregisterSidebarForFrame(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sfx2::sidebar::SidebarController::~SidebarController()
sfx2::sidebar::SidebarDockingWindow::CheckAlignment(SfxChildAlignment, SfxChildAlignment)
sfx2::sidebar::SidebarDockingWindow::Close()
sfx2::sidebar::SidebarDockingWindow::EventNotify(NotifyEvent&)
sfx2::sidebar::SidebarDockingWindow::GetFocus()
sfx2::sidebar::SidebarDockingWindow::GetOrCreateSidebarController()
sfx2::sidebar::SidebarDockingWindow::SidebarDockingWindow(SfxBindings*, sfx2::sidebar::SidebarChildWindow&, vcl::Window*, long)
sfx2::sidebar::SidebarDockingWindow::SyncUpdate()
sfx2::sidebar::SidebarDockingWindow::dispose()
sfx2::sidebar::SidebarDockingWindow::~SidebarDockingWindow()
sfx2::sidebar::SidebarPanelBase::SetParentPanel(sfx2::sidebar::Panel*)
sfx2::sidebar::SidebarPanelBase::SidebarPanelBase(rtl::OUString, com::sun::star::uno::Reference<com::sun::star::frame::XFrame>, std::unique_ptr<PanelLayout, std::default_delete<PanelLayout> >, com::sun::star::ui::LayoutSize const&)
sfx2::sidebar::SidebarPanelBase::createAccessible(com::sun::star::uno::Reference<com::sun::star::accessibility::XAccessible> const&)
sfx2::sidebar::SidebarPanelBase::disposing(com::sun::star::lang::EventObject const&)
sfx2::sidebar::SidebarPanelBase::disposing(std::unique_lock<std::mutex>&)
sfx2::sidebar::SidebarPanelBase::getFrame()
sfx2::sidebar::SidebarPanelBase::getHeightForWidth(int)
sfx2::sidebar::SidebarPanelBase::getMinimalWidth()
sfx2::sidebar::SidebarPanelBase::getRealInterface()
sfx2::sidebar::SidebarPanelBase::getResourceURL()
sfx2::sidebar::SidebarPanelBase::getType()
sfx2::sidebar::SidebarPanelBase::getWindow()
sfx2::sidebar::SidebarPanelBase::notifyContextChangeEvent(com::sun::star::ui::ContextChangeEventObject const&)
sfx2::sidebar::SidebarPanelBase::updateModel(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
sfx2::sidebar::SidebarPanelBase::~SidebarPanelBase()
sfx2::sidebar::Theme::BroadcastPropertyChange(std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> > > const*, com::sun::star::beans::PropertyChangeEvent const&)
sfx2::sidebar::Theme::DoVetoableListenersVeto(std::vector<com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener>, std::allocator<com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> > > const*, com::sun::star::beans::PropertyChangeEvent const&)
sfx2::sidebar::Theme::GetChangeListeners(sfx2::sidebar::Theme::ThemeItem, bool)
sfx2::sidebar::Theme::GetCppuType(sfx2::sidebar::Theme::PropertyType)
sfx2::sidebar::Theme::GetCurrentTheme()
sfx2::sidebar::Theme::GetIndex(sfx2::sidebar::Theme::ThemeItem, sfx2::sidebar::Theme::PropertyType)
sfx2::sidebar::Theme::GetInteger(sfx2::sidebar::Theme::ThemeItem)
sfx2::sidebar::Theme::GetPropertySet()
sfx2::sidebar::Theme::GetPropertyType(sfx2::sidebar::Theme::ThemeItem)
sfx2::sidebar::Theme::GetVetoableListeners(sfx2::sidebar::Theme::ThemeItem, bool)
sfx2::sidebar::Theme::HandleDataChange()
sfx2::sidebar::Theme::InitializeTheme()
sfx2::sidebar::Theme::IsHighContrastMode()
sfx2::sidebar::Theme::ProcessNewValue(com::sun::star::uno::Any const&, sfx2::sidebar::Theme::ThemeItem, sfx2::sidebar::Theme::PropertyType)
sfx2::sidebar::Theme::SetupPropertyMaps()
sfx2::sidebar::Theme::Theme()
sfx2::sidebar::Theme::UpdateTheme()
sfx2::sidebar::Theme::addPropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
sfx2::sidebar::Theme::addVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
sfx2::sidebar::Theme::disposing(std::unique_lock<std::mutex>&)
sfx2::sidebar::Theme::getProperties()
sfx2::sidebar::Theme::getPropertyByName(rtl::OUString const&)
sfx2::sidebar::Theme::getPropertySetInfo()
sfx2::sidebar::Theme::getPropertyValue(rtl::OUString const&)
sfx2::sidebar::Theme::hasPropertyByName(rtl::OUString const&)
sfx2::sidebar::Theme::removePropertyChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertyChangeListener> const&)
sfx2::sidebar::Theme::removeVetoableChangeListener(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XVetoableChangeListener> const&)
sfx2::sidebar::Theme::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
sfx2::sidebar::Theme::~Theme()
shift_basis
shift_coldata
shift_rowcoldata
shift_rowdata
simple_formula_FormulaOpCodeMapperObj
simplexPricer
singleton_column
sizeLink
skgpu::VulkanExtensions::getSpecVersions(std::function<void (*(char const*, VkInstance_T*, VkDevice_T*))()>, VkInstance_T*, VkPhysicalDevice_T*)
skgpu::VulkanExtensions::hasExtension(char const*, unsigned int) const
skgpu::VulkanExtensions::init(std::function<void (*(char const*, VkInstance_T*, VkDevice_T*))()>, VkInstance_T*, VkPhysicalDevice_T*, unsigned int, char const* const*, unsigned int, char const* const*)
skgpu::ganesh::DrawDDL(SkSurface*, sk_sp<GrDeferredDisplayList const>)
skgpu::ganesh::DrawDDL(sk_sp<SkSurface>, sk_sp<GrDeferredDisplayList const>)
skgpu::ganesh::Flush(SkSurface*)
skgpu::ganesh::Flush(sk_sp<SkSurface>)
skgpu::ganesh::FlushAndSubmit(SkSurface*)
skgpu::ganesh::FlushAndSubmit(sk_sp<SkSurface>)
skpathutils::FillPathWithPaint(SkPath const&, SkPaint const&, SkPath*)
skpathutils::FillPathWithPaint(SkPath const&, SkPaint const&, SkPath*, SkRect const*, SkMatrix const&)
skpathutils::FillPathWithPaint(SkPath const&, SkPaint const&, SkPath*, SkRect const*, float)
sktext::gpu::Slug::ConvertBlob(SkCanvas*, SkTextBlob const&, SkPoint, SkPaint const&)
sktext::gpu::Slug::Deserialize(void const*, unsigned long, SkStrikeClient const*)
sktext::gpu::Slug::MakeFromBuffer(SkReadBuffer&)
sktext::gpu::Slug::NextUniqueID()
sktext::gpu::Slug::draw(SkCanvas*) const
sktext::gpu::Slug::serialize() const
sktext::gpu::Slug::serialize(void*, unsigned long) const
slideshow::internal::AnimationCommandNode::AnimationCommandNode(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&, std::shared_ptr<slideshow::internal::BaseContainerNode> const&, slideshow::internal::NodeContext const&)
slideshow::internal::AnimationCommandNode::activate_st()
slideshow::internal::AnimationCommandNode::dispose()
slideshow::internal::AnimationCommandNode::hasPendingAnimation() const
so_stdname
solution_is_int
solve_BB
solve_LP
sortByINT
sortByREAL
sortREALByINT
spaces
spx_run
spx_solve
stallMonitor_check
stallMonitor_create
stallMonitor_creepingObj
stallMonitor_finish
stallMonitor_reset
stallMonitor_shortSteps
stallMonitor_update
store_bounds
store_pointer(char*, char*)
store_re_op
storevarandweight
str_add_column
str_add_constraint
str_add_lag_con
str_set_obj_fn
str_set_rh_vec
strcpylo
strcpyup
strlinecat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
strongbranch_BB
strtoint
strtolo
strtoup
submat
svl::IndexedStyleSheets::ApplyToAllStyleSheets(svl::StyleSheetCallback&) const
svl::IndexedStyleSheets::Clear(svl::StyleSheetDisposer&)
svl::IndexedStyleSheets::GetNthStyleSheetThatMatchesPredicate(int, svl::StyleSheetPredicate&, int)
svl::IndexedStyleSheets::GetNumberOfStyleSheetsWithPredicate(svl::StyleSheetPredicate&) const
svl::IndexedStyleSheets::Register(SfxStyleSheetBase&, int)
svl::IndexedStyleSheets::Reindex()
svl::IndexedStyleSheets::ReindexOnNameChange(rtl::OUString const&, rtl::OUString const&)
svl::crypto::Signing::Verify(SvStream&, std::vector<std::pair<unsigned long, unsigned long>, std::allocator<std::pair<unsigned long, unsigned long> > > const&, bool, std::vector<unsigned char, std::allocator<unsigned char> > const&, SignatureInformation&)
svt::AcceleratorExecute::execute(com::sun::star::awt::KeyEvent const&)
svt::AcceleratorExecute::findCommand(com::sun::star::awt::KeyEvent const&)
svt::AcceleratorExecute::lok_setModuleConfig(com::sun::star::uno::Reference<com::sun::star::ui::XAcceleratorConfiguration> const&)
svt::AcceleratorExecute::st_AWTKey2VCLKey(com::sun::star::awt::KeyEvent const&)
svt::AcceleratorExecute::st_VCLKey2AWTKey(vcl::KeyCode const&)
svt::AcceleratorExecute::st_openDocConfig(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&)
svt::AcceleratorExecute::st_openModuleConfig(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
svt::BindableControlHelper::ApplyListSourceAndBindableData(com::sun::star::uno::Reference<com::sun::star::frame::XModel> const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&, rtl::OUString const&, unsigned short)
svt::CellController::ActivatingMouseEvent(BrowserMouseEvent const&, bool)
svt::CellController::CellController(svt::ControlBase*)
svt::CellController::CommitModifications()
svt::CellController::MoveAllowed(KeyEvent const&) const
svt::CellController::resume()
svt::CellController::suspend()
svt::CellController::~CellController()
svt::CheckBoxCellController::ActivatingMouseEvent(BrowserMouseEvent const&, bool)
svt::CheckBoxCellController::IsValueChangedFromSaved() const
svt::CheckBoxCellController::SaveValue()
svt::CheckBoxControl::Clicked()
svt::CheckBoxControl::SetPointFont(vcl::Font const&)
svt::CheckBoxControl::dispose()
svt::CheckBoxControl::~CheckBoxControl()
svt::ComboBoxCellController::IsValueChangedFromSaved() const
svt::ComboBoxCellController::MoveAllowed(KeyEvent const&) const
svt::ComboBoxCellController::SaveValue()
svt::ComboBoxControl::SetPointFont(vcl::Font const&)
svt::ComboBoxControl::dispose()
svt::ControlBase::ControlBase(BrowserDataWin*, rtl::OUString const&, rtl::OUString const&)
svt::ControlBase::ProcessKey(KeyEvent const&)
svt::ControlBase::SetEditableReadOnly(bool)
svt::DateControl::dispose()
svt::DialogClosedListener::dialogClosed(com::sun::star::ui::dialogs::DialogClosedEvent const&)
svt::DialogClosedListener::disposing(com::sun::star::lang::EventObject const&)
svt::DocumentLockFile::GetLockDataImpl(std::unique_lock<std::mutex>&)
svt::DocumentLockFile::WriteEntryToStream(std::unique_lock<std::mutex>&, o3tl::enumarray<LockFileComponent, rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
svt::EditBrowseBox::AsynchGetFocus()
svt::EditBrowseBox::BrowserMouseEventPtr::Clear()
svt::EditBrowseBox::GetAutoColumnWidth(unsigned short)
svt::EditBrowseBox::GetCellRect(int, unsigned short, bool) const
svt::EditBrowseBox::GetImage(svt::EditBrowseBox::RowStatus) const
svt::EditBrowseBox::InvalidateHandleColumn()
svt::EditBrowseBox::PaintTristate(tools::Rectangle const&, TriState const&, bool) const
svt::EditBrowseBox::ResizeController(tools::SvRef<svt::CellController> const&, tools::Rectangle const&)
svt::EditBrowseBox::implCreateActiveAccessible()
svt::EditCellController::IsValueChangedFromSaved() const
svt::EditCellController::LinkStubModifyHdl(void*, LinkParamNone*)
svt::EditCellController::ModifyHdl(LinkParamNone*)
svt::EditCellController::MoveAllowed(KeyEvent const&) const
svt::EditCellController::SaveValue()
svt::EditCellController::~EditCellController()
svt::EditControl::dispose()
svt::EditControlBase::EditControlBase(BrowserDataWin*)
svt::EditControlBase::InitEditControlBase(weld::Entry*)
svt::EditControlBase::dispose()
svt::EmbeddedObjectRef::GetIsProtectedHdl() const
svt::EmbeddedObjectRef::IsChart(com::sun::star::uno::Reference<com::sun::star::embed::XEmbeddedObject> const&)
svt::EmbeddedObjectRef::IsLocked() const
svt::EmbeddedObjectRef::UpdateReplacementOnDemand()
svt::EntryImplementation::ModifyHdl(weld::Entry&)
svt::FormattedControlBase::FormattedControlBase(BrowserDataWin*, bool)
svt::FormattedControlBase::InitFormattedControlBase()
svt::FormattedControlBase::connect_changed(Link<weld::Entry&, void> const&)
svt::FormattedControlBase::connect_focus_in(Link<weld::Widget&, void> const&)
svt::FormattedControlBase::connect_focus_out(Link<weld::Widget&, void> const&)
svt::FormattedControlBase::connect_key_press(Link<KeyEvent const&, bool> const&)
svt::FormattedControlBase::dispose()
svt::FormattedFieldCellController::CommitModifications()
svt::GenDocumentLockFile::GenDocumentLockFile(rtl::OUString const&)
svt::GenDocumentLockFile::OpenStream(std::unique_lock<std::mutex>&)
svt::GenDocumentLockFile::RemoveFile()
svt::GenDocumentLockFile::~GenDocumentLockFile()
svt::JavaContext::acquire()
svt::JavaContext::getValueByName(rtl::OUString const&)
svt::JavaContext::queryInterface(com::sun::star::uno::Type const&)
svt::JavaContext::release()
svt::JavaContext::~JavaContext()
svt::JavaInteractionHandler::acquire()
svt::JavaInteractionHandler::handle(com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
svt::JavaInteractionHandler::queryInterface(com::sun::star::uno::Type const&)
svt::JavaInteractionHandler::release()
svt::ListBoxCellController::IsValueChangedFromSaved() const
svt::ListBoxCellController::MoveAllowed(KeyEvent const&) const
svt::ListBoxCellController::SaveValue()
svt::ListBoxControl::SetPointFont(vcl::Font const&)
svt::ListBoxControl::dispose()
svt::LockFileCommon::EscapeCharacters(rtl::OUString const&)
svt::LockFileCommon::GenerateOwnLockFileURL(std::basic_string_view<char16_t, std::char_traits<char16_t> >, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svt::LockFileCommon::GetCurrentLocalTime()
svt::LockFileCommon::LockFileCommon(rtl::OUString)
svt::LockFileCommon::ParseEntry(com::sun::star::uno::Sequence<signed char> const&, int&)
svt::LockFileCommon::ParseList(com::sun::star::uno::Sequence<signed char> const&, std::vector<o3tl::enumarray<LockFileComponent, rtl::OUString>, std::allocator<o3tl::enumarray<LockFileComponent, rtl::OUString> > >&)
svt::LockFileCommon::ParseName(com::sun::star::uno::Sequence<signed char> const&, int&)
svt::LockFileCommon::SetURL(rtl::OUString const&)
svt::LockFileCommon::~LockFileCommon()
svt::MSODocumentLockFile::GetLockDataImpl(std::unique_lock<std::mutex>&)
svt::MSODocumentLockFile::IsMSOSupportedFileFormat(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svt::MSODocumentLockFile::OpenStream(std::unique_lock<std::mutex>&)
svt::MSODocumentLockFile::RemoveFile()
svt::MSODocumentLockFile::WriteEntryToStream(std::unique_lock<std::mutex>&, o3tl::enumarray<LockFileComponent, rtl::OUString> const&, com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
svt::MSODocumentLockFile::getAppType(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svt::MultiLineEditImplementation::GetSelected(LineEnd) const
svt::MultiLineEditImplementation::GetText(LineEnd) const
svt::MultiLineEditImplementation::ModifyHdl(weld::TextView&)
svt::MultiLineTextCell::GetFocus()
svt::MultiLineTextCell::ProcessKey(KeyEvent const&)
svt::MultiLineTextCell::dispose()
svt::OFileNotation::OFileNotation(rtl::OUString const&, svt::OFileNotation::NOTATION)
svt::OGenericUnoDialog::impl_ensureDialog_lck()
svt::OStringTransfer::StartStringDrag(rtl::OUString const&, vcl::Window*, signed char)
svt::OStringTransferable::AddSupportedFormats()
svt::OStringTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svt::PatternControl::connect_changed(Link<weld::Entry&, void> const&)
svt::PatternControl::connect_focus_in(Link<weld::Widget&, void> const&)
svt::PatternControl::connect_focus_out(Link<weld::Widget&, void> const&)
svt::PatternControl::connect_key_press(Link<KeyEvent const&, bool> const&)
svt::PatternControl::dispose()
svt::ShareControlFile::Close()
svt::ShareControlFile::GetUsersDataImpl(std::unique_lock<std::mutex>&)
svt::ShareControlFile::InsertOwnEntry()
svt::ShareControlFile::RemoveEntry()
svt::ShareControlFile::RemoveEntry(o3tl::enumarray<LockFileComponent, rtl::OUString> const&)
svt::ShareControlFile::RemoveFile()
svt::ShareControlFile::RemoveFileImpl(std::unique_lock<std::mutex>&)
svt::ShareControlFile::SetUsersDataAndStore(std::unique_lock<std::mutex>&, std::vector<o3tl::enumarray<LockFileComponent, rtl::OUString>, std::allocator<o3tl::enumarray<LockFileComponent, rtl::OUString> > >&&)
svt::StatusbarController::StatusbarController()
svt::StatusbarController::StatusbarController(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&, rtl::OUString, unsigned short)
svt::StatusbarController::acquire()
svt::StatusbarController::addStatusListener(rtl::OUString const&)
svt::StatusbarController::bindListener()
svt::StatusbarController::click(com::sun::star::awt::Point const&)
svt::StatusbarController::command(com::sun::star::awt::Point const&, int, unsigned char, com::sun::star::uno::Any const&)
svt::StatusbarController::doubleClick(com::sun::star::awt::Point const&)
svt::StatusbarController::execute(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
svt::StatusbarController::getFrameInterface() const
svt::StatusbarController::getURLTransformer() const
svt::StatusbarController::mouseButtonDown(com::sun::star::awt::MouseEvent const&)
svt::StatusbarController::mouseButtonUp(com::sun::star::awt::MouseEvent const&)
svt::StatusbarController::mouseMove(com::sun::star::awt::MouseEvent const&)
svt::StatusbarController::paint(com::sun::star::uno::Reference<com::sun::star::awt::XGraphics> const&, com::sun::star::awt::Rectangle const&, int)
svt::StatusbarController::release()
svt::StatusbarController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
svt::StatusbarController::~StatusbarController()
svt::ToolboxController::enable(bool)
svt::ToolboxController::getLayoutManager() const
svt::ToolboxController::removeStatusListener(rtl::OUString const&)
svt::ToolboxController::statusChanged(com::sun::star::frame::FeatureStateEvent const&)
svt::ToolboxController::updateStatus()
svt::ToolboxController::updateStatus(rtl::OUString const&)
svt::addFilePicker(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
svt::addFolderPicker(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
svtools::ApplyLineDashing(basegfx::B2DPolygon const&, SvxBorderLineStyle, double)
svtools::EditableColorConfig::Commit()
svtools::EditableColorConfig::DeleteScheme(rtl::OUString const&)
svtools::EditableColorConfig::DisableBroadcast()
svtools::EditableColorConfig::EnableBroadcast()
svtools::EditableColorConfig::GetCurrentSchemeName() const
svtools::EditableColorConfig::GetSchemeNames() const
svtools::EditableColorConfig::LoadScheme(rtl::OUString const&)
svtools::EditableColorConfig::SetCurrentSchemeName(rtl::OUString const&)
svtools::EditableColorConfig::SetModified()
svtools::EditableExtendedColorConfig::AddScheme(rtl::OUString const&)
svtools::EditableExtendedColorConfig::Commit()
svtools::EditableExtendedColorConfig::DeleteScheme(rtl::OUString const&)
svtools::EditableExtendedColorConfig::DisableBroadcast()
svtools::EditableExtendedColorConfig::EditableExtendedColorConfig()
svtools::EditableExtendedColorConfig::EnableBroadcast()
svtools::EditableExtendedColorConfig::GetComponentColorConfigValue(rtl::OUString const&, unsigned int) const
svtools::EditableExtendedColorConfig::GetComponentColorCount(rtl::OUString const&) const
svtools::EditableExtendedColorConfig::GetComponentCount() const
svtools::EditableExtendedColorConfig::GetComponentName(unsigned int) const
svtools::EditableExtendedColorConfig::LoadScheme(rtl::OUString const&)
svtools::EditableExtendedColorConfig::SetColorValue(rtl::OUString const&, svtools::ExtendedColorConfigValue const&)
svtools::EditableExtendedColorConfig::SetCurrentSchemeName(rtl::OUString const&)
svtools::EditableExtendedColorConfig::SetModified()
svtools::EditableExtendedColorConfig::~EditableExtendedColorConfig()
svtools::GetFontSubstitutions()
svtools::GetPrinterOptions(vcl::printer::Options&, bool)
svtools::IsFontSubstitutionsEnabled()
svtools::SetFontSubstitutions(bool, std::vector<SubstitutionStruct, std::allocator<SubstitutionStruct> > const&)
svtools::SetPrinterOptions(vcl::printer::Options const&, bool)
svx::ClassificationDialog::insertCategoryField(int)
svx::ClassificationDialog::insertField(svx::ClassificationType, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
svx::ClassificationDialog::readIn(std::vector<svx::ClassificationResult, std::allocator<svx::ClassificationResult> > const&)
svx::ClassificationDialog::readRecentlyUsed()
svx::ClassificationDialog::toggleWidgetsDependingOnCategory()
svx::ClassificationDialog::writeRecentlyUsed()
svx::ColorSets::ColorSets()
svx::ColorSets::init()
svx::ColorSets::insert(model::ColorSet const&, svx::ColorSets::IdenticalNameAction)
svx::CommonStyleManager::CreateStylePreviewRenderer(OutputDevice&, SfxStyleSheetBase*, long)
svx::DialControl::HandleEscapeEvent()
svx::DialControl::HandleMouseEvent(Point const&, bool)
svx::DialControl::HasRotation() const
svx::DialControl::Init(Size const&)
svx::DialControl::Init(Size const&, vcl::Font const&)
svx::DialControl::InvalidateControl()
svx::DialControl::KeyInput(KeyEvent const&)
svx::DialControl::LoseFocus()
svx::DialControl::MouseButtonDown(MouseEvent const&)
svx::DialControl::MouseButtonUp(MouseEvent const&)
svx::DialControl::MouseMove(MouseEvent const&)
svx::DialControl::Paint(OutputDevice&, tools::Rectangle const&)
svx::DialControl::Resize()
svx::DialControl::SetDrawingArea(weld::DrawingArea*)
svx::DialControl::SetModifyHdl(Link<svx::DialControl&, void> const&)
svx::DialControl::SetNoRotation()
svx::DialControl::SetRotation(o3tl::strong_int<int, FractionTag<100> >, bool)
svx::DialControl::StyleUpdated()
svx::ExtendedPrimitive2dXmlDump::decomposeAndWrite(drawinglayer::primitive2d::BasePrimitive2D const&, tools::XmlWriter&)
svx::ExtrusionBar::GetInterface() const
svx::ExtrusionBar::GetStaticInterface()
svx::ExtrusionBar::InitInterface_Impl()
svx::ExtrusionBar::RegisterInterface(SfxModule const*)
svx::FontWorkGalleryDialog::fillFavorites(unsigned short)
svx::FontWorkGalleryDialog::initFavorites(unsigned short)
svx::FontWorkGalleryDialog::insertSelectedFontwork()
svx::FontworkBar::GetInterface() const
svx::FontworkBar::GetStaticInterface()
svx::FontworkBar::InitInterface_Impl()
svx::FontworkBar::RegisterInterface(SfxModule const*)
svx::FormatPaintBrushToolBoxControl::Click()
svx::FormatPaintBrushToolBoxControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::FormatPaintBrushToolBoxControl::DoubleClick()
svx::FormatPaintBrushToolBoxControl::FormatPaintBrushToolBoxControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::FormatPaintBrushToolBoxControl::Select(unsigned short)
svx::FormatPaintBrushToolBoxControl::StateChangedAtToolBoxControl(unsigned short, SfxItemState, SfxPoolItem const*)
svx::FormatPaintBrushToolBoxControl::impl_executePaintBrush()
svx::FormatPaintBrushToolBoxControl::~FormatPaintBrushToolBoxControl()
svx::FrameDirectionListBox::~FrameDirectionListBox()
svx::FrameSelector::CreateAccessible()
svx::FrameSelector::FrameSelector()
svx::FrameSelector::GetChildAccessible(Point const&)
svx::FrameSelector::GetChildAccessible(int)
svx::FrameSelector::GetChildAccessible(svx::FrameBorderType)
svx::FrameSelector::GetClickBoundRect(svx::FrameBorderType) const
svx::FrameSelector::GetEnabledBorderCount() const
svx::FrameSelector::GetEnabledBorderType(int) const
svx::FrameSelector::GetFocus()
svx::FrameSelector::GetFrameBorderState(svx::FrameBorderType) const
svx::FrameSelector::GetFrameBorderStyle(svx::FrameBorderType) const
svx::FrameSelector::GetSelectHdl() const
svx::FrameSelector::GetVisibleColor(Color&) const
svx::FrameSelector::GetVisibleWidth(long&, SvxBorderLineStyle&) const
svx::FrameSelector::HideAllBorders()
svx::FrameSelector::Initialize(FrameSelFlags)
svx::FrameSelector::IsAnyBorderSelected() const
svx::FrameSelector::IsAnyBorderVisible() const
svx::FrameSelector::IsBorderEnabled(svx::FrameBorderType) const
svx::FrameSelector::IsBorderSelected(svx::FrameBorderType) const
svx::FrameSelector::KeyInput(KeyEvent const&)
svx::FrameSelector::LoseFocus()
svx::FrameSelector::MouseButtonDown(MouseEvent const&)
svx::FrameSelector::Paint(OutputDevice&, tools::Rectangle const&)
svx::FrameSelector::Resize()
svx::FrameSelector::SelectAllBorders(bool)
svx::FrameSelector::SelectAllVisibleBorders()
svx::FrameSelector::SelectBorder(svx::FrameBorderType)
svx::FrameSelector::SetBorderDontCare(svx::FrameBorderType)
svx::FrameSelector::SetColorToSelection(Color const&, model::ComplexColor const&)
svx::FrameSelector::SetDrawingArea(weld::DrawingArea*)
svx::FrameSelector::SetSelectHdl(Link<LinkParamNone*, void> const&)
svx::FrameSelector::SetStyleToSelection(long, SvxBorderLineStyle)
svx::FrameSelector::ShowBorder(svx::FrameBorderType, editeng::SvxBorderLine const*)
svx::FrameSelector::StyleUpdated()
svx::FrameSelector::SupportsDontCareState() const
svx::FrameSelector::getCurrentStyleLineStyle() const
svx::FrameSelector::~FrameSelector()
svx::GetFrameBorderTypeFromIndex(unsigned long)
svx::GotoPageDlg::LinkStubPageModifiedHdl(void*, weld::Entry&)
svx::GotoPageDlg::PageModifiedHdl(weld::Entry&)
svx::OColumnTransferable::AddSupportedFormats()
svx::OColumnTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::OColumnTransferable::OColumnTransferable(ColumnTransferFormatFlags)
svx::OColumnTransferable::OColumnTransferable(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&, ColumnTransferFormatFlags)
svx::OColumnTransferable::extractColumnDescriptor(TransferableDataHelper const&, rtl::OUString&, rtl::OUString&, rtl::OUString&, int&, rtl::OUString&, rtl::OUString&)
svx::OColumnTransferable::getDescriptorFormatId()
svx::OColumnTransferable::setDescriptor(svx::ODataAccessDescriptor const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(svx::ODataAccessDescriptor const&)
svx::ODataAccessDescriptor::ODataAccessDescriptor(svx::ODataAccessDescriptor&&)
svx::ODataAccessDescriptor::clear()
svx::ODataAccessDescriptor::erase(svx::DataAccessDescriptorProperty)
svx::ODataAccessDescriptor::operator=(svx::ODataAccessDescriptor const&)
svx::ODataAccessObjectTransferable::AddSupportedFormats()
svx::ODataAccessObjectTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::ODataAccessObjectTransferable::ODataAccessObjectTransferable()
svx::ODataAccessObjectTransferable::ODataAccessObjectTransferable(com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
svx::ODataAccessObjectTransferable::ObjectReleased()
svx::ODataAccessObjectTransferable::Update(rtl::OUString const&, int, rtl::OUString const&)
svx::ODataAccessObjectTransferable::Update(rtl::OUString const&, int, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::sdbc::XConnection> const&)
svx::ODataAccessObjectTransferable::addCompatibleSelectionDescription(com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
svx::OXFormsTransferable::AddSupportedFormats()
svx::OXFormsTransferable::GetData(com::sun::star::datatransfer::DataFlavor const&, rtl::OUString const&)
svx::OXFormsTransferable::OXFormsTransferable(std::function<svx::OXFormsDescriptor ()> const&)
svx::ParaAboveSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaAboveSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaAboveSpacingControl::ParaAboveSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaBelowSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaBelowSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaBelowSpacingControl::ParaBelowSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaFirstLineSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaFirstLineSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaFirstLineSpacingControl::ParaFirstLineSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaLeftSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaLeftSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaLeftSpacingControl::ParaLeftSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaRightSpacingControl::CreateImpl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::ParaRightSpacingControl::CreateItemWindow(vcl::Window*)
svx::ParaRightSpacingControl::ParaRightSpacingControl(unsigned short, o3tl::strong_int<unsigned short, ToolBoxItemIdTag>, ToolBox&)
svx::SignatureLineHelper::getLocalizedDate()
svx::SignatureLineHelper::getSignatureImage(rtl::OUString const&)
svx::SignatureLineHelper::getSignerName(com::sun::star::uno::Reference<com::sun::star::security::XCertificate> const&)
svx::SignatureLineHelper::importSVG(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::ThemeColorValueSet::SetDrawingArea(weld::DrawingArea*)
svx::ThemeColorValueSet::StyleUpdated()
svx::ThemeColorValueSet::UserDraw(UserDrawEvent const&)
svx::ThemeDialog::ButtonClicked(weld::Button&)
svx::ThemeDialog::DoubleClickValueSetHdl(ValueSet*)
svx::ThemeDialog::LinkStubButtonClicked(void*, weld::Button&)
svx::ThemeDialog::LinkStubDoubleClickValueSetHdl(void*, ValueSet*)
svx::ThemeDialog::LinkStubSelectItem(void*, ValueSet*)
svx::ThemeDialog::SelectItem(ValueSet*)
svx::ThemeDialog::initColorSets()
svx::ThemeDialog::runThemeColorEditDialog()
svx::administrateDatabaseRegistration(weld::Window*)
svx::checkForFontWork(SdrObject const*)
svx::classification::containsProperty(com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::classification::convertClassificationResultToString(std::vector<svx::ClassificationResult, std::allocator<svx::ClassificationResult> > const&)
svx::diagram::DiagramData::addConnection(svx::diagram::TypeConstant, rtl::OUString const&, rtl::OUString const&)
svx::diagram::DiagramData::getChildrenString(rtl::OUStringBuffer&, svx::diagram::Point const*, int) const
svx::diagram::DiagramFrameHdl::CreateB2dIAObject()
svx::diagram::DiagramFrameHdl::DiagramFrameHdl(basegfx::B2DHomMatrix const&)
svx::diagram::IDiagramHelper::AddAdditionalVisualization(SdrObjGroup const&, SdrHdlList&)
svx::frame::Array::GetB2DRange(int, int, int, int) const
svx::frame::Array::GetCellCount() const
svx::frame::Array::GetCellStyleBL(int, int) const
svx::frame::Array::GetCellStyleBLTR(int, int) const
svx::frame::Array::GetCellStyleBR(int, int) const
svx::frame::Array::GetCellStyleBottom(int, int) const
svx::frame::Array::GetCellStyleLeft(int, int) const
svx::frame::Array::GetCellStyleRight(int, int) const
svx::frame::Array::GetCellStyleTL(int, int) const
svx::frame::Array::GetCellStyleTLBR(int, int) const
svx::frame::Array::GetCellStyleTR(int, int) const
svx::frame::Array::GetCellStyleTop(int, int) const
svx::frame::Array::GetColPosition(int) const
svx::frame::Array::GetColWidth(int, int) const
svx::frame::Array::GetMergedOrigin(int&, int&, int, int) const
svx::frame::Array::GetMergedRange(int&, int&, int&, int&, int, int) const
svx::frame::Array::GetRowHeight(int, int) const
svx::frame::Array::GetRowPosition(int) const
svx::frame::Array::SetCellStyleDiag(int, int, svx::frame::Style const&, svx::frame::Style const&)
svx::frame::Array::SetColumnStyleLeft(int, svx::frame::Style const&)
svx::frame::Array::SetColumnStyleRight(int, svx::frame::Style const&)
svx::frame::Array::SetRowStyleBottom(int, svx::frame::Style const&)
svx::frame::Array::SetRowStyleTop(int, svx::frame::Style const&)
svx::frame::Style::Clear()
svx::frame::Style::Set(double, double, double)
svx::frame::Style::Style(Color const&, Color const&, Color const&, bool, double, double, double, SvxBorderLineStyle, double)
svx::frame::Style::Style(double, double, double, SvxBorderLineStyle, double)
svx::frame::Style::hashCode() const
svx::sidebar::InspectorTextPanel::Create(weld::Widget*)
svx::sidebar::NBOTypeMgrBase::ImplLoad(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::sidebar::NBOTypeMgrBase::ImplStore(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
svx::sidebar::NBOTypeMgrBase::IsSingleLevel(unsigned short)
svx::sidebar::SelectionAnalyzer::GetContextForObjectId_SC(SdrObjKind)
svx::sidebar::SelectionAnalyzer::GetContextForObjectId_SD(SdrObjKind, svx::sidebar::SelectionAnalyzer::ViewType)
svx::sidebar::SelectionAnalyzer::GetInventorTypeFromMark(SdrMarkList const&)
svx::sidebar::SelectionAnalyzer::GetObjectTypeFromGroup(SdrObject const*)
svx::sidebar::SelectionAnalyzer::GetObjectTypeFromMark(SdrMarkList const&)
svx::sidebar::SelectionAnalyzer::IsShapeType(SdrObjKind)
svx::sidebar::SelectionAnalyzer::IsTextObjType(SdrObjKind)
svx::sidebar::SelectionChangeHandler::disposing(com::sun::star::lang::EventObject const&)
svx::sidebar::SelectionChangeHandler::disposing(std::unique_lock<std::mutex>&)
svx::sidebar::SelectionChangeHandler::~SelectionChangeHandler()
svxform::FmSearchConfigItem::FmSearchConfigItem()
svxform::FmSearchConfigItem::getParams() const
svxform::FmSearchConfigItem::setParams(svxform::FmSearchParams const&)
svxform::FmSearchConfigItem::~FmSearchConfigItem()
svxform::FmSearchParams::FmSearchParams()
svxform::FmSearchParams::isCaseSensitive() const
svxform::FmSearchParams::isIgnoreWidthCJK() const
svxform::FmSearchParams::setCaseSensitive(bool)
svxform::ImplSmartRegisterUnoServices()
svxform::ONeutralParseContext::ONeutralParseContext()
svxform::ONeutralParseContext::~ONeutralParseContext()
svxform::OSystemParseContext::OSystemParseContext()
svxform::OSystemParseContext::getPreferredLocale() const
svxform::OSystemParseContext::~OSystemParseContext()
sw::AccessibilityCheck::checkDocumentProperties()
sw::AccessibilityCheck::checkNode(SwNode*)
sw::AccessibilityCheck::checkObject(SwNode*, SdrObject*)
sw::AccessibilityCheck::init()
sw::AccessibilityIssue::AccessibilityIssue(sfx::AccessibilityIssueID)
sw::AccessibilityIssue::canGotoIssue() const
sw::AccessibilityIssue::canQuickFixIssue() const
sw::AccessibilityIssue::gotoIssue() const
sw::AccessibilityIssue::quickFixIssue() const
sw::AccessibilityIssue::setDoc(SwDoc&)
sw::AccessibilityIssue::setIssueObject(sw::IssueObject)
sw::AccessibilityIssue::setObjectID(rtl::OUString const&)
sw::BroadcastingModify::CallSwClientNotify(SfxHint const&) const
sw::Justify::GetModelPosition(KernArray const&, int, long)
sw::MetaFieldManager::MetaFieldManager()
sw::MetaFieldManager::copyDocumentProperties(SwDoc const&)
sw::MetaFieldManager::getMetaFields()
sw::MetaFieldManager::makeMetaField(SwFormatMeta*, unsigned int, bool)
sw::ThemeColorChanger::doApply(std::shared_ptr<model::ColorSet> const&)
sw::UnoCursorHint::~UnoCursorHint()
sw::WriterMultiListener::EndListening(SwModify*)
sw::WriterMultiListener::EndListeningAll()
sw::WriterMultiListener::IsListeningTo(SwModify const*) const
sw::WriterMultiListener::StartListening(SwModify*)
sw::WriterMultiListener::WriterMultiListener(SwClient&)
sw::search::SearchResultLocator::findOne(sw::search::LocationResult&, sw::search::SearchIndexData const&)
sw::search::SearchResultLocator::tryParseJSON(char const*, std::vector<sw::search::SearchIndexData, std::allocator<sw::search::SearchIndexData> >&)
sw::search::SearchResultLocator::tryParseXML(char const*, std::vector<sw::search::SearchIndexData, std::allocator<sw::search::SearchIndexData> >&)
swapINT
swapPTR
swapREAL
symamd
symamd_report
termPQExpBuffer
timeNow
time_elapsed
toBool(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
toolkitform::describePDFControl(com::sun::star::uno::Reference<com::sun::star::awt::XControl> const&, vcl::PDFExtOutDevData&)
tools::Duration::ApplyTime(long)
tools::Duration::Duration(int, long)
tools::Duration::Normalize(unsigned long, unsigned long, unsigned long, unsigned long, bool)
tools::Duration::SetTimeDiff(tools::Time const&, tools::Time const&)
tools::IsMappedWebDAVPath(rtl::OUString const&, rtl::OUString*)
tools::JsonWriter::addCommaBeforeField()
tools::JsonWriter::ensureSpace(int)
tools::JsonWriter::ensureSpaceAndWriteNameColon(std::basic_string_view<char, std::char_traits<char> >, int)
tools::JsonWriter::writeEscapedOUString(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
tools::Line::GetDistance(double const&, double const&) const
tools::Line::Intersection(tools::Line const&, Point&) const
tools::Line::Intersection(tools::Line const&, double&, double&) const
tools::PolyPolygon::AdaptiveSubdivide(tools::PolyPolygon&) const
tools::PolyPolygon::Clear()
tools::PolyPolygon::GetIntersection(tools::PolyPolygon const&, tools::PolyPolygon&) const
tools::PolyPolygon::GetUnion(tools::PolyPolygon const&, tools::PolyPolygon&) const
tools::PolyPolygon::IsRect() const
tools::PolyPolygon::Read(SvStream&)
tools::PolyPolygon::Remove(unsigned short)
tools::PolyPolygon::Replace(tools::Polygon const&, unsigned short)
tools::PolyPolygon::Rotate(Point const&, double, double)
tools::PolyPolygon::Rotate(Point const&, o3tl::strong_int<short, FractionTag<10> >)
tools::PolyPolygon::SubdivideBezier(tools::PolyPolygon const&)
tools::PolyPolygon::Translate(Point const&)
tools::PolyPolygon::Write(SvStream&) const
tools::Polygon::AdaptiveSubdivide(tools::Polygon&, double) const
tools::Polygon::CalcDistance(unsigned short, unsigned short) const
tools::Polygon::Clear()
tools::Polygon::Clip(tools::Rectangle const&)
tools::Polygon::Contains(Point const&) const
tools::Polygon::GetConstFlagAry() const
tools::Polygon::GetConstPointAry() const
tools::Polygon::GetPointAry()
tools::Polygon::HasFlags() const
tools::Polygon::ImplRead(SvStream&)
tools::Polygon::ImplReduceEdges(tools::Polygon&, double const&, unsigned short)
tools::Polygon::ImplWrite(SvStream&) const
tools::Polygon::Insert(unsigned short, tools::Polygon const&)
tools::Polygon::IsEqual(tools::Polygon const&) const
tools::Polygon::IsRect() const
tools::Polygon::Polygon(Point const&, Point const&, Point const&, Point const&, unsigned short)
tools::Polygon::Polygon(Point const&, long, long)
tools::Polygon::Polygon(tools::Rectangle const&, unsigned int, unsigned int)
tools::Polygon::Read(SvStream&)
tools::Polygon::Rotate(Point const&, double, double)
tools::Polygon::SetSize(unsigned short)
tools::Polygon::SubdivideBezier(tools::Polygon const&)
tools::Polygon::Translate(Point const&)
tools::Polygon::Write(SvStream&) const
tools::ReadPolyPolygon(SvStream&, tools::PolyPolygon&)
tools::ReadPolygon(SvStream&, tools::Polygon&)
tools::Time::GetMonotonicTicks()
tools::Time::GetNSFromTime() const
tools::Time::MakeTimeFromNS(long)
tools::Time::init(unsigned int, unsigned int, unsigned int, unsigned long)
tools::WritePolyPolygon(SvStream&, tools::PolyPolygon const&)
tools::WritePolygon(SvStream&, tools::Polygon const&)
tools::XmlWriter::attributeBase64(char const*, std::vector<char, std::allocator<char> > const&)
tools::XmlWriter::attributeDouble(char const*, double)
tools::XmlWriter::element(char const*)
tools::isEmptyFileUrl(rtl::OUString const&)
tools::operator+(tools::Time const&, tools::Time const&)
transfer_solution
transfer_solution_var
transform_for_scale
tryToUseMaskBuffer(SalBitmap const&, std::shared_ptr<MaskHelper>&)
tryToUseSourceBuffer(SalBitmap const&, std::shared_ptr<BitmapHelper>&)
u16_u8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<w_char, std::allocator<w_char> > const&)
u8_u16(std::vector<w_char, std::allocator<w_char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
ucbhelper::AuthenticationFallbackRequest::AuthenticationFallbackRequest(rtl::OUString const&, rtl::OUString const&)
ucbhelper::CommandEnvironment::getInteractionHandler()
ucbhelper::CommandEnvironment::getProgressHandler()
ucbhelper::CommandEnvironment::~CommandEnvironment()
ucbhelper::Content::Content(ucbhelper::Content const&)
ucbhelper::Content::Content(ucbhelper::Content&&)
ucbhelper::Content::create(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, ucbhelper::Content&)
ucbhelper::Content::createCursorAny(com::sun::star::uno::Sequence<rtl::OUString> const&, ucbhelper::ResultSetInclude)
ucbhelper::Content::createDynamicCursor(com::sun::star::uno::Sequence<rtl::OUString> const&, ucbhelper::ResultSetInclude)
ucbhelper::Content::createSortedCursor(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::ucb::NumberedSortingInfo> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XAnyCompareFactory> const&, ucbhelper::ResultSetInclude)
ucbhelper::Content::getCommandEnvironment() const
ucbhelper::Content::getProperties()
ucbhelper::Content::getPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&)
ucbhelper::Content::getPropertyValuesInterface(com::sun::star::uno::Sequence<rtl::OUString> const&)
ucbhelper::Content::getURL() const
ucbhelper::Content::insertNewContent(rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, ucbhelper::Content&)
ucbhelper::Content::lock()
ucbhelper::Content::openStream(com::sun::star::uno::Reference<com::sun::star::io::XActiveDataSink> const&)
ucbhelper::Content::openStream(com::sun::star::uno::Reference<com::sun::star::io::XOutputStream> const&)
ucbhelper::Content::openStreamNoLock()
ucbhelper::Content::openWriteableStream()
ucbhelper::Content::openWriteableStreamNoLock()
ucbhelper::Content::operator=(ucbhelper::Content const&)
ucbhelper::Content::queryCreatableContentsInfo()
ucbhelper::Content::setCommandEnvironment(com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&)
ucbhelper::Content::setPropertyValue(rtl::OUString const&, com::sun::star::uno::Any const&)
ucbhelper::Content::setPropertyValues(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&)
ucbhelper::Content::unlock()
ucbhelper::Content::writeStream(com::sun::star::uno::Reference<com::sun::star::io::XInputStream> const&, bool)
ucbhelper::ContentIdentifier::getContentIdentifier()
ucbhelper::ContentIdentifier::getContentProviderScheme()
ucbhelper::ContentIdentifier::~ContentIdentifier()
ucbhelper::ContentImplHelper::copyAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&)
ucbhelper::ContentImplHelper::getImplementationId()
ucbhelper::ContentImplHelper::getTypes()
ucbhelper::ContentImplHelper::notifyContentEvent(com::sun::star::ucb::ContentEvent const&) const
ucbhelper::ContentImplHelper::renameAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&)
ucbhelper::ContentProviderImplHelper::copyAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&, bool)
ucbhelper::ContentProviderImplHelper::queryExistingContent(rtl::OUString const&)
ucbhelper::ContentProviderImplHelper::removeAdditionalPropertySet(rtl::OUString const&, bool)
ucbhelper::ContentProviderImplHelper::renameAdditionalPropertySet(rtl::OUString const&, rtl::OUString const&, bool)
ucbhelper::ContentProviderImplHelper::supportsService(rtl::OUString const&)
ucbhelper::InteractionApprove::getImplementationId()
ucbhelper::InteractionApprove::getTypes()
ucbhelper::InteractionApprove::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionApprove::select()
ucbhelper::InteractionAuthFallback::getCode() const
ucbhelper::InteractionAuthFallback::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionAuthFallback::select()
ucbhelper::InteractionAuthFallback::setCode(rtl::OUString const&)
ucbhelper::InteractionDisapprove::getImplementationId()
ucbhelper::InteractionDisapprove::getTypes()
ucbhelper::InteractionDisapprove::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionDisapprove::select()
ucbhelper::InteractionRequest::InteractionRequest()
ucbhelper::InteractionRequest::InteractionRequest(com::sun::star::uno::Any const&)
ucbhelper::InteractionRequest::getContinuations()
ucbhelper::InteractionRequest::getRequest()
ucbhelper::InteractionRequest::setContinuations(com::sun::star::uno::Sequence<com::sun::star::uno::Reference<com::sun::star::task::XInteractionContinuation> > const&)
ucbhelper::InteractionRequest::setRequest(com::sun::star::uno::Any const&)
ucbhelper::InteractionRequest::setSelection(rtl::Reference<ucbhelper::InteractionContinuation> const&)
ucbhelper::InteractionRequest::~InteractionRequest()
ucbhelper::InteractionSupplyAuthentication::canSetAccount()
ucbhelper::InteractionSupplyAuthentication::canSetPassword()
ucbhelper::InteractionSupplyAuthentication::canSetRealm()
ucbhelper::InteractionSupplyAuthentication::canSetUserName()
ucbhelper::InteractionSupplyAuthentication::canUseSystemCredentials(unsigned char&)
ucbhelper::InteractionSupplyAuthentication::getImplementationId()
ucbhelper::InteractionSupplyAuthentication::getRememberAccountModes(com::sun::star::ucb::RememberAuthentication&)
ucbhelper::InteractionSupplyAuthentication::getRememberPasswordModes(com::sun::star::ucb::RememberAuthentication&)
ucbhelper::InteractionSupplyAuthentication::getTypes()
ucbhelper::InteractionSupplyAuthentication::queryInterface(com::sun::star::uno::Type const&)
ucbhelper::InteractionSupplyAuthentication::select()
ucbhelper::InteractionSupplyAuthentication::setAccount(rtl::OUString const&)
ucbhelper::InteractionSupplyAuthentication::setPassword(rtl::OUString const&)
ucbhelper::InteractionSupplyAuthentication::setRealm(rtl::OUString const&)
ucbhelper::InteractionSupplyAuthentication::setRememberAccount(com::sun::star::ucb::RememberAuthentication)
ucbhelper::InteractionSupplyAuthentication::setRememberPassword(com::sun::star::ucb::RememberAuthentication)
ucbhelper::InteractionSupplyAuthentication::setUseSystemCredentials(unsigned char)
ucbhelper::InteractionSupplyAuthentication::setUserName(rtl::OUString const&)
ucbhelper::InterceptedInteraction::intercepted(ucbhelper::InterceptedInteraction::InterceptedRequest const&, com::sun::star::uno::Reference<com::sun::star::task::XInteractionRequest> const&)
ucbhelper::ResultSet::ResultSet(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, rtl::Reference<ucbhelper::ResultSetDataSupplier> const&)
ucbhelper::ResultSet::rowCountChanged(unsigned int, unsigned int)
ucbhelper::ResultSetMetaData::ResultSetMetaData(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&)
ucbhelper::ResultSetMetaData::ResultSetMetaData(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, com::sun::star::uno::Sequence<com::sun::star::beans::Property> const&, std::vector<ucbhelper::ResultSetColumnData, std::allocator<ucbhelper::ResultSetColumnData> >&&)
ucbhelper::SimpleAuthenticationRequest::initialize(com::sun::star::ucb::URLAuthenticationRequest const&, bool, bool, bool, bool, bool, bool)
ucbhelper::SimpleCertificateValidationRequest::SimpleCertificateValidationRequest(int, com::sun::star::uno::Reference<com::sun::star::security::XCertificate> const&, rtl::OUString const&)
ucbhelper::cancelCommandExecution(com::sun::star::ucb::IOErrorCode, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandEnvironment> const&, rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::ucb::XCommandProcessor> const&)
ucbhelper::registerAtUcb(com::sun::star::uno::Reference<com::sun::star::ucb::XContentProviderManager> const&, com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, rtl::OUString const&, rtl::OUString const&)
undoscale
unicode::getExemplarLanguageForUScriptCode(UScriptCode)
unicode::getScriptClassFromLanguageTag(LanguageTag const&)
unicode::getScriptClassFromUScriptCode(UScriptCode)
unicode::getUnicodeDirection(char16_t)
unicode::getUnicodeScriptEnd(com::sun::star::i18n::UnicodeScript)
unicode::getUnicodeScriptStart(com::sun::star::i18n::UnicodeScript)
unicode::isAlpha(unsigned int)
unicode::isControl(unsigned int)
unicode::isSpace(unsigned int)
unicode_normalize
unicode_to_utf8
unicodeisalpha(unsigned short)
unicodetolower(unsigned short, int)
unicodetoupper(unsigned short, int)
uniqlist(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
unit_lok_process_events_to_idle
unload_BB
unload_BLAS
unload_basis
unpackPackedVector
unscale
unscale_columns
unscaled_mat
unscaled_value
unset_OF_p1extra
updatePricer
update_pseudocost
update_reducedcosts
updatecuts_BB
upper_utf(w_char, int)
userabort
utf8_to_unicode
utl::AccessibleRelationSetHelper::getImplementationId()
utl::AccessibleRelationSetHelper::getRelation(int)
utl::AccessibleRelationSetHelper::getRelationByType(short)
utl::AccessibleRelationSetHelper::getRelationCount()
utl::AccessibleRelationSetHelper::getTypes()
utl::AccessibleRelationSetHelper::~AccessibleRelationSetHelper()
utl::Bootstrap::data()
utl::Bootstrap::locateUserData(rtl::OUString&)
utl::ConfigItem::CallNotify(com::sun::star::uno::Sequence<rtl::OUString> const&)
utl::ConfigItem::ClearNodeSet(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&)
utl::ConfigItem::ClearNodeSet(rtl::OUString const&)
utl::ConfigItem::GetNodeNames(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&, utl::ConfigNameFormat)
utl::ConfigItem::GetNodeNames(rtl::OUString const&, utl::ConfigNameFormat)
utl::ConfigItem::GetProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, com::sun::star::uno::Sequence<rtl::OUString> const&, bool)
utl::ConfigItem::GetReadOnlyStates(com::sun::star::uno::Sequence<rtl::OUString> const&)
utl::ConfigItem::GetTree()
utl::ConfigItem::PutProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, bool)
utl::ConfigItem::RemoveChangesListener()
utl::ConfigItem::ReplaceSetProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, bool)
utl::ConfigItem::SetSetProperties(com::sun::star::uno::Reference<com::sun::star::container::XHierarchicalNameAccess> const&, rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
utl::ConfigItem::impl_packLocalizedProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
utl::ConfigItem::impl_unpackLocalizedProperties(com::sun::star::uno::Sequence<rtl::OUString> const&, com::sun::star::uno::Sequence<com::sun::star::uno::Any> const&, com::sun::star::uno::Sequence<rtl::OUString>&, com::sun::star::uno::Sequence<com::sun::star::uno::Any>&)
utl::ConfigManager::acquireTree(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
utl::ConfigManager::doStoreConfigItems()
utl::ConfigManager::getDefaultCurrency()
utl::ConfigManager::getWorkLocale()
utl::ConfigurationBroadcaster::ConfigurationBroadcaster()
utl::ConfigurationBroadcaster::NotifyListeners(ConfigurationHints)
utl::ConfigurationBroadcaster::operator=(utl::ConfigurationBroadcaster const&)
utl::DefaultFontConfiguration::DefaultFontConfiguration()
utl::DefaultFontConfiguration::get()
utl::DefaultFontConfiguration::getDefaultFont(LanguageTag const&, DefaultFontType) const
utl::DefaultFontConfiguration::getUserInterfaceFont(LanguageTag const&) const
utl::DefaultFontConfiguration::tryLocale(rtl::OUString const&, rtl::OUString const&) const
utl::DefaultFontConfiguration::~DefaultFontConfiguration()
utl::GetDateString(com::sun::star::util::DateTime const&)
utl::GetDateTime(com::sun::star::util::DateTime const&)
utl::GetDateTimeString(com::sun::star::util::DateTime const&)
utl::GetDateTimeString(int, int)
utl::GetLocaleData()
utl::ISO8601parseDate(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::util::Date&)
utl::ISO8601parseTime(std::basic_string_view<char16_t, std::char_traits<char16_t> >, com::sun::star::util::Time&)
utl::MediaDescriptor::addInputStreamOwnLock()
utl::MediaDescriptor::clearComponentDataEntry(rtl::OUString const&)
utl::OConfigurationNode::OConfigurationNode(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
utl::OConfigurationNode::OConfigurationNode(utl::OConfigurationNode const&)
utl::OConfigurationNode::_disposing(com::sun::star::lang::EventObject const&)
utl::OConfigurationNode::clear()
utl::OConfigurationNode::getLocalName() const
utl::OConfigurationNode::hasByHierarchicalName(rtl::OUString const&) const
utl::OConfigurationNode::insertNode(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&) const
utl::OConfigurationNode::isSetNode() const
utl::OConfigurationNode::normalizeName(rtl::OUString const&, utl::OConfigurationNode::NAMEORIGIN) const
utl::OConfigurationNode::operator=(utl::OConfigurationNode const&)
utl::OConfigurationNode::operator=(utl::OConfigurationNode&&)
utl::OConfigurationTreeRoot::OConfigurationTreeRoot(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&)
utl::OConfigurationTreeRoot::clear()
utl::OConfigurationTreeRoot::createWithProvider(com::sun::star::uno::Reference<com::sun::star::lang::XMultiServiceFactory> const&, rtl::OUString const&, int, utl::OConfigurationTreeRoot::CREATION_MODE)
utl::OConfigurationTreeRoot::tryCreateWithComponentContext(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&, int, utl::OConfigurationTreeRoot::CREATION_MODE)
utl::OInputStreamWrapper::available()
utl::OInputStreamWrapper::checkConnected() const
utl::OInputStreamWrapper::checkError() const
utl::OInputStreamWrapper::closeInput()
utl::OInputStreamWrapper::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::OInputStreamWrapper::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::OInputStreamWrapper::readSomeBytes(signed char*, int)
utl::OInputStreamWrapper::skipBytes(int)
utl::OInputStreamWrapper::~OInputStreamWrapper()
utl::OSeekableInputStreamWrapper::getLength()
utl::OSeekableInputStreamWrapper::getPosition()
utl::OSeekableInputStreamWrapper::seek(long)
utl::OSeekableInputStreamWrapper::~OSeekableInputStreamWrapper()
utl::OSeekableOutputStreamWrapper::getLength()
utl::OSeekableOutputStreamWrapper::getPosition()
utl::OSeekableOutputStreamWrapper::queryInterface(com::sun::star::uno::Type const&)
utl::OSeekableOutputStreamWrapper::seek(long)
utl::OSeekableOutputStreamWrapper::~OSeekableOutputStreamWrapper()
utl::OStreamWrapper::OStreamWrapper(SvStream*, bool)
utl::OStreamWrapper::closeOutput()
utl::OStreamWrapper::flush()
utl::OStreamWrapper::getInputStream()
utl::OStreamWrapper::getOutputStream()
utl::OStreamWrapper::truncate()
utl::OStreamWrapper::writeBytes(com::sun::star::uno::Sequence<signed char> const&)
utl::OStreamWrapper::~OStreamWrapper()
utl::SearchParam::SearchParam(utl::SearchParam const&)
utl::TempFileFast::CloseStream()
utl::TempFileFast::TempFileFast(utl::TempFileFast&&)
utl::TempFileFastService::TempFileFastService()
utl::TempFileFastService::available()
utl::TempFileFastService::checkConnected()
utl::TempFileFastService::checkError() const
utl::TempFileFastService::closeInput()
utl::TempFileFastService::closeOutput()
utl::TempFileFastService::flush()
utl::TempFileFastService::getInputStream()
utl::TempFileFastService::getLength()
utl::TempFileFastService::getOutputStream()
utl::TempFileFastService::getPosition()
utl::TempFileFastService::readBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::TempFileFastService::readSomeBytes(com::sun::star::uno::Sequence<signed char>&, int)
utl::TempFileFastService::seek(long)
utl::TempFileFastService::skipBytes(int)
utl::TempFileFastService::truncate()
utl::TempFileFastService::writeBytes(com::sun::star::uno::Sequence<signed char> const&)
utl::TempFileFastService::~TempFileFastService()
utl::TempFileNamed::TempFileNamed(utl::TempFileNamed&&)
utl::TextSearch::Init(utl::SearchParam const&, com::sun::star::lang::Locale const&)
utl::TextSearch::getXTextSearch(i18nutil::SearchOptions2 const&)
utl::TextSearch::searchForward(rtl::OUString const&)
utl::TransliterationWrapper::loadModuleImpl() const
utl::TransliterationWrapper::setLanguageLocaleImpl(o3tl::strong_int<unsigned short, LanguageTypeTag>)
utl::UCBContentHelper::EqualURLs(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::GetProperty(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::GetTitle(rtl::OUString const&, rtl::OUString*)
utl::UCBContentHelper::IsDocument(rtl::OUString const&)
utl::UCBContentHelper::IsSubPath(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::IsYounger(rtl::OUString const&, rtl::OUString const&)
utl::UCBContentHelper::MakeFolder(ucbhelper::Content&, rtl::OUString const&, ucbhelper::Content&)
utl::UCBContentHelper::getDefaultCommandEnvironment()
utl::UcbStreamHelper::CreateStream(rtl::OUString const&, StreamMode, bool, com::sun::star::uno::Reference<com::sun::star::awt::XWindow>)
utl::ZipPackageHelper::ZipPackageHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, rtl::OUString const&)
utl::ZipPackageHelper::addFile(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&)
utl::ZipPackageHelper::addFolder(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&)
utl::ZipPackageHelper::addFolderWithContent(com::sun::star::uno::Reference<com::sun::star::uno::XInterface> const&, rtl::OUString const&)
utl::ZipPackageHelper::getRootFolder()
utl::ZipPackageHelper::savePackage()
utl::detail::Options::ConfigurationChanged(utl::ConfigurationBroadcaster*, ConfigurationHints)
utl::detail::Options::Options()
utl::detail::Options::~Options()
utl::dropPrefixFromConfigurationPath(rtl::OUString const&, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
utl::extractFirstFromConfigurationPath(rtl::OUString const&, rtl::OUString*)
utl::typeConvert(Date const&, com::sun::star::util::Date&)
utl::typeConvert(com::sun::star::util::Date const&, Date&)
uv_decode
uv_encode
validImprovementVar
validSubstitutionVar
validate_bounds
var_store
varmap_add
varmap_canunlock
varmap_clear
varmap_compact
varmap_delete
varmap_lock
varmap_validate
vcl::BufferDevice::Dispose()
vcl::BufferDevice::operator*()
vcl::CloseTTFont(vcl::TrueTypeFont*)
vcl::CommandInfoProvider::GetCommandKeyCodeShortcut(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
vcl::CommandInfoProvider::GetCommandShortcut(rtl::OUString const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
vcl::CommandInfoProvider::GetPropertiesForCommand(rtl::OUString const&, rtl::OUString const&)
vcl::CommandInfoProvider::GetRealCommandForCommand(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
vcl::CommandInfoProvider::GetTooltipForCommand(rtl::OUString const&, com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&, com::sun::star::uno::Reference<com::sun::star::frame::XFrame> const&)
vcl::CommandInfoProvider::IsExperimental(rtl::OUString const&, rtl::OUString const&)
vcl::CommandInfoProvider::IsMirrored(rtl::OUString const&, rtl::OUString const&)
vcl::CommandInfoProvider::IsRotated(rtl::OUString const&, rtl::OUString const&)
vcl::ConvertDoubleValue(double, long, unsigned short, FieldUnit, FieldUnit)
vcl::ConvertValue(long, unsigned short, MapUnit, FieldUnit)
vcl::CreateTTFfontSubset(vcl::AbstractTrueTypeFont&, std::vector<unsigned char, std::allocator<unsigned char> >&, unsigned int const*, unsigned char const*, int, FontSubsetInfo&)
vcl::CreateTTFromTTGlyphs(vcl::AbstractTrueTypeFont*, std::vector<unsigned char, std::allocator<unsigned char> >&, unsigned short const*, unsigned char const*, int)
vcl::Cursor::DrawToDevice(OutputDevice&)
vcl::DefaultTextLayout::DrawText(Point const&, rtl::OUString const&, int, int, std::vector<tools::Rectangle, std::allocator<tools::Rectangle> >*, rtl::OUString*)
vcl::EndAllDialogs(vcl::Window const*)
vcl::EnglishStringToMetric(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
vcl::EnumContext::GetApplicationEnum(rtl::OUString const&)
vcl::EnumContext::GetApplicationName(vcl::EnumContext::Application)
vcl::EnumContext::GetCombinedContext_DI() const
vcl::ExtOutDevData::~ExtOutDevData()
vcl::Font::GetOrCalculateAverageFontWidth() const
vcl::I18nHelper::CompareString(rtl::OUString const&, rtl::OUString const&) const
vcl::I18nHelper::I18nHelper(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&, LanguageTag)
vcl::I18nHelper::filterFormattingChars(rtl::OUString const&)
vcl::I18nHelper::~I18nHelper()
vcl::ILibreOfficeKitNotifier::~ILibreOfficeKitNotifier()
vcl::IconThemeInfo::FindIconThemeById(std::vector<vcl::IconThemeInfo, std::allocator<vcl::IconThemeInfo> > const&, rtl::OUString const&)
vcl::IconThemeInfo::IconThemeInfo(rtl::OUString const&)
vcl::IconThemeInfo::IconThemeIsInVector(std::vector<vcl::IconThemeInfo, std::allocator<vcl::IconThemeInfo> > const&, rtl::OUString const&)
vcl::IconThemeInfo::SizeByThemeName(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
vcl::IconThemeScanner::Create(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
vcl::IconThemeScanner::FileIsValidIconTheme(rtl::OUString const&)
vcl::IconThemeScanner::GetStandardIconThemePath()
vcl::IconThemeScanner::ReadIconThemesFromPath(rtl::OUString const&)
vcl::IconThemeScanner::ScanDirectoryForIconThemes(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
vcl::IconThemeSelector::GetIconThemeForDesktopEnvironment(rtl::OUString const&, bool)
vcl::IconThemeSelector::ReturnFallback(std::vector<vcl::IconThemeInfo, std::allocator<vcl::IconThemeInfo> > const&)
vcl::IconThemeSelector::operator!=(vcl::IconThemeSelector const&) const
vcl::OleDnDHelper(com::sun::star::uno::Reference<com::sun::star::lang::XInitialization> const&, long, vcl::DragOrDrop)
vcl::OpenTTFontBuffer(void const*, unsigned int, unsigned int, vcl::TrueTypeFont**, tools::SvRef<FontCharMap>)
vcl::OpenTTFontFile(char const*, unsigned int, vcl::TrueTypeFont**, tools::SvRef<FontCharMap>)
vcl::PDFExtOutDevData::BeginGroup()
vcl::PDFExtOutDevData::EndGroup(Graphic const&, unsigned char, tools::Rectangle const&, tools::Rectangle const&)
vcl::PDFExtOutDevData::GetCurrentGraphic() const
vcl::PDFExtOutDevData::HasAdequateCompression(Graphic const&, tools::Rectangle const&, tools::Rectangle const&) const
vcl::PDFExtOutDevData::PDFExtOutDevData(OutputDevice const&)
vcl::PDFExtOutDevData::PlayGlobalActions(vcl::PDFWriter&)
vcl::PDFExtOutDevData::PlaySyncPageAct(vcl::PDFWriter&, unsigned int&, GDIMetaFile const&)
vcl::PDFExtOutDevData::RegisterDest()
vcl::PDFExtOutDevData::ResetSyncData(vcl::PDFWriter*)
vcl::PDFExtOutDevData::SetCompressionQuality(int)
vcl::PDFExtOutDevData::SetCurrentPageNumber(int)
vcl::PDFExtOutDevData::SetIsExportBookmarks(bool)
vcl::PDFExtOutDevData::SetIsExportFormFields(bool)
vcl::PDFExtOutDevData::SetIsExportHiddenSlides(bool)
vcl::PDFExtOutDevData::SetIsExportNamedDestinations(bool)
vcl::PDFExtOutDevData::SetIsExportNotes(bool)
vcl::PDFExtOutDevData::SetIsExportNotesInMargin(bool)
vcl::PDFExtOutDevData::SetIsExportNotesPages(bool)
vcl::PDFExtOutDevData::SetIsExportTaggedPDF(bool)
vcl::PDFExtOutDevData::SetIsExportTransitionEffects(bool)
vcl::PDFExtOutDevData::SetIsLosslessCompression(bool)
vcl::PDFExtOutDevData::SetIsReduceImageResolution(bool)
vcl::PDFExtOutDevData::SetIsSinglePageSheets(bool)
vcl::PDFExtOutDevData::SetStructureAnnotIds(std::vector<int, std::allocator<int> > const&)
vcl::PDFExtOutDevData::~PDFExtOutDevData()
vcl::PDFOutputStream::~PDFOutputStream()
vcl::PDFWriter::AddAttachedFile(rtl::OUString const&, rtl::OUString const&, rtl::OUString const&, std::unique_ptr<vcl::PDFOutputStream, std::default_delete<vcl::PDFOutputStream> >)
vcl::PDFWriter::BeginStructureElement(int)
vcl::PDFWriter::BeginTransparencyGroup()
vcl::PDFWriter::DrawPolyLine(tools::Polygon const&)
vcl::PDFWriter::DrawText(Point const&, rtl::OUString const&)
vcl::PDFWriter::DrawText(tools::Rectangle const&, rtl::OUString const&, DrawTextFlags)
vcl::PDFWriter::Emit()
vcl::PDFWriter::EndStructureElement()
vcl::PDFWriter::EndTransparencyGroup(tools::Rectangle const&, unsigned short)
vcl::PDFWriter::EnsureStructureElement()
vcl::PDFWriter::GetErrors() const
vcl::PDFWriter::GetReferenceDevice()
vcl::PDFWriter::InitEncryption(rtl::OUString const&, rtl::OUString const&)
vcl::PDFWriter::InitStructureElement(int, vcl::PDFWriter::StructElement, std::basic_string_view<char16_t, std::char_traits<char16_t> >)
vcl::PDFWriter::NewPage(double, double, vcl::PDFWriter::Orientation)
vcl::PDFWriter::PDFWriter(vcl::PDFWriter::PDFWriterContext const&, com::sun::star::uno::Reference<com::sun::star::beans::XMaterialHolder> const&)
vcl::PDFWriter::PlayMetafile(GDIMetaFile const&, vcl::PDFWriter::PlayMetafileContext const&, vcl::PDFExtOutDevData*)
vcl::PDFWriter::Pop()
vcl::PDFWriter::Push(vcl::PushFlags)
vcl::PDFWriter::SetClipRegion()
vcl::PDFWriter::SetClipRegion(basegfx::B2DPolyPolygon const&)
vcl::PDFWriter::SetDocumentLocale(com::sun::star::lang::Locale const&)
vcl::PDFWriter::SetFont(vcl::Font const&)
vcl::PDFWriter::SetMapMode(MapMode const&)
vcl::PDFWriter::SetStructureAttribute(vcl::PDFWriter::StructAttribute, vcl::PDFWriter::StructAttributeValue)
vcl::PDFWriter::SetTextColor(Color const&)
vcl::PDFWriter::~PDFWriter()
vcl::PaintBufferGuard::SetPaintRect(tools::Rectangle const&)
vcl::PngImageReader::getMicrosoftGifChunk(SvStream&)
vcl::PngImageReader::isAPng(SvStream&)
vcl::PrinterController::PrinterController(VclPtr<Printer> const&, weld::Window*)
vcl::PrinterController::dialogsParentClosing()
vcl::PrinterController::getFilteredPageCount() const
vcl::PrinterController::getFilteredPageFile(int, GDIMetaFile&, bool)
vcl::PrinterController::getJobProperties(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&) const
vcl::PrinterController::getPrinter() const
vcl::PrinterController::getUIOptions() const
vcl::PrinterController::getValue(rtl::OUString const&)
vcl::PrinterController::getValue(rtl::OUString const&) const
vcl::PrinterController::isDirectPrint() const
vcl::PrinterController::isShowDialogs() const
vcl::PrinterController::isUIOptionEnabled(rtl::OUString const&) const
vcl::PrinterController::printFilteredPage(int)
vcl::PrinterController::setJobState(com::sun::star::view::PrintableState)
vcl::PrinterController::setLastPage(bool)
vcl::PrinterController::setPrinterModified(bool)
vcl::PrinterController::setUIOptions(com::sun::star::uno::Sequence<com::sun::star::beans::PropertyValue> const&)
vcl::PrinterController::setValue(rtl::OUString const&, com::sun::star::uno::Any const&)
vcl::PrinterController::~PrinterController()
vcl::PrinterOptionsHelper::setUIControlOpt(com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, com::sun::star::uno::Sequence<rtl::OUString> const&, rtl::OUString const&, com::sun::star::beans::PropertyValue const*, vcl::PrinterOptionsHelper::UIControlOptions const&)
vcl::ReadRegion(SvStream&, vcl::Region&)
vcl::Region::Contains(Point const&) const
vcl::Region::Exclude(vcl::Region const&)
vcl::Region::GetAsPolyPolygon() const
vcl::Region::GetAsRegionBand() const
vcl::Region::GetRegionFromPolyPolygon(tools::PolyPolygon const&)
vcl::Region::Overlaps(tools::Rectangle const&) const
vcl::Region::Scale(double, double)
vcl::Region::XOr(tools::Rectangle const&)
vcl::Region::XOr(vcl::Region const&)
vcl::RoadmapWizardMachine::getStateDisplayName(short) const
vcl::RoadmapWizardMachine::knowsState(short) const
vcl::SetGetSpecialCharsFunction(rtl::OUString (*)(weld::Widget*, vcl::Font const&))
vcl::SettingsConfigItem::getValues()
vcl::Vectorizer::updateProgress(long)
vcl::Window::AlwaysEnableInput(bool, bool)
vcl::Window::ApplyControlBackground(OutputDevice&, Color const&)
vcl::Window::CalcTitleWidth() const
vcl::Window::CalcWindowSize(Size const&) const
vcl::Window::EnableAllResize()
vcl::Window::EnableChildPointerOverwrite(bool)
vcl::Window::EnableClipSiblings(bool)
vcl::Window::EnableDocking(bool)
vcl::Window::EnableNativeWidget(bool)
vcl::Window::ExpandPaintClipRegion(vcl::Region const&)
vcl::Window::GetAccessibleChildWindowCount()
vcl::Window::GetAccessibleDescription() const
vcl::Window::GetAccessibleName() const
vcl::Window::GetAccessibleRelationLabelFor() const
vcl::Window::GetActivationKey() const
vcl::Window::GetBorder(int&, int&, int&, int&) const
vcl::Window::GetBorderStyle() const
vcl::Window::GetDockingManager()
vcl::Window::GetDragGestureRecognizer()
vcl::Window::GetDragSource()
vcl::Window::GetDrawPixelFont(OutputDevice const*) const
vcl::Window::GetFocusedWindow() const
vcl::Window::GetGetFocusFlags() const
vcl::Window::GetPointFont(OutputDevice const&) const
vcl::Window::GetQuickHelpText() const
vcl::Window::GetTextFillColor() const
vcl::Window::GetTextRect(tools::Rectangle const&, rtl::OUString const&, DrawTextFlags, TextRectInfo*, vcl::TextLayoutCommon const*) const
vcl::Window::GetWindowPeer() const
vcl::Window::HasActiveChildFrame() const
vcl::Window::HideFocus()
vcl::Window::HideTracking()
vcl::Window::ImplGetWindow() const
vcl::Window::IsActive() const
vcl::Window::IsBackground() const
vcl::Window::IsChild(vcl::Window const*) const
vcl::Window::IsCompoundControl() const
vcl::Window::IsDefaultPos() const
vcl::Window::IsDialog() const
vcl::Window::IsInModalMode() const
vcl::Window::IsMenuFloatingWindow() const
vcl::Window::IsMouseTransparent() const
vcl::Window::IsNativeFrame() const
vcl::Window::IsNativeWidgetEnabled() const
vcl::Window::IsToolbarFloatingWindow() const
vcl::Window::IsTopWindow() const
vcl::Window::IsZoom() const
vcl::Window::PixelToLogic(tools::PolyPolygon const&) const
vcl::Window::RecordLayoutData(vcl::ControlLayoutData*, tools::Rectangle const&)
vcl::Window::SetCompoundControl(bool)
vcl::Window::SetCreatedWithToolkit(bool)
vcl::Window::SetDialogControlStart(bool)
vcl::Window::SetHelpText(rtl::OUString const&)
vcl::Window::SetLastMousePos(Point const&)
vcl::Window::SetModalHierarchyHdl(Link<bool, void> const&)
vcl::Window::SetParentUpdateMode(bool)
vcl::Window::SetTextAlign(TextAlign)
vcl::Window::SetTextFillColor()
vcl::Window::SetTextFillColor(Color const&)
vcl::Window::SetType(WindowType)
vcl::Window::SetUpdateMode(bool)
vcl::Window::SetWindowPeer(com::sun::star::uno::Reference<com::sun::star::awt::XVclWindowPeer> const&, VCLXWindow*)
vcl::Window::SetZoomedPointFont(OutputDevice&, vcl::Font const&)
vcl::Window::ShowTracking(tools::Rectangle const&, ShowTrackFlags)
vcl::Window::get_height_request() const
vcl::Window::get_hexpand() const
vcl::Window::get_width_request() const
vcl::Window::set_height_request(int)
vcl::Window::set_hexpand(bool)
vcl::Window::set_vexpand(bool)
vcl::Window::set_width_request(int)
vcl::WizardMachine::AddPage(std::unique_ptr<BuilderPage, std::default_delete<BuilderPage> >)
vcl::WizardMachine::Finish(short)
vcl::WizardMachine::GetOrCreatePage(short)
vcl::WizardMachine::ShowNextPage()
vcl::WizardMachine::ShowPrevPage()
vcl::WizardMachine::enableAutomaticNextButtonState()
vcl::WizardMachine::skipBackwardUntil(short)
vcl::WizardMachine::travelPrevious()
vcl::bitmap::CanvasCairoExtractBitmapData(BitmapEx const&, Bitmap&, unsigned char*&, bool&, long&, long&)
vcl::bitmap::CanvasExtractBitmapData(BitmapEx const&, com::sun::star::geometry::IntegerRectangle2D const&)
vcl::bitmap::CanvasTransformBitmap(BitmapEx const&, basegfx::B2DHomMatrix const&, basegfx::B2DRange const&, basegfx::B2DHomMatrix const&)
vcl::bitmap::CreateFromCairoSurface(Size, _cairo_surface*)
vcl::bitmap::CreateFromData(vcl::bitmap::RawBitmap&&)
vcl::bitmap::DrawAndClipBitmap(Point const&, Size const&, BitmapEx const&, BitmapEx&, basegfx::B2DPolyPolygon const&)
vcl::bitmap::GetMaskDIB(BitmapEx const&)
vcl::bitmap::get_unpremultiply_table()
vcl::bitmap::premultiply(unsigned char, unsigned char)
vcl::convertUnoBinaryDataContainer(com::sun::star::uno::Reference<com::sun::star::util::XBinaryDataContainer> const&)
vcl::filter::PDFDocument::RemoveSignature(unsigned long)
vcl::filter::PDFDocument::SetSignatureLine(std::vector<signed char, std::allocator<signed char> >&&)
vcl::filter::PDFDocument::SetSignaturePage(unsigned long)
vcl::filter::PDFTrailerElement::GetLocation() const
vcl::filter::PDFTrailerElement::Read(SvStream&)
vcl::font::FeatureDefinition::FeatureDefinition()
vcl::font::FeatureDefinition::FeatureDefinition(unsigned int, TranslateId, rtl::OUString)
vcl::font::FeatureDefinition::FeatureDefinition(unsigned int, TranslateId, std::vector<vcl::font::FeatureParameter, std::allocator<vcl::font::FeatureParameter> >)
vcl::font::FeatureDefinition::FeatureDefinition(unsigned int, rtl::OUString, vcl::font::FeatureParameterType, std::vector<vcl::font::FeatureParameter, std::allocator<vcl::font::FeatureParameter> >&&, int)
vcl::font::FeatureDefinition::getDefault() const
vcl::font::FeatureDefinition::operator bool() const
vcl::font::FeatureParameter::FeatureParameter(unsigned int, TranslateId)
vcl::font::FeatureParameter::FeatureParameter(unsigned int, rtl::OUString)
vcl::font::FeatureParser::getFeaturesMap() const
vcl::font::FontSelectPattern::hashCode() const
vcl::font::FontSelectPattern::operator==(vcl::font::FontSelectPattern const&) const
vcl::font::OpenTypeFeatureDefinitionList()
vcl::font::PhysicalFontCollection::SetFallbackHook(vcl::font::GlyphFallbackFontSubstitution*)
vcl::font::PhysicalFontFace::GetGlyphName(unsigned int, bool) const
vcl::font::PhysicalFontFace::GetName(vcl::font::NameID, LanguageTag const&) const
vcl::font::PhysicalFontFace::HasColorBitmaps() const
vcl::font::PhysicalFontFace::HasColorLayers() const
vcl::font::trimFontNameFeatures(rtl::OUString const&)
vcl::getTTCoverage(std::optional<std::bitset<128ul> >&, std::optional<std::bitset<64ul> >&, unsigned char const*, unsigned long)
vcl::graphic::MemoryManager::LinkStubReduceMemoryTimerHandler(void*, Timer*)
vcl::graphic::MemoryManager::MemoryManager()
vcl::graphic::MemoryManager::ReduceMemoryTimerHandler(Timer*)
vcl::graphic::MemoryManager::dumpState(rtl::OStringBuffer&)
vcl::graphic::MemoryManager::loopAndReduceMemory(std::unique_lock<std::mutex>&, bool)
vcl::graphic::MemoryManager::reduceAllAndNow()
vcl::graphic::MemoryManager::reduceMemory(std::unique_lock<std::mutex>&, bool)
vcl::graphic::MemoryManager::swappedIn(vcl::graphic::MemoryManaged*, long)
vcl::graphic::MemoryManager::swappedOut(vcl::graphic::MemoryManaged*, long)
vcl::importPdfVectorGraphicData(SvStream&, std::shared_ptr<VectorGraphicData>&)
vcl::lok::unregisterPollCallbacks()
vcl::test::OutputDeviceTestCommon::alignToCenter(tools::Rectangle, tools::Rectangle)
vcl::test::OutputDeviceTestCommon::checkAALines(Bitmap&)
vcl::test::OutputDeviceTestCommon::checkChecker(Bitmap&, int, int, int, int, std::vector<Color, std::allocator<Color> > const&)
vcl::test::OutputDeviceTestCommon::checkFilled(Bitmap&, tools::Rectangle, Color)
vcl::test::OutputDeviceTestCommon::checkIntersectingRecs(Bitmap&, int, Color)
vcl::test::OutputDeviceTestCommon::checkLines(Bitmap&)
vcl::test::OutputDeviceTestCommon::checkRectangle(Bitmap&)
vcl::test::OutputDeviceTestCommon::checkRectangle(Bitmap&, int, Color)
vcl::test::OutputDeviceTestCommon::checkRectangles(Bitmap&, std::vector<Color, std::allocator<Color> >&)
vcl::test::OutputDeviceTestCommon::createDiamondPoints(tools::Rectangle, int, Point&, Point&, Point&, Point&)
vcl::test::OutputDeviceTestCommon::createDropShapePolygon()
vcl::test::OutputDeviceTestCommon::createHalfEllipsePolygon()
vcl::test::OutputDeviceTestCommon::createHorizontalVerticalDiagonalLinePoints(tools::Rectangle, Point&, Point&, Point&, Point&, Point&, Point&)
vcl::test::OutputDeviceTestCommon::createOpenBezier()
vcl::test::OutputDeviceTestCommon::createOpenPolygon(tools::Rectangle const&, int)
vcl::test::OutputDeviceTestCommon::initialSetup(long, long, Color, bool, bool)
vcl::test::OutputDeviceTestLine::setupAALines()
vcl::test::OutputDeviceTestLine::setupLines()
vcl::test::OutputDeviceTestLine::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestLine::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPixel::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPixel::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyLine::setupAALines()
vcl::test::OutputDeviceTestPolyLine::setupLines()
vcl::test::OutputDeviceTestPolyLine::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyLine::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyLineB2D::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyLineB2D::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyPolygon::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyPolygon::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolyPolygonB2D::setupIntersectingRectangles()
vcl::test::OutputDeviceTestPolyPolygonB2D::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolyPolygonB2D::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestPolygon::setupAALines()
vcl::test::OutputDeviceTestPolygon::setupHalfEllipse(bool)
vcl::test::OutputDeviceTestPolygon::setupLines()
vcl::test::OutputDeviceTestPolygon::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestPolygon::setupRectangleOnSize4096()
vcl::test::OutputDeviceTestRect::setupRectangleOnSize1028()
vcl::test::OutputDeviceTestRect::setupRectangleOnSize4096()
vcl::text::ImplLayoutArgs::AddFallbackRun(int, int, bool)
vcl::text::ImplLayoutArgs::AddRun(int, int, bool)
vcl::text::ImplLayoutArgs::GetNextPos(int*, bool*)
vcl::text::ImplLayoutArgs::HasFallbackRun() const
vcl::text::ImplLayoutArgs::ResetPos()
vcl::text::ImplLayoutArgs::SetDXArray(double const*)
vcl::text::ImplLayoutArgs::SetKashidaArray(unsigned char const*)
vcl::text::ImplLayoutArgs::SetLayoutWidth(double)
vcl::text::ImplLayoutArgs::SetOrientation(o3tl::strong_int<short, FractionTag<10> >)
vcl::text::TextLayoutCache::Create(rtl::OUString const&)
vcl::unotools::b2DPointFromPoint(Point const&)
vcl::unotools::b2DSizeFromSize(Size const&)
vcl::unotools::b2DVectorFromSize(Size const&)
vcl::unotools::colorToDoubleSequence(Color const&, com::sun::star::uno::Reference<com::sun::star::rendering::XColorSpace> const&)
vcl::unotools::doubleSequenceToColor(com::sun::star::uno::Sequence<double> const&, com::sun::star::uno::Reference<com::sun::star::rendering::XColorSpace> const&)
vcl::unotools::pointFromB2DPoint(basegfx::B2DPoint const&)
vcl::unotools::pointFromB2IPoint(basegfx::B2IPoint const&)
vcl::unotools::pointFromIntegerPoint2D(com::sun::star::geometry::IntegerPoint2D const&)
vcl::unotools::rectangleFromB2IRectangle(basegfx::B2IRange const&)
vcl::unotools::rectangleFromIntegerRectangle2D(com::sun::star::geometry::IntegerRectangle2D const&)
vcl::unotools::size2DFromSize(Size const&)
vcl::unotools::sizeFromB2DSize(basegfx::B2DVector const&)
vcl::unotools::sizeFromIntegerSize2D(com::sun::star::geometry::IntegerSize2D const&)
vcl::unotools::sizeFromRealSize2D(com::sun::star::geometry::RealSize2D const&)
vcl::unotools::stdColorSpaceSequenceToColor(com::sun::star::uno::Sequence<double> const&)
vec_compress
vec_expand
verifyLink
verifyMDO
verifyPricer
verify_basis
verify_solution
verify_stability
weld::CustomWidgetController::DragBeginHdl(weld::DrawingArea&)
weld::DialogController::~DialogController()
weld::EntryFormatter::EntryFormatter(weld::Entry&)
weld::GetMinimumEditHeight()
weld::HexColorControl::GetColor() const
weld::HexColorControl::HexColorControl(std::unique_ptr<weld::Entry, std::default_delete<weld::Entry> >)
weld::HexColorControl::SetColor(Color)
weld::HexColorControl::~HexColorControl()
weld::LongCurrencyFormatter::LongCurrencyFormatter(weld::Entry&)
weld::LongCurrencyFormatter::LongCurrencyFormatter(weld::FormattedSpinButton&)
weld::MetricSpinButton::format_number(long) const
weld::MetricSpinButton::spin_button_input(int*)
weld::MetricSpinButton::spin_button_value_changed(weld::SpinButton&)
weld::PatternFormatter::PatternFormatter(weld::Entry&)
weld::PatternFormatter::~PatternFormatter()
weld::RemoveParentKeepChildren(weld::TreeView&, weld::TreeIter const&)
weld::ReorderingDropTarget::AcceptDrop(AcceptDropEvent const&)
weld::ReorderingDropTarget::ExecuteDrop(ExecuteDropEvent const&)
weld::TimeFormatter::TimeFormatter(weld::Entry&)
write_LP
write_MPS
write_XLI
write_basis
write_freeMPS
write_freemps
write_lp
write_lpcomment
write_lpex
write_lprow
write_mps
write_params
writerperfect::DirectoryStream::Impl::Impl(com::sun::star::uno::Reference<com::sun::star::ucb::XContent>)
writerperfect::DirectoryStream::getContent() const
writerperfect::DirectoryStream::isEnd()
writerperfect::DirectoryStream::read(unsigned long, unsigned long&)
writerperfect::DirectoryStream::seek(long, librevenge::RVNG_SEEK_TYPE)
writerperfect::DirectoryStream::tell()
writerperfect::WPXSvInputStream::read(unsigned long, unsigned long&)
writerperfect::WPXSvInputStream::seek(long, librevenge::RVNG_SEEK_TYPE)
xmloff::AnimationsExporter::AnimationsExporter(SvXMLExport&, com::sun::star::uno::Reference<com::sun::star::beans::XPropertySet> const&)
xmloff::AnimationsExporter::exportAnimations(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
xmloff::AnimationsExporter::prepare(com::sun::star::uno::Reference<com::sun::star::animations::XAnimationNode> const&)
xmlscript::createInputStream(signed char const*, int)
xmlscript::createOutputStream(std::vector<signed char, std::allocator<signed char> >*)
xmlsecurity::bigIntegerToNumericString(com::sun::star::uno::Sequence<signed char> const&)
xmlsecurity::numericStringToBigInteger(std::basic_string_view<char16_t, std::char_traits<char16_t> >)
yacc_read
yieldformessages
