/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4; fill-column: 100 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef INCLUDED_SVX_INC_SPACING_HRC
#define INCLUDED_SVX_INC_SPACING_HRC

#include <utility>

#define NC_(Context, String) reinterpret_cast<char const *>(Context "\004" u8##String)

struct measurement
{
    const char* key;
    int twips;
    int human;
};

// To translators: this is a listbox labelled by "Spacing:", inch units
const measurement RID_SVXSTRARY_SPACING_INCH[] =
{
    { NC_("RID_SVXSTRARY_SPACING_INCH", "None"),                   0, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Extra Small (1/16″)"),   91, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Small (1/8″)"),         181, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Small Medium (1/4″)"),  363, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Medium (3/8″)"),        539, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Medium Large (1/2″)"),  720, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Large (3/4″)"),        1077, 0 },
    { NC_("RID_SVXSTRARY_SPACING_INCH", "Extra Large (1″)"),    1440, 0 },
    { nullptr, 0, 0 }
};

// To translators: this is a listbox labelled by "Spacing:", cm units
const measurement RID_SVXSTRARY_SPACING_CM[] =
{
    { NC_("RID_SVXSTRARY_SPACING_CM", "None"),                0,   0 },
    // Extra Small (0.16 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Extra Small (%1)"),   91,  16 },
    // Small (0.32 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Small (%1)"),        181,  32 },
    // Small Medium (0.64 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Small Medium (%1)"), 363,  64 },
    // Medium (0.95 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Medium (%1)"),       539,  95 },
    // Medium Large (1.27 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Medium Large (%1)"), 720, 127 },
    // Large (1.9 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Large (%1)"),       1077, 190 },
    // Extra Large (2.54 cm)
    { NC_("RID_SVXSTRARY_SPACING_CM", "Extra Large (%1)"), 1440, 254 },
    { nullptr, 0, 0 }
};

// To translators: this is a listbox labelled by "Margins:", inch units
const measurement RID_SVXSTRARY_MARGINS_INCH[] =
{
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "None"),                   0, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Extra Small (1/16″)"),   91, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Small (1/8″)"),         181, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Small Medium (1/4″)"),  363, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Medium (3/8″)"),        539, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Medium Large (1/2″)"),  720, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Large (3/4″)"),        1077, 0 },
    { NC_("RID_SVXSTRARY_MARGINS_INCH", "Extra Large (1″)"),    1440, 0 },
    { nullptr, 0, 0 }
};

// To translators: this is a listbox labelled by "Margins:", cm units
const measurement RID_SVXSTRARY_MARGINS_CM[] =
{
    { NC_("RID_SVXSTRARY_MARGINS_CM", "None"),                0,   0 },
    // Extra Small (0.16 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Extra Small (%1)"),   91,  16 },
    // Small (0.32 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Small (%1)"),        181,  32 },
    // Small Medium (0.64 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Small Medium (%1)"), 363,  64 },
    // Medium (0.95 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Medium (%1)"),       539,  95 },
    // Medium Large (1.27 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Medium Large (%1)"), 720, 127 },
    // Large (1.9 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Large (%1)"),       1077, 190 },
    // Extra Large (2.54 cm)
    { NC_("RID_SVXSTRARY_MARGINS_CM", "Extra Large (%1)"), 1440, 254 },
    { nullptr, 0, 0 }
};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab cinoptions=b1,g0,N-s cinkeys+=0=break: */
