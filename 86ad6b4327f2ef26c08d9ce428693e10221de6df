{
  "comments": [
    {
      "key": {
        "uuid": "82ffbd29_06121274",
        "filename": "writerfilter/source/dmapper/DomainMapperTableHandler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-15T17:19:43Z",
      "side": 1,
      "message": "we can skip the loops:\n\nsize_t nRow \u003d m_aTableRanges.size();\nsize_t nCell \u003d m_aTableRanges[nRow].size();",
      "range": {
        "startLine": 1418,
        "startChar": 7,
        "endLine": 1421,
        "endChar": 13
      },
      "revId": "86ad6b4327f2ef26c08d9ce428693e10221de6df",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043d454c_c9f01289",
        "filename": "writerfilter/source/dmapper/DomainMapperTableHandler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-15T17:19:43Z",
      "side": 1,
      "message": "If this is really needed, likely it\u0027s not enough to modify the last paragraph of the last cell. (I was wrong, when I said that.) We need to modify last paragraphs of all cells of the last row.",
      "range": {
        "startLine": 1448,
        "startChar": 36,
        "endLine": 1448,
        "endChar": 147
      },
      "revId": "86ad6b4327f2ef26c08d9ce428693e10221de6df",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "538faa44_a898b917",
        "filename": "writerfilter/source/dmapper/DomainMapperTableHandler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1002855
      },
      "writtenOn": "2021-07-16T07:02:46Z",
      "side": 1,
      "message": "You are right. Previously I checked how it works, and when inserting a new row, each new cell gets the cell\u0027s properties which is above it in the previous row. I also noted that, if in a cell there are several paragraphs, the first ones\u0027 props will be copied into the new row\u0027s cells.\nSo I think we can skip the first loop, but the one which goes through the last row\u0027s cells still needed.",
      "parentUuid": "043d454c_c9f01289",
      "range": {
        "startLine": 1448,
        "startChar": 36,
        "endLine": 1448,
        "endChar": 147
      },
      "revId": "86ad6b4327f2ef26c08d9ce428693e10221de6df",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03ed5766_33ade35e",
        "filename": "writerfilter/source/dmapper/DomainMapperTableHandler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-16T10:02:11Z",
      "side": 1,
      "message": "In this case, we can jump out from the while loop after the first paragraph of the cells of the last rows.\n\nBut it would be fine to skip all paragraph collecting and Apply...() later.\nOther option is (to avoid the regression at inserting rows inside the tables) to move this to the Writer core: manual row insertion could made the logic to copy the full paragraph (except paragraph break) character formatting to the new line. Maybe it would be enough to copy as a direct character formatting. Let\u0027s talk about later. Otherwise this fix could be a good start for the optimization.",
      "parentUuid": "538faa44_a898b917",
      "range": {
        "startLine": 1448,
        "startChar": 36,
        "endLine": 1448,
        "endChar": 147
      },
      "revId": "86ad6b4327f2ef26c08d9ce428693e10221de6df",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}