{
  "comments": [
    {
      "key": {
        "uuid": "9c84cd0c_12c7842b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-21T06:10:09Z",
      "side": 1,
      "message": "It\u0027s interesting, that e.g. std::vector is able to have constexpr ctor taking length (in C++20) - so maybe it will be possible to also use some smart trick in C++20 to overcome this downside?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "e6dfaf9f44f9939abc338c83b3024108431d0f69",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea2ed7e5_ca08db84",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-06-21T10:15:59Z",
      "side": 1,
      "message": "That only works in C++20 for vector instances that do not escape the constexpr function.  (See \u003chttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0784r6.html\u003e \"P0784R6: More constexpr containers\": \"non-transient allocation was removed from the feature set.\")",
      "parentUuid": "9c84cd0c_12c7842b",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "e6dfaf9f44f9939abc338c83b3024108431d0f69",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e72a617_f78cbabb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-21T10:31:53Z",
      "side": 1,
      "message": "I must confess that I don\u0027t quite understand the restrictions applied on constexpr constructor of vector, and thus don\u0027t understand the problem. I need to work with this constexpr vector a little, to grasp it ðŸ˜Š\n\nThanks for the pointer!",
      "parentUuid": "ea2ed7e5_ca08db84",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "e6dfaf9f44f9939abc338c83b3024108431d0f69",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce8c17b2_a29db825",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-06-21T11:07:35Z",
      "side": 1,
      "message": "while the contrived\n\n  std::size_t f(std::size_t n) {\n    std::vector\u003cint\u003e v(n); // destroyed within f\n    for (std::size_t i \u003d 0; i !\u003d n; ++i) v[i] \u003d i;\n    return v[n - 1];\n  }\n  constexpr auto x \u003d f(10);\n\nis ok in C++20,\n\n  std::vector\u003cint\u003e f(std::size_t n) {\n    std::vector\u003cint\u003e v(n); // \"escapes\" f\n    for (std::size_t i \u003d 0; i !\u003d n; ++i) v[i] \u003d i;\n    return v;\n  }\n  constexpr auto x \u003d f(10);\n\nisn\u0027t",
      "parentUuid": "3e72a617_f78cbabb",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "e6dfaf9f44f9939abc338c83b3024108431d0f69",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd12cfe7_f321faaa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-21T11:11:29Z",
      "side": 1,
      "message": "But does this simply mean that the object must be destroyed in the same *scope* it was created? Which *hopefully* means that if it\u0027s created in the module scope, it is destroyed there, too, and no escapement to a place where its destruction is undefined would happen? (Just hoping :))",
      "parentUuid": "ce8c17b2_a29db825",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "e6dfaf9f44f9939abc338c83b3024108431d0f69",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "551b1e1a_a7ae663a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-06-21T11:38:30Z",
      "side": 1,
      "message": "ah, no, something like\n\n  constexpr std::vector\u003cint\u003e v(10);\n\nisn\u0027t legal either",
      "parentUuid": "bd12cfe7_f321faaa",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "e6dfaf9f44f9939abc338c83b3024108431d0f69",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}