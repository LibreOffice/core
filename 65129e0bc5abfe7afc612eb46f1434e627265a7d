{
  "comments": [
    {
      "key": {
        "uuid": "ef043559_cb3e76d6",
        "filename": "sc/source/core/data/drwlayer.cxx",
        "patchSetId": 5
      },
      "lineNbr": 2042,
      "author": {
        "id": 1000135
      },
      "writtenOn": "2021-02-05T09:25:15Z",
      "side": 1,
      "message": "looking at coverity report cid#1472783 Dereference after null check\n\nHere we unconditionally dereference pNoRotatedAnchor but on line 2019 we tested it against null, so it presumably can still be null here too. Should this line have a test against null, or maybe should there be after line 2026 a re-fetch of pNoRotatedAnchor \u003d GetNonRotatedObjData to update it ?",
      "revId": "65129e0bc5abfe7afc612eb46f1434e627265a7d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df442adb_13f31cf4",
        "filename": "sc/source/core/data/drwlayer.cxx",
        "patchSetId": 5
      },
      "lineNbr": 2042,
      "author": {
        "id": 1000447
      },
      "writtenOn": "2021-02-05T12:43:20Z",
      "side": 1,
      "message": "There should be a re-fetch after line 2026. Is pNoRotatedAnchor \u003d GetNonRotatedObjData(pObj) enough for coverity or need it be pNoRotatedAnchor \u003d GetNonRotatedObjData(pObj, true) to pass?",
      "parentUuid": "ef043559_cb3e76d6",
      "revId": "65129e0bc5abfe7afc612eb46f1434e627265a7d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11c82a1f_1598b4ac",
        "filename": "sc/source/core/data/drwlayer.cxx",
        "patchSetId": 5
      },
      "lineNbr": 2042,
      "author": {
        "id": 1000135
      },
      "writtenOn": "2021-02-05T12:57:07Z",
      "side": 1,
      "message": "I imagine\npNoRotatedAnchor \u003d GetNonRotatedObjData(pObj) is enough.\nIf it turns out not to be then surely\npNoRotatedAnchor \u003d GetNonRotatedObjData(pObj);\nassert(pNoRotatedAnchor);\nwill be sufficient to instruct coverity that it cannot be null",
      "parentUuid": "df442adb_13f31cf4",
      "revId": "65129e0bc5abfe7afc612eb46f1434e627265a7d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8c611b5_6c7d6713",
        "filename": "sc/source/core/data/drwlayer.cxx",
        "patchSetId": 5
      },
      "lineNbr": 2042,
      "author": {
        "id": 1000447
      },
      "writtenOn": "2021-02-05T13:19:28Z",
      "side": 1,
      "message": "Now in https://gerrit.libreoffice.org/c/core/+/110476",
      "parentUuid": "11c82a1f_1598b4ac",
      "revId": "65129e0bc5abfe7afc612eb46f1434e627265a7d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}