{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c0da94a_aa9cd638",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-02-15T07:31:16Z",
      "side": 1,
      "message": "I\u0027m going to split off the XWeak part of this from the SvxShape part, since the SvxShape part is more likely to introduce problems.",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "470b0090_010d5469",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-02-22T12:43:33Z",
      "side": 1,
      "message": "I managed to accidentally create a new version of this when stripping out the svx/ part, and consequently did not address the review comments.\n\nThose comments have addressed in the changed at:\n    https://gerrit.libreoffice.org/c/core/+/130349",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdde75de_35c649e8",
        "filename": "cppuhelper/source/gcc3.map",
        "patchSetId": 5
      },
      "lineNbr": 438,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "7.5 or 7.4?",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b95ed7_839f446d",
        "filename": "cppuhelper/source/weak.cxx",
        "patchSetId": 5
      },
      "lineNbr": 381,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "wouldn\u0027t it be better (and in line with its two callers) to give this ctor a narrow interface and require that xWeak is non-null?",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0cf749d_75f273e9",
        "filename": "cppuhelper/source/weak.cxx",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "* please don\u0027t blindly copy/paste poor uses of OSL_ASSERT\n* plesae don\u0027t blindly copy/paste try/catch code that is arguably not necessary in a noexcept(false) function (cf. 0c7c93ea6161fe8377bd67dbd1b09ecf0a722131 \"#98040# fixed exception spec\")",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef2b18d_ff895842",
        "filename": "cppuhelper/source/weak.cxx",
        "patchSetId": 5
      },
      "lineNbr": 460,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "would it be better to give this ctor a narrow interface and require that xWeak is non-null?",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e826ab6_3641f7cc",
        "filename": "cppuhelper/source/weak.cxx",
        "patchSetId": 5
      },
      "lineNbr": 532,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "would it be better to give this ctor a narrow interface and require that xWeak is non-null?",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d19cf298_7c0d7c84",
        "filename": "cppuhelper/source/weak.cxx",
        "patchSetId": 5
      },
      "lineNbr": 538,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "* please don\u0027t blindly copy/paste poor uses of OSL_ASSERT\n* plesae don\u0027t blindly copy/paste try/catch code that is arguably not necessary in a noexcept(false) function (cf. 0c7c93ea6161fe8377bd67dbd1b09ecf0a722131 \"#98040# fixed exception spec\")",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db0f1e7_894df1bc",
        "filename": "include/unotools/weakref.hxx",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "is this accidental?",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 8
      },
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1fb2040_939ce5b7",
        "filename": "include/unotools/weakref.hxx",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "any reason you created an additional LIBO_INTERNAL_ONLY case here vs. introducing the css::uno::Reference\u003ccss::uno::XWeak\u003e also for !LIBO_INTERNAL_ONLY in operator\u003d below?",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "995d80eb_8e94950c",
        "filename": "reportdesign/source/core/sdr/RptObject.cxx",
        "patchSetId": 5
      },
      "lineNbr": 460,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-14T12:43:57Z",
      "side": 1,
      "message": "here and elsewhere, _xComponent is known to actually implement SvxShape (e.g., it can\u0027t be a binary UNO proxy object)?",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9daf28da_48d48fb1",
        "filename": "reportdesign/source/core/sdr/RptObject.cxx",
        "patchSetId": 5
      },
      "lineNbr": 460,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-02-15T07:31:16Z",
      "side": 1,
      "message": "There are already a bunch of places that do stuff like:\n     SvxShape* pShape \u003d comphelper::getFromUnoTunnel\u003cSvxShape\u003e( xShape );\n    if (!pShape)\n    {\n        OSL_FAIL(\"could not add XShape to group shape!\");\n        return;\n    }\nso I can\u0027t see how that would be possible.",
      "parentUuid": "995d80eb_8e94950c",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96b572a7_e0ef7791",
        "filename": "reportdesign/source/core/sdr/RptObject.cxx",
        "patchSetId": 5
      },
      "lineNbr": 460,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-02-16T12:16:14Z",
      "side": 1,
      "message": "Sigh. I spoke too soon. Further investigation reveals that reportdesigner likes to override all sorts of svx functionality and it doesn\u0027t use SvxShape, but rather objects that implement XShape and forward functionality to the reportdesigner library",
      "parentUuid": "9daf28da_48d48fb1",
      "revId": "eb25a29259c1867d05929c55a0df2661e70e406b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}