{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a7b96c91_d0961bd1",
        "filename": "starmath/source/document.cxx",
        "patchSetId": 14
      },
      "lineNbr": 701,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2021-08-20T11:14:36Z",
      "side": 1,
      "message": "Isn\u0027t that changing the default export? I doubt old LO could handle the MathML import correct? And I guess it will convert on any Save op?\n\nAll this doesn\u0027t look like a good idea for LO interop. Am I missing something here?",
      "revId": "ad26a85d2ef77b8074a599ccea3108128e12f489",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fc61ea9_e77e17bb",
        "filename": "starmath/source/document.cxx",
        "patchSetId": 14
      },
      "lineNbr": 701,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2021-08-20T12:13:43Z",
      "side": 1,
      "message": "Allow me to tell you the whole history.\nStarmath isn\u0027t fully compatible with mathml.\nSo we are creating a \"starmath 6\" wich is compatible with it.\nIn order to do so we have introudced an SmMlElement type of node.\nAnd we have added a SmMLImport / SmMLExport.\nHohwever, given that starmath isn\u0027t fully compatible with mathml\nand the new version is, obviously the backguards compatibility fails.\nSo we can\u0027t update documents automatically (user manually).\nThere the need of the new SmMLExportWrapper / SmMLImportWrapper.\nThose will load and write the documents with they\u0027re specific version ( 5 or 6 ).\nSo this change won\u0027t have any effects on the old documents.\nThat functionality is blocked for the users by now.\nAnd if by interoperability you mean the other office editor\u0027s I heard that they use the mathml code in content.xml. So also is fine.\nI hope this answers your question.",
      "parentUuid": "a7b96c91_d0961bd1",
      "revId": "ad26a85d2ef77b8074a599ccea3108128e12f489",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33974a48_653d272d",
        "filename": "starmath/source/document.cxx",
        "patchSetId": 14
      },
      "lineNbr": 701,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2021-12-06T11:56:37Z",
      "side": 1,
      "message": "Somehow I didn\u0027t reply to your answer. I was just not sure what happens on save. I don\u0027t even know, if there is a policy, like \"don\u0027t auto-update old docs\". I remember Word did show some dialog to convert a document on open, an id the user opt-out keeps the old format. I would expect that too from LO.\n\nI read your whole comment, that currently a user can\u0027t even update (\"That functionality is blocked for the users by now.\"), so from that POV all fine.",
      "parentUuid": "6fc61ea9_e77e17bb",
      "revId": "ad26a85d2ef77b8074a599ccea3108128e12f489",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d57dc75a_9cdd6c44",
        "filename": "starmath/source/document.cxx",
        "patchSetId": 14
      },
      "lineNbr": 701,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2021-12-18T00:15:25Z",
      "side": 1,
      "message": "\u003e I doubt old LO could handle the MathML import correct?\n\nActually old LO could \"handle\" the new format. Old lo reads the mathml in content.xml and extracts a field called \"annotation\" that contains the formula source code. But if this one is missing parses the mathml. Althought it won\u0027t be perfect it\u0027s not total mess.\n\n\u003e I was just not sure what happens on save. I don\u0027t even know, if there is a policy, like \"don\u0027t auto-update old docs\". \n\nYes, it does not auto-update old docs.\nOld documents will also show the same old UI as if you where using old LO.\nI will make sure backguards compatibility is guaranteed.\nThe treatement of old documents does not change in any way.\n\n\u003e I remember Word did show some dialog to convert a document on open, an id the user opt-out keeps the old format. I would expect that too from LO.\n\nIn terms of dialogs, the project is far from that (it\u0027s still implementing the fundamental logic of the format). The user has to be given the option to update the format, but not forced (with the raw code, the result would be quite similar to see the formula on word, but using the old exporter to turn it into mathml and parsing it back should give good results; in the last years I have made contributions to the mathml to fine tune it).\n\nThis change does not include any functionality visible to the user.\nThis is a long term change and there won\u0027t be anything visible to the user any time soon.\n\nFurthermore, there are various test of load save, reload and compare to check that it does not mess up old documents. There should be on jenkins history a failled one that gave me a headache related to the OASIS stuff (it\u0027s previous to my era, so don\u0027t know what it is) an behaviour is mantained.\n\nIn conclusion this patch purpose is to open the door to the new format, but nothing else will change.",
      "parentUuid": "33974a48_653d272d",
      "revId": "ad26a85d2ef77b8074a599ccea3108128e12f489",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}