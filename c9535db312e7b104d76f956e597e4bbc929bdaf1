{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "995c036b_550ff222",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-22T12:07:08Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "c9535db312e7b104d76f956e597e4bbc929bdaf1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51bba2fb_783ca7a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-22T12:27:02Z",
      "side": 1,
      "message": "OTOH, it looks strange that there\u0027s an optional argument that is actually required - why not remove the optional instead? And if it must be string, why not make it string, not variant?",
      "revId": "c9535db312e7b104d76f956e597e4bbc929bdaf1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab123cf6_812b373a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-12-22T14:05:24Z",
      "side": 1,
      "message": "Access2Base is a library implementing an API.\nThat design choice has been made to absolutely avoid to have a Basic run-time error opening suddenly the Basic IDE and pointing to a line of code inside the library, ... except when due to a real internal error. Hence the _CheckArgument() method that will approve or not the passed argument.\nNB: ScriptForge has adopted the same principle.",
      "parentUuid": "51bba2fb_783ca7a4",
      "revId": "c9535db312e7b104d76f956e597e4bbc929bdaf1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7469329_8bd90f93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-22T14:22:58Z",
      "side": 1,
      "message": "Up to you (but this design makes debugging real pain - as seen in tdf#146281, where real failure happens somewhere between one _CheckArgument called from OpenDatabase, and another from (IIRC) runSQL, and we only get the error in those calls, when it\u0027s already late).\n\nI believe that shielding that way is not only wrong for *developers* like myself, but also for *users* who - in case of libraries - are also necessarily developers. But - again, up to you :-)",
      "revId": "c9535db312e7b104d76f956e597e4bbc929bdaf1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0c299ad_dfa584b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-12-22T14:53:30Z",
      "side": 1,
      "message": "\u003e Up to you (but this design makes debugging real pain - as seen in tdf#146281, where real failure happens somewhere between one _CheckArgument called from OpenDatabase, and another from (IIRC) runSQL, and we only get the error in those calls, when it\u0027s already late).\n\u003e \n\u003e I believe that shielding that way is not only wrong for *developers* like myself, but also for *users* who - in case of libraries - are also necessarily developers. But - again, up to you :-)\n\nI understand your viewpoint. It is correct as long as you\u0027re debugging the library. The user has to debug his own code and stick there.\nBTW when the provided argument is wrong, he receives a very detailed explanation about the error he made.",
      "parentUuid": "c7469329_8bd90f93",
      "revId": "c9535db312e7b104d76f956e597e4bbc929bdaf1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}