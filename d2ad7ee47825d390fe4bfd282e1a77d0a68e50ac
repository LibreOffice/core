{
  "comments": [
    {
      "key": {
        "uuid": "1ac06dbe_72aa461b",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2016-04-27T06:58:23Z",
      "side": 1,
      "message": "you\u0027re reading mbFinished without holding the mutex.\n\nIf it\u0027s not critical that it be read immediately, make it volatile, otherwise make std::atomic\u003cbool\u003e and then you can read and write it without holding a mutex.\n\nMore importantly, you\u0027re also reading maJobs without prote tion, which means the CPU could see inconsistent pointers and potentially crash.\nSee:\nhttp://stackoverflow.com/questions/11341834/stdlist-thread-safety\nfor a nice explanation.",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da7fb54a_e108662b",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1001124
      },
      "writtenOn": "2016-04-27T11:10:32Z",
      "side": 1,
      "message": "Hi Noel,\nYes, I know that and used mbFinished here by purpose (single mem read). The same with maJobs.empty(), AFAIK this is internal no real list access, but only a count \u003d\u003d 0 check (or even simpler). Despite that, I have secured the real list change/access below.\nIf you are sure that this is not sufficient in this case, please reply and I will change then. BTW: Tried on Win and Linux, both stable.",
      "parentUuid": "1ac06dbe_72aa461b",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da7fb54a_c12a827e",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2016-04-27T11:17:57Z",
      "side": 1,
      "message": "You are correct, your current code is most probably safe. Just be aware that it\u0027s not that robust against any refactoring that may occur in the future - anybody who changes code like this will have to reconsider all the paths through it to be sure they did the right thing.\nAnd relying on internal knowledge of std::list to be sure that your multi-threaded access is correct is also fairly advanced knowledge.",
      "parentUuid": "da7fb54a_e108662b",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da7fb54a_413752e3",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1001124
      },
      "writtenOn": "2016-04-27T11:21:32Z",
      "side": 1,
      "message": "Okay, I see. Do you know if I can make the whole list std::atomic\u003c...\u003e, that should make it clear...?",
      "parentUuid": "da7fb54a_c12a827e",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da7fb54a_81315aef",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2016-04-27T11:24:45Z",
      "side": 1,
      "message": "There are unfortunately no nice wrappers in the STL for complex data structures (that I am aware of), it is required to wrap their access in some other kind of lock.\n\nBTW I really like this work - should make a really nice difference on modern hardware!",
      "parentUuid": "da7fb54a_413752e3",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ac06dbe_52a74a4f",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 532,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2016-04-27T06:58:23Z",
      "side": 1,
      "message": "parallell-\u003eparallel",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da7fb54a_010e2a34",
        "filename": "drawinglayer/source/processor3d/zbufferprocessor3d.cxx",
        "patchSetId": 1
      },
      "lineNbr": 532,
      "author": {
        "id": 1001124
      },
      "writtenOn": "2016-04-27T11:10:32Z",
      "side": 1,
      "message": "Will do when you say I have to secure it above ;-)",
      "parentUuid": "1ac06dbe_52a74a4f",
      "revId": "d2ad7ee47825d390fe4bfd282e1a77d0a68e50ac",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}