{
  "comments": [
    {
      "key": {
        "uuid": "7bae8954_24159d9d",
        "filename": "basic/qa/cppunit/test_scanner.cxx",
        "patchSetId": 19
      },
      "lineNbr": 1031,
      "author": {
        "id": 1002857
      },
      "writtenOn": "2021-01-31T16:40:57Z",
      "side": 1,
      "message": "We have put 0 here as well and it works fine in the overflow condition. Do you think something else might be wrong in my code?",
      "range": {
        "startLine": 1031,
        "startChar": 0,
        "endLine": 1031,
        "endChar": 7
      },
      "revId": "904af5430e3d4f0e56552debd8ed26766fb593bb",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a3cc23_e7a78c7a",
        "filename": "basic/qa/cppunit/test_scanner.cxx",
        "patchSetId": 19
      },
      "lineNbr": 1054,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-01-31T09:27:00Z",
      "side": 1,
      "message": "Here you have to check again. You can also run the tests on your local machine using make basic.build and basic.check.",
      "range": {
        "startLine": 1046,
        "startChar": 1,
        "endLine": 1054,
        "endChar": 64
      },
      "revId": "904af5430e3d4f0e56552debd8ed26766fb593bb",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9c4c671_48aaad20",
        "filename": "basic/qa/cppunit/test_scanner.cxx",
        "patchSetId": 19
      },
      "lineNbr": 1054,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-01-31T21:42:55Z",
      "side": 1,
      "message": "Because you get an overflow the value is set to 0, then the test will work. If the value lies above 0xFFFFFFFF, i.e., \u0026H100000000\u0026, you will get an overflow, otherwise you get the value casted to either int16 and int32, if a suffix is present.\n\nYou could also insert a test case for hex min, i.e., H80000000\u0026 which should give -2147483648.",
      "parentUuid": "01a3cc23_e7a78c7a",
      "range": {
        "startLine": 1046,
        "startChar": 1,
        "endLine": 1054,
        "endChar": 64
      },
      "revId": "904af5430e3d4f0e56552debd8ed26766fb593bb",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf07f22b_8dbebdda",
        "filename": "basic/qa/cppunit/test_scanner.cxx",
        "patchSetId": 19
      },
      "lineNbr": 1072,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-01-31T21:42:55Z",
      "side": 1,
      "message": "This test is ok and there is no overflow. You can add a new test where you indeed get an overflow 0xFFFFFFFF, i.e., O40000000000\u0026.",
      "range": {
        "startLine": 1064,
        "startChar": 1,
        "endLine": 1072,
        "endChar": 64
      },
      "revId": "904af5430e3d4f0e56552debd8ed26766fb593bb",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6db9f9ec_81d8b143",
        "filename": "basic/qa/vba_tests/vartype.vb",
        "patchSetId": 19
      },
      "lineNbr": 65,
      "author": {
        "id": 1002002
      },
      "writtenOn": "2021-02-02T08:06:52Z",
      "side": 1,
      "message": "I don\u0027t think this primitive datatype is implemented yet inside LibreOffice VBA. Although I think libO VBA should support it nowadays.\n\nSee https://opengrok.libreoffice.org/xref/core/oovbaapi/ooo/vba/VbVarType.idl?r\u003d2b383d19",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 65,
        "endChar": 81
      },
      "revId": "904af5430e3d4f0e56552debd8ed26766fb593bb",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc0f3fd4_23d938f3",
        "filename": "basic/qa/vba_tests/vartype.vb",
        "patchSetId": 19
      },
      "lineNbr": 65,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-02-02T10:38:15Z",
      "side": 1,
      "message": "I think we could file another bug or enhancment request for the LongLong datatype, since it requires additional testing/programming, e.g., suffixes etc. atm are missing.",
      "parentUuid": "6db9f9ec_81d8b143",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 65,
        "endChar": 81
      },
      "revId": "904af5430e3d4f0e56552debd8ed26766fb593bb",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}