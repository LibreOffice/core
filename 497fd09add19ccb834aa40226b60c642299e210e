{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c7e59c0_84832814",
        "filename": "sw/source/core/inc/unoparaframeenum.hxx",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-08-25T06:19:18Z",
      "side": 1,
      "message": "It seems that everywhere this ctor is called, a new unique_ptr is created. So maybe it makes sense to pass a pointer to the format instead of unique_ptr to frame client, and construct the unique_ptr in place, this way eliding a creation and destruction of a temporary unique_ptr?",
      "revId": "497fd09add19ccb834aa40226b60c642299e210e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "895731b3_9a434c1a",
        "filename": "sw/source/core/inc/unoparaframeenum.hxx",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-08-25T07:32:09Z",
      "side": 1,
      "message": "That would work, except that sw::FrameClient is an object that cannot move around in memory, needs to stay put.",
      "parentUuid": "6c7e59c0_84832814",
      "revId": "497fd09add19ccb834aa40226b60c642299e210e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69ec8459_42a5b0a0",
        "filename": "sw/source/core/inc/unoparaframeenum.hxx",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-08-25T07:51:43Z",
      "side": 1,
      "message": "Hm, but that means that make_unique for it is actually a pessimization? Because it would allocate a single memory block for the object and the temporary unique ptr, and then immediately release the pointer, but would keep the block?",
      "parentUuid": "895731b3_9a434c1a",
      "revId": "497fd09add19ccb834aa40226b60c642299e210e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9050e697_7bcf2645",
        "filename": "sw/source/core/inc/unoparaframeenum.hxx",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-08-25T08:07:42Z",
      "side": 1,
      "message": "Hmmm, no, unique_ptr and make_unique don\u0027t need a control block, only shared_ptr does.\n\nunique_ptr is purely an ownership wrapper around a simple pointer, it doesn\u0027t have any more logic than that.",
      "parentUuid": "69ec8459_42a5b0a0",
      "revId": "497fd09add19ccb834aa40226b60c642299e210e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2f4deeb_f81cf5bb",
        "filename": "sw/source/core/inc/unoparaframeenum.hxx",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-08-25T08:34:22Z",
      "side": 1,
      "message": "Ah - thanks, and sorry for confusion. Then I don\u0027t understand what you meant in \"except that sw::FrameClient is an object that cannot move around in memory\" - I thought that calling std::make_unique in the ctor itself would do the job, not that we should have the sw::FrameClient by value in the struct.",
      "parentUuid": "9050e697_7bcf2645",
      "revId": "497fd09add19ccb834aa40226b60c642299e210e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a46cc47_d02b8b9f",
        "filename": "sw/source/core/inc/unoparaframeenum.hxx",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-08-25T09:15:50Z",
      "side": 1,
      "message": "Aha, the misunderstanding was on my side, yes, your first comment is correct, we could move the make_unique inside the constructor :-)",
      "parentUuid": "c2f4deeb_f81cf5bb",
      "revId": "497fd09add19ccb834aa40226b60c642299e210e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}