{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ea5110a_568558c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2021-11-23T14:49:47Z",
      "side": 1,
      "message": "Now I am reasonable satisfied with the resulting code. Short and -in combination with the Doxygen comment- easy to understand.",
      "revId": "6282104a63c2ad5447c531d57aadeb864cc41e52",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d21c18df_a6089508",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2021-11-25T14:48:36Z",
      "side": 1,
      "message": "In a PM Mike gave a comment on patchset 3, I insert the relevant part in this gerrit conversation:\n\n\u003e [...]\n\u003e However, they are not equivalent across the 0: as 0 is now at 0001-01-01, the following (for \u0027\u003dWEEKS(\"0001-01-02\";\"-0001-12-31\";1)\u0027) will give correct -1:\n\u003e\n\u003e\u003e return ( std::floor(nDays2 / 7.0) - std::floor(nDays1 / 7.0) ); \n\u003e where nDays2 is -1 (corresponding to \"-0001-12-31\"), and nDays1 is 1 (for \"0001-01-02\"): nDays2 / 7.0 gives -0.14; std::floor on it gives -1; nDays1 / 7.0 gives 0; std::floor on it gives 0; -1 -0 \u003d -1.\n\u003e\n\u003e But the following will give 0:\n\u003e\n\u003e\u003e return ( nDays2 / 7 - nDays1 / 7 );\n\u003e because both \u0027-1 / 7\u0027 and \u00271 / 7\u0027 give the same 0 (integer truncation rounds toward 0, changing\n\u003e direction around 0, unlike std::floor).\n\u003e [...]\n\nI can reproduce the given example.\nMike stated earlier that \"0001-01-01\" was a Monday which means that the result is incorrect indeed.\nHowever, Calc (release version as well as patched dev-version) shows Saturday when the date presentation format is \u0027NN YYYY-MM-DD\u0027, which means that the result is correct when \"0001-01-02\u0027 is a Sunday and \"-0001-12-31\" a Friday.\n\nWhen not crossing the 0 I can create incorrect results, e.g. \u003dWEEKS(\"-0001-12-17\";\"-0001-12-20\";1) returns 0, but should return 1 (based on the dow Calc shows).\nAccording to Calc, \"-0001-12-17\" is a Friday and \"-0001-12-20\" is a Monday, so we stepped from one week number to another.\n\nI am confused.\nI can only verify the results of WEEKS with mode 1 when I know the dow. With the two examples here, one is right the other isn\u0027t. But which one?\n\n\n\n\n",
      "revId": "6282104a63c2ad5447c531d57aadeb864cc41e52",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeca7fd2_a00ee580",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2021-11-25T15:03:11Z",
      "side": 1,
      "message": "I have a suggestion:\nDATE() doesn\u0027t accept year values below 1583, which AFAIK is the year from which we know for certain that the date and dow is correct.\nI  propose to apply the same validation as DATE() for WEEKS().\nCertainly for mode 1, it is not realistic to think in ISO9601 weeks for date before 1583.",
      "revId": "6282104a63c2ad5447c531d57aadeb864cc41e52",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a223d21_4e8f7abf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-11-25T15:06:46Z",
      "side": 1,
      "message": "Thanks!\n\nIf I understand correctly, you are confused that 0001-01-01 is not Monday in Calc, right?\n\nThat is because the 0001-01-01 we are talking about *here* (and that is used in the scaddins/source/datefunc/datefunc.cxx) is the proleptic Gregorian, while what Calc uses for pre-Gregorian times is Julian - see tdf#144699 (and bugs linked from there). There\u0027s no \"one is right and one is not\", only different calendars used - so Gregorian\u0027s 0001-01-01 is Julian\u0027s 0001-01-03; and Julian\u0027s 0001-01-01 is Gregorian\u0027s -0001-12-30 (Saturday).\n\nSo given all that, checks of week crossing \"Gregorian date 0\" (0001-01-01) should use e.g. Julian\u0027s (current Calc\u0027s) 0001-01-02 and 0001-01-04.\n\nRegarding \u0027\u003dWEEKS(\"-0001-12-17\";\"-0001-12-20\";1)\u0027 - that is another way to see how negatives may hit us - of course, Mondays give whole (negative) numbers when divided by 7; and previous week\u0027s Tue till Sun also will get rounded to that number when using integer calculations (because integer division rounds numbers toward zero).\n\nSo I still suppose that my suggestion of using floating-point math and floor() would be the cleanest solution, not requiring two alternative branches of code here.",
      "parentUuid": "d21c18df_a6089508",
      "revId": "6282104a63c2ad5447c531d57aadeb864cc41e52",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b3e4eb7_6fda2682",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-11-25T15:11:37Z",
      "side": 1,
      "message": "I do not think it\u0027s a good solution - in view of the cited tdf#144699, which would obsolete the reason why DATE does not accept those dates. Additionally, there is (currently) a good reason for DATE to reject those dates - because it would require to reject some combination of arguments (for the days skipped in the Gregorian introduction), or - if using Gregorian - would result in dates displayed differently. There\u0027s no such reason for WEEKS: it takes well-defined dates, and it *is* able to detect their weekdays and week differences unambiguously.",
      "parentUuid": "aeca7fd2_a00ee580",
      "revId": "6282104a63c2ad5447c531d57aadeb864cc41e52",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}