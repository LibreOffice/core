{
  "comments": [
    {
      "key": {
        "uuid": "ff5d4b2f_bf472bbd",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9763,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-15T22:48:02Z",
      "side": 1,
      "message": "To me it doesn\u0027t make sense to repeat the function definition here.",
      "range": {
        "startLine": 9760,
        "startChar": 0,
        "endLine": 9763,
        "endChar": 125
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_510dc38e",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9763,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2018-11-16T16:52:03Z",
      "side": 1,
      "message": "Inside this block there are declarations of the variables that are used later in this description.",
      "parentUuid": "ff5d4b2f_bf472bbd",
      "range": {
        "startLine": 9760,
        "startChar": 0,
        "endLine": 9763,
        "endChar": 125
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_5f2f0ff6",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9782,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-15T22:48:02Z",
      "side": 1,
      "message": "Should be\n\n const ScLookupCache\u0026 rCache, const ScLookupCache::QueryCriteria\u0026 rCriteria, ...",
      "range": {
        "startLine": 9782,
        "startChar": 48,
        "endLine": 9782,
        "endChar": 110
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_31124fb3",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9782,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2018-11-16T16:52:03Z",
      "side": 1,
      "message": "Thank you. Good point. Added in latest patch.",
      "parentUuid": "ff5d4b2f_5f2f0ff6",
      "range": {
        "startLine": 9782,
        "startChar": 48,
        "endLine": 9782,
        "endChar": 110
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_bff28b99",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9796,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-15T22:48:02Z",
      "side": 1,
      "message": "0 can be a valid row result. This ScLookupCache::lookup() returns -1 if not found, the not-found conditions above should return -1 as well.",
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_11274b15",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9796,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2018-11-16T16:52:03Z",
      "side": 1,
      "message": "Thank you, good point - resolved in latest patch.",
      "parentUuid": "ff5d4b2f_bff28b99",
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_9f4467b9",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9829,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-15T22:48:02Z",
      "side": 1,
      "message": "Should be \u003e\u003d 0 then.",
      "range": {
        "startLine": 9829,
        "startChar": 45,
        "endLine": 9829,
        "endChar": 48
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_f1239704",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9829,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2018-11-16T16:52:03Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "ff5d4b2f_9f4467b9",
      "range": {
        "startLine": 9829,
        "startChar": 45,
        "endLine": 9829,
        "endChar": 48
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_7f13f3b9",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9836,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-15T22:48:02Z",
      "side": 1,
      "message": "Why do another lookup if lcl_getPrevRowWithEmptyValueLookup() already returned a valid row? This should just set o_rResultPos and eCacheResult.",
      "range": {
        "startLine": 9836,
        "startChar": 0,
        "endLine": 9836,
        "endChar": 82
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_717d67e6",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 6
      },
      "lineNbr": 9836,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2018-11-16T16:52:03Z",
      "side": 1,
      "message": "lcl_getPrevRowWithEmptyValueLookup() returns just the row index for which we have cached lookup query. To get o_rResultPos/eCacheResult we still new to call lookup() method. \n\nI didn\u0027t mix both checks in one method, keeping all methods with one single job inside.\n\nYes, we could somehow speed up initialization of the o_rResultPos/eCacheResult pair here, but in this case we will need to re-implement logic of the lookup() method somewhere else (outside of the lookup() method). This will lead to source code duplicate on logic level and could cause in future problems if someone will change the lookup() method.",
      "parentUuid": "ff5d4b2f_7f13f3b9",
      "range": {
        "startLine": 9836,
        "startChar": 0,
        "endLine": 9836,
        "endChar": 82
      },
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_bf204bf9",
        "filename": "sc/source/core/tool/lookupcache.cxx",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-11-15T22:48:02Z",
      "side": 1,
      "message": "I think instead of having that fuzzy handling in ScInterpreter::LookupQueryWithCache() and here iterating through the entire map for each empty lookup and if successful doing yet another lookup(ScAddress\u0026,...) in ScInterpreter::LookupQueryWithCache(), the result address for an empty lookup should be stored (in insert() below) as a separate element not in this map but a dedicated \"empty query\" map that can be immediately returned in the already existing lookup() function if rCriteria.isEmptyStringQuery().",
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_d14e53c0",
        "filename": "sc/source/core/tool/lookupcache.cxx",
        "patchSetId": 6
      },
      "lineNbr": 98,
      "author": {
        "id": 1001119
      },
      "writtenOn": "2018-11-16T16:52:03Z",
      "side": 1,
      "message": "Yes. Theoretically, it will be nice to have some additional speed up here. But we should take into account:\n* Generally calc tables contain data. Tables without data are mostly useless.\n* Situation when we have empty cells with used formulars could be treated as exceptional cases of usage inside calc documents.\n\n\nThe cost of handling an additional map here (for queries with empty lookup value) will also slow down the general functionality of the cache for regular usage. The final solution could be rather complex. And maintenance of two maps could lead in future to some problems. I will prefer to keep only one map in the way as it is. \n\nMy current tests show, that this code works pretty fast.",
      "parentUuid": "ff5d4b2f_bf204bf9",
      "revId": "99624661367a9cf517ed6ba3ea66dbc258abaaa8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}