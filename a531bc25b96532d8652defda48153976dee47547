{
  "comments": [
    {
      "key": {
        "uuid": "392f3a53_cf691783",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2785,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "to avoid repetition for this somewhat temporary (until std::source_location is fully available for LIBO_INTERNAL_ONLY) change, only emit the below definition of LIBO_USER_SOURCE_LOCATION and #include \u003cexperimental/source_location\u003e in com/sun/star/uno/Exception.hdl?",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42b2a698_b54ba442",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2785,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "I meant to emit this only in Exception.hdl, but it probably doesn\u0027t matter too much either way (it looks a bit fishy to keep redefining LIBO_USE_SOURCE_LOCATION, even though to the same value)",
      "parentUuid": "392f3a53_cf691783",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ff6abe3_72de9e87",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2785,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T08:19:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42b2a698_b54ba442",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7f38658_2104bfdf",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2786,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "* I\u0027m puzzled that the unconditional use of __GNUC__ and __clang_major__ identifiers does not cause any warnings about unknown identifiers being replaced with 0 in preproc directives\n\n* for GCC, LIBO_INTERNAL_ONLY implies __GNUC__ \u003e\u003d 7",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17b05f63_210df577",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2786,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7f38658_2104bfdf",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db368843_c384396a",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2787,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "why define it as 1?",
      "range": {
        "startLine": 2787,
        "startChar": 57,
        "endLine": 2787,
        "endChar": 58
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88e593f8_5447a253",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2787,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db368843_c384396a",
      "range": {
        "startLine": 2787,
        "startChar": 57,
        "endLine": 2787,
        "endChar": 58
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49219432_92a283b0",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2825,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "so this block would go (see above)",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea59aeb_6371bbab",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2825,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49219432_92a283b0",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0be95926_49acde0f",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2828,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "trailing whitespace",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07bc298f_a06c5135",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2828,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0be95926_49acde0f",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "352683f2_ba8fe773",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2832,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "C++20 states that the \"intent of source_location is to have a small size and efficient copying\", and the examples in the standard also use it by value, so I wouldn\u0027t bother taking it by const lvalue-ref here",
      "range": {
        "startLine": 2832,
        "startChar": 56,
        "endLine": 2832,
        "endChar": 57
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ae08b8_3aa8fd28",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2832,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "352683f2_ba8fe773",
      "range": {
        "startLine": 2832,
        "startChar": 56,
        "endLine": 2832,
        "endChar": 57
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd2f89c0_0b6fea47",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2868,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "* o3tl::runtimeToOUString is the preferred way to convert such a system-provided NTBS into an OUString (and there\u0027s no explicit include of \u003cstring.h\u003e for strlen here, anyway)\n\n* should the addition be separated from any existing content of Message?",
      "range": {
        "startLine": 2868,
        "startChar": 31,
        "endLine": 2868,
        "endChar": 76
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a418bedb_780f1112",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2868,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd2f89c0_0b6fea47",
      "range": {
        "startLine": 2868,
        "startChar": 31,
        "endLine": 2868,
        "endChar": 76
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34a30405_fe70d532",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2920,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "see above",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e98dd2e2_e5d429b3",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 2920,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34a30405_fe70d532",
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64fe9486_fa720eff",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 3150,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:05:00Z",
      "side": 1,
      "message": "what are \"fields\"?",
      "range": {
        "startLine": 3150,
        "startChar": 7,
        "endLine": 3150,
        "endChar": 13
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d90729be_d0222872",
        "filename": "codemaker/source/cppumaker/cpputype.cxx",
        "patchSetId": 15
      },
      "lineNbr": 3150,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-05-15T07:41:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64fe9486_fa720eff",
      "range": {
        "startLine": 3150,
        "startChar": 7,
        "endLine": 3150,
        "endChar": 13
      },
      "revId": "a531bc25b96532d8652defda48153976dee47547",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}