{
  "comments": [
    {
      "key": {
        "uuid": "dab17558_a0990422",
        "filename": "i18npool/source/search/textsearch.cxx",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2015-11-25T22:38:30Z",
      "side": 1,
      "message": "This will match the \"0\" from non-matched result ({0, -1, 0}); and thus will translate to something like {0, -1, 10} when the chunk we process is somewhere in the middle of a larger string, won\u0027t it?",
      "revId": "c5fb500f403b0c0ed3d7f3a8821e33321d7ab74d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_6be41d3b",
        "filename": "i18npool/source/search/textsearch.cxx",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-11-26T12:11:47Z",
      "side": 1,
      "message": "I don\u0027t follow you. Could you give a concrete example of what exactly you have in mind?",
      "parentUuid": "dab17558_a0990422",
      "revId": "c5fb500f403b0c0ed3d7f3a8821e33321d7ab74d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_6b69bd8b",
        "filename": "i18npool/source/search/textsearch.cxx",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2015-11-26T12:24:09Z",
      "side": 1,
      "message": "I\u0027m not sure if that is a problem, just thinking.\nA string:\nThis is some string.\nSearch for \"(as)|(is)\", starting from pos 3\nThe substring looks like \"s is some string.\"\npos 0 here translates to pos 3 in original\nthe search returns {0,-1,0}{2,2,4}\nwhen processing first tuple, it will have -1 as nStart, and as it\u0027s \u003c0, it will stay -1.\nThen it will have 0 as nStop. It will be handled here and translated to offset[0], thus becoming 3.\nSo, finally for not-found group we have {0,-1,3}. Won\u0027t any code be confused by that?\nSecond tuple will become {2,5,7} (that\u0027s OK, the found \"is\" starts at pos.5 of original string, and pos.7 is one past it.)",
      "parentUuid": "dab17558_6be41d3b",
      "revId": "c5fb500f403b0c0ed3d7f3a8821e33321d7ab74d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_2b921558",
        "filename": "i18npool/source/search/textsearch.cxx",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-11-26T19:33:37Z",
      "side": 1,
      "message": "Actually the regex search in this case returns startOffset[]\u003d{3,-1,3} and endOffset[]\u003d{5,-1,5} instead because the (is) group matched on offset 3 (3 instead of 2 because \"Xs is some string.\" because \"X\" was preppended and newStartPos\u003d1). This then is correctly mapped back to {5,-1,5},{7,-1,7} for the original \"This is some string.\"\n\nI don\u0027t know why you think the regex result would be {0,-1,0}{2,2,4}, even if \"X\" was not prepended the result would be {4,-1,4},{6,-1,6} instead.\n\nNote that for both startOffset and endOffset the first element is group 0, the entire match\u0027s offsets, the second element is group 1, the first group\u0027s match offsets, the third element is group 2, the second group\u0027s match offsets. \n\n{0,-1,0}{2,2,4} does not make sense, specifically for the first group if start\u003d-1 (not found) then end can not be 2, also why the second group should match from 0 to 4 is beyond my scope ;-) and then why the entire match should be from 0 to 2 as well..",
      "parentUuid": "dab17558_6b69bd8b",
      "revId": "c5fb500f403b0c0ed3d7f3a8821e33321d7ab74d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}