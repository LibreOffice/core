{
  "comments": [
    {
      "key": {
        "uuid": "bf659307_03ebf1af",
        "filename": "vcl/inc/fontinstance.hxx",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-25T10:45:58Z",
      "side": 1,
      "message": "Shouldn\u0027t this be made pure virtual (\u003d0)? Because the change seemingly makes it heavily dependent on the implementation on the method; and e.g. vcl::pdf::BuildinFontInstance doesn\u0027t override the method, which should make it assert on calling this... Or remove the assert from here, if hb_font_get_glyph_extents correctly handles nullptr and returns false?",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 74
      },
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_63dbcd1a",
        "filename": "vcl/inc/fontinstance.hxx",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-25T11:24:48Z",
      "side": 1,
      "message": "It seems that I\u0027m wrong, and the mentioned BuildinFontInstance shouldn\u0027t call that method; in that case, current status makes perfect sense to prevent wrong use... sorry for the noise.",
      "parentUuid": "bf659307_03ebf1af",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 74
      },
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_0304517a",
        "filename": "vcl/inc/fontinstance.hxx",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-08-25T11:31:49Z",
      "side": 1,
      "message": "Want to add a comment? If you were wondering, maybe someone else will too?",
      "parentUuid": "bf659307_63dbcd1a",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 74
      },
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_432fa9f5",
        "filename": "vcl/inc/fontinstance.hxx",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-25T11:33:46Z",
      "side": 1,
      "message": "I *think* that I see why it\u0027s OK in the current status; still I know little in the matter, so I\u0027m afraid of adding potentially misleading comments :-) - so no, at least not me.",
      "parentUuid": "bf659307_0304517a",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 74
      },
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_a32805e2",
        "filename": "vcl/inc/fontinstance.hxx",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-08-25T11:59:07Z",
      "side": 1,
      "message": "Actually I think you\u0027re right. BuildinFontInstance doesn\u0027t have any hb_font backing, as these fonts don\u0027t exist inside LO, just in the PDF reader. So now GetGlyphBoundRect will assert in the GetHbFont() call. I guess the fix would be to add a\n\nhb_font_t* BuildinFontInstance::ImplInitHbFont() override { return nullptr; }\n\nI refactored this code two years ago, but I have no idea left, why I chose this kind of implementation back then.",
      "parentUuid": "bf659307_432fa9f5",
      "range": {
        "startLine": 89,
        "startChar": 40,
        "endLine": 89,
        "endChar": 74
      },
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_c33ad932",
        "filename": "vcl/inc/fontinstance.hxx",
        "patchSetId": 11
      },
      "lineNbr": 108,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-08-25T11:59:07Z",
      "side": 1,
      "message": "This is the only call side of this function.",
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_c323b904",
        "filename": "vcl/source/font/fontinstance.cxx",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-08-25T11:59:07Z",
      "side": 1,
      "message": "This will now assert for BuildinFontInstance AKA PDF-reader buildin fonts, which aren\u0027t hb_font backed.",
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_a6afb3e1",
        "filename": "vcl/source/font/fontinstance.cxx",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1000381
      },
      "writtenOn": "2019-08-26T03:05:32Z",
      "side": 1,
      "message": "Do we ever call GetGlyphBoundRect for these fonts? It apparently never returned anything, so I don’t see how it would have been used for anything so assert is good here as it probably masks a bug somewhere. We need to check for nullptr here though as hb_font_get_glyph_extents() doesn’t check for it, or make GetHbFont() return hb_font_get_empty() (a safe singleton object) instead of nullptr.",
      "parentUuid": "bf659307_c323b904",
      "revId": "502d73cda8fa1f482634bb6435fd1440757fdad9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}