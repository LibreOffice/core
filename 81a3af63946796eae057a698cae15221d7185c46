{
  "comments": [
    {
      "key": {
        "uuid": "9a30ddce_25484e2d",
        "filename": "include/xmloff/xmlimp.hxx",
        "patchSetId": 4
      },
      "lineNbr": 386,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2018-05-17T14:58:38Z",
      "side": 1,
      "message": "i suspect this function has the same bug but it happens not to have caused a visible problem yet?",
      "revId": "81a3af63946796eae057a698cae15221d7185c46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a30ddce_6569668b",
        "filename": "include/xmloff/xmlimp.hxx",
        "patchSetId": 4
      },
      "lineNbr": 386,
      "author": {
        "id": 1000135
      },
      "writtenOn": "2018-05-17T15:19:13Z",
      "side": 1,
      "message": "The hackery in my patch I guess is equivalent to making getNamespacePrefixFromToken call getNamespaceURIFromToken and then use the importer map on that uri to get the desired prefix. So... from my (uncertain) perspective the uris are good, its just the mapping back to the prefix that needs to be fixed ?",
      "parentUuid": "9a30ddce_25484e2d",
      "revId": "81a3af63946796eae057a698cae15221d7185c46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a30ddce_451c6212",
        "filename": "include/xmloff/xmlimp.hxx",
        "patchSetId": 4
      },
      "lineNbr": 386,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2018-05-17T15:44:01Z",
      "side": 1,
      "message": "ah, you are right, the mapping between tokens and *known* namespace URIs should be static.",
      "parentUuid": "9a30ddce_6569668b",
      "revId": "81a3af63946796eae057a698cae15221d7185c46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a30ddce_455702ce",
        "filename": "include/xmloff/xmlimp.hxx",
        "patchSetId": 4
      },
      "lineNbr": 387,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2018-05-17T14:58:38Z",
      "side": 1,
      "message": "this one OTOH is called only once and ... in a rather bizarre way, quite possibly it\u0027s a work-around for the missing use of the actual namespace map in the other functions; doesn\u0027t make sense to pass this function a map.",
      "revId": "81a3af63946796eae057a698cae15221d7185c46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a30ddce_655246df",
        "filename": "unoxml/source/dom/saxbuilder.cxx",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2018-05-17T14:58:38Z",
      "side": 1,
      "message": "uh... this looks rather unfixable unfortunately... why does a generic SAX component depend on xmloff code in the first place? that looks quite wrong.",
      "revId": "81a3af63946796eae057a698cae15221d7185c46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a30ddce_6517a6ed",
        "filename": "unoxml/source/dom/saxbuilder.cxx",
        "patchSetId": 4
      },
      "lineNbr": 213,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2018-05-17T15:44:01Z",
      "side": 1,
      "message": "i\u0027m hoping that this isn\u0027t actually called and everything goes through startUnknownElement, but no time to investigate now...",
      "parentUuid": "9a30ddce_655246df",
      "revId": "81a3af63946796eae057a698cae15221d7185c46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}