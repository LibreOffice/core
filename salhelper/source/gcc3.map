#
# This file is part of the LibreOffice project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# This file incorporates work covered by the following license notice:
#
#   Licensed to the Apache Software Foundation (ASF) under one or more
#   contributor license agreements. See the NOTICE file distributed
#   with this work for additional information regarding copyright
#   ownership. The ASF licenses this file to you under the Apache
#   License, Version 2.0 (the "License"); you may not use this file
#   except in compliance with the License. You may obtain a copy of
#   the License at http://www.apache.org/licenses/LICENSE-2.0 .
#
UDK_3_0_0 { # should have been UDK_3.0
    global:
    _ZTI*; _ZTS*; # weak RTTI symbols for C++ exceptions

    _ZN9salhelper18ORealDynamicLoader11newInstanceEPPS0_RKN3rtl8OUStringES6_;
    _ZN9salhelper18ORealDynamicLoader7acquireEv;
    _ZN9salhelper18ORealDynamicLoader7releaseEv;
    _ZN9salhelper18ORealDynamicLoaderC1EPPS0_RKN3rtl8OUStringES6_PvS7_;
    _ZN9salhelper18ORealDynamicLoaderC2EPPS0_RKN3rtl8OUStringES6_PvS7_;
    _ZN9salhelper18ORealDynamicLoaderD0Ev;
    _ZN9salhelper18ORealDynamicLoaderD1Ev;
    _ZN9salhelper18ORealDynamicLoaderD2Ev;
    _ZN9salhelper21SimpleReferenceObjectD0Ev;
    _ZN9salhelper21SimpleReferenceObjectD1Ev;
    _ZN9salhelper21SimpleReferenceObjectD2Ev;
    _ZN9salhelper21SimpleReferenceObjectdlEPv;

    # Introducing a question mark at the end because of
    # marginal type discrepancy there is a difference in the
    # mangled name between Linux and Mac OS X, see #i69351#
    _ZN9salhelper21SimpleReferenceObjectnwE?; # salhelper::SimpleReferenceObject::operator new (std::size_t)

    _ZNK9salhelper18ORealDynamicLoader6getApiEv;
    # _ZTIN9salhelper18ORealDynamicLoaderE;
    # _ZTSN9salhelper18ORealDynamicLoaderE;
    _ZTVN9salhelper18ORealDynamicLoaderE;
    # _ZTIN9salhelper21SimpleReferenceObjectE;
    # _ZTSN9salhelper21SimpleReferenceObjectE;
    _ZTVN9salhelper21SimpleReferenceObjectE;

    local:
        *;
};

UDK_3.1 {
    global:
        _ZN9salhelper21SimpleReferenceObjectdlEPvRKSt9nothrow_t;

    # Introducing a wildcard right in the middle because due to
    # marginal type discrepancy there is a difference in the
    # mangled name between Linux and Mac OS X see #i69351#
    _ZN9salhelper21SimpleReferenceObjectnwE?RKSt9nothrow_t; # salhelper::SimpleReferenceObject::operator new (std::size_t, std::nothrow_t const&)

        _ZN9salhelper9ConditionC1ERN3osl5MutexE;
        _ZN9salhelper9ConditionC2ERN3osl5MutexE;
        _ZN9salhelper9ConditionD0Ev;
        _ZN9salhelper9ConditionD1Ev;
        _ZN9salhelper9ConditionD2Ev;
        # _ZTIN9salhelper9ConditionE;
        # _ZTIS9salhelper9ConditionE;

        _ZN9salhelper17ConditionModifierC1ERNS_9ConditionE;
        _ZN9salhelper17ConditionModifierC2ERNS_9ConditionE;
        _ZN9salhelper17ConditionModifierD1Ev;
        _ZN9salhelper17ConditionModifierD2Ev;

        _ZN9salhelper15ConditionWaiterC1ERNS_9ConditionE;
        _ZN9salhelper15ConditionWaiterC1ERNS_9ConditionE?;
        _ZN9salhelper15ConditionWaiterC2ERNS_9ConditionE;
        _ZN9salhelper15ConditionWaiterC2ERNS_9ConditionE?;
        _ZN9salhelper15ConditionWaiterD1Ev;
        _ZN9salhelper15ConditionWaiterD2Ev;

        _ZN9salhelper15ConditionWaiter8timedoutaSERKS1_;
        _ZN9salhelper15ConditionWaiter8timedoutC1ERKS1_;
        _ZN9salhelper15ConditionWaiter8timedoutC1Ev;
        _ZN9salhelper15ConditionWaiter8timedoutC2ERKS1_;
        _ZN9salhelper15ConditionWaiter8timedoutC2Ev;
        _ZN9salhelper15ConditionWaiter8timedoutD0Ev;
        _ZN9salhelper15ConditionWaiter8timedoutD1Ev;
        _ZN9salhelper15ConditionWaiter8timedoutD2Ev;
        # _ZTIN9salhelper15ConditionWaiter8timedoutE;
        # _ZTSN9salhelper15ConditionWaiter8timedoutE;


    _ZN9salhelper5TimerC1ERKNS_10TTimeValueE;
    _ZN9salhelper5TimerC1ERKNS_10TTimeValueES3_;
    _ZN9salhelper5TimerC1Ev;
    _ZN9salhelper5TimerC2ERKNS_10TTimeValueE;
    _ZN9salhelper5TimerC2ERKNS_10TTimeValueES3_;
    _ZN9salhelper5TimerC2Ev;
    _ZN9salhelper5TimerD0Ev;
    _ZN9salhelper5TimerD1Ev;
    _ZN9salhelper5TimerD2Ev;
    _ZN9salhelper5Timer5startEv;
    _ZN9salhelper5Timer4stopEv;
    _ZNK9salhelper5Timer9isTickingEv;
    _ZNK9salhelper5Timer9isExpiredEv;
    _ZNK9salhelper5Timer13expiresBeforeEPKS0_;
    _ZN9salhelper5Timer15setAbsoluteTimeERKNS_10TTimeValueE;
    _ZN9salhelper5Timer16setRemainingTimeERKNS_10TTimeValueE;
    _ZN9salhelper5Timer16setRemainingTimeERKNS_10TTimeValueES3_;
    _ZN9salhelper5Timer7addTimeERKNS_10TTimeValueE;
    _ZNK9salhelper5Timer16getRemainingTimeEv;


} UDK_3_0_0;

LIBO_UDK_3.6 { # symbols available in >= LibO 3.6
    global:
        _ZN9salhelper6Thread12onTerminatedEv;
            # salhelper::Thread::onTerminated()
        _ZN9salhelper6Thread3runEv; # salhelper::Thread::run()
        _ZN9salhelper6Thread6launchEv; # salhelper::Thread::launch()
        _ZN9salhelper6ThreadC1EPKc; # salhelper::Thread::Thread(char const*)
        _ZN9salhelper6ThreadC2EPKc; # salhelper::Thread::Thread(char const*)
        _ZN9salhelper6ThreadD0Ev; # salhelper::Thread::~Thread()
        _ZN9salhelper6ThreadD1Ev; # salhelper::Thread::~Thread()
        _ZN9salhelper6ThreadD2Ev; # salhelper::Thread::~Thread()
        _ZTVN9salhelper6ThreadE; # vtable for salhelper::Thread
        _ZThn*_N9salhelper6Thread12onTerminatedEv;
            # non-virtual thunk to salhelper::Thread::onTerminated()
        _ZThn*_N9salhelper6Thread3runEv;
            # non-virtual thunk to salhelper::Thread::run()
} UDK_3.1;

# Unique libstdc++ symbols:
GLIBCXX_3.4 {
    global:
        _ZGVNSt7num_put*; _ZNSt7num_put*;
        _ZNSs4_Rep20_S_empty_rep_storageE;
};
