{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bb6076bd_7b07476d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-14T09:32:10Z",
      "side": 1,
      "message": "Indeed, the reference counter looks odd; and there is an assert (no greater than 2), and then the code uses the \u0027!maGeometry.hasSavedPosSize()\u0027 checks (e.g. https://gerrit.libreoffice.org/c/core/+/135812). So the flow is unclear:\n\n1. What problem the counter solves? The message does not explain that, only mentions an alternative - again, to solve what is left unsaid.\n2. Why can\u0027t we call refOrSavePosSize unconditionally, tolerating the counter values greater than 2? (I *guess* that the save/restore calls indeed do not follow a strict order, but would then the value of 2 be safe?)",
      "range": {
        "startLine": 21,
        "startChar": 40,
        "endLine": 22,
        "endChar": 33
      },
      "revId": "fbbbf627ad5378b307ef414b0e93fdac3c4a62c6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5441d912_6b0276bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-06-14T08:46:31Z",
      "side": 1,
      "message": "I\u0027m not sure if LO stores this information, but certainly on MS-Windows, the maximised size of a window can be something other than full-screen, and is a distinct {x,y,w,h} tuple from the normal size.",
      "revId": "fbbbf627ad5378b307ef414b0e93fdac3c4a62c6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82e5986c_86a84a5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-06-14T09:14:15Z",
      "side": 1,
      "message": "That\u0027s everywhere. The general consensus seems to be, that:\n- maximized \u003d window has frame, restricted areas (taskbar etc) are respected, position and size differ from screen size\n- full-screen \u003d window has no frame, whole screen is covered. There are actually two full-screen modes in LO VCL: a single screen in covered or the whole \"virtual\" multi-screen is covered.\n\nBut this doesn\u0027t matter for my implementation. It will have saved the \"normal\" position and size and report the current position and size and the WindowState. I don\u0027t think there is anything else needed. If a user restores LO on a different screen maximized, old maximized values are bogus. The \"normal\" position might be insufficient now too, but there is already code in place to fix that (I didn\u0027t verify, it actually works).\n\nI honestly don\u0027t understand the intention of your comment, but maybe this shows my point. Do I need to update the commit message to make it more clear? Any suggestions?",
      "parentUuid": "5441d912_6b0276bc",
      "revId": "fbbbf627ad5378b307ef414b0e93fdac3c4a62c6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f720e823_59e83704",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-06-14T09:26:00Z",
      "side": 1,
      "message": "That more of a \"are you sure you\u0027re handling this case\" comment :-)\n\nIt seems like you are, so that is fine then",
      "parentUuid": "82e5986c_86a84a5b",
      "revId": "fbbbf627ad5378b307ef414b0e93fdac3c4a62c6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}