{
  "comments": [
    {
      "key": {
        "uuid": "bf659307_3b41910c",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 539,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "Rather not change these, as nOp is of type sal_uInt16, not enum OpCode.",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_3f008f01",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 539,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf659307_3b41910c",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_5b44851b",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "Ditto, it\u0027s sal_uInt16 aOpCodes[]",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_5f03030e",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 563,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf659307_5b44851b",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_fb4a3925",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1380,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "These mnArgCounter and mnIfInserts per FormulaCompiler instance may work for one IFS() but not for nested expressions, functions/operators nested within IFS() arguments or even IFS() within IFS().",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_7fe7e741",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1380,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "I know. I was thinking of using a vector (stack) of struct with these counters. I haven\u0027t worked that out yet as I first want the general principle (converion of IFS to IF without changing the IFS-formula in the cell (the one the user sees).",
      "parentUuid": "bf659307_fb4a3925",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_9b63fdb1",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1743,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "An ocIf can\u0027t be a FormulaByteToken, it must be a FormulaJumpToken instead with a proper jump array constructed. That is what now in ScInterpreter::ScIfJump() is asserted if FormulaToken::GetJump() returns nullptr. See also ScRawToken::CreateToken().\n\nIt is unclear to me how the jump positions should be known here. They can only be determined after descending into the subexpressions, which is what the\n\n pFacToken-\u003eGetJump()[nJumpCount] \u003d pc-1;\n\nbelow does.\n\nProbably (just an untested idea) a 3 positions (same as for ocIf above) jump array needs to be created and the FormulaJumpToken constructed with and the token be remembered (like a \"second factory token\") and those positions be filled along with those pFacToken-\u003eGetJump()[] positions.",
      "range": {
        "startLine": 1743,
        "startChar": 41,
        "endLine": 1743,
        "endChar": 57
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_2dea9e0e",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1743,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Whilst thinking about this problem the following came up:\nIf I convert ocIfs_MS to ocIf, I shouldn\u0027t label ocIfs_MS as a jump command, do I?",
      "parentUuid": "bf659307_9b63fdb1",
      "range": {
        "startLine": 1743,
        "startChar": 41,
        "endLine": 1743,
        "endChar": 57
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_3d0217b6",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1743,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-10-01T19:32:10Z",
      "side": 1,
      "message": "\"Label\" how and where?",
      "parentUuid": "bf659307_2dea9e0e",
      "range": {
        "startLine": 1743,
        "startChar": 41,
        "endLine": 1743,
        "endChar": 57
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_fd301f0a",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1743,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-10-02T06:00:56Z",
      "side": 1,
      "message": "In include/formula/compiler.hxx (#define SC_OPCODE_IFS_MS) and in FormulaCompiler::IsOpCodeJumpCommand().",
      "parentUuid": "7f7f9b97_3d0217b6",
      "range": {
        "startLine": 1743,
        "startChar": 41,
        "endLine": 1743,
        "endChar": 57
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_1b6fed92",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1778,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "This FORMULA_MAXJUMPCOUNT must be FORMULA_MAXJUMPCOUNT_MS then.\n\nAlso the ScRawToken::nJump[] array needs to be able to hold FORMULA_MAXJUMPCOUNT_MS+1 jumps, as the array constructed from that in the svJump case will be filled here.\n\nI\u0027d probably introduce FORMULA_MAXJUMPCOUNT_MAX 254 for that specific purpose (and to be used here as well) so that clarifies what it is being used for. Later then we can change places to use also FORMULA_MAXJUMPCOUNT_MAX instead of FORMULA_MAXJUMPCOUNT where appropriate and rename FORMULA_MAXJUMPCOUNT to FORMULA_MAXJUMPCOUNT_CHOOSE. Or even let ocChoose support 255 arguments as well and get rid of the differentiation and the FORMULA_MAXJUMPCOUNT_MS define.",
      "range": {
        "startLine": 1778,
        "startChar": 35,
        "endLine": 1778,
        "endChar": 55
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_3b5af1f2",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "Also this FormulaByteToken must be FormulaJumpToken instead.",
      "range": {
        "startLine": 1790,
        "startChar": 45,
        "endLine": 1790,
        "endChar": 61
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_bf957f42",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf659307_3b5af1f2",
      "range": {
        "startLine": 1790,
        "startChar": 45,
        "endLine": 1790,
        "endChar": 61
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_1bd60dc5",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1838,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "This doesn\u0027t need to be a FormulaByteToken, a simple FormulaToken( svSep, ocClose) is sufficient.",
      "range": {
        "startLine": 1838,
        "startChar": 48,
        "endLine": 1838,
        "endChar": 64
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_df907351",
        "filename": "formula/source/core/api/FormulaCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1838,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf659307_1bd60dc5",
      "range": {
        "startLine": 1838,
        "startChar": 48,
        "endLine": 1838,
        "endChar": 64
      },
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_3b0f51e2",
        "filename": "include/formula/compiler.hxx",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "When moving IDs around, the entries in the ScFuncDescCore aDescs[] array in ScFunctionList::ScFunctionList() sc/source/core/data/funcdesc.cxx must be moved accordingly. This is force-checked and asserted in Linux dbgutil builds and otherwise exits the program as soon as the function descriptions are initialized, i.e. when entering a formula.",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_79e05c97",
        "filename": "include/formula/compiler.hxx",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Fixed.\nI momentarily moved SC_OPCODE_SWITCH_MS back so that this patch is about function IFS only.",
      "parentUuid": "bf659307_3b0f51e2",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_5b12450b",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 4443,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "Because up to two \u0027\u003d\u0027 characters are detected and handled, and if there are two the forced recalc is set. This could be a 2 iterations loop as well. Ignore for now ;-)",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_19f1206c",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 4443,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "Removed comment. Will try to ignore what is not directly relevant for this patch ;-)",
      "parentUuid": "bf659307_5b12450b",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_fbf8f9c4",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "Because pCur is not a FormulaJumpToken.",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_f9bb0c6f",
        "filename": "sc/source/core/tool/interpr1.cxx",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "That code is there as a safeguard as I am experimenting with jump functions.\nThe code will be gone once the experimental phase is over.",
      "parentUuid": "bf659307_fbf8f9c4",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_7b2e2944",
        "filename": "sc/source/core/tool/token.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1677,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-08-14T09:28:36Z",
      "side": 1,
      "message": "I\u0027m not sure this is a good idea now. I\u0027d rather not add them and leave it to later.",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_997770d5",
        "filename": "sc/source/core/tool/token.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1677,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2019-08-29T08:18:55Z",
      "side": 1,
      "message": "I have reverted all changes to the SWITCH function and will concentrate on the IFS function first.",
      "parentUuid": "bf659307_7b2e2944",
      "revId": "c2cf2882cdf9b2225ba43aa8c1442dc093f2bbb1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}