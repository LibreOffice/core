{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e4b69f14_00a2f3e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-11-11T13:59:38Z",
      "side": 1,
      "message": "The original \u003chttps://datatracker.ietf.org/doc/html/rfc1738\u003e \"Uniform Resource Locators (URL)\" (on which our INetURLObject was traditionally based) did not allow for any user:password@ part in http URLs (see section 3.3 \"HTTP\").  And while harmonization and generalization of URL schemes would allow that now, the reference (as per \u003chttps://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml#uri-schemes-1\u003e) \u003chttps://datatracker.ietf.org/doc/draft-ietf-httpbis-semantics/19/\u003e \"HTTP Semantics\" section 4.2.4 \"Deprecation of userinfo in http(s) URIs\" states that such a part is (a) deprecated, (b) must not be generated by senders, and (c) should be treated as an error by receivers.  In light of that, I would argue against extending INetURLObject to support such a part in http and/or https URLs.  (For example, it could mean that we would accidentally start to generate such URLs in certain request scenarios, which we must not do.)",
      "revId": "6b7212cd23946ee2fe145aa0125ace4c40ee55cf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46c9fe4d_4a4c8596",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002778
      },
      "writtenOn": "2021-11-11T19:40:35Z",
      "side": 1,
      "message": "Thanks for looking at it; I think PDF\u0027s ISO32000 refs RFC2396 for URI format; but yes, I can see why deprecating them would make sense.  However, how do we want to treat such a URI (or any other malformed URI?) that\u0027s added as a hyperlink in a document?  Turning it into a relative file URI (which is what currently happens) makes little sense.  Hmm actually, I can see that the turning into the relative file URI is an oddity of the pdf writer; it spots INetProtocol::NotValid and then explicitly turns it into a relative.  I\u0027ll try again and attack it there.",
      "parentUuid": "e4b69f14_00a2f3e1",
      "revId": "6b7212cd23946ee2fe145aa0125ace4c40ee55cf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}