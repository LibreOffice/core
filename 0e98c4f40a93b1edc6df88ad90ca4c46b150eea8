{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce3eb67b_791359d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001318
      },
      "writtenOn": "2022-05-03T06:41:01Z",
      "side": 1,
      "message": "The amendment moves the string into a dedicated resource (that hopefully will be added to the translation). But Stephan pointed out that these errors are rather meant for developers. The message passes through some layers where localization might be better suited. At this point it\u0027s beyond my skills.",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75ad1419_8292e978",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-03T09:57:40Z",
      "side": 1,
      "message": "There is a conceptional mismatch here.  The place where those C++ exceptions are thrown is part of the URE and does not know about LibreOffice (so it shouldn\u0027t mention \"Tools - Options - Advanced\"), and such exception messages are generally intended for developers rather than for end users (and should not be translated).\n\nThat the code in ExtensionCmdQueue::Thread::execute (desktop/source/deployment/gui/dp_gui_extensioncmdqueue.cxx) uses such exception messages and displays them to the user is somewhat unfortunate.  (It could display that data as \"more detailed information\" alongside some more user-centric message, though.)  A fix for tdf#112723 \"Java-based extension installation leads to unhelpful error message when Java is not present or not found\" should thus better address the place where the exception message is consumed rather than where it is produced.",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a2a1430_4aedcd0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002268
      },
      "writtenOn": "2022-05-04T12:41:12Z",
      "side": 1,
      "message": "\u003e better address the place where the exception message is consumed \nwould that be: cui/source/options/optjava.cxx  and the error message should be put in: /cui/inc/strings.hrc   (together with other Java error messages) rather than creating a new strings.hrc ?",
      "parentUuid": "75ad1419_8292e978",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b5d266_a5954a83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-04T13:25:32Z",
      "side": 1,
      "message": "\u003e \u003e better address the place where the exception message is consumed \n\u003e would that be: cui/source/options/optjava.cxx\n\nNo, that code rather is about the Java Options tab page (\"Tools - Options... - LibreOffice - Advanced - Java Options\").\n\nI guess there is no easy fix for this issue, and given my comment at \u003chttps://bugs.documentfoundation.org/show_bug.cgi?id\u003d112723#c11\u003e \"Java-based extension installation leads to unhelpful error message when Java is not present or not found\", I wonder if it would be better to just live with the unhelpful dialog for the (uncommon?) case where an extension using legacy active Java component registration meets an installation where no JRE has been installed yet.  (And rather nudge the LanguageTool developers to update their extension to use passive component registration.)",
      "parentUuid": "7a2a1430_4aedcd0a",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bd29c0f_fea0653b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002268
      },
      "writtenOn": "2022-05-04T15:03:32Z",
      "side": 1,
      "message": "\u003e case where no JRE has been installed yet. \n@Stefan Actually, one of these error messages arises if a JRE is installed, but not activated in \"Options\" -- which undermines your otherwise sensible suggestion, because that case will happen regardless of any changes to LanguageTool.\n\n@Heiko, @Adolfo - If no easy fix (in relation to translation), then maybe change OUString so that \u0027▸\u0027 can used without clang complaining?  or just use \u0027\u003e\u0027 instead?\nOr maybe one of the examples from Tomoyuki gives a useful insight?",
      "parentUuid": "e1b5d266_a5954a83",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b03212c4_b3d3c122",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-04T15:20:26Z",
      "side": 1,
      "message": "\u003e \u003e case where no JRE has been installed yet. \n\u003e @Stefan Actually, one of these error messages arises if a JRE is installed, but not activated in \"Options\" -- which undermines your otherwise sensible suggestion, because that case will happen regardless of any changes to LanguageTool.\n\nIf no JRE has been selected yet, installation of an extension that uses passive Java component registration (see e.g. workdir/Extension/test-passive.oxt produced by `make Extension_test-passive`) does not cause any error message.  (And usage of the extension then causes the \"Enable JRE?\" dialog, as mentioned in my referenced comment.)\n\n\u003e @Heiko, @Adolfo - If no easy fix (in relation to translation), then maybe change OUString so that \u0027▸\u0027 can used without clang complaining?  or just use \u0027\u003e\u0027 instead?\n\nThe fix for the Clang loplugin:stringconstant warning would be to construct an OUString from a UTF-16 string literal, u\"...\".  But see my comment earlier in this thread, that the code in stoc/source/javaloader/javaloader.cxx \"shouldn\u0027t mention \u0027Tools - Options - Advanced\u0027\".",
      "parentUuid": "5bd29c0f_fea0653b",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "511ab496_b00118be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002268
      },
      "writtenOn": "2022-05-04T17:36:18Z",
      "side": 1,
      "message": "Thanks for your helpful and patient guidance Stefan. Now with better understanding . . . an attempt to draw a map out of the labyrinth…\n\n1. Empirical fact: if LanguageTools (and presumably other Java-requiring extensions) are already installed in LO, but an installed JRE is not activated in LO Options on startup of LO, then  ”Enable JRE?” Dialog appears – which activates JRE in Options (on a positive response).\n\n      \u003d\u003e no change needed for this case (as Stefan suggested), but also not tdf#112723 OP\n\nTurning to OP case...\n\n2. Empirical fact: *Install* LanguageTools, when system-installed JRE is not activated in LO Options, then ”Extension Manager” dialog (from desktop/source/deployment/gui/dp_gui_extensioncmdqueue.cxx ) shows: \n\n\"Could not create Java implementation loader\"  \n\n(Could not figure out if the exception in this case comes from JavaComponentLoader::writeRegistryInfo or JavaComponentLoader::activate (in stoc/source/javaloader/javaloader.cxx))\n\n3. Did not test:  install LanguageTools, when no JRE is installed.  I assume a JavaComponentLoader command would complain, but which one?\n\n\nHypothesis: iiuc – there might be a (simple?) way in desktop/source/deployment/gui/dp_gui_extensioncmdqueue.cxx ) to pick up which exception was thrown in javaloader.cxx and give appropriate messages (placed in:  desktop/inc/strings.hrc)\n\n   \u003d\u003e additional code in dp_gui_extensioncmdqueue.cxx presumably around here\n\nline 782  //Todo display the user an error\n\nhttps://opengrok.libreoffice.org/xref/core/desktop/source/deployment/gui/dp_gui_extensioncmdqueue.cxx?r\u003d8f5141ce#782\n\nConclusion: If this sketch sounds right, then both the translation issue and the OP could be addressed, without changing stoc/source/javaloader/javaloader.cxx\n\nAnd I will leave it to others to communicate with LanguageTool developers about trying passive registry.",
      "parentUuid": "b03212c4_b3d3c122",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1f4f3a3_3ca91d71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-05T09:58:29Z",
      "side": 1,
      "message": "\u003e Hypothesis: iiuc – there might be a (simple?) way in desktop/source/deployment/gui/dp_gui_extensioncmdqueue.cxx ) to pick up which exception was thrown in javaloader.cxx and give appropriate messages (placed in:  desktop/inc/strings.hrc)\n\u003e \n\u003e    \u003d\u003e additional code in dp_gui_extensioncmdqueue.cxx presumably around here\n\u003e \n\u003e line 782  //Todo display the user an error\n\nThere is no simple way at least.  A css.uno.CannotRegisterImplementationException can be caused by any number of issues, not necessarily related to no JRE being selected.",
      "parentUuid": "511ab496_b00118be",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "926b0928_d8327bd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002268
      },
      "writtenOn": "2022-05-05T10:24:37Z",
      "side": 1,
      "message": "\u003e A css.uno.CannotRegisterImplementationException can be caused by any number of issues\n- Was aware that this command is used in many other places in the source code. \n- Was hoping for simple identifier -- iiuc -- no error code or other unique identifier is given. \n\n- But line 789 gets the \"error message\" string...\n- Would it be too ugly to test that message for \"Java implementation loader\" --  (which only appears in javaloader.cxx) and then give a more meaningful message (about installing and activating Java, using Options, etc.) \n- or something more elegant along those lines...",
      "parentUuid": "d1f4f3a3_3ca91d71",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea700bc8_a55af402",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-05T10:29:01Z",
      "side": 1,
      "message": "Honestly, I would just not bother with this IMO fringe issue at all.  Educate extension developers (most prominently LanguageTool, perhaps) to abandon active component registration for good, and be done with it.",
      "parentUuid": "926b0928_d8327bd1",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6656db_66fa56af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002268
      },
      "writtenOn": "2022-05-05T10:48:21Z",
      "side": 1,
      "message": "- Thanks Stefan. \n- I have no opinion. Only responded to request to do something about tdf#112723\n- Options are laid out now.\n- Only need a decision about how to proceed....\n\n@Heiko? @Adolfo?",
      "parentUuid": "ea700bc8_a55af402",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83085fe6_1ae17b53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001318
      },
      "writtenOn": "2022-05-05T12:33:47Z",
      "side": 1,
      "message": "Use a simple \u003e here.",
      "parentUuid": "9b6656db_66fa56af",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff11baf2_b247fe7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-05T12:39:11Z",
      "side": 1,
      "message": "\u003e Use a simple \u003e here.\n\nthat\u0027s neither necessary (see my remark about using a UTF-16 string literal) nor useful (see my remark about that code not knowing about LibreOffice\u0027s \"Tools - Options...\")",
      "parentUuid": "83085fe6_1ae17b53",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74439d02_384f4184",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001318
      },
      "writtenOn": "2022-05-05T13:37:23Z",
      "side": 1,
      "message": "But it wont hurt developers and in case of languagetool it give some insights at the issue. The \"...UTF-16 string literal, u...\" is a nice to have, true. But I wouldn\u0027t put too much effort in this patch, in case it doesn\u0027t work out of the box.",
      "parentUuid": "ff11baf2_b247fe7a",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e794f304_32e902b7",
        "filename": "stoc/inc/strings.hrc",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-03T09:57:40Z",
      "side": 1,
      "message": "for new source files, please use the appropriate header/footer from TEMPLATE.SOURCECODE.HEADER",
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0826b830_58163126",
        "filename": "stoc/inc/strings.hrc",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-05-03T09:57:40Z",
      "side": 1,
      "message": "here and elsewhere: is it intentional to have two spaces here?",
      "range": {
        "startLine": 24,
        "startChar": 130,
        "endLine": 24,
        "endChar": 132
      },
      "revId": "0e98c4f40a93b1edc6df88ad90ca4c46b150eea8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}