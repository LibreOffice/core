{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cebb2b7d_db333a86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2022-06-10T13:35:12Z",
      "side": 1,
      "message": "With just this, NVDA 2022.1 doesn\u0027t announce the item on hover for me.\n\nFrom what I have seen, the problem wasn\u0027t that `getAccessibleName()` returns an empty string, but rather that the methods from the IAccessibleText interface mentioned in https://gerrit.libreoffice.org/c/core/+/135226/10#message-82c94932855aa365f59b2daa439cb39fe5ac7128 and used in https://github.com/nvaccess/nvda/blob/47af401ab0f5b44bac0990589cc775845e4f955f/source/NVDAObjects/IAccessible/__init__.py#L151 don\u0027t return anything \"useful\":\n\nin case of our a11y class AccessibleListBoxEntry:\n\n* IAccessibleText::nCharacters  returns 0 (since `implGetText()` returns an empty string), so the `if self.obj.IAccessibleTextObject.nCharacters\u003e0` check in NVDA currently fails\n* even if implGetText() was changed to return something non-empty, `IAccessibleText::OffsetAtPoint` would return -1, and the overall behavior would remain unchanged.\n\n`IAccessibleText::OffsetAtPoint` is supposed to \"return the text position for the specified screen position.\", and -1 if there is no character at the given screen pos [1], and since there is no text on screen for the IconView in our case, the -1 is correct, as far as I understand.\n\n[1] https://accessibility.linuxfoundation.org/a11yspecs/ia2/docs/html/interface_i_accessible_text.html#a9e6bcc4589b93498ecf84d9c8b5326a0\n\nThe below hack demonstrates this and makes the announcement work for me (because it adjusts exactly the 2 places that are called by the above 2 IAccessibleText methods - AccessibleListBoxEntry::implGetText() and AccessibleListBoxEntry::getIndexAtPoint() -  in a dirty way).\n\nBut what\u0027s returned then doesn\u0027t really make much sense and doesn\u0027t fit with the IAccessibleText spec ( https://accessibility.linuxfoundation.org/a11yspecs/ia2/docs/html/interface_i_accessible_text.html ), which is meant for text actually displayed on the screen, as far as I understand. \n\nSince the IconViews in our scenario don\u0027t present any text on screen, the ideal solution would probably be for them to not implement IAccessibleText in the first place.\n\nBut I\u0027m not sure whether IconView can include text shown on screen in other scenarios, so dropping that interface for an IconView a11y class would make sense or then break other scenarios.\n\n\n$ git diff\ndiff --git a/accessibility/source/extended/accessiblelistboxentry.cxx b/accessibility/source/extended/accessiblelistboxentry.cxx\nindex e7f5c6a526a7..d130dd528a58 100644\n--- a/accessibility/source/extended/accessiblelistboxentry.cxx\n+++ b/accessibility/source/extended/accessiblelistboxentry.cxx\n@@ -211,6 +211,9 @@ namespace accessibility\n         SvTreeListEntry* pEntry \u003d m_pTreeListBox-\u003eGetEntryFromPath( m_aEntryPath );\n         if ( pEntry )\n             sRet \u003d SvTreeListBox::SearchEntryTextWithHeadTitle( pEntry );\n+        // DEMO for IconView (but returning empty string seems reasonable, since there is not text on screen)\n+        if (sRet.isEmpty())\n+            sRet \u003d getAccessibleDescription();\n         return sRet;\n     }\n\n@@ -453,10 +456,7 @@ namespace accessibility\n\n         EnsureIsAlive();\n\n-        OUString s \u003d implGetText();\n-        if (s.isEmpty())\n-            s \u003d getAccessibleDescription();\n-        return s;\n+        return implGetText();\n     }\n\n     Reference\u003c XAccessibleRelationSet \u003e SAL_CALL AccessibleListBoxEntry::getAccessibleRelationSet(  )\n@@ -654,6 +654,10 @@ namespace accessibility\n             nIndex \u003d aLayoutData.GetIndexForPoint( aPnt );\n         }\n\n+        if (nIndex \u003d\u003d -1)\n+            // HACK/Demo for IconView; TODO: fix properly instead\n+            nIndex \u003d 0;\n+\n         return nIndex;\n     }\n\n\n\n\n\n isn\u0027t ",
      "revId": "6fff8bee1a1f3369d4377ed8610db2c5ec30235a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "631bfaf7_289af438",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2022-06-10T14:26:06Z",
      "side": 1,
      "message": "If there\u0027s some smart condition that could be used to evaluate whether or not an entry is supposed to have text/support the XAccessibleText interface, I\u0027m wondering whether something along these lines might be a potential solution:\n\n* split AccessibleListBoxEntry into two classes by dropping the inheritance to XAccessibleText from the current version\n* add a new class, for now called AccessibleListBoxEntryWithText that derives from AccessibleListBoxEntry and in addition XAccessibleText, and takes over the implementations of the XAccessibleText methods currently in AccessibleListBoxEntry\n   \n* then, use $SOME_SMART_CONDITION in  AccessibleListBox::implGetAccessible() to create an instance of the \"correct\" class\n\n",
      "revId": "6fff8bee1a1f3369d4377ed8610db2c5ec30235a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d5712ef_61aad863",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2022-06-10T14:32:48Z",
      "side": 1,
      "message": "\u003e If there\u0027s some smart condition that could be used to evaluate whether or not an entry is supposed to have text/support the XAccessibleText interface (...)\n\nAnd maybe what SvTreeListBox::HasEntryText did, originally added in 54725f6e5f06b074d1c08d8efbd16518b96882d5 (\"Don\u0027t add empty labels to fontwork\u0027s icon view\"), might even be such a condition?\n(reading that commit message sounds like it might, but I don\u0027t have enough knowledge of the involved classes)",
      "parentUuid": "631bfaf7_289af438",
      "revId": "6fff8bee1a1f3369d4377ed8610db2c5ec30235a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}