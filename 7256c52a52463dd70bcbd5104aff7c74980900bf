{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dabea196_99390d96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-16T15:46:09Z",
      "side": 1,
      "message": "Hi Xisco! Maybe you have an advice to get this test working. Thank you very much!",
      "revId": "7256c52a52463dd70bcbd5104aff7c74980900bf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59d20ac6_662c638e",
        "filename": "sw/qa/uitest/writer_tests5/tdf106899.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-16T15:46:09Z",
      "side": 1,
      "message": "The test always fails at the end of a with statement. Is there something I need to consider here? If I omit the time.sleep(2) command, I get the error at line 29 and so on.",
      "revId": "7256c52a52463dd70bcbd5104aff7c74980900bf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d7d337e_e7a7ed21",
        "filename": "sw/qa/uitest/writer_tests5/tdf106899.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2022-01-17T11:47:29Z",
      "side": 1,
      "message": "Hi Andreas,\nCheck execute_dialog_through_command in uitest/uitest/test.py, you can pass the parameter close_button.\nI\u0027ve improved the test a bit, however it fails with\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nFAIL: test_tdf106899_alphabetical_index_utf8 (tdf106899.tdf106899)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/xisco/libreoffice/sw/qa/uitest/writer_tests5/tdf106899.py\", line 41, in test_tdf106899_alphabetical_index_utf8\n    self.assertEqual(\"Cựu Kim Sơn\" in xIndexAnchor.getString(), True)\nAssertionError: False !\u003d True\n\n\nno idea what you want to test with this test though.",
      "parentUuid": "59d20ac6_662c638e",
      "revId": "7256c52a52463dd70bcbd5104aff7c74980900bf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b43af3e8_efcb22da",
        "filename": "sw/qa/uitest/writer_tests5/tdf106899.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-17T11:51:30Z",
      "side": 1,
      "message": "Thank you very much! I would like to test, if there can be an alphabetial index using special utf8 characters. Previously, the alphabetical index just worked with ASCII characters.",
      "parentUuid": "2d7d337e_e7a7ed21",
      "revId": "7256c52a52463dd70bcbd5104aff7c74980900bf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1eeca99_cda6f8c5",
        "filename": "sw/qa/uitest/writer_tests5/tdf106899.py",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-20T09:02:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b43af3e8_efcb22da",
      "revId": "7256c52a52463dd70bcbd5104aff7c74980900bf",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}