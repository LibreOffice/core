{
  "comments": [
    {
      "key": {
        "uuid": "AAAAbH///qg\u003d",
        "filename": "cppuhelper/source/shlib.cxx",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2013-12-13T11:11:21Z",
      "side": 1,
      "message": "given that we control the impl names that we want to mark _special, we should simply mandate that they are legal C function names to begin with and not fix them up here (which would always be incomplete for \"creative\" impl names containing other chars than just \".\" anyway)",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///pE\u003d",
        "filename": "cppuhelper/source/shlib.cxx",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000035
      },
      "writtenOn": "2013-12-13T13:01:29Z",
      "side": 1,
      "message": "How to do this ? I don\u0027t understand.\nThis is general code, not #ifdef-ed, so we can\u0027t link against the functions.",
      "parentUuid": "AAAAbH///qg\u003d",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///oo\u003d",
        "filename": "cppuhelper/source/shlib.cxx",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-01-14T13:00:26Z",
      "side": 1,
      "message": "I mean, in the example case at hand, change in sax/source/expatwrap/expwrap.component, sax/source/expatwrap/sax_expat.cxx, and sax/source/expatwrap/saxwriter.cxx change the three affected implementation names to values that are already valid C identifiers, so the \".replace(\u0027,\u0027, \u0027_\u0027)\" part can go",
      "parentUuid": "AAAAbH///pE\u003d",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///qk\u003d",
        "filename": "cppuhelper/source/shlib.cxx",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2013-12-13T11:11:21Z",
      "side": 1,
      "message": "why do you need a second list?",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///o8\u003d",
        "filename": "cppuhelper/source/shlib.cxx",
        "patchSetId": 1
      },
      "lineNbr": 353,
      "author": {
        "id": 1000035
      },
      "writtenOn": "2013-12-13T13:01:29Z",
      "side": 1,
      "message": "thanks, there was an error, to be fixed in next commit.\nIn theory, I don\u0027t need second list, but I have to compare the non_app_specific_map[i].lib (which has confusing name now, but I will change it later) with rImplName instead of uri.",
      "parentUuid": "AAAAbH///qk\u003d",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///qY\u003d",
        "filename": "sax/source/expatwrap/sax_expat.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2013-12-13T11:11:21Z",
      "side": 1,
      "message": "this should be a function, not a macro",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///o4\u003d",
        "filename": "sax/source/expatwrap/sax_expat.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1064,
      "author": {
        "id": 1000035
      },
      "writtenOn": "2013-12-13T13:01:29Z",
      "side": 1,
      "message": "true",
      "parentUuid": "AAAAbH///qY\u003d",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///qU\u003d",
        "filename": "sax/source/expatwrap/sax_expat.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1069,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2013-12-13T11:11:21Z",
      "side": 1,
      "message": "createSingleFactory never returns null",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///o0\u003d",
        "filename": "sax/source/expatwrap/sax_expat.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1069,
      "author": {
        "id": 1000035
      },
      "writtenOn": "2013-12-13T13:01:29Z",
      "side": 1,
      "message": "ok, thanks, I\u0027ve moved it to cppuhelper in next commit",
      "parentUuid": "AAAAbH///qU\u003d",
      "revId": "fc6b6814e5f322398522f8da74fd69661cb764e9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}