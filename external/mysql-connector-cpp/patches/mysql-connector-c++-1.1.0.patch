--- misc/mysql-connector-c++-1.1.0/cppconn/build_config.h	2010-09-10 11:47:47.000000000 +0200
+++ misc/build/mysql-connector-c++-1.1.0/cppconn/build_config.h	2011-11-12 00:45:19.000000000 +0100
@@ -25,25 +25,21 @@
 #ifndef _SQL_BUILD_CONFIG_H_
 #define _SQL_BUILD_CONFIG_H_
 
-#ifndef CPPCONN_PUBLIC_FUNC
+#include <sal/types.h>
 
-#if defined(_WIN32)
  // mysqlcppconn_EXPORTS is added by cmake and defined for dynamic lib build only
   #ifdef mysqlcppconn_EXPORTS
-    #define CPPCONN_PUBLIC_FUNC __declspec(dllexport)
+    #define CPPCONN_PUBLIC_FUNC SAL_DLLPUBLIC_EXPORT
   #else
     // this is for static build
     #ifdef CPPCONN_LIB_BUILD
       #define CPPCONN_PUBLIC_FUNC
     #else
       // this is for clients using dynamic lib
-      #define CPPCONN_PUBLIC_FUNC __declspec(dllimport)
+      #define CPPCONN_PUBLIC_FUNC SAL_DLLPUBLIC_IMPORT
     #endif
   #endif
-#else
-  #define CPPCONN_PUBLIC_FUNC
-#endif
 
-#endif    //#ifndef CPPCONN_PUBLIC_FUNC
+  #define CPPCONN_PUBLIC_EXCEPTION SAL_EXCEPTION_DLLPUBLIC_EXPORT
 
 #endif    //#ifndef _SQL_BUILD_CONFIG_H_
--- misc/mysql-connector-c++-1.1.0/cppconn/exception.h	2009-08-20 17:51:23.000000000 +0200
+++ misc/build/mysql-connector-c++-1.1.0/cppconn/exception.h	2009-09-11 09:41:41.076379817 +0200
@@ -37,7 +37,7 @@
 #pragma warning(push)
 #pragma warning(disable: 4275)
 #endif
-class CPPCONN_PUBLIC_FUNC SQLException : public std::runtime_error
+class CPPCONN_PUBLIC_EXCEPTION SQLException : public std::runtime_error
 {
 #ifdef _WIN32
 #pragma warning(pop)
@@ -83,26 +83,26 @@
 	MEMORY_ALLOC_OPERATORS(SQLException)
 };
 
-struct CPPCONN_PUBLIC_FUNC MethodNotImplementedException : public SQLException
+struct CPPCONN_PUBLIC_EXCEPTION MethodNotImplementedException : public SQLException
 {
 	MethodNotImplementedException(const MethodNotImplementedException& e) : SQLException(e.what(), e.sql_state, e.errNo) { }
 	MethodNotImplementedException(const std::string& reason) : SQLException(reason, "", 0) {}
 };
 
-struct CPPCONN_PUBLIC_FUNC InvalidArgumentException : public SQLException
+struct CPPCONN_PUBLIC_EXCEPTION InvalidArgumentException : public SQLException
 {
 	InvalidArgumentException(const InvalidArgumentException& e) : SQLException(e.what(), e.sql_state, e.errNo) { }
 	InvalidArgumentException(const std::string& reason) : SQLException(reason, "", 0) {}
 };
 
-struct CPPCONN_PUBLIC_FUNC InvalidInstanceException : public SQLException
+struct CPPCONN_PUBLIC_EXCEPTION InvalidInstanceException : public SQLException
 {
 	InvalidInstanceException(const InvalidInstanceException& e) : SQLException(e.what(), e.sql_state, e.errNo) { }
 	InvalidInstanceException(const std::string& reason) : SQLException(reason, "", 0) {}
 };
 
 
-struct CPPCONN_PUBLIC_FUNC NonScrollableException : public SQLException
+struct CPPCONN_PUBLIC_EXCEPTION NonScrollableException : public SQLException
 {
 	NonScrollableException(const NonScrollableException& e) : SQLException(e.what(), e.sql_state, e.errNo) { }
 	NonScrollableException(const std::string& reason) : SQLException(reason, "", 0) {}
--- misc/mysql-connector-c++-1.1.0/driver/mysql_debug.h	2009-08-13 17:13:46.000000000 +0200
+++ misc/build/mysql-connector-c++-1.1.0/driver/mysql_debug.h	2009-08-14 09:56:37.015625000 +0200
@@ -25,16 +25,6 @@
 
 
 
-#if defined(WE_HAVE_VARARGS_MACRO_SUPPORT) && (CPPCONN_TRACE_ENABLED || defined(SAL_DLLPRIVATE))
-	#define CPP_ENTER(msg)			const boost::shared_ptr< MySQL_DebugLogger > __l = this->logger;(void)__l;\
-									MySQL_DebugEnterEvent __this_func(__LINE__, __FILE__, msg, this->logger)
-	#define CPP_ENTER_WL(l, msg)	const boost::shared_ptr< MySQL_DebugLogger > __l = (l);(void)__l;\
-									MySQL_DebugEnterEvent __this_func(__LINE__, __FILE__, msg, (l))
-	#define CPP_INFO(msg)		{if (__l) __l->log("INF", msg); }
-	#define CPP_INFO_FMT(...)	{if (__l) __l->log_va("INF", __VA_ARGS__); }
-	#define CPP_ERR(msg)		{if (__l) __l->log("ERR", msg); }
-	#define CPP_ERR_FMT(...)	{if (__l) __l->log_va("ERR", __VA_ARGS__); }
-#else
 	#define CPP_ENTER(msg)
 	#define CPP_ENTER_WL(l, msg)
 	#define CPP_INFO(msg)
@@ -42,7 +32,6 @@
 	#define CPP_ENTER_WL(l, msg)
 	static inline void CPP_INFO_FMT(...) {}
 	static inline void CPP_ERR_FMT(...) {}
-#endif
 
 #include <stack>
 #include "mysql_util.h"
--- misc/mysql-connector-c++-1.1.0/driver/mysql_prepared_statement.cpp	2013-03-06 10:29:26.890721534 +0100
+++ misc/build/mysql-connector-c++-1.1.0/driver/mysql_prepared_statement.cpp	2013-03-06 10:32:02.979904080 +0100
@@ -46,6 +46,10 @@
 
 #include "mysql_debug.h"
 
+#ifndef CR_INVALID_BUFFER_USE
+#define CR_INVALID_BUFFER_USE	2035
+#endif
+
 
 namespace sql
 {

