--- misc/boost_1_44_0/boost/date_time/gregorian/gregorian_io.hpp	2012-01-08 20:16:41.321760852 +0000
+++ misc/build/boost_1_44_0/boost/date_time/gregorian/gregorian_io.hpp	2012-01-08 20:25:43.233484675 +0000
@@ -77,14 +77,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
         
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, d);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, d);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, d);
@@ -138,14 +138,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
         
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, dd);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, dd);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, dd);
@@ -202,14 +202,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, dp);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, dp);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, dp);
@@ -261,14 +261,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, m);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, m);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, m);
@@ -318,14 +318,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, wd);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, wd);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, wd);
@@ -359,14 +359,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, gd);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, gd);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, gd);
@@ -400,14 +400,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, gy);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, gy);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, gy);
@@ -458,14 +458,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, pd);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, pd);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, pd);
@@ -515,14 +515,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, nday);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, nday);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, nday);
@@ -573,14 +573,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, fkd);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, fkd);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, fkd);
@@ -631,14 +631,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, lkd);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, lkd);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, lkd);
@@ -690,14 +690,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, fka);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, fka);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, fka);
@@ -749,14 +749,14 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false); 
     if (strm_sentry) {
       try {
-        typedef typename date_time::date_input_facet<date, CharT> date_input_facet;
+        typedef typename date_time::date_input_facet<date, CharT> lcl_date_input_facet;
 
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<date_input_facet>(is.getloc())) {
-          std::use_facet<date_input_facet>(is.getloc()).get(sit, str_end, is, fkb);
+        if(std::has_facet<lcl_date_input_facet>(is.getloc())) {
+          std::use_facet<lcl_date_input_facet>(is.getloc()).get(sit, str_end, is, fkb);
         }
         else {
-          date_input_facet* f = new date_input_facet();
+          lcl_date_input_facet* f = new lcl_date_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, fkb);
--- misc/boost_1_44_0/boost/date_time/posix_time/posix_time_io.hpp	2012-01-08 20:16:41.342761072 +0000
+++ misc/build/boost_1_44_0/boost/date_time/posix_time/posix_time_io.hpp	2012-01-09 09:47:25.426730124 +0000
@@ -75,13 +75,13 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false);
     if (strm_sentry) {
       try {
-        typedef typename date_time::time_input_facet<ptime, CharT> time_input_facet;
+        typedef typename date_time::time_input_facet<ptime, CharT> lcl_time_input_facet;
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<time_input_facet>(is.getloc())) {
-          std::use_facet<time_input_facet>(is.getloc()).get(sit, str_end, is, pt);
+        if(std::has_facet<lcl_time_input_facet>(is.getloc())) {
+          std::use_facet<lcl_time_input_facet>(is.getloc()).get(sit, str_end, is, pt);
         }
         else {
-          time_input_facet* f = new time_input_facet();
+          lcl_time_input_facet* f = new lcl_time_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, pt);
@@ -143,13 +143,13 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false);
     if (strm_sentry) {
       try {
-        typedef typename date_time::time_input_facet<ptime, CharT> time_input_facet;
+        typedef typename date_time::time_input_facet<ptime, CharT> lcl_time_input_facet;
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<time_input_facet>(is.getloc())) {
-          std::use_facet<time_input_facet>(is.getloc()).get(sit, str_end, is, tp);
+        if(std::has_facet<lcl_time_input_facet>(is.getloc())) {
+          std::use_facet<lcl_time_input_facet>(is.getloc()).get(sit, str_end, is, tp);
         }
         else {
-          time_input_facet* f = new time_input_facet();
+          lcl_time_input_facet* f = new lcl_time_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, tp);
@@ -208,13 +208,13 @@
     typename std::basic_istream<CharT, Traits>::sentry strm_sentry(is, false);
     if (strm_sentry) {
       try {
-        typedef typename date_time::time_input_facet<ptime, CharT> time_input_facet;
+        typedef typename date_time::time_input_facet<ptime, CharT> lcl_time_input_facet;
         std::istreambuf_iterator<CharT,Traits> sit(is), str_end;
-        if(std::has_facet<time_input_facet>(is.getloc())) {
-          std::use_facet<time_input_facet>(is.getloc()).get(sit, str_end, is, td);
+        if(std::has_facet<lcl_time_input_facet>(is.getloc())) {
+          std::use_facet<lcl_time_input_facet>(is.getloc()).get(sit, str_end, is, td);
         }
         else {
-          time_input_facet* f = new time_input_facet();
+          lcl_time_input_facet* f = new lcl_time_input_facet();
           std::locale l = std::locale(is.getloc(), f);
           is.imbue(l);
           f->get(sit, str_end, is, td);
--- misc/boost_1_44_0/boost/spirit/home/classic/debug/impl/parser_names.ipp	2012-04-10 21:23:48.599238472 +0100
+++ misc/build/boost_1_44_0/boost/spirit/home/classic/debug/impl/parser_names.ipp	2012-04-10 21:24:02.752394878 +0100
@@ -395,13 +395,13 @@
             }
 
             bool register_node(void const *r, char const *name_to_register,
-                bool trace_node)
+                bool trace_node_)
             {
                 if (infos.find(r) != infos.end())
                     return false;
 
                 return infos.insert(rule_infos::value_type(r,
-                    rule_info(std::string(name_to_register), trace_node))
+                    rule_info(std::string(name_to_register), trace_node_))
                 ).second;
             }

