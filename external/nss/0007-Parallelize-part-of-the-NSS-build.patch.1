From aa0692482caba8406913a4bc8d7ce9c5c02814f0 Mon Sep 17 00:00:00 2001
From: Jan-Marek Glogowski <glogow@fbihome.de>
Date: Sun, 30 Jun 2019 16:37:23 +0000
Subject: [PATCH 7/7] "Parallelize" part of the NSS build

Thsi still manually serializes some target, mainly in nss/Makefile
and the nss/coreconf/rules.mk's all target. We can't really add
these dependencies, as all Makefile snippets use the same variable
names. I tried to always run sub-makes to hack in the depndencies,
but these don't know of each other, so targets very often run
twice, and fail the build.

Having a tests:: target and a tests directory leads to misery (and
doesn't work), so it's renamed to check.
---
 nss/Makefile                    | 11 +++--
 nss/cmd/shlibsign/Makefile      |  5 +-
 nss/coreconf/Makefile           |  2 -
 nss/coreconf/README             |  2 +-
 nss/coreconf/nsinstall/Makefile |  1 +
 nss/coreconf/rules.mk           | 81 +++++++++++++++++++++------------
 nss/coreconf/ruleset.mk         | 11 -----
 nss/coreconf/suffix.mk          | 31 -------------
 nss/lib/Makefile                | 32 ++++++-------
 nss/lib/ckfw/Makefile           |  3 +-
 10 files changed, 82 insertions(+), 97 deletions(-)

diff --git a/nss/Makefile b/nss/Makefile
index cbe1c40..8345640 100644
--- a/nss/Makefile
+++ b/nss/Makefile
@@ -49,9 +49,14 @@ include $(CORE_DEPTH)/coreconf/rules.mk
 # (7) Execute "local" rules. (OPTIONAL).                              #
 #######################################################################
 
-nss_build_all: build_nspr all latest
-
-nss_clean_all: clobber_nspr clobber
+nss_build_all::
+	$(MAKE) build_nspr
+	$(MAKE) all
+	$(MAKE) latest
+
+nss_clean_all::
+	$(MAKE) clobber_nspr
+	$(MAKE) clobber
 
 NSPR_CONFIG_STATUS = $(CORE_DEPTH)/../nspr/$(OBJDIR_NAME)/config.status
 NSPR_CONFIGURE = $(CORE_DEPTH)/../nspr/configure
diff --git a/nss/cmd/shlibsign/Makefile b/nss/cmd/shlibsign/Makefile
index d7ee0d2..e52bc57 100644
--- a/nss/cmd/shlibsign/Makefile
+++ b/nss/cmd/shlibsign/Makefile
@@ -98,5 +98,6 @@ else
     endif
 endif
 
-libs install :: $(CHECKLOC)
-
+libs::
+	$(MAKE) install
+	$(MAKE) $(CHECKLOC)
diff --git a/nss/coreconf/Makefile b/nss/coreconf/Makefile
index aca8882..6ba1544 100644
--- a/nss/coreconf/Makefile
+++ b/nss/coreconf/Makefile
@@ -11,5 +11,3 @@ DIRS		= nsinstall
 
 include $(DEPTH)/coreconf/config.mk
 include $(DEPTH)/coreconf/rules.mk
-
-export:: libs
diff --git a/nss/coreconf/README b/nss/coreconf/README
index 4b1e410..835c728 100644
--- a/nss/coreconf/README
+++ b/nss/coreconf/README
@@ -390,7 +390,7 @@ OVERVIEW of "rules.mk":
                                 "Tinderbox" to automatically generate
                                 binary releases on various platforms
 
-        tests::                 automation tool used to run the
+        check::                 automation tool used to run the
                                 "regress" and "reporter" tools 
                                 on various regression test suites
 
diff --git a/nss/coreconf/nsinstall/Makefile b/nss/coreconf/nsinstall/Makefile
index 1ec67f3..54cf414 100644
--- a/nss/coreconf/nsinstall/Makefile
+++ b/nss/coreconf/nsinstall/Makefile
@@ -20,6 +20,7 @@ include $(DEPTH)/coreconf/config.mk
 
 ifeq (,$(filter-out OS2 WIN%,$(OS_TARGET)))
 PROGRAM		=
+TARGETS		=
 else
 TARGETS		= $(PROGRAM)
 INSTALL		= true
diff --git a/nss/coreconf/rules.mk b/nss/coreconf/rules.mk
index 9fc06ad..c59bf78 100644
--- a/nss/coreconf/rules.mk
+++ b/nss/coreconf/rules.mk
@@ -13,7 +13,28 @@
 # Double-Colon rules for utilizing the binary release model.          #
 #######################################################################
 
-all:: export libs 
+all::
+	$(MAKE) -C coreconf/nsinstall program
+	$(MAKE) export
+	$(MAKE) -C lib/base libs
+	$(MAKE) -C lib/pkcs7 libs
+	$(MAKE) -C lib/pkcs12 libs
+	$(MAKE) -C lib/libpkix libs
+	$(MAKE) -C lib/util libs
+	$(MAKE) -C lib/certhigh libs
+	$(MAKE) -C lib/cryptohi libs
+	$(MAKE) -C lib/pk11wrap libs
+	$(MAKE) -C lib/certdb libs
+	$(MAKE) -C lib/pki libs
+	$(MAKE) -C lib/dev libs
+	$(MAKE) -C lib/nss libs
+	$(MAKE) -C lib/smime libs
+	$(MAKE) -C lib/freebl libs
+	$(MAKE) -C lib/dbm libs
+	IGNORE_DIRS=1 $(MAKE) -C lib/ckfw libs
+	$(MAKE) -C lib libs
+	$(MAKE) -C cmd/lib libs
+	$(MAKE) libs
 
 ifeq ($(AUTOCLEAN),1)
 autobuild:: clean export private_export libs program install
@@ -33,6 +54,14 @@ $(OBJDIR):
 	@$(MAKE_DIR)
 endif
 
+ifdef DIRS
+ifndef IGNORE_DIRS
+$(DIRS)::
+	$(IGNORE_ERROR)@$(MAKE) -C $@ $(MAKECMDGOALS)
+	@$(CLICK_STOPWATCH)
+endif
+endif
+
 #
 # IMPORTS will always be associated with a component.  Therefore,
 # the "import" rule will always change directory to the top-level
@@ -65,19 +94,15 @@ ifeq ($(OS_TARGET),Darwin)
 	find $(SOURCE_MD_DIR)/lib -name "*.a" -exec $(RANLIB) {} \;
 endif
 
-export:: 
-	+$(LOOP_OVER_DIRS)
+export:: $(DIRS)
 
-private_export::
-	+$(LOOP_OVER_DIRS)
+private_export:: $(DIRS)
 
-release_export::
-	+$(LOOP_OVER_DIRS)
+release_export:: $(DIRS)
 
-release_classes::
-	+$(LOOP_OVER_DIRS)
+release_classes:: $(DIRS)
 
-libs program install:: $(TARGETS)
+libs program install:: $(DIRS) $(TARGETS)
 ifdef LIBRARY
 	$(INSTALL) -m 664 $(LIBRARY) $(SOURCE_LIB_DIR)
 endif
@@ -103,18 +128,14 @@ endif
 ifdef PROGRAMS
 	$(INSTALL) -m 775 $(PROGRAMS) $(SOURCE_BIN_DIR)
 endif
-	+$(LOOP_OVER_DIRS)
 
-tests::
-	+$(LOOP_OVER_DIRS)
+check:: $(DIRS)
 
-clean clobber::
+clean clobber:: $(DIRS)
 	rm -rf $(ALL_TRASH)
-	+$(LOOP_OVER_DIRS)
 
-realclean clobber_all::
+realclean clobber_all:: $(DIRS)
 	rm -rf $(wildcard *.OBJ) dist $(ALL_TRASH)
-	+$(LOOP_OVER_DIRS)
 
 #######################################################################
 # Double-Colon rules for populating the binary release model.         #
@@ -207,8 +228,7 @@ endif
 
 endif
 
-release_policy::
-	+$(LOOP_OVER_DIRS)
+release_policy:: $(DIRS)
 
 ifndef NO_MD_RELEASE
     ifdef LIBRARY
@@ -228,15 +248,13 @@ ifndef NO_MD_RELEASE
     endif
 endif
 
-release_md::
+release_md:: $(DIRS)
 ifneq ($(MD_LIB_RELEASE_FILES),)
 	$(INSTALL) -m 444 $(MD_LIB_RELEASE_FILES) $(SOURCE_RELEASE_PREFIX)/$(SOURCE_RELEASE_LIB_DIR)
 endif
 ifneq ($(MD_BIN_RELEASE_FILES),)
 	$(INSTALL) -m 555 $(MD_BIN_RELEASE_FILES) $(SOURCE_RELEASE_PREFIX)/$(SOURCE_RELEASE_BIN_DIR)
 endif
-	+$(LOOP_OVER_DIRS)
-
 
 alltags:
 	rm -f TAGS
@@ -285,6 +303,7 @@ get_objs:
 	@echo $(OBJS)
 
 $(LIBRARY): $(OBJS) | $(OBJDIR)
+	@echo "Creating $(LIBRARY)"
 	rm -f $@
 ifeq (,$(filter-out _WIN%,$(NS_USE_GCC)_$(OS_TARGET)))
 	$(AR) $(OBJS)
@@ -313,6 +332,7 @@ endif
 endif
 
 $(SHARED_LIBRARY): $(OBJS) $(RES) $(MAPFILE) $(SUB_SHLOBJS) $(EXTRA_LIBS) | $(OBJDIR)
+	@echo "Creating $(SHARED_LIBRARY)"
 	rm -f $@
 ifeq ($(OS_TARGET)$(OS_RELEASE), AIX4.1)
 	echo "#!" > $(OBJDIR)/lib$(LIBRARY_NAME)_syms
@@ -357,6 +377,7 @@ $(MAPFILE): $(MAPFILE_SOURCE) | $(OBJDIR)
 
 
 $(OBJDIR)/$(PROG_PREFIX)%$(PROG_SUFFIX): $(OBJDIR)/$(PROG_PREFIX)%$(OBJ_SUFFIX) $(EXTRA_LIBS) | $(OBJDIR)
+	rm -f "$@"
 ifeq (,$(filter-out _WIN%,$(NS_USE_GCC)_$(OS_TARGET)))
 	$(MKPROG) $< -Fe$@ -link \
 	$(LDFLAGS) $(XLDFLAGS) $(EXTRA_LIBS) $(EXTRA_SHARED_LIBS) $(OS_LIBS)
@@ -818,7 +839,7 @@ endif
 $(TESTS_DIR)::
 	@$(MAKE_DIR)
 
-tests:: $(REGRESSION_SPEC) | $(TESTS_DIR)
+check:: $(REGRESSION_SPEC) | $(TESTS_DIR)
 	cd $(PLATFORM); \
 	../$(SOURCE_MD_DIR)/bin/regress$(PROG_SUFFIX) specfile=../$(REGRESSION_SPEC) progress $(EXTRA_REGRESS_OPTIONS)
 ifneq ($(BUILD_OPT),)
@@ -828,8 +849,8 @@ ifneq ($(BUILD_OPT),)
 	echo "then run 'reporter specfile=$(RESULTS_DIR)/rptspec'"
 endif
 else
-tests:: 
-	@echo Error: you didn't specify REGRESSION_SPEC in your manifest.mn file!;
+check::
+	@echo "Error: you didn't specify REGRESSION_SPEC in your manifest.mn file!"
 endif
 
 
@@ -848,6 +869,7 @@ endif
 
 ################################################################################
 
+ifeq ($(MAKECMDGOALS),clean)
 -include $(DEPENDENCIES)
 
 ifneq (,$(filter-out OS2 WIN%,$(OS_TARGET)))
@@ -905,21 +927,20 @@ $(MKDEPEND):: $(MKDEPEND_DIR)/*.c $(MKDEPEND_DIR)/*.h
 	$(MAKE) -C $(MKDEPEND_DIR)
 
 ifdef OBJS
-depend:: $(MKDEPEND) $(MKDEPENDENCIES)
+depend:: $(DIRS) $(MKDEPEND) $(MKDEPENDENCIES)
 else
-depend::
+depend:: $(DIRS)
 endif
-	+$(LOOP_OVER_DIRS)
 
-dependclean::
+dependclean:: $(DIRS)
 	rm -f $(MKDEPENDENCIES)
-	+$(LOOP_OVER_DIRS)
 
 #-include $(NSINSTALL_DIR)/$(OBJDIR)/depend.mk
 
 else
 depend::
 endif
+endif
 
 #
 # HACK ALERT
diff --git a/nss/coreconf/ruleset.mk b/nss/coreconf/ruleset.mk
index a622cb6..092eb31 100644
--- a/nss/coreconf/ruleset.mk
+++ b/nss/coreconf/ruleset.mk
@@ -218,15 +218,4 @@ ifdef SYSTEM_INCL_DIR
     YOPT = -Y$(SYSTEM_INCL_DIR)
 endif
 
-ifdef DIRS
-define SUBMAKE
-+@echo "cd $2; $(MAKE) $1"
-$(IGNORE_ERROR)@$(MAKE) -C $(2) $(1)
-@$(CLICK_STOPWATCH)
-
-endef
-
-    LOOP_OVER_DIRS	= $(foreach dir,$(DIRS),$(call SUBMAKE,$@,$(dir)))
-endif
-
 MK_RULESET = included
diff --git a/nss/coreconf/suffix.mk b/nss/coreconf/suffix.mk
index fac5603..9dff4e1 100644
--- a/nss/coreconf/suffix.mk
+++ b/nss/coreconf/suffix.mk
@@ -33,37 +33,6 @@ ifndef DLL_SUFFIX
     DLL_SUFFIX = .so
 endif
 
-STATIC_LIB_EXTENSION =
-
-ifndef DYNAMIC_LIB_EXTENSION
-    DYNAMIC_LIB_EXTENSION =
-endif
-
-
-ifndef STATIC_LIB_SUFFIX
-    STATIC_LIB_SUFFIX = $(LIB_SUFFIX)
-endif
-
-
-ifndef DYNAMIC_LIB_SUFFIX
-    DYNAMIC_LIB_SUFFIX = $(DLL_SUFFIX)
-endif
-
-# WIN% overridese this
-ifndef IMPORT_LIB_SUFFIX
-    IMPORT_LIB_SUFFIX = 
-endif
-
-
-ifndef STATIC_LIB_SUFFIX_FOR_LINKING
-    STATIC_LIB_SUFFIX_FOR_LINKING = $(STATIC_LIB_SUFFIX)
-endif
-
-
-# WIN% overridese this
-ifndef DYNAMIC_LIB_SUFFIX_FOR_LINKING
-    DYNAMIC_LIB_SUFFIX_FOR_LINKING = $(DYNAMIC_LIB_SUFFIX)
-endif
 
 #
 # Program suffixes (OS2 and WIN% override this)
diff --git a/nss/lib/Makefile b/nss/lib/Makefile
index 8eedad0..337b328 100644
--- a/nss/lib/Makefile
+++ b/nss/lib/Makefile
@@ -54,22 +54,6 @@ ifndef NSS_DISABLE_LIBPKIX
 LIBPKIX_SRCDIR = libpkix  # Add the libpkix directory to DIRS.
 endif
 
-#######################################################################
-# (5) Execute "global" rules. (OPTIONAL)                              #
-#######################################################################
-
-include $(CORE_DEPTH)/coreconf/rules.mk
-
-#######################################################################
-# (6) Execute "component" rules. (OPTIONAL)                           #
-#######################################################################
-
-
-
-#######################################################################
-# (7) Execute "local" rules. (OPTIONAL).                              #
-#######################################################################
-
 ifeq ($(NSS_BUILD_UTIL_ONLY),1)
   UTIL_SRCDIR = util
   FREEBL_SRCDIR =
@@ -95,3 +79,19 @@ else
     endif
   endif
 endif
+
+#######################################################################
+# (5) Execute "global" rules. (OPTIONAL)                              #
+#######################################################################
+
+include $(CORE_DEPTH)/coreconf/rules.mk
+
+#######################################################################
+# (6) Execute "component" rules. (OPTIONAL)                           #
+#######################################################################
+
+
+
+#######################################################################
+# (7) Execute "local" rules. (OPTIONAL).                              #
+#######################################################################
diff --git a/nss/lib/ckfw/Makefile b/nss/lib/ckfw/Makefile
index 2902bef..75c906a 100644
--- a/nss/lib/ckfw/Makefile
+++ b/nss/lib/ckfw/Makefile
@@ -6,7 +6,6 @@
 include manifest.mn
 include $(CORE_DEPTH)/coreconf/config.mk
 include config.mk
-include $(CORE_DEPTH)/coreconf/rules.mk
 
 ifdef NOTDEF # was ifdef MOZILLA_CLIENT
 NSS_BUILD_CAPI = 1
@@ -33,3 +32,5 @@ ifdef NSS_BUILD_CAPI
 DIRS += capi
 endif
 endif
+
+include $(CORE_DEPTH)/coreconf/rules.mk
-- 
2.20.1

