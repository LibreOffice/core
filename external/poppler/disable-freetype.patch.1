disable freetype dependent code

--- poppler/poppler/Form.cc.orig	2023-06-05 19:29:14.000000000 +0900
+++ poppler/poppler/Form.cc	2023-06-14 18:50:22.232312300 +0900
@@ -48,7 +48,7 @@
 #include <cstdlib>
 #include <cstring>
 #include <cctype>
-#include "goo/ft_utils.h"
+//#include "goo/ft_utils.h"
 #include "goo/gmem.h"
 #include "goo/gfile.h"
 #include "goo/GooString.h"
@@ -78,8 +78,8 @@
 #include "fofi/FoFiTrueType.h"
 #include "fofi/FoFiIdentifier.h"
 
-#include <ft2build.h>
-#include FT_FREETYPE_H
+//#include <ft2build.h>
+//#include FT_FREETYPE_H
 #include <unordered_set>
 
 // helper for using std::visit to get a dependent false for static_asserts
@@ -2760,6 +2760,8 @@
 
 Form::AddFontResult Form::addFontToDefaultResources(const std::string &filepath, int faceIndex, const std::string &fontFamily, const std::string &fontStyle, bool forceName)
 {
+    return {};
+#if 0
     if (!GooString::endsWith(filepath, ".ttf") && !GooString::endsWith(filepath, ".ttc") && !GooString::endsWith(filepath, ".otf")) {
         error(errIO, -1, "We only support embedding ttf/ttc/otf fonts for now. The font file for {0:s} {1:s} was {2:s}", fontFamily.c_str(), fontStyle.c_str(), filepath.c_str());
         return {};
@@ -2994,6 +2996,7 @@
     }
 
     return { dictFontName, fontDictRef };
+#endif
 }
 
 std::string Form::getFallbackFontForChar(Unicode uChar, const GfxFont &fontToEmulate) const
