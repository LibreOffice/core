From 211e1e6f36756579b86fa12891af3e5843cd8907 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Caol=C3=A1n=20McNamara?= <caolanm@redhat.com>
Date: Tue, 23 Aug 2022 10:18:31 +0100
Subject: [PATCH] improve #630 test case from 0m2.427s -> 0m1.836s (#781)

---
 src/hunspell/csutil.cxx | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/hunspell/csutil.cxx b/src/hunspell/csutil.cxx
index fbaa768..e9cce47 100644
--- a/src/hunspell/csutil.cxx
+++ b/src/hunspell/csutil.cxx
@@ -134,6 +134,7 @@ void myopen(std::ifstream& stream, const char* path, std::ios_base::openmode mod
 
 std::string& u16_u8(std::string& dest, const std::vector<w_char>& src) {
   dest.clear();
+  dest.reserve(src.size());
   std::vector<w_char>::const_iterator u2 = src.begin();
   std::vector<w_char>::const_iterator u2_max = src.end();
   while (u2 < u2_max) {
@@ -171,6 +172,7 @@ std::string& u16_u8(std::string& dest, const std::vector<w_char>& src) {
 
 int u8_u16(std::vector<w_char>& dest, const std::string& src) {
   dest.clear();
+  dest.reserve(src.size());
   std::string::const_iterator u8 = src.begin();
   std::string::const_iterator u8_max = src.end();
 
@@ -260,6 +262,7 @@ int u8_u16(std::vector<w_char>& dest, const std::string& src) {
     ++u8;
   }
 
+  dest.shrink_to_fit();
   return dest.size();
 }
 
-- 
2.37.2

