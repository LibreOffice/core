diff --git libgltf/inc/libgltf.h libgltf/inc/libgltf.h
--- libgltf/inc/libgltf.h
+++ libgltf/inc/libgltf.h
@@ -10,6 +10,7 @@
 #include <stddef.h>
 #include "types.h"
 #include "Common.h"
+#include <GL/glew.h>
 #include <glm/glm.hpp>
 using namespace glTF;
 
@@ -73,7 +74,7 @@ void gltf_disable_rotation(glTFHandle* handle);
 /** Get a bitmap of the screen in the given point in time. */
 extern "C"
 void gltf_renderer_get_bitmap(glTFHandle** handle, int size, double time,
-                              char* buffer, long width, long height);
+                              char* buffer, GLenum format);
 
 /** Start playing the glTF animation to the current openGLcontext. */
 extern "C"
--- libgltf/src/RenderScene.cpp
+++ libgltf/src/RenderScene.cpp
@@ -938,7 +938,7 @@ void RenderScene::renderToBuffer()
 }
 
 void RenderScene::renderToBufferComplete(glTFViewport* pViewport,
-        unsigned char* buffer)
+        unsigned char* buffer, GLenum format)
 {
     glDisable(GL_DEPTH_TEST);
 
@@ -950,7 +950,7 @@ void RenderScene::renderToBufferComplete(glTFViewport* pViewport,
     {
         result = false;
     }
-    glReadPixels(0, 0, pViewport->width, pViewport->height, GL_BGR,
+    glReadPixels(0, 0, pViewport->width, pViewport->height, format,
                  GL_UNSIGNED_BYTE, buffer);
     glBindFramebuffer(GL_FRAMEBUFFER, 0);
     glDeleteFramebuffers(1, &mFBOID);
--- libgltf/src/RenderScene.h
+++ libgltf/src/RenderScene.h
@@ -101,7 +101,7 @@ public:
     // For bitmap
     void renderToBuffer();
     static void renderToBufferComplete(glTFViewport* pViewport,
-                                       unsigned char* buffer);
+                                       unsigned char* buffer, GLenum format);
     // For animation
     void startAnimation();
     void stopAnimation();
--- libgltf/src/libgltf.cpp
+++ libgltf/src/libgltf.cpp
@@ -108,7 +108,7 @@ void gltf_disable_rotation(glTFHandle* handle)
 
 extern "C"
 void gltf_renderer_get_bitmap(glTFHandle** handle, int size, double time,
-                              char* buffer, long width, long height)
+                              char* buffer, GLenum format)
 {
     RenderScene::renderToBufferPrepare(&(handle[0]->viewport));
     for (int i = 0; i < size; i++)
@@ -117,7 +117,7 @@ void gltf_renderer_get_bitmap(glTFHandle** handle, int size, double time,
         renderScene->renderToBuffer();
     }
     RenderScene::renderToBufferComplete(&(handle[0]->viewport),
-                                        (unsigned char*)buffer);
+                                        (unsigned char*)buffer, format);
     return;
 }
 
