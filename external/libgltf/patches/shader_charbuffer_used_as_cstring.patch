diff --git libgltf/src/Common.cpp libgltf/src/Common.cpp
--- libgltf/src/Common.cpp
+++ libgltf/src/Common.cpp
@@ -490,9 +490,9 @@ void Technique::initTechnique(glTFHandle* pGltfHandle)
                      mFShaderName.c_str());
     if (vShaderIdx >= 0 && fShaderIdx >= 0)
     {
-        const char* pvShader = pGltfHandle->files[vShaderIdx]->buffer;
-        const char* pfShader = pGltfHandle->files[fShaderIdx]->buffer;
-        mProgramId = mShaderProg.createProgram(pvShader, pfShader);
+        const std::string vShader(pGltfHandle->files[vShaderIdx]->buffer, pGltfHandle->files[vShaderIdx]->size);
+        const std::string fShader(pGltfHandle->files[fShaderIdx]->buffer, pGltfHandle->files[fShaderIdx]->size);
+        mProgramId = mShaderProg.createProgram(vShader, fShader);
     }
     if (0 != mProgramId)
     {
--- libgltf/src/Shaders.cpp
+++ libgltf/src/Shaders.cpp
@@ -124,22 +124,6 @@ unsigned int ShaderProgram::createProgram(const std::string& vShader,
     return programId;
 }
 
-unsigned int ShaderProgram::createProgram(const char* pvShader,
-        const char* pfShader)
-{
-    unsigned int programId = glCreateProgram();
-    if (!loadShader(programId, pvShader, GL_VERTEX_SHADER))
-    {
-        return 0;
-    }
-    if (!loadShader(programId, pfShader, GL_FRAGMENT_SHADER))
-    {
-        return 0;
-    }
-
-    return programId;
-}
-
 void ShaderProgram::deleteProgram(unsigned int programId)
 {
     glDeleteShader(programId);
@@ -162,7 +146,7 @@ bool ShaderProgram::loadShader(unsigned int programId,
         return false;
     }
 
-    if (!compileShader(shaderCode.c_str(), shaderId))
+    if (!compileShader(shaderCode, shaderId))
     {
         std::cout << "compileShader : compileShader failed." << std::endl;
         return false;
@@ -178,30 +162,12 @@ bool ShaderProgram::loadShader(unsigned int programId,
     return true;
 }
 
-bool ShaderProgram::loadShader(unsigned int programId, const char* pShader,
-                               int type)
+bool ShaderProgram::compileShader(const std::string& pShader, unsigned int shaderId)
 {
-    unsigned int shaderId = glCreateShader(type);
+    const char* pShaderList[] = { pShader.c_str() };
+    const GLint pLengthsList[] = { pShader.length() };
 
-    if (!compileShader(pShader, shaderId))
-    {
-        std::cout << "compileShader : compileShader failed." << std::endl;
-        return false;
-    }
-
-    if (!linkProgram(programId, shaderId))
-    {
-        std::cout << "compileShader : linkProgram failed." << std::endl;
-        return false;
-    }
-
-    deleteShader(shaderId);
-    return true;
-}
-
-bool ShaderProgram::compileShader(const char* pShader, unsigned int shaderId)
-{
-    glShaderSource(shaderId, 1, &pShader, NULL);
+    glShaderSource(shaderId, 1, pShaderList, pLengthsList);
     glCompileShader(shaderId);
     int iStatus = 0;
     glGetShaderiv(shaderId, GL_COMPILE_STATUS, &iStatus);
--- libgltf/src/Shaders.h
+++ libgltf/src/Shaders.h
@@ -51,7 +51,6 @@ public:
 
     unsigned int createProgram(const std::string& vName,
                                const std::string& fName);
-    unsigned int createProgram(const char* pvShader, const char* pfShader);
 
     void deleteProgram(unsigned int programId);
 
@@ -59,10 +58,9 @@ public:
 
     bool loadShader(unsigned int programId, const std::string& shaderName,
                     int type);
-    bool loadShader(unsigned int programId, const char* pShader, int type);
 private:
 
-    bool compileShader(const char* pShader, unsigned int shaderId);
+    bool compileShader(const std::string& pShader, unsigned int shaderId);
 
     bool linkProgram(unsigned int programId, unsigned int shaderId);
 
