/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Bluez header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to Android. It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ****************************************************************************
 ****************************************************************************/
#pragma once


#ifdef __cplusplus
#endif
#include <sys/socket.h>
#include <sys/ioctl.h>
 16
 1024
 255
 260
 (HCI_MAX_ACL_SIZE + 4)
 1
 2
 3
 4
 5
 6
 0
 1
 2
 3
 4
 5
 6
 _IOW('H', 201, int)
 _IOW('H', 202, int)
 _IOW('H', 203, int)
 _IOW('H', 204, int)
 _IOR('H', 210, int)
 _IOR('H', 211, int)
 _IOR('H', 212, int)
 _IOR('H', 213, int)
 _IOR('H', 215, int)
 _IOW('H', 220, int)
 _IOW('H', 221, int)
 _IOW('H', 222, int)
 _IOW('H', 223, int)
 _IOW('H', 224, int)
 _IOW('H', 225, int)
 _IOW('H', 226, int)
 _IOW('H', 227, int)
 _IOW('H', 228, int)
 _IOW('H', 230, int)
 _IOR('H', 240, int)
#pragma once
 0x01
 0x02
 0x03
 0x04
 0xff
 0x0002
 0x0004
 0x0008
 0x0010
 0x0100
 0x0200
 0x0400
 0x0800
 0x1000
 0x2000
 0x4000
 0x8000
 0x0020
 0x0040
 0x0080
 0x0008
 0x0010
 0x0020
 0x0040
 0x0080
 0x0100
 0x0200
 (HCI_HV1 | HCI_HV2 | HCI_HV3)
 (HCI_DM1 | HCI_DH1 | HCI_DM3 | HCI_DH3 | HCI_DM5 | HCI_DH5)
 0x0001
 0x0002
 0x0004
 0x0008
 0x0010
 0x0020
 0x0040
 0x0080
 0x0100
 0x0200
 (ESCO_HV1 | ESCO_HV2 | ESCO_HV3)
 (ESCO_2EV3 | ESCO_3EV3 | ESCO_2EV5 | ESCO_3EV5)
 (SCO_ESCO_MASK | ESCO_EV3 | ESCO_EV4 | ESCO_EV5 | EDR_ESCO_MASK)
 0x01
 0x02
 0x03
 0x04
 0x05
 0x06
 0x07
 0x08
 0x09
 0x0a
 0x0b
 0x0c
 0x0d
 0x0e
 0x0f
 0x10
 0x11
 0x12
 0x13
 0x14
 0x15
 0x16
 0x17
 0x18
 0x19
 0x1a
 0x1b
 0x1c
 0x1d
 0x1e
 0x1f
 0x20
 0x21
 0x22
 0x23
 0x24
 0x25
 0x26
 0x27
 0x28
 0x29
 0x2a
 0x2c
 0x2d
 0x2e
 0x2f
 0x30
 0x32
 0x34
 0x35
 0x36
 0x37
 0x38
 0x01
 0x02
 0x04
 0x08
 0x00
 0x01
 0x02
 0x01
 0x02
 0x04
 0x08
 0x10
 0x20
 0x40
 0x80
 0x01
 0x02
 0x04
 0x08
 0x10
 0x20
 0x40
 0x80
 0x01
 0x02
 0x04
 0x08
 0x80
 0x02
 0x04
 0x08
 0x10
 0x20
 0x40
 0x80
 0x01
 0x02
 0x08
 0x10
 0x80
 0x01
 0x02
 0x04
 0x08
 0x10
 0x20
 0x40
 0x80
 0x01
 0x08
 0x10
 0x20
 0x40
 0x01
 0x02
 0x80
 0x0001
 0x0002
 0x0004
 0x0008
 0x8000
 0x0001
 0x0002
 0x0004
 0x0008
 0x0010
 0x0020
 0x01
 0x0001
 5
 7
 0x0002
 0x0003
 9
 0x0004
 0x0005
 13
 0x0006
 3
 0x0007
 4
 0x0008
 6
 0x0009
 7
 0x000A
 7
 0x000B
 22
 0x000C
 0x000D
 23
 0x000E
 0x000F
 4
 0x0011
 2
 0x0013
 3
 0x0015
 2
 0x0017
 1
 0x0019
 10
 0x001A
 6
 0x001B
 2
 0x001C
 3
 0x001D
 2
 0x001F
 2
 0x0020
 0x0028
 17
 0x0029
 21
 0x002A
 7
 0x002B
 9
 0x002C
 6
 0x002D
 0x002E
 10
 0x002F
 0x0030
 38
 0x0033
 0x0034
 7
 0x02
 0x0001
 6
 0x0003
 10
 0x0004
 2
 0x0005
 6
 0x0006
 2
 0x0007
 17
 (3 + HCI_QOS_CP_SIZE)
 0x0009
 2
 4
 0x000B
 7
 0x000C
 2
 5
 0x000D
 4
 3
 0x000E
 0x000F
 0x0010
 0x0011
 8
 0x03
 0x0001
 8
 0x0003
 0x0005
 2
 0x00
 0x01
 0x02
 0x00
 0x01
 0x02
 0x00
 0x01
 0x02
 0x01
 0x02
 0x0008
 0x0009
 2
 0x000A
 1
 0x000B
 0x000D
 7
 5
 0x0011
 1
 2
 0x0012
 7
 3
 0x0013
 248
 0x0014
 249
 0x0015
 3
 0x0016
 2
 0x0017
 3
 0x0018
 2
 0x0019
 2
 0x001A
 0x00
 0x01
 0x02
 0x001B
 5
 0x001C
 4
 0x001D
 5
 0x001E
 4
 0x001F
 0x0020
 0x00
 0x01
 0x0021
 0x0022
 0x00
 0x01
 0x02
 0x0023
 4
 0x0024
 3
 0x0025
 3
 0x0026
 2
 0x0027
 0x0028
 0x0029
 0x002A
 0x002B
 0x002C
 0x002D
 3
 4
 0x002E
 0x002F
 0x0031
 0x0033
 7
 0x0035
 1
 0x0036
 5
 0x0037
 4
 3
 0x0038
 0x40
 0x0039
 2 + 3 * MAX_IAC_LAP
 0x003A
 1 + 3 * MAX_IAC_LAP
 0x003B
 0x003C
 0x003D
 0x003E
 0x003F
 10
 1
 0x0042
 2
 0x0043
 1
 1
 0x0044
 2
 0x0045
 1
 1
 0x0046
 0x0047
 0x0048
 2
 0x0049
 1
 1
 0x0051
 242
 0x0052
 241
 1
 0x0053
 2
 1
 0x0055
 2
 0x0056
 1
 1
 0x0057
 33
 0x0058
 2
 0x0059
 1
 1
 0x005A
 2
 0x005B
 1
 1
 0x005F
 3
 0x0060
 7
 1
 0x04
 0x0001
 9
 0x0002
 65
 0x0003
 9
 0x0004
 1
 11
 0x0005
 8
 0x0007
 0x0009
 7
 0x05
 0x0001
 4
 0x0002
 4
 0x0003
 4
 0x0005
 4
 0x0006
 14
 0x0007
 3
 9
 0x3e
 0x0001
 0x0002
 0x0003
 0x0004
 1
 1
 0x3f
 0x01
 0x02
 14
 0x03
 13
 0x04
 10
 0x05
 4
 0x06
 3
 0x07
 255
 0x08
 5
 0x09
 3
 0x0A
 4
 0x0B
 11
 0x0C
 8
 0x0D
 (4 + HCI_QOS_CP_SIZE)
 0x0E
 3
 0x0F
 4
 0x10
 1
 0x11
 2
 0x12
 8
 0x13
 1
 0x14
 6
 0x15
 1
 0x16
 6
 0x17
 6
 0x18
 23
 0x19
 0x1A
 1
 0x1B
 3
 0x1C
 5
 0x1D
 5
 0x1E
 2
 0x20
 7
 0x21
 (5 + HCI_QOS_CP_SIZE)
 0x22
 14
 15
 0x23
 13
 0x2C
 17
 0x2D
 9
 0x2E
 11
 0x2F
 254
 0x30
 3
 0x31
 6
 0x32
 9
 0x33
 10
 0x34
 6
 0x35
 6
 0x36
 7
 0x38
 4
 0x39
 2
 0x3B
 10
 0x3C
 7
 0x3D
 14
 0xFE
 0xFF
 0xFD
 2
 0x01
 4
 0x02
 1
 3
 2
 4
 3
 6
(ogf, ocf) (uint16_t)((ocf & 0x03ff) | (ogf << 10))
(op) (op >> 10)
(op) (op & 0x03ff)
(h, f) (uint16_t)((h & 0x0fff) | (f << 12))
(h) (h & 0x0fff)
(h) (h >> 12)
#endif
 1
 2
 3
 0x0001
 0x0002
 0xffff
 31
 63
 63
 127
 0x0001
#ifdef __cplusplus
#endif
struct hci_dev_stats
{
    uint32_t err_rx;
    uint32_t err_tx;
    uint32_t cmd_tx;
    uint32_t evt_rx;
    uint32_t acl_tx;
    uint32_t acl_rx;
    uint32_t sco_tx;
    uint32_t sco_rx;
    uint32_t byte_rx;
    uint32_t byte_tx;
};
struct hci_dev_info
{
    uint16_t dev_id;
    char name[8];

    bdaddr_t bdaddr;

    uint32_t flags;
    uint8_t type;

    uint8_t features[8];

    uint32_t pkt_type;
    uint32_t link_policy;
    uint32_t link_mode;

    uint16_t acl_mtu;
    uint16_t acl_pkts;
    uint16_t sco_mtu;
    uint16_t sco_pkts;

    struct hci_dev_stats stat;
};
enum
{
    HCI_UP,
    HCI_INIT,
    HCI_RUNNING,

    HCI_PSCAN,
    HCI_ISCAN,
    HCI_AUTH,
    HCI_ENCRYPT,
    HCI_INQUIRY,

    HCI_RAW,

    HCI_SECMGR
};
struct sockaddr_hci
{
    sa_family_t hci_family;
    unsigned short hci_dev;
};
struct hci_conn_info
{
    uint16_t handle;
    bdaddr_t bdaddr;
    uint8_t type;
    uint8_t out;
    uint16_t state;
    uint32_t link_mode;
    uint32_t mtu;
    uint32_t cnt;
    uint32_t pkts;
};
struct hci_conn_list_req
{
    uint16_t dev_id;
    uint16_t conn_num;
    struct hci_conn_info conn_info[0];
};
#endif
