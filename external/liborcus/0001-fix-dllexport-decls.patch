From 3e08d2264984b8d5227e22c7089f00f8f2e36513 Mon Sep 17 00:00:00 2001
From: David Tardon <dtardon@redhat.com>
Date: Tue, 2 Jun 2015 23:26:39 +0200
Subject: [PATCH] fix dllexport decls

---
 include/orcus/base64.hpp      | 4 ++--
 include/orcus/exception.hpp   | 2 +-
 include/orcus/pstring.hpp     | 6 +++---
 include/orcus/stream.hpp      | 2 +-
 include/orcus/string_pool.hpp | 2 +-
 5 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/include/orcus/base64.hpp b/include/orcus/base64.hpp
index a4cf020..0f81289 100644
--- a/include/orcus/base64.hpp
+++ b/include/orcus/base64.hpp
@@ -22,7 +22,7 @@ namespace orcus {
  * @param len_base64 length of encoded character sequence.
  * @param decoded decoded byte sequence will be put into this parameter.
  */
-ORCUS_DLLPUBLIC void decode_from_base64(const char* p_base64, size_t len_base64, std::vector<char>& decoded);
+ORCUS_PSR_DLLPUBLIC void decode_from_base64(const char* p_base64, size_t len_base64, std::vector<char>& decoded);
 
 /**
  * Encode a sequence of bytes into base64-encoded characters.
@@ -31,7 +31,7 @@ ORCUS_DLLPUBLIC void decode_from_base64(const char* p_base64, size_t len_base64,
  * @param encoded base64-encoded character sequence representing the input
  *                bytes.
  */
-ORCUS_DLLPUBLIC void encode_to_base64(const std::vector<char>& input, std::string& encoded);
+ORCUS_PSR_DLLPUBLIC void encode_to_base64(const std::vector<char>& input, std::string& encoded);
 
 }
 
diff --git a/include/orcus/exception.hpp b/include/orcus/exception.hpp
index 63729ae..ba6132c 100644
--- a/include/orcus/exception.hpp
+++ b/include/orcus/exception.hpp
@@ -25,7 +25,7 @@ private:
     ::std::string m_msg;
 };
 
-class ORCUS_DLLPUBLIC xml_structure_error : public general_error
+class ORCUS_PSR_DLLPUBLIC xml_structure_error : public general_error
 {
 public:
     explicit xml_structure_error(const ::std::string& msg);
diff --git a/include/orcus/pstring.hpp b/include/orcus/pstring.hpp
index e38d4be..c72b78b 100644
--- a/include/orcus/pstring.hpp
+++ b/include/orcus/pstring.hpp
@@ -71,7 +71,7 @@ public:
         m_size = 0;
     }
 
-    struct ORCUS_DLLPUBLIC hash
+    struct ORCUS_PSR_DLLPUBLIC hash
     {
         size_t operator() (const pstring& val) const;
     };
@@ -86,8 +86,8 @@ inline ::std::ostream& operator<< (::std::ostream& os, const pstring& str)
     return os << str.str();
 }
 
-ORCUS_DLLPUBLIC std::string operator+ (const std::string& left, const pstring& right);
-ORCUS_DLLPUBLIC std::string& operator+= (std::string& left, const pstring& right);
+ORCUS_PSR_DLLPUBLIC std::string operator+ (const std::string& left, const pstring& right);
+ORCUS_PSR_DLLPUBLIC std::string& operator+= (std::string& left, const pstring& right);
 
 }
 
diff --git a/include/orcus/stream.hpp b/include/orcus/stream.hpp
index a32f6a4..064d386 100644
--- a/include/orcus/stream.hpp
+++ b/include/orcus/stream.hpp
@@ -20,7 +20,7 @@ namespace orcus {
  * @param filepath file to open
  * @param strm content of the file
  */
-ORCUS_DLLPUBLIC void load_file_content(const char* filepath, std::string& strm);
+ORCUS_PSR_DLLPUBLIC void load_file_content(const char* filepath, std::string& strm);
 
 }
 
diff --git a/include/orcus/string_pool.hpp b/include/orcus/string_pool.hpp
index e4afa4f..b895ee4 100644
--- a/include/orcus/string_pool.hpp
+++ b/include/orcus/string_pool.hpp
@@ -21,7 +21,7 @@ namespace orcus {
 /**
  * Implements string hash map.
  */
-class ORCUS_DLLPUBLIC string_pool
+class ORCUS_PSR_DLLPUBLIC string_pool
 {
     struct string_hash
     {
-- 
2.4.1

