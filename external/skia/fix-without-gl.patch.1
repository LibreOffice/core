diff --git a/include/gpu/gl/GrGLInterface.h b/include/gpu/gl/GrGLInterface.h
index e10242b3b7..a1c0058caa 100644
--- a/include/gpu/gl/GrGLInterface.h
+++ b/include/gpu/gl/GrGLInterface.h
@@ -83,7 +83,9 @@ public:
 
     GrGLExtensions fExtensions;
 
+#ifdef SK_GL
     bool hasExtension(const char ext[]) const { return fExtensions.has(ext); }
+#endif
 
     /**
      * The function pointers are in a struct so that we can have a compiler generated assignment
diff --git a/src/gpu/ganesh/gl/GrGLContext.h b/src/gpu/ganesh/gl/GrGLContext.h
index d5424ca6cf..5b730fe176 100644
--- a/src/gpu/ganesh/gl/GrGLContext.h
+++ b/src/gpu/ganesh/gl/GrGLContext.h
@@ -64,9 +64,11 @@ public:
     const GrGLCaps* caps() const { return fGLCaps.get(); }
     GrGLCaps* caps() { return fGLCaps.get(); }
 
+#ifdef SK_GL
     bool hasExtension(const char* ext) const {
         return fInterface->hasExtension(ext);
     }
+#endif
 
     const GrGLExtensions& extensions() const { return fInterface->fExtensions; }
 
diff --git a/src/gpu/ganesh/gl/GrGLGpu.h b/src/gpu/ganesh/gl/GrGLGpu.h
index a3ac1ad25d..ffc18093e6 100644
--- a/src/gpu/ganesh/gl/GrGLGpu.h
+++ b/src/gpu/ganesh/gl/GrGLGpu.h
@@ -279,6 +279,7 @@ private:
     // compatible stencil format, or negative if there is no compatible stencil format.
     int getCompatibleStencilIndex(GrGLFormat format);
 
+#ifdef SK_GL
     GrBackendFormat getPreferredStencilFormat(const GrBackendFormat& format) override {
         int idx = this->getCompatibleStencilIndex(format.asGLFormat());
         if (idx < 0) {
@@ -287,6 +288,7 @@ private:
         return GrBackendFormat::MakeGL(GrGLFormatToEnum(this->glCaps().stencilFormats()[idx]),
                                        GR_GL_TEXTURE_NONE);
     }
+#endif
 
     void onFBOChanged();
 
