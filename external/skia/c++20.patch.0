--- include/private/SkTemplates.h
+++ include/private/SkTemplates.h
@@ -453,12 +453,12 @@
 
 template<typename C, std::size_t... Is>
 constexpr auto SkMakeArrayFromIndexSequence(C c, std::index_sequence<Is...>)
--> std::array<std::result_of_t<C(std::size_t)>, sizeof...(Is)> {
+-> std::array<std::invoke_result_t<C, std::size_t>, sizeof...(Is)> {
     return {{ c(Is)... }};
 }
 
 template<size_t N, typename C> constexpr auto SkMakeArray(C c)
--> std::array<std::result_of_t<C(std::size_t)>, N> {
+-> std::array<std::invoke_result_t<C, std::size_t>, N> {
     return SkMakeArrayFromIndexSequence(c, std::make_index_sequence<N>{});
 }
 
