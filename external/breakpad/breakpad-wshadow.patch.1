diff -ur breakpad.org/src/client/linux/handler/minidump_descriptor.h breakpad/src/client/linux/handler/minidump_descriptor.h
--- breakpad.org/src/client/linux/handler/minidump_descriptor.h	2017-07-02 23:41:23.627841692 +0200
+++ breakpad/src/client/linux/handler/minidump_descriptor.h	2017-07-02 23:46:03.105036917 +0200
@@ -57,27 +57,27 @@
         address_within_principal_mapping_(0),
         skip_dump_if_principal_mapping_not_referenced_(false) {}
 
-  explicit MinidumpDescriptor(const string& directory)
+  explicit MinidumpDescriptor(const string& dir)
       : mode_(kWriteMinidumpToFile),
         fd_(-1),
-        directory_(directory),
+        directory_(dir),
         c_path_(NULL),
         size_limit_(-1),
         address_within_principal_mapping_(0),
         skip_dump_if_principal_mapping_not_referenced_(false),
         sanitize_stacks_(false) {
-    assert(!directory.empty());
+    assert(!dir.empty());
   }
 
-  explicit MinidumpDescriptor(int fd)
+  explicit MinidumpDescriptor(int file_descriptor)
       : mode_(kWriteMinidumpToFd),
-        fd_(fd),
+        fd_(file_descriptor),
         c_path_(NULL),
         size_limit_(-1),
         address_within_principal_mapping_(0),
         skip_dump_if_principal_mapping_not_referenced_(false),
         sanitize_stacks_(false) {
-    assert(fd != -1);
+    assert(file_descriptor != -1);
   }
 
   explicit MinidumpDescriptor(const MicrodumpOnConsole&)
@@ -116,22 +116,22 @@
     return address_within_principal_mapping_;
   }
   void set_address_within_principal_mapping(
-      uintptr_t address_within_principal_mapping) {
-    address_within_principal_mapping_ = address_within_principal_mapping;
+      uintptr_t address_within_principal_map) {
+    address_within_principal_mapping_ = address_within_principal_map;
   }
 
   bool skip_dump_if_principal_mapping_not_referenced() {
     return skip_dump_if_principal_mapping_not_referenced_;
   }
   void set_skip_dump_if_principal_mapping_not_referenced(
-      bool skip_dump_if_principal_mapping_not_referenced) {
+      bool skip_dump_if_principal_mapping_not_ref) {
     skip_dump_if_principal_mapping_not_referenced_ =
-        skip_dump_if_principal_mapping_not_referenced;
+        skip_dump_if_principal_mapping_not_ref;
   }
 
   bool sanitize_stacks() const { return sanitize_stacks_; }
-  void set_sanitize_stacks(bool sanitize_stacks) {
-    sanitize_stacks_ = sanitize_stacks;
+  void set_sanitize_stacks(bool sanitize_stack) {
+    sanitize_stacks_ = sanitize_stack;
   }
 
   MicrodumpExtraInfo* microdump_extra_info() {
diff -ur breakpad.org/src/client/linux/minidump_writer/linux_dumper.h breakpad/src/client/linux/minidump_writer/linux_dumper.h
--- breakpad.org/src/client/linux/minidump_writer/linux_dumper.h	2017-07-02 23:41:23.631841825 +0200
+++ breakpad/src/client/linux/minidump_writer/linux_dumper.h	2017-07-02 23:47:44.844385347 +0200
@@ -171,15 +171,15 @@
                                    wasteful_vector<uint8_t>& identifier);
 
   uintptr_t crash_address() const { return crash_address_; }
-  void set_crash_address(uintptr_t crash_address) {
-    crash_address_ = crash_address;
+  void set_crash_address(uintptr_t crash_addr) {
+    crash_address_ = crash_addr;
   }
 
   int crash_signal() const { return crash_signal_; }
-  void set_crash_signal(int crash_signal) { crash_signal_ = crash_signal; }
+  void set_crash_signal(int crash_sig) { crash_signal_ = crash_sig; }
 
   pid_t crash_thread() const { return crash_thread_; }
-  void set_crash_thread(pid_t crash_thread) { crash_thread_ = crash_thread; }
+  void set_crash_thread(pid_t thread) { crash_thread_ = thread; }
 
   // Concatenates the |root_prefix_| and |mapping| path. Writes into |path| and
   // returns true unless the string is too long.
