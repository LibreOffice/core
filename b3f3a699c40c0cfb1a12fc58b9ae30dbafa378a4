{
  "comments": [
    {
      "key": {
        "uuid": "fa6399be_cea7f54d",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-01T09:42:45Z",
      "side": 1,
      "message": "this could work better as assert, since it\u0027s apparently a bug if endListening isn\u0027t called between 2 startListening calls",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6895a0_b9785f91",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1001305
      },
      "writtenOn": "2016-09-02T08:39:31Z",
      "side": 1,
      "message": "Is \"assert(m_pNotifier \u003d\u003d nullptr)\" enough for this type of change?",
      "parentUuid": "fa6399be_cea7f54d",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6895a0_79b6c73e",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1001305
      },
      "writtenOn": "2016-09-02T09:15:02Z",
      "side": 1,
      "message": "Also, if we use \"assert\" what happens to the second and third arguments, namely: \"accessibility\" and \"called more than once\". Do we also omit them?",
      "parentUuid": "da6895a0_b9785f91",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6895a0_b9085f93",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-02T15:13:59Z",
      "side": 1,
      "message": "the \"area\" parameter can simply be omitted.\n\nthe assert does not have a second parameter for a message,  but there is a trick to give it a message anyway:\n\nyou can write \u0027assert( ... \u0026\u0026 \"message\")\u0027 and the string literal will evaluate to \"true\" so it is effectively the same condition but the message will be printed if it fails!\n\noften it is very obvious what is being checked so the message is superfluous, for example when a pointer is being checked that it is not null and dereferenced in the next line.\n\nbut in this case i\u0027m not so sure, perhaps it\u0027s obvious if you look at endListening or perhaps it\u0027s not obvious because you have to look at endListening :)\n\nso i\u0027ll leave it up to you to decide if it makes sense to include a message here.",
      "parentUuid": "da6895a0_79b6c73e",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6399be_ee62f915",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-01T09:42:45Z",
      "side": 1,
      "message": "same here",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6895a0_39652fe1",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1001305
      },
      "writtenOn": "2016-09-02T09:15:02Z",
      "side": 1,
      "message": "Also, if we use \"assert\" what happens to the second and third arguments, namely: \"accessibility\" and \"called more than once\". Do we also omit them?",
      "parentUuid": "fa6399be_ee62f915",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6399be_0e680df5",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-01T09:42:45Z",
      "side": 1,
      "message": "you can simplify this, no need to further encode rEx.Message which is already OUString",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6895a0_19686bba",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 284,
      "author": {
        "id": 1001305
      },
      "writtenOn": "2016-09-02T09:15:02Z",
      "side": 1,
      "message": "I did as you instructed but the compiler does not seem to like it (type mismatch errors). Any further suggestions?",
      "parentUuid": "fa6399be_0e680df5",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6895a0_f9801749",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 285,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2016-09-02T09:37:28Z",
      "side": 1,
      "message": "...and drop the \"\\n\"; SAL_INFO always terminates its output with a newline",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6399be_2e6dd104",
        "filename": "accessibility/source/extended/textwindowaccessibility.cxx",
        "patchSetId": 4
      },
      "lineNbr": 2005,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-01T09:42:45Z",
      "side": 1,
      "message": "this sounds like it wants to be \"assert\"",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6399be_8e741dd0",
        "filename": "animations/source/animcore/animcore.cxx",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-01T09:42:45Z",
      "side": 1,
      "message": "given the usage of mnNodeType as an index this should be \"assert\"",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6399be_ae81e191",
        "filename": "basegfx/source/polygon/b2dsvgpolypolygon.cxx",
        "patchSetId": 4
      },
      "lineNbr": 624,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2016-09-01T09:42:45Z",
      "side": 1,
      "message": "i think it\u0027s enough to have one of these messages, perhaps the second one since it\u0027s more informative, but as a SAL_WARN",
      "revId": "b3f3a699c40c0cfb1a12fc58b9ae30dbafa378a4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}