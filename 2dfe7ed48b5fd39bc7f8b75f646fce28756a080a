{
  "comments": [
    {
      "key": {
        "uuid": "7f96bb07_04aefa2d",
        "filename": "vcl/source/bitmap/BitmapScaleSuperFilter.cxx",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2019-04-13T06:14:52Z",
      "side": 1,
      "message": "MAP_PERCISION -\u003e MAP_PRECISION",
      "revId": "2dfe7ed48b5fd39bc7f8b75f646fce28756a080a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f96bb07_64625e19",
        "filename": "vcl/source/bitmap/BitmapScaleSuperFilter.cxx",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2019-04-13T06:14:52Z",
      "side": 1,
      "message": "if you care about cache-efficiency in this algorithm, might be an idea to merge these into arrays, one for X and one Y, e.g.\n   std::vector\u003cstd::pair\u003clong,BilinearWeightType\u003e\u003e\nsince the I and the F are accessed together",
      "revId": "2dfe7ed48b5fd39bc7f8b75f646fce28756a080a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}