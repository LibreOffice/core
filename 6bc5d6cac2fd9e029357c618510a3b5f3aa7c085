{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9901881e_07951131",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-11-29T09:20:56Z",
      "side": 1,
      "message": "At least for salhelper::Thread::launch (part of the stable URE interface) I think the claim that generally \"the rethrow will crash the process anyway\" is unfounded.",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bf8720b_f35c4998",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2021-12-01T07:59:03Z",
      "side": 1,
      "message": "good point, revert this part with\n  https://gerrit.libreoffice.org/c/core/+/126167",
      "parentUuid": "9901881e_07951131",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de640caa_337beaf3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-01T08:08:46Z",
      "side": 1,
      "message": "Any reason not to do\n  Nov 29 11:52:42 \u003cllunak\u003e\tnoelgrandin: why don\u0027t you change those rethrows to a destructor that does whatever that block is doing?\n  Nov 29 11:53:03 \u003cnoelgrandin\u003e\tllunak, good idea",
      "parentUuid": "7bf8720b_f35c4998",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d17890b_5e3e272b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2021-12-01T08:19:15Z",
      "side": 1,
      "message": "Oh feel free to make that change if you think it\u0027s worthwhile, I\u0027ve got enough other stuff on my plate right now :-)",
      "parentUuid": "de640caa_337beaf3",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f903c491_e84aa5e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-01T08:51:28Z",
      "side": 1,
      "message": "then why not just revert this wholesale",
      "parentUuid": "4d17890b_5e3e272b",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "071fffd2_e682a179",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2021-12-01T08:58:10Z",
      "side": 1,
      "message": "because the original rationale still stands - to wit - making it easier to debug problems when jenkins has a crash, we can see the whole stack leading all the way to the point that actually raised an exception.",
      "parentUuid": "f903c491_e84aa5e1",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c011195_07c3d4f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-01T09:02:26Z",
      "side": 1,
      "message": "...in code that never caused such a Jenkins crash?  Really, I\u0027m having a hard time understanding how you found time to make this just-in-case drive-by change, which leads to a discussion of how this change is sub-optimal, and then claim you don\u0027t have time to improve it.",
      "parentUuid": "071fffd2_e682a179",
      "revId": "6bc5d6cac2fd9e029357c618510a3b5f3aa7c085",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}