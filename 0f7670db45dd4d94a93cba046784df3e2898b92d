{
  "comments": [
    {
      "key": {
        "uuid": "2e778892_35f8eb1e",
        "filename": "basic/qa/vba_tests/strconv.vb",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-07-22T21:51:26Z",
      "side": 1,
      "message": "I\u0027m not sure this is correct. StrConv does locale-specific conversion \"to the default code page of the system\" and \"Not available on the Macintosh\". The result would be rightfully different depending on the thread encoding (e.g., utf-8). On Russian Windows it\u0027s 8, because thread encoding is Win-1252, and non-Win1252 characters become question marks.\n\nStrConv (SbRtl_StrConv) does not use the third argument (LCID), which could be useful here to not depend on system \"codepage\"...",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "0f7670db45dd4d94a93cba046784df3e2898b92d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17f21de6_9ceb769e",
        "filename": "basic/qa/vba_tests/strconv.vb",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-07-22T21:58:32Z",
      "side": 1,
      "message": "I guess on Windows with language supporting these characters it would also be 8, because its 8-bit codepage would include them. On Linux with UTF-8, it\u0027s normal that they become 14, and that doesn\u0027t need fixing; by the way, some day Windows may get UTF-8 and non-experimental feature (it is already available as experimental).\n\nSo unless you make the test system-independent (which implies implementing third argument), this is gonna fail on any non-UTF8 system (even Linux).",
      "parentUuid": "2e778892_35f8eb1e",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "0f7670db45dd4d94a93cba046784df3e2898b92d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1974d075_c203f292",
        "filename": "basic/qa/vba_tests/strconv.vb",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2020-07-22T22:02:12Z",
      "side": 1,
      "message": "Should we just removed that assert then? it has been commented out since the day it was introduced -\u003e https://cgit.freedesktop.org/libreoffice/core/commit/?id\u003d76c3184813c97224cfd1e114ec13796e1da040d5",
      "parentUuid": "17f21de6_9ceb769e",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "0f7670db45dd4d94a93cba046784df3e2898b92d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df611c1b_d471b247",
        "filename": "basic/qa/vba_tests/strconv.vb",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-07-22T22:07:27Z",
      "side": 1,
      "message": "Yes this assert does not make sense, and asserting individual bytes too. But even without it, you won\u0027t make the test pass str -\u003e vbFromUnicode -\u003e vbUnicode -\u003e str, because as I said, e.g. on Russian edition of Windows, the conversion \"from Unicode to bytes\" will convert all but last 3 characters into \"?\", and then converting that back will not result in initial string.\n\nIf you were able to define into/from which encoding to convert (third parameter), you would use it here to test some defined scenario...",
      "parentUuid": "1974d075_c203f292",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "0f7670db45dd4d94a93cba046784df3e2898b92d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd53dc80_3b334ff9",
        "filename": "basic/qa/vba_tests/strconv.vb",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2020-07-22T22:16:51Z",
      "side": 1,
      "message": "You are talking about\n\n    x \u003d StrConv(\"ÉÏº£ÊÐABC\", vbFromUnicode)\n    retStr \u003d StrConv(x, vbUnicode)\n    TestLog_ASSERT retStr \u003d \"ÉÏº£ÊÐABC\", \"Converts the string to Unicode: \" \u0026 retStr\n\nright ?",
      "parentUuid": "df611c1b_d471b247",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "0f7670db45dd4d94a93cba046784df3e2898b92d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f415a4_c38c8dfd",
        "filename": "basic/qa/vba_tests/strconv.vb",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-07-22T22:26:40Z",
      "side": 1,
      "message": "Yes...",
      "parentUuid": "dd53dc80_3b334ff9",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "0f7670db45dd4d94a93cba046784df3e2898b92d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}