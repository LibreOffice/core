{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "787b1df1_99ad512a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2022-02-01T15:09:17Z",
      "side": 1,
      "message": "Greetings for everyone there!\n\nThis patch cause the assert what have Caol√°n written. Today i reviewed the situation and i find the following:\nThe bugdoc were made with LibreOffice 7.1A+ where this patch was missing (this have been submitted to 7.2 master and backported to 7.1.2). So when creating, -- I think -- the textbox fell apart (the drawing and the frame had different paragraph for its anchor) so the record of the track changes went wrong. (The drawing has a good node for its anchor, it is in the redline section but the frame is outside the redline part)\nIn LO 7.2 this patch were introduced. When someone tries to save the original bugdoc to odt this patch tries to sync the anchor of the textframe to the drawing, but due to the change tracking the sync fails because the assert fires. The assert have to fire because the nodes are different normal text node versus redline text node.\nTo ensure about that what i written, just turn of the change tracking during the saving and it will not assert.\nHow to solve is a good question. Maybe disabling the sync in case of different type of nodes (in this case normal vs redline) or anything else what is better and you suggest will welcome.\nSorry for the long description.",
      "revId": "493a916a3113e877835c9bc7c93faef0d29f9a33",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2ae791d_ec2644b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2022-02-01T15:33:05Z",
      "side": 1,
      "message": "There is a way to solve this. soon i make a patch for it if accepted.",
      "revId": "493a916a3113e877835c9bc7c93faef0d29f9a33",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26a7337_f87287a3",
        "filename": "sw/source/core/text/porfly.cxx",
        "patchSetId": 8
      },
      "lineNbr": 378,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2022-02-01T15:11:46Z",
      "side": 1,
      "message": "this call starts the avalanche what lead to assert. Should there i put a condition for checking the node type of the content anchors?",
      "range": {
        "startLine": 378,
        "startChar": 12,
        "endLine": 378,
        "endChar": 52
      },
      "revId": "493a916a3113e877835c9bc7c93faef0d29f9a33",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16884477_c8b04651",
        "filename": "sw/source/core/text/porfly.cxx",
        "patchSetId": 8
      },
      "lineNbr": 378,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2022-02-01T15:33:05Z",
      "side": 1,
      "message": "adding a the following condition may help:\nif (aNewTxBxAnchor.GetContentAnchor()-\u003enNode.GetNode().IsInRedlines() \u003d\u003d pShape-\u003eGetAnchor().GetContentAnchor()-\u003enNode.GetNode().IsInRedlines() )\n...",
      "parentUuid": "d26a7337_f87287a3",
      "range": {
        "startLine": 378,
        "startChar": 12,
        "endLine": 378,
        "endChar": 52
      },
      "revId": "493a916a3113e877835c9bc7c93faef0d29f9a33",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51897d72_8bbe490b",
        "filename": "sw/source/core/text/porfly.cxx",
        "patchSetId": 8
      },
      "lineNbr": 378,
      "author": {
        "id": 1000135
      },
      "writtenOn": "2022-02-01T16:09:13Z",
      "side": 1,
      "message": "I appreciate you looking into this, thanks.",
      "parentUuid": "16884477_c8b04651",
      "range": {
        "startLine": 378,
        "startChar": 12,
        "endLine": 378,
        "endChar": 52
      },
      "revId": "493a916a3113e877835c9bc7c93faef0d29f9a33",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e60e8c53_c0a5f6eb",
        "filename": "sw/source/core/text/porfly.cxx",
        "patchSetId": 8
      },
      "lineNbr": 378,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2022-02-02T11:54:50Z",
      "side": 1,
      "message": "Unfortunately my suggestion is not enough to fix that. When the assert fires, the fly frame (text box) and the drawing is in the normal node section, but in different para, the redline section is used only if the change tracking is hidden (and no assert). So that condition will not be false that case when the assert fires.\nWhen i written that suggestion that was only tested on a branch where there were more other modification, if i test it with the master, the problem still present. That branch where i tried, soon will be uploaded but that cannot be merged because there is an other assert, what fires with an other document. If you want me i can cc you or put as reviewer for that patch, just write back. Thanks.",
      "parentUuid": "51897d72_8bbe490b",
      "range": {
        "startLine": 378,
        "startChar": 12,
        "endLine": 378,
        "endChar": 52
      },
      "revId": "493a916a3113e877835c9bc7c93faef0d29f9a33",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}