/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * 
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#include "macros.inc"

#ifndef SYSTEM_CLUCENE
File gid_File_Lib_CLucene
    PACKED_LIB_FILE_BODY;
  #ifdef UNX
    Name = STRING(CONCAT2(libclucene,UNXSUFFIX));
  #else
    Name = "clucene.dll";
  #endif
End
#endif

#if defined _MSC_VER

File gid_File_Lib_Cli_Oootypes_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY);
    Name = "cli_oootypes.dll";
    Dir = gid_Brand_Dir_Program;
    Assemblyname = "cli_oootypes";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_OOOTYPES_NEW_VERSION}";
    Culture = "neutral";
    Attributes = "0";
    ProcessorArchitecture = "MSIL";
End

#endif

#if defined _MSC_VER
File gid_File_Lib_Policy_Cli_Oootypes_Assembly
    TXT_FILE_BODY;
    Styles = (PACKED, ASSEMBLY);
    Name = "${CLI_OOOTYPES_POLICY_ASSEMBLY}.dll";
    Dir = gid_Brand_Dir_Program;
    Assemblyname = "${CLI_OOOTYPES_POLICY_ASSEMBLY}";
    PublicKeyToken = "ce2cb7e279207b9e";
    Version = "${CLI_OOOTYPES_POLICY_VERSION}";
    Culture = "neutral";
    Attributes = "0";
    ProcessorArchitecture = "MSIL";
End

#endif

#if defined _MSC_VER

File gid_File_Lib_Policy_Cli_Oootypes_Config
    TXT_FILE_BODY;
    Styles = (PACKED, ASSIGNCOMPOMENT);
    Name = "cli_oootypes.config";
    Dir = gid_Brand_Dir_Program;
    AssignComponent = gid_File_Lib_Policy_Cli_Oootypes_Assembly;
End

#endif

#ifndef SYSTEM_CURL

File gid_File_Lib_Curl
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "curl.filelist";
End

#endif

#if defined UNX && ! defined MACOSX
#ifdef ENABLE_TDE
File gid_File_Bin_TdeFilePicker
    BIN_FILE_BODY;
    Styles = (PACKED);
    Dir = gid_Brand_Dir_Program;
    Name = "tdefilepicker";
End
#endif

#ifdef ENABLE_KDE
File gid_File_Bin_KdeFilePicker
    BIN_FILE_BODY;
    Styles = (PACKED);
    Dir = gid_Brand_Dir_Program;
    Name = "kdefilepicker";
End
#endif

#ifdef ENABLE_GTK
File gid_File_Bin_XidFullscreen
    BIN_FILE_BODY;
    Styles = (PACKED);
    Dir = gid_Brand_Dir_Program;
    Name = "xid-fullscreen-on-all-monitors";
End
#endif

#endif

#ifdef MACOSX
#ifndef X86_64
File gid_File_Lib_avmediaQuickTime
	PACKED_LIB_FILE_BODY;
	Name = LIBNAME(avmediaQuickTime);
End
#endif
#endif

#ifndef SYSTEM_LCMS2

File gid_File_Lib_Lcms2
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "lcms2.filelist";
End

#endif

#ifdef NEED_CAIRO

File gid_File_Lib_Cairo
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "cairo.filelist";
End

#ifndef WNT

File gid_File_Lib_Pixman
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "pixman.filelist";
End

#endif

#endif

#ifndef SYSTEM_ICU

File gid_File_Lib_Icudata
    PACKED_LIB_FILE_BODY;
  #ifdef UNX
    Name = STRING(CONCAT4(libicudata,UNXSUFFIX,.,ICU_MAJOR));
  #else
  #ifdef MSVC_PKG_DEBUG_RUNTIME
    Name = STRING(CONCAT3(icudtd,ICU_MAJOR,.dll));
  #else
    Name = STRING(CONCAT3(icudt,ICU_MAJOR,.dll));
  #endif // MSVC_PKG_DEBUG_RUNTIME
  #endif
End

File gid_File_Lib_Icui18n
    PACKED_LIB_FILE_BODY;
  #ifdef UNX
    Name = STRING(CONCAT4(libicui18n,UNXSUFFIX,.,ICU_MAJOR));
  #else
  #ifdef MSVC_PKG_DEBUG_RUNTIME
    Name = STRING(CONCAT3(icuind,ICU_MAJOR,.dll));
  #else
    Name = STRING(CONCAT3(icuin,ICU_MAJOR,.dll));
  #endif // MSVC_PKG_DEBUG_RUNTIME
  #endif
End

File gid_File_Lib_Icuuc
    PACKED_LIB_FILE_BODY;
  #ifdef UNX
    Name = STRING(CONCAT4(libicuuc,UNXSUFFIX,.,ICU_MAJOR));
  #else
  #ifdef MSVC_PKG_DEBUG_RUNTIME
    Name = STRING(CONCAT3(icuucd,ICU_MAJOR,.dll));
  #else
    Name = STRING(CONCAT3(icuuc,ICU_MAJOR,.dll));
  #endif // MSVC_PKG_DEBUG_RUNTIME
  #endif
End

#endif

#if defined(MACOSX)
File gid_File_Lib_Basebmp
    Name = LIBNAME(basebmp);
    PACKED_LIB_FILE_BODY;
End
#endif

#if defined UNX && ! defined MACOSX
STD_LIB_FILE( gid_File_Lib_BaseBmp, basebmp )
#endif

#if ! defined UNX
File gid_File_Lib_Sysdtrans
    PACKED_LIB_FILE_BODY;
    Name = "sysdtrans.dll";
End
#endif

#ifndef DISABLE_NEON
SPECIAL_LIB_FILE(gid_File_Lib_Ucpdav1,ucpdav1)
 #ifndef SYSTEM_NEON
   SPECIAL_LIB_FILE(gid_File_Lib_Neon,neon)
 #endif
#endif

#if !defined(ANDROID) && !defined(IOS) //FIXME: get nss&xmlsec building
//we need the nss libs for libxmlsec (or if the internal mozilla is enabled)
#ifndef SYSTEM_NSS
SPECIAL_LIB_FILE(gid_File_Lib_Freebl3,freebl3)
SPECIAL_LIB_FILE(gid_File_Lib_Nss3,nss3)
SPECIAL_LIB_FILE(gid_File_Lib_Nspr,nspr4)
SPECIAL_LIB_FILE(gid_File_Lib_Nssdbm3,nssdbm3)
SPECIAL_LIB_FILE(gid_File_Lib_Nssutil3,nssutil3)
SPECIAL_LIB_FILE(gid_File_Lib_Nssckbi,nssckbi)
SPECIAL_LIB_FILE(gid_File_Lib_Plc4,plc4)
SPECIAL_LIB_FILE(gid_File_Lib_Plds4,plds4)
SPECIAL_LIB_FILE(gid_File_Lib_Softokn3,softokn3)
SPECIAL_LIB_FILE(gid_File_Lib_Smime3,smime3)
#ifdef WNT
SPECIAL_LIB_FILE(gid_File_Lib_Sqlite3,sqlite3)
#else
#if !defined(MACOSX)
File gid_File_Lib_Sqlite3
    Name = SPECIAL_NAME(sqlite3);
    PACKED_LIB_FILE_BODY;
End
#endif //!defined(MACOSX)
#endif //WNT
SPECIAL_LIB_FILE(gid_File_Lib_Ssl3,ssl3)
#endif //SYSTEM_NSS

File gid_File_Lib_XSec_XmlSec
    PACKED_LIB_FILE_BODY;
    #ifdef UNX
        Name = STRING(CONCAT2(libxsec_xmlsec,UNXSUFFIX));
    #else
        Name = "xsec_xmlsec.dll";
    #endif
End

#endif

#ifndef SYSTEM_LIBXSLT
File gid_File_Lib_Xslt
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "libxslt.filelist";
End
File gid_File_Lib_eXslt
    PACKED_LIB_FILE_BODY;
  #ifdef UNX
    #ifdef MACOSX
       Name = STRING(CONCAT4(libexslt,.,0,UNXSUFFIX));
    #else
       Name = STRING(CONCAT4(libexslt,UNXSUFFIX,.,0));
    #endif
  #else
   #ifdef _gcc3
    Name = "libexslt-0.dll";
   #else
    Name = "libexslt.dll";
   #endif
  #endif
End
#endif

#ifdef WNT
File gid_File_Lib_LibXMLSec_xmlseccore
    PACKED_LIB_FILE_BODY;
    #ifdef _gcc3
      Name = "libxmlsec1.dll";
    #else
      Name = "libxmlsec.dll";
    #endif
End

#ifdef CROSS_COMPILING
File gid_File_Lib_LibXMLSec_xmlsecnss
    PACKED_LIB_FILE_BODY;
  #ifdef _gcc3
    Name = "libxmlsec1-nss.dll";
  #else
    Name = "libxmlsec-nss.dll";
  #endif
End
#else
File gid_File_Lib_LibXMLSec_xmlsecmscrypto
    PACKED_LIB_FILE_BODY;
  #ifdef _gcc3
    Name = "libxmlsec1-mscrypto.dll";
  #else
    Name = "libxmlsec-mscrypto.dll";
  #endif
End
#endif
#endif

#ifndef SYSTEM_OPENSSL
File gid_File_Lib_Openssl
    PACKED_LIB_FILE_BODY;
  #ifdef WNT
    Name = "ssleay32.dll";
  #endif
End
#endif

#ifndef SYSTEM_OPENSSL
File gid_File_Lib_Crypto
    PACKED_LIB_FILE_BODY;

	#ifdef WNT
	  Name = "libeay32.dll";
	#endif
End
#endif

#if defined WNT && !defined _gcc3 && defined WITH_MOZAB4WIN
        // see common_brand.scp gid_Brand_File_Lib_Msvcp80 and
        // gid_Brand_File_Lib_Msvcr80
File gid_File_Moz_Msvcp80
    LIB_FILE_BODY;
    Dir = SCP2_OOO_BIN_DIR;
    Name = SCP2_URE_DL_NORMAL("msvcp80");
    Styles = (PACKED);
End
File gid_File_Moz_Msvcr80
    LIB_FILE_BODY;
    Dir = SCP2_OOO_BIN_DIR;
    Name = SCP2_URE_DL_NORMAL("msvcr80");
    Styles = (PACKED);
End
File gid_File_Moz_Msvc80crt_Manifest
    BIN_FILE_BODY;
    Styles = (PACKED);
    Dir = gid_Brand_Dir_Program;
    Name = "Microsoft.VC80.CRT.manifest";
End
#endif

#ifndef SYSTEM_REDLAND
File gid_File_Lib_Raptor
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "raptor.filelist";
End

File gid_File_Lib_Rasqal
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "rasqal.filelist";
End

File gid_File_Lib_Rdf
    LIB_FILE_BODY;
    Styles = (FILELIST);
    Dir = FILELIST_DIR;
    Name = "redland.filelist";
End
#endif // SYSTEM_REDLAND

