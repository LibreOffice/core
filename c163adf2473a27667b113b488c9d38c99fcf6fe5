{
  "comments": [
    {
      "key": {
        "uuid": "9ad45d7e_a8c8c575",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1395,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Given that many strings may be concatenated, specifically if a svDoubleRef is involved, rather use an OUStringBuffer instead of an OUString and only at the end obtain the OUString to push.\n\nAlso, to be able to actually append the arguments to the buffer instead of inserting them, a trick may be used: reverse the order parameters on the stack before popping them. So actually reorder parameters from pStack[sp-nParamCount] to pStack[sp-1]",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_f32aaee6",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1395,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-05T11:18:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad45d7e_a8c8c575",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_08b911ea",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1437,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Initialization of nRefInList must be outside of the while(nParamCount--\u003e0) loop to make this work correctly. See for example implementation of ScInterpreter::ScMin()",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_d32faaf4",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1437,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-05T11:18:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad45d7e_08b911ea",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_6e5ed546",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1437,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "Also moved in ScInterpreter::ScTextJoin_MS() - twice.",
      "parentUuid": "9ad45d7e_d32faaf4",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_48cb0973",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1460,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Instead of constructing an ScAddress each iteration I\u0027d rather contruct it outside of both loops and then use ScAddress::SetRow() and ScAddress::SetCol() inside the loops.",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_33356646",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1460,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-05T11:18:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad45d7e_48cb0973",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_8e55091f",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1460,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "Also changed in ScInterpreter::ScTextJoin_MS() - twice.",
      "parentUuid": "9ad45d7e_48cb0973",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_88c5015d",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1478,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Missing are svMatrix and svExternalDoubleRef cases.",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_0e81194b",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1478,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad45d7e_88c5015d",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_68cecd84",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1484,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Manually checking for nGlobalError and pushing an error in that case is unnecessary, all push operations already check for nGlobalError and push an error if it is set. See for example implementation of ScInterpreter::PushString() in interpr4.cxx where if(!IfErrorPushError()) is called first.",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_f3110eb1",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1484,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-05T11:18:50Z",
      "side": 1,
      "message": "Here I sense a problem:\nThere are 2 ScInterpreter::PushString functions; the one with an svl::SharedString\u0026 as argument uses IfErrorPushError(), but the one with OUString\u0026 as argument doesn\u0027t!\n\nShall I amend the code of ScInterpreter::PushString( OUString\u0026 ) in a separate patch before I resubmit the CONCAT/TEXTJOIN patch set?",
      "parentUuid": "9ad45d7e_68cecd84",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_33b6068b",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1484,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-07T13:38:33Z",
      "side": 1,
      "message": "ScInterpreter::PushString( const OUString\u0026 rStr ) calls ScInterpreter::PushString( const svl::SharedString\u0026 rString ) so all is fine :-)",
      "parentUuid": "9ad45d7e_f3110eb1",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_a876053c",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1546,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "For ranges Excel concatenates the elements column-wise if the reference is a full column, so this needs a different handling for that special case, see Example 1 of https://support.office.com/en-us/article/CONCAT-function-9b1a9a3f-94ff-41af-9736-694cbd6b4ca2?ui\u003den-US\u0026rs\u003den-US\u0026ad\u003dUS",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_aead6d8a",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1546,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "That is true for argument A:A, but what happens with argument A:B? I\u0027ve sent an xlsx for recalculation with Excel2016-Office365. It may take some time before I receive the results.\n\nAlso, when the reference is a single (full) column, the current does concatenate column-wise doesn\u0027t it? (nCol1\u003d\u003dnCol2, so the inner loop is only is done once for each row). Do you think (or even know) that checking for nCol1\u003d\u003dnCol2 and using a single loop -or an iterator- improves performance significantly?",
      "parentUuid": "9ad45d7e_a876053c",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_3b8898e7",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1546,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-12T13:51:16Z",
      "side": 1,
      "message": "Yes it would improve performance, but so far all iterators we have exclude empty cells. Excel does not skip empty cells here and includes them in the result, also adding a separator, I guess?\n\nI think for this we could need some ScHorizontalAreaIterator with an optimization to remember column positions, which could also be useful for CSV export and the like. But that is something for later.",
      "parentUuid": "9ad45d7e_aead6d8a",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_08b0f1f3",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1586,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "svMatrix and svExternalDoubleRef cases are missing.",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_ce4ee195",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1586,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad45d7e_08b0f1f3",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_08875110",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1633,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Really? Excel handles ranges as delimiter?\nThen this would also need svMatrix and svExternalDoubleRef handling, and likely a matrix would be needed instead of a vector.",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_ae2f2da0",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1633,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "I have added svMatrix and svExternalDoubleRef, but retained the vector. If the delimiter range has less elements than the number of strings to be concatenated - 1, Excel loops the delimiter range. See test file I sent you some time ago.",
      "parentUuid": "9ad45d7e_08875110",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_28ab358b",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1686,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-04-04T11:30:49Z",
      "side": 1,
      "message": "Use an OUStringBuffer instead of OUString to gain performance.",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad45d7e_8e2ce9ac",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1686,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2016-04-07T10:44:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad45d7e_28ab358b",
      "revId": "c163adf2473a27667b113b488c9d38c99fcf6fe5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}