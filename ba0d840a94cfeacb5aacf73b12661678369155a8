{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d49ffa70_406cec6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002210
      },
      "writtenOn": "2021-11-26T11:37:25Z",
      "side": 1,
      "message": "I think there will not be heap use after free, however leak can be there, i am afraid. Maybe a smart pointer can be the solution, i think.",
      "revId": "ba0d840a94cfeacb5aacf73b12661678369155a8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "217e5452_e67cfd18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-11-26T12:19:52Z",
      "side": 1,
      "message": "I have no idea about this code, but if you even think you\u0027re introducing a memory leak with this fix, I think it would be better to rather revert the problematic \u003chttps://gerrit.libreoffice.org/c/core/+/124657\u003e \"tdf#129183 sw: textboxes in group shapes - part 3\".",
      "parentUuid": "d49ffa70_406cec6d",
      "revId": "ba0d840a94cfeacb5aacf73b12661678369155a8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1799326e_23c7ab32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-11-28T14:11:58Z",
      "side": 1,
      "message": "...and this causes a failure in CppunitTest_chart2_export CPPUNIT_TEST_NAME\u003dChart2ExportTest::testShapeFollowedByChart,\n  \u003d\u003d2694663\u003d\u003dERROR: AddressSanitizer: heap-use-after-free on address 0x60b0008492f0 at pc 0x7ffa8a0155e6 bp 0x7ffd463795e0 sp 0x7ffd463795d8\n  READ of size 8 at 0x60b0008492f0 thread T0\n   #0 in std::_Hashtable\u003cSdrObject const*, std::pair\u003cSdrObject const* const, SwFrameFormat*\u003e, std::allocator\u003cstd::pair\u003cSdrObject const* const, SwFrameFormat*\u003e \u003e, std::__detail::_Select1st, std::equal_to\u003cSdrObject const*\u003e, std::hash\u003cSdrObject const*\u003e, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits\u003cfalse, false, true\u003e \u003e::size() const at /home/sbergman/gcc/trunk/inst/lib/gcc/x86_64-pc-linux-gnu/12.0.0/../../../../include/c++/12.0.0/bits/hashtable.h:640:16 (instdir/program/libswlo.so +0xd63f5e5)\n   #1 in std::_Hashtable\u003cSdrObject const*, std::pair\u003cSdrObject const* const, SwFrameFormat*\u003e, std::allocator\u003cstd::pair\u003cSdrObject const* const, SwFrameFormat*\u003e \u003e, std::__detail::_Select1st, std::equal_to\u003cSdrObject const*\u003e, std::hash\u003cSdrObject const*\u003e, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits\u003cfalse, false, true\u003e \u003e::empty() const at /home/sbergman/gcc/trunk/inst/lib/gcc/x86_64-pc-linux-gnu/12.0.0/../../../../include/c++/12.0.0/bits/hashtable.h:644:16 (instdir/program/libswlo.so +0xd655998)\n   #2 in std::__cxx1998::unordered_map\u003cSdrObject const*, SwFrameFormat*, std::hash\u003cSdrObject const*\u003e, std::equal_to\u003cSdrObject const*\u003e, std::allocator\u003cstd::pair\u003cSdrObject const* const, SwFrameFormat*\u003e \u003e \u003e::empty() const at /home/sbergman/gcc/trunk/inst/lib/gcc/x86_64-pc-linux-gnu/12.0.0/../../../../include/c++/12.0.0/bits/unordered_map.h:306:21 (instdir/program/libswlo.so +0xd636b08)\n   #3 in SwTextBoxNode::DelTextBox(SwFrameFormat*) at sw/source/core/doc/textboxhelper.cxx:1719:38 (instdir/program/libswlo.so +0xd629ec6)\n   #4 in SwFrameFormat::~SwFrameFormat() at sw/source/core/layout/atrfrm.cxx:2557:32 (instdir/program/libswlo.so +0xe51588f)\n   #5 in SwFlyFrameFormat::~SwFlyFrameFormat() at sw/source/core/layout/atrfrm.cxx:2922:1 (instdir/program/libswlo.so +0xe522493)\n   #6 in SwFlyFrameFormat::~SwFlyFrameFormat() at sw/source/core/layout/atrfrm.cxx:2913:1 (instdir/program/libswlo.so +0xe5225c8)\n   #7 in SwFrameFormats::DeleteAndDestroyAll(bool) at sw/source/core/doc/docfmt.cxx:2115:9 (instdir/program/libswlo.so +0xc7086a1)\n   #8 in SwDoc::~SwDoc() at sw/source/core/doc/docnew.cxx:565:28 (instdir/program/libswlo.so +0xc8f1391)\n   #9 in SwDoc::release() at sw/source/core/doc/doc.cxx:118:9 (instdir/program/libswlo.so +0xc2adde5)\n  \n  0x60b0008492f0 is located 64 bytes inside of 104-byte region [0x60b0008492b0,0x60b000849318)\n  freed by thread T0 here:\n   #0 in operator delete(void*, unsigned long) at /home/sbergman/github.com/llvm/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:164:3 (workdir/LinkTarget/Executable/cppunittester +0x335002)\n   #1 in SwFrameFormat::~SwFrameFormat() at sw/source/core/layout/atrfrm.cxx:2565:9 (instdir/program/libswlo.so +0xe515b91)\n   #2 in SwDrawFrameFormat::~SwDrawFrameFormat() at sw/source/core/layout/atrfrm.cxx:3456:1 (instdir/program/libswlo.so +0xe533306)\n   #3 in SwDrawFrameFormat::~SwDrawFrameFormat() at sw/source/core/layout/atrfrm.cxx:3454:1 (instdir/program/libswlo.so +0xe533418)\n   #4 in SwFrameFormats::DeleteAndDestroyAll(bool) at sw/source/core/doc/docfmt.cxx:2115:9 (instdir/program/libswlo.so +0xc7086a1)\n   #5 in SwDoc::~SwDoc() at sw/source/core/doc/docnew.cxx:565:28 (instdir/program/libswlo.so +0xc8f1391)\n   #6 in SwDoc::release() at sw/source/core/doc/doc.cxx:118:9 (instdir/program/libswlo.so +0xc2adde5)\n   #7 in rtl::Reference\u003cSwDoc\u003e::clear() at include/rtl/ref.hxx:196:19 (instdir/program/libswlo.so +0xd7e3686)\n   #8 in SwDocShell::RemoveLink() at sw/source/uibase/app/docshini.cxx:444:16 (instdir/program/libswlo.so +0x11f611b2)\n   #9 in SwDocShell::~SwDocShell() at sw/source/uibase/app/docshini.cxx:372:5 (instdir/program/libswlo.so +0x11f5ff6e)\n  \n  previously allocated by thread T0 here:\n   #0 in operator new(unsigned long) at /home/sbergman/github.com/llvm/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3 (workdir/LinkTarget/Executable/cppunittester +0x33439d)\n   #1 in SwTextBoxHelper::create(SwFrameFormat*, SdrObject*, bool) at sw/source/core/doc/textboxhelper.cxx:118:26 (instdir/program/libswlo.so +0xd5ec30c)\n   #2 in SwXShape::setPropertyValue(rtl::OUString const\u0026, com::sun::star::uno::Any const\u0026) at sw/source/core/unocore/unodraw.cxx:1165:25 (instdir/program/libswlo.so +0x105e8989)\n   #3 in SvxShape::setPropertyValues(com::sun::star::uno::Sequence\u003crtl::OUString\u003e const\u0026, com::sun::star::uno::Sequence\u003ccom::sun::star::uno::Any\u003e const\u0026) at svx/source/unodraw/unoshape.cxx:1807:23 (instdir/program/libsvxcorelo.so +0x7a4c6e8)\n   #4 in oox::PropertySet::setProperties(com::sun::star::uno::Sequence\u003crtl::OUString\u003e const\u0026, com::sun::star::uno::Sequence\u003ccom::sun::star::uno::Any\u003e const\u0026) at oox/source/helper/propertyset.cxx:82:25 (instdir/program/libooxlo.so +0x4555393)\n   #5 in oox::PropertySet::setProperties(oox::PropertyMap const\u0026) at oox/source/helper/propertyset.cxx:105:9 (instdir/program/libooxlo.so +0x4555c11)\n   #6 in oox::drawingml::Shape::createAndInsert(oox::core::XmlFilterBase\u0026, rtl::OUString const\u0026, oox::drawingml::Theme const*, com::sun::star::uno::Reference\u003ccom::sun::star::drawing::XShapes\u003e const\u0026, bool, bool, basegfx::B2DHomMatrix\u0026, oox::drawingml::FillProperties const\u0026, std::shared_ptr\u003coox::drawingml::Shape\u003e) at oox/source/drawingml/shape.cxx:1340:33 (instdir/program/libooxlo.so +0x3c20f0f)\n   #7 in oox::drawingml::Shape::addShape(oox::core::XmlFilterBase\u0026, oox::drawingml::Theme const*, com::sun::star::uno::Reference\u003ccom::sun::star::drawing::XShapes\u003e const\u0026, basegfx::B2DHomMatrix const\u0026, oox::drawingml::FillProperties const\u0026, std::__debug::map\u003crtl::OUString, std::shared_ptr\u003coox::drawingml::Shape\u003e, std::less\u003crtl::OUString\u003e, std::allocator\u003cstd::pair\u003crtl::OUString const, std::shared_ptr\u003coox::drawingml::Shape\u003e \u003e \u003e \u003e*, std::shared_ptr\u003coox::drawingml::Shape\u003e) at oox/source/drawingml/shape.cxx:281:41 (instdir/program/libooxlo.so +0x3c01e65)\n   #8 in oox::shape::ShapeContextHandler::getShape() at oox/source/shape/ShapeContextHandler.cxx:476:25 (instdir/program/libooxlo.so +0x4a2c6ec)\n   #9 in writerfilter::ooxml::OOXMLFastContextHandlerShape::sendShape(int) at writerfilter/source/ooxml/OOXMLFastContextHandler.cxx:1730:60 (instdir/program/libwriterfilterlo.so +0x29d3561)",
      "revId": "ba0d840a94cfeacb5aacf73b12661678369155a8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}