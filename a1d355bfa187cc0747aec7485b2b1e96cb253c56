{
  "comments": [
    {
      "key": {
        "uuid": "f39947b3_fd5f2c39",
        "filename": "svl/source/numbers/zforfind.cxx",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-02-19T19:12:57Z",
      "side": 1,
      "message": "this now ignores bForceFraction and consequently does something different when it is true?",
      "revId": "a1d355bfa187cc0747aec7485b2b1e96cb253c56",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05437f69_b7f8b0d5",
        "filename": "svl/source/numbers/zforfind.cxx",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-02-19T20:02:29Z",
      "side": 1,
      "message": "Yes, you are right. I actually hurried to test if it would fail my unit test because I\u0027m afraid it would have the same problem...",
      "parentUuid": "f39947b3_fd5f2c39",
      "revId": "a1d355bfa187cc0747aec7485b2b1e96cb253c56",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b7b8da5_50591f56",
        "filename": "svl/source/numbers/zforfind.cxx",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-02-20T06:11:02Z",
      "side": 1,
      "message": "You could certainly use stringToDouble for the non-bForceFraction case....",
      "parentUuid": "05437f69_b7f8b0d5",
      "revId": "a1d355bfa187cc0747aec7485b2b1e96cb253c56",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74cac69e_702124a3",
        "filename": "svl/source/numbers/zforfind.cxx",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-02-20T06:15:00Z",
      "side": 1,
      "message": "Sorry, don\u0027t follow you. The rtl::math::stringToDouble obviously has the same problem as the replaced code: https://ci.libreoffice.org/job/gerrit_linux_clang_dbgutil/53635/console (look for \"Value must be the nearest representation of decimal 0.0042\" message), so the unit test fails the same way. I suppose we need to adopt some performant yet correct implementation like https://github.com/achan001/dtoa-fast as an o3tl::from_chars until std::from_chars is available...",
      "parentUuid": "7b7b8da5_50591f56",
      "revId": "a1d355bfa187cc0747aec7485b2b1e96cb253c56",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}