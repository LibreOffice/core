{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8696ba61_2849b9ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-04-15T08:04:21Z",
      "side": 1,
      "message": "Hi Mike! Is it a problem to export the vba project always using the utf8 encoding? Unfortunately, I cannot test the old/new file in MS since it always produces some gibberish. Thank you!",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88d73e61_3450b64b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-04-15T08:04:36Z",
      "side": 1,
      "message": "Ofc unit test still missing.",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb4e18be_d3d426cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-04-15T08:49:41Z",
      "side": 1,
      "message": "\u003e Unfortunately, I cannot test the old/new file in MS since it always produces some gibberish.\n\nSorry, didn\u0027t get what you mean by that. Do you say that MS Office can\u0027t open such encoded VBA? Then it would be a showstopper, right?\n\nAFAIK, VBA UI doesn\u0027t allow you to use non-ASCII characters other than from current Windows codepage (which means, that at least the UI is using 8-bit codepage, not Unicode). How would VBA behave when reading the code, I don\u0027t know (I agree it would be best if it allowed UTF-8); but in case it fails, we could at least avoid hardcoding a single codepage, and try to re-use the codepage that was used when opening, or use LO locale for the codepage, or try to be smart and analyze the code itself (worst option - most error-prone without any predictability IMO).",
      "parentUuid": "8696ba61_2849b9ec",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e7bc40f_dbcf1c9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-04-15T09:05:22Z",
      "side": 1,
      "message": "I mean that I can open the file from the bug report in MS, but it doesn\u0027t show any of the characters (just question marks). After the save using the utf8 charset, I can open the file in MS as before, but it shows different characters (ïðîáà).",
      "parentUuid": "eb4e18be_d3d426cf",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a4c4a04_12b80557",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-04-15T09:26:22Z",
      "side": 1,
      "message": "I see now, thanks. You would need to set your Windows to Russian in intl.cpl (\"Change system locale\") to be able to test this in MS Office ...\n\nOK, I have tested the patch locally. Unfortunately, it looks like MS just ignores the value of PROJECTCODEPAGE, and simply reads all 8-bit strings as if they were in current system codepage. That means that after saving using your patch, opened in MS Excel, the code has this in its Module1:\n\n  Sub Macro1()\n    ActiveSheet.Cells(1, 1).Value \u003d \"Ð¿Ñ€Ð¾Ð±Ð°\"\n  End Sub\n\nwhere the look of the garbage in quotes is UTF-8-read-as-Win125* codepage (whichever your current Windows codepage is). Of course, we read it correctly...\n\nSo no, it won\u0027t work this way, unless you find some trick to write it as correct Unicode (I see exportUTF16String method there - can we possibly use it everywhere, or does VBA format not allow using UTF-16 everywhere?)...",
      "parentUuid": "5e7bc40f_dbcf1c9d",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcd78fb8_b8d70cdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-04-15T10:06:28Z",
      "side": 1,
      "message": "Tried to use it just for the source code in exportModuleStream, but no luck. So we have to remember the encoding from the input process,",
      "parentUuid": "0a4c4a04_12b80557",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4932595e_6177d068",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-04-15T10:19:03Z",
      "side": 1,
      "message": "\u003e I can open the file from the bug report in MS, but it doesn\u0027t show any of the characters (just question marks). After the save using the utf8 charset, I can open the file in MS as before, but it shows different characters (ïðîáà).\n\nReading this again, I am confused.\nIf you see question marks from the original file, that would mean that MS Office *did* read encoding information (from *somewhere*), and it knew that the *true* characters in the code are *not* representable in the current codepage, hence question marks.\n\nThis is different compared to *my* test result *after* saving using changeset 2 - where I saw \"Ð¿Ñ€Ð¾Ð±Ð°\", which was definitely the written UTF-8 byte sequence that was read by Excel 2016 *without* any encoding information taken into account at all (so it used Win-1251 to interpret the byte sequence).\n\n(It is confusing that you write \"After the save using the utf8 charset, I can open the file in MS as before, but it shows different characters (ïðîáà)\" - which is not what I see after the saving; but maybe that also depends on Excel version, and/or on the changeset you used for testing?)\n\nWithout that (ïðîáà), my gut feeling is that there is some *other* source of encoding information, beyond PROJECTCODEPAGE record, which is used by Excel (VBA) when parsing the file, and which we likely do not define ... ?",
      "parentUuid": "bcd78fb8_b8d70cdd",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c8b1935_e9d24d94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-04-15T10:32:40Z",
      "side": 1,
      "message": "Hm, could not find anything else to set the code page in the documentation. So, I would recommend to just remember the detected text encoding and saving it in the same encoding.\n\nCan I \"just\" extend the XVBACompatibility interface using [attribute] rtl_TextEncoding TextEncoding;?",
      "parentUuid": "4932595e_6177d068",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f27f535_b70e2b34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-04-15T10:56:30Z",
      "side": 1,
      "message": "No, but if needed, you can add XVBACompatibility2, which is based on XVBACompatibility plus adds something.\n\nHowever, why would you need that? Would it be better to just implement a property set in the class implementing XVBACompatibility, so that you could query for XPropertySet, and use the latter? Or maybe there\u0027s another way; please create a tentative patch, so that it\u0027s clear what problem we are solving.",
      "parentUuid": "0c8b1935_e9d24d94",
      "revId": "66f994a402c500551995f8eec5c391d6819b7776",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}