/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include "core_resource.hrc"
#include "formula/compiler.hrc"

// DO NOT CHANGE NAMES! Only add functions.
// These English names are used internally to store/load ODFF as of ODF v1.2
Resource RID_STRLIST_FUNCTION_NAMES_ENGLISH_ODFF
{
    String SC_OPCODE_IF { Text = "IF" ; };
    String SC_OPCODE_IF_ERROR { Text = "IFERROR" ; };
    String SC_OPCODE_IF_NA { Text = "IFNA" ; };
    String SC_OPCODE_CHOOSE { Text = "CHOOSE" ; };
    String SC_OPCODE_OPEN { Text = "(" ; };
    String SC_OPCODE_CLOSE { Text = ")" ; };
    // SC_OPCODE_TABLE_REF_... not supported in ODFF
    String SC_OPCODE_ARRAY_OPEN { Text = "{" ; };
    String SC_OPCODE_ARRAY_CLOSE { Text = "}" ; };
    String SC_OPCODE_ARRAY_ROW_SEP { Text = "|" ; };
    String SC_OPCODE_ARRAY_COL_SEP { Text = ";" ; };
    String SC_OPCODE_SEP { Text = ";" ; };
    String SC_OPCODE_PERCENT_SIGN { Text = "%" ; };
    String SC_OPCODE_ADD { Text = "+" ; };
    String SC_OPCODE_SUB { Text = "-" ; };
    String SC_OPCODE_MUL { Text = "*" ; };
    String SC_OPCODE_DIV { Text = "/" ; };
    String SC_OPCODE_AMPERSAND { Text = "&" ; };
    String SC_OPCODE_POW { Text = "^" ; };
    String SC_OPCODE_EQUAL { Text = "=" ; };
    String SC_OPCODE_NOT_EQUAL { Text = "<>" ; };
    String SC_OPCODE_LESS { Text = "<" ; };
    String SC_OPCODE_GREATER { Text = ">" ; };
    String SC_OPCODE_LESS_EQUAL { Text = "<=" ; };
    String SC_OPCODE_GREATER_EQUAL { Text = ">=" ; };
    String SC_OPCODE_AND { Text = "AND" ; };
    String SC_OPCODE_OR { Text = "OR" ; };
    String SC_OPCODE_XOR { Text = "XOR" ; };
    String SC_OPCODE_INTERSECT { Text = "!" ; };
    String SC_OPCODE_UNION { Text = "~" ; };
    String SC_OPCODE_RANGE { Text = ":" ; };
    String SC_OPCODE_NOT { Text = "NOT" ; };
    String SC_OPCODE_NEG { Text = "NEG" ; };
    String SC_OPCODE_NEG_SUB { Text = "-" ; };
    String SC_OPCODE_PI { Text = "PI" ; };
    String SC_OPCODE_RANDOM { Text = "RAND" ; };
    String SC_OPCODE_TRUE { Text = "TRUE" ; };
    String SC_OPCODE_FALSE { Text = "FALSE" ; };
    String SC_OPCODE_GET_ACT_DATE { Text = "TODAY" ; };
    String SC_OPCODE_GET_ACT_TIME { Text = "NOW" ; };
    String SC_OPCODE_NO_VALUE { Text = "NA" ; };
    String SC_OPCODE_CURRENT { Text = "ORG.OPENOFFICE.CURRENT" ; };
    String SC_OPCODE_DEG { Text = "DEGREES" ; };
    String SC_OPCODE_RAD { Text = "RADIANS" ; };
    String SC_OPCODE_SIN { Text = "SIN" ; };
    String SC_OPCODE_COS { Text = "COS" ; };
    String SC_OPCODE_TAN { Text = "TAN" ; };
    String SC_OPCODE_COT { Text = "COT" ; };
    String SC_OPCODE_ARC_SIN { Text = "ASIN" ; };
    String SC_OPCODE_ARC_COS { Text = "ACOS" ; };
    String SC_OPCODE_ARC_TAN { Text = "ATAN" ; };
    String SC_OPCODE_ARC_COT { Text = "ACOT" ; };
    String SC_OPCODE_SIN_HYP { Text = "SINH" ; };
    String SC_OPCODE_COS_HYP { Text = "COSH" ; };
    String SC_OPCODE_TAN_HYP { Text = "TANH" ; };
    String SC_OPCODE_COT_HYP { Text = "COTH" ; };
    String SC_OPCODE_ARC_SIN_HYP { Text = "ASINH" ; };
    String SC_OPCODE_ARC_COS_HYP { Text = "ACOSH" ; };
    String SC_OPCODE_ARC_TAN_HYP { Text = "ATANH" ; };
    String SC_OPCODE_ARC_COT_HYP { Text = "ACOTH" ; };
    String SC_OPCODE_COSECANT { Text = "CSC" ; };
    String SC_OPCODE_SECANT { Text = "SEC" ; };
    String SC_OPCODE_COSECANT_HYP { Text = "CSCH" ; };
    String SC_OPCODE_SECANT_HYP { Text = "SECH" ; };
    String SC_OPCODE_EXP { Text = "EXP" ; };
    String SC_OPCODE_LN { Text = "LN" ; };
    String SC_OPCODE_SQRT { Text = "SQRT" ; };
    String SC_OPCODE_FACT { Text = "FACT" ; };
    String SC_OPCODE_GET_YEAR { Text = "YEAR" ; };
    String SC_OPCODE_GET_MONTH { Text = "MONTH" ; };
    String SC_OPCODE_GET_DAY { Text = "DAY" ; };
    String SC_OPCODE_GET_HOUR { Text = "HOUR" ; };
    String SC_OPCODE_GET_MIN { Text = "MINUTE" ; };
    String SC_OPCODE_GET_SEC { Text = "SECOND" ; };
    String SC_OPCODE_PLUS_MINUS { Text = "SIGN" ; };
    String SC_OPCODE_ABS { Text = "ABS" ; };
    String SC_OPCODE_INT { Text = "INT" ; };
    String SC_OPCODE_PHI { Text = "PHI" ; };
    String SC_OPCODE_GAUSS { Text = "GAUSS" ; };
    String SC_OPCODE_IS_EMPTY { Text = "ISBLANK" ; };
    String SC_OPCODE_IS_STRING { Text = "ISTEXT" ; };
    String SC_OPCODE_IS_NON_STRING { Text = "ISNONTEXT" ; };
    String SC_OPCODE_IS_LOGICAL { Text = "ISLOGICAL" ; };
    String SC_OPCODE_TYPE { Text = "TYPE" ; };
    String SC_OPCODE_CELL { Text = "CELL" ; };
    String SC_OPCODE_IS_REF { Text = "ISREF" ; };
    String SC_OPCODE_IS_VALUE { Text = "ISNUMBER" ; };
    String SC_OPCODE_IS_FORMULA { Text = "ISFORMULA" ; };
    String SC_OPCODE_IS_NV { Text = "ISNA" ; };
    String SC_OPCODE_IS_ERR { Text = "ISERR" ; };
    String SC_OPCODE_IS_ERROR { Text = "ISERROR" ; };
    String SC_OPCODE_IS_EVEN { Text = "ISEVEN" ; };
    String SC_OPCODE_IS_ODD { Text = "ISODD" ; };
    String SC_OPCODE_N { Text = "N" ; };
    String SC_OPCODE_GET_DATE_VALUE { Text = "DATEVALUE" ; };
    String SC_OPCODE_GET_TIME_VALUE { Text = "TIMEVALUE" ; };
    String SC_OPCODE_CODE { Text = "CODE" ; };
    String SC_OPCODE_TRIM { Text = "TRIM" ; };
    String SC_OPCODE_UPPER { Text = "UPPER" ; };
    String SC_OPCODE_PROPER { Text = "PROPER" ; };
    String SC_OPCODE_LOWER { Text = "LOWER" ; };
    String SC_OPCODE_LEN { Text = "LEN" ; };
    String SC_OPCODE_T { Text = "T" ; };
    String SC_OPCODE_VALUE { Text = "VALUE" ; };
    String SC_OPCODE_CLEAN { Text = "CLEAN" ; };
    String SC_OPCODE_CHAR { Text = "CHAR" ; };
    String SC_OPCODE_JIS { Text = "JIS" ; };
    String SC_OPCODE_ASC { Text = "ASC" ; };
    String SC_OPCODE_UNICODE { Text = "UNICODE" ; };
    String SC_OPCODE_UNICHAR { Text = "UNICHAR" ; };
    String SC_OPCODE_LOG10 { Text = "LOG10" ; };
    String SC_OPCODE_EVEN { Text = "EVEN" ; };
    String SC_OPCODE_ODD { Text = "ODD" ; };
    String SC_OPCODE_STD_NORM_DIST { Text = "LEGACY.NORMSDIST" ; };
    String SC_OPCODE_STD_NORM_DIST_MS { Text = "COM.MICROSOFT.NORM.S.DIST" ; };
    String SC_OPCODE_FISHER { Text = "FISHER" ; };
    String SC_OPCODE_FISHER_INV { Text = "FISHERINV" ; };
    String SC_OPCODE_S_NORM_INV { Text = "LEGACY.NORMSINV" ; };
    String SC_OPCODE_S_NORM_INV_MS { Text = "COM.MICROSOFT.NORM.S.INV" ; };
    String SC_OPCODE_GAMMA_LN { Text = "GAMMALN" ; };
    String SC_OPCODE_GAMMA_LN_MS { Text = "COM.MICROSOFT.GAMMALN.PRECISE" ; };
    String SC_OPCODE_ERROR_TYPE { Text = "ORG.OPENOFFICE.ERRORTYPE" ; };
    String SC_OPCODE_ERROR_TYPE_ODF { Text = "ERROR.TYPE" ; };
    String SC_OPCODE_FORMULA { Text = "FORMULA"; };
    String SC_OPCODE_ARC_TAN_2 { Text = "ATAN2" ; };
    String SC_OPCODE_CEIL_MATH { Text = "COM.MICROSOFT.CEILING.MATH" ; };
    String SC_OPCODE_CEIL { Text = "CEILING" ; };
    String SC_OPCODE_CEIL_MS { Text = "COM.MICROSOFT.CEILING" ; };
    String SC_OPCODE_CEIL_PRECISE { Text = "COM.MICROSOFT.CEILING.PRECISE" ; };
    String SC_OPCODE_CEIL_ISO { Text = "COM.MICROSOFT.ISO.CEILING" ; };
    String SC_OPCODE_FLOOR { Text = "FLOOR" ; };
    String SC_OPCODE_FLOOR_MS { Text = "COM.MICROSOFT.FLOOR" ; };
    String SC_OPCODE_FLOOR_MATH { Text = "COM.MICROSOFT.FLOOR.MATH" ; };
    String SC_OPCODE_FLOOR_PRECISE { Text = "COM.MICROSOFT.FLOOR.PRECISE" ; };
    String SC_OPCODE_ROUND { Text = "ROUND" ; };
    String SC_OPCODE_ROUND_UP { Text = "ROUNDUP" ; };
    String SC_OPCODE_ROUND_DOWN { Text = "ROUNDDOWN" ; };
    String SC_OPCODE_TRUNC { Text = "TRUNC" ; };
    String SC_OPCODE_LOG { Text = "LOG" ; };
    String SC_OPCODE_POWER { Text = "POWER" ; };
    String SC_OPCODE_GCD { Text = "GCD" ; };
    String SC_OPCODE_LCM { Text = "LCM" ; };
    String SC_OPCODE_MOD { Text = "MOD" ; };
    String SC_OPCODE_SUM_PRODUCT { Text = "SUMPRODUCT" ; };
    String SC_OPCODE_SUM_SQ { Text = "SUMSQ" ; };
    String SC_OPCODE_SUM_X2MY2 { Text = "SUMX2MY2" ; };
    String SC_OPCODE_SUM_X2DY2 { Text = "SUMX2PY2" ; };
    String SC_OPCODE_SUM_XMY2 { Text = "SUMXMY2" ; };
    String SC_OPCODE_GET_DATE { Text = "DATE" ; };
    String SC_OPCODE_GET_TIME { Text = "TIME" ; };
    String SC_OPCODE_GET_DIFF_DATE { Text = "DAYS" ; };
    String SC_OPCODE_GET_DIFF_DATE_360 { Text = "DAYS360" ; };
    String SC_OPCODE_GET_DATEDIF { Text = "DATEDIF" ; };
    String SC_OPCODE_MIN { Text = "MIN" ; };
    String SC_OPCODE_MIN_A { Text = "MINA" ; };
    String SC_OPCODE_MAX { Text = "MAX" ; };
    String SC_OPCODE_MAX_A { Text = "MAXA" ; };
    String SC_OPCODE_SUM { Text = "SUM" ; };
    String SC_OPCODE_PRODUCT { Text = "PRODUCT" ; };
    String SC_OPCODE_AVERAGE { Text = "AVERAGE" ; };
    String SC_OPCODE_AVERAGE_A { Text = "AVERAGEA" ; };
    String SC_OPCODE_COUNT { Text = "COUNT" ; };
    String SC_OPCODE_COUNT_2 { Text = "COUNTA" ; };
    String SC_OPCODE_NPV { Text = "NPV" ; };
    String SC_OPCODE_IRR { Text = "IRR" ; };
    String SC_OPCODE_MIRR { Text = "MIRR" ; };
    String SC_OPCODE_ISPMT { Text = "ISPMT" ; };
    String SC_OPCODE_VAR { Text = "VAR" ; };
    String SC_OPCODE_VAR_A { Text = "VARA" ; };
    String SC_OPCODE_VAR_P { Text = "VARP" ; };
    String SC_OPCODE_VAR_P_A { Text = "VARPA" ; };
    String SC_OPCODE_VAR_P_MS { Text = "COM.MICROSOFT.VAR.P" ; };
    String SC_OPCODE_VAR_S { Text = "COM.MICROSOFT.VAR.S" ; };
    String SC_OPCODE_ST_DEV { Text = "STDEV" ; };
    String SC_OPCODE_ST_DEV_A { Text = "STDEVA" ; };
    String SC_OPCODE_ST_DEV_P { Text = "STDEVP" ; };
    String SC_OPCODE_ST_DEV_P_A { Text = "STDEVPA" ; };
    String SC_OPCODE_ST_DEV_P_MS { Text = "COM.MICROSOFT.STDEV.P" ; };
    String SC_OPCODE_ST_DEV_S { Text = "COM.MICROSOFT.STDEV.S" ; };
    String SC_OPCODE_B { Text = "BINOM.DIST.RANGE" ; };
    String SC_OPCODE_NORM_DIST { Text = "NORMDIST" ; };
    String SC_OPCODE_NORM_DIST_MS { Text = "COM.MICROSOFT.NORM.DIST" ; };
    String SC_OPCODE_EXP_DIST { Text = "EXPONDIST" ; };
    String SC_OPCODE_EXP_DIST_MS { Text = "COM.MICROSOFT.EXPON.DIST" ; };
    String SC_OPCODE_BINOM_DIST { Text = "BINOMDIST" ; };
    String SC_OPCODE_BINOM_DIST_MS { Text = "COM.MICROSOFT.BINOM.DIST" ; };
    String SC_OPCODE_POISSON_DIST { Text = "POISSON" ; };
    String SC_OPCODE_POISSON_DIST_MS { Text = "COM.MICROSOFT.POISSON.DIST" ; };
    String SC_OPCODE_COMBIN { Text = "COMBIN" ; };
    String SC_OPCODE_COMBIN_A { Text = "COMBINA" ; };
    String SC_OPCODE_PERMUT { Text = "PERMUT" ; };
    String SC_OPCODE_PERMUTATION_A { Text = "PERMUTATIONA" ; };
    String SC_OPCODE_PV { Text = "PV" ; };
    String SC_OPCODE_SYD { Text = "SYD" ; };
    String SC_OPCODE_DDB { Text = "DDB" ; };
    String SC_OPCODE_DB { Text = "DB" ; };
    String SC_OPCODE_VBD { Text = "VDB" ; };
    String SC_OPCODE_DURATION { Text = "PDURATION" ; };
    String SC_OPCODE_SLN { Text = "SLN" ; };
    String SC_OPCODE_PMT { Text = "PMT" ; };
    String SC_OPCODE_COLUMNS { Text = "COLUMNS" ; };
    String SC_OPCODE_ROWS { Text = "ROWS" ; };
    String SC_OPCODE_SHEETS { Text = "SHEETS" ; };
    String SC_OPCODE_COLUMN { Text = "COLUMN" ; };
    String SC_OPCODE_ROW { Text = "ROW" ; };
    String SC_OPCODE_SHEET { Text = "SHEET" ; };
    String SC_OPCODE_RRI { Text = "RRI" ; };
    String SC_OPCODE_FV { Text = "FV" ; };
    String SC_OPCODE_NPER { Text = "NPER" ; };
    String SC_OPCODE_RATE { Text = "RATE" ; };
    String SC_OPCODE_IPMT { Text = "IPMT" ; };
    String SC_OPCODE_PPMT { Text = "PPMT" ; };
    String SC_OPCODE_CUM_IPMT { Text = "CUMIPMT" ; };
    String SC_OPCODE_CUM_PRINC { Text = "CUMPRINC" ; };
    String SC_OPCODE_EFFECTIVE { Text = "EFFECT" ; };
    String SC_OPCODE_NOMINAL { Text = "NOMINAL" ; };
    String SC_OPCODE_SUB_TOTAL { Text = "SUBTOTAL" ; };
    String SC_OPCODE_DB_SUM { Text = "DSUM" ; };
    String SC_OPCODE_DB_COUNT { Text = "DCOUNT" ; };
    String SC_OPCODE_DB_COUNT_2 { Text = "DCOUNTA" ; };
    String SC_OPCODE_DB_AVERAGE { Text = "DAVERAGE" ; };
    String SC_OPCODE_DB_GET { Text = "DGET" ; };
    String SC_OPCODE_DB_MAX { Text = "DMAX" ; };
    String SC_OPCODE_DB_MIN { Text = "DMIN" ; };
    String SC_OPCODE_DB_PRODUCT { Text = "DPRODUCT" ; };
    String SC_OPCODE_DB_STD_DEV { Text = "DSTDEV" ; };
    String SC_OPCODE_DB_STD_DEV_P { Text = "DSTDEVP" ; };
    String SC_OPCODE_DB_VAR { Text = "DVAR" ; };
    String SC_OPCODE_DB_VAR_P { Text = "DVARP" ; };
    String SC_OPCODE_INDIRECT { Text = "INDIRECT" ; };
    String SC_OPCODE_ADDRESS { Text = "ADDRESS" ; };
    String SC_OPCODE_MATCH { Text = "MATCH" ; };
    String SC_OPCODE_COUNT_EMPTY_CELLS { Text = "COUNTBLANK" ; };
    String SC_OPCODE_COUNT_IF { Text = "COUNTIF" ; };
    String SC_OPCODE_SUM_IF { Text = "SUMIF" ; };
    String SC_OPCODE_AVERAGE_IF { Text = "AVERAGEIF" ; };
    String SC_OPCODE_SUM_IFS { Text = "SUMIFS" ; };
    String SC_OPCODE_AVERAGE_IFS { Text = "AVERAGEIFS" ; };
    String SC_OPCODE_COUNT_IFS { Text = "COUNTIFS" ; };
    String SC_OPCODE_LOOKUP { Text = "LOOKUP" ; };
    String SC_OPCODE_V_LOOKUP { Text = "VLOOKUP" ; };
    String SC_OPCODE_H_LOOKUP { Text = "HLOOKUP" ; };
    String SC_OPCODE_MULTI_AREA { Text = "ORG.OPENOFFICE.MULTIRANGE" ; };   // legacy for range list (union)
    String SC_OPCODE_OFFSET { Text = "OFFSET" ; };
    String SC_OPCODE_INDEX { Text = "INDEX" ; };
    String SC_OPCODE_AREAS { Text = "AREAS" ; };
    String SC_OPCODE_CURRENCY { Text = "DOLLAR" ; };
    String SC_OPCODE_REPLACE { Text = "REPLACE" ; };
    String SC_OPCODE_FIXED { Text = "FIXED" ; };
    String SC_OPCODE_FIND { Text = "FIND" ; };
    String SC_OPCODE_EXACT { Text = "EXACT" ; };
    String SC_OPCODE_LEFT { Text = "LEFT" ; };
    String SC_OPCODE_RIGHT { Text = "RIGHT" ; };
    String SC_OPCODE_SEARCH { Text = "SEARCH" ; };
    String SC_OPCODE_MID { Text = "MID" ; };
    String SC_OPCODE_LENB          { Text = "LENB" ; };
    String SC_OPCODE_RIGHTB        { Text = "RIGHTB" ; };
    String SC_OPCODE_LEFTB         { Text = "LEFTB" ; };
    String SC_OPCODE_MIDB          { Text = "MIDB" ; };
    String SC_OPCODE_TEXT { Text = "TEXT" ; };
    String SC_OPCODE_SUBSTITUTE { Text = "SUBSTITUTE" ; };
    String SC_OPCODE_REPT { Text = "REPT" ; };
    String SC_OPCODE_CONCAT { Text = "CONCATENATE" ; };
    String SC_OPCODE_CONCAT_MS { Text = "COM.MICROSOFT.CONCAT" ; };
    String SC_OPCODE_TEXTJOIN_MS { Text = "COM.MICROSOFT.TEXTJOIN" ; };
    String SC_OPCODE_IFS_MS { Text = "COM.MICROSOFT.IFS" ; };
    String SC_OPCODE_SWITCH_MS { Text = "COM.MICROSOFT.SWITCH" ; };
    String SC_OPCODE_MINIFS_MS { Text = "COM.MICROSOFT.MINIFS" ; };
    String SC_OPCODE_MAXIFS_MS { Text = "COM.MICROSOFT.MAXIFS" ; };
    String SC_OPCODE_MAT_VALUE { Text = "MVALUE" ; };
    String SC_OPCODE_MAT_DET { Text = "MDETERM" ; };
    String SC_OPCODE_MAT_INV { Text = "MINVERSE" ; };
    String SC_OPCODE_MAT_MULT { Text = "MMULT" ; };
    String SC_OPCODE_MAT_TRANS { Text = "TRANSPOSE" ; };
    String SC_OPCODE_MATRIX_UNIT { Text = "MUNIT" ; };
    String SC_OPCODE_BACK_SOLVER { Text = "ORG.OPENOFFICE.GOALSEEK" ; };
    String SC_OPCODE_HYP_GEOM_DIST { Text = "HYPGEOMDIST" ; };
    String SC_OPCODE_HYP_GEOM_DIST_MS { Text = "COM.MICROSOFT.HYPGEOM.DIST" ; };
    String SC_OPCODE_LOG_NORM_DIST { Text = "LOGNORMDIST" ; };
    String SC_OPCODE_LOG_NORM_DIST_MS { Text = "COM.MICROSOFT.LOGNORM.DIST" ; };
    String SC_OPCODE_T_DIST { Text = "LEGACY.TDIST" ; };
    String SC_OPCODE_T_DIST_2T { Text = "COM.MICROSOFT.T.DIST.2T" ; };
    String SC_OPCODE_T_DIST_MS { Text = "COM.MICROSOFT.T.DIST" ; };
    String SC_OPCODE_T_DIST_RT { Text = "COM.MICROSOFT.T.DIST.RT" ; };
    String SC_OPCODE_F_DIST { Text = "LEGACY.FDIST" ; };
    String SC_OPCODE_F_DIST_LT { Text = "FDIST" ; };
    String SC_OPCODE_F_DIST_RT { Text = "COM.MICROSOFT.F.DIST.RT" ; };
    String SC_OPCODE_CHI_DIST { Text = "LEGACY.CHIDIST" ; };
    String SC_OPCODE_CHI_DIST_MS { Text = "COM.MICROSOFT.CHISQ.DIST.RT" ; };
    String SC_OPCODE_WEIBULL { Text = "WEIBULL" ; };
    String SC_OPCODE_WEIBULL_MS { Text = "COM.MICROSOFT.WEIBULL.DIST" ; };
    String SC_OPCODE_NEG_BINOM_VERT { Text = "NEGBINOMDIST" ; };
    String SC_OPCODE_NEG_BINOM_DIST_MS { Text = "COM.MICROSOFT.NEGBINOM.DIST" ; };
    String SC_OPCODE_CRIT_BINOM { Text = "CRITBINOM" ; };
    String SC_OPCODE_BINOM_INV { Text = "COM.MICROSOFT.BINOM.INV" ; };
    String SC_OPCODE_KURT { Text = "KURT" ; };
    String SC_OPCODE_HAR_MEAN { Text = "HARMEAN" ; };
    String SC_OPCODE_GEO_MEAN { Text = "GEOMEAN" ; };
    String SC_OPCODE_STANDARD { Text = "STANDARDIZE" ; };
    String SC_OPCODE_AVE_DEV { Text = "AVEDEV" ; };
    String SC_OPCODE_SKEW { Text = "SKEW" ; };
    String SC_OPCODE_SKEWP   { Text = "SKEWP" ; };
    String SC_OPCODE_DEV_SQ { Text = "DEVSQ" ; };
    String SC_OPCODE_MEDIAN { Text = "MEDIAN" ; };
    String SC_OPCODE_MODAL_VALUE { Text = "MODE" ; };
    String SC_OPCODE_MODAL_VALUE_MS { Text = "COM.MICROSOFT.MODE.SNGL" ; };
    String SC_OPCODE_MODAL_VALUE_MULTI { Text = "COM.MICROSOFT.MODE.MULT" ; };
    String SC_OPCODE_Z_TEST { Text = "ZTEST" ; };
    String SC_OPCODE_Z_TEST_MS { Text = "COM.MICROSOFT.Z.TEST" ; };
    String SC_OPCODE_AGGREGATE { Text = "COM.MICROSOFT.AGGREGATE" ; };
    String SC_OPCODE_T_TEST { Text = "TTEST" ; };
    String SC_OPCODE_T_TEST_MS { Text = "COM.MICROSOFT.T.TEST" ; };
    String SC_OPCODE_RANK { Text = "RANK" ; };
    String SC_OPCODE_PERCENTILE { Text = "PERCENTILE" ; };
    String SC_OPCODE_PERCENT_RANK { Text = "PERCENTRANK" ; };
    String SC_OPCODE_PERCENTILE_INC { Text = "COM.MICROSOFT.PERCENTILE.INC" ; };
    String SC_OPCODE_PERCENT_RANK_INC { Text = "COM.MICROSOFT.PERCENTRANK.INC" ; };
    String SC_OPCODE_QUARTILE_INC { Text = "COM.MICROSOFT.QUARTILE.INC" ; };
    String SC_OPCODE_RANK_EQ { Text = "COM.MICROSOFT.RANK.EQ" ; };
    String SC_OPCODE_PERCENTILE_EXC { Text = "COM.MICROSOFT.PERCENTILE.EXC" ; };
    String SC_OPCODE_PERCENT_RANK_EXC { Text = "COM.MICROSOFT.PERCENTRANK.EXC" ; };
    String SC_OPCODE_QUARTILE_EXC { Text = "COM.MICROSOFT.QUARTILE.EXC" ; };
    String SC_OPCODE_RANK_AVG { Text = "COM.MICROSOFT.RANK.AVG" ; };
    String SC_OPCODE_LARGE { Text = "LARGE" ; };
    String SC_OPCODE_SMALL { Text = "SMALL" ; };
    String SC_OPCODE_FREQUENCY { Text = "FREQUENCY" ; };
    String SC_OPCODE_QUARTILE { Text = "QUARTILE" ; };
    String SC_OPCODE_NORM_INV { Text = "NORMINV" ; };
    String SC_OPCODE_NORM_INV_MS { Text = "COM.MICROSOFT.NORM.INV" ; };
    String SC_OPCODE_CONFIDENCE { Text = "CONFIDENCE" ; };
    String SC_OPCODE_CONFIDENCE_N { Text = "COM.MICROSOFT.CONFIDENCE.NORM" ; };
    String SC_OPCODE_CONFIDENCE_T { Text = "COM.MICROSOFT.CONFIDENCE.T" ; };
    String SC_OPCODE_F_TEST { Text = "FTEST" ; };
    String SC_OPCODE_F_TEST_MS { Text = "COM.MICROSOFT.F.TEST" ; };
    String SC_OPCODE_TRIM_MEAN { Text = "TRIMMEAN" ; };
    String SC_OPCODE_PROB { Text = "PROB" ; };
    String SC_OPCODE_CORREL { Text = "CORREL" ; };
    String SC_OPCODE_COVAR { Text = "COVAR" ; };
    String SC_OPCODE_COVARIANCE_P { Text = "COM.MICROSOFT.COVARIANCE.P" ; };
    String SC_OPCODE_COVARIANCE_S { Text = "COM.MICROSOFT.COVARIANCE.S" ; };
    String SC_OPCODE_PEARSON { Text = "PEARSON" ; };
    String SC_OPCODE_RSQ { Text = "RSQ" ; };
    String SC_OPCODE_STEYX { Text = "STEYX" ; };
    String SC_OPCODE_SLOPE { Text = "SLOPE" ; };
    String SC_OPCODE_INTERCEPT { Text = "INTERCEPT" ; };
    String SC_OPCODE_TREND { Text = "TREND" ; };
    String SC_OPCODE_GROWTH { Text = "GROWTH" ; };
    String SC_OPCODE_LINEST { Text = "LINEST" ; };
    String SC_OPCODE_LOGEST { Text = "LOGEST" ; };
    String SC_OPCODE_FORECAST { Text = "FORECAST" ; };
    String SC_OPCODE_FORECAST_ETS_ADD { Text = "COM.MICROSOFT.FORECAST.ETS" ; };
    String SC_OPCODE_FORECAST_ETS_SEA { Text = "COM.MICROSOFT.FORECAST.ETS.SEASONALITY" ; };
    String SC_OPCODE_FORECAST_ETS_MUL { Text = "ORG.LIBREOFFICE.FORECAST.ETS.MULT" ; };
    String SC_OPCODE_FORECAST_ETS_PIA { Text = "COM.MICROSOFT.FORECAST.ETS.CONFINT" ; };
    String SC_OPCODE_FORECAST_ETS_PIM { Text = "ORG.LIBREOFFICE.FORECAST.ETS.PI.MULT" ; };
    String SC_OPCODE_FORECAST_ETS_STA { Text = "COM.MICROSOFT.FORECAST.ETS.STAT" ; };
    String SC_OPCODE_FORECAST_ETS_STM { Text = "ORG.LIBREOFFICE.FORECAST.ETS.STAT.MULT" ; };
    String SC_OPCODE_FORECAST_LIN { Text = "COM.MICROSOFT.FORECAST.LINEAR" ; };
    String SC_OPCODE_CHI_INV { Text = "LEGACY.CHIINV" ; };
    String SC_OPCODE_CHI_INV_MS { Text = "COM.MICROSOFT.CHISQ.INV.RT" ; };
    String SC_OPCODE_GAMMA_DIST { Text = "GAMMADIST" ; };
    String SC_OPCODE_GAMMA_DIST_MS { Text = "COM.MICROSOFT.GAMMA.DIST" ; };
    String SC_OPCODE_GAMMA_INV { Text = "GAMMAINV" ; };
    String SC_OPCODE_GAMMA_INV_MS { Text = "COM.MICROSOFT.GAMMA.INV" ; };
    String SC_OPCODE_T_INV { Text = "TINV" ; };
    String SC_OPCODE_T_INV_2T { Text = "COM.MICROSOFT.T.INV.2T" ; };
    String SC_OPCODE_T_INV_MS { Text = "COM.MICROSOFT.T.INV" ; };
    String SC_OPCODE_F_INV { Text = "LEGACY.FINV" ; };
    String SC_OPCODE_F_INV_LT { Text = "FINV" ; };
    String SC_OPCODE_F_INV_RT { Text = "COM.MICROSOFT.F.INV.RT" ; };
    String SC_OPCODE_CHI_TEST { Text = "LEGACY.CHITEST" ; };
    String SC_OPCODE_CHI_TEST_MS { Text = "COM.MICROSOFT.CHISQ.TEST" ; };
    String SC_OPCODE_LOG_INV { Text = "LOGINV" ; };
    String SC_OPCODE_LOG_INV_MS { Text = "COM.MICROSOFT.LOGNORM.INV" ; };
    String SC_OPCODE_TABLE_OP { Text = "MULTIPLE.OPERATIONS" ; };
    String SC_OPCODE_BETA_DIST { Text = "BETADIST" ; };
    String SC_OPCODE_BETA_INV { Text = "BETAINV" ; };
    String SC_OPCODE_BETA_DIST_MS { Text = "COM.MICROSOFT.BETA.DIST" ; };
    String SC_OPCODE_BETA_INV_MS { Text = "COM.MICROSOFT.BETA.INV" ; };
    String SC_OPCODE_WEEK { Text = "WEEKNUM" ; };
    String SC_OPCODE_ISOWEEKNUM { Text = "ISOWEEKNUM" ; };
    /* WEEKNUM_OOO currently (5.1) not written, see
     * formula/source/core/api/token.cxx FormulaTokenArray::RewriteMissing() */
    String SC_OPCODE_WEEKNUM_OOO { Text = "ORG.LIBREOFFICE.WEEKNUM_OOO" ; };
    String SC_OPCODE_EASTERSUNDAY { Text = "ORG.OPENOFFICE.EASTERSUNDAY" ; };
    String SC_OPCODE_GET_DAY_OF_WEEK { Text = "WEEKDAY" ; };
    String SC_OPCODE_NETWORKDAYS { Text = "NETWORKDAYS" ; };
    String SC_OPCODE_NETWORKDAYS_MS { Text = "COM.MICROSOFT.NETWORKDAYS.INTL" ; };
    String SC_OPCODE_WORKDAY_MS { Text = "COM.MICROSOFT.WORKDAY.INTL" ; };
    String SC_OPCODE_NO_NAME { Text = "#NAME!" ; };
    String SC_OPCODE_STYLE { Text = "ORG.OPENOFFICE.STYLE" ; };
    String SC_OPCODE_DDE { Text = "DDE" ; };
    String SC_OPCODE_BASE { Text = "BASE" ; };
    String SC_OPCODE_DECIMAL { Text = "DECIMAL" ; };
    String SC_OPCODE_CONVERT { Text = "ORG.OPENOFFICE.CONVERT" ; };
    String SC_OPCODE_ROMAN { Text = "ROMAN" ; };
    String SC_OPCODE_ARABIC { Text = "ARABIC" ; };
    String SC_OPCODE_HYPERLINK { Text = "HYPERLINK" ; };
    String SC_OPCODE_INFO { Text = "INFO" ; };
    String SC_OPCODE_BAHTTEXT { Text = "COM.MICROSOFT.BAHTTEXT" ; };
    String SC_OPCODE_GET_PIVOT_DATA { Text = "GETPIVOTDATA" ; };
    String SC_OPCODE_EUROCONVERT { Text = "EUROCONVERT" ; };
    String SC_OPCODE_NUMBERVALUE { Text = "NUMBERVALUE" ; };
    String SC_OPCODE_GAMMA { Text = "GAMMA" ; };
    String SC_OPCODE_CHISQ_DIST { Text = "CHISQDIST" ; };
    String SC_OPCODE_CHISQ_DIST_MS { Text = "COM.MICROSOFT.CHISQ.DIST" ; };
    String SC_OPCODE_CHISQ_INV { Text = "CHISQINV" ;};
    String SC_OPCODE_CHISQ_INV_MS { Text = "COM.MICROSOFT.CHISQ.INV" ;};
    String SC_OPCODE_BITAND        { Text = "BITAND" ;};
    String SC_OPCODE_BITOR         { Text = "BITOR" ;};
    String SC_OPCODE_BITXOR        { Text = "BITXOR" ;};
    String SC_OPCODE_BITRSHIFT     { Text = "BITRSHIFT" ;};
    String SC_OPCODE_BITLSHIFT     { Text = "BITLSHIFT" ;};
    /* BEGIN defined ERROR.TYPE() values. */
    String SC_OPCODE_ERROR_NULL    { Text = "#NULL!"  ; };
    String SC_OPCODE_ERROR_DIVZERO { Text = "#DIV/0!" ; };
    String SC_OPCODE_ERROR_VALUE   { Text = "#VALUE!" ; };
    String SC_OPCODE_ERROR_REF     { Text = "#REF!"   ; };
    String SC_OPCODE_ERROR_NAME    { Text = "#NAME?"  ; };
    String SC_OPCODE_ERROR_NUM     { Text = "#NUM!"   ; };
    String SC_OPCODE_ERROR_NA      { Text = "#N/A"    ; };
    /* END defined ERROR.TYPE() values. */
    String SC_OPCODE_FILTERXML     { Text = "COM.MICROSOFT.FILTERXML";};
    String SC_OPCODE_WEBSERVICE    { Text = "COM.MICROSOFT.WEBSERVICE"; };
    String SC_OPCODE_COLOR         { Text = "ORG.LIBREOFFICE.COLOR"; };
    String SC_OPCODE_ERF_MS { Text = "COM.MICROSOFT.ERF.PRECISE" ; };
    String SC_OPCODE_ERFC_MS { Text = "COM.MICROSOFT.ERFC.PRECISE" ; };
    String SC_OPCODE_ENCODEURL     { Text = "COM.MICROSOFT.ENCODEURL"; };
    String SC_OPCODE_RAWSUBTRACT    { Text = "ORG.LIBREOFFICE.RAWSUBTRACT"; };
};

/** These function names are used only in the XLSX import. */
Resource RID_STRLIST_FUNCTION_NAMES_ENGLISH_OOXML
{
    String SC_OPCODE_IF { Text = "IF" ; };
    String SC_OPCODE_IF_ERROR { Text = "IFERROR" ; };
    String SC_OPCODE_IF_NA { Text = "_xlfn.IFNA" ; };
    String SC_OPCODE_CHOOSE { Text = "CHOOSE" ; };
    String SC_OPCODE_OPEN { Text = "(" ; };
    String SC_OPCODE_CLOSE { Text = ")" ; };
    String SC_OPCODE_TABLE_REF_OPEN { Text = "[" ; };
    String SC_OPCODE_TABLE_REF_CLOSE { Text = "]" ; };
    String SC_OPCODE_TABLE_REF_ITEM_ALL { Text = "#All" ; };
    String SC_OPCODE_TABLE_REF_ITEM_HEADERS { Text = "#Headers" ; };
    String SC_OPCODE_TABLE_REF_ITEM_DATA { Text = "#Data" ; };
    String SC_OPCODE_TABLE_REF_ITEM_TOTALS { Text = "#Totals" ; };
    String SC_OPCODE_TABLE_REF_ITEM_THIS_ROW { Text = "#This Row" ; };
    String SC_OPCODE_ARRAY_OPEN { Text = "{" ; };
    String SC_OPCODE_ARRAY_CLOSE { Text = "}" ; };
    String SC_OPCODE_ARRAY_ROW_SEP { Text = ";" ; };
    String SC_OPCODE_ARRAY_COL_SEP { Text = "," ; };
    String SC_OPCODE_SEP { Text = "," ; };
    String SC_OPCODE_PERCENT_SIGN { Text = "%" ; };
    String SC_OPCODE_ADD { Text = "+" ; };
    String SC_OPCODE_SUB { Text = "-" ; };
    String SC_OPCODE_MUL { Text = "*" ; };
    String SC_OPCODE_DIV { Text = "/" ; };
    String SC_OPCODE_AMPERSAND { Text = "&" ; };
    String SC_OPCODE_POW { Text = "^" ; };
    String SC_OPCODE_EQUAL { Text = "=" ; };
    String SC_OPCODE_NOT_EQUAL { Text = "<>" ; };
    String SC_OPCODE_LESS { Text = "<" ; };
    String SC_OPCODE_GREATER { Text = ">" ; };
    String SC_OPCODE_LESS_EQUAL { Text = "<=" ; };
    String SC_OPCODE_GREATER_EQUAL { Text = ">=" ; };
    String SC_OPCODE_AND { Text = "AND" ; };
    String SC_OPCODE_OR { Text = "OR" ; };
    String SC_OPCODE_XOR { Text = "_xlfn.XOR" ; };
    String SC_OPCODE_INTERSECT { Text = " " ; };
    String SC_OPCODE_UNION { Text = "~" ; };
    String SC_OPCODE_RANGE { Text = ":" ; };
    String SC_OPCODE_NOT { Text = "NOT" ; };
    String SC_OPCODE_NEG { Text = "NEG" ; };
    String SC_OPCODE_NEG_SUB { Text = "-" ; };
    String SC_OPCODE_PI { Text = "PI" ; };
    String SC_OPCODE_RANDOM { Text = "RAND" ; };
    String SC_OPCODE_TRUE { Text = "TRUE" ; };
    String SC_OPCODE_FALSE { Text = "FALSE" ; };
    String SC_OPCODE_GET_ACT_DATE { Text = "TODAY" ; };
    String SC_OPCODE_GET_ACT_TIME { Text = "NOW" ; };
    String SC_OPCODE_NO_VALUE { Text = "NA" ; };
    String SC_OPCODE_CURRENT { Text = "CURRENT" ; };
    String SC_OPCODE_DEG { Text = "DEGREES" ; };
    String SC_OPCODE_RAD { Text = "RADIANS" ; };
    String SC_OPCODE_SIN { Text = "SIN" ; };
    String SC_OPCODE_COS { Text = "COS" ; };
    String SC_OPCODE_TAN { Text = "TAN" ; };
    String SC_OPCODE_COT { Text = "_xlfn.COT" ; };
    String SC_OPCODE_ARC_SIN { Text = "ASIN" ; };
    String SC_OPCODE_ARC_COS { Text = "ACOS" ; };
    String SC_OPCODE_ARC_TAN { Text = "ATAN" ; };
    String SC_OPCODE_ARC_COT { Text = "_xlfn.ACOT" ; };
    String SC_OPCODE_SIN_HYP { Text = "SINH" ; };
    String SC_OPCODE_COS_HYP { Text = "COSH" ; };
    String SC_OPCODE_TAN_HYP { Text = "TANH" ; };
    String SC_OPCODE_COT_HYP { Text = "_xlfn.COTH" ; };
    String SC_OPCODE_ARC_SIN_HYP { Text = "ASINH" ; };
    String SC_OPCODE_ARC_COS_HYP { Text = "ACOSH" ; };
    String SC_OPCODE_ARC_TAN_HYP { Text = "ATANH" ; };
    String SC_OPCODE_ARC_COT_HYP { Text = "_xlfn.ACOTH" ; };
    String SC_OPCODE_COSECANT { Text = "_xlfn.CSC" ; };
    String SC_OPCODE_SECANT { Text = "_xlfn.SEC" ; };
    String SC_OPCODE_COSECANT_HYP { Text = "_xlfn.CSCH" ; };
    String SC_OPCODE_SECANT_HYP { Text = "_xlfn.SECH" ; };
    String SC_OPCODE_EXP { Text = "EXP" ; };
    String SC_OPCODE_LN { Text = "LN" ; };
    String SC_OPCODE_SQRT { Text = "SQRT" ; };
    String SC_OPCODE_FACT { Text = "FACT" ; };
    String SC_OPCODE_GET_YEAR { Text = "YEAR" ; };
    String SC_OPCODE_GET_MONTH { Text = "MONTH" ; };
    String SC_OPCODE_GET_DAY { Text = "DAY" ; };
    String SC_OPCODE_GET_HOUR { Text = "HOUR" ; };
    String SC_OPCODE_GET_MIN { Text = "MINUTE" ; };
    String SC_OPCODE_GET_SEC { Text = "SECOND" ; };
    String SC_OPCODE_PLUS_MINUS { Text = "SIGN" ; };
    String SC_OPCODE_ABS { Text = "ABS" ; };
    String SC_OPCODE_INT { Text = "INT" ; };
    String SC_OPCODE_PHI { Text = "_xlfn.PHI" ; };
    String SC_OPCODE_GAUSS { Text = "_xlfn.GAUSS" ; };
    String SC_OPCODE_IS_EMPTY { Text = "ISBLANK" ; };
    String SC_OPCODE_IS_STRING { Text = "ISTEXT" ; };
    String SC_OPCODE_IS_NON_STRING { Text = "ISNONTEXT" ; };
    String SC_OPCODE_IS_LOGICAL { Text = "ISLOGICAL" ; };
    String SC_OPCODE_TYPE { Text = "TYPE" ; };
    String SC_OPCODE_CELL { Text = "CELL" ; };
    String SC_OPCODE_IS_REF { Text = "ISREF" ; };
    String SC_OPCODE_IS_VALUE { Text = "ISNUMBER" ; };
    String SC_OPCODE_IS_FORMULA { Text = "_xlfn.ISFORMULA" ; };
    String SC_OPCODE_IS_NV { Text = "ISNA" ; };
    String SC_OPCODE_IS_ERR { Text = "ISERR" ; };
    String SC_OPCODE_IS_ERROR { Text = "ISERROR" ; };
    String SC_OPCODE_IS_EVEN { Text = "ISEVEN" ; };
    String SC_OPCODE_IS_ODD { Text = "ISODD" ; };
    String SC_OPCODE_N { Text = "N" ; };
    String SC_OPCODE_GET_DATE_VALUE { Text = "DATEVALUE" ; };
    String SC_OPCODE_GET_TIME_VALUE { Text = "TIMEVALUE" ; };
    String SC_OPCODE_CODE { Text = "CODE" ; };
    String SC_OPCODE_TRIM { Text = "TRIM" ; };
    String SC_OPCODE_UPPER { Text = "UPPER" ; };
    String SC_OPCODE_PROPER { Text = "PROPER" ; };
    String SC_OPCODE_LOWER { Text = "LOWER" ; };
    String SC_OPCODE_LEN { Text = "LEN" ; };
    String SC_OPCODE_T { Text = "T" ; };
    String SC_OPCODE_VALUE { Text = "VALUE" ; };
    String SC_OPCODE_CLEAN { Text = "CLEAN" ; };
    String SC_OPCODE_CHAR { Text = "CHAR" ; };
    String SC_OPCODE_JIS { Text = "JIS" ; };
    String SC_OPCODE_ASC { Text = "ASC" ; };
    String SC_OPCODE_UNICODE { Text = "_xlfn.UNICODE" ; };
    String SC_OPCODE_UNICHAR { Text = "_xlfn.UNICHAR" ; };
    String SC_OPCODE_LOG10 { Text = "LOG10" ; };
    String SC_OPCODE_EVEN { Text = "EVEN" ; };
    String SC_OPCODE_ODD { Text = "ODD" ; };
    String SC_OPCODE_STD_NORM_DIST { Text = "NORMSDIST" ; };
    String SC_OPCODE_STD_NORM_DIST_MS { Text = "_xlfn.NORM.S.DIST" ; };
    String SC_OPCODE_FISHER { Text = "FISHER" ; };
    String SC_OPCODE_FISHER_INV { Text = "FISHERINV" ; };
    String SC_OPCODE_S_NORM_INV { Text = "NORMSINV" ; };
    String SC_OPCODE_S_NORM_INV_MS { Text = "_xlfn.NORM.S.INV" ; };
    String SC_OPCODE_GAMMA_LN { Text = "GAMMALN" ; };
    String SC_OPCODE_GAMMA_LN_MS { Text = "_xlfn.GAMMALN.PRECISE" ; };
    String SC_OPCODE_ERROR_TYPE { Text = "ERRORTYPE" ; };
    String SC_OPCODE_ERROR_TYPE_ODF { Text = "ERROR.TYPE" ; };
    String SC_OPCODE_FORMULA { Text = "_xlfn.FORMULATEXT"; };
    String SC_OPCODE_ARC_TAN_2 { Text = "ATAN2" ; };
    String SC_OPCODE_CEIL_MATH { Text = "_xlfn.CEILING.MATH" ; };
    String SC_OPCODE_CEIL { Text = "_xlfn.CEILING.MATH" ; };
    String SC_OPCODE_CEIL_MS { Text = "CEILING" ; };
    String SC_OPCODE_CEIL_PRECISE { Text = "_xlfn.CEILING.PRECISE" ; };
    String SC_OPCODE_CEIL_ISO { Text = "ISO.CEILING" ; };
    String SC_OPCODE_FLOOR_MS { Text = "FLOOR" ; };
    String SC_OPCODE_FLOOR_MATH { Text = "_xlfn.FLOOR.MATH" ; };
    String SC_OPCODE_FLOOR { Text = "_xlfn.FLOOR.MATH" ; };
    String SC_OPCODE_FLOOR_PRECISE { Text = "_xlfn.FLOOR.PRECISE" ; };
    String SC_OPCODE_ROUND { Text = "ROUND" ; };
    String SC_OPCODE_ROUND_UP { Text = "ROUNDUP" ; };
    String SC_OPCODE_ROUND_DOWN { Text = "ROUNDDOWN" ; };
    String SC_OPCODE_TRUNC { Text = "TRUNC" ; };
    String SC_OPCODE_LOG { Text = "LOG" ; };
    String SC_OPCODE_POWER { Text = "POWER" ; };
    String SC_OPCODE_GCD { Text = "GCD" ; };
    String SC_OPCODE_LCM { Text = "LCM" ; };
    String SC_OPCODE_MOD { Text = "MOD" ; };
    String SC_OPCODE_SUM_PRODUCT { Text = "SUMPRODUCT" ; };
    String SC_OPCODE_SUM_SQ { Text = "SUMSQ" ; };
    String SC_OPCODE_SUM_X2MY2 { Text = "SUMX2MY2" ; };
    String SC_OPCODE_SUM_X2DY2 { Text = "SUMX2PY2" ; };
    String SC_OPCODE_SUM_XMY2 { Text = "SUMXMY2" ; };
    String SC_OPCODE_GET_DATE { Text = "DATE" ; };
    String SC_OPCODE_GET_TIME { Text = "TIME" ; };
    String SC_OPCODE_GET_DIFF_DATE { Text = "_xlfn.DAYS" ; };
    String SC_OPCODE_GET_DIFF_DATE_360 { Text = "DAYS360" ; };
    String SC_OPCODE_GET_DATEDIF { Text = "DATEDIF" ; };
    String SC_OPCODE_MIN { Text = "MIN" ; };
    String SC_OPCODE_MIN_A { Text = "MINA" ; };
    String SC_OPCODE_MAX { Text = "MAX" ; };
    String SC_OPCODE_MAX_A { Text = "MAXA" ; };
    String SC_OPCODE_SUM { Text = "SUM" ; };
    String SC_OPCODE_PRODUCT { Text = "PRODUCT" ; };
    String SC_OPCODE_AVERAGE { Text = "AVERAGE" ; };
    String SC_OPCODE_AVERAGE_A { Text = "AVERAGEA" ; };
    String SC_OPCODE_COUNT { Text = "COUNT" ; };
    String SC_OPCODE_COUNT_2 { Text = "COUNTA" ; };
    String SC_OPCODE_NPV { Text = "NPV" ; };
    String SC_OPCODE_IRR { Text = "IRR" ; };
    String SC_OPCODE_MIRR { Text = "MIRR" ; };
    String SC_OPCODE_ISPMT { Text = "ISPMT" ; };
    String SC_OPCODE_VAR { Text = "VAR" ; };
    String SC_OPCODE_VAR_A { Text = "VARA" ; };
    String SC_OPCODE_VAR_P { Text = "VARP" ; };
    String SC_OPCODE_VAR_P_A { Text = "VARPA" ; };
    String SC_OPCODE_VAR_P_MS { Text = "_xlfn.VAR.P" ; };
    String SC_OPCODE_VAR_S { Text = "_xlfn.VAR.S" ; };
    String SC_OPCODE_ST_DEV { Text = "STDEV" ; };
    String SC_OPCODE_ST_DEV_A { Text = "STDEVA" ; };
    String SC_OPCODE_ST_DEV_P { Text = "STDEVP" ; };
    String SC_OPCODE_ST_DEV_P_A { Text = "STDEVPA" ; };
    String SC_OPCODE_ST_DEV_P_MS { Text = "_xlfn.STDEV.P" ; };
    String SC_OPCODE_ST_DEV_S { Text = "_xlfn.STDEV.S" ; };
    String SC_OPCODE_B { Text = "B" ; };
    String SC_OPCODE_NORM_DIST { Text = "NORMDIST" ; };
    String SC_OPCODE_NORM_DIST_MS { Text = "_xlfn.NORM.DIST" ; };
    String SC_OPCODE_EXP_DIST { Text = "EXPONDIST" ; };
    String SC_OPCODE_EXP_DIST_MS { Text = "_xlfn.EXPON.DIST" ; };
    String SC_OPCODE_BINOM_DIST { Text = "BINOMDIST" ; };
    String SC_OPCODE_BINOM_DIST_MS { Text = "_xlfn.BINOM.DIST" ; };
    String SC_OPCODE_POISSON_DIST { Text = "POISSON" ; };
    String SC_OPCODE_POISSON_DIST_MS { Text = "_xlfn.POISSON.DIST" ; };
    String SC_OPCODE_COMBIN { Text = "COMBIN" ; };
    String SC_OPCODE_COMBIN_A { Text = "_xlfn.COMBINA" ; };
    String SC_OPCODE_PERMUT { Text = "PERMUT" ; };
    String SC_OPCODE_PERMUTATION_A { Text = "_xlfn.PERMUTATIONA" ; };
    String SC_OPCODE_PV { Text = "PV" ; };
    String SC_OPCODE_SYD { Text = "SYD" ; };
    String SC_OPCODE_DDB { Text = "DDB" ; };
    String SC_OPCODE_DB { Text = "DB" ; };
    String SC_OPCODE_VBD { Text = "VDB" ; };
    String SC_OPCODE_DURATION { Text = "_xlfn.PDURATION" ; };
    String SC_OPCODE_SLN { Text = "SLN" ; };
    String SC_OPCODE_PMT { Text = "PMT" ; };
    String SC_OPCODE_COLUMNS { Text = "COLUMNS" ; };
    String SC_OPCODE_ROWS { Text = "ROWS" ; };
    String SC_OPCODE_SHEETS { Text = "_xlfn.SHEETS" ; };
    String SC_OPCODE_COLUMN { Text = "COLUMN" ; };
    String SC_OPCODE_ROW { Text = "ROW" ; };
    String SC_OPCODE_SHEET { Text = "_xlfn.SHEET" ; };
    String SC_OPCODE_RRI { Text = "_xlfn.RRI" ; };
    String SC_OPCODE_FV { Text = "FV" ; };
    String SC_OPCODE_NPER { Text = "NPER" ; };
    String SC_OPCODE_RATE { Text = "RATE" ; };
    String SC_OPCODE_IPMT { Text = "IPMT" ; };
    String SC_OPCODE_PPMT { Text = "PPMT" ; };
    String SC_OPCODE_CUM_IPMT { Text = "CUMIPMT" ; };
    String SC_OPCODE_CUM_PRINC { Text = "CUMPRINC" ; };
    String SC_OPCODE_EFFECTIVE { Text = "EFFECTIVE" ; };
    String SC_OPCODE_NOMINAL { Text = "NOMINAL" ; };
    String SC_OPCODE_SUB_TOTAL { Text = "SUBTOTAL" ; };
    String SC_OPCODE_DB_SUM { Text = "DSUM" ; };
    String SC_OPCODE_DB_COUNT { Text = "DCOUNT" ; };
    String SC_OPCODE_DB_COUNT_2 { Text = "DCOUNTA" ; };
    String SC_OPCODE_DB_AVERAGE { Text = "DAVERAGE" ; };
    String SC_OPCODE_DB_GET { Text = "DGET" ; };
    String SC_OPCODE_DB_MAX { Text = "DMAX" ; };
    String SC_OPCODE_DB_MIN { Text = "DMIN" ; };
    String SC_OPCODE_DB_PRODUCT { Text = "DPRODUCT" ; };
    String SC_OPCODE_DB_STD_DEV { Text = "DSTDEV" ; };
    String SC_OPCODE_DB_STD_DEV_P { Text = "DSTDEVP" ; };
    String SC_OPCODE_DB_VAR { Text = "DVAR" ; };
    String SC_OPCODE_DB_VAR_P { Text = "DVARP" ; };
    String SC_OPCODE_INDIRECT { Text = "INDIRECT" ; };
    String SC_OPCODE_ADDRESS { Text = "ADDRESS" ; };
    String SC_OPCODE_MATCH { Text = "MATCH" ; };
    String SC_OPCODE_COUNT_EMPTY_CELLS { Text = "COUNTBLANK" ; };
    String SC_OPCODE_COUNT_IF { Text = "COUNTIF" ; };
    String SC_OPCODE_SUM_IF { Text = "SUMIF" ; };
    String SC_OPCODE_AVERAGE_IF { Text = "AVERAGEIF" ; };
    String SC_OPCODE_SUM_IFS { Text = "SUMIFS" ; };
    String SC_OPCODE_AVERAGE_IFS { Text = "AVERAGEIFS" ; };
    String SC_OPCODE_COUNT_IFS { Text = "COUNTIFS" ; };
    String SC_OPCODE_LOOKUP { Text = "LOOKUP" ; };
    String SC_OPCODE_V_LOOKUP { Text = "VLOOKUP" ; };
    String SC_OPCODE_H_LOOKUP { Text = "HLOOKUP" ; };
    String SC_OPCODE_MULTI_AREA { Text = "MULTIRANGE" ; };      // legacy for range list (union)
    String SC_OPCODE_OFFSET { Text = "OFFSET" ; };
    String SC_OPCODE_INDEX { Text = "INDEX" ; };
    String SC_OPCODE_AREAS { Text = "AREAS" ; };
    String SC_OPCODE_CURRENCY { Text = "DOLLAR" ; };
    String SC_OPCODE_REPLACE { Text = "REPLACE" ; };
    String SC_OPCODE_FIXED { Text = "FIXED" ; };
    String SC_OPCODE_FIND { Text = "FIND" ; };
    String SC_OPCODE_EXACT { Text = "EXACT" ; };
    String SC_OPCODE_LEFT { Text = "LEFT" ; };
    String SC_OPCODE_RIGHT { Text = "RIGHT" ; };
    String SC_OPCODE_SEARCH { Text = "SEARCH" ; };
    String SC_OPCODE_MID { Text = "MID" ; };
    String SC_OPCODE_LENB { Text = "LENB" ; };
    String SC_OPCODE_RIGHTB { Text = "RIGHTB" ; };
    String SC_OPCODE_LEFTB { Text = "LEFTB" ; };
    String SC_OPCODE_MIDB { Text = "MIDB" ; };
    String SC_OPCODE_TEXT { Text = "TEXT" ; };
    String SC_OPCODE_SUBSTITUTE { Text = "SUBSTITUTE" ; };
    String SC_OPCODE_REPT { Text = "REPT" ; };
    String SC_OPCODE_CONCAT { Text = "CONCATENATE" ; };
    String SC_OPCODE_CONCAT_MS { Text = "_xlfn.CONCAT" ; };
    String SC_OPCODE_TEXTJOIN_MS { Text = "_xlfn.TEXTJOIN" ; };
    String SC_OPCODE_IFS_MS { Text = "_xlfn.IFS" ; };
    String SC_OPCODE_SWITCH_MS { Text = "_xlfn.SWITCH" ; };
    String SC_OPCODE_MINIFS_MS { Text = "_xlfn.MINIFS" ; };
    String SC_OPCODE_MAXIFS_MS { Text = "_xlfn.MAXIFS" ; };
    String SC_OPCODE_MAT_VALUE { Text = "MVALUE" ; };
    String SC_OPCODE_MAT_DET { Text = "MDETERM" ; };
    String SC_OPCODE_MAT_INV { Text = "MINVERSE" ; };
    String SC_OPCODE_MAT_MULT { Text = "MMULT" ; };
    String SC_OPCODE_MAT_TRANS { Text = "TRANSPOSE" ; };
    String SC_OPCODE_MATRIX_UNIT { Text = "_xlfn.MUNIT" ; };
    String SC_OPCODE_BACK_SOLVER { Text = "GOALSEEK" ; };
    String SC_OPCODE_HYP_GEOM_DIST { Text = "HYPGEOMDIST" ; };
    String SC_OPCODE_HYP_GEOM_DIST_MS { Text = "_xlfn.HYPGEOM.DIST" ; };
    String SC_OPCODE_LOG_NORM_DIST { Text = "LOGNORMDIST" ; };
    String SC_OPCODE_LOG_NORM_DIST_MS { Text = "_xlfn.LOGNORM.DIST" ; };
    String SC_OPCODE_T_DIST { Text = "TDIST" ; };
    String SC_OPCODE_T_DIST_2T { Text = "_xlfn.T.DIST.2T" ; };
    String SC_OPCODE_T_DIST_MS { Text = "_xlfn.T.DIST" ; };
    String SC_OPCODE_T_DIST_RT { Text = "_xlfn.T.DIST.RT" ; };
    String SC_OPCODE_F_DIST { Text = "FDIST" ; };
    String SC_OPCODE_F_DIST_LT { Text = "_xlfn.F.DIST" ; };
    String SC_OPCODE_F_DIST_RT { Text = "_xlfn.F.DIST.RT" ; };
    String SC_OPCODE_CHI_DIST { Text = "CHIDIST" ; };
    String SC_OPCODE_CHI_DIST_MS { Text = "_xlfn.CHISQ.DIST.RT" ; };
    String SC_OPCODE_WEIBULL { Text = "WEIBULL" ; };
    String SC_OPCODE_WEIBULL_MS { Text = "_xlfn.WEIBULL.DIST" ; };
    String SC_OPCODE_NEG_BINOM_VERT { Text = "NEGBINOMDIST" ; };
    String SC_OPCODE_NEG_BINOM_DIST_MS { Text = "_xlfn.NEGBINOM.DIST" ; };
    String SC_OPCODE_CRIT_BINOM { Text = "CRITBINOM" ; };
    String SC_OPCODE_BINOM_INV { Text = "_xlfn.BINOM.INV" ; };
    String SC_OPCODE_KURT { Text = "KURT" ; };
    String SC_OPCODE_HAR_MEAN { Text = "HARMEAN" ; };
    String SC_OPCODE_GEO_MEAN { Text = "GEOMEAN" ; };
    String SC_OPCODE_STANDARD { Text = "STANDARDIZE" ; };
    String SC_OPCODE_AVE_DEV { Text = "AVEDEV" ; };
    String SC_OPCODE_SKEW { Text = "SKEW" ; };
    String SC_OPCODE_SKEWP   { Text = "_xlfn.SKEW.P" ; };
    String SC_OPCODE_DEV_SQ { Text = "DEVSQ" ; };
    String SC_OPCODE_MEDIAN { Text = "MEDIAN" ; };
    String SC_OPCODE_MODAL_VALUE { Text = "MODE" ; };
    String SC_OPCODE_MODAL_VALUE_MS { Text = "_xlfn.MODE.SNGL" ; };
    String SC_OPCODE_MODAL_VALUE_MULTI { Text = "_xlfn.MODE.MULT" ; };
    String SC_OPCODE_Z_TEST { Text = "ZTEST" ; };
    String SC_OPCODE_Z_TEST_MS { Text = "_xlfn.Z.TEST" ; };
    String SC_OPCODE_AGGREGATE { Text = "_xlfn.AGGREGATE" ; };
    String SC_OPCODE_T_TEST { Text = "TTEST" ; };
    String SC_OPCODE_T_TEST_MS { Text = "_xlfn.T.TEST" ; };
    String SC_OPCODE_RANK { Text = "RANK" ; };
    String SC_OPCODE_PERCENTILE { Text = "PERCENTILE" ; };
    String SC_OPCODE_PERCENT_RANK { Text = "PERCENTRANK" ; };
    String SC_OPCODE_PERCENTILE_INC { Text = "_xlfn.PERCENTILE.INC" ; };
    String SC_OPCODE_PERCENT_RANK_INC { Text = "_xlfn.PERCENTRANK.INC" ; };
    String SC_OPCODE_QUARTILE_INC { Text = "_xlfn.QUARTILE.INC" ; };
    String SC_OPCODE_RANK_EQ { Text = "_xlfn.RANK.EQ" ; };
    String SC_OPCODE_PERCENTILE_EXC { Text = "_xlfn.PERCENTILE.EXC" ; };
    String SC_OPCODE_PERCENT_RANK_EXC { Text = "_xlfn.PERCENTRANK.EXC" ; };
    String SC_OPCODE_QUARTILE_EXC { Text = "_xlfn.QUARTILE.EXC" ; };
    String SC_OPCODE_RANK_AVG { Text = "_xlfn.RANK.AVG" ; };
    String SC_OPCODE_LARGE { Text = "LARGE" ; };
    String SC_OPCODE_SMALL { Text = "SMALL" ; };
    String SC_OPCODE_FREQUENCY { Text = "FREQUENCY" ; };
    String SC_OPCODE_QUARTILE { Text = "QUARTILE" ; };
    String SC_OPCODE_NORM_INV { Text = "NORMINV" ; };
    String SC_OPCODE_NORM_INV_MS { Text = "_xlfn.NORM.INV" ; };
    String SC_OPCODE_CONFIDENCE { Text = "CONFIDENCE" ; };
    String SC_OPCODE_CONFIDENCE_N { Text = "_xlfn.CONFIDENCE.NORM" ; };
    String SC_OPCODE_CONFIDENCE_T { Text = "_xlfn.CONFIDENCE.T" ; };
    String SC_OPCODE_F_TEST { Text = "FTEST" ; };
    String SC_OPCODE_F_TEST_MS { Text = "_xlfn.F.TEST" ; };
    String SC_OPCODE_TRIM_MEAN { Text = "TRIMMEAN" ; };
    String SC_OPCODE_PROB { Text = "PROB" ; };
    String SC_OPCODE_CORREL { Text = "CORREL" ; };
    String SC_OPCODE_COVAR { Text = "COVAR" ; };
    String SC_OPCODE_COVARIANCE_P { Text = "_xlfn.COVARIANCE.P" ; };
    String SC_OPCODE_COVARIANCE_S { Text = "_xlfn.COVARIANCE.S" ; };
    String SC_OPCODE_PEARSON { Text = "PEARSON" ; };
    String SC_OPCODE_RSQ { Text = "RSQ" ; };
    String SC_OPCODE_STEYX { Text = "STEYX" ; };
    String SC_OPCODE_SLOPE { Text = "SLOPE" ; };
    String SC_OPCODE_INTERCEPT { Text = "INTERCEPT" ; };
    String SC_OPCODE_TREND { Text = "TREND" ; };
    String SC_OPCODE_GROWTH { Text = "GROWTH" ; };
    String SC_OPCODE_LINEST { Text = "LINEST" ; };
    String SC_OPCODE_LOGEST { Text = "LOGEST" ; };
    String SC_OPCODE_FORECAST { Text = "FORECAST" ; };
    String SC_OPCODE_FORECAST_ETS_ADD { Text = "_xlfn.FORECAST.ETS" ; };
    String SC_OPCODE_FORECAST_ETS_SEA { Text = "_xlfn.FORECAST.ETS.SEASONALITY" ; };
    String SC_OPCODE_FORECAST_ETS_MUL { Text = "_xlfn.ORG.LIBREOFFICE.FORECAST.ETS.MULT" ; };
    String SC_OPCODE_FORECAST_ETS_PIA { Text = "_xlfn.FORECAST.ETS.CONFINT" ; };
    String SC_OPCODE_FORECAST_ETS_PIM { Text = "_xlfn.ORG.LIBREOFFICE.FORECAST.ETS.PI.MULT" ; };
    String SC_OPCODE_FORECAST_ETS_STA { Text = "_xlfn.FORECAST.ETS.STAT" ; };
    String SC_OPCODE_FORECAST_ETS_STM { Text = "_xlfn.ORG.LIBREOFFICE.FORECAST.ETS.STAT.MULT" ; };
    String SC_OPCODE_FORECAST_LIN { Text = "_xlfn.FORECAST.LINEAR" ; };
    String SC_OPCODE_CHI_INV { Text = "CHIINV" ; };
    String SC_OPCODE_CHI_INV_MS { Text = "_xlfn.CHISQ.INV.RT" ; };
    String SC_OPCODE_GAMMA_DIST { Text = "GAMMADIST" ; };
    String SC_OPCODE_GAMMA_DIST_MS { Text = "_xlfn.GAMMA.DIST" ; };
    String SC_OPCODE_GAMMA_INV { Text = "GAMMAINV" ; };
    String SC_OPCODE_GAMMA_INV_MS { Text = "_xlfn.GAMMA.INV" ; };
    String SC_OPCODE_T_INV { Text = "TINV" ; };
    String SC_OPCODE_T_INV_2T { Text = "_xlfn.T.INV.2T" ; };
    String SC_OPCODE_T_INV_MS { Text = "_xlfn.T.INV" ; };
    String SC_OPCODE_F_INV { Text = "FINV" ; };
    String SC_OPCODE_F_INV_LT { Text = "_xlfn.F.INV" ; };
    String SC_OPCODE_F_INV_RT { Text = "_xlfn.F.INV.RT" ; };
    String SC_OPCODE_CHI_TEST { Text = "CHITEST" ; };
    String SC_OPCODE_CHI_TEST_MS { Text = "_xlfn.CHISQ.TEST" ; };
    String SC_OPCODE_LOG_INV { Text = "LOGINV" ; };
    String SC_OPCODE_LOG_INV_MS { Text = "_xlfn.LOGNORM.INV" ; };
    String SC_OPCODE_TABLE_OP { Text = "TABLE" ; };
    String SC_OPCODE_BETA_DIST { Text = "BETADIST" ; };
    String SC_OPCODE_BETA_INV { Text = "BETAINV" ; };
    String SC_OPCODE_BETA_DIST_MS { Text = "_xlfn.BETA.DIST" ; };
    String SC_OPCODE_BETA_INV_MS { Text = "_xlfn.BETA.INV" ; };
    String SC_OPCODE_WEEK { Text = "WEEKNUM" ; };
    String SC_OPCODE_ISOWEEKNUM { Text = "_xlfn.ISOWEEKNUM" ; };
    String SC_OPCODE_WEEKNUM_OOO { Text = "_xlfn.ORG.LIBREOFFICE.WEEKNUM_OOO" ; };
    String SC_OPCODE_EASTERSUNDAY { Text = "EASTERSUNDAY" ; };
    String SC_OPCODE_GET_DAY_OF_WEEK { Text = "WEEKDAY" ; };
    String SC_OPCODE_NETWORKDAYS { Text = "NETWORKDAYS" ; };
    String SC_OPCODE_NETWORKDAYS_MS { Text = "NETWORKDAYS.INTL" ; };
    String SC_OPCODE_WORKDAY_MS { Text = "WORKDAY.INTL" ; };
    String SC_OPCODE_NO_NAME { Text = "#NAME!" ; };
    String SC_OPCODE_STYLE { Text = "STYLE" ; };
    String SC_OPCODE_DDE { Text = "DDE" ; };
    String SC_OPCODE_BASE { Text = "_xlfn.BASE" ; };
    String SC_OPCODE_DECIMAL { Text = "_xlfn.DECIMAL" ; };
    String SC_OPCODE_CONVERT { Text = "_xlfn.ORG.OPENOFFICE.CONVERT" ; };
    String SC_OPCODE_ROMAN { Text = "ROMAN" ; };
    String SC_OPCODE_ARABIC { Text = "_xlfn.ARABIC" ; };
    String SC_OPCODE_HYPERLINK { Text = "HYPERLINK" ; };
    String SC_OPCODE_INFO { Text = "INFO" ; };
    String SC_OPCODE_BAHTTEXT { Text = "_xlfn.BAHTTEXT" ; };
    String SC_OPCODE_GET_PIVOT_DATA { Text = "GETPIVOTDATA" ; };
    String SC_OPCODE_EUROCONVERT { Text = "EUROCONVERT" ; };
    String SC_OPCODE_NUMBERVALUE { Text = "_xlfn.NUMBERVALUE" ; };
    String SC_OPCODE_GAMMA { Text = "_xlfn.GAMMA" ; };
    String SC_OPCODE_CHISQ_DIST { Text = "CHISQDIST" ; };
    String SC_OPCODE_CHISQ_DIST_MS { Text = "_xlfn.CHISQ.DIST" ; };
    String SC_OPCODE_CHISQ_INV { Text = "CHISQINV" ;};
    String SC_OPCODE_CHISQ_INV_MS { Text = "_xlfn.CHISQ.INV" ;};
    String SC_OPCODE_BITAND    { Text = "_xlfn.BITAND" ;};
    String SC_OPCODE_BITOR    { Text = "_xlfn.BITOR" ;};
    String SC_OPCODE_BITXOR    { Text = "_xlfn.BITXOR" ;};
    String SC_OPCODE_BITRSHIFT    { Text = "_xlfn.BITRSHIFT" ;};
    String SC_OPCODE_BITLSHIFT    { Text = "_xlfn.BITLSHIFT" ;};
    /* BEGIN defined ERROR.TYPE() values. */
    String SC_OPCODE_ERROR_NULL    { Text = "#NULL!"  ; };
    String SC_OPCODE_ERROR_DIVZERO { Text = "#DIV/0!" ; };
    String SC_OPCODE_ERROR_VALUE   { Text = "#VALUE!" ; };
    String SC_OPCODE_ERROR_REF     { Text = "#REF!"   ; };
    String SC_OPCODE_ERROR_NAME    { Text = "#NAME?"  ; };
    String SC_OPCODE_ERROR_NUM     { Text = "#NUM!"   ; };
    String SC_OPCODE_ERROR_NA      { Text = "#N/A"    ; };
    /* END defined ERROR.TYPE() values. */
    String SC_OPCODE_FILTERXML     { Text = "_xlfn.FILTERXML";};
    String SC_OPCODE_WEBSERVICE    { Text = "_xlfn.WEBSERVICE"; };
    String SC_OPCODE_COLOR         { Text = "_xlfn.ORG.LIBREOFFICE.COLOR"; };
    String SC_OPCODE_ERF_MS { Text = "_xlfn.ERF.PRECISE" ; };
    String SC_OPCODE_ERFC_MS { Text = "_xlfn.ERFC.PRECISE" ; };
    String SC_OPCODE_ENCODEURL     { Text = "_xlfn.ENCODEURL"; };
    String SC_OPCODE_RAWSUBTRACT    { Text = "_xlfn.ORG.LIBREOFFICE.RAWSUBTRACT"; };
};

// DO NOT CHANGE NAMES! Only add functions.
// These English names are used internally to store/load ODF v1.0/v1.1 and for
// API XFunctionAccess.
Resource RID_STRLIST_FUNCTION_NAMES_ENGLISH
{
    String SC_OPCODE_IF { Text = "IF" ; };
    String SC_OPCODE_IF_ERROR { Text = "IFERROR" ; };
    String SC_OPCODE_IF_NA { Text = "IFNA" ; };
    String SC_OPCODE_CHOOSE { Text = "CHOOSE" ; };
    String SC_OPCODE_OPEN { Text = "(" ; };
    String SC_OPCODE_CLOSE { Text = ")" ; };
    String SC_OPCODE_TABLE_REF_OPEN { Text = "[" ; };
    String SC_OPCODE_TABLE_REF_CLOSE { Text = "]" ; };
    String SC_OPCODE_TABLE_REF_ITEM_ALL { Text = "#All" ; };
    String SC_OPCODE_TABLE_REF_ITEM_HEADERS { Text = "#Headers" ; };
    String SC_OPCODE_TABLE_REF_ITEM_DATA { Text = "#Data" ; };
    String SC_OPCODE_TABLE_REF_ITEM_TOTALS { Text = "#Totals" ; };
    String SC_OPCODE_TABLE_REF_ITEM_THIS_ROW { Text = "#This Row" ; };
    String SC_OPCODE_ARRAY_OPEN { Text = "{" ; };
    String SC_OPCODE_ARRAY_CLOSE { Text = "}" ; };
    String SC_OPCODE_ARRAY_ROW_SEP { Text = "|" ; };
    String SC_OPCODE_ARRAY_COL_SEP { Text = ";" ; };
    String SC_OPCODE_SEP { Text = ";" ; };
    String SC_OPCODE_PERCENT_SIGN { Text = "%" ; };
    String SC_OPCODE_ADD { Text = "+" ; };
    String SC_OPCODE_SUB { Text = "-" ; };
    String SC_OPCODE_MUL { Text = "*" ; };
    String SC_OPCODE_DIV { Text = "/" ; };
    String SC_OPCODE_AMPERSAND { Text = "&" ; };
    String SC_OPCODE_POW { Text = "^" ; };
    String SC_OPCODE_EQUAL { Text = "=" ; };
    String SC_OPCODE_NOT_EQUAL { Text = "<>" ; };
    String SC_OPCODE_LESS { Text = "<" ; };
    String SC_OPCODE_GREATER { Text = ">" ; };
    String SC_OPCODE_LESS_EQUAL { Text = "<=" ; };
    String SC_OPCODE_GREATER_EQUAL { Text = ">=" ; };
    String SC_OPCODE_AND { Text = "AND" ; };
    String SC_OPCODE_OR { Text = "OR" ; };
    String SC_OPCODE_XOR { Text = "XOR" ; };
    String SC_OPCODE_INTERSECT { Text = "!" ; };
    String SC_OPCODE_UNION { Text = "~" ; };
    String SC_OPCODE_RANGE { Text = ":" ; };
    String SC_OPCODE_NOT { Text = "NOT" ; };
    String SC_OPCODE_NEG { Text = "NEG" ; };
    String SC_OPCODE_NEG_SUB { Text = "-" ; };
    String SC_OPCODE_PI { Text = "PI" ; };
    String SC_OPCODE_RANDOM { Text = "RAND" ; };
    String SC_OPCODE_TRUE { Text = "TRUE" ; };
    String SC_OPCODE_FALSE { Text = "FALSE" ; };
    String SC_OPCODE_GET_ACT_DATE { Text = "TODAY" ; };
    String SC_OPCODE_GET_ACT_TIME { Text = "NOW" ; };
    String SC_OPCODE_NO_VALUE { Text = "NA" ; };
    String SC_OPCODE_CURRENT { Text = "CURRENT" ; };
    String SC_OPCODE_DEG { Text = "DEGREES" ; };
    String SC_OPCODE_RAD { Text = "RADIANS" ; };
    String SC_OPCODE_SIN { Text = "SIN" ; };
    String SC_OPCODE_COS { Text = "COS" ; };
    String SC_OPCODE_TAN { Text = "TAN" ; };
    String SC_OPCODE_COT { Text = "COT" ; };
    String SC_OPCODE_ARC_SIN { Text = "ASIN" ; };
    String SC_OPCODE_ARC_COS { Text = "ACOS" ; };
    String SC_OPCODE_ARC_TAN { Text = "ATAN" ; };
    String SC_OPCODE_ARC_COT { Text = "ACOT" ; };
    String SC_OPCODE_SIN_HYP { Text = "SINH" ; };
    String SC_OPCODE_COS_HYP { Text = "COSH" ; };
    String SC_OPCODE_TAN_HYP { Text = "TANH" ; };
    String SC_OPCODE_COT_HYP { Text = "COTH" ; };
    String SC_OPCODE_ARC_SIN_HYP { Text = "ASINH" ; };
    String SC_OPCODE_ARC_COS_HYP { Text = "ACOSH" ; };
    String SC_OPCODE_ARC_TAN_HYP { Text = "ATANH" ; };
    String SC_OPCODE_ARC_COT_HYP { Text = "ACOTH" ; };
    String SC_OPCODE_COSECANT { Text = "CSC" ; };
    String SC_OPCODE_SECANT { Text = "SEC" ; };
    String SC_OPCODE_COSECANT_HYP { Text = "CSCH" ; };
    String SC_OPCODE_SECANT_HYP { Text = "SECH" ; };
    String SC_OPCODE_EXP { Text = "EXP" ; };
    String SC_OPCODE_LN { Text = "LN" ; };
    String SC_OPCODE_SQRT { Text = "SQRT" ; };
    String SC_OPCODE_FACT { Text = "FACT" ; };
    String SC_OPCODE_GET_YEAR { Text = "YEAR" ; };
    String SC_OPCODE_GET_MONTH { Text = "MONTH" ; };
    String SC_OPCODE_GET_DAY { Text = "DAY" ; };
    String SC_OPCODE_GET_HOUR { Text = "HOUR" ; };
    String SC_OPCODE_GET_MIN { Text = "MINUTE" ; };
    String SC_OPCODE_GET_SEC { Text = "SECOND" ; };
    String SC_OPCODE_PLUS_MINUS { Text = "SIGN" ; };
    String SC_OPCODE_ABS { Text = "ABS" ; };
    String SC_OPCODE_INT { Text = "INT" ; };
    String SC_OPCODE_PHI { Text = "PHI" ; };
    String SC_OPCODE_GAUSS { Text = "GAUSS" ; };
    String SC_OPCODE_IS_EMPTY { Text = "ISBLANK" ; };
    String SC_OPCODE_IS_STRING { Text = "ISTEXT" ; };
    String SC_OPCODE_IS_NON_STRING { Text = "ISNONTEXT" ; };
    String SC_OPCODE_IS_LOGICAL { Text = "ISLOGICAL" ; };
    String SC_OPCODE_TYPE { Text = "TYPE" ; };
    String SC_OPCODE_CELL { Text = "CELL" ; };
    String SC_OPCODE_IS_REF { Text = "ISREF" ; };
    String SC_OPCODE_IS_VALUE { Text = "ISNUMBER" ; };
    String SC_OPCODE_IS_FORMULA { Text = "ISFORMULA" ; };
    String SC_OPCODE_IS_NV { Text = "ISNA" ; };
    String SC_OPCODE_IS_ERR { Text = "ISERR" ; };
    String SC_OPCODE_IS_ERROR { Text = "ISERROR" ; };
    String SC_OPCODE_IS_EVEN { Text = "ISEVEN" ; };
    String SC_OPCODE_IS_ODD { Text = "ISODD" ; };
    String SC_OPCODE_N { Text = "N" ; };
    String SC_OPCODE_GET_DATE_VALUE { Text = "DATEVALUE" ; };
    String SC_OPCODE_GET_TIME_VALUE { Text = "TIMEVALUE" ; };
    String SC_OPCODE_CODE { Text = "CODE" ; };
    String SC_OPCODE_TRIM { Text = "TRIM" ; };
    String SC_OPCODE_UPPER { Text = "UPPER" ; };
    String SC_OPCODE_PROPER { Text = "PROPER" ; };
    String SC_OPCODE_LOWER { Text = "LOWER" ; };
    String SC_OPCODE_LEN { Text = "LEN" ; };
    String SC_OPCODE_T { Text = "T" ; };
    String SC_OPCODE_VALUE { Text = "VALUE" ; };
    String SC_OPCODE_CLEAN { Text = "CLEAN" ; };
    String SC_OPCODE_CHAR { Text = "CHAR" ; };
    String SC_OPCODE_JIS { Text = "JIS" ; };
    String SC_OPCODE_ASC { Text = "ASC" ; };
    String SC_OPCODE_UNICODE { Text = "UNICODE" ; };
    String SC_OPCODE_UNICHAR { Text = "UNICHAR" ; };
    String SC_OPCODE_LOG10 { Text = "LOG10" ; };
    String SC_OPCODE_EVEN { Text = "EVEN" ; };
    String SC_OPCODE_ODD { Text = "ODD" ; };
    String SC_OPCODE_STD_NORM_DIST { Text = "NORMSDIST" ; };
    String SC_OPCODE_STD_NORM_DIST_MS { Text = "NORM.S.DIST" ; };
    String SC_OPCODE_FISHER { Text = "FISHER" ; };
    String SC_OPCODE_FISHER_INV { Text = "FISHERINV" ; };
    String SC_OPCODE_S_NORM_INV { Text = "NORMSINV" ; };
    String SC_OPCODE_S_NORM_INV_MS { Text = "NORM.S.INV" ; };
    String SC_OPCODE_GAMMA_LN { Text = "GAMMALN" ; };
    String SC_OPCODE_GAMMA_LN_MS { Text = "GAMMALN.PRECISE" ; };
    String SC_OPCODE_ERROR_TYPE { Text = "ERRORTYPE" ; };
    String SC_OPCODE_ERROR_TYPE_ODF { Text = "ERROR.TYPE" ; };
    String SC_OPCODE_FORMULA { Text = "FORMULA"; };
    String SC_OPCODE_ARC_TAN_2 { Text = "ATAN2" ; };
    String SC_OPCODE_CEIL_MATH { Text = "CEILING.MATH" ; };
    String SC_OPCODE_CEIL { Text = "CEILING" ; };
    String SC_OPCODE_CEIL_MS { Text = "CEILING.XCL" ; };
    String SC_OPCODE_CEIL_PRECISE { Text = "CEILING.PRECISE" ; };
    String SC_OPCODE_CEIL_ISO { Text = "ISO.CEILING" ; };
    String SC_OPCODE_FLOOR { Text = "FLOOR" ; };
    String SC_OPCODE_FLOOR_MS { Text = "FLOOR.XCL" ; };
    String SC_OPCODE_FLOOR_MATH { Text = "FLOOR.MATH" ; };
    String SC_OPCODE_FLOOR_PRECISE { Text = "FLOOR.PRECISE" ; };
    String SC_OPCODE_ROUND { Text = "ROUND" ; };
    String SC_OPCODE_ROUND_UP { Text = "ROUNDUP" ; };
    String SC_OPCODE_ROUND_DOWN { Text = "ROUNDDOWN" ; };
    String SC_OPCODE_TRUNC { Text = "TRUNC" ; };
    String SC_OPCODE_LOG { Text = "LOG" ; };
    String SC_OPCODE_POWER { Text = "POWER" ; };
    String SC_OPCODE_GCD { Text = "GCD" ; };
    String SC_OPCODE_LCM { Text = "LCM" ; };
    String SC_OPCODE_MOD { Text = "MOD" ; };
    String SC_OPCODE_SUM_PRODUCT { Text = "SUMPRODUCT" ; };
    String SC_OPCODE_SUM_SQ { Text = "SUMSQ" ; };
    String SC_OPCODE_SUM_X2MY2 { Text = "SUMX2MY2" ; };
    String SC_OPCODE_SUM_X2DY2 { Text = "SUMX2PY2" ; };
    String SC_OPCODE_SUM_XMY2 { Text = "SUMXMY2" ; };
    String SC_OPCODE_GET_DATE { Text = "DATE" ; };
    String SC_OPCODE_GET_TIME { Text = "TIME" ; };
    String SC_OPCODE_GET_DIFF_DATE { Text = "DAYS" ; };
    String SC_OPCODE_GET_DIFF_DATE_360 { Text = "DAYS360" ; };
    String SC_OPCODE_GET_DATEDIF { Text = "DATEDIF" ; };
    String SC_OPCODE_MIN { Text = "MIN" ; };
    String SC_OPCODE_MIN_A { Text = "MINA" ; };
    String SC_OPCODE_MAX { Text = "MAX" ; };
    String SC_OPCODE_MAX_A { Text = "MAXA" ; };
    String SC_OPCODE_SUM { Text = "SUM" ; };
    String SC_OPCODE_PRODUCT { Text = "PRODUCT" ; };
    String SC_OPCODE_AVERAGE { Text = "AVERAGE" ; };
    String SC_OPCODE_AVERAGE_A { Text = "AVERAGEA" ; };
    String SC_OPCODE_COUNT { Text = "COUNT" ; };
    String SC_OPCODE_COUNT_2 { Text = "COUNTA" ; };
    String SC_OPCODE_NPV { Text = "NPV" ; };
    String SC_OPCODE_IRR { Text = "IRR" ; };
    String SC_OPCODE_MIRR { Text = "MIRR" ; };
    String SC_OPCODE_ISPMT { Text = "ISPMT" ; };
    String SC_OPCODE_VAR { Text = "VAR" ; };
    String SC_OPCODE_VAR_A { Text = "VARA" ; };
    String SC_OPCODE_VAR_P { Text = "VARP" ; };
    String SC_OPCODE_VAR_P_A { Text = "VARPA" ; };
    String SC_OPCODE_VAR_P_MS { Text = "VAR.P" ; };
    String SC_OPCODE_VAR_S { Text = "VAR.S" ; };
    String SC_OPCODE_ST_DEV { Text = "STDEV" ; };
    String SC_OPCODE_ST_DEV_A { Text = "STDEVA" ; };
    String SC_OPCODE_ST_DEV_P { Text = "STDEVP" ; };
    String SC_OPCODE_ST_DEV_P_A { Text = "STDEVPA" ; };
    String SC_OPCODE_ST_DEV_P_MS { Text = "STDEV.P" ; };
    String SC_OPCODE_ST_DEV_S { Text = "STDEV.S" ; };
    String SC_OPCODE_B { Text = "B" ; };
    String SC_OPCODE_NORM_DIST { Text = "NORMDIST" ; };
    String SC_OPCODE_NORM_DIST_MS { Text = "NORM.DIST" ; };
    String SC_OPCODE_EXP_DIST { Text = "EXPONDIST" ; };
    String SC_OPCODE_EXP_DIST_MS { Text = "EXPON.DIST" ; };
    String SC_OPCODE_BINOM_DIST { Text = "BINOMDIST" ; };
    String SC_OPCODE_BINOM_DIST_MS { Text = "BINOM.DIST" ; };
    String SC_OPCODE_POISSON_DIST { Text = "POISSON" ; };
    String SC_OPCODE_POISSON_DIST_MS { Text = "POISSON.DIST" ; };
    String SC_OPCODE_COMBIN { Text = "COMBIN" ; };
    String SC_OPCODE_COMBIN_A { Text = "COMBINA" ; };
    String SC_OPCODE_PERMUT { Text = "PERMUT" ; };
    String SC_OPCODE_PERMUTATION_A { Text = "PERMUTATIONA" ; };
    String SC_OPCODE_PV { Text = "PV" ; };
    String SC_OPCODE_SYD { Text = "SYD" ; };
    String SC_OPCODE_DDB { Text = "DDB" ; };
    String SC_OPCODE_DB { Text = "DB" ; };
    String SC_OPCODE_VBD { Text = "VDB" ; };
    String SC_OPCODE_DURATION { Text = "DURATION" ; };
    String SC_OPCODE_SLN { Text = "SLN" ; };
    String SC_OPCODE_PMT { Text = "PMT" ; };
    String SC_OPCODE_COLUMNS { Text = "COLUMNS" ; };
    String SC_OPCODE_ROWS { Text = "ROWS" ; };
    String SC_OPCODE_SHEETS { Text = "SHEETS" ; };
    String SC_OPCODE_COLUMN { Text = "COLUMN" ; };
    String SC_OPCODE_ROW { Text = "ROW" ; };
    String SC_OPCODE_SHEET { Text = "SHEET" ; };
    String SC_OPCODE_RRI { Text = "ZGZ" ; };
    String SC_OPCODE_FV { Text = "FV" ; };
    String SC_OPCODE_NPER { Text = "NPER" ; };
    String SC_OPCODE_RATE { Text = "RATE" ; };
    String SC_OPCODE_IPMT { Text = "IPMT" ; };
    String SC_OPCODE_PPMT { Text = "PPMT" ; };
    String SC_OPCODE_CUM_IPMT { Text = "CUMIPMT" ; };
    String SC_OPCODE_CUM_PRINC { Text = "CUMPRINC" ; };
    String SC_OPCODE_EFFECTIVE { Text = "EFFECTIVE" ; };
    String SC_OPCODE_NOMINAL { Text = "NOMINAL" ; };
    String SC_OPCODE_SUB_TOTAL { Text = "SUBTOTAL" ; };
    String SC_OPCODE_DB_SUM { Text = "DSUM" ; };
    String SC_OPCODE_DB_COUNT { Text = "DCOUNT" ; };
    String SC_OPCODE_DB_COUNT_2 { Text = "DCOUNTA" ; };
    String SC_OPCODE_DB_AVERAGE { Text = "DAVERAGE" ; };
    String SC_OPCODE_DB_GET { Text = "DGET" ; };
    String SC_OPCODE_DB_MAX { Text = "DMAX" ; };
    String SC_OPCODE_DB_MIN { Text = "DMIN" ; };
    String SC_OPCODE_DB_PRODUCT { Text = "DPRODUCT" ; };
    String SC_OPCODE_DB_STD_DEV { Text = "DSTDEV" ; };
    String SC_OPCODE_DB_STD_DEV_P { Text = "DSTDEVP" ; };
    String SC_OPCODE_DB_VAR { Text = "DVAR" ; };
    String SC_OPCODE_DB_VAR_P { Text = "DVARP" ; };
    String SC_OPCODE_INDIRECT { Text = "INDIRECT" ; };
    String SC_OPCODE_ADDRESS { Text = "ADDRESS" ; };
    String SC_OPCODE_MATCH { Text = "MATCH" ; };
    String SC_OPCODE_COUNT_EMPTY_CELLS { Text = "COUNTBLANK" ; };
    String SC_OPCODE_COUNT_IF { Text = "COUNTIF" ; };
    String SC_OPCODE_SUM_IF { Text = "SUMIF" ; };
    String SC_OPCODE_AVERAGE_IF { Text = "AVERAGEIF" ; };
    String SC_OPCODE_SUM_IFS { Text = "SUMIFS" ; };
    String SC_OPCODE_AVERAGE_IFS { Text = "AVERAGEIFS" ; };
    String SC_OPCODE_COUNT_IFS { Text = "COUNTIFS" ; };
    String SC_OPCODE_LOOKUP { Text = "LOOKUP" ; };
    String SC_OPCODE_V_LOOKUP { Text = "VLOOKUP" ; };
    String SC_OPCODE_H_LOOKUP { Text = "HLOOKUP" ; };
    String SC_OPCODE_MULTI_AREA { Text = "MULTIRANGE" ; };      // legacy for range list (union)
    String SC_OPCODE_OFFSET { Text = "OFFSET" ; };
    String SC_OPCODE_INDEX { Text = "INDEX" ; };
    String SC_OPCODE_AREAS { Text = "AREAS" ; };
    String SC_OPCODE_CURRENCY { Text = "DOLLAR" ; };
    String SC_OPCODE_REPLACE { Text = "REPLACE" ; };
    String SC_OPCODE_FIXED { Text = "FIXED" ; };
    String SC_OPCODE_FIND { Text = "FIND" ; };
    String SC_OPCODE_EXACT { Text = "EXACT" ; };
    String SC_OPCODE_LEFT { Text = "LEFT" ; };
    String SC_OPCODE_RIGHT { Text = "RIGHT" ; };
    String SC_OPCODE_SEARCH { Text = "SEARCH" ; };
    String SC_OPCODE_MID { Text = "MID" ; };
    String SC_OPCODE_LENB { Text = "LENB" ; };
    String SC_OPCODE_RIGHTB { Text = "RIGHTB" ; };
    String SC_OPCODE_LEFTB { Text = "LEFTB" ; };
    String SC_OPCODE_MIDB { Text = "MIDB" ; };
    String SC_OPCODE_TEXT { Text = "TEXT" ; };
    String SC_OPCODE_SUBSTITUTE { Text = "SUBSTITUTE" ; };
    String SC_OPCODE_REPT { Text = "REPT" ; };
    String SC_OPCODE_CONCAT { Text = "CONCATENATE" ; };
    String SC_OPCODE_CONCAT_MS { Text = "CONCAT" ; };
    String SC_OPCODE_TEXTJOIN_MS { Text = "TEXTJOIN" ; };
    String SC_OPCODE_IFS_MS { Text = "IFS" ; };
    String SC_OPCODE_SWITCH_MS { Text = "SWITCH" ; };
    String SC_OPCODE_MINIFS_MS { Text = "MINIFS" ; };
    String SC_OPCODE_MAXIFS_MS { Text = "MAXIFS" ; };
    String SC_OPCODE_MAT_VALUE { Text = "MVALUE" ; };
    String SC_OPCODE_MAT_DET { Text = "MDETERM" ; };
    String SC_OPCODE_MAT_INV { Text = "MINVERSE" ; };
    String SC_OPCODE_MAT_MULT { Text = "MMULT" ; };
    String SC_OPCODE_MAT_TRANS { Text = "TRANSPOSE" ; };
    String SC_OPCODE_MATRIX_UNIT { Text = "MUNIT" ; };
    String SC_OPCODE_BACK_SOLVER { Text = "GOALSEEK" ; };
    String SC_OPCODE_HYP_GEOM_DIST { Text = "HYPGEOMDIST" ; };
    String SC_OPCODE_HYP_GEOM_DIST_MS { Text = "HYPGEOM.DIST" ; };
    String SC_OPCODE_LOG_NORM_DIST { Text = "LOGNORMDIST" ; };
    String SC_OPCODE_LOG_NORM_DIST_MS { Text = "LOGNORM.DIST" ; };
    String SC_OPCODE_T_DIST { Text = "TDIST" ; };
    String SC_OPCODE_T_DIST_2T { Text = "T.DIST.2T" ; };
    String SC_OPCODE_T_DIST_MS { Text = "T.DIST" ; };
    String SC_OPCODE_T_DIST_RT { Text = "T.DIST.RT" ; };
    String SC_OPCODE_F_DIST { Text = "FDIST" ; };
    String SC_OPCODE_F_DIST_LT { Text = "F.DIST" ; };
    String SC_OPCODE_F_DIST_RT { Text = "F.DIST.RT" ; };
    String SC_OPCODE_CHI_DIST { Text = "CHIDIST" ; };
    String SC_OPCODE_CHI_DIST_MS { Text = "CHISQ.DIST.RT" ; };
    String SC_OPCODE_WEIBULL { Text = "WEIBULL" ; };
    String SC_OPCODE_WEIBULL_MS { Text = "WEIBULL.DIST" ; };
    String SC_OPCODE_NEG_BINOM_VERT { Text = "NEGBINOMDIST" ; };
    String SC_OPCODE_NEG_BINOM_DIST_MS { Text = "NEGBINOM.DIST" ; };
    String SC_OPCODE_CRIT_BINOM { Text = "CRITBINOM" ; };
    String SC_OPCODE_BINOM_INV { Text = "BINOM.INV" ; };
    String SC_OPCODE_KURT { Text = "KURT" ; };
    String SC_OPCODE_HAR_MEAN { Text = "HARMEAN" ; };
    String SC_OPCODE_GEO_MEAN { Text = "GEOMEAN" ; };
    String SC_OPCODE_STANDARD { Text = "STANDARDIZE" ; };
    String SC_OPCODE_AVE_DEV { Text = "AVEDEV" ; };
    String SC_OPCODE_SKEW { Text = "SKEW" ; };
    String SC_OPCODE_SKEWP   { Text = "SKEWP" ; };
    String SC_OPCODE_DEV_SQ { Text = "DEVSQ" ; };
    String SC_OPCODE_MEDIAN { Text = "MEDIAN" ; };
    String SC_OPCODE_MODAL_VALUE { Text = "MODE" ; };
    String SC_OPCODE_MODAL_VALUE_MS { Text = "MODE.SNGL" ; };
    String SC_OPCODE_MODAL_VALUE_MULTI { Text = "MODE.MULT" ; };
    String SC_OPCODE_Z_TEST { Text = "ZTEST" ; };
    String SC_OPCODE_Z_TEST_MS { Text = "Z.TEST" ; };
    String SC_OPCODE_AGGREGATE { Text = "AGGREGATE" ; };
    String SC_OPCODE_T_TEST { Text = "TTEST" ; };
    String SC_OPCODE_T_TEST_MS { Text = "T.TEST" ; };
    String SC_OPCODE_RANK { Text = "RANK" ; };
    String SC_OPCODE_PERCENTILE { Text = "PERCENTILE" ; };
    String SC_OPCODE_PERCENT_RANK { Text = "PERCENTRANK" ; };
    String SC_OPCODE_PERCENTILE_INC { Text = "PERCENTILE.INC" ; };
    String SC_OPCODE_PERCENT_RANK_INC { Text = "PERCENTRANK.INC" ; };
    String SC_OPCODE_QUARTILE_INC { Text = "QUARTILE.INC" ; };
    String SC_OPCODE_RANK_EQ { Text = "RANK.EQ" ; };
    String SC_OPCODE_PERCENTILE_EXC { Text = "PERCENTILE.EXC" ; };
    String SC_OPCODE_PERCENT_RANK_EXC { Text = "PERCENTRANK.EXC" ; };
    String SC_OPCODE_QUARTILE_EXC { Text = "QUARTILE.EXC" ; };
    String SC_OPCODE_RANK_AVG { Text = "RANK.AVG" ; };
    String SC_OPCODE_LARGE { Text = "LARGE" ; };
    String SC_OPCODE_SMALL { Text = "SMALL" ; };
    String SC_OPCODE_FREQUENCY { Text = "FREQUENCY" ; };
    String SC_OPCODE_QUARTILE { Text = "QUARTILE" ; };
    String SC_OPCODE_NORM_INV { Text = "NORMINV" ; };
    String SC_OPCODE_NORM_INV_MS { Text = "NORM.INV" ; };
    String SC_OPCODE_CONFIDENCE { Text = "CONFIDENCE" ; };
    String SC_OPCODE_CONFIDENCE_N { Text = "CONFIDENCE.NORM" ; };
    String SC_OPCODE_CONFIDENCE_T { Text = "CONFIDENCE.T" ; };
    String SC_OPCODE_F_TEST { Text = "FTEST" ; };
    String SC_OPCODE_F_TEST_MS { Text = "F.TEST" ; };
    String SC_OPCODE_TRIM_MEAN { Text = "TRIMMEAN" ; };
    String SC_OPCODE_PROB { Text = "PROB" ; };
    String SC_OPCODE_CORREL { Text = "CORREL" ; };
    String SC_OPCODE_COVAR { Text = "COVAR" ; };
    String SC_OPCODE_COVARIANCE_P { Text = "COVARIANCE.P" ; };
    String SC_OPCODE_COVARIANCE_S { Text = "COVARIANCE.S" ; };
    String SC_OPCODE_PEARSON { Text = "PEARSON" ; };
    String SC_OPCODE_RSQ { Text = "RSQ" ; };
    String SC_OPCODE_STEYX { Text = "STEYX" ; };
    String SC_OPCODE_SLOPE { Text = "SLOPE" ; };
    String SC_OPCODE_INTERCEPT { Text = "INTERCEPT" ; };
    String SC_OPCODE_TREND { Text = "TREND" ; };
    String SC_OPCODE_GROWTH { Text = "GROWTH" ; };
    String SC_OPCODE_LINEST { Text = "LINEST" ; };
    String SC_OPCODE_LOGEST { Text = "LOGEST" ; };
    String SC_OPCODE_FORECAST { Text = "FORECAST" ; };
    String SC_OPCODE_FORECAST_ETS_ADD { Text = "FORECAST.ETS.ADD" ; };
    String SC_OPCODE_FORECAST_ETS_SEA { Text = "FORECAST.ETS.SEASONALITY" ; };
    String SC_OPCODE_FORECAST_ETS_MUL { Text = "FORECAST.ETS.MULT" ; };
    String SC_OPCODE_FORECAST_ETS_PIA { Text = "FORECAST.ETS.PI.ADD" ; };
    String SC_OPCODE_FORECAST_ETS_PIM { Text = "FORECAST.ETS.PI.MULT" ; };
    String SC_OPCODE_FORECAST_ETS_STA { Text = "FORECAST.ETS.STAT.ADD" ; };
    String SC_OPCODE_FORECAST_ETS_STM { Text = "FORECAST.ETS.STAT.MULT" ; };
    String SC_OPCODE_FORECAST_LIN { Text = "FORECAST.LINEAR" ; };
    String SC_OPCODE_CHI_INV { Text = "CHIINV" ; };
    String SC_OPCODE_CHI_INV_MS { Text = "CHISQ.INV.RT" ; };
    String SC_OPCODE_GAMMA_DIST { Text = "GAMMADIST" ; };
    String SC_OPCODE_GAMMA_DIST_MS { Text = "GAMMA.DIST" ; };
    String SC_OPCODE_GAMMA_INV { Text = "GAMMAINV" ; };
    String SC_OPCODE_GAMMA_INV_MS { Text = "GAMMA.INV" ; };
    String SC_OPCODE_T_INV { Text = "TINV" ; };
    String SC_OPCODE_T_INV_2T { Text = "T.INV.2T" ; };
    String SC_OPCODE_T_INV_MS { Text = "T.INV" ; };
    String SC_OPCODE_F_INV { Text = "FINV" ; };
    String SC_OPCODE_F_INV_LT { Text = "F.INV" ; };
    String SC_OPCODE_F_INV_RT { Text = "F.INV.RT" ; };
    String SC_OPCODE_CHI_TEST { Text = "CHITEST" ; };
    String SC_OPCODE_CHI_TEST_MS { Text = "CHISQ.TEST" ; };
    String SC_OPCODE_LOG_INV { Text = "LOGINV" ; };
    String SC_OPCODE_LOG_INV_MS { Text = "LOGNORM.INV" ; };
    String SC_OPCODE_TABLE_OP { Text = "TABLE" ; };
    String SC_OPCODE_BETA_DIST { Text = "BETADIST" ; };
    String SC_OPCODE_BETA_INV { Text = "BETAINV" ; };
    String SC_OPCODE_BETA_DIST_MS { Text = "BETA.DIST" ; };
    String SC_OPCODE_BETA_INV_MS { Text = "BETA.INV" ; };
    String SC_OPCODE_WEEK { Text = "WEEKNUM" ; };
    String SC_OPCODE_ISOWEEKNUM { Text = "ISOWEEKNUM" ; };
    String SC_OPCODE_WEEKNUM_OOO { Text = "WEEKNUM_OOO" ; };
    String SC_OPCODE_EASTERSUNDAY { Text = "EASTERSUNDAY" ; };
    String SC_OPCODE_GET_DAY_OF_WEEK { Text = "WEEKDAY" ; };
    String SC_OPCODE_NETWORKDAYS { Text = "NETWORKDAYS" ; };
    String SC_OPCODE_NETWORKDAYS_MS { Text = "NETWORKDAYS.INTL" ; };
    String SC_OPCODE_WORKDAY_MS { Text = "WORKDAY.INTL" ; };
    String SC_OPCODE_NO_NAME { Text = "#NAME!" ; };
    String SC_OPCODE_STYLE { Text = "STYLE" ; };
    String SC_OPCODE_DDE { Text = "DDE" ; };
    String SC_OPCODE_BASE { Text = "BASE" ; };
    String SC_OPCODE_DECIMAL { Text = "DECIMAL" ; };
    String SC_OPCODE_CONVERT { Text = "CONVERT" ; };
    String SC_OPCODE_ROMAN { Text = "ROMAN" ; };
    String SC_OPCODE_ARABIC { Text = "ARABIC" ; };
    String SC_OPCODE_HYPERLINK { Text = "HYPERLINK" ; };
    String SC_OPCODE_INFO { Text = "INFO" ; };
    String SC_OPCODE_BAHTTEXT { Text = "BAHTTEXT" ; };
    String SC_OPCODE_GET_PIVOT_DATA { Text = "GETPIVOTDATA" ; };
    String SC_OPCODE_EUROCONVERT { Text = "EUROCONVERT" ; };
    String SC_OPCODE_NUMBERVALUE { Text = "NUMBERVALUE" ; };
    String SC_OPCODE_GAMMA { Text = "GAMMA" ; };
    String SC_OPCODE_CHISQ_DIST { Text = "CHISQDIST" ; };
    String SC_OPCODE_CHISQ_DIST_MS { Text = "CHISQ.DIST" ; };
    String SC_OPCODE_CHISQ_INV_MS { Text = "CHISQ.INV" ;};
    String SC_OPCODE_CHISQ_INV { Text = "CHISQINV" ;};
    String SC_OPCODE_BITAND    { Text = "BITAND" ;};
    String SC_OPCODE_BITOR    { Text = "BITOR" ;};
    String SC_OPCODE_BITXOR    { Text = "BITXOR" ;};
    String SC_OPCODE_BITRSHIFT    { Text = "BITRSHIFT" ;};
    String SC_OPCODE_BITLSHIFT    { Text = "BITLSHIFT" ;};
    /* BEGIN defined ERROR.TYPE() values. */
    String SC_OPCODE_ERROR_NULL    { Text = "#NULL!"  ; };
    String SC_OPCODE_ERROR_DIVZERO { Text = "#DIV/0!" ; };
    String SC_OPCODE_ERROR_VALUE   { Text = "#VALUE!" ; };
    String SC_OPCODE_ERROR_REF     { Text = "#REF!"   ; };
    String SC_OPCODE_ERROR_NAME    { Text = "#NAME?"  ; };
    String SC_OPCODE_ERROR_NUM     { Text = "#NUM!"   ; };
    String SC_OPCODE_ERROR_NA      { Text = "#N/A"    ; };
    /* END defined ERROR.TYPE() values. */
    String SC_OPCODE_FILTERXML     { Text = "FILTERXML";};
    String SC_OPCODE_WEBSERVICE    { Text = "WEBSERVICE"; };
    String SC_OPCODE_COLOR         { Text = "COLOR"; };
    String SC_OPCODE_ERF_MS { Text = "ERF.PRECISE" ; };
    String SC_OPCODE_ERFC_MS { Text = "ERFC.PRECISE" ; };
    String SC_OPCODE_ENCODEURL     { Text = "ENCODEURL"; };
    String SC_OPCODE_RAWSUBTRACT    { Text = "RAWSUBTRACT"; };
};

Resource RID_STRLIST_FUNCTION_NAMES
{
    String SC_OPCODE_IF
    {
        Text [ en-US ] = "IF" ;
    };
    String SC_OPCODE_IF_ERROR
    {
        Text [ en-US ] = "IFERROR" ;
    };
    String SC_OPCODE_IF_NA
    {
        Text [ en-US ] = "IFNA" ;
    };
    String SC_OPCODE_CHOOSE
    {
        Text [ en-US ] = "CHOOSE" ;
    };
    String SC_OPCODE_OPEN { Text = "(" ; };
    String SC_OPCODE_CLOSE { Text = ")" ; };
    String SC_OPCODE_TABLE_REF_OPEN { Text = "[" ; };
    String SC_OPCODE_TABLE_REF_CLOSE { Text = "]" ; };
    String SC_OPCODE_TABLE_REF_ITEM_ALL
    {
        Text [ en-US ] = "#All" ;
    };
    String SC_OPCODE_TABLE_REF_ITEM_HEADERS
    {
        Text [ en-US ] = "#Headers" ;
    };
    String SC_OPCODE_TABLE_REF_ITEM_DATA
    {
        Text [ en-US ] = "#Data" ;
    };
    String SC_OPCODE_TABLE_REF_ITEM_TOTALS
    {
        Text [ en-US ] = "#Totals" ;
    };
    String SC_OPCODE_TABLE_REF_ITEM_THIS_ROW
    {
        Text [ en-US ] = "#This Row" ;
    };
    String SC_OPCODE_ARRAY_OPEN { Text = "{" ; };
    String SC_OPCODE_ARRAY_CLOSE { Text = "}" ; };
    String SC_OPCODE_ARRAY_ROW_SEP { Text = "|" ; };
    String SC_OPCODE_ARRAY_COL_SEP { Text = ";" ; };
    String SC_OPCODE_SEP { Text = ";" ; };
    String SC_OPCODE_PERCENT_SIGN { Text = "%" ; };
    String SC_OPCODE_ADD { Text = "+" ; };
    String SC_OPCODE_SUB { Text = "-" ; };
    String SC_OPCODE_MUL { Text = "*" ; };
    String SC_OPCODE_DIV { Text = "/" ; };
    String SC_OPCODE_AMPERSAND { Text = "&" ; };
    String SC_OPCODE_POW { Text = "^" ; };
    String SC_OPCODE_EQUAL { Text = "=" ; };
    String SC_OPCODE_NOT_EQUAL { Text = "<>" ; };
    String SC_OPCODE_LESS { Text = "<" ; };
    String SC_OPCODE_GREATER { Text = ">" ; };
    String SC_OPCODE_LESS_EQUAL { Text = "<=" ; };
    String SC_OPCODE_GREATER_EQUAL { Text = ">=" ; };
    String SC_OPCODE_AND
    {
        Text [ en-US ] = "AND" ;
    };
    String SC_OPCODE_OR
    {
        Text [ en-US ] = "OR" ;
    };
    String SC_OPCODE_XOR
    {
        Text [ en-US ] = "XOR" ;
    };
    String SC_OPCODE_INTERSECT { Text = "!" ; };
    String SC_OPCODE_UNION { Text = "~" ; };
    String SC_OPCODE_RANGE { Text = ":" ; };
    String SC_OPCODE_NOT
    {
        Text [ en-US ] = "NOT" ;
    };
    String SC_OPCODE_NEG
    {
        Text [ en-US ] = "NEG";
    };
    String SC_OPCODE_NEG_SUB { Text = "-" ; };
    String SC_OPCODE_PI
    {
         // ???
        Text [ en-US ] = "PI" ;
    };
    String SC_OPCODE_RANDOM
    {
        Text [ en-US ] = "RAND" ;
    };
    String SC_OPCODE_TRUE
    {
        Text [ en-US ] = "TRUE" ;
    };
    String SC_OPCODE_FALSE
    {
        Text [ en-US ] = "FALSE" ;
    };
    String SC_OPCODE_GET_ACT_DATE
    {
        Text [ en-US ] = "TODAY" ;
    };
    String SC_OPCODE_GET_ACT_TIME
    {
        Text [ en-US ] = "NOW" ;
    };
    String SC_OPCODE_NO_VALUE
    {
        Text [ en-US ] = "NA" ;
    };
    String SC_OPCODE_CURRENT
    {
        Text [ en-US ] = "CURRENT" ;
    };
    String SC_OPCODE_DEG
    {
        Text [ en-US ] = "DEGREES" ;
    };
    String SC_OPCODE_RAD
    {
        Text [ en-US ] = "RADIANS" ;
    };
    String SC_OPCODE_SIN
    {
        Text [ en-US ] = "SIN" ;
    };
    String SC_OPCODE_COS
    {
        Text [ en-US ] = "COS";
    };
    String SC_OPCODE_TAN
    {
        Text [ en-US ] = "TAN";
    };
    String SC_OPCODE_COT
    {
        Text [ en-US ] = "COT";
    };
    String SC_OPCODE_ARC_SIN
    {
        Text [ en-US ] = "ASIN" ;
    };
    String SC_OPCODE_ARC_COS
    {
        Text [ en-US ] = "ACOS" ;
    };
    String SC_OPCODE_ARC_TAN
    {
        Text [ en-US ] = "ATAN" ;
    };
    String SC_OPCODE_ARC_COT
    {
        Text [ en-US ] = "ACOT" ;
    };
    String SC_OPCODE_SIN_HYP
    {
        Text [ en-US ] = "SINH" ;
    };
    String SC_OPCODE_COS_HYP
    {
        Text [ en-US ] = "COSH" ;
    };
    String SC_OPCODE_TAN_HYP
    {
        Text [ en-US ] = "TANH" ;
    };
    String SC_OPCODE_COT_HYP
    {
        Text [ en-US ] = "COTH" ;
    };
    String SC_OPCODE_ARC_SIN_HYP
    {
        Text [ en-US ] = "ASINH" ;
    };
    String SC_OPCODE_ARC_COS_HYP
    {
        Text [ en-US ] = "ACOSH" ;
    };
    String SC_OPCODE_ARC_TAN_HYP
    {
        Text [ en-US ] = "ATANH" ;
    };
    String SC_OPCODE_ARC_COT_HYP
    {
        Text [ en-US ] = "ACOTH" ;
    };
    String SC_OPCODE_COSECANT
    {
        Text [ en-US ] = "CSC" ;
    };
    String SC_OPCODE_SECANT
    {
        Text [ en-US ] = "SEC" ;
    };
    String SC_OPCODE_COSECANT_HYP
    {
        Text [ en-US ] = "CSCH" ;
    };
    String SC_OPCODE_SECANT_HYP
    {
        Text [ en-US ] = "SECH" ;
    };
    String SC_OPCODE_EXP
    {
        Text [ en-US ] = "EXP";
    };
    String SC_OPCODE_LN
    {
        Text [ en-US ] = "LN";
    };
    String SC_OPCODE_SQRT
    {
        Text [ en-US ] = "SQRT" ;
    };
    String SC_OPCODE_FACT
    {
        Text [ en-US ] = "FACT" ;
    };
    String SC_OPCODE_GET_YEAR
    {
        Text [ en-US ] = "YEAR" ;
    };
    String SC_OPCODE_GET_MONTH
    {
        Text [ en-US ] = "MONTH" ;
    };
    String SC_OPCODE_GET_DAY
    {
        Text [ en-US ] = "DAY" ;
    };
    String SC_OPCODE_GET_HOUR
    {
        Text [ en-US ] = "HOUR" ;
    };
    String SC_OPCODE_GET_MIN
    {
        Text [ en-US ] = "MINUTE" ;
    };
    String SC_OPCODE_GET_SEC
    {
        Text [ en-US ] = "SECOND" ;
    };
    String SC_OPCODE_PLUS_MINUS
    {
        Text [ en-US ] = "SIGN" ;
    };
    String SC_OPCODE_ABS
    {
        Text [ en-US ] = "ABS" ;
    };
    String SC_OPCODE_INT
    {
        Text [ en-US ] = "INT" ;
    };
    String SC_OPCODE_PHI
    {
        Text [ en-US ] = "PHI";
    };
    String SC_OPCODE_GAUSS
    {
        Text [ en-US ] = "GAUSS";
    };
    String SC_OPCODE_IS_EMPTY
    {
        Text [ en-US ] = "ISBLANK" ;
    };
    String SC_OPCODE_IS_STRING
    {
        Text [ en-US ] = "ISTEXT" ;
    };
    String SC_OPCODE_IS_NON_STRING
    {
        Text [ en-US ] = "ISNONTEXT" ;
    };
    String SC_OPCODE_IS_LOGICAL
    {
        Text [ en-US ] = "ISLOGICAL" ;
    };
    String SC_OPCODE_TYPE
    {
        Text [ en-US ] = "TYPE" ;
    };
    String SC_OPCODE_CELL
    {
        Text [ en-US ] = "CELL";
    };
    String SC_OPCODE_IS_REF
    {
        Text [ en-US ] = "ISREF" ;
    };
    String SC_OPCODE_IS_VALUE
    {
        Text [ en-US ] = "ISNUMBER" ;
    };
    String SC_OPCODE_IS_FORMULA
    {
        Text [ en-US ] = "ISFORMULA" ;
    };
    String SC_OPCODE_IS_NV
    {
        Text [ en-US ] = "ISNA" ;
    };
    String SC_OPCODE_IS_ERR
    {
        Text [ en-US ] = "ISERR" ;
    };
    String SC_OPCODE_IS_ERROR
    {
        Text [ en-US ] = "ISERROR" ;
    };
    String SC_OPCODE_IS_EVEN
    {
        Text [ en-US ] = "ISEVEN" ;
    };
    String SC_OPCODE_IS_ODD
    {
        Text [ en-US ] = "ISODD" ;
    };
    String SC_OPCODE_N
    {
        Text [ en-US ] = "N" ;
    };
    String SC_OPCODE_GET_DATE_VALUE
    {
        Text [ en-US ] = "DATEVALUE" ;
    };
    String SC_OPCODE_GET_TIME_VALUE
    {
        Text [ en-US ] = "TIMEVALUE" ;
    };
    String SC_OPCODE_CODE
    {
        Text [ en-US ] = "CODE" ;
    };
    String SC_OPCODE_TRIM
    {
        Text [ en-US ] = "TRIM" ;
    };
    String SC_OPCODE_UPPER
    {
        Text [ en-US ] = "UPPER" ;
    };
    String SC_OPCODE_PROPER
    {
        Text [ en-US ] = "PROPER" ;
    };
    String SC_OPCODE_LOWER
    {
        Text [ en-US ] = "LOWER" ;
    };
    String SC_OPCODE_LEN
    {
        Text [ en-US ] = "LEN" ;
    };
    String SC_OPCODE_T
    {
        Text [ en-US ] = "T";
    };
    String SC_OPCODE_VALUE
    {
        Text [ en-US ] = "VALUE" ;
    };
    String SC_OPCODE_CLEAN
    {
        Text [ en-US ] = "CLEAN" ;
    };
    String SC_OPCODE_CHAR
    {
        Text [ en-US ] = "CHAR" ;
    };
    String SC_OPCODE_JIS
    {
        Text [ en-US ] = "JIS" ;
    };
    String SC_OPCODE_ASC
    {
        Text [ en-US ] = "ASC" ;
    };
    String SC_OPCODE_UNICODE
    {
        Text [ en-US ] = "UNICODE" ;
    };
    String SC_OPCODE_UNICHAR
    {
        Text [ en-US ] = "UNICHAR" ;
    };
    String SC_OPCODE_LOG10
    {
        Text [ en-US ] = "LOG10";
    };
    String SC_OPCODE_EVEN
    {
        Text [ en-US ] = "EVEN" ;
    };
    String SC_OPCODE_ODD
    {
        Text [ en-US ] = "ODD" ;
    };
    String SC_OPCODE_STD_NORM_DIST
    {
        Text [ en-US ] = "NORMSDIST" ;
    };
    String SC_OPCODE_STD_NORM_DIST_MS
    {
        Text [ en-US ] = "NORM.S.DIST" ;
    };
    String SC_OPCODE_FISHER
    {
        Text [ en-US ] = "FISHER";
    };
    String SC_OPCODE_FISHER_INV
    {
        Text [ en-US ] = "FISHERINV" ;
    };
    String SC_OPCODE_S_NORM_INV
    {
        Text [ en-US ] = "NORMSINV" ;
    };
    String SC_OPCODE_S_NORM_INV_MS
    {
        Text [ en-US ] = "NORM.S.INV" ;
    };
    String SC_OPCODE_GAMMA_LN
    {
        Text [ en-US ] = "GAMMALN" ;
    };
    String SC_OPCODE_GAMMA_LN_MS
    {
        Text [ en-US ] = "GAMMALN.PRECISE" ;
    };
    String SC_OPCODE_ERROR_TYPE
    {
        Text [ en-US ] = "ERRORTYPE" ;
    };
    String SC_OPCODE_ERROR_TYPE_ODF
    {
        Text [ en-US ] = "ERROR.TYPE" ;
    };
    String SC_OPCODE_FORMULA
    {
        Text [ en-US ] = "FORMULA" ;
    };
    String SC_OPCODE_ARABIC
    {
        Text [ en-US ] = "ARABIC";
    };
    String SC_OPCODE_ARC_TAN_2
    {
        Text [ en-US ] = "ATAN2" ;
    };
    String SC_OPCODE_CEIL_MATH
    {
        Text [ en-US ] = "CEILING.MATH" ;
    };
    String SC_OPCODE_CEIL
    {
        Text [ en-US ] = "CEILING" ;
    };
    String SC_OPCODE_CEIL_MS
    {
        Text [ en-US ] = "CEILING.XCL" ;
    };
    String SC_OPCODE_CEIL_PRECISE
    {
        Text [ en-US ] = "CEILING.PRECISE" ;
    };
    String SC_OPCODE_CEIL_ISO
    {
        Text [ en-US ] = "ISO.CEILING" ;
    };
    String SC_OPCODE_FLOOR
    {
        Text [ en-US ] = "FLOOR" ;
    };
    String SC_OPCODE_FLOOR_MS
    {
        Text [ en-US ] = "FLOOR.XCL" ;
    };
    String SC_OPCODE_FLOOR_MATH
    {
        Text [ en-US ] = "FLOOR.MATH" ;
    };
    String SC_OPCODE_FLOOR_PRECISE
    {
        Text [ en-US ] = "FLOOR.PRECISE" ;
    };
    String SC_OPCODE_ROUND
    {
        Text [ en-US ] = "ROUND" ;
    };
    String SC_OPCODE_ROUND_UP
    {
        Text [ en-US ] = "ROUNDUP" ;
    };
    String SC_OPCODE_ROUND_DOWN
    {
        Text [ en-US ] = "ROUNDDOWN" ;
    };
    String SC_OPCODE_TRUNC
    {
        Text [ en-US ] = "TRUNC" ;
    };
    String SC_OPCODE_LOG
    {
        Text [ en-US ] = "LOG";
    };
    String SC_OPCODE_POWER
    {
        Text [ en-US ] = "POWER" ;
    };
    String SC_OPCODE_GCD
    {
        Text [ en-US ] = "GCD" ;
    };
    String SC_OPCODE_LCM
    {
        Text [ en-US ] = "LCM" ;
    };
    String SC_OPCODE_MOD
    {
        Text [ en-US ] = "MOD" ;
    };
    String SC_OPCODE_SUM_PRODUCT
    {
        Text [ en-US ] = "SUMPRODUCT" ;
    };
    String SC_OPCODE_SUM_SQ
    {
        Text [ en-US ] = "SUMSQ" ;
    };
    String SC_OPCODE_SUM_X2MY2
    {
        Text [ en-US ] = "SUMX2MY2" ;
    };
    String SC_OPCODE_SUM_X2DY2
    {
        Text [ en-US ] = "SUMX2PY2" ;
    };
    String SC_OPCODE_SUM_XMY2
    {
        Text [ en-US ] = "SUMXMY2" ;
    };
    String SC_OPCODE_GET_DATE
    {
        Text [ en-US ] = "DATE" ;
    };
    String SC_OPCODE_GET_TIME
    {
        Text [ en-US ] = "TIME" ;
    };
    String SC_OPCODE_GET_DIFF_DATE
    {
        Text [ en-US ] = "DAYS" ;
    };
    String SC_OPCODE_GET_DIFF_DATE_360
    {
        Text [ en-US ] = "DAYS360" ;
    };
    String SC_OPCODE_GET_DATEDIF
    {
        Text [ en-US ] = "DATEDIF" ;
    };
    String SC_OPCODE_MIN
    {
        Text [ en-US ] = "MIN" ;
    };
    String SC_OPCODE_MIN_A
    {
        Text [ en-US ] = "MINA" ;
    };
    String SC_OPCODE_MAX
    {
        Text [ en-US ] = "MAX" ;
    };
    String SC_OPCODE_MAX_A
    {
        Text [ en-US ] = "MAXA" ;
    };
    String SC_OPCODE_SUM
    {
        Text [ en-US ] = "SUM" ;
    };
    String SC_OPCODE_PRODUCT
    {
        Text [ en-US ] = "PRODUCT" ;
    };
    String SC_OPCODE_AVERAGE
    {
        Text [ en-US ] = "AVERAGE" ;
    };
    String SC_OPCODE_AVERAGE_A
    {
        Text [ en-US ] = "AVERAGEA" ;
    };
    String SC_OPCODE_COUNT
    {
        Text [ en-US ] = "COUNT" ;
    };
    String SC_OPCODE_COUNT_2
    {
        Text [ en-US ] = "COUNTA" ;
    };
    String SC_OPCODE_NPV
    {
        Text [ en-US ] = "NPV" ;
    };
    String SC_OPCODE_IRR
    {
        Text [ en-US ] = "IRR" ;
    };
    String SC_OPCODE_MIRR
    {
        Text [ en-US ] = "MIRR";
    };
    String SC_OPCODE_ISPMT
    {
        Text [ en-US ] = "ISPMT";
    };
    String SC_OPCODE_VAR
    {
        Text [ en-US ] = "VAR" ;
    };
    String SC_OPCODE_VAR_A
    {
        Text [ en-US ] = "VARA" ;
    };
    String SC_OPCODE_VAR_P
    {
        Text [ en-US ] = "VARP" ;
    };
    String SC_OPCODE_VAR_P_A
    {
        Text [ en-US ] = "VARPA" ;
    };
    String SC_OPCODE_VAR_P_MS
    {
        Text [ en-US ] = "VAR.P" ;
    };
    String SC_OPCODE_VAR_S
    {
        Text [ en-US ] = "VAR.S" ;
    };
    String SC_OPCODE_ST_DEV
    {
        Text [ en-US ] = "STDEV" ;
    };
    String SC_OPCODE_ST_DEV_A
    {
        Text [ en-US ] = "STDEVA" ;
    };
    String SC_OPCODE_ST_DEV_P
    {
        Text [ en-US ] = "STDEVP" ;
    };
    String SC_OPCODE_ST_DEV_P_A
    {
        Text [ en-US ] = "STDEVPA" ;
    };
    String SC_OPCODE_ST_DEV_P_MS
    {
        Text [ en-US ] = "STDEV.P" ;
    };
    String SC_OPCODE_ST_DEV_S
    {
        Text [ en-US ] = "STDEV.S" ;
    };
    String SC_OPCODE_B
    {
        Text [ en-US ] = "B";
    };
    String SC_OPCODE_NORM_DIST
    {
        Text [ en-US ] = "NORMDIST" ;
    };
    String SC_OPCODE_NORM_DIST_MS
    {
        Text [ en-US ] = "NORM.DIST" ;
    };
    String SC_OPCODE_EXP_DIST
    {
        Text [ en-US ] = "EXPONDIST" ;
    };
    String SC_OPCODE_EXP_DIST_MS
    {
        Text [ en-US ] = "EXPON.DIST" ;
    };
    String SC_OPCODE_BINOM_DIST
    {
        Text [ en-US ] = "BINOMDIST" ;
    };
    String SC_OPCODE_BINOM_DIST_MS
    {
        Text [ en-US ] = "BINOM.DIST" ;
    };
    String SC_OPCODE_POISSON_DIST
    {
        Text [ en-US ] = "POISSON" ;
    };
    String SC_OPCODE_POISSON_DIST_MS
    {
        Text [ en-US ] = "POISSON.DIST" ;
    };
    String SC_OPCODE_COMBIN
    {
        Text [ en-US ] = "COMBIN" ;
    };
    String SC_OPCODE_COMBIN_A
    {
        Text [ en-US ] = "COMBINA" ;
    };
    String SC_OPCODE_PERMUT
    {
        Text [ en-US ] = "PERMUT" ;
    };
    String SC_OPCODE_PERMUTATION_A
    {
        Text [ en-US ] = "PERMUTATIONA" ;
    };
    String SC_OPCODE_PV
    {
        Text [ en-US ] = "PV" ;
    };
    String SC_OPCODE_SYD
    {
        Text [ en-US ] = "SYD" ;
    };
    String SC_OPCODE_DDB
    {
        Text [ en-US ] = "DDB" ;
    };
    String SC_OPCODE_DB
    {
        Text [ en-US ] = "DB" ;
    };
    String SC_OPCODE_VBD
    {
        Text [ en-US ] = "VDB" ;
    };
    String SC_OPCODE_DURATION
    {
        Text [ en-US ] = "DURATION" ;
    };
    String SC_OPCODE_SLN
    {
        Text [ en-US ] = "SLN" ;
    };
    String SC_OPCODE_PMT
    {
        Text [ en-US ] = "PMT" ;
    };
    String SC_OPCODE_COLUMNS
    {
        Text [ en-US ] = "COLUMNS" ;
    };
    String SC_OPCODE_ROWS
    {
        Text [ en-US ] = "ROWS" ;
    };
    String SC_OPCODE_SHEETS
    {
        Text [ en-US ] = "SHEETS" ;
    };
    String SC_OPCODE_COLUMN
    {
        Text [ en-US ] = "COLUMN" ;
    };
    String SC_OPCODE_ROW
    {
        Text [ en-US ] = "ROW" ;
    };
    String SC_OPCODE_SHEET
    {
        Text [ en-US ] = "SHEET" ;
    };
    String SC_OPCODE_RRI
    {
        Text [ en-US ] = "RRI" ;
    };
    String SC_OPCODE_FV
    {
        Text [ en-US ] = "FV" ;
    };
    String SC_OPCODE_NPER
    {
        Text [ en-US ] = "NPER" ;
    };
    String SC_OPCODE_RATE
    {
        Text [ en-US ] = "RATE" ;
    };
    String SC_OPCODE_IPMT
    {
        Text [ en-US ] = "IPMT" ;
    };
    String SC_OPCODE_PPMT
    {
        Text [ en-US ] = "PPMT" ;
    };
    String SC_OPCODE_CUM_IPMT
    {
        Text [ en-US ] = "CUMIPMT" ;
    };
    String SC_OPCODE_CUM_PRINC
    {
        Text [ en-US ] = "CUMPRINC" ;
    };
    String SC_OPCODE_EFFECTIVE
    {
        Text [ en-US ] = "EFFECTIVE" ;
    };
    String SC_OPCODE_NOMINAL
    {
        Text [ en-US ] = "NOMINAL" ;
    };
    String SC_OPCODE_SUB_TOTAL
    {
        Text [ en-US ] = "SUBTOTAL" ;
    };
    String SC_OPCODE_DB_SUM
    {
        Text [ en-US ] = "DSUM" ;
    };
    String SC_OPCODE_DB_COUNT
    {
        Text [ en-US ] = "DCOUNT" ;
    };
    String SC_OPCODE_DB_COUNT_2
    {
        Text [ en-US ] = "DCOUNTA" ;
    };
    String SC_OPCODE_DB_AVERAGE
    {
        Text [ en-US ] = "DAVERAGE" ;
    };
    String SC_OPCODE_DB_GET
    {
        Text [ en-US ] = "DGET" ;
    };
    String SC_OPCODE_DB_MAX
    {
        Text [ en-US ] = "DMAX" ;
    };
    String SC_OPCODE_DB_MIN
    {
        Text [ en-US ] = "DMIN" ;
    };
    String SC_OPCODE_DB_PRODUCT
    {
        Text [ en-US ] = "DPRODUCT" ;
    };
    String SC_OPCODE_DB_STD_DEV
    {
        Text [ en-US ] = "DSTDEV" ;
    };
    String SC_OPCODE_DB_STD_DEV_P
    {
        Text [ en-US ] = "DSTDEVP" ;
    };
    String SC_OPCODE_DB_VAR
    {
        Text [ en-US ] = "DVAR" ;
    };
    String SC_OPCODE_DB_VAR_P
    {
        Text [ en-US ] = "DVARP" ;
    };
    String SC_OPCODE_INDIRECT
    {
        Text [ en-US ] = "INDIRECT" ;
    };
    String SC_OPCODE_ADDRESS
    {
        Text [ en-US ] = "ADDRESS" ;
    };
    String SC_OPCODE_MATCH
    {
        Text [ en-US ] = "MATCH" ;
    };
    String SC_OPCODE_COUNT_EMPTY_CELLS
    {
        Text [ en-US ] = "COUNTBLANK" ;
    };
    String SC_OPCODE_COUNT_IF
    {
        Text [ en-US ] = "COUNTIF" ;
    };
    String SC_OPCODE_SUM_IF
    {
        Text [ en-US ] = "SUMIF" ;
    };
    String SC_OPCODE_AVERAGE_IF
    {
        Text [ en-US ] = "AVERAGEIF" ;
    };
    String SC_OPCODE_SUM_IFS
    {
        Text [ en-US ] = "SUMIFS" ;
    };
    String SC_OPCODE_AVERAGE_IFS
    {
        Text [ en-US ] = "AVERAGEIFS" ;
    };
    String SC_OPCODE_COUNT_IFS
    {
        Text [ en-US ] = "COUNTIFS" ;
    };
    String SC_OPCODE_LOOKUP
    {
        Text [ en-US ] = "LOOKUP" ;
    };
    String SC_OPCODE_V_LOOKUP
    {
        Text [ en-US ] = "VLOOKUP" ;
    };
    String SC_OPCODE_H_LOOKUP
    {
        Text [ en-US ] = "HLOOKUP" ;
    };
    String SC_OPCODE_MULTI_AREA     // legacy for range list (union)
    {
        Text [ en-US ] = "MULTIRANGE" ;
    };
    String SC_OPCODE_OFFSET
    {
        Text [ en-US ] = "OFFSET" ;
    };
    String SC_OPCODE_INDEX
    {
         // ?? erstes Zeichen = I ??
        Text [ en-US ] = "INDEX" ;
    };
    String SC_OPCODE_AREAS
    {
        Text [ en-US ] = "AREAS" ;
    };
    String SC_OPCODE_CURRENCY
    {
        Text [ en-US ] = "DOLLAR" ;
    };
    String SC_OPCODE_REPLACE
    {
        Text [ en-US ] = "REPLACE" ;
    };
    String SC_OPCODE_FIXED
    {
        Text [ en-US ] = "FIXED" ;
    };
    String SC_OPCODE_FIND
    {
        Text [ en-US ] = "FIND" ;
    };
    String SC_OPCODE_EXACT
    {
        Text [ en-US ] = "EXACT" ;
    };
    String SC_OPCODE_LEFT
    {
        Text [ en-US ] = "LEFT" ;
    };
    String SC_OPCODE_RIGHT
    {
        Text [ en-US ] = "RIGHT" ;
    };
    String SC_OPCODE_SEARCH
    {
        Text [ en-US ] = "SEARCH" ;
    };
    String SC_OPCODE_MID
    {
        Text [ en-US ] = "MID" ;
    };
    String SC_OPCODE_LENB
    {
        Text [ en-US ] = "LENB" ;
    };
    String SC_OPCODE_RIGHTB
    {
        Text [ en-US ] = "RIGHTB" ;
    };
    String SC_OPCODE_LEFTB
    {
        Text [ en-US ] = "LEFTB" ;
    };
    String SC_OPCODE_MIDB
    {
        Text [ en-US ] = "MIDB" ;
    };
    String SC_OPCODE_TEXT
    {
        Text [ en-US ] = "TEXT" ;
    };
    String SC_OPCODE_SUBSTITUTE
    {
        Text [ en-US ] = "SUBSTITUTE" ;
    };
    String SC_OPCODE_REPT
    {
        Text [ en-US ] = "REPT" ;
    };
    String SC_OPCODE_CONCAT
    {
        Text [ en-US ] = "CONCATENATE" ;
    };
    String SC_OPCODE_CONCAT_MS
    {
        Text [ en-US ] = "CONCAT" ;
    };
    String SC_OPCODE_TEXTJOIN_MS
    {
        Text [ en-US ] = "TEXTJOIN" ;
    };
    String SC_OPCODE_IFS_MS
    {
        Text [ en-US ] = "IFS" ;
    };
    String SC_OPCODE_SWITCH_MS
    {
        Text [ en-US ] = "SWITCH" ;
    };
    String SC_OPCODE_MINIFS_MS
    {
        Text [ en-US ] = "MINIFS" ;
    };
    String SC_OPCODE_MAXIFS_MS
    {
        Text [ en-US ] = "MAXIFS" ;
    };
    String SC_OPCODE_MAT_VALUE
    {
        Text [ en-US ] = "MVALUE" ;
    };
    String SC_OPCODE_MAT_DET
    {
        Text [ en-US ] = "MDETERM" ;
    };
    String SC_OPCODE_MAT_INV
    {
        Text [ en-US ] = "MINVERSE" ;
    };
    String SC_OPCODE_MAT_MULT
    {
        Text [ en-US ] = "MMULT" ;
    };
    String SC_OPCODE_MAT_TRANS
    {
        Text [ en-US ] = "TRANSPOSE" ;
    };
    String SC_OPCODE_MATRIX_UNIT
    {
        Text [ en-US ] = "MUNIT" ;
    };
    String SC_OPCODE_BACK_SOLVER
    {
        Text [ en-US ] = "GOALSEEK" ;
    };
    String SC_OPCODE_HYP_GEOM_DIST
    {
        Text [ en-US ] = "HYPGEOMDIST" ;
    };
    String SC_OPCODE_HYP_GEOM_DIST_MS
    {
        Text [ en-US ] = "HYPGEOM.DIST" ;
    };
    String SC_OPCODE_LOG_NORM_DIST
    {
        Text [ en-US ] = "LOGNORMDIST" ;
    };
    String SC_OPCODE_LOG_NORM_DIST_MS
    {
        Text [ en-US ] = "LOGNORM.DIST" ;
    };
    String SC_OPCODE_T_DIST
    {
        Text [ en-US ] = "TDIST" ;
    };
    String SC_OPCODE_T_DIST_2T
    {
        Text [ en-US ] = "T.DIST.2T" ;
    };
    String SC_OPCODE_T_DIST_MS
    {
        Text [ en-US ] = "T.DIST" ;
    };
    String SC_OPCODE_T_DIST_RT
    {
        Text [ en-US ] = "T.DIST.RT" ;
    };
    String SC_OPCODE_F_DIST
    {
        Text [ en-US ] = "FDIST" ;
    };
    String SC_OPCODE_F_DIST_LT
    {
        Text [ en-US ] = "F.DIST" ;
    };
    String SC_OPCODE_F_DIST_RT
    {
        Text [ en-US ] = "F.DIST.RT" ;
    };
    String SC_OPCODE_CHI_DIST
    {
        Text [ en-US ] = "CHIDIST" ;
    };
    String SC_OPCODE_CHI_DIST_MS
    {
        Text [ en-US ] = "CHISQ.DIST.RT" ;
    };
    String SC_OPCODE_WEIBULL
    {
        Text [ en-US ] = "WEIBULL" ;
    };
    String SC_OPCODE_WEIBULL_MS
    {
        Text [ en-US ] = "WEIBULL.DIST" ;
    };
    String SC_OPCODE_NEG_BINOM_VERT
    {
        Text [ en-US ] = "NEGBINOMDIST" ;
    };
    String SC_OPCODE_NEG_BINOM_DIST_MS
    {
        Text [ en-US ] = "NEGBINOM.DIST" ;
    };
    String SC_OPCODE_CRIT_BINOM
    {
        Text [ en-US ] = "CRITBINOM" ;
    };
    String SC_OPCODE_BINOM_INV
    {
        Text [ en-US ] = "BINOM.INV" ;
    };
    String SC_OPCODE_KURT
    {
        Text [ en-US ] = "KURT" ;
    };
    String SC_OPCODE_HAR_MEAN
    {
        Text [ en-US ] = "HARMEAN" ;
    };
    String SC_OPCODE_GEO_MEAN
    {
        Text [ en-US ] = "GEOMEAN" ;
    };
    String SC_OPCODE_STANDARD
    {
        Text [ en-US ] = "STANDARDIZE" ;
    };
    String SC_OPCODE_AVE_DEV
    {
        Text [ en-US ] = "AVEDEV" ;
    };
    String SC_OPCODE_SKEW
    {
        Text [ en-US ] = "SKEW" ;
    };
    String SC_OPCODE_SKEWP
    {
        Text [ en-US ] = "SKEWP" ;
    };
    String SC_OPCODE_DEV_SQ
    {
        Text [ en-US ] = "DEVSQ" ;
    };
    String SC_OPCODE_MEDIAN
    {
        Text [ en-US ] = "MEDIAN" ;
    };
    String SC_OPCODE_MODAL_VALUE
    {
        Text [ en-US ] = "MODE" ;
    };
    String SC_OPCODE_MODAL_VALUE_MS
    {
        Text [ en-US ] = "MODE.SNGL" ;
    };
    String SC_OPCODE_MODAL_VALUE_MULTI
    {
        Text [ en-US ] = "MODE.MULT" ;
    };
    String SC_OPCODE_Z_TEST
    {
        Text [ en-US ] = "ZTEST" ;
    };
    String SC_OPCODE_Z_TEST_MS
    {
        Text [ en-US ] = "Z.TEST" ;
    };
    String SC_OPCODE_AGGREGATE
    {
        Text [ en-US ] = "AGGREGATE" ;
    };
    String SC_OPCODE_T_TEST
    {
        Text [ en-US ] = "TTEST" ;
    };
    String SC_OPCODE_T_TEST_MS
    {
        Text [ en-US ] = "T.TEST" ;
    };
    String SC_OPCODE_RANK
    {
        Text [ en-US ] = "RANK" ;
    };
    String SC_OPCODE_PERCENTILE
    {
        Text [ en-US ] = "PERCENTILE" ;
    };
    String SC_OPCODE_PERCENT_RANK
    {
        Text [ en-US ] = "PERCENTRANK" ;
    };
    String SC_OPCODE_PERCENTILE_INC
    {
        Text [ en-US ] = "PERCENTILE.INC" ;
    };
    String SC_OPCODE_PERCENT_RANK_INC
    {
        Text [ en-US ] = "PERCENTRANK.INC" ;
    };
    String SC_OPCODE_QUARTILE_INC
    {
        Text [ en-US ] = "QUARTILE.INC" ;
    };
    String SC_OPCODE_RANK_EQ
    {
        Text [ en-US ] = "RANK.EQ" ;
    };
    String SC_OPCODE_PERCENTILE_EXC
    {
        Text [ en-US ] = "PERCENTILE.EXC" ;
    };
    String SC_OPCODE_PERCENT_RANK_EXC
    {
        Text [ en-US ] = "PERCENTRANK.EXC" ;
    };
    String SC_OPCODE_QUARTILE_EXC
    {
        Text [ en-US ] = "QUARTILE.EXC" ;
    };
    String SC_OPCODE_RANK_AVG
    {
        Text [ en-US ] = "RANK.AVG" ;
    };
    String SC_OPCODE_LARGE
    {
        Text [ en-US ] = "LARGE" ;
    };
    String SC_OPCODE_SMALL
    {
        Text [ en-US ] = "SMALL" ;
    };
    String SC_OPCODE_FREQUENCY
    {
        Text [ en-US ] = "FREQUENCY" ;
    };
    String SC_OPCODE_QUARTILE
    {
        Text [ en-US ] = "QUARTILE" ;
    };
    String SC_OPCODE_NORM_INV
    {
        Text [ en-US ] = "NORMINV" ;
    };
    String SC_OPCODE_NORM_INV_MS
    {
        Text [ en-US ] = "NORM.INV" ;
    };
    String SC_OPCODE_CONFIDENCE
    {
        Text [ en-US ] = "CONFIDENCE" ;
    };
    String SC_OPCODE_CONFIDENCE_N
    {
        Text [ en-US ] = "CONFIDENCE.NORM" ;
    };
    String SC_OPCODE_CONFIDENCE_T
    {
        Text [ en-US ] = "CONFIDENCE.T" ;
    };
    String SC_OPCODE_F_TEST
    {
        Text [ en-US ] = "FTEST" ;
    };
    String SC_OPCODE_F_TEST_MS
    {
        Text [ en-US ] = "F.TEST" ;
    };
    String SC_OPCODE_TRIM_MEAN
    {
        Text [ en-US ] = "TRIMMEAN" ;
    };
    String SC_OPCODE_PROB
    {
        Text [ en-US ] = "PROB" ;
    };
    String SC_OPCODE_CORREL
    {
        Text [ en-US ] = "CORREL" ;
    };
    String SC_OPCODE_COVAR
    {
        Text [ en-US ] = "COVAR" ;
    };
    String SC_OPCODE_COVARIANCE_P
    {
        Text [ en-US ] = "COVARIANCE.P" ;
    };
    String SC_OPCODE_COVARIANCE_S
    {
        Text [ en-US ] = "COVARIANCE.S" ;
    };
    String SC_OPCODE_PEARSON
    {
        Text [ en-US ] = "PEARSON" ;
    };
    String SC_OPCODE_RSQ
    {
        Text [ en-US ] = "RSQ" ;
    };
    String SC_OPCODE_STEYX
    {
        Text [ en-US ] = "STEYX" ;
    };
    String SC_OPCODE_SLOPE
    {
        Text [ en-US ] = "SLOPE" ;
    };
    String SC_OPCODE_INTERCEPT
    {
        Text [ en-US ] = "INTERCEPT" ;
    };
    String SC_OPCODE_TREND
    {
        Text [ en-US ] = "TREND" ;
    };
    String SC_OPCODE_GROWTH
    {
        Text [ en-US ] = "GROWTH" ;
    };
    String SC_OPCODE_LINEST
    {
        Text [ en-US ] = "LINEST" ;
    };
    String SC_OPCODE_LOGEST
    {
        Text [ en-US ] = "LOGEST" ;
    };
    String SC_OPCODE_FORECAST
    {
        Text [ en-US ] = "FORECAST" ;
    };
    String SC_OPCODE_FORECAST_ETS_ADD
    {
        Text [ en-US ] = "FORECAST.ETS.ADD" ;
    };
    String SC_OPCODE_FORECAST_ETS_SEA
    {
        Text [ en-US ] = "FORECAST.ETS.SEASONALITY" ;
    };
    String SC_OPCODE_FORECAST_ETS_MUL
    {
        Text [ en-US ] = "FORECAST.ETS.MULT" ;
    };
    String SC_OPCODE_FORECAST_ETS_PIA
    {
        Text [ en-US ] = "FORECAST.ETS.PI.ADD" ;
    };
    String SC_OPCODE_FORECAST_ETS_PIM
    {
        Text [ en-US ] = "FORECAST.ETS.PI.MULT" ;
    };
    String SC_OPCODE_FORECAST_ETS_STA
    {
        Text [ en-US ] = "FORECAST.ETS.STAT.ADD" ;
    };
    String SC_OPCODE_FORECAST_ETS_STM
    {
        Text [ en-US ] = "FORECAST.ETS.STAT.MULT" ;
    };
    String SC_OPCODE_FORECAST_LIN
    {
        Text [ en-US ] = "FORECAST.LINEAR" ;
    };
    String SC_OPCODE_CHI_INV
    {
        Text [ en-US ] = "CHIINV" ;
    };
    String SC_OPCODE_CHI_INV_MS
    {
        Text [ en-US ] = "CHISQ.INV.RT" ;
    };
    String SC_OPCODE_GAMMA_DIST
    {
        Text [ en-US ] = "GAMMADIST" ;
    };
    String SC_OPCODE_GAMMA_DIST_MS
    {
        Text [ en-US ] = "GAMMA.DIST" ;
    };
    String SC_OPCODE_GAMMA_INV
    {
        Text [ en-US ] = "GAMMAINV" ;
    };
    String SC_OPCODE_GAMMA_INV_MS
    {
        Text [ en-US ] = "GAMMA.INV" ;
    };
    String SC_OPCODE_T_INV
    {
        Text [ en-US ] = "TINV" ;
    };
    String SC_OPCODE_T_INV_2T
    {
        Text [ en-US ] = "T.INV.2T" ;
    };
    String SC_OPCODE_T_INV_MS
    {
        Text [ en-US ] = "T.INV" ;
    };
    String SC_OPCODE_F_INV
    {
        Text [ en-US ] = "FINV" ;
    };
    String SC_OPCODE_F_INV_LT
    {
        Text [ en-US ] = "F.INV" ;
    };
    String SC_OPCODE_F_INV_RT
    {
        Text [ en-US ] = "F.INV.RT" ;
    };
    String SC_OPCODE_CHI_TEST
    {
        Text [ en-US ] = "CHITEST" ;
    };
    String SC_OPCODE_CHI_TEST_MS
    {
        Text [ en-US ] = "CHISQ.TEST" ;
    };
    String SC_OPCODE_LOG_INV
    {
        Text [ en-US ] = "LOGINV" ;
    };
    String SC_OPCODE_LOG_INV_MS
    {
        Text [ en-US ] = "LOGNORM.INV" ;
    };
    String SC_OPCODE_TABLE_OP
    {
        Text [ en-US ] = "MULTIPLE.OPERATIONS" ;
    };
    String SC_OPCODE_BETA_DIST
    {
        Text [ en-US ] = "BETADIST" ;
    };
    String SC_OPCODE_BETA_INV
    {
        Text [ en-US ] = "BETAINV" ;
    };
    String SC_OPCODE_BETA_DIST_MS
    {
        Text [ en-US ] = "BETA.DIST" ;
    };
    String SC_OPCODE_BETA_INV_MS
    {
        Text [ en-US ] = "BETA.INV" ;
    };
    String SC_OPCODE_WEEK
    {
        Text [ en-US ] = "WEEKNUM" ;
    };
    String SC_OPCODE_ISOWEEKNUM
    {
        Text [ en-US ] = "ISOWEEKNUM" ;
    };
    String SC_OPCODE_WEEKNUM_OOO
    {
        Text [ en-US ] = "WEEKNUM_OOO" ;
    };
    String SC_OPCODE_EASTERSUNDAY
    {
        Text [ en-US ] = "EASTERSUNDAY" ;
    };
    String SC_OPCODE_GET_DAY_OF_WEEK
    {
        Text [ en-US ] = "WEEKDAY" ;
    };
    String SC_OPCODE_NETWORKDAYS
    {
        Text [ en-US ] = "NETWORKDAYS" ;
    };
    String SC_OPCODE_NETWORKDAYS_MS
    {
        Text [ en-US ] = "NETWORKDAYS.INTL" ;
    };
    String SC_OPCODE_WORKDAY_MS
    {
        Text [ en-US ] = "WORKDAY.INTL" ;
    };
    String SC_OPCODE_NO_NAME
    {
        Text [ en-US ] = "#NAME!" ;
    };
    String SC_OPCODE_STYLE
    {
        Text [ en-US ] = "STYLE" ;
    };
    String SC_OPCODE_DDE
    {
        Text [ en-US ] = "DDE";
    };
    String SC_OPCODE_BASE
    {
        Text [ en-US ] = "BASE" ;
    };
    String SC_OPCODE_DECIMAL
    {
        Text [ en-US ] = "DECIMAL" ;
    };
    String SC_OPCODE_CONVERT
    {
        Text [ en-US ] = "CONVERT";
    };
    String SC_OPCODE_ROMAN
    {
        Text [ en-US ] = "ROMAN";
    };
    String SC_OPCODE_HYPERLINK
    {
        Text[ en-US ] = "HYPERLINK";
    };
    String SC_OPCODE_INFO
    {
        Text [ en-US ] = "INFO";
    };
    String SC_OPCODE_BAHTTEXT
    {
        Text [ en-US ] = "BAHTTEXT";
    };
    String SC_OPCODE_GET_PIVOT_DATA
    {
        Text [ en-US ] = "GETPIVOTDATA";
    };
    String SC_OPCODE_EUROCONVERT
    {
        Text [ en-US ] = "EUROCONVERT";
    };
    String SC_OPCODE_NUMBERVALUE
    {
        Text [ en-US ] = "NUMBERVALUE" ;
    };
    String SC_OPCODE_GAMMA
    {
        Text [ en-US ] = "GAMMA" ;
    };
    String SC_OPCODE_CHISQ_DIST
    {
        Text [ en-US ] = "CHISQDIST" ;
    };
    String SC_OPCODE_CHISQ_DIST_MS
    {
        Text [ en-US ] = "CHISQ.DIST" ;
    };
    String SC_OPCODE_CHISQ_INV
    {
        Text [ en-US ] = "CHISQINV" ;
    };
    String SC_OPCODE_CHISQ_INV_MS
    {
        Text [ en-US ] = "CHISQ.INV" ;
    };
    String SC_OPCODE_BITAND
    {
        Text [ en-US ] = "BITAND" ;
    };
    String SC_OPCODE_BITOR
    {
        Text [ en-US ] = "BITOR" ;
    };
    String SC_OPCODE_BITXOR
    {
        Text [ en-US ] = "BITXOR" ;
    };
    String SC_OPCODE_BITRSHIFT
    {
        Text [ en-US ] = "BITRSHIFT" ;
    };
    String SC_OPCODE_BITLSHIFT
    {
        Text [ en-US ] = "BITLSHIFT" ;
    };
    /* BEGIN defined ERROR.TYPE() values. */
    /* ERROR.TYPE( #NULL! ) == 1 */
    String SC_OPCODE_ERROR_NULL
    {
        Text [ en-US ] = "#NULL!" ;
    };
    /* ERROR.TYPE( #DIV/0! ) == 2 */
    String SC_OPCODE_ERROR_DIVZERO
    {
        Text [ en-US ] = "#DIV/0!" ;
    };
    /* ERROR.TYPE( #VALUE! ) == 3 */
    String SC_OPCODE_ERROR_VALUE
    {
        Text [ en-US ] = "#VALUE!" ;
    };
    /* ERROR.TYPE( #REF! ) == 4 */
    String SC_OPCODE_ERROR_REF
    {
        Text [ en-US ] = "#REF!" ;
    };
    /* ERROR.TYPE( #NAME! ) == 5 */
    String SC_OPCODE_ERROR_NAME
    {
        Text [ en-US ] = "#NAME?" ;
    };
    /* ERROR.TYPE( #NUM! ) == 6 */
    String SC_OPCODE_ERROR_NUM
    {
        Text [ en-US ] = "#NUM!" ;
    };
    /* ERROR.TYPE( #N/A ) == 7 */
    String SC_OPCODE_ERROR_NA
    {
        Text [ en-US ] = "#N/A" ;
    };
    /* END defined ERROR.TYPE() values. */

    String SC_OPCODE_FILTERXML
    {
        Text [ en-US ] = "FILTERXML";
    };
    String SC_OPCODE_COLOR
    {
        Text [ en-US ] = "COLOR";
    };
    String SC_OPCODE_WEBSERVICE
    {
        Text [ en-US ] = "WEBSERVICE";
    };
    String SC_OPCODE_ERF_MS
    {
        Text [en-US ] = "ERF.PRECISE" ;
    };
    String SC_OPCODE_ERFC_MS
    {
        Text [en-US ] = "ERFC.PRECISE" ;
    };
    String SC_OPCODE_ENCODEURL
    {
        Text [ en-US ] = "ENCODEURL";
    };
    String SC_OPCODE_RAWSUBTRACT
    {
        Text [ en-US ] = "RAWSUBTRACT";
    };
};

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
