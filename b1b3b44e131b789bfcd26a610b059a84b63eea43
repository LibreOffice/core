{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1bfde784_b6196921",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-01-18T21:44:48Z",
      "side": 1,
      "message": "It\u0027s not perfect but I think it goes in the right way.\nHowever testing the extreme case with `back``ticks are fun`.`n``est-ce pas?` I had an error when trying to save a new table in the editor.\nHere\u0027s the generated statement:\nCREATE TABLE `back`ticks are fun`.`Table156` (`id` VARCHAR(100) NOT NULL, PRIMARY KEY  (`id`))\n",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0b2d91b_4482bc7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-01-18T21:55:02Z",
      "side": 1,
      "message": "Also, having the same table name was a pb before the patch and now it\u0027s ok.\n\nI thought about removing completely \"Keys\" part but it\u0027s used by \"OCollection* Table::createKeys(const ::std::vector\u003cOUString\u003e\u0026 rNames)\"\nand it seems implementing \"Table::createKeys\" is mandatory (unless I missed something).\n\nFinally, I didn\u0027t take time to try to dig about the 2 annoying bugs with Views:\n- No automatic refresh after a creating a new one\n- Error when trying to rename a view\nbut that\u0027s another story.",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ef5d3e4_dfd6b89c",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 836,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-19T07:58:50Z",
      "side": 1,
      "message": "You want to take care of that TODO? Since the tablename and schemaname are put in a _string_ in the query (not and identifier) the escaping that needs to be done is to double all \u0027 characters. There most probably is a utility function in LibreOffice that escapes SQL strings... In the current (and previous) code, if the schemaPattern or tableNamePattern contain a \u0027 character, the query will raise an error.\n\nNote that if you take care of the _previous_ TODO (use a parametrized query instead), the parametrised query will  (should, at least) do that work for you (\"use the generic mechanism\").",
      "range": {
        "startLine": 836,
        "startChar": 4,
        "endLine": 836,
        "endChar": 39
      },
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc73c844_294a2ca4",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 836,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-01-19T08:13:21Z",
      "side": 1,
      "message": "I had put this aside and forgot it, I\u0027ll take a look",
      "parentUuid": "4ef5d3e4_dfd6b89c",
      "range": {
        "startLine": 836,
        "startChar": 4,
        "endLine": 836,
        "endChar": 39
      },
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2e8518_ca27b7a6",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 837,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-19T07:58:50Z",
      "side": 1,
      "message": "I don\u0027t think that ` is incompatible with LIKE. This works:\n\nSELECT (\u0027a`b\u0027 LIKE \u0027%`%\u0027);\n\nWhat makes you think there is an incompatibility?",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c68464bc_b2eedd26",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 837,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-01-19T08:13:21Z",
      "side": 1,
      "message": "I removed locally these replaceAll. When using design option to create a table, then saving, it indeed created the table but you can quit the edit dialog because of \nwarn:dbaccess:5698:5698:dbaccess/source/ui/tabledesign/TableController.cxx:381: DBG_UNHANDLED_EXCEPTION in doSaveDoc exception: com.sun.star.uno.RuntimeException message: /home/julien/lo/libreoffice/connectivity/source/drivers/mysqlc/mysqlc_tables.cxx:60\n\nHere is the request which returns nothing:\nSELECT TABLE_CATALOG AS TABLE_CAT, TABLE_SCHEMA AS TABLE_SCHEM, TABLE_NAME,IF(STRCMP(TABLE_TYPE,\u0027BASE TABLE\u0027), TABLE_TYPE, \u0027TABLE\u0027) AS TABLE_TYPE, TABLE_COMMENT AS REMARKS FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA NOT IN (\u0027information_schema\u0027, \u0027mysql\u0027, \u0027performance_schema\u0027) AND TABLE_SCHEMA LIKE \u0027`a`\u0027 AND TABLE_NAME LIKE \u0027`testJul3`\u0027  ORDER BY TABLE_TYPE, TABLE_SCHEMA, TABLE_NAME",
      "parentUuid": "9c2e8518_ca27b7a6",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49600022_260dedd9",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 837,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-19T08:24:32Z",
      "side": 1,
      "message": "Oh, I see. The schemaName and tableName should _not_ be escaped as per the (My)SQL identifier rules. The problem is in the caller of getTables. It is called as:\n  getTables(\"\", \"`a`\", \"`testJul3`\", ...)\nbut should be called as\n  getTables(\"\", \"a\", \"testJul3\", ...)",
      "parentUuid": "c68464bc_b2eedd26",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df7934fe_014294b4",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 837,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-01-19T09:02:01Z",
      "side": 1,
      "message": "Yes I tried to avoid this but don\u0027t know how to do it.",
      "parentUuid": "49600022_260dedd9",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "298083e0_9f654922",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 837,
      "author": {
        "id": 1000043
      },
      "writtenOn": "2022-01-19T12:25:26Z",
      "side": 1,
      "message": "schema and table are passed by Tables::createObject\n    OUString sCatalog, sSchema, sTable;\n    ::dbtools::qualifiedNameComponents(m_xMetaData, rName, sCatalog, sSchema, sTable,\n                                       ::dbtools::EComposeRule::InDataManipulation);\n    Any aCatalog;\n    if (!sCatalog.isEmpty())\n        aCatalog \u003c\u003c\u003d sCatalog;\n    uno::Reference\u003cXResultSet\u003e xTables\n        \u003d m_xMetaData-\u003egetTables(aCatalog, sSchema, sTable, uno::Sequence\u003cOUString\u003e());\n\n::dbtools::qualifiedNameComponents decomposes rName but it lets \"`\".\nI could also do the replaceAll in createObject but don\u0027t know how to avoid qualifiedNameComponents provides variables with \"`\"",
      "parentUuid": "df7934fe_014294b4",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ced8989_25b5c5f5",
        "filename": "connectivity/source/drivers/mysqlc/mysqlc_databasemetadata.cxx",
        "patchSetId": 1
      },
      "lineNbr": 837,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-01-19T13:08:30Z",
      "side": 1,
      "message": "::dbtools::qualifiedNameComponents *leaves* \"`\" that are already there or it adds them? You have to realise it is not only about the \"`\" at the beginning and the end, but also about escaping (by doubling in SQL syntax) any \"`\" that are in the middle.\n\nTry to go up the chain of callers and see where the escaping is done... createObject seems is called by appendObject. Is the \"rName\" passed to appendObject already escaped? It should not. The problem could be in appendObject, because it calls composeTableName which adds the escaping?\n\nMaybe (I\u0027m not sure) the pragmatic solution is to unescape the names before passing them to getTables. Not by removing _all_ \"`\", but by:\n\n1) Removing first and last character which _must_ be \"`\"\n2) Replace all \"``\" (doubled \"`\") by single \"`\"\n\nThere might be a utility function in LibreOffice to do that, but I didn\u0027t immediately find it.",
      "parentUuid": "298083e0_9f654922",
      "revId": "b1b3b44e131b789bfcd26a610b059a84b63eea43",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}