/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include "Columns.hxx"
#include "Column.hxx"

#include "TConnection.hxx"

using namespace connectivity;
using namespace connectivity::firebird;
using namespace connectivity::sdbcx;

Column::Column()
    : OColumn( true ) // case sensitive
{
    construct();
}

void Column::construct()
{
    m_sAutoIncrement = "GENERATED BY DEFAULT AS IDENTITY";
    registerProperty(OMetaConnection::getPropMap().getNameByIndex(
                            PROPERTY_ID_AUTOINCREMENTCREATION),
                     PROPERTY_ID_AUTOINCREMENTCREATION,
                     0,
                     &m_sAutoIncrement,
                     cppu::UnoType<decltype(m_sAutoIncrement)>::get()
                     );
}

::cppu::IPropertyArrayHelper* Column::createArrayHelper( sal_Int32 /*_nId*/ ) const
{
    return doCreateArrayHelper();
}

::cppu::IPropertyArrayHelper & SAL_CALL Column::getInfoHelper()
{
    return *Column_PROP::getArrayHelper(isNew() ? 1 : 0);
}

css::uno::Sequence< OUString > SAL_CALL Column::getSupportedServiceNames(  ) throw(css::uno::RuntimeException, std::exception)
{
    css::uno::Sequence< OUString > aSupported { "com.sun.star.sdbc.Firebird" };

    return aSupported;
}

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
