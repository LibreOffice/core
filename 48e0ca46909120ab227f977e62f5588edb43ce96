{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c964c26c_deb46122",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-13T11:40:49Z",
      "side": 1,
      "message": "FTR, the failing test is\n\n  make CppunitTest_chart2_export CPPUNIT_TEST_NAME\u003dChart2ExportTest::testStockChart",
      "revId": "48e0ca46909120ab227f977e62f5588edb43ce96",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e78f6261_84a7f2db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-13T11:43:36Z",
      "side": 1,
      "message": "Problematic call stack is at https://pastebin.com/g3bJutBw. I took it after third entry to SwXTextDocument::GetNumberFormatter (the loop is quite short here, only 4 calls)..",
      "revId": "48e0ca46909120ab227f977e62f5588edb43ce96",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "174024db_dd3b0824",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-13T11:52:38Z",
      "side": 1,
      "message": "Successful call stack is at https://pastebin.com/dAPjCL19\n\nThe difference is that the call to getSomething in comphelper::getFromUnoTunnel at line 59 calls SwXTextDocument::getSomething for problematic case, but SvNumberFormatsSupplierObj::getSomething in successful one.\n\nNo idea why. Stephan: does the info help? Should I gather something else?",
      "revId": "48e0ca46909120ab227f977e62f5588edb43ce96",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e69fae9_139c7ac9",
        "filename": "sw/source/uibase/uno/unotxdoc.cxx",
        "patchSetId": 2
      },
      "lineNbr": 437,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-13T11:38:57Z",
      "side": 1,
      "message": "So replacing these two lines with\n\n        SvNumberFormatsSupplierObj* pNumFormat \u003d nullptr;\n        Reference\u003c XUnoTunnel \u003e xNumTunnel;\n        if(aNumTunnel \u003e\u003e\u003d xNumTunnel)\n            pNumFormat \u003d comphelper::getFromUnoTunnel\u003cSvNumberFormatsSupplierObj\u003e(xNumTunnel);\n\nfixes the infinite loop.\nThe visible difference is that in the code above, the XUnoTunnel interface is passed to getFromUnoTunnel directly, taken using operator \u003e\u003e\u003d; and in the problematic code, the interface is obtained in getFromUnoTunnel taking const I\u0026 xIface, and using css::uno::Reference\u003ccss::lang::XUnoTunnel\u003e{ xIface, css::uno::UNO_QUERY } (where in this case I is Any). I honestly don\u0027t know what is different, but I will get the call stack dumps for the two cases.",
      "range": {
        "startLine": 436,
        "startChar": 8,
        "endLine": 437,
        "endChar": 83
      },
      "revId": "48e0ca46909120ab227f977e62f5588edb43ce96",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}