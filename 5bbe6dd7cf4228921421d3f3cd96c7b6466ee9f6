{
  "comments": [
    {
      "key": {
        "uuid": "dab17558_abd1d2fd",
        "filename": "formula/source/core/resource/core_resource.src",
        "patchSetId": 6
      },
      "lineNbr": 809,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Any reason why 3 functions don\u0027t have the _xlfn. prefix? None of them is define in OOXML, so all should have the prefix.",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_3e2522ab",
        "filename": "formula/source/core/resource/core_resource.src",
        "patchSetId": 6
      },
      "lineNbr": 809,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_abd1d2fd",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_2cddea14",
        "filename": "formula/source/core/resource/core_resource.src",
        "patchSetId": 6
      },
      "lineNbr": 809,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-01-12T11:50:50Z",
      "side": 1,
      "message": "As these seem to be the 3 functions that are not supported by Excel, they should have a _xlfn.ORG.LIBREOFFICE. prefix, so in case Excel comes up with functions of the same name but with different parameters it doesn\u0027t clash.",
      "parentUuid": "dab17558_3e2522ab",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_8bce8e58",
        "filename": "sc/inc/helpids.h",
        "patchSetId": 6
      },
      "lineNbr": 632,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Why shorten to _AD and _ML suffix instead of using at least _ADD and _MUL?",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_9e3a4ecc",
        "filename": "sc/inc/helpids.h",
        "patchSetId": 6
      },
      "lineNbr": 632,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_8bce8e58",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_cbd89620",
        "filename": "sc/source/core/tool/interpr3.cxx",
        "patchSetId": 6
      },
      "lineNbr": 4398,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "This may or may not work. It assumes that nGlobalError is only set if an error was pushed, which does not have to be the case, so in case LinearForecast() did not push an error but an error was set elsewhere, no return value at all will be pushed.\n\nRather unconditionally use PushDouble() which in case nGlobalError is set pushes the error instead. See also below.",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_1e265eba",
        "filename": "sc/source/core/tool/interpr3.cxx",
        "patchSetId": 6
      },
      "lineNbr": 4398,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_cbd89620",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_2b04c27c",
        "filename": "sc/source/core/tool/interpr3.cxx",
        "patchSetId": 6
      },
      "lineNbr": 4430,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Use SetError( errNoValue) instead.",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_fe2a7a7d",
        "filename": "sc/source/core/tool/interpr3.cxx",
        "patchSetId": 6
      },
      "lineNbr": 4430,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_2b04c27c",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_0b09fe95",
        "filename": "sc/source/core/tool/interpr3.cxx",
        "patchSetId": 6
      },
      "lineNbr": 4455,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Use SetError( errDivisionByZero) instead.",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_5e20e69b",
        "filename": "sc/source/core/tool/interpr3.cxx",
        "patchSetId": 6
      },
      "lineNbr": 4455,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_0b09fe95",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_abf8b27d",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Using an \u0027s\u0027 prefix for anything else than a string is totally confusing.. apart from that, please for new code prefix all member variables with an additional \u0027m\u0027 so in member functions they can easily be distinguished from local and parameter variables.\n\nSo,\n\n vector\u003c DataPoint \u003e maRange;\n double* mpBase;\n double* mpTrend;\n ...",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_7e3e8ab9",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_abf8b27d",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_cbeff6ae",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 260,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Please don\u0027t use C-style casts use static_cast\u003cdouble\u003e() instead. (several occurrences in this file)",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_be5f520d",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 260,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab17558_cbeff6ae",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_8bf5ee84",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 296,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Why not use vector\u003cdouble\u003e and resize() instead of allocated arrays of double?\n\nAnd actually the four arrays are leaked as there is no dtor deleting them. Which wouldn\u0027t happen if they were member variables of type vector ;-)",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 296,
        "endChar": 37
      },
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_5ea58602",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 296,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "As these are (re)filled approx. a thousand times during calculation of alpha, beta and gamma parameters, I chose the simplest (fastest) way to store the data.\nI now have added a destructor to the class.",
      "parentUuid": "dab17558_8bf5ee84",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 296,
        "endChar": 37
      },
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_ebf2ba99",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "That leaks. Why not a vector\u003cdouble\u003e?",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_dee7b63e",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Changed to vector, there are no performance reasons here for an array of doubles.",
      "parentUuid": "dab17558_ebf2ba99",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_ab3f1224",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 1078,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "Jenkins failure:\n\n error: ‘fPILevel’ may be used uninitialized in this function [-Werror\u003dmaybe-uninitialized]",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_1ed01e53",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 1078,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Although fPILevel is only assigned a value in case of eETSType being etsPIAdd and etsPIMult and only then sETSCalc.GetPredictionIntervals() can be called, I have given fPILevel a default (dummy) value.",
      "parentUuid": "dab17558_ab3f1224",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_4b030674",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "umm.. where did you get these settings? Please use\n\n /* vim:set shiftwidth\u003d4 softtabstop\u003d4 expandtab: */",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_9ec40e93",
        "filename": "sc/source/core/tool/interpr8.cxx",
        "patchSetId": 6
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "Ohh, I worked one sunday afternoon on the Windows laptop of my wife. It must have crept in there.\nI have removed the nu and put the 2\u0027s back to 4",
      "parentUuid": "dab17558_4b030674",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_2b2b22ed",
        "filename": "sc/source/filter/excel/xlformula.cxx",
        "patchSetId": 6
      },
      "lineNbr": 581,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "These are only 5 entries, but we have 8 new functions..?",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_7e37aae3",
        "filename": "sc/source/filter/excel/xlformula.cxx",
        "patchSetId": 6
      },
      "lineNbr": 581,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "There are 5 new Excel2016 functions.\nThe other 3 new functions do not exist in Excel 2016.",
      "parentUuid": "dab17558_2b2b22ed",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_ecc48241",
        "filename": "sc/source/filter/excel/xlformula.cxx",
        "patchSetId": 6
      },
      "lineNbr": 581,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-01-12T11:50:50Z",
      "side": 1,
      "message": "Then the 3 other functions should go into the saFuncTable_OOoLO table.",
      "parentUuid": "dab17558_7e37aae3",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_0b30de55",
        "filename": "sc/source/filter/oox/formulabase.cxx",
        "patchSetId": 6
      },
      "lineNbr": 911,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2015-12-21T20:24:05Z",
      "side": 1,
      "message": "These are only 5 entries, but we have 8 new functions..?",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_1e4dbe72",
        "filename": "sc/source/filter/oox/formulabase.cxx",
        "patchSetId": 6
      },
      "lineNbr": 911,
      "author": {
        "id": 1000057
      },
      "writtenOn": "2015-12-22T12:44:37Z",
      "side": 1,
      "message": "These 5 are new Excel 2016 functions, the other 3 don\u0027t exist in Excel.",
      "parentUuid": "dab17558_0b30de55",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_ccc1be30",
        "filename": "sc/source/filter/oox/formulabase.cxx",
        "patchSetId": 6
      },
      "lineNbr": 911,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2016-01-12T11:50:50Z",
      "side": 1,
      "message": "Those 3 should go into te saFuncTableOOoLO table then.",
      "parentUuid": "dab17558_1e4dbe72",
      "revId": "5bbe6dd7cf4228921421d3f3cd96c7b6466ee9f6",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}