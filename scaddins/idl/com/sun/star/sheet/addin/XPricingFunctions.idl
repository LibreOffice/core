/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef com_sun_star_sheet_addin_XPricingFunctions_idl
#define com_sun_star_sheet_addin_XPricingFunctions_idl

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>

module com
{
module sun
{
module star
{
module sheet
{
module addin
{
    /**
     * Interface with pricing functions.
     */
    interface XPricingFunctions : com::sun::star::uno::XInterface
    {
        /// OPT_BARRIER(), pricing of a barrier option.
        double getOptBarrier( [in] double spot, [in] double vol,
            [in] double rate, [in] double rateForeign,
            [in] double maturity, [in] double strike,
            [in] double barrierLow, [in] double barrierUp,
            [in] double rebate,
            [in] string putCall, [in] string inOut,
            [in] string continuous, [in] any greek  )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// OPT_TOUCH(), pricing of a touch/no-touch option.
        double getOptTouch( [in] double spot, [in] double vol,
            [in] double rate, [in] double rateForeign,
            [in] double maturity,
            [in] double barrierLow, [in] double barrierUp,
            [in] string foreignDomestic, [in] string inOut,
            [in] string continuous, [in] any greek  )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// OPT_PROB_HIT(), probability of hitting a barrier.
        double getOptProbHit( [in] double spot, [in] double vol,
            [in] double mu, [in] double maturity,
            [in] double barrierLow, [in] double barrierUp )
            raises( com::sun::star::lang::IllegalArgumentException );

        /// OPT_PROB_INMONEY(), probability of ending up in-the-money.
        double getOptProbInMoney( [in] double spot, [in] double vol,
            [in] double mu, [in] double maturity,
            [in] double barrierLow, [in] double barrierUp,
            [in] any strike, [in] any putCall )
            raises( com::sun::star::lang::IllegalArgumentException );

    };
};
};
};
};
};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
