{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0bc1570d_c708a673",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "do you have any measurements of the benefit of avoiding OUString.copy creating a new OUString when passing string_view into unoidl::Provider::findEntity now, vs. the cost of creating new OUString in some of the findEntity implementations?",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f8fe486_985ab3cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T13:56:33Z",
      "side": 1,
      "message": "No.\n\nSince we can sometimes avoid creating an OUString at all, vs. creating an OUString like the prior code did, the cost will definitely not be worse, and might be considerably better.\n\nAn std::u16string_view is essentially free, since it is just a pointer and length, and the associated data is already (probably) in L1 cache.\n\nCreating an OUString requires malloc, which requires taking a lock, which is surprisingly expensive - malloc is almost always near the top of the list of hot functions in any performance profile.",
      "parentUuid": "0bc1570d_c708a673",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bde4c5f_96b454ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T16:01:10Z",
      "side": 1,
      "message": "\u003e Since we can sometimes avoid creating an OUString at all, vs. creating an OUString like the prior code did, the cost will definitely not be worse, and might be considerably better.\n\nMany of the calls to findEntity still pass an OUString (which gets cheaply converted to a std::u16string_view now).  And some of the findEntity implementations then reconstruct an OUString from the passed argument.  Which was not necessary when findEntity took a `OUString const \u0026` argument, but has become an expensive operation now.  That\u0027s the cost I\u0027m concerned about.",
      "parentUuid": "2f8fe486_985ab3cc",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42c6b89d_486988ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "Addressed other comments in https://gerrit.libreoffice.org/c/core/+/133302",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb416ca8_8b6dfc28",
        "filename": "unoidl/source/legacyprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 819,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "any reason this was moved out of the conditional expression below?  (if it had been left inside the expression, we\u0027d avoid creating an OUString if ucr_.isValid() is false)",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "875d6e4d_ceafa726",
        "filename": "unoidl/source/legacyprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 819,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "reverted to using OUString here",
      "parentUuid": "fb416ca8_8b6dfc28",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b065ff5_c15ce54e",
        "filename": "unoidl/source/unoidl-read.cxx",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "this should apparently be std::size_t now, too",
      "range": {
        "startLine": 106,
        "startChar": 17,
        "endLine": 106,
        "endChar": 26
      },
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "717ea131_01c06904",
        "filename": "unoidl/source/unoidl-read.cxx",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "done",
      "parentUuid": "2b065ff5_c15ce54e",
      "range": {
        "startLine": 106,
        "startChar": 17,
        "endLine": 106,
        "endChar": 26
      },
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2dedb4f_13d1002d",
        "filename": "unoidl/source/unoidl.cxx",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "why change the signature of this function in the first place, then?",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5b17b4a_5435519a",
        "filename": "unoidl/source/unoidl.cxx",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "Because the call chain wanted to pass down string_view. Reverted this to OUString.",
      "parentUuid": "e2dedb4f_13d1002d",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b303983_ca92bb21",
        "filename": "unoidl/source/unoidlprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "it would have been nice if this include block would have been kept ordered lexicographically",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cc47227_d04b0084",
        "filename": "unoidl/source/unoidlprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "done.",
      "parentUuid": "1b303983_ca92bb21",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80c70e4d_32d915a7",
        "filename": "unoidl/source/unoidlprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 512,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "nameOffset and nameLength, pointing into a std::u16string_view now, should apparently be of type std::size_t now",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2356dc42_a3f2f239",
        "filename": "unoidl/source/unoidlprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 512,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "reverted to using OUString here, since the call site is using OUString",
      "parentUuid": "80c70e4d_32d915a7",
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b8d7e19_b3cf3b99",
        "filename": "unoidl/source/unoidlprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-21T13:39:55Z",
      "side": 1,
      "message": "this apparently needs to be std::size_t now, too?",
      "range": {
        "startLine": 1356,
        "startChar": 9,
        "endLine": 1356,
        "endChar": 18
      },
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5ad30fa_09f8e916",
        "filename": "unoidl/source/unoidlprovider.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1356,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-21T19:11:11Z",
      "side": 1,
      "message": "reverted findEntity to use OUString",
      "parentUuid": "9b8d7e19_b3cf3b99",
      "range": {
        "startLine": 1356,
        "startChar": 9,
        "endLine": 1356,
        "endChar": 18
      },
      "revId": "2d9291b9433c9645b0870525211f74bfb1151555",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}