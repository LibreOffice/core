{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a68a61c_1a7a19b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:02:52Z",
      "side": 1,
      "message": "I\u0027d rather revert this..",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "689581f3_3d291ac9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-15T14:07:25Z",
      "side": 1,
      "message": "I would ask to keep this - because the asserts can\u0027t fire here, and the overhead is only in debug case (almost), while the code is clearer this way.",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29cd260a_c3c3b29c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:13:09Z",
      "side": 1,
      "message": "Bah, ok, I should had looked up isUnicodeCodePoint() as well.. I presumed it checks for *valid* Unicode points.",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "139049e5_0415ec78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:13:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0a68a61c_1a7a19b3",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97cc1cd2_83ec1b2a",
        "filename": "svl/source/numbers/numfmuno.cxx",
        "patchSetId": 3
      },
      "lineNbr": 453,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:02:52Z",
      "side": 1,
      "message": "Well, yes, but the only thing that does different is adding the overhead of\n\n    assert(isUnicodeCodePoint(code));\n\nto each and every character.. which might even be wrong because we iterate over sal_Unicode here and not UTF-32 code points, on purpose, see comment below. So in a debug build we might abort without good reason.",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b54265d6_6f65ec3f",
        "filename": "svl/source/numbers/numfmuno.cxx",
        "patchSetId": 3
      },
      "lineNbr": 453,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-15T14:07:25Z",
      "side": 1,
      "message": "I discussed this assert with Stephan, and this assert can\u0027t fail for any sal_Unicode (because it asserts that the value is less than 0x10FFFF, which is true for any 16-bit value).",
      "parentUuid": "97cc1cd2_83ec1b2a",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c3add0_4675c7d7",
        "filename": "svl/source/numbers/numfmuno.cxx",
        "patchSetId": 3
      },
      "lineNbr": 453,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:13:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b54265d6_6f65ec3f",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee8bda4_27bda095",
        "filename": "svl/source/numbers/numfmuno.cxx",
        "patchSetId": 3
      },
      "lineNbr": 454,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:02:52Z",
      "side": 1,
      "message": "... and again twice\n\n    assert(isUnicodeCodePoint(code));\n\nbecause it even checks isAsciiLowerCase(code) again.",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db1929bd_119a15c3",
        "filename": "svl/source/numbers/numfmuno.cxx",
        "patchSetId": 3
      },
      "lineNbr": 454,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-15T14:13:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eee8bda4_27bda095",
      "revId": "eeb6f0740903a7e78156cf755cc442383ace77d9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}