{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e4b76f4e_0324315d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-06-22T09:23:31Z",
      "side": 1,
      "message": "This started to cause CppunitTest_sc_shapetest to fail for me on Windows with\n  sc/qa/unit/scshapetest.cxx(169) : error : Assertion\n  Test name: sc_apitest::ScShapeTest::testTdf137576_LogicRectInDefaultMeasureline\n  assertion failed\n  - Expression: std::abs(rExpected.Y() - rActual.Y()) \u003c\u003d nTolerance\n  - after reload Y expected 16012 actual 18234 Tolerance 1\n\n(Though that test is generally known to be somewhat flaky, see the comments at \u003chttps://gerrit.libreoffice.org/c/core/+/106990\u003e \"tdf#137576 Improve cell anchored measure line in Calc\".  But at least for me, the test apparently reliably succeeded in the past, started to reliably fail now, and succeeds again when I local revert this commit.)",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b8624e7_5700ef6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-06-22T10:53:29Z",
      "side": 1,
      "message": "What kind of setup do you run? Monitor scaling? But then I also had asserts failing in https://gerrit.libreoffice.org/c/core/+/135810, which I don\u0027t understand.",
      "parentUuid": "e4b76f4e_0324315d",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd9df1aa_8bce1dad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-06-22T11:22:35Z",
      "side": 1,
      "message": "\u003e What kind of setup do you run? Monitor scaling?\n\na laptop with 2560x1600 screen and 100% scaling",
      "parentUuid": "5b8624e7_5700ef6d",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c2ca4db_aedf1728",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-06-23T07:12:39Z",
      "side": 1,
      "message": "whatever\u0027s going on exactly, my failure now went away again with \u003chttps://git.libreoffice.org/core/+/7d5dcf5f547e29d61e788b88f7a3f7b4feafb6b2%5E%21\u003e \"Fix shape rectangle calculation\"",
      "parentUuid": "bd9df1aa_8bce1dad",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38e027d5_3e744d75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-06-25T16:50:31Z",
      "side": 1,
      "message": "Looks like my patch uncovered a bug; nothing uncommon in VCL code from my POV.",
      "parentUuid": "0c2ca4db_aedf1728",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44a24c0c_45bd37d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-06-28T13:42:16Z",
      "side": 1,
      "message": "As it turns out, this also started to make my Windows builds (on \"a laptop with 2560x1600 screen and 100% scaling\") consistently fail CppunitTest_sw_ooxmlexport12 with\n\n  C:/lo-clang/core/sw/qa/extras/ooxmlexport/ooxmlexport12.cxx(523) : error : Assertion\n  Test name: testObjectCrossReference::TestBody\n  equality assertion failed\n  - Expected: Text 2\n  - Actual  : 2\n",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38d08c4a_2b873e57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-28T15:31:31Z",
      "side": 1,
      "message": "Fun thing is: opening the testdoc in Writer, saving to DOCX and reloading would give \"2\" in the last line on the last (2nd) page. Only after Tools-\u003eUpdate-\u003eUpdate All, the field shows \"Text 2\".\n\nThe test doesn\u0027t seem to contain an \"update all\" call; possibly needs that.\nBut another fun thing is that the test itself doesn\u0027t fail for me locally.",
      "parentUuid": "44a24c0c_45bd37d7",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc64c9f8_09d21f1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-28T15:39:38Z",
      "side": 1,
      "message": "Stephan: does adding to sw/qa/extras/ooxmlexport/ooxmlexport12.cxx\n\n    20: #include \u003ccom/sun/star/util/XRefreshable.hpp\u003e\n    ...\n    471: // Refresh all cross-reference fields\n    472: uno::Reference\u003cutil::XRefreshable\u003e(xFieldsAccess, uno::UNO_QUERY_THROW)-\u003erefresh();\n\nfixes it?",
      "parentUuid": "38d08c4a_2b873e57",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21375019_2dae0635",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-28T15:42:36Z",
      "side": 1,
      "message": "\u003e opening the testdoc in Writer, saving to DOCX and reloading would give \"2\" in the last line on the last (2nd) page.\n\nForgot to mention: this happens also in release 7.3, so not specific to the discussed change.",
      "parentUuid": "bc64c9f8_09d21f1b",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "316cf1e8_0e09989d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-06-29T08:47:19Z",
      "side": 1,
      "message": "diff --git a/sw/qa/extras/ooxmlexport/ooxmlexport12.cxx b/sw/qa/extras/ooxmlexport/ooxmlexport12.cxx\n  index 8b4fc39dd02d..b355778dc146 100644\n  --- a/sw/qa/extras/ooxmlexport/ooxmlexport12.cxx\n  +++ b/sw/qa/extras/ooxmlexport/ooxmlexport12.cxx\n  @@ -18,6 +18,7 @@\n   #include \u003ccom/sun/star/text/XTextTablesSupplier.hpp\u003e\n   #include \u003ccom/sun/star/text/XTextTable.hpp\u003e\n   #include \u003ccom/sun/star/document/XViewDataSupplier.hpp\u003e\n  +#include \u003ccom/sun/star/util/XRefreshable.hpp\u003e\n   #include \u003co3tl/string_view.hxx\u003e\n   \n   class Test : public SwModelTestBase\n  @@ -467,6 +468,8 @@ CPPUNIT_TEST_FIXTURE(Test, testObjectCrossReference)\n       uno::Reference\u003ctext::XTextFieldsSupplier\u003e xTextFieldsSupplier(mxComponent, uno::UNO_QUERY);\n       uno::Reference\u003ccontainer::XEnumerationAccess\u003e xFieldsAccess(\n           xTextFieldsSupplier-\u003egetTextFields());\n  +    // Refresh all cross-reference fields:\n  +    uno::Reference\u003cutil::XRefreshable\u003e(xFieldsAccess, uno::UNO_QUERY_THROW)-\u003erefresh();\n       uno::Reference\u003ccontainer::XEnumeration\u003e xFields(xFieldsAccess-\u003ecreateEnumeration());\n       CPPUNIT_ASSERT(xFields-\u003ehasMoreElements());\n   \n\nwould indeed fix it for me.  Though it looks odd that this VCL commit would affect that behavior.  Maybe some Writer people can share their thoughts whether this might be plausible at all (and whether Mike\u0027s proposed change would be a true fix or just a workaround)?",
      "parentUuid": "21375019_2dae0635",
      "revId": "8b6000f6075725b2e17b8fa745251ea96d7185f1",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}