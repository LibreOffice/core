{
  "comments": [
    {
      "key": {
        "uuid": "fa32b979_4873334e",
        "filename": "jurt/source/pipe/wrapper/wrapper.c",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2014-12-04T12:56:33Z",
      "side": 1,
      "message": "just a minor nit that since module!\u003dNULL iff InitWrapper has been called, you don\u0027t need the additional BOOL first",
      "revId": "c4cea51aec06825f583e04d0c2755f35154ae042",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa32b979_e88ec726",
        "filename": "jurt/source/pipe/wrapper/wrapper.c",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2014-12-04T12:56:33Z",
      "side": 1,
      "message": "there\u0027s no guarantee that a thread observes a meaningful value for module when read without the necessary synchronization in place (i.e., outside the CriticalSection)\n\nunconditionally enter CriticialSection, call InitWrapper if necessary (i.e., module\u003d\u003dNULL), then leave again",
      "revId": "c4cea51aec06825f583e04d0c2755f35154ae042",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa32b979_08bbebc5",
        "filename": "jurt/source/pipe/wrapper/wrapper.c",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000779
      },
      "writtenOn": "2014-12-04T13:32:37Z",
      "side": 1,
      "message": "I think the CriticalSection is here not necessary. This part must be calling once.\ni.e.\nif(first)\n{\n    first \u003d FALSE;\n    InitWrapper();\n}",
      "parentUuid": "fa32b979_e88ec726",
      "revId": "c4cea51aec06825f583e04d0c2755f35154ae042",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa32b979_0830cb55",
        "filename": "jurt/source/pipe/wrapper/wrapper.c",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2014-12-04T14:23:09Z",
      "side": 1,
      "message": "but that code only works with a single threaded process; you need some synchronization mechanism to ensure that (1) not two threads race to swap first from TRUE to FALSE (and both call InitWrapper) and (2) every thread reading first will observe its new value FALSE once it has been written",
      "parentUuid": "fa32b979_08bbebc5",
      "revId": "c4cea51aec06825f583e04d0c2755f35154ae042",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa32b979_a80bdf7c",
        "filename": "jurt/source/pipe/wrapper/wrapper.c",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000779
      },
      "writtenOn": "2014-12-04T15:38:47Z",
      "side": 1,
      "message": "You right, but the initialize of the CriticalSection must be once, and then we have the same problem.\nThe problem here, we would make this Init treadsafe but we must in this init the init of the CriticalSection, and that is not possible.\nMy solution with the boolean is very quickly, and in the most case enough.\n\nBut i have testing, it is not a problem when the LoadLibrary called a second time, it get the same modulhandle.\n\nAnother case you give me a tip for solve the problem.\n\nHere the docu of InitializeCriticalSection\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/ms683472(v\u003dvs.85).aspx\n\nHere a example: http://msdn.microsoft.com/en-us/library/windows/desktop/ms686908(v\u003dvs.85).aspx",
      "parentUuid": "fa32b979_0830cb55",
      "revId": "c4cea51aec06825f583e04d0c2755f35154ae042",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa32b979_68263718",
        "filename": "jurt/source/pipe/wrapper/wrapper.c",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2014-12-04T16:32:34Z",
      "side": 1,
      "message": "you can presumably do the call to InitializeCriticalSection in DllMain upon DLL_PROCESS_ATTACH?\n\n(while you\u0027re right that in this specific case, parallel calls to InitWrapper would be harmless, at least as long as writes to module are atomic, without synchronization you\u0027d still need to make sure that reading module in other threads would actually observe the written value)",
      "parentUuid": "fa32b979_a80bdf7c",
      "revId": "c4cea51aec06825f583e04d0c2755f35154ae042",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}