{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "34d27700_4279d5d2",
        "filename": "hwpfilter/source/hwpreader.cxx",
        "patchSetId": 1
      },
      "lineNbr": 3959,
      "author": {
        "id": 1002951
      },
      "writtenOn": "2022-03-09T11:05:12Z",
      "side": 0,
      "message": "A behaviour change is happening here, because of these lines. Can you investigate that? Consider that we are calculating the \"reflex angle\". You can check the difference with this code:\n\n    #include \u003ciostream\u003e\n    #include \u003ccmath\u003e\n\n    double v1(int x, int y)\n    {\n        double skewX;\n        if( y \u003d\u003d 0 )\n             skewX \u003d 0;\n        else\n             skewX \u003d atan(static_cast\u003cdouble\u003e(y)/x);\n        if( skewX \u003e\u003d M_PI_2 )\n             skewX -\u003d M_PI;\n        if( skewX \u003c\u003d -M_PI_2 )\n             skewX +\u003d M_PI;\n        return skewX;\n    }\n\n    double v2(int x, int y)\n    {\n        double skewX \u003d atan2(y, x);\n    /*      // these lines make difference\n        if( skewX \u003e\u003d M_PI_2 )\n            skewX -\u003d M_PI;\n        if( skewX \u003c\u003d -M_PI_2 )\n            skewX +\u003d M_PI;\n    */    return skewX;\n    }\n\n    int main()\n    {\n        double diff;\n        for(int i\u003d-1000; i\u003c1000; ++i)\n            for(int j\u003d-1000; j\u003c1000; ++j)\n            {\n                 diff\u003dv1(i, j) - v2(i, j);\n                 if(diff \u003e 1e-15)\n                     std::cout \u003c\u003c i \u003c\u003c \" \" \u003c\u003c j \u003c\u003c \" \"\n                           \u003c\u003c diff \u003c\u003c \" \" \u003c\u003c v1(i,j) \u003c\u003c \" \" \u003c\u003c v2(i,j) \u003c\u003c std::endl;\n            }\n    }",
      "revId": "92e835dbf00590c9c29509d2995cc7918a9bbb90",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f33d586b_71ecc7a2",
        "filename": "hwpfilter/source/hwpreader.cxx",
        "patchSetId": 1
      },
      "lineNbr": 3959,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2022-03-16T16:08:24Z",
      "side": 0,
      "message": "I think the patch I have submitted would resolve this(I didn\u0027t reply to this comment as I thought you would first check my modifications on next submitted patch and then resolve it)",
      "parentUuid": "34d27700_4279d5d2",
      "revId": "92e835dbf00590c9c29509d2995cc7918a9bbb90",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0d65bb1_3cdaa603",
        "filename": "hwpfilter/source/hwpreader.cxx",
        "patchSetId": 1
      },
      "lineNbr": 3959,
      "author": {
        "id": 1002951
      },
      "writtenOn": "2022-03-23T08:44:02Z",
      "side": 0,
      "message": "You need to use this CPP code to study the behavior change here. Please look at the values where the second parameter to atan2 is less than zero (x\u003c0).\nIn this CPP code, you will see that if j starts at zero instead of -1000, there will be no difference between the return value of two functions, and the output that happens on a difference will be empty.",
      "parentUuid": "f33d586b_71ecc7a2",
      "revId": "92e835dbf00590c9c29509d2995cc7918a9bbb90",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56d87e0c_9110ce12",
        "filename": "hwpfilter/source/hwpreader.cxx",
        "patchSetId": 1
      },
      "lineNbr": 3959,
      "author": {
        "id": 1000154
      },
      "writtenOn": "2022-03-25T00:22:23Z",
      "side": 0,
      "message": "It would be much easier to extract that part of the code into a function that can be unit tested, then unit test like crazy the function with covering all the corner cases and only then change the atan to atan2 in a way that doesn\u0027t break the unit test.\n\nIt not only is easier to make sure that a regression isn\u0027t introduced as part of refactoring (which still depends on how many corner cases are covered), but it will also make sure the behavior of the function doesn\u0027t change in the future, if the code is changed. \n\nThis also teaches how to tackle complicated code refactoring in a way that won\u0027t produce regressions.",
      "parentUuid": "d0d65bb1_3cdaa603",
      "revId": "92e835dbf00590c9c29509d2995cc7918a9bbb90",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f7a6b9_1dfb3507",
        "filename": "hwpfilter/source/hwpreader.cxx",
        "patchSetId": 1
      },
      "lineNbr": 3959,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2022-03-25T11:47:38Z",
      "side": 0,
      "message": "I runned the code shared above by Hossein Sir and I found diff(values\nof v1(i,j)-v2(i,j)) \u003e 1e+15 for different values of i and j.After studying \nit I had made some modifications in this code.When I runned it after the modifications there was no diff value \u003e1e-15.\nHere is the code:-\n\n #include \u003ciostream\u003e\n #include \u003ccmath\u003e\n double v1(int x, int y)\n {\n  double skewX;\n  if( y \u003d\u003d 0 )\n           skewX \u003d 0;\n  else\n           skewX \u003d atan(static_cast\u003cdouble\u003e(y)/x);\n  if( skewX \u003e\u003d M_PI_2 )\n           skewX -\u003d M_PI;\n  if( skewX \u003c\u003d -M_PI_2 )\n           skewX +\u003d M_PI;\n  return skewX;\n }\n double v2(int x, int y)\n {\n  double skewX \u003d atan2(y, x);       \n if((y\u003c0 || y\u003d\u003d0) \u0026\u0026 x\u003c0){\n \tskewX\u003dskewX+M_PI;\n }else if(x\u003d\u003d0 \u0026\u0026 y\u003c0){\n \tskewX\u003dskewX+M_PI;\n }\n return skewX;\n }\n int main()\n {\n  double diff;\n  for(int i\u003d-1000; i\u003c1000; ++i)\n   for(int j\u003d-1000; j\u003c1000; ++j)\n   {\n     diff\u003dv1(i, j) - v2(i, j);\n     if(diff \u003e 1e-15)\n      std::cout \u003c\u003c i \u003c\u003c \" \" \u003c\u003c j \u003c\u003c \" \"\n                \u003c\u003c diff \u003c\u003c \" \" \u003c\u003c v1(i,j) \u003c\u003c \" \" \u003c\u003c v2(i,j) \u003c\u003c std::endl;\n   }\n }\n\nPlease tell me if the modifications are correct then I would make the changes \naccordingly in \"hwpreader.cxx\".",
      "parentUuid": "56d87e0c_9110ce12",
      "revId": "92e835dbf00590c9c29509d2995cc7918a9bbb90",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80523253_227d6194",
        "filename": "hwpfilter/source/hwpreader.cxx",
        "patchSetId": 1
      },
      "lineNbr": 3959,
      "author": {
        "id": 1002951
      },
      "writtenOn": "2022-04-04T07:23:52Z",
      "side": 0,
      "message": "I think you should not do this, because using atan2() instead of atan() is meant to make the code more clear and compact, avoiding several checks for different situations. Those checks are usually done internally by atan2().\nBut in this case, using extra conditions in addition to atan2() makes things more complex, so my suggestion is that:\n1. Either find out why are those checks were done in the original code, and answer the question: \"should we keep them\"?\n2. Keep the code as it was, and forget about using atan2().",
      "parentUuid": "08f7a6b9_1dfb3507",
      "revId": "92e835dbf00590c9c29509d2995cc7918a9bbb90",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}