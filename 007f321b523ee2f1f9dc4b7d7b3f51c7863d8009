{
  "comments": [
    {
      "key": {
        "uuid": "51ae032d_0ac5c5bb",
        "filename": "include/oox/helper/extrusionpresets.hxx",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-04-01T09:52:54Z",
      "side": 1,
      "message": "This struct seems only used inside extrusionpresets.cxx?\nI\u0027d suggest to convert all OUStrings in it into std::u16string_view, which would allow to make its ctors constexpr; and then just have a static const array in that .CXX, not as a class member?",
      "revId": "007f321b523ee2f1f9dc4b7d7b3f51c7863d8009",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d5704c_491cd4ab",
        "filename": "include/oox/helper/extrusionpresets.hxx",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000447
      },
      "writtenOn": "2021-04-01T14:08:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "51ae032d_0ac5c5bb",
      "revId": "007f321b523ee2f1f9dc4b7d7b3f51c7863d8009",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4570e7d4_572f0ce7",
        "filename": "include/oox/helper/extrusionpresets.hxx",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1002281
      },
      "writtenOn": "2021-04-02T01:57:45Z",
      "side": 1,
      "message": "I noticed that the size of this array is used in loop bounds checking in some of the other methods. I suggest making it a named constant rather than a literal. Also, I\u0027m curious why you chose a classical array vs a std::array or a map keyed on preset name, or some other structure.",
      "revId": "007f321b523ee2f1f9dc4b7d7b3f51c7863d8009",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5474d589_2db7b672",
        "filename": "include/oox/helper/extrusionpresets.hxx",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-04-02T05:58:50Z",
      "side": 1,
      "message": "Using a C-style array, without any constants for its size, is just fine with modern C++. Having something like\n\n    struct Foo { ... };\n    static const Foo sFooArray[] \u003d { {...}, ... };\n    ...\n    for (const auto\u0026 r : sFooArray)\n    {\n       ...\n    }\n\nallows you to iterate over the standard C-style array elements easily, without ever knowing its size. No need to introduce complexity of std::array in this case.",
      "parentUuid": "4570e7d4_572f0ce7",
      "revId": "007f321b523ee2f1f9dc4b7d7b3f51c7863d8009",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c794996e_a3d210a4",
        "filename": "include/oox/helper/extrusionpresets.hxx",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 1002281
      },
      "writtenOn": "2021-04-02T14:25:44Z",
      "side": 1,
      "message": "Issue I\u0027m poking at above is that the array size is specified literally both here and in several methods in extrusionpresets.cxx, so if the size of the array ever changes, you have to know/remember to change it in all those places, rather than in just one place. If a std::array was used, you could just call the size() method and then you wouldn\u0027t even need the constant.",
      "parentUuid": "5474d589_2db7b672",
      "revId": "007f321b523ee2f1f9dc4b7d7b3f51c7863d8009",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a66bd9c_57977241",
        "filename": "oox/source/drawingml/shape.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1407,
      "author": {
        "id": 1002281
      },
      "writtenOn": "2021-04-02T01:57:45Z",
      "side": 1,
      "message": "This method is already pretty long as it is. I suggest trying to move as much new code as possible into new methods.",
      "revId": "007f321b523ee2f1f9dc4b7d7b3f51c7863d8009",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}