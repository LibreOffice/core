/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include <editeng/editrids.hrc>

 // Value strings ------------------------------------------------------------
String RID_SVXITEMS_TRUE
{
    Text [ en-US ] = "True" ;
};
String RID_SVXITEMS_FALSE
{
    Text [ en-US ] = "False" ;
};
 // enum SvxBreak ------------------------------------------------------------
String RID_SVXITEMS_BREAK_NONE
{
    Text [ en-US ] = "No break" ;
};
String RID_SVXITEMS_BREAK_COLUMN_BEFORE
{
    Text [ en-US ] = "Break before new column" ;
};
String RID_SVXITEMS_BREAK_COLUMN_AFTER
{
    Text [ en-US ] = "Break after new column" ;
};
String RID_SVXITEMS_BREAK_COLUMN_BOTH
{
    Text [ en-US ] = "Break before and after new column" ;
};
String RID_SVXITEMS_BREAK_PAGE_BEFORE
{
    Text [ en-US ] = "Break before new page" ;
};
String RID_SVXITEMS_BREAK_PAGE_AFTER
{
    Text [ en-US ] = "Break after new page" ;
};
String RID_SVXITEMS_BREAK_PAGE_BOTH
{
    Text [ en-US ] = "Break before and after new page" ;
};
 // enum SvxShadowLocation ---------------------------------------------------
String RID_SVXITEMS_SHADOW_NONE
{
    Text [ en-US ] = "No Shadow" ;
};
String RID_SVXITEMS_SHADOW_TOPLEFT
{
    Text [ en-US ] = "Shadow top left" ;
};
String RID_SVXITEMS_SHADOW_TOPRIGHT
{
    Text [ en-US ] = "Shadow top right" ;
};
String RID_SVXITEMS_SHADOW_BOTTOMLEFT
{
    Text [ en-US ] = "Shadow bottom left" ;
};
String RID_SVXITEMS_SHADOW_BOTTOMRIGHT
{
    Text [ en-US ] = "Shadow bottom right" ;
};
 // enum ColorName -----------------------------------------------------------
String RID_SVXITEMS_COLOR
{
    Text [ en-US ] = "Color " ;
};
String RID_SVXITEMS_COLOR_BLACK
{
    Text [ en-US ] = "Black" ;
};
String RID_SVXITEMS_COLOR_BLUE
{
    Text [ en-US ] = "Blue" ;
};
String RID_SVXITEMS_COLOR_GREEN
{
    Text [ en-US ] = "Green" ;
};
String RID_SVXITEMS_COLOR_CYAN
{
    Text [ en-US ] = "Cyan" ;
};
String RID_SVXITEMS_COLOR_RED
{
    Text [ en-US ] = "Red" ;
};
String RID_SVXITEMS_COLOR_MAGENTA
{
    Text [ en-US ] = "Magenta" ;
};
String RID_SVXITEMS_COLOR_BROWN
{
    Text [ en-US ] = "Brown" ;
};
String RID_SVXITEMS_COLOR_GRAY
{
    Text [ en-US ] = "Gray" ;
};
String RID_SVXITEMS_COLOR_LIGHTGRAY
{
    Text [ en-US ] = "Light Gray" ;
};
String RID_SVXITEMS_COLOR_LIGHTBLUE
{
    Text [ en-US ] = "Light Blue" ;
};
String RID_SVXITEMS_COLOR_LIGHTGREEN
{
    Text [ en-US ] = "Light Green" ;
};
String RID_SVXITEMS_COLOR_LIGHTCYAN
{
    Text [ en-US ] = "Light Cyan" ;
};
String RID_SVXITEMS_COLOR_LIGHTRED
{
    Text [ en-US ] = "Light Red" ;
};
String RID_SVXITEMS_COLOR_LIGHTMAGENTA
{
    Text [ en-US ] = "Light Magenta" ;
};
String RID_SVXITEMS_COLOR_YELLOW
{
    Text [ en-US ] = "Yellow" ;
};
String RID_SVXITEMS_COLOR_WHITE
{
    Text [ en-US ] = "White" ;
};
String RID_SVXITEMS_COLOR_MENUBAR
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_MENUBARTEXT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_POPUPMENU
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_POPUPMENUTEXT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_WINDOWTEXT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_WINDOWWORKSPACE
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_HIGHLIGHT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_HIGHLIGHTTEXT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_3DTEXT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_3DFACE
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_3DLIGHT
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_3DSHADOW
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_SCROLLBAR
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_FIELD
{
    Text = "?" ;
};
String RID_SVXITEMS_COLOR_FIELDTEXT
{
    Text = "?" ;
};
 // enum FontItalic -------------------------------------------------------
String RID_SVXITEMS_ITALIC_NONE
{
    Text [ en-US ] = "Not Italic" ;
};
String RID_SVXITEMS_ITALIC_OBLIQUE
{
    Text [ en-US ] = "Oblique italic" ;
};
String RID_SVXITEMS_ITALIC_NORMAL
{
    Text [ en-US ] = "Italic" ;
};
 // enum FontWeight -------------------------------------------------------
String RID_SVXITEMS_WEIGHT_DONTKNOW
{
    Text = "?" ;
};
String RID_SVXITEMS_WEIGHT_THIN
{
    Text [ en-US ] = "thin" ;
};
String RID_SVXITEMS_WEIGHT_ULTRALIGHT
{
    Text [ en-US ] = "ultra thin" ;
};
String RID_SVXITEMS_WEIGHT_LIGHT
{
    Text [ en-US ] = "light" ;
};
String RID_SVXITEMS_WEIGHT_SEMILIGHT
{
    Text [ en-US ] = "semi light" ;
};
String RID_SVXITEMS_WEIGHT_NORMAL
{
    Text [ en-US ] = "normal" ;
};
String RID_SVXITEMS_WEIGHT_MEDIUM
{
    Text [ en-US ] = "medium" ;
};
String RID_SVXITEMS_WEIGHT_SEMIBOLD
{
    Text [ en-US ] = "semi bold" ;
};
String RID_SVXITEMS_WEIGHT_BOLD
{
    Text [ en-US ] = "bold" ;
};
String RID_SVXITEMS_WEIGHT_ULTRABOLD
{
    Text [ en-US ] = "ultra bold" ;
};
String RID_SVXITEMS_WEIGHT_BLACK
{
    Text [ en-US ] = "black" ;
};
 // enum FontUnderline - used for underline ------------------------------
String RID_SVXITEMS_UL_NONE
{
    Text [ en-US ] = "No underline" ;
};
String RID_SVXITEMS_UL_SINGLE
{
    Text [ en-US ] = "Single underline" ;
};
String RID_SVXITEMS_UL_DOUBLE
{
    Text [ en-US ] = "Double underline" ;
};
String RID_SVXITEMS_UL_DOTTED
{
    Text [ en-US ] = "Dotted underline" ;
};
String RID_SVXITEMS_UL_DONTKNOW
{
    Text [ en-US ] = "Underline";
};
String RID_SVXITEMS_UL_DASH
{
    Text [ en-US ] = "Underline (dashes)";
};
String RID_SVXITEMS_UL_LONGDASH
{
    Text [ en-US ] = "Underline (long dashes)";
};
String RID_SVXITEMS_UL_DASHDOT
{
    Text [ en-US ] = "Underline (dot dash)";
};
String RID_SVXITEMS_UL_DASHDOTDOT
{
    Text [ en-US ] = "Underline (dot dot dash)";
};
String RID_SVXITEMS_UL_SMALLWAVE
{
    Text [ en-US ] = "Underline (small wave)";
};
String RID_SVXITEMS_UL_WAVE
{
    Text [ en-US ] = "Underline (Wave)";
};
String RID_SVXITEMS_UL_DOUBLEWAVE
{
    Text [ en-US ] = "Underline (Double wave)";
};
String RID_SVXITEMS_UL_BOLD
{
    Text [ en-US ] = "Underlined (Bold)";
};
String RID_SVXITEMS_UL_BOLDDOTTED
{
    Text [ en-US ] = "Dotted underline (Bold)";
};
String RID_SVXITEMS_UL_BOLDDASH
{
    Text [ en-US ] = "Underline (Dash bold)";
};
String RID_SVXITEMS_UL_BOLDLONGDASH
{
    Text [ en-US ] = "Underline (long dash, bold)";
};
String RID_SVXITEMS_UL_BOLDDASHDOT
{
    Text [ en-US ] = "Underline (dot dash, bold)";
};
String RID_SVXITEMS_UL_BOLDDASHDOTDOT
{
    Text [ en-US ] = "Underline (dot dot dash, bold)";
};
String RID_SVXITEMS_UL_BOLDWAVE
{
    Text [ en-US ] = "Underline (wave, bold)";
};
 // enum FontUnderline - used for overline -------------------------------
String RID_SVXITEMS_OL_NONE
{
    Text [ en-US ] = "No overline" ;
};
String RID_SVXITEMS_OL_SINGLE
{
    Text [ en-US ] = "Single overline" ;
};
String RID_SVXITEMS_OL_DOUBLE
{
    Text [ en-US ] = "Double overline" ;
};
String RID_SVXITEMS_OL_DOTTED
{
    Text [ en-US ] = "Dotted overline" ;
};
String RID_SVXITEMS_OL_DONTKNOW
{
    Text [ en-US ] = "Overline";
};
String RID_SVXITEMS_OL_DASH
{
    Text [ en-US ] = "Overline (dashes)";
};
String RID_SVXITEMS_OL_LONGDASH
{
    Text [ en-US ] = "Overline (long dashes)";
};
String RID_SVXITEMS_OL_DASHDOT
{
    Text [ en-US ] = "Overline (dot dash)";
};
String RID_SVXITEMS_OL_DASHDOTDOT
{
    Text [ en-US ] = "Overline (dot dot dash)";
};
String RID_SVXITEMS_OL_SMALLWAVE
{
    Text [ en-US ] = "Overline (small wave)";
};
String RID_SVXITEMS_OL_WAVE
{
    Text [ en-US ] = "Overline (Wave)";
};
String RID_SVXITEMS_OL_DOUBLEWAVE
{
    Text [ en-US ] = "Overline (Double wave)";
};
String RID_SVXITEMS_OL_BOLD
{
    Text [ en-US ] = "Overlined (Bold)";
};
String RID_SVXITEMS_OL_BOLDDOTTED
{
    Text [ en-US ] = "Dotted overline (Bold)";
};
String RID_SVXITEMS_OL_BOLDDASH
{
    Text [ en-US ] = "Overline (Dash bold)";
};
String RID_SVXITEMS_OL_BOLDLONGDASH
{
    Text [ en-US ] = "Overline (long dash, bold)";
};
String RID_SVXITEMS_OL_BOLDDASHDOT
{
    Text [ en-US ] = "Overline (dot dash, bold)";
};
String RID_SVXITEMS_OL_BOLDDASHDOTDOT
{
    Text [ en-US ] = "Overline (dot dot dash, bold)";
};
String RID_SVXITEMS_OL_BOLDWAVE
{
    Text [ en-US ] = "Overline (wave, bold)";
};
 // enum FontStrikeout ----------------------------------------------------
String RID_SVXITEMS_STRIKEOUT_NONE
{
    Text [ en-US ] = "No strikethrough" ;
};
String RID_SVXITEMS_STRIKEOUT_SINGLE
{
    Text [ en-US ] = "Single strikethrough" ;
};
String RID_SVXITEMS_STRIKEOUT_DOUBLE
{
    Text [ en-US ] = "Double strikethrough" ;
};
String RID_SVXITEMS_STRIKEOUT_BOLD
{
    Text [ en-US ] = "Bold strikethrough";
};
String RID_SVXITEMS_STRIKEOUT_SLASH
{
    Text [ en-US ] = "Strike through with slash";
};
String RID_SVXITEMS_STRIKEOUT_X
{
    Text [ en-US ] = "Strike through with Xes";
};
 // enum CASEMAP ----------------------------------------------------------
String RID_SVXITEMS_CASEMAP_NONE
{
    Text [ en-US ] = "None" ;
};
String RID_SVXITEMS_CASEMAP_VERSALIEN
{
    Text [ en-US ] = "Caps" ;
};
String RID_SVXITEMS_CASEMAP_GEMEINE
{
    Text [ en-US ] = "Lowercase" ;
};
String RID_SVXITEMS_CASEMAP_TITEL
{
    Text [ en-US ] = "Title" ;
};
String RID_SVXITEMS_CASEMAP_KAPITAELCHEN
{
    Text [ en-US ] = "Small caps" ;
};
 // enum ESCAPEMENT -------------------------------------------------------
String RID_SVXITEMS_ESCAPEMENT_OFF
{
    Text [ en-US ] = "Normal position" ;
};
String RID_SVXITEMS_ESCAPEMENT_SUPER
{
    Text [ en-US ] = "Superscript " ;
};
String RID_SVXITEMS_ESCAPEMENT_SUB
{
    Text [ en-US ] = "Subscript " ;
};
String RID_SVXITEMS_ESCAPEMENT_AUTO
{
    Text [ en-US ] = "automatic" ;
};
 // enum SvxAdjust -----------------------------------------------------------
String RID_SVXITEMS_ADJUST_LEFT
{
    Text [ en-US ] = "Align left" ;
};
String RID_SVXITEMS_ADJUST_RIGHT
{
    Text [ en-US ] = "Align right" ;
};
String RID_SVXITEMS_ADJUST_BLOCK
{
    Text [ en-US ] = "Justify" ;
};
String RID_SVXITEMS_ADJUST_CENTER
{
    Text [ en-US ] = "Centered" ;
};
String RID_SVXITEMS_ADJUST_BLOCKLINE
{
    Text [ en-US ] = "Justify" ;
};
 // enum SvxTabAdjust --------------------------------------------------------
String RID_SVXITEMS_TAB_DECIMAL_CHAR
{
    Text [ en-US ] = "Decimal Symbol:" ;
};
String RID_SVXITEMS_TAB_FILL_CHAR
{
    Text [ en-US ] = "Fill character:" ;
};
String RID_SVXITEMS_TAB_ADJUST_LEFT
{
    Text [ en-US ] = "Left" ;
};
String RID_SVXITEMS_TAB_ADJUST_RIGHT
{
    Text [ en-US ] = "Right" ;
};
String RID_SVXITEMS_TAB_ADJUST_DECIMAL
{
    Text [ en-US ] = "Decimal" ;
};
String RID_SVXITEMS_TAB_ADJUST_CENTER
{
    Text [ en-US ] = "Centered" ;
};
String RID_SVXITEMS_TAB_ADJUST_DEFAULT
{
    Text [ en-US ] = "Default" ;
};
String RID_SOLID
{
    Text [ en-US ] = "Single, solid" ;
};
String RID_DOTTED
{
    Text [ en-US ] = "Single, dotted" ;
};
String RID_DASHED
{
    Text [ en-US ] = "Single, dashed" ;
};
String RID_DOUBLE
{
    Text [ en-US ] = "Double" ;
};
String RID_THINTHICK_SMALLGAP
{
    Text [ en-US ] = "Double, inside: fine, outside: thick, spacing: small";
};
String RID_THINTHICK_MEDIUMGAP
{
    Text [ en-US ] = "Double, inside: fine, outside: thick, spacing: medium";
};
String RID_THINTHICK_LARGEGAP
{
    Text [ en-US ] = "Double, inside: fine, outside: thick, spacing: large";
};
String RID_THICKTHIN_SMALLGAP
{
    Text [ en-US ] = "Double, inside: thick, outside: fine, spacing: small";
};
String RID_THICKTHIN_MEDIUMGAP
{
    Text [ en-US ] = "Double, inside: thick, outside: fine, spacing: medium";
};
String RID_THICKTHIN_LARGEGAP
{
    Text [ en-US ] = "Double, inside: thick, outside: fine, spacing: large";
};
String RID_EMBOSSED
{
    Text [ en-US ] = "3D embossed" ;
};
String RID_ENGRAVED
{
    Text [ en-US ] = "3D engraved" ;
};
String RID_INSET
{
    Text [ en-US ] = "Inset" ;
};
String RID_OUTSET
{
    Text [ en-US ] = "Outset" ;
};
String RID_FINE_DASHED
{
    Text [ en-US ] = "Single, fine dashed";
};
String RID_DOUBLE_THIN
{
    Text [ en-US ] = "Double, fixed thin lines";
};
String RID_DASH_DOT
{
    Text [ en-US ] = "Single, dash-dot";
};
String RID_DASH_DOT_DOT
{
    Text [ en-US ] = "Single, dash-dot-dot";
};
String RID_SVXITEMS_METRIC_MM
{
    Text [ en-US ] = "mm" ;
};
String RID_SVXITEMS_METRIC_CM
{
    Text [ en-US ] = "cm" ;
};
String RID_SVXITEMS_METRIC_INCH
{
    Text [ en-US ] = "inch" ;
};
String RID_SVXITEMS_METRIC_POINT
{
    Text [ en-US ] = "pt" ;
};
String RID_SVXITEMS_METRIC_TWIP
{
    Text [ en-US ] = "twip" ;
};
String RID_SVXITEMS_METRIC_PIXEL
{
    Text [ en-US ] = "pixel" ;
};
 // GetValueText von BoolItems
String RID_SVXITEMS_SHADOWED_TRUE
{
    Text [ en-US ] = "Shadowed" ;
};
String RID_SVXITEMS_SHADOWED_FALSE
{
    Text [ en-US ] = "Not Shadowed" ;
};
String RID_SVXITEMS_BLINK_TRUE
{
    Text [ en-US ] = "Blinking" ;
};
String RID_SVXITEMS_BLINK_FALSE
{
    Text [ en-US ] = "Not Blinking" ;
};
String RID_SVXITEMS_AUTOKERN_TRUE
{
    Text [ en-US ] = "Pair Kerning" ;
};
String RID_SVXITEMS_AUTOKERN_FALSE
{
    Text [ en-US ] = "No pair kerning" ;
};
String RID_SVXITEMS_WORDLINE_TRUE
{
    Text [ en-US ] = "Individual words" ;
};
String RID_SVXITEMS_WORDLINE_FALSE
{
    Text [ en-US ] = "Not Words Only" ;
};
String RID_SVXITEMS_CONTOUR_TRUE
{
    Text [ en-US ] = "Outline" ;
};
String RID_SVXITEMS_CONTOUR_FALSE
{
    Text [ en-US ] = "No Outline" ;
};
String RID_SVXITEMS_NOLINEBREAK_TRUE
{
    Text = "?" ;
};
String RID_SVXITEMS_NOLINEBREAK_FALSE
{
    Text = "?" ;
};
String RID_SVXITEMS_NOHYPHEN_TRUE
{
    Text = "?" ;
};
String RID_SVXITEMS_NOHYPHEN_FALSE
{
    Text = "?" ;
};
String RID_SVXITEMS_PRINT_TRUE
{
    Text [ en-US ] = "Print" ;
};
String RID_SVXITEMS_PRINT_FALSE
{
    Text [ en-US ] = "Don't print" ;
};
String RID_SVXITEMS_OPAQUE_TRUE
{
    Text [ en-US ] = "Opaque" ;
};
String RID_SVXITEMS_OPAQUE_FALSE
{
    Text [ en-US ] = "Not Opaque" ;
};
String RID_SVXITEMS_FMTKEEP_TRUE
{
    Text [ en-US ] = "Keep with next paragraph" ;
};
String RID_SVXITEMS_FMTKEEP_FALSE
{
    Text [ en-US ] = "Don't Keep Paragraphs Together" ;
};
String RID_SVXITEMS_FMTSPLIT_TRUE
{
    Text [ en-US ] = "Split paragraph" ;
};
String RID_SVXITEMS_FMTSPLIT_FALSE
{
    Text [ en-US ] = "Don't split paragraph" ;
};
String RID_SVXITEMS_PROT_CONTENT_TRUE
{
    Text [ en-US ] = "Contents protected" ;
};
String RID_SVXITEMS_PROT_CONTENT_FALSE
{
    Text [ en-US ] = "Contents not protected" ;
};
String RID_SVXITEMS_PROT_SIZE_TRUE
{
    Text [ en-US ] = "Size protected" ;
};
String RID_SVXITEMS_PROT_SIZE_FALSE
{
    Text [ en-US ] = "Size not protected" ;
};
String RID_SVXITEMS_PROT_POS_TRUE
{
    Text [ en-US ] = "Position protected" ;
};
String RID_SVXITEMS_PROT_POS_FALSE
{
    Text [ en-US ] = "Position not protected" ;
};
String RID_SVXITEMS_TRANSPARENT_TRUE
{
    Text [ en-US ] = "Transparent" ;
};
String RID_SVXITEMS_TRANSPARENT_FALSE
{
    Text [ en-US ] = "Not Transparent" ;
};
String RID_SVXITEMS_HYPHEN_TRUE
{
    Text [ en-US ] = "Hyphenation" ;
};
String RID_SVXITEMS_HYPHEN_FALSE
{
    Text [ en-US ] = "No hyphenation" ;
};
String RID_SVXITEMS_PAGE_END_TRUE
{
    Text [ en-US ] = "Page End" ;
};
String RID_SVXITEMS_PAGE_END_FALSE
{
    Text [ en-US ] = "No Page End" ;
};
String RID_SVXITEMS_SIZE_WIDTH
{
    Text [ en-US ] = "Width: " ;
};
String RID_SVXITEMS_SIZE_HEIGHT
{
    Text [ en-US ] = "Height: " ;
};
String RID_SVXITEMS_LRSPACE_LEFT
{
    Text [ en-US ] = "Indent left " ;
};
String RID_SVXITEMS_LRSPACE_FLINE
{
    Text [ en-US ] = "First Line " ;
};
String RID_SVXITEMS_LRSPACE_RIGHT
{
    Text [ en-US ] = "Indent right " ;
};
String RID_SVXITEMS_SHADOW_COMPLETE
{
    Text [ en-US ] = "Shadow: " ;
};
String RID_SVXITEMS_BORDER_COMPLETE
{
    Text [ en-US ] = "Borders " ;
};
String RID_SVXITEMS_BORDER_NONE
{
    Text [ en-US ] = "No border";
};
String RID_SVXITEMS_BORDER_TOP
{
    Text [ en-US ] = "top " ;
};
String RID_SVXITEMS_BORDER_BOTTOM
{
    Text [ en-US ] = "bottom " ;
};
String RID_SVXITEMS_BORDER_LEFT
{
    Text [ en-US ] = "left " ;
};
String RID_SVXITEMS_BORDER_RIGHT
{
    Text [ en-US ] = "right " ;
};
String RID_SVXITEMS_BORDER_DISTANCE
{
    Text [ en-US ] = "Spacing " ;
};
String RID_SVXITEMS_ULSPACE_UPPER
{
    Text [ en-US ] = "From top " ;
};
String RID_SVXITEMS_ULSPACE_LOWER
{
    Text [ en-US ] = "From bottom " ;
};
String RID_SVXITEMS_LINES
{
    Text [ en-US ] = "%1 Lines" ;
    Text [ x-comment ] = "pb: %1 == will be replaced by the number of lines";
};
String RID_SVXITEMS_WIDOWS_COMPLETE
{
    Text [ en-US ] = "Widow control" ;
};
String RID_SVXITEMS_ORPHANS_COMPLETE
{
    Text [ en-US ] = "Orphan control" ;
};
String RID_SVXITEMS_HYPHEN_MINLEAD
{
    Text [ en-US ] = "%1 characters at end of line" ;
};
String RID_SVXITEMS_HYPHEN_MINTRAIL
{
    Text [ en-US ] = "%1 characters at beginning of line" ;
};
String RID_SVXITEMS_HYPHEN_MAX
{
    Text [ en-US ] = "%1 hyphens" ;
};
String RID_SVXITEMS_PAGEMODEL_COMPLETE
{
    Text [ en-US ] = "Page Style: " ;
};
String RID_SVXITEMS_KERNING_COMPLETE
{
    Text [ en-US ] = "Kerning " ;
};
String RID_SVXITEMS_KERNING_EXPANDED
{
    Text [ en-US ] = "locked " ;
};
String RID_SVXITEMS_KERNING_CONDENSED
{
    Text [ en-US ] = "Condensed " ;
};
String RID_SVXITEMS_GRAPHIC
{
    Text [ en-US ] = "Graphic" ;
};
String RID_SVXITEMS_EMPHASIS_NONE_STYLE
{
    Text [ en-US ] = "none";
};
String RID_SVXITEMS_EMPHASIS_DOT_STYLE
{
    Text [ en-US ] = "Dots ";
};
String RID_SVXITEMS_EMPHASIS_CIRCLE_STYLE
{
    Text [ en-US ] = "Circle ";
};
String RID_SVXITEMS_EMPHASIS_DISC_STYLE
{
// ??? disc == filled ring
    Text [ en-US ] = "Filled circle ";
};
String RID_SVXITEMS_EMPHASIS_ACCENT_STYLE
{
    Text [ en-US ] = "Accent ";
};
String RID_SVXITEMS_EMPHASIS_ABOVE_POS
{
    Text [ en-US ] = "Above";
};
String RID_SVXITEMS_EMPHASIS_BELOW_POS
{
    Text [ en-US ] = "Below";
};
String RID_SVXITEMS_TWOLINES_OFF
{
    Text [ en-US ] = "Double-lined off";
};
String RID_SVXITEMS_TWOLINES
{
    Text [ en-US ] = "Double-lined";
};
String RID_SVXITEMS_SCRPTSPC_OFF
{
    Text [ en-US ] = "No automatic character spacing";
};
String RID_SVXITEMS_SCRPTSPC_ON
{
    Text [ en-US ] = "No automatic character spacing";
};
String RID_SVXITEMS_HNGPNCT_OFF
{
    Text [ en-US ] = "No hanging punctuation at line end";
};
String RID_SVXITEMS_HNGPNCT_ON
{
    Text [ en-US ] = "Hanging punctuation at line end";
};
String RID_SVXITEMS_FORBIDDEN_RULE_OFF
{
    Text [ en-US ] = "Apply list of forbidden characters to beginning and end of lines";
};
String RID_SVXITEMS_FORBIDDEN_RULE_ON
{
    Text [ en-US ] = "Don't apply list of forbidden characters to beginning and end of lines";
};
String RID_SVXITEMS_CHARROTATE_OFF
{
    Text [ en-US ] = "No rotated characters";
};
String RID_SVXITEMS_CHARROTATE
{
    Text [ en-US ] = "Character rotated by $(ARG1)°";
};
String RID_SVXITEMS_CHARROTATE_FITLINE
{
    Text [ en-US ] = "Fit to line";
};
String RID_SVXITEMS_CHARSCALE
{
    Text [ en-US ] = "Characters scaled $(ARG1)%";
};
String RID_SVXITEMS_CHARSCALE_OFF
{
    Text [ en-US ] = "No scaled characters";
};
String RID_SVXITEMS_RELIEF_NONE
{
    Text [ en-US ] = "No relief";
};
String RID_SVXITEMS_RELIEF_EMBOSSED
{
    Text [ en-US ] = "Relief";
};
String RID_SVXITEMS_RELIEF_ENGRAVED
{
    Text [ en-US ] = "Engraved";
};
String RID_SVXITEMS_PARAVERTALIGN_AUTO
{
    Text [ en-US ] = "Automatic text alignment";
};
String RID_SVXITEMS_PARAVERTALIGN_BASELINE
{
    Text [ en-US ] = "Text aligned to base line";
};
String RID_SVXITEMS_PARAVERTALIGN_TOP
{
    Text [ en-US ] = "Text aligned top";
};
String RID_SVXITEMS_PARAVERTALIGN_CENTER
{
    Text [ en-US ] = "Text aligned middle";
};
String RID_SVXITEMS_PARAVERTALIGN_BOTTOM
{
    Text [ en-US ] = "Text aligned bottom";
};
String RID_SVXITEMS_FRMDIR_HORI_LEFT_TOP
{
    Text [ en-US ] = "Text direction left-to-right (horizontal)";
};
String RID_SVXITEMS_FRMDIR_HORI_RIGHT_TOP
{
    Text [ en-US ] = "Text direction right-to-left (horizontal)";
};
String RID_SVXITEMS_FRMDIR_VERT_TOP_RIGHT
{
    Text [ en-US ] = "Text direction right-to-left (vertical)";
};
String RID_SVXITEMS_FRMDIR_VERT_TOP_LEFT
{
    Text [ en-US ] = "Text direction left-to-right (vertical)";
};
String RID_SVXITEMS_FRMDIR_ENVIRONMENT
{
    Text [ en-US ] = "Use superordinate object text direction setting";
};
String RID_SVXITEMS_PARASNAPTOGRID_ON
{
    Text[ en-US ] = "Paragraph snaps to text grid (if active)";
};
String RID_SVXITEMS_PARASNAPTOGRID_OFF
{
    Text[ en-US ] = "Paragraph does not snap to text grid";
};
String RID_SVXITEMS_CHARHIDDEN_FALSE
{
    Text [ en-US ] = "Not hidden";
};
String RID_SVXITEMS_CHARHIDDEN_TRUE
{
    Text [ en-US ] = "Hidden";
};
 // enum SvxCellHorJustify ----------------------------------------------------
String RID_SVXITEMS_HORJUST_STANDARD
{
    Text [ en-US ] = "Horizontal alignment default" ;
};
String RID_SVXITEMS_HORJUST_LEFT
{
    Text [ en-US ] = "Align left" ;
};
String RID_SVXITEMS_HORJUST_CENTER
{
    Text [ en-US ] = "Centered horizontally" ;
};
String RID_SVXITEMS_HORJUST_RIGHT
{
    Text [ en-US ] = "Align right" ;
};
String RID_SVXITEMS_HORJUST_BLOCK
{
    Text [ en-US ] = "Justify" ;
};
String RID_SVXITEMS_HORJUST_REPEAT
{
    Text [ en-US ] = "Repeat alignment" ;
};
 // enum SvxCellVerJustify ----------------------------------------------------
String RID_SVXITEMS_VERJUST_STANDARD
{
    Text [ en-US ] = "Vertical alignment default" ;
};
String RID_SVXITEMS_VERJUST_TOP
{
    Text [ en-US ] = "Align to top" ;
};
String RID_SVXITEMS_VERJUST_CENTER
{
    Text [ en-US ] = "Centered vertically" ;
};
String RID_SVXITEMS_VERJUST_BOTTOM
{
    Text [ en-US ] = "Align to bottom" ;
};
 // enum SvxCellJustifyMethod ----------------------------------------------------
String RID_SVXITEMS_JUSTMETHOD_AUTO
{
    Text [ en-US ] = "Automatic" ;
};
String RID_SVXITEMS_JUSTMETHOD_DISTRIBUTE
{
    Text [ en-US ] = "Distributed" ;
};

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
