// this file was generated by: ./generatePresetsCXX.pl
// please do not edit

#include "oox/drawingml/customshapeproperties.hxx"
#include "oox/token/tokenmap.hxx"
#include <com/sun/star/awt/Rectangle.hpp>
#include <com/sun/star/awt/Size.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeAdjustmentValue.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeSegment.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeParameterPair.hpp>
#include <com/sun/star/drawing/EnhancedCustomShapeParameterType.hpp>

using namespace ::com::sun::star;
using namespace ::com::sun::star::beans;
using namespace ::com::sun::star::drawing;
using namespace ::com::sun::star::uno;

namespace oox { namespace drawingml {

namespace
{
class ShapeCleftRightArrowCallout : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = CREATE_OUSTRING ("adj3");
        }
        {
            Any aAny ((sal_Int32) 48123);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = CREATE_OUSTRING ("adj4");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "50000*logheight/?0 ",
            "if(0-$1 ,0,if(?1 -$1 ,$1 ,?1 ))",
            "?2 *2/1",
            "if(0-$0 ,0,if(?3 -$0 ,$0 ,?3 ))",
            "50000*logwidth/?0 ",
            "if(0-$2 ,0,if(?5 -$2 ,$2 ,?5 ))",
            "logwidth/2",
            "?6 *?0 /?7 ",
            "100000+0-?8 ",
            "if(0-$3 ,0,if(?9 -$3 ,$3 ,?9 ))",
            "?0 *?2 /100000",
            "?0 *?4 /200000",
            "logheight/2",
            "?13 +0-?11 ",
            "?13 +0-?12 ",
            "?13 +?12 -0",
            "?13 +?11 -0",
            "?0 *?6 /100000",
            "logwidth+0-?18 ",
            "logwidth*?10 /200000",
            "logwidth/2",
            "?21 +0-?20 ",
            "?21 +?20 -0",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 15
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 3);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    18, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 5);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 24
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 9);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 3);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    22, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    23, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 17
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,17,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::NORMAL,
                        22, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        23, 24
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-leftRightArrowCallout");

    return aPropertyMap;
  }
};
class ShapeCflowChartManualOperation : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "logwidth*4/5",
            "logwidth*9/10",
            "logwidth/2",
            "logwidth/10",
            "logheight/2",
            "logheight",
            "logwidth/5"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (4);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 5
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 5
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("SubViewSize");
            Sequence< awt::Size > aSizeSequence (1);
            {
                awt::Size aSize;
                aSize.Width = 5;
                aSize.Height = 5;
                aSizeSequence [0] = aSize;
            }
            aPropSequence [2].Value = makeAny (aSizeSequence);
        }
        {
            aPropSequence [3].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::NORMAL,
                        6, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 5
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [3].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-flowChartManualOperation");

    return aPropertyMap;
  }
};
class ShapeCsnipRoundRect : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 16667);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 16667);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "if(0-$1 ,0,if(50000-$1 ,$1 ,50000))",
            "min(logwidth,logheight)",
            "?2 *?0 /100000",
            "?2 *?1 /100000",
            "logwidth+0-?4 ",
            "?3 *29289/100000",
            "(?5 +logwidth)/2",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight",
            "(10800000)/60000.0",
            "(5400000)/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 11
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,5,
                17,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 6
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        7, 11
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-snipRoundRect");

    return aPropertyMap;
  }
};
class ShapeCmathPlus : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 23520);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(73490-$0 ,$0 ,73490))",
            "logwidth*73490/200000",
            "logheight*73490/200000",
            "min(logwidth,logheight)",
            "?3 *?0 /200000",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +0-?4 ",
            "?5 +?4 -0",
            "?5 +?1 -0",
            "logheight/2",
            "?10 +0-?2 ",
            "?10 +0-?4 ",
            "?10 +?4 -0",
            "?10 +?2 -0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 12
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 73490);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 13
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,11,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 12
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        9, 13
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-mathPlus");

    return aPropertyMap;
  }
};
class ShapeCactionButtonForwardNext : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 9
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-actionButtonForwardNext");

    return aPropertyMap;
  }
};
class ShapeCcan : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "50000*logheight/?0 ",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "?0 *?2 /200000",
            "?3 +?3 -0",
            "logheight+0-?3 ",
            "logwidth/2",
            "logheight/2",
            "logheight",
            "logwidth",
            "logwidth/2",
            "(10800000)/60000.0",
            "(-10800000)/60000.0",
            "(0)/60000.0",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(0)/60000.0",
            "(10800000)/60000.0",
            "(0)/60000.0",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(10800000)/60000.0",
            "(0)/60000.0",
            "(10800000)/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 24
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 3
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                17,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,2,
                4,0,
                20,0,
                7,0,
                5,0,
                1,1,
                17,2,
                2,1,
                17,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 4
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        9, 5
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-can");

    return aPropertyMap;
  }
};
class ShapeCfoldedCorner : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 16667);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "?2 *1/5",
            "logwidth+0-?2 ",
            "?4 +?3 -0",
            "logheight+0-?2 ",
            "?6 +?3 -0",
            "logheight",
            "logwidth/2",
            "logheight/2",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 8
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    11, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 6
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 6
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 6
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    11, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 6
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,4,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                19,0,
                7,0,
                5,0,
                1,1,
                2,7,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        11, 6
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-foldedCorner");

    return aPropertyMap;
  }
};
class ShapeCstar32 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 37500);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "logwidth/2",
            "?1 *98079/100000",
            "?1 *92388/100000",
            "?1 *83147/100000",
            "?1 *cos(pi*(2700000)/10800000)",
            "?1 *55557/100000",
            "?1 *38268/100000",
            "?1 *19509/100000",
            "logheight/2",
            "?9 *98079/100000",
            "?9 *92388/100000",
            "?9 *83147/100000",
            "?9 *sin(pi*(2700000)/10800000)",
            "?9 *55557/100000",
            "?9 *38268/100000",
            "?9 *19509/100000",
            "logwidth/2",
            "?17 +0-?2 ",
            "?17 +0-?3 ",
            "?17 +0-?4 ",
            "?17 +0-?5 ",
            "?17 +0-?6 ",
            "?17 +0-?7 ",
            "?17 +0-?8 ",
            "?17 +?8 -0",
            "?17 +?7 -0",
            "?17 +?6 -0",
            "?17 +?5 -0",
            "?17 +?4 -0",
            "?17 +?3 -0",
            "?17 +?2 -0",
            "logheight/2",
            "?32 +0-?10 ",
            "?32 +0-?11 ",
            "?32 +0-?12 ",
            "?32 +0-?13 ",
            "?32 +0-?14 ",
            "?32 +0-?15 ",
            "?32 +0-?16 ",
            "?32 +?16 -0",
            "?32 +?15 -0",
            "?32 +?14 -0",
            "?32 +?13 -0",
            "?32 +?12 -0",
            "?32 +?11 -0",
            "?32 +?10 -0",
            "?1 *?0 /50000",
            "?9 *?0 /50000",
            "?47 *99518/100000",
            "?47 *95694/100000",
            "?47 *88192/100000",
            "?47 *77301/100000",
            "?47 *63439/100000",
            "?47 *47140/100000",
            "?47 *29028/100000",
            "?47 *9802/100000",
            "?48 *99518/100000",
            "?48 *95694/100000",
            "?48 *88192/100000",
            "?48 *77301/100000",
            "?48 *63439/100000",
            "?48 *47140/100000",
            "?48 *29028/100000",
            "?48 *9802/100000",
            "?17 +0-?49 ",
            "?17 +0-?50 ",
            "?17 +0-?51 ",
            "?17 +0-?52 ",
            "?17 +0-?53 ",
            "?17 +0-?54 ",
            "?17 +0-?55 ",
            "?17 +0-?56 ",
            "?17 +?56 -0",
            "?17 +?55 -0",
            "?17 +?54 -0",
            "?17 +?53 -0",
            "?17 +?52 -0",
            "?17 +?51 -0",
            "?17 +?50 -0",
            "?17 +?49 -0",
            "?32 +0-?57 ",
            "?32 +0-?58 ",
            "?32 +0-?59 ",
            "?32 +0-?60 ",
            "?32 +0-?61 ",
            "?32 +0-?62 ",
            "?32 +0-?63 ",
            "?32 +0-?64 ",
            "?32 +?64 -0",
            "?32 +?63 -0",
            "?32 +?62 -0",
            "?32 +?61 -0",
            "?32 +?60 -0",
            "?32 +?59 -0",
            "?32 +?58 -0",
            "?32 +?57 -0",
            "?47 *cos(pi*(2700000)/10800000)",
            "?48 *sin(pi*(2700000)/10800000)",
            "?17 +0-?97 ",
            "?32 +0-?98 ",
            "?17 +?97 -0",
            "?32 +?98 -0",
            "?32 +0-?48 ",
            "min(logwidth,logheight)/2",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 103
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 104);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    65, 88
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    66, 87
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    67, 86
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    68, 85
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    69, 84
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    70, 83
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    71, 82
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 33
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    72, 81
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    17, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    73, 81
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 33
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    74, 82
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    75, 83
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 35
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    76, 84
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    77, 85
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 37
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    78, 86
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    79, 87
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 39
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    80, 88
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    106, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    80, 89
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    79, 90
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    78, 91
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    77, 92
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 43
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    76, 93
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 44
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    75, 94
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 45
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    74, 95
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 46
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    73, 96
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 105
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    72, 96
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 46
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    71, 95
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 45
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    70, 94
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 44
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    69, 93
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 43
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    68, 92
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    67, 91
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    66, 90
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    65, 89
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,63,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        99, 100
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        101, 102
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-star32");

    return aPropertyMap;
  }
};
class ShapeCflowChartInternalStorage : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "logwidth/2",
            "logheight/2",
            "logheight",
            "logwidth",
            "logwidth/8",
            "logheight/8"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (4);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 1
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("SubViewSize");
            Sequence< awt::Size > aSizeSequence (3);
            {
                awt::Size aSize;
                aSize.Width = 1;
                aSize.Height = 1;
                aSizeSequence [0] = aSize;
            }
            {
                awt::Size aSize;
                aSize.Width = 8;
                aSize.Height = 8;
                aSizeSequence [1] = aSize;
            }
            {
                awt::Size aSize;
                aSize.Width = 1;
                aSize.Height = 1;
                aSizeSequence [2] = aSize;
            }
            aPropSequence [2].Value = makeAny (aSizeSequence);
        }
        {
            aPropSequence [3].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 5
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 2
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [3].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-flowChartInternalStorage");

    return aPropertyMap;
  }
};
class ShapeCupDownArrow : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "50000*logheight/?0 ",
            "if(0-$0 ,0,if(100000-$0 ,$0 ,100000))",
            "if(0-$1 ,0,if(?1 -$1 ,$1 ,?1 ))",
            "?0 *?3 /100000",
            "logheight+0-?4 ",
            "logwidth*?2 /200000",
            "logwidth/2",
            "?7 +0-?6 ",
            "?7 +?6 -0",
            "logwidth/2",
            "?8 *?4 /?10 ",
            "?4 +0-?11 ",
            "?5 +?11 -0",
            "logheight/2",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 5
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 100000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 4
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    7, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 15
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,9,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        8, 12
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        9, 13
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-upDownArrow");

    return aPropertyMap;
  }
};
class ShapeCirregularSeal2 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "logwidth*9722/21600",
            "logwidth*5372/21600",
            "logwidth*11612/21600",
            "logwidth*14640/21600",
            "logheight*1887/21600",
            "logheight*6382/21600",
            "logheight*12877/21600",
            "logheight*19712/21600",
            "logheight*18842/21600",
            "logheight*15935/21600",
            "logheight*6645/21600",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (4);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    11462, 4342
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    14790, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    14525, 5777
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    18007, 3172
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    16380, 6532
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    21600, 6645
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    16985, 9402
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    18270, 11290
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    16380, 12310
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    18877, 15632
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    14640, 14350
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    14942, 17370
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    12180, 15935
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    11612, 18842
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    9872, 17370
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8700, 19712
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    7527, 18125
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4917, 21600
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4805, 18240
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1285, 17825
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3330, 15370
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 12877
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3935, 11592
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1172, 8270
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5372, 7817
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4502, 3625
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    8550, 6382
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    9722, 1887
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,27,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("SubViewSize");
            Sequence< awt::Size > aSizeSequence (1);
            {
                awt::Size aSize;
                aSize.Width = 21600;
                aSize.Height = 21600;
                aSizeSequence [0] = aSize;
            }
            aPropSequence [2].Value = makeAny (aSizeSequence);
        }
        {
            aPropSequence [3].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        1, 5
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [3].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-irregularSeal2");

    return aPropertyMap;
  }
};
class ShapeCmathEqual : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 23520);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 11760);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(36745-$0 ,$0 ,36745))",
            "?0 *2/1",
            "100000+0-2",
            "if(0-$1 ,0,if(?2 -$1 ,$1 ,?2 ))",
            "logheight*?0 /100000",
            "logheight*?3 /200000",
            "logwidth*73490/200000",
            "logheight/2",
            "?7 +0-?5 ",
            "?7 +?5 -0",
            "?8 +0-?4 ",
            "?9 +?4 -0",
            "logwidth/2",
            "?12 +0-?6 ",
            "?12 +?6 -0",
            "(?10 +?8 )/2",
            "(?9 +?11 )/2",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 10
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 36745);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 8
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 11
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,3,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        13, 10
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        14, 11
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-mathEqual");

    return aPropertyMap;
  }
};
class ShapeCstar12 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 37500);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "logwidth/2",
            "?1 *cos(pi*(1800000)/10800000)",
            "logheight/2",
            "?3 *sin(pi*(3600000)/10800000)",
            "logwidth/2",
            "?5 +0-?2 ",
            "logwidth*3/4",
            "?5 +?2 -0",
            "logheight/2",
            "?9 +0-?4 ",
            "logheight*3/4",
            "?9 +?4 -0",
            "?1 *?0 /50000",
            "?3 *?0 /50000",
            "?13 *cos(pi*(900000)/10800000)",
            "?13 *cos(pi*(2700000)/10800000)",
            "?13 *cos(pi*(4500000)/10800000)",
            "?14 *sin(pi*(4500000)/10800000)",
            "?14 *sin(pi*(2700000)/10800000)",
            "?14 *sin(pi*(900000)/10800000)",
            "?5 +0-?15 ",
            "?5 +0-?16 ",
            "?5 +0-?17 ",
            "?5 +?17 -0",
            "?5 +?16 -0",
            "?5 +?15 -0",
            "?9 +0-?18 ",
            "?9 +0-?19 ",
            "?9 +0-?20 ",
            "?9 +?20 -0",
            "?9 +?19 -0",
            "?9 +?18 -0",
            "?9 +0-?14 ",
            "logheight/4",
            "logwidth",
            "logheight",
            "logwidth/4"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 33
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 27
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 27
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 34
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 30
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 31
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    24, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 32
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 31
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 30
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,23,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        22, 28
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        25, 31
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-star12");

    return aPropertyMap;
  }
};
class ShapeCuturnArrow : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (5);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = CREATE_OUSTRING ("adj3");
        }
        {
            Any aAny ((sal_Int32) 43750);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = CREATE_OUSTRING ("adj4");
        }
        {
            Any aAny ((sal_Int32) 75000);
            aAdjSequence [4].Value = aAny;
            aAdjSequence [4].Name = CREATE_OUSTRING ("adj5");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$1 ,0,if(25000-$1 ,$1 ,25000))",
            "?0 *2/1",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "min(logwidth,logheight)",
            "?2 *?3 /logheight",
            "100000+0-?4 ",
            "?5 *logheight/?3 ",
            "if(0-$2 ,0,if(?6 -$2 ,$2 ,?6 ))",
            "?7 +?2 -0",
            "?8 *?3 /logheight",
            "if(?9 -$4 ,?9 ,if(100000-$4 ,$4 ,100000))",
            "?3 *?2 /100000",
            "?3 *?0 /100000",
            "?11 *1/2",
            "?12 +0-?13 ",
            "logheight*?10 /100000",
            "?3 *?7 /100000",
            "?15 +0-?16 ",
            "logwidth+0-?14 ",
            "?18 *1/2",
            "min(?19 ,?17 )",
            "?20 *100000/?3 ",
            "if(0-$3 ,0,if(?21 -$3 ,$3 ,?21 ))",
            "?3 *?22 /100000",
            "?23 +0-?11 ",
            "max(?24 ,0)",
            "?11 +?25 -0",
            "logwidth+0-?12 ",
            "?27 +0-?12 ",
            "?28 +?14 -0",
            "?18 +0-?23 ",
            "?29 +0-?25 ",
            "(?11 +?29 )/2",
            "logheight",
            "logwidth",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(-5400000)/60000.0",
            "(16200000)/60000.0",
            "(-5400000)/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (5);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 33
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 33
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 25000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 17
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 6);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    23, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 21);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 3);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    34, 15
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 100000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 9);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 4);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [4] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 33
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 36
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    30, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    34, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    27, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    28, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    39, 40
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    25, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    41, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 33
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,1,
                17,1,
                2,1,
                17,1,
                2,6,
                17,1,
                2,1,
                17,1,
                2,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        34, 33
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-uturnArrow");

    return aPropertyMap;
  }
};
class ShapeCsquareTabs : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "sqrt(logwidth*logwidth+logheight*logheight+0*0)",
            "1*?0 /20",
            "0+logheight-?1 ",
            "0+logwidth-?1 ",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 1
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 1
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,3,
                4,0,
                5,0,
                1,1,
                2,3,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        1, 1
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 2
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-squareTabs");

    return aPropertyMap;
  }
};
class ShapeCleftRightUpArrow : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (3);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = CREATE_OUSTRING ("adj3");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$1 ,0,if(50000-$1 ,$1 ,50000))",
            "?0 *2/1",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "100000+0-?1 ",
            "?3 *1/2",
            "if(0-$2 ,0,if(?4 -$2 ,$2 ,?4 ))",
            "min(logwidth,logheight)",
            "?6 *?5 /100000",
            "?6 *?0 /100000",
            "logwidth/2",
            "?9 +0-?8 ",
            "?9 +?8 -0",
            "?6 *?2 /200000",
            "?9 +0-?12 ",
            "?9 +?12 -0",
            "logwidth+0-?7 ",
            "?6 *?0 /50000",
            "logheight+0-?16 ",
            "logheight+0-?8 ",
            "?18 +0-?12 ",
            "?18 +?12 -0",
            "?12 *?7 /?8 ",
            "logwidth+0-?21 ",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (3);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 7
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    10, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 7
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 4);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    9, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    23, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 24
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,16,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        21, 19
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        22, 20
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-leftRightUpArrow");

    return aPropertyMap;
  }
};
class ShapeChomePlate : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "100000*logwidth/?0 ",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "?0 *?2 /100000",
            "logwidth+0-?3 ",
            "(?4 +logwidth)/2",
            "?4 *1/2",
            "logheight/2",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,4,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        5, 8
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-homePlate");

    return aPropertyMap;
  }
};
class ShapeCdodecagon : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "logwidth*2894/21600",
            "logwidth*7906/21600",
            "logwidth*13694/21600",
            "logwidth*18706/21600",
            "logheight*2894/21600",
            "logheight*7906/21600",
            "logheight*13694/21600",
            "logheight*18706/21600",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 5
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    8, 6
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 6
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,11,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 4
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-dodecagon");

    return aPropertyMap;
  }
};
class ShapeCleftArrowCallout : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = CREATE_OUSTRING ("adj3");
        }
        {
            Any aAny ((sal_Int32) 64977);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = CREATE_OUSTRING ("adj4");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "50000*logheight/?0 ",
            "if(0-$1 ,0,if(?1 -$1 ,$1 ,?1 ))",
            "?2 *2/1",
            "if(0-$0 ,0,if(?3 -$0 ,$0 ,?3 ))",
            "100000*logwidth/?0 ",
            "if(0-$2 ,0,if(?5 -$2 ,$2 ,?5 ))",
            "?6 *?0 /logwidth",
            "100000+0-?7 ",
            "if(0-$3 ,0,if(?8 -$3 ,$3 ,?8 ))",
            "?0 *?2 /100000",
            "?0 *?4 /200000",
            "logheight/2",
            "?12 +0-?10 ",
            "?12 +0-?11 ",
            "?12 +?11 -0",
            "?12 +?10 -0",
            "?0 *?6 /100000",
            "logwidth*?9 /100000",
            "logwidth+0-?18 ",
            "(?19 +logwidth)/2",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 14
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 3);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 13
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    17, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 5);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 21
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 8);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 3);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 12
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    19, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    22, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    22, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 16
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,10,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::NORMAL,
                        19, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        22, 21
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-leftArrowCallout");

    return aPropertyMap;
  }
};
class ShapeCchord : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 2700000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 16200000);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(21599999-$0 ,$0 ,21599999))",
            "if(0-$1 ,0,if(21599999-$1 ,$1 ,21599999))",
            "?1 +0-?0 ",
            "?2 +21600000-0",
            "if(?2 ,?2 ,?3 )",
            "logwidth/2",
            "?5 *sin(pi*(?0 )/10800000)",
            "logheight/2",
            "?7 *cos(pi*(?0 )/10800000)",
            "?5 *(cos(atan2(?6 ,?8 )))",
            "?7 *(sin(atan2(?6 ,?8 )))",
            "?5 *sin(pi*(?1 )/10800000)",
            "?7 *cos(pi*(?1 )/10800000)",
            "?5 *(cos(atan2(?11 ,?12 )))",
            "?7 *(sin(atan2(?11 ,?12 )))",
            "logwidth/2",
            "?15 +?9 -0",
            "logheight/2",
            "?17 +?10 -0",
            "?15 +?13 -0",
            "?17 +?14 -0",
            "(?16 +?19 )/2",
            "(?18 +?20 )/2",
            "?4 *1/2",
            "?0 +?23 -10800000",
            "?5 *cos(pi*(2700000)/10800000)",
            "?7 *sin(pi*(2700000)/10800000)",
            "?15 +0-?25 ",
            "?15 +?25 -0",
            "?17 +0-?26 ",
            "?17 +?26 -0",
            "(?0 )/60000.0",
            "(?4 )/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 20
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    31, 32
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        27, 29
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        28, 30
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-chord");

    return aPropertyMap;
  }
};
class ShapeCquadArrowCallout : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 18515);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 18515);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        {
            Any aAny ((sal_Int32) 18515);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = CREATE_OUSTRING ("adj3");
        }
        {
            Any aAny ((sal_Int32) 48123);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = CREATE_OUSTRING ("adj4");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$1 ,0,if(50000-$1 ,$1 ,50000))",
            "?0 *2/1",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "50000+0-?0 ",
            "if(0-$2 ,0,if(?3 -$2 ,$2 ,?3 ))",
            "?4 *2/1",
            "100000+0-?5 ",
            "if(?2 -$3 ,?2 ,if(?6 -$3 ,$3 ,?6 ))",
            "min(logwidth,logheight)",
            "?8 *?0 /100000",
            "?8 *?2 /200000",
            "?8 *?4 /100000",
            "logwidth*?7 /200000",
            "logheight*?7 /200000",
            "logwidth+0-?11 ",
            "logwidth/2",
            "?15 +0-?12 ",
            "?15 +?12 -0",
            "?15 +0-?9 ",
            "?15 +?9 -0",
            "?15 +0-?10 ",
            "?15 +?10 -0",
            "logheight+0-?11 ",
            "logheight/2",
            "?23 +0-?13 ",
            "?23 +?13 -0",
            "?23 +0-?9 ",
            "?23 +?9 -0",
            "?23 +0-?10 ",
            "?23 +?10 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (4);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 11
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    18, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 1);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 11
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 3);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 2);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [2] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 24
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 6);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 3);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [3] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    15, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 28
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 26
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    30, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 27
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    21, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 31
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 25
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 29
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 27
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,31,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        16, 24
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        17, 25
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-quadArrowCallout");

    return aPropertyMap;
  }
};
class ShapeCactionButtonBeginning : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *1/8",
            "?8 *1/4",
            "?6 +?9 -0",
            "?6 +?10 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        13, 14
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-actionButtonBeginning");

    return aPropertyMap;
  }
};
class ShapeCellipse : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "logwidth/2",
            "?0 *cos(pi*(2700000)/10800000)",
            "logheight/2",
            "?2 *sin(pi*(2700000)/10800000)",
            "logwidth/2",
            "?4 +0-?1 ",
            "?4 +?1 -0",
            "logheight/2",
            "?7 +0-?3 ",
            "?7 +?3 -0",
            "logheight",
            "logwidth",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 19
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,4,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        5, 8
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 9
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-ellipse");

    return aPropertyMap;
  }
};
class ShapeCactionButtonEnd : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "?0 *3/8",
            "logheight/2",
            "?2 +0-?1 ",
            "?2 +?1 -0",
            "logwidth/2",
            "?5 +0-?1 ",
            "?5 +?1 -0",
            "?0 *3/4",
            "?8 *3/4",
            "?8 *7/8",
            "?6 +?9 -0",
            "?6 +?10 -0",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 3
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    7, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    13, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 14
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 14
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,2,
                4,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        13, 14
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-actionButtonEnd");

    return aPropertyMap;
  }
};
class ShapeCarc : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 16200000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) 0);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(21599999-$0 ,$0 ,21599999))",
            "if(0-$1 ,0,if(21599999-$1 ,$1 ,21599999))",
            "?1 +0-?0 ",
            "?2 +21600000-0",
            "if(?2 ,?2 ,?3 )",
            "logwidth/2",
            "?5 *sin(pi*(?0 )/10800000)",
            "logheight/2",
            "?7 *cos(pi*(?0 )/10800000)",
            "?5 *(cos(atan2(?6 ,?8 )))",
            "?7 *(sin(atan2(?6 ,?8 )))",
            "?5 *sin(pi*(?1 )/10800000)",
            "?7 *cos(pi*(?1 )/10800000)",
            "?5 *(cos(atan2(?11 ,?12 )))",
            "?7 *(sin(atan2(?11 ,?12 )))",
            "logwidth/2",
            "?15 +?9 -0",
            "logheight/2",
            "?17 +?10 -0",
            "?15 +?13 -0",
            "?17 +?14 -0",
            "21600000+0-?0 ",
            "?4 +0-?21 ",
            "max(?16 ,?19 )",
            "if(?22 ,logwidth,?23 )",
            "5400000+0-?0 ",
            "27000000+0-?0 ",
            "if(?25 ,?25 ,?26 )",
            "?4 +0-?27 ",
            "max(?18 ,?20 )",
            "if(?28 ,logheight,?29 )",
            "10800000+0-?0 ",
            "32400000+0-?0 ",
            "if(?31 ,?31 ,?32 )",
            "?4 +0-?33 ",
            "min(?16 ,?19 )",
            "if(?34 ,0,?35 )",
            "16200000+0-?0 ",
            "37800000+0-?0 ",
            "if(?37 ,?37 ,?38 )",
            "?4 +0-?39 ",
            "min(?18 ,?20 )",
            "if(?40 ,0,?41 )",
            "?0 +0-5400000",
            "?1 +5400000-0",
            "(?43 +?44 )/2",
            "(?0 )/60000.0",
            "(?4 )/60000.0",
            "(?0 )/60000.0",
            "(?4 )/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (1);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 20
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    46, 47
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    48, 49
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                4,0,
                7,0,
                5,0,
                1,1,
                17,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        36, 42
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        24, 30
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-arc");

    return aPropertyMap;
  }
};
class ShapeCstar16 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 37500);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "logwidth/2",
            "?1 *92388/100000",
            "?1 *70711/100000",
            "?1 *38268/100000",
            "logheight/2",
            "?5 *92388/100000",
            "?5 *70711/100000",
            "?5 *38268/100000",
            "logwidth/2",
            "?9 +0-?2 ",
            "?9 +0-?3 ",
            "?9 +0-?4 ",
            "?9 +?4 -0",
            "?9 +?3 -0",
            "?9 +?2 -0",
            "logheight/2",
            "?16 +0-?6 ",
            "?16 +0-?7 ",
            "?16 +0-?8 ",
            "?16 +?8 -0",
            "?16 +?7 -0",
            "?16 +?6 -0",
            "?1 *?0 /50000",
            "?5 *?0 /50000",
            "?23 *98079/100000",
            "?23 *83147/100000",
            "?23 *55557/100000",
            "?23 *19509/100000",
            "?24 *98079/100000",
            "?24 *83147/100000",
            "?24 *55557/100000",
            "?24 *19509/100000",
            "?9 +0-?25 ",
            "?9 +0-?26 ",
            "?9 +0-?27 ",
            "?9 +0-?28 ",
            "?9 +?28 -0",
            "?9 +?27 -0",
            "?9 +?26 -0",
            "?9 +?25 -0",
            "?16 +0-?29 ",
            "?16 +0-?30 ",
            "?16 +0-?31 ",
            "?16 +0-?32 ",
            "?16 +?32 -0",
            "?16 +?31 -0",
            "?16 +?30 -0",
            "?16 +?29 -0",
            "?23 *cos(pi*(2700000)/10800000)",
            "?24 *sin(pi*(2700000)/10800000)",
            "?9 +0-?49 ",
            "?16 +0-?50 ",
            "?9 +?49 -0",
            "?16 +?50 -0",
            "?16 +0-?24 ",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 55
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 44
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    34, 43
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    36, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    9, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    38, 42
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 18
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    39, 43
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    40, 44
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    56, 16
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    40, 45
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    39, 46
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    38, 47
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    13, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 48
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 57
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    36, 48
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    35, 47
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    34, 46
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    33, 45
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,31,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        51, 52
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        53, 54
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-star16");

    return aPropertyMap;
  }
};
class ShapeCparallelogram : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 25000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)",
            "100000*logwidth/?0 ",
            "if(0-$0 ,0,if(?1 -$0 ,$0 ,?1 ))",
            "?0 *?2 /200000",
            "?0 *?2 /100000",
            "logwidth+0-?3 ",
            "logwidth+0-?4 ",
            "?6 *1/2",
            "logwidth+0-?7 ",
            "logwidth/2",
            "?9 *?2 /?1 ",
            "5*?2 /?1 ",
            "(1+?11 )/12",
            "?12 *logwidth/1",
            "?12 *logheight/1",
            "logwidth+0-?13 ",
            "logheight+0-?14 ",
            "logwidth/2",
            "logheight*?17 /?4 ",
            "if(0-?18 ,0,if(logheight-?18 ,?18 ,logheight))",
            "logheight+0-?19 ",
            "logheight/2",
            "logheight",
            "logwidth"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 1);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::EQUATION;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    23, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 22
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        13, 14
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        15, 16
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-parallelogram");

    return aPropertyMap;
  }
};
class ShapeCbevel : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 12500);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "logwidth+0-?2 ",
            "logheight+0-?2 ",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    5, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 4
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                21,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                19,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                20,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                18,0,
                7,0,
                5,0,
                1,1,
                2,3,
                4,0,
                1,1,
                2,3,
                4,0,
                1,1,
                2,1,
                1,1,
                2,1,
                1,1,
                2,1,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        2, 2
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 4
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-bevel");

    return aPropertyMap;
  }
};
class ShapeCroundRect : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 16667);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "logwidth+0-?2 ",
            "logheight+0-?2 ",
            "?2 *29289/100000",
            "logwidth+0-?5 ",
            "logheight+0-?5 ",
            "logwidth/2",
            "logheight/2",
            "logheight",
            "logwidth",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    11, 4
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 17
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    2, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 19
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        5, 5
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-roundRect");

    return aPropertyMap;
  }
};
class ShapeCaccentCallout1 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (4);
        {
            Any aAny ((sal_Int32) 18750);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj1");
        }
        {
            Any aAny ((sal_Int32) -8333);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("adj2");
        }
        {
            Any aAny ((sal_Int32) 112500);
            aAdjSequence [2].Value = aAny;
            aAdjSequence [2].Name = CREATE_OUSTRING ("adj3");
        }
        {
            Any aAny ((sal_Int32) -38333);
            aAdjSequence [3].Value = aAny;
            aAdjSequence [3].Name = CREATE_OUSTRING ("adj4");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "logheight*$0 /100000",
            "logwidth*$1 /100000",
            "logheight*$2 /100000",
            "logwidth*$3 /100000",
            "logwidth",
            "logheight/2",
            "logwidth/2",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (2);
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 1);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        {
            Sequence< PropertyValue > aPropSequence (7);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [3].Value = makeAny (aParameter);
            }
            {
                aPropSequence [4].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) -2147483647);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [4].Value = makeAny (aParameter);
            }
            {
                aPropSequence [5].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 3);
                aPropSequence [5].Value = makeAny (aAny);
            }
            {
                aPropSequence [6].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 2);
                aPropSequence [6].Value = makeAny (aAny);
            }
            aPropSequenceSequence [1] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 7
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 2
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::NORMAL,
                        EnhancedCustomShapeParameterType::NORMAL,
                        0, 0
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 7
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-accentCallout1");

    return aPropertyMap;
  }
};
class ShapeCflowChartSort : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "logwidth*3/4",
            "logheight*3/4",
            "logwidth/2",
            "logheight/2",
            "logheight",
            "logwidth",
            "logwidth/4",
            "logheight/4"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (4);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 2
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    0, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    2, 1
                },
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 2
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,3,
                4,0,
                7,0,
                5,0,
                1,1,
                2,1,
                6,0,
                5,0,
                1,1,
                2,3,
                4,0,
                6,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("SubViewSize");
            Sequence< awt::Size > aSizeSequence (3);
            {
                awt::Size aSize;
                aSize.Width = 2;
                aSize.Height = 2;
                aSizeSequence [0] = aSize;
            }
            {
                awt::Size aSize;
                aSize.Width = 2;
                aSize.Height = 2;
                aSizeSequence [1] = aSize;
            }
            {
                awt::Size aSize;
                aSize.Width = 2;
                aSize.Height = 2;
                aSizeSequence [2] = aSize;
            }
            aPropSequence [2].Value = makeAny (aSizeSequence);
        }
        {
            aPropSequence [3].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        6, 7
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        0, 1
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [3].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-flowChartSort");

    return aPropertyMap;
  }
};
class ShapeCstar8 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 37500);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "logwidth/2",
            "?1 *cos(pi*(2700000)/10800000)",
            "logwidth/2",
            "?3 +0-?2 ",
            "?3 +?2 -0",
            "logheight/2",
            "?6 *sin(pi*(2700000)/10800000)",
            "logheight/2",
            "?8 +0-?7 ",
            "?8 +?7 -0",
            "?1 *?0 /50000",
            "?6 *?0 /50000",
            "?11 *92388/100000",
            "?11 *38268/100000",
            "?12 *92388/100000",
            "?12 *38268/100000",
            "?3 +0-?13 ",
            "?3 +0-?14 ",
            "?3 +?14 -0",
            "?3 +?13 -0",
            "?8 +0-?15 ",
            "?8 +0-?16 ",
            "?8 +?16 -0",
            "?8 +?15 -0",
            "?8 +0-?12 ",
            "logwidth",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 25
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    3, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 21
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    26, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    20, 23
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    19, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 27
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    18, 24
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 10
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 23
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,15,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        17, 21
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        20, 24
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-star8");

    return aPropertyMap;
  }
};
class ShapeCflowChartAlternateProcess : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        aPropertyMap [PROP_AdjustmentValues] <<= Sequence< OUString >(0);
    }
    {
        static const char *aStrings[] = {
            "min(logwidth,logheight)/6",
            "logwidth+0-?0 ",
            "logheight+0-?0 ",
            "?0 *29289/100000",
            "logwidth+0-?3 ",
            "logheight+0-?3 ",
            "logwidth/2",
            "logheight/2",
            "logheight",
            "logwidth",
            "(10800000)/60000.0",
            "(5400000)/60000.0",
            "(16200000)/60000.0",
            "(5400000)/60000.0",
            "(0)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0",
            "(5400000)/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        aPropertyMap [PROP_Handles] <<= Sequence< OUString >(0);
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::NORMAL,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    10, 11
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    1, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    12, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    9, 2
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 15
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    0, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 17
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,1,
                2,1,
                17,1,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 3
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        4, 5
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-flowChartAlternateProcess");

    return aPropertyMap;
  }
};
class ShapeCmoon : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (1);
        {
            Any aAny ((sal_Int32) 50000);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(87500-$0 ,$0 ,87500))",
            "min(logwidth,logheight)",
            "?1 *?0 /100000",
            "?2 *logwidth/?1 ",
            "?1 +0-?2 ",
            "?2 *?2 /?4 ",
            "?1 *?1 /?4 ",
            "?6 *2/1",
            "?7 +0-?5 ",
            "?8 +0-?2 ",
            "?9 *logwidth/?1 ",
            "?8 *1/2",
            "?11 +0-?2 ",
            "logheight/2",
            "?12 *?13 /?1 ",
            "logheight/2",
            "?15 +0-?14 ",
            "?15 +?14 -0",
            "?2 *9598/32768",
            "?18 *logwidth/?1 ",
            "?1 +0-?18 ",
            "?1 *?1 /1",
            "?20 *?20 /1",
            "?21 +0-?22 ",
            "sqrt(?23 )",
            "?24 *?13 /?1 ",
            "?15 +0-?25 ",
            "?15 +?25 -0",
            "?10 +0-?3 ",
            "?28 *1/2",
            "?3 +?29 -logwidth",
            "?30 *-1/1",
            "?13 *-1/1",
            "(10800000*atan2(?32 ,?31 ))/pi",
            "(10800000*atan2(?13 ,?31 ))/pi",
            "?34 +0-21600000",
            "?35 +0-?33 ",
            "logwidth",
            "logheight",
            "logwidth",
            "(5400000)/60000.0",
            "(10800000)/60000.0",
            "(?33 )/60000.0",
            "(?36 )/60000.0"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    3, 15
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeXMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 87500);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeXMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefX");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    37, 38
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    39, 13
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    40, 41
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    29, 14
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    42, 43
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                17,2,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        19, 26
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        3, 27
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-moon");

    return aPropertyMap;
  }
};
class ShapeCstar6 : public CustomShapeProvider
{
  virtual PropertyMap getProperties()
  {
    PropertyMap aPropertyMap;

    {
        Sequence< EnhancedCustomShapeAdjustmentValue > aAdjSequence (2);
        {
            Any aAny ((sal_Int32) 28868);
            aAdjSequence [0].Value = aAny;
            aAdjSequence [0].Name = CREATE_OUSTRING ("adj");
        }
        {
            Any aAny ((sal_Int32) 115470);
            aAdjSequence [1].Value = aAny;
            aAdjSequence [1].Name = CREATE_OUSTRING ("hf");
        }
        aPropertyMap [PROP_AdjustmentValues] <<= aAdjSequence;
    }
    {
        static const char *aStrings[] = {
            "if(0-$0 ,0,if(50000-$0 ,$0 ,50000))",
            "logwidth/2",
            "?1 *$1 /100000",
            "?2 *cos(pi*(1800000)/10800000)",
            "logwidth/2",
            "?4 +0-?3 ",
            "?4 +?3 -0",
            "logheight/2",
            "logheight/4",
            "?7 +?8 -0",
            "?2 *?0 /50000",
            "logheight/2",
            "?11 *?0 /50000",
            "?10 *1/2",
            "?4 +0-?10 ",
            "?4 +0-?13 ",
            "?4 +?13 -0",
            "?4 +?10 -0",
            "?12 *sin(pi*(3600000)/10800000)",
            "?7 +0-?18 ",
            "?7 +?18 -0",
            "?7 +0-?12 ",
            "logheight"
        };
        aPropertyMap [PROP_Equations] <<= createStringSequence( SAL_N_ELEMENTS( aStrings ), aStrings );
    }
    {
        Sequence< Sequence < PropertyValue > > aPropSequenceSequence (1);
        {
            Sequence< PropertyValue > aPropSequence (4);
            {
                aPropSequence [0].Name = CREATE_OUSTRING ("Position");
                static const CustomShapeProvider::ParameterPairData aData =
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 21
                };
                aPropSequence [0].Value = makeAny (createParameterPair(&aData));
            }
            {
                aPropSequence [1].Name = CREATE_OUSTRING ("RangeYMaximum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 50000);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [1].Value = makeAny (aParameter);
            }
            {
                aPropSequence [2].Name = CREATE_OUSTRING ("RangeYMinimum");
                EnhancedCustomShapeParameter aParameter;
                Any aAny ((sal_Int32) 0);
                aParameter.Value = aAny;
                aParameter.Type = EnhancedCustomShapeParameterType::NORMAL;
                aPropSequence [2].Value = makeAny (aParameter);
            }
            {
                aPropSequence [3].Name = CREATE_OUSTRING ("RefY");
                Any aAny ((sal_Int32) 0);
                aPropSequence [3].Value = makeAny (aAny);
            }
            aPropSequenceSequence [0] = aPropSequence;
        }
        aPropertyMap [PROP_Handles] <<= aPropSequenceSequence;
    }
    {
        aPropertyMap [PROP_MirroredX] <<= Any ((sal_Bool) sal_False);
    }
    {
        aPropertyMap [PROP_MirroredY] <<= Any ((sal_Bool) sal_False);
    }
    {
        Sequence< PropertyValue > aPropSequence (3);
        {
            aPropSequence [0].Name = CREATE_OUSTRING ("Coordinates");
            static const CustomShapeProvider::ParameterPairData aData[] = {
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::NORMAL,
                    4, 0
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 19
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 8
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    17, 7
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    6, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    16, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    4, 22
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    15, 20
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    5, 9
                },
                {
                    EnhancedCustomShapeParameterType::EQUATION,
                    EnhancedCustomShapeParameterType::EQUATION,
                    14, 7
                }
            };
            aPropSequence [0].Value = makeAny (createParameterPairSequence(SAL_N_ELEMENTS(aData), aData));
        }
        {
            aPropSequence [1].Name = CREATE_OUSTRING ("Segments");
            static const sal_uInt16 nValues[] = {
            // Command, Count
                1,1,
                2,11,
                4,0,
                5,0
            };
            aPropSequence [1].Value = makeAny (createSegmentSequence( SAL_N_ELEMENTS( nValues ), nValues ));
        }
        {
            aPropSequence [2].Name = CREATE_OUSTRING ("TextFrames");
            Sequence< EnhancedCustomShapeTextFrame > aTextFrameSeq (1);
            {
                EnhancedCustomShapeTextFrame aTextFrame;
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        14, 19
                    };
                    aTextFrame.TopLeft = createParameterPair(&aData);
                }
                {
                    static const CustomShapeProvider::ParameterPairData aData =
                    {
                        EnhancedCustomShapeParameterType::EQUATION,
                        EnhancedCustomShapeParameterType::EQUATION,
                        17, 20
                    };
                    aTextFrame.BottomRight = createParameterPair(&aData);
                }
                aTextFrameSeq [0] = aTextFrame;
            }
            aPropSequence [2].Value = makeAny (aTextFrameSeq);
        }
        aPropertyMap [PROP_Path] <<= aPropSequence;
    }
    {
        awt::Rectangle aRectangle;
        aRectangle.X = 0;
        aRectangle.Y = 0;
        aRectangle.Width = 0;
        aRectangle.Height = 0;
        aPropertyMap [PROP_ViewBox] <<= aRectangle;
    }
    aPropertyMap [ PROP_Type ] <<= CREATE_OUSTRING("ooxml-star6");

    return aPropertyMap;
  }
};
} // anonymous namespace
void CustomShapeProperties::initializePresetsMap2()
{
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "leftRightArrowCallout" ) ] = new ShapeCleftRightArrowCallout();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "flowChartManualOperation" ) ] = new ShapeCflowChartManualOperation();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "snipRoundRect" ) ] = new ShapeCsnipRoundRect();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "mathPlus" ) ] = new ShapeCmathPlus();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonForwardNext" ) ] = new ShapeCactionButtonForwardNext();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "can" ) ] = new ShapeCcan();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "foldedCorner" ) ] = new ShapeCfoldedCorner();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "star32" ) ] = new ShapeCstar32();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "flowChartInternalStorage" ) ] = new ShapeCflowChartInternalStorage();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "upDownArrow" ) ] = new ShapeCupDownArrow();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "irregularSeal2" ) ] = new ShapeCirregularSeal2();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "mathEqual" ) ] = new ShapeCmathEqual();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "star12" ) ] = new ShapeCstar12();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "uturnArrow" ) ] = new ShapeCuturnArrow();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "squareTabs" ) ] = new ShapeCsquareTabs();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "leftRightUpArrow" ) ] = new ShapeCleftRightUpArrow();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "homePlate" ) ] = new ShapeChomePlate();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "dodecagon" ) ] = new ShapeCdodecagon();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "leftArrowCallout" ) ] = new ShapeCleftArrowCallout();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "chord" ) ] = new ShapeCchord();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "quadArrowCallout" ) ] = new ShapeCquadArrowCallout();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonBeginning" ) ] = new ShapeCactionButtonBeginning();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "ellipse" ) ] = new ShapeCellipse();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "actionButtonEnd" ) ] = new ShapeCactionButtonEnd();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "arc" ) ] = new ShapeCarc();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "star16" ) ] = new ShapeCstar16();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "parallelogram" ) ] = new ShapeCparallelogram();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "bevel" ) ] = new ShapeCbevel();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "roundRect" ) ] = new ShapeCroundRect();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "accentCallout1" ) ] = new ShapeCaccentCallout1();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "flowChartSort" ) ] = new ShapeCflowChartSort();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "star8" ) ] = new ShapeCstar8();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "flowChartAlternateProcess" ) ] = new ShapeCflowChartAlternateProcess();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "moon" ) ] = new ShapeCmoon();
    maPresetsMap [ StaticTokenMap::get().getTokenFromUnicode( "star6" ) ] = new ShapeCstar6();
}

} } // oox // drawingml

