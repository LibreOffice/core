{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1c7c3f46_a2dc0ba9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-23T09:12:52Z",
      "side": 1,
      "message": "Any comments on the API syntax?\n\nNot sure if there is a better way than using the document service as an identifier.",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17ed0115_d10c3a04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-03-23T09:17:16Z",
      "side": 1,
      "message": "yeah, using the service name in the API is not great. I would just use a string parameter, which can be one of a small list of predefined names, and then map that name to a service name internally. That way, we can at least change service names later without breaking extensions.",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3760a7a_2ab24879",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-03-23T09:18:14Z",
      "side": 1,
      "message": "I suppose it depends on your task; for the sake of e.g. tdf#76131, what you implement is adequate, but I don\u0027t know what your customer wants to do with the API. Still, I don\u0027t think there\u0027s some better way, since you are bound to the registered app ids anyway, and they match document service (or maybe loaded component?) nicely.\n\nOtherwise, I suppose sberg is the expert who can review API syntax ðŸ˜Š",
      "parentUuid": "1c7c3f46_a2dc0ba9",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "561ad457_3201c903",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-03-23T09:19:21Z",
      "side": 1,
      "message": "Hmm, changing service names would be breaking API? It\u0027s not implementation names IIUC.",
      "parentUuid": "17ed0115_d10c3a04",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e548500a_ac818bf3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-23T09:32:33Z",
      "side": 1,
      "message": "Yep, and those service names like com.sun.star.text.TextDocument  are used all over the place, they should not change...",
      "parentUuid": "561ad457_3201c903",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bb037c2_071b3396",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "can you add some actual use of the newly introduced functionality? (some test or maybe even odk/examples/ code?)",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "badca558_0b8ac8a7",
        "filename": "offapi/UnoApi_offapi.mk",
        "patchSetId": 12
      },
      "lineNbr": 3646,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "better keep this list sorted lexicographically",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d827164_63e2c461",
        "filename": "offapi/com/sun/star/system/windows/JumpList.idl",
        "patchSetId": 12
      },
      "lineNbr": 21,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "please add a @since tag",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ca23e4c_8379e9ef",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 28,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "what are these names good for? do they have to be unique (per category, per service)?",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a9dc3d5_4a85a946",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 31,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "should this be localizable in any way?",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6c2d098_66691572",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 33,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "it looks a bit odd to have this description start non-capitalized, unlike the other elements\u0027 descriptions here",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 33,
        "endChar": 17
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17239fc9_70b7acb0",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "it looks odd to have plural \"arguments\" represented as a single string; what\u0027s the expected syntax, what \"application\" are these passed to?",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf60904f_4b6dc8fe",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "what\u0027s the semantics of this string, a URI, a local pathname (does it have to be absolute)?",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9c42d70_fff7779d",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-03-23T10:25:52Z",
      "side": 1,
      "message": "Also it\u0027s good to mention which icon formats are expected to work I think - if it were some 20 years ago, I\u0027d bet only .ICO would work ;)",
      "parentUuid": "cf60904f_4b6dc8fe",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5b378b6_ec87d67e",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 12
      },
      "lineNbr": 44,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "please add a newline at end of file",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ee25f2b_fdf8ad5d",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 12
      },
      "lineNbr": 35,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "this looks odd; why not just e.g. filter out of jumpListItems any items that have previously been removed (in which case: would the getRemovedItems method still be necessary then?)",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 35,
        "endChar": 75
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcace964_701a67c7",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 12
      },
      "lineNbr": 41,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "I think I\u0027d rather use the \"Writer\", \"Calc\" etc. names here directly to which this service name gets mapped in the implementation",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4aea95f_32277a7c",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 12
      },
      "lineNbr": 53,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "how? appendCategory doesn\u0027t mention any corresponding @throws",
      "range": {
        "startLine": 53,
        "startChar": 25,
        "endLine": 53,
        "endChar": 34
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c66a0f9b_8588e8a5",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "please add a newline at end of file",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a056d18_68567a5f",
        "filename": "shell/Library_jumplist.mk",
        "patchSetId": 12
      },
      "lineNbr": 1,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "please use the latest headers/footers from TEMPLATE.SOURCECODE.HEADER",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33844622_a3a7311d",
        "filename": "shell/Library_jumplist.mk",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "better keep this list sorted lexicographically",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72963a7d_e02d8dcc",
        "filename": "shell/Library_jumplist.mk",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-03-23T10:25:52Z",
      "side": 1,
      "message": "And this list, too, for consistency ;)",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0990dfed_2615f09f",
        "filename": "shell/source/win32/jumplist/JumpList.cxx",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "better include sal/config.h prior to including any standard headers",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb3859da_06170b6d",
        "filename": "shell/source/win32/jumplist/JumpList.cxx",
        "patchSetId": 12
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "nitpick: the order of this include block looks needlessly chaotic",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c52866fb_d00b3443",
        "filename": "shell/source/win32/jumplist/JumpList.cxx",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "here and elsewhere: what about embedded NUL characters in such strings? should they cause exceptions, or be documented as forbidden in the UNO API?",
      "range": {
        "startLine": 96,
        "startChar": 45,
        "endLine": 96,
        "endChar": 68
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac9daa3c_12c058d7",
        "filename": "shell/source/win32/jumplist/JumpList.cxx",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-03-23T10:20:45Z",
      "side": 1,
      "message": "sApplicationID is a Windows API-specific thing, constructed here in lcl_getAppId to match things defined in scp2/ (grep for \"TheDocumentFoundation.LibreOffice\"). So I suppose it\u0027s not some UNO API thing here.",
      "parentUuid": "c52866fb_d00b3443",
      "range": {
        "startLine": 96,
        "startChar": 45,
        "endLine": 96,
        "endChar": 68
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3e9e758_34338360",
        "filename": "shell/source/win32/jumplist/JumpList.cxx",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:27:56Z",
      "side": 1,
      "message": "what I mean is: embedded NULs get lost due to .getStr(), so that should either be acknowledged/handled here in some way or ruled out by adding a precondition to the relevant UNO API stating that these UNO strings must not include embedded NULs",
      "parentUuid": "ac9daa3c_12c058d7",
      "range": {
        "startLine": 96,
        "startChar": 45,
        "endLine": 96,
        "endChar": 68
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b71c4038_0f4c5db5",
        "filename": "shell/source/win32/jumplist/JumpList.hxx",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "nitpick: this include file isn\u0027t really needed, could be folded into the .cxx",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d646f1f1_14b1695e",
        "filename": "shell/source/win32/jumplist/jumplist.component",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "is this the appropriate header here?",
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "122c3655_f04365ac",
        "filename": "shell/source/win32/jumplist/jumplist.component",
        "patchSetId": 12
      },
      "lineNbr": 22,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-23T10:13:23Z",
      "side": 1,
      "message": "it looks a bit odd to have a capitalized \"Windows\" here",
      "range": {
        "startLine": 22,
        "startChar": 44,
        "endLine": 22,
        "endChar": 51
      },
      "revId": "4c3c94cdf605683ba61c27c514ad9deab464047a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}