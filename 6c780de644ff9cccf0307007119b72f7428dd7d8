{
  "comments": [
    {
      "key": {
        "uuid": "ba2be162_25d189fc",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 545,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-03-06T12:03:36Z",
      "side": 1,
      "message": "The string obtained is only used in the CELLTYPE_STRING case so it\u0027s unnecessary to obtain it for all other cases. But, see below...",
      "range": {
        "startLine": 544,
        "startChar": 0,
        "endLine": 545,
        "endChar": 85
      },
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_65db811c",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 573,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-03-06T12:03:36Z",
      "side": 1,
      "message": "This manually obtaining cell type and entire switch cases is unnecessary. Instead, use ScDocument::GetRefCellValue() and then use the ScCellValue ctor that takes a ScRefCellValue\u0026, which does all the necessary copying.",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_03355d45",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 573,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2018-03-07T11:24:01Z",
      "side": 1,
      "message": "I poked with ScDocument::GetRefCellValue(), but I had missed that it is possible to create a ScCellValue from it, so I didn\u0027t find GetRefCellValue very useful. Thanks, for pointing this solution out :-)",
      "parentUuid": "ba2be162_65db811c",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_253fc926",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 576,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-03-06T12:03:36Z",
      "side": 1,
      "message": "I don\u0027t think that temporarily modifying the document content is a good idea. Why would this be necessary?",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_4523dd05",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 576,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-03-06T12:13:05Z",
      "side": 1,
      "message": "Looking up when this IsDataValid() can get called, this is absolutely not a good idea. This function MUST NOT modify the document content.",
      "parentUuid": "ba2be162_253fc926",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_030c7d93",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 576,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2018-03-07T11:24:01Z",
      "side": 1,
      "message": "I\u0027d prefer to evaluate the formula on the entered input, but not sure how much complicated is that. Which side effects are you concerned about for current implementation ?",
      "parentUuid": "ba2be162_4523dd05",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_233a6137",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 576,
      "author": {
        "id": 1000119
      },
      "writtenOn": "2018-03-07T11:24:01Z",
      "side": 1,
      "message": "Well, validations which involve a formula are performed on the current cell content not on the one that is going to be entered: see ScConditionEntry::Interpret which is immediately invoked by ScConditionEntry::IsCellValid. So I thought to use this easy workaround.",
      "parentUuid": "ba2be162_253fc926",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2be162_19a4ec55",
        "filename": "sc/source/core/data/validat.cxx",
        "patchSetId": 6
      },
      "lineNbr": 576,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2018-03-08T14:58:06Z",
      "side": 1,
      "message": "AFAICS for IsCellValid() the cell doesn\u0027t have to be committed to the document, or what am I overlooking? I find the old comment \"TODO: the value must be in the document\" a bit confusing as it doesn\u0027t state why that would be necessary.\n\nThe problem with modifying the document content here is that IsDataValid() may be called anytime, even during interpreting some formula cell if forced recalculation is set for it. Also ScDetectiveFunc calls it to mark some cell. Committing a cell will destroy the existing cell at the position, which could not only kill the current formula code being interpreted, but also has various side effects such as shared formula ranges being torn apart and possibly rejoined, changes broadcasted, listeners notified, actions performed ...\n\nIn short, that is a big no-no.",
      "parentUuid": "ba2be162_233a6137",
      "revId": "6c780de644ff9cccf0307007119b72f7428dd7d8",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}