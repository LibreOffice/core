(anonymous namespace)::flagToString(unsigned short)
BigInt::BigInt(unsigned int)
CalcUnoApiTest::CalcUnoApiTest(rtl::OUString const&)
GDriveDocument::GDriveDocument(GDriveSession*)
GDriveFolder::GDriveFolder(GDriveSession*)
GDriveProperty::GDriveProperty()
GDriveSession::GDriveSession()
Json::Json(std::__debug::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, Json, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Json> > > const&)
Json::Json(std::__debug::map<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, boost::shared_ptr<libcmis::Property>, std::less<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char> > const, boost::shared_ptr<libcmis::Property> > > > const&)
Json::swap(Json&)
MetaAction::TypeName(unsigned short)
OpenGLContext::renderToFile()
OpenGLRender::CreateTextTexture(rtl::OUString const&, Font, long, com::sun::star::awt::Point, com::sun::star::awt::Size, long)
OutputDevice::GetCanvas() const
OutputDevice::HasAlpha()
OutputDevice::LogicHeightToDeviceCoordinate(long) const
OutputDevice::LogicToLogic(basegfx::B2DPolyPolygon const&, MapMode const&, MapMode const&)
OutputDevice::LogicToPixel(Region const&, MapMode const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolygon const&) const
OutputDevice::LogicToPixel(basegfx::B2DPolygon const&, MapMode const&) const
OutputDevice::PixelToLogic(Region const&, MapMode const&) const
SalGraphics::drawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*)
ScDBFuncUndo::SetDrawUndoAction(SdrUndoAction*)
ScDocument::AreaBroadcastInRange(ScRange const&, ScHint const&)
ScDocument::CreateFormatTable() const
ScFormulaCellGroup::scheduleCompilation()
ScRawToken::Clone() const
ScRawToken::Delete()
ScTabView::DrawMarkRect(Rectangle const&)
ScTable::AttachFormulaCells(sc::StartListeningContext&, short, int, short, int)
ScTable::DetachFormulaCells(sc::EndListeningContext&, short, int, short, int)
ScVbaFormat<ooo::vba::excel::XStyle>::getAddIndent()
ScVbaFormat<ooo::vba::excel::XStyle>::setAddIndent(com::sun::star::uno::Any const&)
SfxAppMenuControl_Impl::RegisterControl(unsigned short, SfxModule*)
SfxInt64Item::SetValue(long)
StyleSettings::SetCursorSize(long)
StyleSettings::SetFloatTitleHeight(long)
StyleSettings::SetHideDisabledMenuItems(bool)
StyleSettings::SetSpinSize(long)
StyleSettings::SetTitleHeight(long)
StyleSettings::SetUseFlatBorders(bool)
StyleSettings::SetUseFlatMenus(bool)
SvpSalInstance::PostedEventsInQueue()
SvtListener::IsListening(SvtBroadcaster&) const
SvxFontListBox::GetSelectEntry() const
SvxOpenGLObject::getRenderer()
SvxOpenGLObject::setRenderer(IOpenGLRenderer*)
SwLayHelper::CheckPageFlyCache(SwPageFrm*&, SwFlyFrm*)
SwUpdateAttr::SwUpdateAttr(int, int, unsigned short, std::__debug::vector<unsigned short, std::allocator<unsigned short> >)
Test::testCopyPasteSkipEmptyConditionalFormatting()
Test::testPerf()
Test::testSharedFormulaMoveBlock()
UnoApiTest::closeDocument(com::sun::star::uno::Reference<com::sun::star::lang::XComponent>)
VCLXGraphics::getFillColor()
VCLXGraphics::getFont()
VCLXGraphics::getLineColor()
VCLXGraphics::getRasterOp()
VCLXGraphics::getTextColor()
VCLXGraphics::getTextFillColor()
XmlTestTools::parseXml(utl::TempFile&)
apitest::CellProperties::testRotateReference()
apitest::CellProperties::testVertJustify()
apitest::DataPilotField::testAutoShowInfo()
apitest::DataPilotField::testIsGroupField()
apitest::DataPilotField::testLayoutInfo()
apitest::DataPilotField::testReference()
apitest::DataPilotField::testSortInfo()
apitest::XCellRangeData::testGetDataArray()
apitest::XCellRangeData::testSetDataArray()
apitest::XCellRangeReferrer::testGetReferredCells()
apitest::XCellRangesQuery::testQueryColumnDifference()
apitest::XCellRangesQuery::testQueryContentDifference()
apitest::XCellRangesQuery::testQueryEmptyCells()
apitest::XCellRangesQuery::testQueryFormulaCells()
apitest::XCellRangesQuery::testQueryIntersection()
apitest::XCellRangesQuery::testQueryRowDifference()
apitest::XCellRangesQuery::testQueryVisibleCells()
apitest::XDataPilotDescriptor::testGetColumnFields()
apitest::XDataPilotDescriptor::testGetDataFields()
apitest::XDataPilotDescriptor::testGetDataPilotFields()
apitest::XDataPilotDescriptor::testGetFilterDescriptor()
apitest::XDataPilotDescriptor::testGetHiddenFields()
apitest::XDataPilotDescriptor::testGetPageFields()
apitest::XDataPilotDescriptor::testGetRowFields()
apitest::XDataPilotDescriptor::testSourceRange()
apitest::XDataPilotDescriptor::testTag()
apitest::XDataPilotFieldGrouping::testCreateDateGroup()
apitest::XDataPilotFieldGrouping::testCreateNameGroup()
apitest::XDataPilotTable2::testGetDrillDownData()
apitest::XDataPilotTable2::testGetOutputRangeByType()
apitest::XDataPilotTable2::testGetPositionData()
apitest::XDataPilotTable2::testInsertDrillDownSheet()
apitest::XDataPilotTable::testGetOutputRange()
apitest::XDataPilotTable::testRefresh()
apitest::XDatabaseRange::testDataArea()
apitest::XDatabaseRange::testGetFilterDescriptor()
apitest::XDatabaseRange::testGetImportDescriptor()
apitest::XDatabaseRange::testGetSortDescriptor()
apitest::XDatabaseRange::testGetSubtotalDescriptor()
apitest::XDatabaseRange::testRefresh()
apitest::XElementAccess::testGetElementType()
apitest::XElementAccess::testHasElements()
apitest::XGoalSeek::testSeekGoal()
apitest::XIndexAccess::XIndexAccess(int)
apitest::XIndexAccess::testGetByIndex()
apitest::XIndexAccess::testGetByIndexException()
apitest::XIndexAccess::testGetCount()
apitest::XNameContainer::XNameContainer()
apitest::XNameContainer::XNameContainer(rtl::OUString const&)
apitest::XNameContainer::testRemoveByName()
apitest::XNameReplace::testReplaceByName()
apitest::XNamed::testGetName()
apitest::XNamed::testSetName()
apitest::XNamedRange::testGetContent()
apitest::XNamedRange::testGetReferencePosition()
apitest::XNamedRange::testGetType()
apitest::XNamedRange::testSetContent()
apitest::XNamedRange::testSetReferencePosition()
apitest::XNamedRange::testSetType()
apitest::XNamedRanges::XNamedRanges()
apitest::XNamedRanges::XNamedRanges(rtl::OUString const&)
apitest::XNamedRanges::testAddNewByName()
apitest::XNamedRanges::testAddNewFromTitles()
apitest::XNamedRanges::testOutputList()
apitest::XNamedRanges::testRemoveByName()
apitest::XPrintAreas::testSetAndGetPrintTitleColumns()
apitest::XPrintAreas::testSetAndGetPrintTitleRows()
apitest::XPropertySet::PropsToTest::PropsToTest()
apitest::XPropertySet::testAddPropertyChangeListener()
apitest::XPropertySet::testAddVetoableChangeListener()
apitest::XPropertySet::testGetPropertyValue()
apitest::XPropertySet::testRemovePropertyChangeListener()
apitest::XPropertySet::testRemoveVetoableChangeListener()
apitest::XPropertySet::testSetPropertyValue()
apitest::XReplaceable::testCreateReplaceDescriptor()
apitest::XReplaceable::testReplaceAll()
apitest::XSearchable::testFindAll()
apitest::XSearchable::testFindFirst()
apitest::XSearchable::testFindNext()
apitest::XSheetAnnotation::testGetAuthor()
apitest::XSheetAnnotation::testGetDate()
apitest::XSheetAnnotation::testGetIsVisible()
apitest::XSheetAnnotation::testGetPosition()
apitest::XSheetAnnotation::testSetIsVisible()
apitest::XSheetAnnotations::testCount()
apitest::XSheetAnnotations::testGetByIndex()
apitest::XSheetAnnotations::testInsertNew()
apitest::XSheetAnnotations::testRemoveByIndex()
apitest::XSheetOutline::testAutoOutline()
apitest::XSheetOutline::testClearOutline()
apitest::XSheetOutline::testGroup()
apitest::XSheetOutline::testHideDetail()
apitest::XSheetOutline::testShowDetail()
apitest::XSheetOutline::testShowLevel()
apitest::XSheetOutline::testUngroup()
apitest::XSpreadsheetDocument::testGetSheets()
apitest::XSpreadsheets2::XSpreadsheets2()
apitest::XSpreadsheets2::testImportCellStyle()
apitest::XSpreadsheets2::testImportFormulaBasicMath()
apitest::XSpreadsheets2::testImportFormulaWithNamedRange()
apitest::XSpreadsheets2::testImportNamedRangeDefinedInSource()
apitest::XSpreadsheets2::testImportNamedRangeRedefinedInSource()
apitest::XSpreadsheets2::testImportNewNamedRange()
apitest::XSpreadsheets2::testImportOverExistingNamedRange()
apitest::XSpreadsheets2::testImportString()
apitest::XSpreadsheets2::testImportValue()
apitest::XSpreadsheets2::testImportedSheetNameAndIndex()
apitest::XText::testInsertRemoveTextContent()
apitest::XTextContent::testAttach()
apitest::XTextContent::testGetAnchor()
apitest::XTextField::testGetPresentation()
basegfx::tools::containsOnlyHorizontalAndVerticalEdges(basegfx::B2DPolyPolygon const&)
calc::OCellListSource::checkConsistency_static(void const*)
calc::OCellValueBinding::checkConsistency_static(void const*)
canvas::createSurfaceProxyManager(boost::shared_ptr<canvas::IRenderModule> const&)
chart::ChartTypeUnoDlg::Create(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::ShapeToolbarController::create(com::sun::star::uno::Reference<com::sun::star::uno::XComponentContext> const&)
chart::opengl3D::Bar::Bar(chart::opengl3D::OpenGL3DRenderer*, glm::detail::tmat4x4<float> const&, unsigned int, unsigned int)
comphelper::OAccessibleImplementationAccess::setStateBit(short, bool)
comphelper::detail::ConfigurationWrapper::getGroupReadWrite(boost::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::getLocalizedPropertyValue(rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::setLocalizedPropertyValue(boost::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&, com::sun::star::uno::Any const&) const
connectivity::firebird::release(int&, cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface>&, com::sun::star::lang::XComponent*)
connectivity::sdbcx::OGroup::OGroup(bool)
connectivity::sdbcx::OGroup::OGroup(rtl::OUString const&, bool)
oglcanvas::CanvasHelper::flush() const
oglcanvas::TextLayout::draw(com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&) const
oox::drawingml::TextListStyle::dump() const
oox::xls::BiffDrawingObjectBase::BiffDrawingObjectBase(oox::xls::WorksheetHelper const&)
sc::CLBuildKernelThread::CLBuildKernelThread()
sc::CLBuildKernelThread::consume()
sc::CLBuildKernelThread::finish()
sc::CLBuildKernelThread::produce()
sc::CellValues::transferTo(ScColumn&, int)
sd::LeftDrawPaneShell::RegisterInterface(SfxModule*)
sd::LeftImpressPaneShell::RegisterInterface(SfxModule*)
sd::framework::FrameworkHelper::Instance(com::sun::star::uno::Reference<com::sun::star::frame::XController> const&)
sd::slidesorter::view::PageObjectPainter::InvalidateBitmaps()
sfx2::SvBaseLink::SvBaseLink(rtl::OUString const&, unsigned short, sfx2::SvLinkSource*)
std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >::_Rb_tree(std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >&&)
std::__cxx1998::vector<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread>, std::allocator<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread> > >::reserve(unsigned long)
std::auto_ptr<formula::FormulaTokenArray>::auto_ptr(std::auto_ptr<formula::FormulaTokenArray>&)
std::auto_ptr<formula::FormulaTokenArray>::auto_ptr(std::auto_ptr_ref<formula::FormulaTokenArray>)
svl::GridPrinter::clear()
svl::GridPrinter::resize(unsigned long, unsigned long)
svt::CheckInvariants(void const*)
svt::table::TableControl_Impl::impl_checkInvariants() const
svt::table::UnoControlTableModel::checkInvariants() const
vcl::MapChar(vcl::_TrueTypeFont*, unsigned short, bool)
