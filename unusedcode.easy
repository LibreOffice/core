BigInt::BigInt(unsigned int)
OpenGLContext::init(_XDisplay*, unsigned long, unsigned int, unsigned int, int)
OpenGLContext::renderToFile()
OpenGLContext::requestSingleBufferedRendering()
OpenGLContext::requestVirtualDevice()
OpenGLRender::CreateTextTexture(rtl::OUString const&, vcl::Font, long, com::sun::star::awt::Point, com::sun::star::awt::Size, long)
OpenGLTexture::Draw()
SalGraphics::drawTransformedBitmap(basegfx::B2DPoint const&, basegfx::B2DPoint const&, basegfx::B2DPoint const&, SalBitmap const&, SalBitmap const*)
ScCellValue::set(ScRefCellValue const&)
ScImportExport::ImportData(rtl::OUString const&, com::sun::star::uno::Any const&)
ScImportExport::ScImportExport(ScDocument*, rtl::OUString const&)
ScPrivatSplit::GetDeltaX()
ScTbxInsertCtrl::Select(bool)
ScTokenArray::GetWeight() const
ScVbaFormat<ooo::vba::excel::XStyle>::getAddIndent()
ScVbaFormat<ooo::vba::excel::XStyle>::setAddIndent(com::sun::star::uno::Any const&)
SdrUndoObjList::SetOrdNum(unsigned int)
SecurityEnvironment_NssImpl::getCertificate(rtl::OUString const&, rtl::OUString const&)
StylePool::getCount() const
StyleSettings::SetAlternatingRowColor(Color const&)
StyleSettings::SetCursorSize(long)
StyleSettings::SetFloatTitleHeight(long)
StyleSettings::SetHideDisabledMenuItems(bool)
StyleSettings::SetSpinSize(long)
StyleSettings::SetTitleHeight(long)
StyleSettings::SetUseFlatBorders(bool)
StyleSettings::SetUseFlatMenus(bool)
SvpSalInstance::PostedEventsInQueue()
SvtAccessibilityOptions::IsModified() const
SvtListener::IsListening(SvtBroadcaster&) const
SwUnoTableCrsr::Clone() const
SwXParaFrameEnumerationImpl::PurgeFrameClients()::{lambda(std::shared_ptr<sw::FrameClient>&)#1}::_FUN(std::shared_ptr<sw::FrameClient>&)
Test::testCopyPasteSkipEmptyConditionalFormatting()
Test::testPerf()
Test::testSharedFormulaMoveBlock()
XclXmlUtils::ToOString(XclRange const&)
apitest::XCellRangesQuery::testQueryFormulaCells()
apitest::XDataPilotDescriptor::testGetHiddenFields()
apitest::XDataPilotFieldGrouping::testCreateDateGroup()
apitest::XElementAccess::testGetElementType()
apitest::XElementAccess::testHasElements()
apitest::XIndexAccess::XIndexAccess(int)
apitest::XIndexAccess::testGetByIndex()
apitest::XIndexAccess::testGetByIndexException()
apitest::XIndexAccess::testGetCount()
apitest::XNameContainer::XNameContainer()
apitest::XNameReplace::testReplaceByName()
apitest::XNamedRanges::XNamedRanges(rtl::OUString const&)
apitest::XNamedRanges::testRemoveByName()
apitest::XSpreadsheetDocument::testGetSheets()
basegfx::tools::containsOnlyHorizontalAndVerticalEdges(basegfx::B2DPolyPolygon const&)
canvas::createSurfaceProxyManager(boost::shared_ptr<canvas::IRenderModule> const&)
chart::DataBrowser::SetCellModifiedHdl(Link<void*, long> const&)
comphelper::detail::ConfigurationWrapper::getGroupReadWrite(std::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&)
comphelper::detail::ConfigurationWrapper::getLocalizedPropertyValue(rtl::OUString const&) const
comphelper::detail::ConfigurationWrapper::setLocalizedPropertyValue(std::shared_ptr<comphelper::ConfigurationChanges> const&, rtl::OUString const&, com::sun::star::uno::Any const&)
connectivity::firebird::release(int&, cppu::OBroadcastHelperVar<cppu::OMultiTypeInterfaceContainerHelper, com::sun::star::uno::Type>&, com::sun::star::uno::Reference<com::sun::star::uno::XInterface>&, com::sun::star::lang::XComponent*)
connectivity::sdbcx::OGroup::OGroup(bool)
connectivity::sdbcx::OGroup::OGroup(rtl::OUString const&, bool)
dbaccess::OBookmarkContainer::dispose()
dbaccess::StorageInputStream::close()
oglcanvas::CanvasHelper::drawPoint(com::sun::star::rendering::XCanvas const*, com::sun::star::geometry::RealPoint2D const&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&)
oglcanvas::TextLayout::draw(com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&, com::sun::star::uno::Reference<com::sun::star::rendering::XGraphicDevice> const&) const
oox::drawingml::TextListStyle::dump() const
oox::xls::DefinedName::getTokens()
sc::CellValues::transferTo(ScColumn&, int)
sc::ColumnSpanSet::swap(sc::ColumnSpanSet&)
sc::FormulaGroupAreaListener::getGroupLength() const
sc::FormulaGroupAreaListener::getRange() const
sc::FormulaGroupAreaListener::getTopCellPos() const
sc_apitest::main()
sd::LeftDrawPaneShell::RegisterInterface(SfxModule*)
sd::LeftImpressPaneShell::RegisterInterface(SfxModule*)
std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >::_M_move_data(std::_Rb_tree<rtl::OUString, std::pair<rtl::OUString const, (anonymous namespace)::TemplateId>, std::_Select1st<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> >, std::less<rtl::OUString>, std::allocator<std::pair<rtl::OUString const, (anonymous namespace)::TemplateId> > >&, std::integral_constant<bool, true>)
std::__cxx1998::vector<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread>, std::allocator<rtl::Reference<oox::xls::(anonymous namespace)::WorkerThread> > >::reserve(unsigned long)
vcl::MapChar(vcl::_TrueTypeFont*, unsigned short, bool)
vcl::Region::IsInside(Rectangle const&) const
vcl::RenderSettings::PushAndApply(OutputDevice&)
vcl::Window::DrawGradientWallpaper(OutputDevice&, long, long, long, long, Wallpaper const&)
vcl::Window::DrawSelectionBackground(Rectangle const&, unsigned short, bool, bool, bool, Color*)
vcl::Window::GetRenderSettings()
vcl::Window::SetDoubleBuffering(bool)
vclcanvas::CanvasBitmapHelper::setData(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::rendering::IntegerBitmapLayout const&, com::sun::star::geometry::IntegerRectangle2D const&)
vclcanvas::CanvasBitmapHelper::setPixel(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::rendering::IntegerBitmapLayout const&, com::sun::star::geometry::IntegerPoint2D const&)
vclcanvas::CanvasHelper::drawPoint(com::sun::star::rendering::XCanvas const*, com::sun::star::geometry::RealPoint2D const&, com::sun::star::rendering::ViewState const&, com::sun::star::rendering::RenderState const&)
vclcanvas::CanvasHelper::setData(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::rendering::IntegerBitmapLayout const&, com::sun::star::geometry::IntegerRectangle2D const&)
vclcanvas::CanvasHelper::setPixel(com::sun::star::uno::Sequence<signed char> const&, com::sun::star::rendering::IntegerBitmapLayout const&, com::sun::star::geometry::IntegerPoint2D const&)
