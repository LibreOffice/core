{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6a4bcfa3_0ffaccbb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-05-10T11:22:20Z",
      "side": 1,
      "message": "personally I\u0027d prefer the parallelism to be handled by make/decoupling the targets instead of having a single target that does additional parallelism on its own.\n\nAlso not sure what the benefit is in using a shellscript instead of a make macro. But definitely won\u0027t block it :-)",
      "revId": "185b687aa0e254b3be088cc6e9038388af719d35",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d453381_3cfbcd3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000006
      },
      "writtenOn": "2022-05-10T11:56:55Z",
      "side": 1,
      "message": "Agree that having distinct targets (instead of the install.phony one) would be nicer. Unfortunately, my gbuild foo wasn\u0027t up to the task (and one likely again need pseudo targets, since make_installer creates any number of files)\n\nBjoern suggested generating a list of parameter files, with a recipe for make_installer and a flag target once done - that _might_ even work for the epmfile-internal parallelisation.\n\nThe shellscript was a necessary step, once gnu parallel came into the mix (passing the full parameter set via tuples turned out to be brittle due to escaping, as well as getting us too close to execve parameter limits)",
      "parentUuid": "6a4bcfa3_0ffaccbb",
      "revId": "185b687aa0e254b3be088cc6e9038388af719d35",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}