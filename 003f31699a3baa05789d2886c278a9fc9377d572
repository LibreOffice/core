{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "56eda0a5_25e82b23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000804
      },
      "writtenOn": "2021-09-01T17:48:00Z",
      "side": 1,
      "message": "As I was writing up the promised documentation, I couldn\u0027t find any way to explain why a style could validly hold a level 10 when the UI use of that style will really cause user confusion.\n\nChapterNumberingTortureTest is a good example file if you want to play with this. Heading 3 specifies ilvl\u003d9.\n\nBut I don\u0027t really understand SW\u0027s behaviour. It seems like it\n-takes the existing listlevel\n-applies the numbering with that level\n-then applies the new level.\n\nBut a little experimentation shows I\u0027m missing some things, and this isn\u0027t accurate or else it has other missing pieces. Although it is really outside of my experience, I think I\u0027ll try to investigate this tomorrow.\n\nAnnoyingly the style inspector doesn\u0027t match up with the visual results when things to weird.",
      "revId": "003f31699a3baa05789d2886c278a9fc9377d572",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01fbb286_071502a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000804
      },
      "writtenOn": "2021-09-02T06:26:02Z",
      "side": 1,
      "message": "NOTE TO SELF: I thought I might be wrong about no support for NO-LEVEL because:\n\nsal_uInt8 GetNumLevel() @return values can be: NO_NUMBERING, 0..MAXLEVEL-1 where NO_NUMBERING \u003d\u003d MAXLEVEL \u003d\u003d 10\n\nSetting the value to 10 doesn\u0027t crash, but starting numbering with NumberingLevel 10 does.\n\nnumber.cxx:81: const SwNumFormat\u0026 SwNumRule::Get(sal_uInt16) const: Assertion `i \u003c MAXLEVEL \u0026\u0026 meRuleType \u003c RULE_END\u0027 failed.",
      "revId": "003f31699a3baa05789d2886c278a9fc9377d572",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f65c3a0_a3917d9a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-02T07:07:52Z",
      "side": 1,
      "message": "This looks reasonable to me.\n\nIn addition to this, I\u0027ll double-check that getPropertyState() works properly for the NumberingLevel para style property. It should return DEFAULT_VALUE (and not DIRECT_VALUE) when there was no value specified explicitly (i.e. \"DEFAULT\" and \"DIRECT + value of 0\" are separate cases). I\u0027ll get to that as/when I will import/export this from/to ODT.",
      "revId": "003f31699a3baa05789d2886c278a9fc9377d572",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7b16912_29f4090e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-09-02T13:26:15Z",
      "side": 1,
      "message": "I just double-checked this. When I have a 2-levels numbering in Word, it uses \u003cw:ilvl w:val\u003d\"0\"/\u003e and \u003cw:numId w:val\u003d\"1\"/\u003e and our NumberingLevel property is also 0 and 1 (speaking of direct formatting). So my concern that we need to +1 / -1 somewhere in import/export is not a problem after all.",
      "parentUuid": "1f65c3a0_a3917d9a",
      "revId": "003f31699a3baa05789d2886c278a9fc9377d572",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}