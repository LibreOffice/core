/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include <com/sun/star/lang/WrappedTargetException.idl>
#include <com/sun/star/uno/Exception.idl>
#include <com/sun/star/uno/RuntimeException.idl>
#include <com/sun/star/uno/XInterface.idl>

module test { module registrytdprovider {

published enum Enum1 { E1 };

enum Enum2 { E1 };

published struct Struct1 { long s1; };

struct Struct2 { Struct1 s1; };

published struct Struct3<T, U> { U s2; };

struct Struct3a<T, U> { U s2; };

struct Struct4: Struct2 { Struct3< Struct2, Struct3< boolean, any > > s2; };

published exception Exception1: com::sun::star::uno::Exception {};

exception Exception2: com::sun::star::uno::Exception {};

published interface XBase {};

published typedef XBase Typedef1;

typedef Typedef1 Typedef2;

published interface XTest1 {
    [optional] interface XBase;

    void f1([out] any p) raises (com::sun::star::uno::RuntimeException);

    void f2();

    [attribute, bound] short a1;

    [attribute] long a2 {
        get raises
            (com::sun::star::lang::WrappedTargetException,
             com::sun::star::uno::RuntimeException);
        set raises
            (com::sun::star::uno::Exception,
             com::sun::star::lang::WrappedTargetException);
    };

    [attribute, readonly, bound] hyper a3 {
        get raises (com::sun::star::lang::WrappedTargetException);
    };
};

interface XTest2: Typedef2 {};

published service Service1: XTest1 {
    c1();

    c2([in] any... p) raises (com::sun::star::uno::RuntimeException);
};

service Service2 {
    [optional] interface XBase;

    interface XTest1;
};

service Service3: Typedef2 {};

singleton Singleton1: XTest1;

published singleton Singleton2 { service Service1; };

singleton Singleton3: Typedef2;

published const long Const1 = 0;

const long Const2 = 0;

published constants Consts1 { const long C = 0; };

constants Consts2 { const long C = 0; };

}; };

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
