{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e3a92b4d_0315b4ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-06-17T19:11:04Z",
      "side": 1,
      "message": "I still believe he Qt code is easier to follow then other back-ends. OTOH it always feels like it can\u0027t get worse, but then you must use even cruder hacks..",
      "revId": "a9dc818810a9b2ea1619fdbb599f3366917796d5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a51e6711_0865cfeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2022-06-18T20:23:46Z",
      "side": 1,
      "message": "Is that to fix the scenario described in https://gerrit.libreoffice.org/c/core/+/135813? (which it does on X11, in a quick test)\n\nIn my tests with Plasma/KWin 4:5.24.5-1 on Debian testing:\n1) On X11, if the window is closed in unmaximized state, and LO is started again, position and size are restored exactly the same, with or without this change in place. (The same is true for e.g. Kate or Okular, while gedit opens with the same size, but centered.)\n2) On X11, when maximizing and unmaximizing without closing LO in between, exact size and position are restored, with or without this change in place (same for kate, gedit). \n3) On X11, the scenario from change 135813 (move window somewhere, maximize, close, start again, unmaximize) causes kate or gedit to be restored with the original size, but centered.\n4) On X11, for LO with this change in place, that scenario now restores both, pos and size exactly.\n5) On Wayland, size is restored, but the window is centered on the screen (with or without this change in place) for scenario 4), and the same is true when just doing the simple scenario from 1).\n\nIn particular after reading your \"I\u0027m wondering, if I\u0027m working around a kwin bug...\", I\u0027m wondering a bit how much LO should interfere with the window manager here or leave it to that one to do the positioning on startup etc, but I know too little about the matter.\n\nApart from that, this change fails to build with --enable-qt6. (FWIW, Debian bookworm/testing has Qt 6 packages by now.)\n\nIn file included from /home/michi/development/git/libreoffice/vcl/inc/qt6/QtXcbEventFilter.hxx:10,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/../qt5/QtFrame.cxx:55,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/QtFrame.cxx:10:\n/home/michi/development/git/libreoffice/vcl/inc/qt6/../qt5/QtXcbEventFilter.hxx:27:10: error: ‘bool QtXcbEventFilter::nativeEventFilter(const QByteArray\u0026, void*, long int*)’ marked ‘override’, but does not override\n   27 |     bool nativeEventFilter(const QByteArray\u0026 eventType, void* message, long*) override;\n      |          ^~~~~~~~~~~~~~~~~\nmake[1]: *** [/home/michi/development/git/libreoffice/solenv/gbuild/LinkTarget.mk:337: /home/michi/development/git/libreoffice/workdir/CxxObject/vcl/qt6/QtFrame.o] Error 1\nmake[1]: *** Waiting for unfinished jobs....\nIn file included from /home/michi/development/git/libreoffice/vcl/inc/qt6/QtXcbEventFilter.hxx:10,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/../qt5/QtInstance.cxx:39,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/QtInstance.cxx:10:\n/home/michi/development/git/libreoffice/vcl/inc/qt6/../qt5/QtXcbEventFilter.hxx:27:10: error: ‘bool QtXcbEventFilter::nativeEventFilter(const QByteArray\u0026, void*, long int*)’ marked ‘override’, but does not override\n   27 |     bool nativeEventFilter(const QByteArray\u0026 eventType, void* message, long*) override;\n      |          ^~~~~~~~~~~~~~~~~\nIn file included from /home/michi/development/git/libreoffice/vcl/qt6/QtInstance.cxx:10:\n/home/michi/development/git/libreoffice/vcl/qt6/../qt5/QtInstance.cxx: In constructor ‘QtInstance::QtInstance(std::unique_ptr\u003cQApplication\u003e\u0026, bool)’:\n/home/michi/development/git/libreoffice/vcl/qt6/../qt5/QtInstance.cxx:230:29: error: invalid new-expression of abstract class type ‘QtXcbEventFilter’\n  230 |     , m_pXcbEventFilter(new QtXcbEventFilter)\n      |                             ^~~~~~~~~~~~~~~~\nIn file included from /home/michi/development/git/libreoffice/vcl/inc/qt6/QtXcbEventFilter.hxx:10,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/../qt5/QtInstance.cxx:39,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/QtInstance.cxx:10:\n/home/michi/development/git/libreoffice/vcl/inc/qt6/../qt5/QtXcbEventFilter.hxx:16:7: note:   because the following virtual functions are pure within ‘QtXcbEventFilter’:\n   16 | class QtXcbEventFilter : public QAbstractNativeEventFilter\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /home/michi/development/git/qt5/qtbase/include/QtCore/qabstractnativeeventfilter.h:1,\n                 from /home/michi/development/git/qt5/qtbase/include/QtCore/QAbstractNativeEventFilter:1,\n                 from /home/michi/development/git/libreoffice/vcl/inc/qt6/../qt5/QtXcbEventFilter.hxx:14,\n                 from /home/michi/development/git/libreoffice/vcl/inc/qt6/QtXcbEventFilter.hxx:10,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/../qt5/QtInstance.cxx:39,\n                 from /home/michi/development/git/libreoffice/vcl/qt6/QtInstance.cxx:10:\n/home/michi/development/git/qt5/qtbase/src/corelib/kernel/qabstractnativeeventfilter.h:19:18: note:     ‘virtual bool QAbstractNativeEventFilter::nativeEventFilter(const QByteArray\u0026, void*, qintptr*)’\n   19 |     virtual bool nativeEventFilter(const QByteArray \u0026eventType, void *message, qintptr *result) \u003d 0;\n      |                  ^~~~~~~~~~~~~~~~~\nmake[1]: *** [/home/michi/development/git/libreoffice/solenv/gbuild/LinkTarget.mk:334: /home/michi/development/git/libreoffice/workdir/CxxObject/vcl/qt6/QtInstance.o] Error 1\nmake: *** [Makefile:288: build] Error 2\n",
      "revId": "a9dc818810a9b2ea1619fdbb599f3366917796d5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c24eadc_0343f7ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-06-18T20:54:19Z",
      "side": 1,
      "message": "\u003e Is that to fix the scenario described in https://gerrit.libreoffice.org/c/core/+/135813? (which it does on X11, in a quick test)\n\nNo. My scenario is simply just restoring the position and size on start, nothing fancy. Just start and quit LO. And fix your original observation, that the window moves without it.\n\nFact is we store the top-left of the frame in the registrymodifications.xcu. But gen and gtk restore it wrong, probably because of the same reason Qt is wrong: for kwin the frame extends property is set late, so the earlier window positioning code thinks there are no borders. This patch should fix that for Qt. I\u0027m on Debian Buster KDE, which is comparably old. \n\nIf I simply compare with gen or gtk, starting and quitting LO, the position is always constant but wrong. gtk reacts to the \"configure\" signal to fix the border, but it doesn\u0027t reposition. Kind of worse, then the internal maGeometry is wrong too, but since it\u0027s constant, it doesn\u0027t matter.\n\n\u003e 5) On Wayland, size is restored, but the window is centered on the screen (with or without this change in place) for scenario 4), and the same is true when just doing the simple scenario from 1).\n\nThis is X11-only code.\n\n\u003e In particular after reading your \"I\u0027m wondering, if I\u0027m working around a kwin bug...\", I\u0027m wondering a bit how much LO should interfere with the window manager here or leave it to that one to do the positioning on startup etc, but I know too little about the matter.\n\nThe is no interference. This is all strictly just a suggestion to the WM in the end by the toolkit.\n\n[ snip the Qt6 build failure]\n\nMaybe I should compile Qt6 for Buster - but then I\u0027m still building in a Ubuntu 20.04 schroot; my updated LHM build env.",
      "parentUuid": "a51e6711_0865cfeb",
      "revId": "a9dc818810a9b2ea1619fdbb599f3366917796d5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d79e8b80_cc81310a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2022-06-18T21:42:32Z",
      "side": 1,
      "message": "\u003e No. My scenario is simply just restoring the position and size on start, nothing fancy. Just start and quit LO. And fix your original observation, that the window moves without it.\n\nCan you clarify what you mean with my original observation? (Out of the top of my head, only the one from https://gerrit.libreoffice.org/c/core/+/135813 comes to mind, but that was for the more complex scenario.)\n\n\u003e Fact is we store the top-left of the frame in the registrymodifications.xcu. But gen and gtk restore it wrong, probably because of the same reason Qt is wrong: for kwin the frame extends property is set late, so the earlier window positioning code thinks there are no borders. This patch should fix that for Qt. I\u0027m on Debian Buster KDE, which is comparably old. \n\u003e \n\u003e If I simply compare with gen or gtk, starting and quitting LO, the position is always constant but wrong. gtk reacts to the \"configure\" signal to fix the border, but it doesn\u0027t reposition. Kind of worse, then the internal maGeometry is wrong too, but since it\u0027s constant, it doesn\u0027t matter.\n\nI don\u0027t really understand what \"the position is always constant but wrong\" means here.\n\nIn a quick test, all of kf5, gen and gtk3 restore the window at the same position it was when closing for me, which is what looks correct to me from a user perspective; screencast (VCL plugins used in the mentioned order): https://nextcloud.documentfoundation.org/s/BjsQajDj5PJgyrs\nThe window slightly moves when switching from kf5 to gen, which might be related to the native menu bar offset (?), but that doesn\u0027t seem problematic to me, as long as geometry remains unchanged when using the same VCL plugin again.\n\nDo you get a different behavior in your setup? Or did I just not get what the problem is?",
      "parentUuid": "7c24eadc_0343f7ee",
      "revId": "a9dc818810a9b2ea1619fdbb599f3366917796d5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5910946f_8676eda8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-06-18T22:30:53Z",
      "side": 1,
      "message": "I\u0027ll try to generate a screencast (never done that before) with my additional debug output dumping the maGeometry and \"vcl::WindowData *pState\" in qt5 and gtk3 (Set/GetWindowState; gen acts like gtk3, so I\u0027ll leave that out), but not tonight. FWIW the positioning also works with a 1.5 scaling. And I\u0027ll push a new \"complete\" patchset, now that most other refactoring is merged (I still have 25 pending patches on my master...).",
      "parentUuid": "d79e8b80_cc81310a",
      "revId": "a9dc818810a9b2ea1619fdbb599f3366917796d5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}