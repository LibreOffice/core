{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a26f351e_7ac412b3",
        "filename": "svgio/source/svgreader/svgtoken.cxx",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2021-11-21T19:34:05Z",
      "side": 1,
      "message": "this can be\n    typedef std::unordered_map\u003c rtl::OUStringConstExpr, SVGToken \u003e SVGTokenMapper;",
      "revId": "782d1fcc500028bce1934988fed88028a952063b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dafe676_eb2bec7e",
        "filename": "svgio/source/svgreader/svgtools.cxx",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-10-08T10:56:33Z",
      "side": 1,
      "message": "This is not really the best thing here.\n1. It changes char (1-byte) to char16_t (2-byte) string, with additional refcount field. It increases the memory requirement.\n2. It is only needed for string comparison and length; and that is done without any speed loss with good old static character arrays - matchIgnoreAsciiCase is optimized for that; you only need to use SAL_N_ELEMENTS(aStrGrad)-1 in place of old strlen to get compile-time constant.",
      "revId": "782d1fcc500028bce1934988fed88028a952063b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d37fd371_c9f730b7",
        "filename": "svgio/source/svgreader/svgtools.cxx",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-10-08T11:14:46Z",
      "side": 1,
      "message": "Another option, also making use of statically known size, is using std::string_view.",
      "parentUuid": "9dafe676_eb2bec7e",
      "revId": "782d1fcc500028bce1934988fed88028a952063b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ba1be44_c753609b",
        "filename": "svgio/source/svgreader/svgtools.cxx",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1002951
      },
      "writtenOn": "2021-11-21T16:37:26Z",
      "side": 1,
      "message": "Why not? The rCandidate parameter in the readAngle() is of type: const OUString\u0026, and the called methods readNumber() and matchIgnoreAsciiCase() take std::u16string_view. So, the literal was actually converted into 2-bytes characters anyway.",
      "parentUuid": "d37fd371_c9f730b7",
      "revId": "782d1fcc500028bce1934988fed88028a952063b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "213beb01_b4acee28",
        "filename": "svgio/source/svgreader/svgtools.cxx",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1002951
      },
      "writtenOn": "2021-11-21T16:37:26Z",
      "side": 1,
      "message": "std::u16string_view would work, but it also uses 2-bytes characters. Isn\u0027t it better to keep OUStringLiteral?",
      "parentUuid": "d37fd371_c9f730b7",
      "revId": "782d1fcc500028bce1934988fed88028a952063b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}