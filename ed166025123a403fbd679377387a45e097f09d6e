{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a4290dae_315def4e",
        "filename": "basic/qa/basic_coverage/test_cstr_method.bas",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-02-13T22:47:02Z",
      "side": 1,
      "message": "Hmm, and now I have doubts about this test. Why do we expect it so? The two doubles are in fact different, and having the same string representation for them breaks round trip safety. This test only succeeds because of our flawed doubleToString implementation - something that I hope to be able to fix ~soon.",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "ed166025123a403fbd679377387a45e097f09d6e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9f27745_47ec0ed6",
        "filename": "basic/qa/basic_coverage/test_cstr_method.bas",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-02-14T07:45:58Z",
      "side": 1,
      "message": "OTOH, this comes from the fact that doubleToString limits precision to 15 significant decimal digits ... oh well.",
      "parentUuid": "a4290dae_315def4e",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "ed166025123a403fbd679377387a45e097f09d6e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e431e38_26d0049e",
        "filename": "basic/qa/basic_coverage/test_cstr_method.bas",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-02-14T08:41:02Z",
      "side": 1,
      "message": "Ya, the calculation should be correct (691.1999999999999), but the string representation rounds it to 691.2.",
      "parentUuid": "d9f27745_47ec0ed6",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "ed166025123a403fbd679377387a45e097f09d6e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5905002_c3b13c91",
        "filename": "basic/qa/basic_coverage/test_cstr_method.bas",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-02-14T08:43:49Z",
      "side": 1,
      "message": "At least, the comment could be improved a bit: in current form, it looks as if we assume the 691.1999999999999 to be wrong. It could be re-worded to something like \"check also how current conversion rounds a close number\", to make it clear that there\u0027s nothing wrong with 691.1999999999999 per se ðŸ˜Š.",
      "parentUuid": "5e431e38_26d0049e",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "ed166025123a403fbd679377387a45e097f09d6e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9707784a_52f52b3e",
        "filename": "basic/qa/basic_coverage/test_cstr_method.bas",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-02-14T08:47:49Z",
      "side": 1,
      "message": "Yep, without any prior knowledge of the cause of the change, it makes it difficult to understand, and someone might assume the 691.1999999999999 is wrong.",
      "parentUuid": "c5905002_c3b13c91",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 31,
        "endChar": 77
      },
      "revId": "ed166025123a403fbd679377387a45e097f09d6e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}