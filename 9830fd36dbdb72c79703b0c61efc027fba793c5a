{
  "comments": [
    {
      "key": {
        "uuid": "AAAAXH//+wY\u003d",
        "filename": "tools/source/datetime/ttime.cxx",
        "patchSetId": 24
      },
      "lineNbr": 141,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2013-04-19T06:24:50Z",
      "side": 1,
      "message": "Perhaps we should be using sal_uInt32 here?\nOr is there something magic I\u0027m missing?",
      "revId": "9830fd36dbdb72c79703b0c61efc027fba793c5a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAXH//+wQ\u003d",
        "filename": "tools/source/datetime/ttime.cxx",
        "patchSetId": 24
      },
      "lineNbr": 141,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2013-04-19T06:55:35Z",
      "side": 1,
      "message": "I more or less agree. We should be using:\n sal_uInt16 nHour, sal_uInt16 nMin, sal_uInt16 nSec, sal_uInt32 nNanoSec\n\nI did not do that since \"it was like that before\", to not make this patch more disruptive than necessary. Feel free to do it.",
      "parentUuid": "AAAAXH//+wY\u003d",
      "revId": "9830fd36dbdb72c79703b0c61efc027fba793c5a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAXH//+u0\u003d",
        "filename": "tools/source/datetime/ttime.cxx",
        "patchSetId": 24
      },
      "lineNbr": 141,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2013-04-19T10:21:59Z",
      "side": 1,
      "message": "Don\u0027t change that to 16-bit values, it is perfectly legal to call this with 86000 seconds to create a time, or even a million seconds.. ;-)",
      "parentUuid": "AAAAXH//+wQ\u003d",
      "revId": "9830fd36dbdb72c79703b0c61efc027fba793c5a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAXH//+uM\u003d",
        "filename": "tools/source/datetime/ttime.cxx",
        "patchSetId": 24
      },
      "lineNbr": 141,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2013-04-19T12:32:07Z",
      "side": 1,
      "message": "OK, fair enough for \"not to 16-bit values\". But still, we should use either sal_uInt32 or sal_uInt64 everywhere. In the spirit of \"allow to call with any amount and normalise later\", IMO we should use:\n - definitely sal_uInt64 for nNanoSec (else the limit is about 4s...)\n - sal_uInt16 for nHour: this class does not support more (see the return type of getHour(); else we have to change getHour() also)\n - nMin: 2^16-1 minutes is approx 45.5 days; if the intention is to go up to 65535 hours, then we need sal_uInt32; if the intention is to go up to one day, sal_uInt16 is sufficient.\n - nSec: 2^16-1 seconds is short of a day, so need sal_uInt32\n\nIMHO, it does not make sense that 32-bit platforms can pass only 2^32-1 nanoseconds, but 64 bit platforms can pass 2^35 nanoseconds",
      "parentUuid": "AAAAXH//+u0\u003d",
      "revId": "9830fd36dbdb72c79703b0c61efc027fba793c5a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAXH//+wc\u003d",
        "filename": "tools/source/datetime/ttime.cxx",
        "patchSetId": 24
      },
      "lineNbr": 180,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2013-04-19T06:24:50Z",
      "side": 1,
      "message": "shouldn\u0027t this, and the other similar lines of code, be something like\nassert(nNewMin \u003e\u003d 0 \u0026\u0026 nNewin \u003c minInHour)\nto prevent coding errors being ignored?",
      "revId": "9830fd36dbdb72c79703b0c61efc027fba793c5a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAXH//+wM\u003d",
        "filename": "tools/source/datetime/ttime.cxx",
        "patchSetId": 24
      },
      "lineNbr": 180,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2013-04-19T06:55:35Z",
      "side": 1,
      "message": "nNewMin \u003e\u003d 0 will break WaE since nNewMin is an unsigned int.\nnNewMin \u003c minInHour: OK, fair enough. You can add it.\n\nPay attention that (nSec \u003d\u003d 60) is valid (for leap seconds).",
      "parentUuid": "AAAAXH//+wc\u003d",
      "revId": "9830fd36dbdb72c79703b0c61efc027fba793c5a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}