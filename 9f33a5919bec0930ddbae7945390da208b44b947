{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f07f7a5c_65b12e76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-07-26T08:46:15Z",
      "side": 1,
      "message": "this should work, but i have noticed that in SwTextINetFormat::GetCharFormat() there is already this code:\n\n        bool bResetMod \u003d !rDoc.getIDocumentState().IsModified();\n        Link\u003cbool,void\u003e aOle2Lnk;\n        if ( bResetMod )\n        {\n            aOle2Lnk \u003d rDoc.GetOle2Link();\n            rDoc.SetOle2Link( Link\u003cbool,void\u003e() );\n        }\n\n        pRet \u003d IsPoolUserFormat( nId )\n               ? rDoc.FindCharFormatByName( rStr )\n               : rDoc.getIDocumentStylePoolAccess().GetCharFormatFromPool( nId );\n\n        if ( bResetMod )\n        {\n            rDoc.getIDocumentState().ResetModified();\n            rDoc.SetOle2Link( aOle2Lnk );\n        }\n        \ndo you have an idea why \"Ole2Lnk\" is being called in your stack despite it being cleared here?\n\nwould it help to call \"SetEnableSetModified(false)\" in SwTextINetFormat::GetCharFormat() instead of the outer function where you added it?\n",
      "revId": "9f33a5919bec0930ddbae7945390da208b44b947",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb5b1e61_e4470688",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001615
      },
      "writtenOn": "2022-07-28T04:00:18Z",
      "side": 1,
      "message": "I think the link is not being cleared here because the document state is modified. Perhaps this is the bug? Removing the negation from bool bResetMod \u003d !rDoc.getIDocumentState().IsModified() makes the crash not occur.\n\nI put the SetEnableSetModified(false) in the outer function thinking it best to not disturb more than needed since it seems like a hack fix. I considered making a wrapper function for the UpdateTracking function to call to even less disturb existing code.",
      "parentUuid": "f07f7a5c_65b12e76",
      "revId": "9f33a5919bec0930ddbae7945390da208b44b947",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db9cb7bc_67d65558",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-07-28T10:46:08Z",
      "side": 1,
      "message": "ah right, the IsModified() is of course true in that case because of previous editing...\n\nbut what if you check it differently in GetCharFormat(), ignore the actual modified state, replace IsModified() with IsEnableSetModified() and then call SetEnableSetModified(false) and SetEnableSetModified(true) instead of ResetModified()?",
      "parentUuid": "cb5b1e61_e4470688",
      "revId": "9f33a5919bec0930ddbae7945390da208b44b947",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}