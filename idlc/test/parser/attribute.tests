#
# This file is part of the LibreOffice project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# This file incorporates work covered by the following license notice:
#
#   Licensed to the Apache Software Foundation (ASF) under one or more
#   contributor license agreements. See the NOTICE file distributed
#   with this work for additional information regarding copyright
#   ownership. The ASF licenses this file to you under the Apache
#   License, Version 2.0 (the "License"); you may not use this file
#   except in compliance with the License. You may obtain a copy of
#   the License at http://www.apache.org/licenses/LICENSE-2.0 .
#

EXPECT SUCCESS "attribute.tests 1":
interface I1 {
    [attribute] long a;
};


EXPECT SUCCESS "attribute.tests 2":
interface I1 {
    [attribute] long a {};
};


EXPECT FAILURE "attribute.tests 3":
interface I1 {
    [attribute] long a {
        get raises ();
    };
};


EXPECT FAILURE "attribute.tests 3a":
interface I1 {
    [attribute] long a {
        set raises ();
    };
};


EXPECT SUCCESS "attribute.tests 4":
exception E1 {};
interface I1 {
    [attribute] long a {
        get raises (E1);
    };
};


EXPECT SUCCESS "attribute.tests 5":
exception E1 {};
interface I1 {
    [attribute] long a {
        set raises (E1);
    };
};


EXPECT SUCCESS "attribute.tests 6":
exception E1 {};
interface I1 {
    [attribute] long a {
        get raises (E1);
        set raises (E1);
    };
};


EXPECT SUCCESS "attribute.tests 7":
exception E1 {};
interface I1 {
    [attribute] long a {
        set raises (E1);
        get raises (E1);
    };
};


EXPECT FAILURE "attribute.tests 8":
exception E1 {};
interface I1 {
    [attribute] long a {
        get raises (E1);
        get raises (E1);
    };
};


EXPECT OLD-FAILURE "attribute.tests 9":
exception E1 {};
interface I1 {
    void E1();
    [attribute] long a {
        get raises (E1);
    };
};


EXPECT OLD-FAILURE "attribute.tests 10":
exception E1 {};
interface I1 {
    [attribute] long E1 {
        get raises (E1);
    };
};


EXPECT NEW-FAILURE "attribute.tests 11":
exception E1 {};
interface I1 {
    [attribute] long a {
        get raises (E1,E1);
    };
};


EXPECT SUCCESS "attribute.tests 12":
exception E1 {};
interface I1 {
    [attribute, readonly] long a {
        get raises (E1);
    };
};


EXPECT FAILURE "attribute.tests 13":
exception E1 {};
interface I1 {
    [attribute, readonly] long a {
        set raises (E1);
    };
};


EXPECT FAILURE "attribute.tests 14":
interface I1 {
    [] long a;
};


EXPECT SUCCESS "attribute.tests 15":
interface I1 {
    [attribute] long a;
};


EXPECT FAILURE "attribute.tests 16":
interface I1 {
    [attribute, property] long a;
};


EXPECT FAILURE "attribute.tests 17":
interface I1 {
    [attribute, optional] long a;
};


EXPECT FAILURE "attribute.tests 18":
interface I1 {
    [attribute, maybevoid] long a;
};


EXPECT FAILURE "attribute.tests 19":
interface I1 {
    [attribute, constrained] long a;
};


EXPECT FAILURE "attribute.tests 20":
interface I1 {
    [attribute, transient] long a;
};


EXPECT FAILURE "attribute.tests 21":
interface I1 {
    [attribute, maybeambigious] long a;
};


EXPECT FAILURE "attribute.tests 22":
interface I1 {
    [attribute, maybedefault] long a;
};


EXPECT FAILURE "attribute.tests 23":
interface I1 {
    [attribute, removable] long a;
};


EXPECT SUCCESS "attribute.tests 24":
interface I1 {
    [attribute, bound] long a;
};


EXPECT SUCCESS "attribute.tests 25":
interface I1 {
    [bound, attribute] long a;
};


EXPECT SUCCESS "attribute.tests 26":
interface I1 {
    [attribute, readonly] long a;
};


EXPECT SUCCESS "attribute.tests 27":
interface I1 {
    [attribute, bound, readonly] long a;
};


EXPECT SUCCESS "attribute.tests 28":
exception E1 {};
interface I1 {
    [attribute, bound] long a {
        get raises (E1);
        set raises (E1);
    };
};
