{
  "comments": [
    {
      "key": {
        "uuid": "1f485f77_057dc91b",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-01-21T00:56:11Z",
      "side": 1,
      "message": "FYI: We have o3tl::temporary for that (hope it would work for void*)",
      "range": {
        "startLine": 114,
        "startChar": 8,
        "endLine": 114,
        "endChar": 21
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_debbf2e2",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1001994
      },
      "writtenOn": "2019-01-30T05:24:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f485f77_057dc91b",
      "range": {
        "startLine": 114,
        "startChar": 8,
        "endLine": 114,
        "endChar": 21
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_e5798d2f",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-01-21T00:56:11Z",
      "side": 1,
      "message": "Possibly only do that if (hDC)? And then the scoped handle would be even not required.",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 117,
        "endChar": 84
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_bed71624",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1001994
      },
      "writtenOn": "2019-01-30T05:24:48Z",
      "side": 1,
      "message": "No, we can create hBmp in ImplCreareVirDevBitmap even if hDC was not\ninitialized properly.\n\n    HBITMAP WinSalVirtualDevice::ImplCreateVirDevBitmap(HDC hDC, long nDX, long nDY, sal_uInt16 nBitCount, void **ppData)\n    {\n        HBITMAP hBitmap;\n\n         if ( nBitCount \u003d\u003d 1 )\n         {\n             hBitmap \u003d CreateBitmap( static_cast\u003cint\u003e(nDX), static_cast\u003cint\u003e(nDY), 1, 1, nullptr );\n             SAL_WARN_IF( !hBitmap, \"vcl\", \"CreateBitmap failed: \" \u003c\u003c WindowsErrorString( GetLastError() ) );\n             ppData \u003d nullptr;\n         }\n         ...\n    }\n\nNot sure if it is a valid case, but we definitely should not change this\nbehaviour in the current patch.",
      "parentUuid": "1f485f77_e5798d2f",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 117,
        "endChar": 84
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_be8ef62b",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-01-30T06:35:42Z",
      "side": 1,
      "message": "I tend to disagree.\n\nCurrent commit message is \"use ScopedGDI in WinSalVirtualDevice\". And what I asked here is if the required change here is to introduce smart resource management, or to change the logic to not need that smart management at all - these are mutually exclusive approaches.\n\nCurrent code tries to create a HDC, then unconditionally creates a HBITMAP; then in case HDC creation failed, it frees HBITMAP and exits. So it looks inefficient and wrong in the first place to create the HBITMAP in case of failed HDC creation.\n\nOTOH, in case of successful HDC creation, the suggested patch releases HBITMAP, i.e. the introduced smart management is only used for this supposedly useless failure case. So *either* your proposed patch (inefficient IMO), or my change, but not both one after another, could be needed.",
      "parentUuid": "1f485f77_bed71624",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 117,
        "endChar": 84
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_940d5b92",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1001994
      },
      "writtenOn": "2019-01-31T06:27:04Z",
      "side": 1,
      "message": "Oh, I got the idea. Sorry, it took too much time to realize. I would suggest to\ndo the following:\n\n* Roll back changes for WinSalInstance::CreateVirtualDevice as we do not use\n  any RAII there and move these changes into a separate patch.\n* Change mhBmp from the raw pointer to scoped version in the current patch.\n\nAlso, I have some doubts about the destructor.\n\n\n    WinSalVirtualDevice::~WinSalVirtualDevice()\n    {\n        mhBmp.reset();\n        mpGraphics.reset();\n    }\n\nWe manually reseting the pointer which seems useless because they will be\ndestroyded automaticaly when the object will go out of scope. Probably there\nare magic requirements for the destruction order, but I did not find any of\nthem. As you might see, to keep my life safe I did the same as the previous\nauthor ;)",
      "parentUuid": "1f485f77_be8ef62b",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 117,
        "endChar": 84
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_14216bfc",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-01-31T06:36:35Z",
      "side": 1,
      "message": "Agree with limiting the scope of the current patch.\n\nAs to the dtor: while it\u0027s true that those lines looks unnecessary, it *might* be so that their order is somehow important... or maybe not. So you may do one of two things *in this patch*: either leave it as you already did, or remove resetting mpGraphics (but let resetting mhBmp stay, to ensure the order). Removal of the latter you may do in a follow-up patch, which would be trivial to revert in case of need.",
      "parentUuid": "1f485f77_940d5b92",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 117,
        "endChar": 84
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_c576913f",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-01-21T00:56:11Z",
      "side": 1,
      "message": "useless parentheses",
      "range": {
        "startLine": 127,
        "startChar": 28,
        "endLine": 127,
        "endChar": 29
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f485f77_9edc5a47",
        "filename": "vcl/win/gdi/salvd.cxx",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1001994
      },
      "writtenOn": "2019-01-30T05:24:48Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "1f485f77_c576913f",
      "range": {
        "startLine": 127,
        "startChar": 28,
        "endLine": 127,
        "endChar": 29
      },
      "revId": "fc2b778507b1614de13acffed26229cd313af830",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}