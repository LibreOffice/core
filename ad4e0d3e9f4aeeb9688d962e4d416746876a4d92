{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b4373c55_30d559ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-08T15:43:43Z",
      "side": 1,
      "message": "Nice!",
      "revId": "ad4e0d3e9f4aeeb9688d962e4d416746876a4d92",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e9a62d4_e8030895",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-08T20:59:20Z",
      "side": 1,
      "message": "I thought I would write the Basic implementation, so that you avoid the hassle:\n\n  \u0027 See LibreOffice6FloatingPointMode in basic/source/runtime/methods1.cxx\n  Function LibreOffice6FloatingPointMode() As Boolean\n    Dim bMode As Boolean\n    bMode \u003d Environ(\"LIBREOFFICE6FLOATINGPOINTMODE\") \u003c\u003e \"\";\n    If (Not bMode) Then\n      Dim oConfigProvider As Object, aNodePath(0) As New com.sun.star.beans.PropertyValue, oRegistryKey As Object\n      oConfigProvider \u003d createUnoService(\"com.sun.star.configuration.ConfigurationProvider\")\n      aNodePath(0).Name \u003d \"nodepath\"\n      aNodePath(0).Value \u003d \"org.openoffice.Office.Scripting/Basic/Compatibility\"\n      oRegistryKey \u003d oConfigProvider.createInstanceWithArguments(\"com.sun.star.configuration.ConfigurationAccess\", aNodePath)\n      bMode \u003d oRegistryKey.getPropertyValue(\"UseLibreOffice6FloatingPointConversion\")\n    End If\n    LibreOffice6FloatingPointMode \u003d bMode\n  End Function\n\nHTH",
      "revId": "ad4e0d3e9f4aeeb9688d962e4d416746876a4d92",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdf138b1_9f3c53a6",
        "filename": "basic/source/runtime/methods1.cxx",
        "patchSetId": 8
      },
      "lineNbr": 2983,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-08T15:43:43Z",
      "side": 1,
      "message": "I suggest, unless that is absolutely necessary, that we do not expose this as a Basic function. There is a way to examine configuration settings from Basic (see e.g. call to GetRegistryKeyContent in https://bugs.documentfoundation.org/show_bug.cgi?id\u003d132145#c0). So in the spirit of this setting being targeted to those who know what they do, I suppose it\u0027s not needed to advertise it here.\n\nFor the sake of the unit test, GetRegistryKeyContent function is implemented in our Tools library:\n\n  Function GetRegistryKeyContent(sKeyName as string, Optional bforUpdate as Boolean)\n  Dim oConfigProvider as Object\n  Dim aNodePath(0) as new com.sun.star.beans.PropertyValue\n  \toConfigProvider \u003d createUnoService(\"com.sun.star.configuration.ConfigurationProvider\")\n  \taNodePath(0).Name \u003d \"nodepath\"\n  \taNodePath(0).Value \u003d sKeyName\n  \tIf IsMissing(bForUpdate) Then\n  \t\tGetRegistryKeyContent() \u003d oConfigProvider.createInstanceWithArguments(\"com.sun.star.configuration.ConfigurationAccess\", aNodePath())\n  \tElse\n  \t\tIf bForUpdate Then\n  \t\t\tGetRegistryKeyContent() \u003d oConfigProvider.createInstanceWithArguments(\"com.sun.star.configuration.ConfigurationUpdateAccess\", aNodePath())\n  \t\tElse\n  \t\t\tGetRegistryKeyContent() \u003d oConfigProvider.createInstanceWithArguments(\"com.sun.star.configuration.ConfigurationAccess\", aNodePath())\n  \t\tEnd If\n  \tEnd If\n  End Function\n\nwhich may be added to the test, to not depend on the library (no idea if the library is available for the test, if \u0027GlobalScope.BasicLibraries.LoadLibrary(\"Tools\")\u0027 would be called).",
      "revId": "ad4e0d3e9f4aeeb9688d962e4d416746876a4d92",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5087dac5_a4489c8e",
        "filename": "basic/source/runtime/methods1.cxx",
        "patchSetId": 8
      },
      "lineNbr": 2983,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2021-12-08T16:23:45Z",
      "side": 1,
      "message": "Yeah, I kinda agree that it is not good to expose this function to BASIC code. On the other hand, I don\u0027t like to write BASIC code like in your comment... And I guess it is possible to get environment variables from BASI, too? But oh well, it is not my own time that I am wasting;) Will spend some more days on this and do what you suggest.",
      "parentUuid": "fdf138b1_9f3c53a6",
      "revId": "ad4e0d3e9f4aeeb9688d962e4d416746876a4d92",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ede16b1_723ba8ef",
        "filename": "basic/source/runtime/methods1.cxx",
        "patchSetId": 8
      },
      "lineNbr": 2983,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-12-08T16:50:54Z",
      "side": 1,
      "message": "\u003e And I guess it is possible to get environment variables from BASI, too?\n\nAh yes, I forgot about the environment variable, sorry. Yes, there\u0027s Environ function:\nhttps://help.libreoffice.org/latest/en-US/text/sbasic/shared/03130800.html?DbPAR\u003dBASIC",
      "parentUuid": "5087dac5_a4489c8e",
      "revId": "ad4e0d3e9f4aeeb9688d962e4d416746876a4d92",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}