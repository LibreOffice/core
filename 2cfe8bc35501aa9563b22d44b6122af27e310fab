{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ee3a0ff0_86fdee49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-09T17:49:15Z",
      "side": 1,
      "message": "Hi Mike! These concordance files are written in LO using utf8. Should we just assume they are always in the utf8 charset or should we detect it using SwIoSystem::IsDetectableText? Thx for your help.",
      "revId": "2cfe8bc35501aa9563b22d44b6122af27e310fab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d986c11_93933e7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-01-09T18:47:07Z",
      "side": 1,
      "message": "It is obvious that the concordance files are expected to be encoded using system encoding. On Linux, it\u0027s *usually* (not always!) UTF-8; but on Windows, it\u0027s never UTF-8 (it\u0027s ACP, e.g. win-1251 on Russian localized Windows). If implemented as you do that, all Windows-specific concordance files will be broken.\n\nIt would be definitely be useful to detect encoding if possible. The stream has the StartReadingUnicodeText method (for BOM case); and maybe it makes sense to add another method to SvStream to detect encoding using ICU detector, to avoid multiplication of similar code.",
      "revId": "2cfe8bc35501aa9563b22d44b6122af27e310fab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "822d6d59_81cf82cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-09T19:12:17Z",
      "side": 1,
      "message": "Ack, strange that on my win machine without enabling utf8 system wide these files are written in utf8 ...",
      "parentUuid": "8d986c11_93933e7e",
      "revId": "2cfe8bc35501aa9563b22d44b6122af27e310fab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0562dd9f_3754d894",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-01-09T21:11:48Z",
      "side": 1,
      "message": "Hmm, maybe I overlook something - but even if they are always written in UTF-8, they would never be usable on the same system that way; so *if* someone ever uses them on Windows, they must have converted them to local encoding - which gives the same end result, with existing ACP-encoded files requiring special handling :-)",
      "parentUuid": "822d6d59_81cf82cf",
      "revId": "2cfe8bc35501aa9563b22d44b6122af27e310fab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}