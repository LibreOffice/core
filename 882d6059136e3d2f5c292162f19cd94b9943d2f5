{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0df99ca1_c99851ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-06-01T08:27:15Z",
      "side": 1,
      "message": "Hi Caolan, Michael!\nCould you please take a look what I\u0027m doing wrong here?\nI need an a11y for IconView, that would at least provide selected item name, when I drop the custom SM elements control and its custom a11y in https://gerrit.libreoffice.org/c/core/+/134761. But building the https://gerrit.libreoffice.org/c/core/+/134761 with all the chained dependency commits, I try NVDA on my Windows, and do not hear the names of the elements - no matter if I hover over using mouse, or click in the elements.\n\nI am completely noob in a11y, so obviously I do stupid things in a trained monkey way. Appreciate any pointers! Thank you.",
      "revId": "882d6059136e3d2f5c292162f19cd94b9943d2f5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f5ca98c_e3bf3b10",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2022-06-06T15:31:26Z",
      "side": 1,
      "message": "I\u0027m not a real expert here either...\n\nWith a (dummy) implementation of XAccessibleEventBroadcaster in SalInstanceIconViewItemAccessible, NVDA announces something when I hover over the items using the mouse, s. below diff which also has a a pointer to the relevant place in winaccessibility code that checks for this.\n\nI ran into an assert when trying this. A workaround (so the demo announcement works) is also contained in the below diff, but this looks like it would need a proper fix (and is unrelated to the implemenation of the XAccessibleEventBroadcaster methods).\n\nWith this in place, there\u0027s still no announcement for the keyboard navigation case, which *might* be due to a missing focus event, so AT doesn\u0027t become aware that focus has changed and doesn\u0027t announce the newly focused item.\nThe commented out code in SalInstanceIconViewItemAccessible::SetFocus looks \"suspicious\". Implementing the XAccessibleEventBroadcaster methods and emitting the  event from `SetFocus`, then checking whether this gets called when an item gets focused and whether this is propagated to winaccessibility/... as expected *might* work.\n\nAs a side note, with gtk3 after d79c527c2a599c7821d27cf03b95cb79e2abe685 (\"Use IconView in SmElementsControl\"):\n\n* I no longer see tooltips when hovering over the items\n* Math crashes when left-clicking any of the items\n\nShould I create 2 separate bug reports for that?\n\n\n    diff --git a/vcl/source/app/IconViewItemAccessible.hxx b/vcl/source/app/IconViewItemAccessible.hxx\n    index 8342a9fb3e96..850ef38d4984 100644\n    --- a/vcl/source/app/IconViewItemAccessible.hxx\n    +++ b/vcl/source/app/IconViewItemAccessible.hxx\n    @@ -24,6 +24,7 @@\n    #include \u003ccom/sun/star/accessibility/XAccessible.hpp\u003e\n    #include \u003ccom/sun/star/accessibility/XAccessibleAction.hpp\u003e\n    #include \u003ccom/sun/star/accessibility/XAccessibleComponent.hpp\u003e\n    +#include \u003ccom/sun/star/accessibility/XAccessibleEventBroadcaster.hpp\u003e\n    #include \u003ccom/sun/star/accessibility/XAccessibleStateSet.hpp\u003e\n    \n    #include \u003ccom/sun/star/awt/Rectangle.hpp\u003e\n    @@ -34,7 +35,8 @@ class SalInstanceIconView;\n    \n    using AccessibleSmElement_BASE \u003d cppu::WeakImplHelper\u003c\n        css::accessibility::XAccessible, css::accessibility::XAccessibleComponent,\n    -    css::accessibility::XAccessibleContext, css::accessibility::XAccessibleAction\u003e;\n    +    css::accessibility::XAccessibleContext, css::accessibility::XAccessibleAction,\n    +    css::accessibility::XAccessibleEventBroadcaster\u003e;\n    \n    class SalInstanceIconViewItemAccessible final : public AccessibleSmElement_BASE\n    {\n    @@ -86,6 +88,14 @@ public:\n        virtual css::uno::Reference\u003ccss::accessibility::XAccessibleKeyBinding\u003e\n            SAL_CALL getAccessibleActionKeyBinding(sal_Int32 nIndex) override;\n    \n    +    // XAccessibleEventBroadcaster, dummy implementations\n    +    virtual void SAL_CALL addAccessibleEventListener(\n    +        const css::uno::Reference\u003ccss::accessibility::XAccessibleEventListener\u003e\u0026 /*xListener*/)\n    +        override{};\n    +    virtual void SAL_CALL removeAccessibleEventListener(\n    +        const css::uno::Reference\u003ccss::accessibility::XAccessibleEventListener\u003e\u0026 /*xListener*/)\n    +        override{};\n    +\n    private:\n        SalInstanceIconView* m_pControl;\n        const sal_Int32 m_nIndex; ///\u003c index in the parent XAccessible\n    diff --git a/vcl/source/treelist/treelistbox.cxx b/vcl/source/treelist/treelistbox.cxx\n    index 962dd60cf53b..b47e139f3b46 100644\n    --- a/vcl/source/treelist/treelistbox.cxx\n    +++ b/vcl/source/treelist/treelistbox.cxx\n    @@ -1510,8 +1510,8 @@ OUString SvTreeListBox::GetEntryText(SvTreeListEntry* pEntry) const\n    {\n        assert(pEntry);\n        SvLBoxString* pItem \u003d static_cast\u003cSvLBoxString*\u003e(pEntry-\u003eGetFirstItem(SvLBoxItemType::String));\n    -    assert(pItem);\n    -    return pItem-\u003eGetText();\n    +    //assert(pItem); // this assert fails, return dummy text for demo\n    +    return pItem ? pItem-\u003eGetText() : \"hello world!\";\n    }\n    \n    const Image\u0026 SvTreeListBox::GetExpandedEntryBmp(const SvTreeListEntry* pEntry)\n    diff --git a/winaccessibility/source/service/AccObjectWinManager.cxx b/winaccessibility/source/service/AccObjectWinManager.cxx\n    index bcde1ccf46a4..4aebd30af803 100644\n    --- a/winaccessibility/source/service/AccObjectWinManager.cxx\n    +++ b/winaccessibility/source/service/AccObjectWinManager.cxx\n    @@ -713,7 +713,7 @@ bool AccObjectWinManager::InsertAccObj( XAccessible* pXAcc,XAccessible* pParentX\n            return false;\n        Reference\u003cXAccessibleComponent\u003e xComponent(pRContext,UNO_QUERY);\n        Reference\u003cXAccessibleEventBroadcaster\u003e broadcaster(xComponent,UNO_QUERY);\n    -    if (broadcaster.is())\n    +    if (broadcaster.is()) // see how this here is dependent on XAccessibleEventBroadcaster being implemented, and all of the below doesn\u0027t get done otherwise\n        {\n            Reference\u003cXAccessibleEventListener\u003e const xListener(pListener);\n            broadcaster-\u003eaddAccessibleEventListener(xListener);",
      "parentUuid": "0df99ca1_c99851ac",
      "revId": "882d6059136e3d2f5c292162f19cd94b9943d2f5",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}