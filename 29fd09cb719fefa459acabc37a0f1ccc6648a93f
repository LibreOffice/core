{
  "comments": [
    {
      "key": {
        "uuid": "abbb03c5_ad067f4d",
        "filename": "officecfg/registry/schema/org/openoffice/Office/Common.xcs",
        "patchSetId": 10
      },
      "lineNbr": 5673,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-03-29T07:48:52Z",
      "side": 1,
      "message": "If this check shall be done \"On Windows only\", it might be better to have this prop value default to false, and only set it to true for install:module\u003d\"wnt\" (cf. officecfg/registry/data/org/openoffice/Office/Common.xcu for similar such cases).",
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "118108e9_c25da074",
        "filename": "officecfg/registry/schema/org/openoffice/Office/Common.xcs",
        "patchSetId": 10
      },
      "lineNbr": 5673,
      "author": {
        "id": 1003042
      },
      "writtenOn": "2021-03-31T07:25:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abbb03c5_ad067f4d",
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d6c9cd7_d96c371d",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 83,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-03-27T08:30:21Z",
      "side": 1,
      "message": "Possibly cleaner is to just use two \u0027return\u0027 statements - where it\u0027s found, return true, and in the end, return false, instead of using this variable :-)\n\nBut it\u0027s just my preference; feel free to ignore this one.",
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c680ab5_8ff47a06",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 83,
      "author": {
        "id": 1003042
      },
      "writtenOn": "2021-03-31T07:25:03Z",
      "side": 1,
      "message": "Agree, adds to readability so you don\u0027t have to worry about changes to the variable.",
      "parentUuid": "6d6c9cd7_d96c371d",
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cda84a6_af4016f0",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 87,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-03-27T08:30:21Z",
      "side": 1,
      "message": "This is a standard syntax for WinAPI documentation, but we do not use C-style casts in the codebase. So please turn it into\n\n  static_cast\u003cPVOID\u003e(szRegPath)",
      "range": {
        "startLine": 87,
        "startChar": 27,
        "endLine": 87,
        "endChar": 34
      },
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b016d88f_ada2737a",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 87,
      "author": {
        "id": 1003042
      },
      "writtenOn": "2021-03-31T07:25:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cda84a6_af4016f0",
      "range": {
        "startLine": 87,
        "startChar": 27,
        "endLine": 87,
        "endChar": 34
      },
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9eceead_a487944c",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-03-27T08:30:21Z",
      "side": 1,
      "message": "Please be consistent. Use sizeof(WCHAR) :-)\n\nAnd why the \"- 2\" to the resulting *character* count?",
      "range": {
        "startLine": 94,
        "startChar": 59,
        "endLine": 94,
        "endChar": 60
      },
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c23857e_97664117",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-03-27T09:15:23Z",
      "side": 1,
      "message": "A gotcha here could be if the two strings are not canonical. GetModuleFileNameW will return the same type of path used for process launch (e.g., starting with \\\\?\\); registry value could have possibly relative components like \\..\\, \\.\\, and even \\\\...\n\nShould we use our own GetCaseCorrectPathName, or at least GetFullPathNameW WinAPI, before comparison?",
      "parentUuid": "a9eceead_a487944c",
      "range": {
        "startLine": 94,
        "startChar": 59,
        "endLine": 94,
        "endChar": 60
      },
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e79ee3b0_6ce16070",
        "filename": "vcl/win/app/fileregistration.cxx",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 1003042
      },
      "writtenOn": "2021-03-31T07:25:03Z",
      "side": 1,
      "message": "Good point, I shouldn\u0027t have hardcoded 2 (-2 was to account for the null terminating byte), but I removed the wcsnicmp  to do a std::wstring substring check because the process name could be prefixed with \"\\\\?\\\".  Also added GetLongPathNameW in case the process path or registry path contain short-path names (e.g. PROGRA~1).  GetFullPathNameW is added for process name because I could invoke CreateProcess with a \".\" or \"..\" in the path name, but it shouldn\u0027t be needed for registry name because I wasn\u0027t able to install LO with a \".\" or \"..\" in the install path.  UNC paths should also be handled fine; the only reason they wouldn\u0027t is if the process was invoked with the prefix \"\\\\?\\UNC\\\u003cservername\u003e\\\" or the user is mixing machine name and IP addresses.  I tested GetCaseCorrectPathName with a \"\\\\?\\UNC\\\u003cservername\u003e\\\" prefix and it doesn\u0027t change into any other form.  If we wanted to handle UNC cases any differently, we would probably want to use the WinAPI NetShareGetInfo to convert share names (or IP addresses) to local file system paths, and I\u0027m not sure we want to be doing all that in case the user is using their own machine as a share.",
      "parentUuid": "a9eceead_a487944c",
      "range": {
        "startLine": 94,
        "startChar": 59,
        "endLine": 94,
        "endChar": 60
      },
      "revId": "29fd09cb719fefa459acabc37a0f1ccc6648a93f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}