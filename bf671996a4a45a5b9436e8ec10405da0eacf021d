{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "94228dce_ee36f93a",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 16
      },
      "lineNbr": 29,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-29T09:43:36Z",
      "side": 1,
      "message": "here and elsewhere (also note the backslashes in the example Windows-style pathname for the icon): are you sure that these backslashes survive doxygen?",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9590ba09_eafd6e5d",
        "filename": "offapi/com/sun/star/system/windows/JumpListItem.idl",
        "patchSetId": 16
      },
      "lineNbr": 29,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-29T12:04:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94228dce_ee36f93a",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3504ae3_f837ec51",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-29T09:43:36Z",
      "side": 1,
      "message": "* either items removed by the user are silently ignored, or an exception is thrown if all the given items have been removed by the user, but both cannot be true\n\n* double \"or or\"",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d1e057_7e447f99",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-29T12:04:59Z",
      "side": 1,
      "message": "\u003e either items removed by the user are silently ignored, or an exception is thrown if all the given items have been removed by the user, but both cannot be true\n\nThe Windows API requires the the list to have at least one entry. So when the list contains only items which were removed by the user, the list I pass down to Windows API is empty, and the AppendCategory call fails.\n\nhttps://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nf-shobjidl_core-icustomdestinationlist-appendcategory#parameters\n\n\u003e double \"or or\"\n\nFixed.",
      "parentUuid": "c3504ae3_f837ec51",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6f8c5be_658ae824",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-29T12:18:24Z",
      "side": 1,
      "message": "\u003e \u003e either items removed by the user are silently ignored, or an exception is thrown if all the given items have been removed by the user, but both cannot be true\n\u003e \n\u003e The Windows API requires the the list to have at least one entry. So when the list contains only items which were removed by the user, the list I pass down to Windows API is empty, and the AppendCategory call fails.\n\ncan\u0027t you silently suppress the calls to ICustomDestinationList::AppendCategory/CommitList in that case?",
      "parentUuid": "84d1e057_7e447f99",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccfc80b7_581c69e7",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-29T12:22:50Z",
      "side": 1,
      "message": "I could, but then the existing JumpList (if there is one) would still be there and the user would not know why his call to update the Jump List did not succeed.\n\nIf the expected outcome in this case is, that the JumpList will be empty, then I  would have to call DeleteList.\n\nIn that case our API would work different than the MS API, but if you feel this is the way to go, I can implement it this way.",
      "parentUuid": "b6f8c5be_658ae824",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73f33e91_0d498a0e",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 65,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-29T12:28:21Z",
      "side": 1,
      "message": "\u003e I could, but then the existing JumpList (if there is one) would still be there and the user would not know why his call to update the Jump List did not succeed.\n\nah, right, the behavior would be unexpected if there was already an existing list with item A and removed item B, and you now call appendCategory with just B\n\n\u003e If the expected outcome in this case is, that the JumpList will be empty, then I  would have to call DeleteList.\n\u003e \n\u003e In that case our API would work different than the MS API, but if you feel this is the way to go, I can implement it this way.\n\nI have no actual domain-level input here, just naively tried to drill down to a UNO interface that brings as few unexpected surprises as possible :)   if you think the current state is good, that\u0027s totally fine with me",
      "parentUuid": "ccfc80b7_581c69e7",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74d6099f_6f2d8ca4",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-29T09:43:36Z",
      "side": 1,
      "message": "nitpick, here and elsewhere: \"empty\" implies \"invalid\", so doesn\u0027t need to be singled out here",
      "range": {
        "startLine": 66,
        "startChar": 33,
        "endLine": 66,
        "endChar": 49
      },
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "164866aa_8aaf4770",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 66,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-29T12:04:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74d6099f_6f2d8ca4",
      "range": {
        "startLine": 66,
        "startChar": 33,
        "endLine": 66,
        "endChar": 49
      },
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db3cd311_1784ac92",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 117,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-03-29T09:43:36Z",
      "side": 1,
      "message": "do you still expect client code to call this method, or should it better be removed now that the behavior of appendCategory has been changed?",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b89ecec9_be1433b8",
        "filename": "offapi/com/sun/star/system/windows/XJumpList.idl",
        "patchSetId": 16
      },
      "lineNbr": 117,
      "author": {
        "id": 1000166
      },
      "writtenOn": "2022-03-29T12:04:59Z",
      "side": 1,
      "message": "In my use case the client has its own data store with these destinations and it needs to know when the user removed one entry (the data store can also be viewed/edited from other places).\nSo I think this method should stay.",
      "parentUuid": "db3cd311_1784ac92",
      "revId": "bf671996a4a45a5b9436e8ec10405da0eacf021d",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}