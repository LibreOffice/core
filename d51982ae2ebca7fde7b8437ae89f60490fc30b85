{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fea99794_5c92d9d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-02-22T19:42:27Z",
      "side": 1,
      "message": "Might help with you MacOSX cross-build. It still passes the normal MacOSX build, so can you verify?",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faf8c620_463c1096",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2022-02-23T11:05:05Z",
      "side": 1,
      "message": "let me check",
      "parentUuid": "fea99794_5c92d9d3",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff0f9dc5_4d8eb9ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2022-02-23T11:19:51Z",
      "side": 1,
      "message": "Hi Jan-Marek,\nWith your patch in place, it fails somewhere else now, see https://paste.ee/p/q1x37",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d17ddd22_ee4a7619",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-02-23T14:17:52Z",
      "side": 1,
      "message": "You can check, if external/coinmp/ExternalProject_coinmp.mk needs the same fix to pass and update this patch, if it does. Maybe there is more. Just a reminder, that you can build single externals via \"make \u003cexternal\u003e\", so you don\u0027t need to start a full build for tests.",
      "parentUuid": "ff0f9dc5_4d8eb9ff",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "522c9ab9_3876a897",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2022-02-23T15:09:01Z",
      "side": 1,
      "message": "Hello,\nThanks for the hint. With the new patch, it builds for me after a make clean\n\n\n--host\u003dx86_64-apple-macos\n--build\u003dx86_64-apple-macos\n--disable-werror\n--disable-odk\n--with-package-format\u003ddmg\n--disable-online-update\n\nnot sure whether it might fail when using other options",
      "parentUuid": "d17ddd22_ee4a7619",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c0f2d31_02b4b438",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-02-23T19:14:36Z",
      "side": 1,
      "message": "So the current patch changes many more externals then I expected. I\u0027m beginning to wonder, if x86_64-apple-macos should actually be x86_64-apple-darwin... Also the reference of ICU in the commit message is now completely misleading.\n\nWhat happens, if you build using --build\u003dx86_64-apple-darwin?\n\nAnd you should just adapt the authorship to yourself. I just did a quick untested hack.",
      "parentUuid": "522c9ab9_3876a897",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45db93a3_1ad42a1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000179
      },
      "writtenOn": "2022-02-24T11:04:37Z",
      "side": 1,
      "message": "Hi Jan-marek,\nyes, it works if I use\n\n--host\u003dx86_64-apple-darwin\n--build\u003dx86_64-apple-darwin\n\nWithout this patch in place",
      "parentUuid": "4c0f2d31_02b4b438",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afcb8dfa_e5dbf764",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-02-24T11:22:18Z",
      "side": 1,
      "message": "If I look at https://ci.libreoffice.org/job/gerrit_mac/114064/consoleFull, it seems the config.guess defaults to darwin. So maybe the correct fix would be to error and abort configure, if *-apple-macos is detected in either --build or --host? And just tell the user to use *-apple-darwin instead?\n\nSeems more reasonable then always replacing macos with darwin.\n\nNow I just checked configure.ac and found https://git.libreoffice.org/core/+/refs/heads/master/configure.ac#987\n\nSo maybe just drop the special aarch64 case and make it the default by replacing macos with darwin for HOST_PLATFORM and BUILD_PLATFORM in there?",
      "parentUuid": "45db93a3_1ad42a1e",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79c6fd4d_230ee8e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000027
      },
      "writtenOn": "2022-02-24T11:35:17Z",
      "side": 1,
      "message": "could also just update our config.guess and have gb_UnpackedTarball_update_autoconf_configs add a file that knows about it...",
      "parentUuid": "afcb8dfa_e5dbf764",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1a27605_8ed0a49a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2022-02-24T11:50:19Z",
      "side": 1,
      "message": "\u003e could also just update our config.guess and have gb_UnpackedTarball_update_autoconf_configs add a file that knows about it...\n\nThe problem seems to be, that Xisco manually provided \n\n--host\u003dx86_64-apple-macos\n--build\u003dx86_64-apple-macos\n\nI guess that was valid at some point. For all I can see, macos is (now?) wrong. \"Automagically\" fixing that in configure.ac seems the easiest fix with a ${BUILD_PLATFORM/macos/darwin} and for HOST_PLATFORM.\nAnd then just add an add_warning, so the user can adapt. This way you can also drop the existing special handling in Firebird and NSS configure calls.\n\nOTOH I have no idea, if macos is still correct in some cases, where darwin wouldn\u0027t be, but from all the info I have, I would doubt that. Especially since I found that aarch64 case doing the same.",
      "parentUuid": "79c6fd4d_230ee8e8",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1cbc8ea_de3c6ddc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-02-24T12:36:19Z",
      "side": 1,
      "message": "\u003e \"Automagically\" fixing that in configure.ac seems the easiest fix with a ${BUILD_PLATFORM/macos/darwin} and for HOST_PLATFORM.\n\u003e And then just add an add_warning, so the user can adapt.\n\nWhy do the automagic rewrite?  Just providing an error in configure.ac is fine IMO and avoids carrying any unnecessary baggage.\n\nWhere does that idea of $host_os \u003d \u0027macos*\u0027 come from anyway?  At least my two macOS boxes both report $host_os \u003d \u0027darwin*\u0027 if I run ./autogen.sh without any manually specified --host\u003d... or --build\u003d...",
      "parentUuid": "b1a27605_8ed0a49a",
      "revId": "d51982ae2ebca7fde7b8437ae89f60490fc30b85",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}