/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef INCLUDED_SM_INC_STRINGS_HRC
#define INCLUDED_SM_INC_STRINGS_HRC

#define N_(String) (u8##String)

#define RID_PLUSX_HELP                      N_("+ Sign" )
#define RID_MINUSX_HELP                     N_("- Sign" )
#define RID_PLUSMINUSX_HELP                 N_("+- Sign" )
#define RID_MINUSPLUSX_HELP                 N_("-+ Sign" )
#define RID_NEGX_HELP                       N_("Boolean NOT" )
#define RID_XPLUSY_HELP                     N_("Addition +" )
#define RID_XMINUSY_HELP                    N_("Subtraction -" )
#define RID_XCDOTY_HELP                     N_("Multiplication (Dot)" )
#define RID_XTIMESY_HELP                    N_("Multiplication (x)" )
#define RID_XSYMTIMESY_HELP                 N_("Multiplication (*)" )
#define RID_XSYMDIVIDEY_HELP                N_("Division (Slash)" )
#define RID_XDIVY_HELP                      N_("Division (รท)" )
#define RID_XOVERY_HELP                     N_("Division (Fraction)" )
#define RID_XODIVIDEY_HELP                  N_("Circled Slash" )
#define RID_XODOTY_HELP                     N_("Circled Dot" )
#define RID_XOMINUSY_HELP                   N_("Circled Minus" )
#define RID_XOPLUSY_HELP                    N_("Circled Plus" )
#define RID_XOTIMESY_HELP                   N_("Tensor Product" )
#define RID_XANDY_HELP                      N_("Boolean AND" )
#define RID_XORY_HELP                       N_("Boolean OR" )
#define RID_XEQY_HELP                       N_("Is Equal" )
#define RID_XNEQY_HELP                      N_("Is Not Equal" )
#define RID_XLTY_HELP                       N_("Is Less Than" )
#define RID_XGTY_HELP                       N_("Is Greater Than" )
#define RID_XLEY_HELP                       N_("Is Less Than Or Equal To" )
#define RID_XGEY_HELP                       N_("Is Greater Than Or Equal To" )
#define RID_XLESLANTY_HELP                  N_("Is Less Than Or Equal To" )
#define RID_XGESLANTY_HELP                  N_("Is Greater Than Or Equal To" )
#define RID_XLLY_HELP                       N_("Is Much Less Than" )
#define RID_XGGY_HELP                       N_("Is Much Greater Than" )
#define RID_XDEFY_HELP                      N_("Is Defined As" )
#define RID_XEQUIVY_HELP                    N_("Is Congruent To" )
#define RID_XAPPROXY_HELP                   N_("Is Approximately Equal" )
#define RID_XSIMY_HELP                      N_("Is Similar To" )
#define RID_XSIMEQY_HELP                    N_("Is Similar Or Equal" )
#define RID_XPROPY_HELP                     N_("Is Proportional To" )
#define RID_XORTHOY_HELP                    N_("Is Orthogonal To" )
#define RID_XPARALLELY_HELP                 N_("Is Parallel To" )
#define RID_XTOWARDY_HELP                   N_("Toward" )
#define RID_XTRANSLY_HELP                   N_("Corresponds To (Left)" )
#define RID_XTRANSRY_HELP                   N_("Corresponds To (Right)" )
#define RID_XINY_HELP                       N_("Is In" )
#define RID_XNOTINY_HELP                    N_("Is Not In" )
#define RID_XOWNSY_HELP                     N_("Owns" )
#define RID_XUNIONY_HELP                    N_("Union" )
#define RID_XINTERSECTIONY_HELP             N_("Intersection" )
#define RID_XSETMINUSY_HELP                 N_("Difference" )
#define RID_XSLASHY_HELP                    N_("Quotient Set" )
#define RID_XSUBSETY_HELP                   N_("Subset" )
#define RID_XSUBSETEQY_HELP                 N_("Subset Or Equal To" )
#define RID_XSUPSETY_HELP                   N_("Superset" )
#define RID_XSUPSETEQY_HELP                 N_("Superset Or Equal To" )
#define RID_XNSUBSETY_HELP                  N_("Not Subset" )
#define RID_XNSUBSETEQY_HELP                N_("Not Subset Or Equal" )
#define RID_XNSUPSETY_HELP                  N_("Not Superset" )
#define RID_XNSUPSETEQY_HELP                N_("Not Superset Or Equal" )
#define RID_ABSX_HELP                       N_("Absolute Value" )
#define RID_FACTX_HELP                      N_("Factorial" )
#define RID_SQRTX_HELP                      N_("Square Root" )
#define RID_NROOTXY_HELP                    N_("N-th Root" )
#define RID_EX_HELP                         N_("Exponential Function" )
#define RID_EXPX_HELP                       N_("Exponential Function" )
#define RID_LNX_HELP                        N_("Natural Logarithm" )
#define RID_LOGX_HELP                       N_("Logarithm" )
#define RID_SINX_HELP                       N_("Sine" )
#define RID_COSX_HELP                       N_("Cosine" )
#define RID_TANX_HELP                       N_("Tangent" )
#define RID_COTX_HELP                       N_("Cotangent" )
#define RID_ARCSINX_HELP                    N_("Arcsine" )
#define RID_ARCCOSX_HELP                    N_("Arccosine" )
#define RID_ARCTANX_HELP                    N_("Arctangent" )
#define RID_ARCCOTX_HELP                    N_("Arccotangent" )
#define RID_SINHX_HELP                      N_("Hyperbolic Sine" )
#define RID_COSHX_HELP                      N_("Hyperbolic Cosine" )
#define RID_TANHX_HELP                      N_("Hyperbolic Tangent" )
#define RID_COTHX_HELP                      N_("Hyperbolic Cotangent" )
#define RID_ARSINHX_HELP                    N_("Area Hyperbolic Sine" )
#define RID_ARCOSHX_HELP                    N_("Area Hyperbolic Cosine" )
#define RID_ARTANHX_HELP                    N_("Area Hyperbolic Tangent" )
#define RID_ARCOTHX_HELP                    N_("Area Hyperbolic Cotangent" )
#define RID_SUMX_HELP                       N_("Sum" )
#define RID_SUM_FROMX_HELP                  N_("Sum Subscript Bottom" )
#define RID_SUM_TOX_HELP                    N_("Sum Superscript Top" )
#define RID_SUM_FROMTOX_HELP                N_("Sum Sup/Sub script" )
#define RID_PRODX_HELP                      N_("Product" )
#define RID_PROD_FROMX_HELP                 N_("Product Subscript Bottom" )
#define RID_PROD_TOX_HELP                   N_("Product Superscript Top" )
#define RID_PROD_FROMTOX_HELP               N_("Product Sup/Sub script" )
#define RID_COPRODX_HELP                    N_("Coproduct" )
#define RID_COPROD_FROMX_HELP               N_("Coproduct Subscript Bottom" )
#define RID_COPROD_TOX_HELP                 N_("Coproduct Superscript Top" )
#define RID_COPROD_FROMTOX_HELP             N_("Coproduct Sup/Sub script" )
#define RID_LIMX_HELP                       N_("Limes" )
#define RID_LIM_FROMX_HELP                  N_("Limes Subscript Bottom" )
#define RID_LIM_TOX_HELP                    N_("Limes Superscript Top" )
#define RID_LIM_FROMTOX_HELP                N_("Limes Sup/Sub script" )
#define RID_LIMINFX_HELP                    N_("Limit Inferior" )
#define RID_LIMINF_FROMX_HELP               N_("Limit Inferior Subscript Bottom" )
#define RID_LIMINF_TOX_HELP                 N_("Limit Inferior Superscript Top" )
#define RID_LIMINF_FROMTOX_HELP             N_("Limit Inferior Sup/Sub script" )
#define RID_LIMSUPX_HELP                    N_("Limit Superior" )
#define RID_LIMSUP_FROMX_HELP               N_("Limit Superior Subscript Bottom" )
#define RID_LIMSUP_TOX_HELP                 N_("Limit Superior Superscript Top" )
#define RID_LIMSUP_FROMTOX_HELP             N_("Limit Superior Sup/Sub script" )
#define RID_EXISTS_HELP                     N_("There Exists" )
#define RID_NOTEXISTS_HELP                  N_("There Not Exists" )
#define RID_FORALL_HELP                     N_("For all" )
#define RID_INTX_HELP                       N_("Integral" )
#define RID_INT_FROMX_HELP                  N_("Integral Subscript Bottom" )
#define RID_INT_TOX_HELP                    N_("Integral Superscript Top" )
#define RID_INT_FROMTOX_HELP                N_("Integral Sup/Sub script" )
#define RID_IINTX_HELP                      N_("Double Integral" )
#define RID_IINT_FROMX_HELP                 N_("Double Integral Subscript Bottom" )
#define RID_IINT_TOX_HELP                   N_("Double Integral Superscript Top" )
#define RID_IINT_FROMTOX_HELP               N_("Double Integral Sup/Sub script" )
#define RID_IIINTX_HELP                     N_("Triple Integral" )
#define RID_IIINT_FROMX_HELP                N_("Triple Integral Subscript Bottom" )
#define RID_IIINT_TOX_HELP                  N_("Triple Integral Superscript Top" )
#define RID_IIINT_FROMTOX_HELP              N_("Triple Integral Sup/Sub script" )
#define RID_LINTX_HELP                      N_("Curve Integral" )
#define RID_LINT_FROMX_HELP                 N_("Curve Integral Subscript Bottom" )
#define RID_LINT_TOX_HELP                   N_("Curve Integral Superscript Top" )
#define RID_LINT_FROMTOX_HELP               N_("Curve Integral Sup/Sub script" )
#define RID_LLINTX_HELP                     N_("Double Curve Integral" )
#define RID_LLINT_FROMX_HELP                N_("Double Curve Integral Subscript Bottom" )
#define RID_LLINT_TOX_HELP                  N_("Double Curve Integral Superscript Top" )
#define RID_LLINT_FROMTOX_HELP              N_("Double Curve Integral Sup/Sub script" )
#define RID_LLLINTX_HELP                    N_("Triple Curve Integral" )
#define RID_LLLINT_FROMX_HELP               N_("Triple Curve Integral Subscript Bottom" )
#define RID_LLLINT_TOX_HELP                 N_("Triple Curve Integral Superscript Top" )
#define RID_LLLINT_FROMTOX_HELP             N_("Triple Curve Integral Sup/Sub script" )
#define RID_ACUTEX_HELP                     N_("Acute Accent" )
#define RID_BARX_HELP                       N_("Line Above" )
#define RID_BREVEX_HELP                     N_("Breve" )
#define RID_CHECKX_HELP                     N_("Reverse Circumflex" )
#define RID_CIRCLEX_HELP                    N_("Circle" )
#define RID_DOTX_HELP                       N_("Dot" )
#define RID_DDOTX_HELP                      N_("Double Dot" )
#define RID_DDDOTX_HELP                     N_("Triple Dot" )
#define RID_GRAVEX_HELP                     N_("Grave Accent" )
#define RID_HATX_HELP                       N_("Circumflex" )
#define RID_TILDEX_HELP                     N_("Tilde" )
#define RID_VECX_HELP                       N_("Vector Arrow" )
#define RID_UNDERLINEX_HELP                 N_("Line Below" )
#define RID_OVERLINEX_HELP                  N_("Line Over" )
#define RID_OVERSTRIKEX_HELP                N_("Line Through" )
#define RID_PHANTOMX_HELP                   N_("Transparent" )
#define RID_BOLDX_HELP                      N_("Bold Font" )
#define RID_ITALX_HELP                      N_("Italic Font" )
#define RID_SIZEXY_HELP                     N_("Resize" )
#define RID_FONTXY_HELP                     N_("Change Font" )
#define RID_COLORX_BLACK_HELP               N_("Color Black" )
#define RID_COLORX_BLUE_HELP                N_("Color Blue" )
#define RID_COLORX_GREEN_HELP               N_("Color Green" )
#define RID_COLORX_RED_HELP                 N_("Color Red" )
#define RID_COLORX_CYAN_HELP                N_("Color Cyan" )
#define RID_COLORX_MAGENTA_HELP             N_("Color Magenta" )
#define RID_COLORX_GRAY_HELP                N_("Color Gray" )
#define RID_COLORX_LIME_HELP                N_("Color Lime" )
#define RID_COLORX_MAROON_HELP              N_("Color Maroon" )
#define RID_COLORX_NAVY_HELP                N_("Color Navy" )
#define RID_COLORX_OLIVE_HELP               N_("Color Olive" )
#define RID_COLORX_PURPLE_HELP              N_("Color Purple" )
#define RID_COLORX_SILVER_HELP              N_("Color Silver" )
#define RID_COLORX_TEAL_HELP                N_("Color Teal" )
#define RID_COLORX_YELLOW_HELP              N_("Color Yellow" )
#define RID_LRGROUPX_HELP                   N_("Group Brackets" )
#define RID_LRPARENTX_HELP                  N_("Round Brackets" )
#define RID_LRBRACKETX_HELP                 N_("Square Brackets" )
#define RID_LRDBRACKETX_HELP                N_("Double Square Brackets" )
#define RID_LRBRACEX_HELP                   N_("Braces" )
#define RID_LRANGLEX_HELP                   N_("Angle Brackets" )
#define RID_LRCEILX_HELP                    N_("Upper Ceil" )
#define RID_LRFLOORX_HELP                   N_("Floor" )
#define RID_LRLINEX_HELP                    N_("Single Lines" )
#define RID_LRDLINEX_HELP                   N_("Double Lines" )
#define RID_LMRANGLEXY_HELP                 N_("Operator Brackets" )
#define RID_SLRPARENTX_HELP                 N_("Round Brackets (Scalable)" )
#define RID_SLRBRACKETX_HELP                N_("Square Brackets (Scalable)" )
#define RID_SLRDBRACKETX_HELP               N_("Double Square Brackets (Scalable)" )
#define RID_SLRBRACEX_HELP                  N_("Braces (Scalable)" )
#define RID_SLRANGLEX_HELP                  N_("Angle Brackets (Scalable)" )
#define RID_SLRCEILX_HELP                   N_("Ceiling (Scalable)" )
#define RID_SLRFLOORX_HELP                  N_("Floor (Scalable)" )
#define RID_SLRLINEX_HELP                   N_("Single Lines (Scalable)" )
#define RID_SLRDLINEX_HELP                  N_("Double Lines (Scalable)" )
#define RID_SLMRANGLEXY_HELP                N_("Operator Brackets (Scalable)" )
#define RID_XEVALUATEDATY_HELP              N_("Evaluated At" )
#define RID_XOVERBRACEY_HELP                N_("Braces Top (Scalable)" )
#define RID_XUNDERBRACEY_HELP               N_("Braces Bottom (Scalable)" )
#define RID_RSUBX_HELP                      N_("Subscript Right" )
#define RID_RSUPX_HELP                      N_("Power" )
#define RID_LSUBX_HELP                      N_("Subscript Left" )
#define RID_LSUPX_HELP                      N_("Superscript Left" )
#define RID_CSUBX_HELP                      N_("Subscript Bottom" )
#define RID_CSUPX_HELP                      N_("Superscript Top" )
#define RID_SBLANK_HELP                     N_("Small Gap" )
#define RID_BLANK_HELP                      N_("Blank" )
#define RID_NEWLINE_HELP                    N_("New Line" )
#define RID_BINOMXY_HELP                    N_("Vertical Stack (2 Elements)")
#define RID_STACK_HELP                      N_("Vertical Stack" )
#define RID_MATRIX_HELP                     N_("Matrix Stack" )
#define RID_ALIGNLX_HELP                    N_("Align Left" )
#define RID_ALIGNCX_HELP                    N_("Align Center" )
#define RID_ALIGNRX_HELP                    N_("Align Right" )
#define RID_ALEPH_HELP                      N_("Aleph" )
#define RID_EMPTYSET_HELP                   N_("Empty Set" )
#define RID_RE_HELP                         N_("Real Part" )
#define RID_IM_HELP                         N_("Imaginary Part" )
#define RID_INFINITY_HELP                   N_("Infinity" )
#define RID_PARTIAL_HELP                    N_("Partial" )
#define RID_NABLA_HELP                      N_("Nabla" )
#define RID_WP_HELP                         N_("Weierstrass p" )
#define RID_DOTSAXIS_HELP                   N_("Dots In Middle" )
#define RID_DOTSUP_HELP                     N_("Dots To Top" )
#define RID_DOTSDOWN_HELP                   N_("Dots To Bottom" )
#define RID_DOTSLOW_HELP                    N_("Dots At Bottom" )
#define RID_DOTSVERT_HELP                   N_("Dots Vertically" )
#define RID_XCIRCY_HELP                     N_("Concatenate" )
#define RID_XWIDESLASHY_HELP                N_("Division (wideslash)" )
#define RID_XWIDEBSLASHY_HELP               N_("Division (counter wideslash)" )
#define RID_XDIVIDESY_HELP                  N_("Divides" )
#define RID_XNDIVIDESY_HELP                 N_("Does Not Divide" )
#define RID_DLARROW_HELP                    N_("Double Arrow Left" )
#define RID_DLRARROW_HELP                   N_("Double Arrow Left And Right" )
#define RID_DRARROW_HELP                    N_("Double Arrow Right" )
#define RID_SETN_HELP                       N_("Natural Numbers Set" )
#define RID_SETZ_HELP                       N_("Integers Set" )
#define RID_SETQ_HELP                       N_("Set of Rational Numbers" )
#define RID_SETR_HELP                       N_("Real Numbers Set" )
#define RID_SETC_HELP                       N_("Complex Numbers Set" )
#define RID_WIDEHATX_HELP                   N_("Large Circumflex" )
#define RID_WIDETILDEX_HELP                 N_("Large Tilde" )
#define RID_WIDEVECX_HELP                   N_("Large Vector Arrow" )
#define RID_HBAR_HELP                       N_("h Bar" )
#define RID_LAMBDABAR_HELP                  N_("Lambda Bar" )
#define RID_LEFTARROW_HELP                  N_("Left Arrow" )
#define RID_RIGHTARROW_HELP                 N_("Right Arrow" )
#define RID_UPARROW_HELP                    N_("Up Arrow" )
#define RID_DOWNARROW_HELP                  N_("Down Arrow" )
#define RID_NOSPACE_HELP                    N_("No space" )
#define RID_XPRECEDESY_HELP                 N_("Precedes" )
#define RID_XPRECEDESEQUALY_HELP            N_("Precedes or equal to" )
#define RID_XPRECEDESEQUIVY_HELP            N_("Precedes or equivalent to" )
#define RID_XSUCCEEDSY_HELP                 N_("Succeeds" )
#define RID_XSUCCEEDSEQUALY_HELP            N_("Succeeds or equal to" )
#define RID_XSUCCEEDSEQUIVY_HELP            N_("Succeeds or equivalent to" )
#define RID_XNOTPRECEDESY_HELP              N_("Not precedes" )
#define RID_XNOTSUCCEEDSY_HELP              N_("Not succeeds" )
#define RID_CATEGORY_UNARY_BINARY_OPERATORS N_("Unary/Binary Operators" )
#define RID_CATEGORY_RELATIONS              N_("Relations" )
#define RID_CATEGORY_SET_OPERATIONS         N_("Set Operations" )
#define RID_CATEGORY_FUNCTIONS              N_("Functions" )
#define RID_CATEGORY_OPERATORS              N_("Operators" )
#define RID_CATEGORY_ATTRIBUTES             N_("Attributes" )
#define RID_CATEGORY_BRACKETS               N_("Brackets" )
#define RID_CATEGORY_FORMATS                N_("Formats" )
#define RID_CATEGORY_OTHERS                 N_("Others" )
#define RID_CATEGORY_EXAMPLES               N_("Examples" )

#define RID_FONTREGULAR                     N_("Standard" )
#define RID_FONTITALIC                      N_("Italic" )
#define RID_FONTBOLD                        N_("Bold" )
#define STR_BLACK                           N_("black" )
#define STR_BLUE                            N_("blue" )
#define STR_GREEN                           N_("green" )
#define STR_RED                             N_("red" )
#define STR_CYAN                            N_("cyan" )
#define STR_MAGENTA                         N_("magenta" )
#define STR_GRAY                            N_("gray" )
#define STR_LIME                            N_("lime" )
#define STR_MAROON                          N_("maroon" )
#define STR_NAVY                            N_("navy" )
#define STR_OLIVE                           N_("olive" )
#define STR_PURPLE                          N_("purple" )
#define STR_SILVER                          N_("silver" )
#define STR_TEAL                            N_("teal" )
#define STR_YELLOW                          N_("yellow" )
#define STR_HIDE                            N_("hide" )
#define STR_SIZE                            N_("size" )
#define STR_FONT                            N_("font" )
#define STR_ALIGN_LEFT                      N_("left" )
#define STR_ALIGN_CENTER                    N_("center" )
#define STR_ALIGN_RIGHT                     N_("right" )
#define STR_CMDBOXWINDOW                    N_("Commands" )
#define RID_DOCUMENTSTR                     N_("Formula" )
#define STR_STATSTR_READING                 N_("Loading document..." )
#define STR_STATSTR_WRITING                 N_("Saving document..." )
#define STR_MATH_DOCUMENT_FULLTYPE_CURRENT  N_("%PRODUCTNAME %PRODUCTVERSION Formula")
#define RID_ERR_IDENT                       N_("ERROR : " )
#define RID_ERR_UNEXPECTEDCHARACTER         N_("Unexpected character" )
#define RID_ERR_UNEXPECTEDTOKEN             N_("Unexpected token" )
#define RID_ERR_LGROUPEXPECTED              N_("'{' expected" )
#define RID_ERR_RGROUPEXPECTED              N_("'}' expected" )
#define RID_ERR_LBRACEEXPECTED              N_("'(' expected" )
#define RID_ERR_RBRACEEXPECTED              N_("')' expected" )
#define RID_ERR_PARENTMISMATCH              N_("Left and right symbols mismatched" )
#define RID_ERR_FONTEXPECTED                N_("'fixed', 'sans', or 'serif' expected" )
#define RID_ERR_SIZEEXPECTED                N_("'size' followed by an unexpected token" )
#define RID_ERR_DOUBLEALIGN                 N_("Double aligning is not allowed" )
#define RID_ERR_DOUBLESUBSUPSCRIPT          N_("Double sub/superscripts is not allowed" )
#define RID_ERR_POUNDEXPECTED               N_("'#' expected" )
#define RID_ERR_COLOREXPECTED               N_("Color required" )
#define RID_ERR_RIGHTEXPECTED               N_("'RIGHT' expected" )
#define RID_PRINTUIOPT_PRODNAME             N_("%PRODUCTNAME %s" )
#define RID_PRINTUIOPT_CONTENTS             N_("Contents" )
#define RID_PRINTUIOPT_TITLE                N_("~Title" )
#define RID_PRINTUIOPT_FRMLTXT              N_("~Formula text" )
#define RID_PRINTUIOPT_BORDERS              N_("B~orders" )
#define RID_PRINTUIOPT_SIZE                 N_("Size" )
#define RID_PRINTUIOPT_ORIGSIZE             N_("O~riginal size" )
#define RID_PRINTUIOPT_FITTOPAGE            N_("Fit to ~page" )
#define RID_PRINTUIOPT_SCALING              N_("~Scaling" )

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
