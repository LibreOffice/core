/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef INCLUDED_SM_INC_STRINGS_HRC
#define INCLUDED_SM_INC_STRINGS_HRC

#define NC_(Context, String) (Context "\004" u8##String)

#define RID_PLUSX_HELP                      NC_("RID_PLUSX_HELP", "+ Sign" )
#define RID_MINUSX_HELP                     NC_("RID_MINUSX_HELP", "- Sign" )
#define RID_PLUSMINUSX_HELP                 NC_("RID_PLUSMINUSX_HELP", "+- Sign" )
#define RID_MINUSPLUSX_HELP                 NC_("RID_MINUSPLUSX_HELP", "-+ Sign" )
#define RID_NEGX_HELP                       NC_("RID_NEGX_HELP", "Boolean NOT" )
#define RID_XPLUSY_HELP                     NC_("RID_XPLUSY_HELP", "Addition +" )
#define RID_XMINUSY_HELP                    NC_("RID_XMINUSY_HELP", "Subtraction -" )
#define RID_XCDOTY_HELP                     NC_("RID_XCDOTY_HELP", "Multiplication (Dot)" )
#define RID_XTIMESY_HELP                    NC_("RID_XTIMESY_HELP", "Multiplication (x)" )
#define RID_XSYMTIMESY_HELP                 NC_("RID_XSYMTIMESY_HELP", "Multiplication (*)" )
#define RID_XSYMDIVIDEY_HELP                NC_("RID_XSYMDIVIDEY_HELP", "Division (Slash)" )
#define RID_XDIVY_HELP                      NC_("RID_XDIVY_HELP", "Division (รท)" )
#define RID_XOVERY_HELP                     NC_("RID_XOVERY_HELP", "Division (Fraction)" )
#define RID_XODIVIDEY_HELP                  NC_("RID_XODIVIDEY_HELP", "Circled Slash" )
#define RID_XODOTY_HELP                     NC_("RID_XODOTY_HELP", "Circled Dot" )
#define RID_XOMINUSY_HELP                   NC_("RID_XOMINUSY_HELP", "Circled Minus" )
#define RID_XOPLUSY_HELP                    NC_("RID_XOPLUSY_HELP", "Circled Plus" )
#define RID_XOTIMESY_HELP                   NC_("RID_XOTIMESY_HELP", "Tensor Product" )
#define RID_XANDY_HELP                      NC_("RID_XANDY_HELP", "Boolean AND" )
#define RID_XORY_HELP                       NC_("RID_XORY_HELP", "Boolean OR" )
#define RID_XEQY_HELP                       NC_("RID_XEQY_HELP", "Is Equal" )
#define RID_XNEQY_HELP                      NC_("RID_XNEQY_HELP", "Is Not Equal" )
#define RID_XLTY_HELP                       NC_("RID_XLTY_HELP", "Is Less Than" )
#define RID_XGTY_HELP                       NC_("RID_XGTY_HELP", "Is Greater Than" )
#define RID_XLEY_HELP                       NC_("RID_XLEY_HELP", "Is Less Than Or Equal To" )
#define RID_XGEY_HELP                       NC_("RID_XGEY_HELP", "Is Greater Than Or Equal To" )
#define RID_XLESLANTY_HELP                  NC_("RID_XLESLANTY_HELP", "Is Less Than Or Equal To" )
#define RID_XGESLANTY_HELP                  NC_("RID_XGESLANTY_HELP", "Is Greater Than Or Equal To" )
#define RID_XLLY_HELP                       NC_("RID_XLLY_HELP", "Is Much Less Than" )
#define RID_XGGY_HELP                       NC_("RID_XGGY_HELP", "Is Much Greater Than" )
#define RID_XDEFY_HELP                      NC_("RID_XDEFY_HELP", "Is Defined As" )
#define RID_XEQUIVY_HELP                    NC_("RID_XEQUIVY_HELP", "Is Congruent To" )
#define RID_XAPPROXY_HELP                   NC_("RID_XAPPROXY_HELP", "Is Approximately Equal" )
#define RID_XSIMY_HELP                      NC_("RID_XSIMY_HELP", "Is Similar To" )
#define RID_XSIMEQY_HELP                    NC_("RID_XSIMEQY_HELP", "Is Similar Or Equal" )
#define RID_XPROPY_HELP                     NC_("RID_XPROPY_HELP", "Is Proportional To" )
#define RID_XORTHOY_HELP                    NC_("RID_XORTHOY_HELP", "Is Orthogonal To" )
#define RID_XPARALLELY_HELP                 NC_("RID_XPARALLELY_HELP", "Is Parallel To" )
#define RID_XTOWARDY_HELP                   NC_("RID_XTOWARDY_HELP", "Toward" )
#define RID_XTRANSLY_HELP                   NC_("RID_XTRANSLY_HELP", "Corresponds To (Left)" )
#define RID_XTRANSRY_HELP                   NC_("RID_XTRANSRY_HELP", "Corresponds To (Right)" )
#define RID_XINY_HELP                       NC_("RID_XINY_HELP", "Is In" )
#define RID_XNOTINY_HELP                    NC_("RID_XNOTINY_HELP", "Is Not In" )
#define RID_XOWNSY_HELP                     NC_("RID_XOWNSY_HELP", "Owns" )
#define RID_XUNIONY_HELP                    NC_("RID_XUNIONY_HELP", "Union" )
#define RID_XINTERSECTIONY_HELP             NC_("RID_XINTERSECTIONY_HELP", "Intersection" )
#define RID_XSETMINUSY_HELP                 NC_("RID_XSETMINUSY_HELP", "Difference" )
#define RID_XSLASHY_HELP                    NC_("RID_XSLASHY_HELP", "Quotient Set" )
#define RID_XSUBSETY_HELP                   NC_("RID_XSUBSETY_HELP", "Subset" )
#define RID_XSUBSETEQY_HELP                 NC_("RID_XSUBSETEQY_HELP", "Subset Or Equal To" )
#define RID_XSUPSETY_HELP                   NC_("RID_XSUPSETY_HELP", "Superset" )
#define RID_XSUPSETEQY_HELP                 NC_("RID_XSUPSETEQY_HELP", "Superset Or Equal To" )
#define RID_XNSUBSETY_HELP                  NC_("RID_XNSUBSETY_HELP", "Not Subset" )
#define RID_XNSUBSETEQY_HELP                NC_("RID_XNSUBSETEQY_HELP", "Not Subset Or Equal" )
#define RID_XNSUPSETY_HELP                  NC_("RID_XNSUPSETY_HELP", "Not Superset" )
#define RID_XNSUPSETEQY_HELP                NC_("RID_XNSUPSETEQY_HELP", "Not Superset Or Equal" )
#define RID_ABSX_HELP                       NC_("RID_ABSX_HELP", "Absolute Value" )
#define RID_FACTX_HELP                      NC_("RID_FACTX_HELP", "Factorial" )
#define RID_SQRTX_HELP                      NC_("RID_SQRTX_HELP", "Square Root" )
#define RID_NROOTXY_HELP                    NC_("RID_NROOTXY_HELP", "N-th Root" )
#define RID_EX_HELP                         NC_("RID_EX_HELP", "Exponential Function" )
#define RID_EXPX_HELP                       NC_("RID_EXPX_HELP", "Exponential Function" )
#define RID_LNX_HELP                        NC_("RID_LNX_HELP", "Natural Logarithm" )
#define RID_LOGX_HELP                       NC_("RID_LOGX_HELP", "Logarithm" )
#define RID_SINX_HELP                       NC_("RID_SINX_HELP", "Sine" )
#define RID_COSX_HELP                       NC_("RID_COSX_HELP", "Cosine" )
#define RID_TANX_HELP                       NC_("RID_TANX_HELP", "Tangent" )
#define RID_COTX_HELP                       NC_("RID_COTX_HELP", "Cotangent" )
#define RID_ARCSINX_HELP                    NC_("RID_ARCSINX_HELP", "Arcsine" )
#define RID_ARCCOSX_HELP                    NC_("RID_ARCCOSX_HELP", "Arccosine" )
#define RID_ARCTANX_HELP                    NC_("RID_ARCTANX_HELP", "Arctangent" )
#define RID_ARCCOTX_HELP                    NC_("RID_ARCCOTX_HELP", "Arccotangent" )
#define RID_SINHX_HELP                      NC_("RID_SINHX_HELP", "Hyperbolic Sine" )
#define RID_COSHX_HELP                      NC_("RID_COSHX_HELP", "Hyperbolic Cosine" )
#define RID_TANHX_HELP                      NC_("RID_TANHX_HELP", "Hyperbolic Tangent" )
#define RID_COTHX_HELP                      NC_("RID_COTHX_HELP", "Hyperbolic Cotangent" )
#define RID_ARSINHX_HELP                    NC_("RID_ARSINHX_HELP", "Area Hyperbolic Sine" )
#define RID_ARCOSHX_HELP                    NC_("RID_ARCOSHX_HELP", "Area Hyperbolic Cosine" )
#define RID_ARTANHX_HELP                    NC_("RID_ARTANHX_HELP", "Area Hyperbolic Tangent" )
#define RID_ARCOTHX_HELP                    NC_("RID_ARCOTHX_HELP", "Area Hyperbolic Cotangent" )
#define RID_SUMX_HELP                       NC_("RID_SUMX_HELP", "Sum" )
#define RID_SUM_FROMX_HELP                  NC_("RID_SUM_FROMX_HELP", "Sum Subscript Bottom" )
#define RID_SUM_TOX_HELP                    NC_("RID_SUM_TOX_HELP", "Sum Superscript Top" )
#define RID_SUM_FROMTOX_HELP                NC_("RID_SUM_FROMTOX_HELP", "Sum Sup/Sub script" )
#define RID_PRODX_HELP                      NC_("RID_PRODX_HELP", "Product" )
#define RID_PROD_FROMX_HELP                 NC_("RID_PROD_FROMX_HELP", "Product Subscript Bottom" )
#define RID_PROD_TOX_HELP                   NC_("RID_PROD_TOX_HELP", "Product Superscript Top" )
#define RID_PROD_FROMTOX_HELP               NC_("RID_PROD_FROMTOX_HELP", "Product Sup/Sub script" )
#define RID_COPRODX_HELP                    NC_("RID_COPRODX_HELP", "Coproduct" )
#define RID_COPROD_FROMX_HELP               NC_("RID_COPROD_FROMX_HELP", "Coproduct Subscript Bottom" )
#define RID_COPROD_TOX_HELP                 NC_("RID_COPROD_TOX_HELP", "Coproduct Superscript Top" )
#define RID_COPROD_FROMTOX_HELP             NC_("RID_COPROD_FROMTOX_HELP", "Coproduct Sup/Sub script" )
#define RID_LIMX_HELP                       NC_("RID_LIMX_HELP", "Limes" )
#define RID_LIM_FROMX_HELP                  NC_("RID_LIM_FROMX_HELP", "Limes Subscript Bottom" )
#define RID_LIM_TOX_HELP                    NC_("RID_LIM_TOX_HELP", "Limes Superscript Top" )
#define RID_LIM_FROMTOX_HELP                NC_("RID_LIM_FROMTOX_HELP", "Limes Sup/Sub script" )
#define RID_LIMINFX_HELP                    NC_("RID_LIMINFX_HELP", "Limit Inferior" )
#define RID_LIMINF_FROMX_HELP               NC_("RID_LIMINF_FROMX_HELP", "Limit Inferior Subscript Bottom" )
#define RID_LIMINF_TOX_HELP                 NC_("RID_LIMINF_TOX_HELP", "Limit Inferior Superscript Top" )
#define RID_LIMINF_FROMTOX_HELP             NC_("RID_LIMINF_FROMTOX_HELP", "Limit Inferior Sup/Sub script" )
#define RID_LIMSUPX_HELP                    NC_("RID_LIMSUPX_HELP", "Limit Superior" )
#define RID_LIMSUP_FROMX_HELP               NC_("RID_LIMSUP_FROMX_HELP", "Limit Superior Subscript Bottom" )
#define RID_LIMSUP_TOX_HELP                 NC_("RID_LIMSUP_TOX_HELP", "Limit Superior Superscript Top" )
#define RID_LIMSUP_FROMTOX_HELP             NC_("RID_LIMSUP_FROMTOX_HELP", "Limit Superior Sup/Sub script" )
#define RID_EXISTS_HELP                     NC_("RID_EXISTS_HELP", "There Exists" )
#define RID_NOTEXISTS_HELP                  NC_("RID_NOTEXISTS_HELP", "There Not Exists" )
#define RID_FORALL_HELP                     NC_("RID_FORALL_HELP", "For all" )
#define RID_INTX_HELP                       NC_("RID_INTX_HELP", "Integral" )
#define RID_INT_FROMX_HELP                  NC_("RID_INT_FROMX_HELP", "Integral Subscript Bottom" )
#define RID_INT_TOX_HELP                    NC_("RID_INT_TOX_HELP", "Integral Superscript Top" )
#define RID_INT_FROMTOX_HELP                NC_("RID_INT_FROMTOX_HELP", "Integral Sup/Sub script" )
#define RID_IINTX_HELP                      NC_("RID_IINTX_HELP", "Double Integral" )
#define RID_IINT_FROMX_HELP                 NC_("RID_IINT_FROMX_HELP", "Double Integral Subscript Bottom" )
#define RID_IINT_TOX_HELP                   NC_("RID_IINT_TOX_HELP", "Double Integral Superscript Top" )
#define RID_IINT_FROMTOX_HELP               NC_("RID_IINT_FROMTOX_HELP", "Double Integral Sup/Sub script" )
#define RID_IIINTX_HELP                     NC_("RID_IIINTX_HELP", "Triple Integral" )
#define RID_IIINT_FROMX_HELP                NC_("RID_IIINT_FROMX_HELP", "Triple Integral Subscript Bottom" )
#define RID_IIINT_TOX_HELP                  NC_("RID_IIINT_TOX_HELP", "Triple Integral Superscript Top" )
#define RID_IIINT_FROMTOX_HELP              NC_("RID_IIINT_FROMTOX_HELP", "Triple Integral Sup/Sub script" )
#define RID_LINTX_HELP                      NC_("RID_LINTX_HELP", "Curve Integral" )
#define RID_LINT_FROMX_HELP                 NC_("RID_LINT_FROMX_HELP", "Curve Integral Subscript Bottom" )
#define RID_LINT_TOX_HELP                   NC_("RID_LINT_TOX_HELP", "Curve Integral Superscript Top" )
#define RID_LINT_FROMTOX_HELP               NC_("RID_LINT_FROMTOX_HELP", "Curve Integral Sup/Sub script" )
#define RID_LLINTX_HELP                     NC_("RID_LLINTX_HELP", "Double Curve Integral" )
#define RID_LLINT_FROMX_HELP                NC_("RID_LLINT_FROMX_HELP", "Double Curve Integral Subscript Bottom" )
#define RID_LLINT_TOX_HELP                  NC_("RID_LLINT_TOX_HELP", "Double Curve Integral Superscript Top" )
#define RID_LLINT_FROMTOX_HELP              NC_("RID_LLINT_FROMTOX_HELP", "Double Curve Integral Sup/Sub script" )
#define RID_LLLINTX_HELP                    NC_("RID_LLLINTX_HELP", "Triple Curve Integral" )
#define RID_LLLINT_FROMX_HELP               NC_("RID_LLLINT_FROMX_HELP", "Triple Curve Integral Subscript Bottom" )
#define RID_LLLINT_TOX_HELP                 NC_("RID_LLLINT_TOX_HELP", "Triple Curve Integral Superscript Top" )
#define RID_LLLINT_FROMTOX_HELP             NC_("RID_LLLINT_FROMTOX_HELP", "Triple Curve Integral Sup/Sub script" )
#define RID_ACUTEX_HELP                     NC_("RID_ACUTEX_HELP", "Acute Accent" )
#define RID_BARX_HELP                       NC_("RID_BARX_HELP", "Line Above" )
#define RID_BREVEX_HELP                     NC_("RID_BREVEX_HELP", "Breve" )
#define RID_CHECKX_HELP                     NC_("RID_CHECKX_HELP", "Reverse Circumflex" )
#define RID_CIRCLEX_HELP                    NC_("RID_CIRCLEX_HELP", "Circle" )
#define RID_DOTX_HELP                       NC_("RID_DOTX_HELP", "Dot" )
#define RID_DDOTX_HELP                      NC_("RID_DDOTX_HELP", "Double Dot" )
#define RID_DDDOTX_HELP                     NC_("RID_DDDOTX_HELP", "Triple Dot" )
#define RID_GRAVEX_HELP                     NC_("RID_GRAVEX_HELP", "Grave Accent" )
#define RID_HATX_HELP                       NC_("RID_HATX_HELP", "Circumflex" )
#define RID_TILDEX_HELP                     NC_("RID_TILDEX_HELP", "Tilde" )
#define RID_VECX_HELP                       NC_("RID_VECX_HELP", "Vector Arrow" )
#define RID_UNDERLINEX_HELP                 NC_("RID_UNDERLINEX_HELP", "Line Below" )
#define RID_OVERLINEX_HELP                  NC_("RID_OVERLINEX_HELP", "Line Over" )
#define RID_OVERSTRIKEX_HELP                NC_("RID_OVERSTRIKEX_HELP", "Line Through" )
#define RID_PHANTOMX_HELP                   NC_("RID_PHANTOMX_HELP", "Transparent" )
#define RID_BOLDX_HELP                      NC_("RID_BOLDX_HELP", "Bold Font" )
#define RID_ITALX_HELP                      NC_("RID_ITALX_HELP", "Italic Font" )
#define RID_SIZEXY_HELP                     NC_("RID_SIZEXY_HELP", "Resize" )
#define RID_FONTXY_HELP                     NC_("RID_FONTXY_HELP", "Change Font" )
#define RID_COLORX_BLACK_HELP               NC_("RID_COLORX_BLACK_HELP", "Color Black" )
#define RID_COLORX_BLUE_HELP                NC_("RID_COLORX_BLUE_HELP", "Color Blue" )
#define RID_COLORX_GREEN_HELP               NC_("RID_COLORX_GREEN_HELP", "Color Green" )
#define RID_COLORX_RED_HELP                 NC_("RID_COLORX_RED_HELP", "Color Red" )
#define RID_COLORX_CYAN_HELP                NC_("RID_COLORX_CYAN_HELP", "Color Cyan" )
#define RID_COLORX_MAGENTA_HELP             NC_("RID_COLORX_MAGENTA_HELP", "Color Magenta" )
#define RID_COLORX_GRAY_HELP                NC_("RID_COLORX_GRAY_HELP", "Color Gray" )
#define RID_COLORX_LIME_HELP                NC_("RID_COLORX_LIME_HELP", "Color Lime" )
#define RID_COLORX_MAROON_HELP              NC_("RID_COLORX_MAROON_HELP", "Color Maroon" )
#define RID_COLORX_NAVY_HELP                NC_("RID_COLORX_NAVY_HELP", "Color Navy" )
#define RID_COLORX_OLIVE_HELP               NC_("RID_COLORX_OLIVE_HELP", "Color Olive" )
#define RID_COLORX_PURPLE_HELP              NC_("RID_COLORX_PURPLE_HELP", "Color Purple" )
#define RID_COLORX_SILVER_HELP              NC_("RID_COLORX_SILVER_HELP", "Color Silver" )
#define RID_COLORX_TEAL_HELP                NC_("RID_COLORX_TEAL_HELP", "Color Teal" )
#define RID_COLORX_YELLOW_HELP              NC_("RID_COLORX_YELLOW_HELP", "Color Yellow" )
#define RID_LRGROUPX_HELP                   NC_("RID_LRGROUPX_HELP", "Group Brackets" )
#define RID_LRPARENTX_HELP                  NC_("RID_LRPARENTX_HELP", "Round Brackets" )
#define RID_LRBRACKETX_HELP                 NC_("RID_LRBRACKETX_HELP", "Square Brackets" )
#define RID_LRDBRACKETX_HELP                NC_("RID_LRDBRACKETX_HELP", "Double Square Brackets" )
#define RID_LRBRACEX_HELP                   NC_("RID_LRBRACEX_HELP", "Braces" )
#define RID_LRANGLEX_HELP                   NC_("RID_LRANGLEX_HELP", "Angle Brackets" )
#define RID_LRCEILX_HELP                    NC_("RID_LRCEILX_HELP", "Upper Ceil" )
#define RID_LRFLOORX_HELP                   NC_("RID_LRFLOORX_HELP", "Floor" )
#define RID_LRLINEX_HELP                    NC_("RID_LRLINEX_HELP", "Single Lines" )
#define RID_LRDLINEX_HELP                   NC_("RID_LRDLINEX_HELP", "Double Lines" )
#define RID_LMRANGLEXY_HELP                 NC_("RID_LMRANGLEXY_HELP", "Operator Brackets" )
#define RID_SLRPARENTX_HELP                 NC_("RID_SLRPARENTX_HELP", "Round Brackets (Scalable)" )
#define RID_SLRBRACKETX_HELP                NC_("RID_SLRBRACKETX_HELP", "Square Brackets (Scalable)" )
#define RID_SLRDBRACKETX_HELP               NC_("RID_SLRDBRACKETX_HELP", "Double Square Brackets (Scalable)" )
#define RID_SLRBRACEX_HELP                  NC_("RID_SLRBRACEX_HELP", "Braces (Scalable)" )
#define RID_SLRANGLEX_HELP                  NC_("RID_SLRANGLEX_HELP", "Angle Brackets (Scalable)" )
#define RID_SLRCEILX_HELP                   NC_("RID_SLRCEILX_HELP", "Ceiling (Scalable)" )
#define RID_SLRFLOORX_HELP                  NC_("RID_SLRFLOORX_HELP", "Floor (Scalable)" )
#define RID_SLRLINEX_HELP                   NC_("RID_SLRLINEX_HELP", "Single Lines (Scalable)" )
#define RID_SLRDLINEX_HELP                  NC_("RID_SLRDLINEX_HELP", "Double Lines (Scalable)" )
#define RID_SLMRANGLEXY_HELP                NC_("RID_SLMRANGLEXY_HELP", "Operator Brackets (Scalable)" )
#define RID_XEVALUATEDATY_HELP              NC_("RID_XEVALUATEDATY_HELP", "Evaluated At" )
#define RID_XOVERBRACEY_HELP                NC_("RID_XOVERBRACEY_HELP", "Braces Top (Scalable)" )
#define RID_XUNDERBRACEY_HELP               NC_("RID_XUNDERBRACEY_HELP", "Braces Bottom (Scalable)" )
#define RID_RSUBX_HELP                      NC_("RID_RSUBX_HELP", "Subscript Right" )
#define RID_RSUPX_HELP                      NC_("RID_RSUPX_HELP", "Power" )
#define RID_LSUBX_HELP                      NC_("RID_LSUBX_HELP", "Subscript Left" )
#define RID_LSUPX_HELP                      NC_("RID_LSUPX_HELP", "Superscript Left" )
#define RID_CSUBX_HELP                      NC_("RID_CSUBX_HELP", "Subscript Bottom" )
#define RID_CSUPX_HELP                      NC_("RID_CSUPX_HELP", "Superscript Top" )
#define RID_SBLANK_HELP                     NC_("RID_SBLANK_HELP", "Small Gap" )
#define RID_BLANK_HELP                      NC_("RID_BLANK_HELP", "Blank" )
#define RID_NEWLINE_HELP                    NC_("RID_NEWLINE_HELP", "New Line" )
#define RID_BINOMXY_HELP                    NC_("RID_BINOMXY_HELP", "Vertical Stack (2 Elements)")
#define RID_STACK_HELP                      NC_("RID_STACK_HELP", "Vertical Stack" )
#define RID_MATRIX_HELP                     NC_("RID_MATRIX_HELP", "Matrix Stack" )
#define RID_ALIGNLX_HELP                    NC_("RID_ALIGNLX_HELP", "Align Left" )
#define RID_ALIGNCX_HELP                    NC_("RID_ALIGNCX_HELP", "Align Center" )
#define RID_ALIGNRX_HELP                    NC_("RID_ALIGNRX_HELP", "Align Right" )
#define RID_ALEPH_HELP                      NC_("RID_ALEPH_HELP", "Aleph" )
#define RID_EMPTYSET_HELP                   NC_("RID_EMPTYSET_HELP", "Empty Set" )
#define RID_RE_HELP                         NC_("RID_RE_HELP", "Real Part" )
#define RID_IM_HELP                         NC_("RID_IM_HELP", "Imaginary Part" )
#define RID_INFINITY_HELP                   NC_("RID_INFINITY_HELP", "Infinity" )
#define RID_PARTIAL_HELP                    NC_("RID_PARTIAL_HELP", "Partial" )
#define RID_NABLA_HELP                      NC_("RID_NABLA_HELP", "Nabla" )
#define RID_WP_HELP                         NC_("RID_WP_HELP", "Weierstrass p" )
#define RID_DOTSAXIS_HELP                   NC_("RID_DOTSAXIS_HELP", "Dots In Middle" )
#define RID_DOTSUP_HELP                     NC_("RID_DOTSUP_HELP", "Dots To Top" )
#define RID_DOTSDOWN_HELP                   NC_("RID_DOTSDOWN_HELP", "Dots To Bottom" )
#define RID_DOTSLOW_HELP                    NC_("RID_DOTSLOW_HELP", "Dots At Bottom" )
#define RID_DOTSVERT_HELP                   NC_("RID_DOTSVERT_HELP", "Dots Vertically" )
#define RID_XCIRCY_HELP                     NC_("RID_XCIRCY_HELP", "Concatenate" )
#define RID_XWIDESLASHY_HELP                NC_("RID_XWIDESLASHY_HELP", "Division (wideslash)" )
#define RID_XWIDEBSLASHY_HELP               NC_("RID_XWIDEBSLASHY_HELP", "Division (counter wideslash)" )
#define RID_XDIVIDESY_HELP                  NC_("RID_XDIVIDESY_HELP", "Divides" )
#define RID_XNDIVIDESY_HELP                 NC_("RID_XNDIVIDESY_HELP", "Does Not Divide" )
#define RID_DLARROW_HELP                    NC_("RID_DLARROW_HELP", "Double Arrow Left" )
#define RID_DLRARROW_HELP                   NC_("RID_DLRARROW_HELP", "Double Arrow Left And Right" )
#define RID_DRARROW_HELP                    NC_("RID_DRARROW_HELP", "Double Arrow Right" )
#define RID_SETN_HELP                       NC_("RID_SETN_HELP", "Natural Numbers Set" )
#define RID_SETZ_HELP                       NC_("RID_SETZ_HELP", "Integers Set" )
#define RID_SETQ_HELP                       NC_("RID_SETQ_HELP", "Set of Rational Numbers" )
#define RID_SETR_HELP                       NC_("RID_SETR_HELP", "Real Numbers Set" )
#define RID_SETC_HELP                       NC_("RID_SETC_HELP", "Complex Numbers Set" )
#define RID_WIDEHATX_HELP                   NC_("RID_WIDEHATX_HELP", "Large Circumflex" )
#define RID_WIDETILDEX_HELP                 NC_("RID_WIDETILDEX_HELP", "Large Tilde" )
#define RID_WIDEVECX_HELP                   NC_("RID_WIDEVECX_HELP", "Large Vector Arrow" )
#define RID_HBAR_HELP                       NC_("RID_HBAR_HELP", "h Bar" )
#define RID_LAMBDABAR_HELP                  NC_("RID_LAMBDABAR_HELP", "Lambda Bar" )
#define RID_LEFTARROW_HELP                  NC_("RID_LEFTARROW_HELP", "Left Arrow" )
#define RID_RIGHTARROW_HELP                 NC_("RID_RIGHTARROW_HELP", "Right Arrow" )
#define RID_UPARROW_HELP                    NC_("RID_UPARROW_HELP", "Up Arrow" )
#define RID_DOWNARROW_HELP                  NC_("RID_DOWNARROW_HELP", "Down Arrow" )
#define RID_NOSPACE_HELP                    NC_("RID_NOSPACE_HELP", "No space" )
#define RID_XPRECEDESY_HELP                 NC_("RID_XPRECEDESY_HELP", "Precedes" )
#define RID_XPRECEDESEQUALY_HELP            NC_("RID_XPRECEDESEQUALY_HELP", "Precedes or equal to" )
#define RID_XPRECEDESEQUIVY_HELP            NC_("RID_XPRECEDESEQUIVY_HELP", "Precedes or equivalent to" )
#define RID_XSUCCEEDSY_HELP                 NC_("RID_XSUCCEEDSY_HELP", "Succeeds" )
#define RID_XSUCCEEDSEQUALY_HELP            NC_("RID_XSUCCEEDSEQUALY_HELP", "Succeeds or equal to" )
#define RID_XSUCCEEDSEQUIVY_HELP            NC_("RID_XSUCCEEDSEQUIVY_HELP", "Succeeds or equivalent to" )
#define RID_XNOTPRECEDESY_HELP              NC_("RID_XNOTPRECEDESY_HELP", "Not precedes" )
#define RID_XNOTSUCCEEDSY_HELP              NC_("RID_XNOTSUCCEEDSY_HELP", "Not succeeds" )
#define RID_CATEGORY_UNARY_BINARY_OPERATORS NC_("RID_CATEGORY_UNARY_BINARY_OPERATORS", "Unary/Binary Operators" )
#define RID_CATEGORY_RELATIONS              NC_("RID_CATEGORY_RELATIONS", "Relations" )
#define RID_CATEGORY_SET_OPERATIONS         NC_("RID_CATEGORY_SET_OPERATIONS", "Set Operations" )
#define RID_CATEGORY_FUNCTIONS              NC_("RID_CATEGORY_FUNCTIONS", "Functions" )
#define RID_CATEGORY_OPERATORS              NC_("RID_CATEGORY_OPERATORS", "Operators" )
#define RID_CATEGORY_ATTRIBUTES             NC_("RID_CATEGORY_ATTRIBUTES", "Attributes" )
#define RID_CATEGORY_BRACKETS               NC_("RID_CATEGORY_BRACKETS", "Brackets" )
#define RID_CATEGORY_FORMATS                NC_("RID_CATEGORY_FORMATS", "Formats" )
#define RID_CATEGORY_OTHERS                 NC_("RID_CATEGORY_OTHERS", "Others" )
#define RID_CATEGORY_EXAMPLES               NC_("RID_CATEGORY_EXAMPLES", "Examples" )

#define RID_FONTREGULAR                     NC_("RID_FONTREGULAR", "Standard" )
#define RID_FONTITALIC                      NC_("RID_FONTITALIC", "Italic" )
#define RID_FONTBOLD                        NC_("RID_FONTBOLD", "Bold" )
#define STR_BLACK                           NC_("STR_BLACK", "black" )
#define STR_BLUE                            NC_("STR_BLUE", "blue" )
#define STR_GREEN                           NC_("STR_GREEN", "green" )
#define STR_RED                             NC_("STR_RED", "red" )
#define STR_CYAN                            NC_("STR_CYAN", "cyan" )
#define STR_MAGENTA                         NC_("STR_MAGENTA", "magenta" )
#define STR_GRAY                            NC_("STR_GRAY", "gray" )
#define STR_LIME                            NC_("STR_LIME", "lime" )
#define STR_MAROON                          NC_("STR_MAROON", "maroon" )
#define STR_NAVY                            NC_("STR_NAVY", "navy" )
#define STR_OLIVE                           NC_("STR_OLIVE", "olive" )
#define STR_PURPLE                          NC_("STR_PURPLE", "purple" )
#define STR_SILVER                          NC_("STR_SILVER", "silver" )
#define STR_TEAL                            NC_("STR_TEAL", "teal" )
#define STR_YELLOW                          NC_("STR_YELLOW", "yellow" )
#define STR_HIDE                            NC_("STR_HIDE", "hide" )
#define STR_SIZE                            NC_("STR_SIZE", "size" )
#define STR_FONT                            NC_("STR_FONT", "font" )
#define STR_ALIGN_LEFT                      NC_("STR_ALIGN_LEFT", "left" )
#define STR_ALIGN_CENTER                    NC_("STR_ALIGN_CENTER", "center" )
#define STR_ALIGN_RIGHT                     NC_("STR_ALIGN_RIGHT", "right" )
#define STR_CMDBOXWINDOW                    NC_("STR_CMDBOXWINDOW", "Commands" )
#define RID_DOCUMENTSTR                     NC_("RID_DOCUMENTSTR", "Formula" )
#define STR_STATSTR_WRITING                 NC_("STR_STATSTR_WRITING", "Saving document..." )
#define STR_MATH_DOCUMENT_FULLTYPE_CURRENT  NC_("STR_MATH_DOCUMENT_FULLTYPE_CURRENT", "%PRODUCTNAME %PRODUCTVERSION Formula")
#define RID_ERR_IDENT                       NC_("RID_ERR_IDENT", "ERROR : " )
#define RID_ERR_UNEXPECTEDCHARACTER         NC_("RID_ERR_UNEXPECTEDCHARACTER", "Unexpected character" )
#define RID_ERR_UNEXPECTEDTOKEN             NC_("RID_ERR_UNEXPECTEDTOKEN", "Unexpected token" )
#define RID_ERR_LGROUPEXPECTED              NC_("RID_ERR_LGROUPEXPECTED", "'{' expected" )
#define RID_ERR_RGROUPEXPECTED              NC_("RID_ERR_RGROUPEXPECTED", "'}' expected" )
#define RID_ERR_LBRACEEXPECTED              NC_("RID_ERR_LBRACEEXPECTED", "'(' expected" )
#define RID_ERR_RBRACEEXPECTED              NC_("RID_ERR_RBRACEEXPECTED", "')' expected" )
#define RID_ERR_PARENTMISMATCH              NC_("RID_ERR_PARENTMISMATCH", "Left and right symbols mismatched" )
#define RID_ERR_FONTEXPECTED                NC_("RID_ERR_FONTEXPECTED", "'fixed', 'sans', or 'serif' expected" )
#define RID_ERR_SIZEEXPECTED                NC_("RID_ERR_SIZEEXPECTED", "'size' followed by an unexpected token" )
#define RID_ERR_DOUBLEALIGN                 NC_("RID_ERR_DOUBLEALIGN", "Double aligning is not allowed" )
#define RID_ERR_DOUBLESUBSUPSCRIPT          NC_("RID_ERR_DOUBLESUBSUPSCRIPT", "Double sub/superscripts is not allowed" )
#define RID_ERR_POUNDEXPECTED               NC_("RID_ERR_POUNDEXPECTED", "'#' expected" )
#define RID_ERR_COLOREXPECTED               NC_("RID_ERR_COLOREXPECTED", "Color required" )
#define RID_ERR_RIGHTEXPECTED               NC_("RID_ERR_RIGHTEXPECTED", "'RIGHT' expected" )
#define RID_PRINTUIOPT_PRODNAME             NC_("RID_PRINTUIOPT_PRODNAME", "%PRODUCTNAME %s" )
#define RID_PRINTUIOPT_CONTENTS             NC_("RID_PRINTUIOPT_CONTENTS", "Contents" )
#define RID_PRINTUIOPT_TITLE                NC_("RID_PRINTUIOPT_TITLE", "~Title" )
#define RID_PRINTUIOPT_FRMLTXT              NC_("RID_PRINTUIOPT_FRMLTXT", "~Formula text" )
#define RID_PRINTUIOPT_BORDERS              NC_("RID_PRINTUIOPT_BORDERS", "B~orders" )
#define RID_PRINTUIOPT_SIZE                 NC_("RID_PRINTUIOPT_SIZE", "Size" )
#define RID_PRINTUIOPT_ORIGSIZE             NC_("RID_PRINTUIOPT_ORIGSIZE", "O~riginal size" )
#define RID_PRINTUIOPT_FITTOPAGE            NC_("RID_PRINTUIOPT_FITTOPAGE", "Fit to ~page" )
#define RID_PRINTUIOPT_SCALING              NC_("RID_PRINTUIOPT_SCALING", "~Scaling" )

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
