/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */


#include <sfx2/sfx.hrc>
#include "starmath.hrc"


////////////////////////////////////////////////////////////

String RID_PLUSX            { Text = "+<?> " ; };
String RID_PLUSX_HELP       { Text = "+ Sign" ; };
String RID_MINUSX           { Text = "-<?> " ; };
String RID_MINUSX_HELP      { Text = "- Sign" ; };
String RID_PLUSMINUSX       { Text = "+-<?> " ; };
String RID_PLUSMINUSX_HELP  { Text = "+- Sign" ; };
String RID_MINUSPLUSX       { Text = "-+<?> " ; };
String RID_MINUSPLUSX_HELP  { Text = "-+ Sign" ; };
String RID_NEGX             { Text = "neg <?> " ; };
String RID_NEGX_HELP        { Text = "Boolean NOT" ; };
String RID_XPLUSY           { Text = "<?> + <?> " ; };
String RID_XPLUSY_HELP      { Text = "Addition + " ; };
String RID_XMINUSY          { Text = "<?> - <?> " ; };
String RID_XMINUSY_HELP     { Text = "Subtraction -" ; };
String RID_XCDOTY           { Text = "<?> cdot <?> " ; };
String RID_XCDOTY_HELP      { Text = "Multiplication (Dot)" ; };
String RID_XTIMESY          { Text = "<?> times <?> " ; };
String RID_XTIMESY_HELP     { Text = "Multiplication (x)" ; };
String RID_XSYMTIMESY       { Text = "<?> * <?> " ; };
String RID_XSYMTIMESY_HELP  { Text = "Multiplication (*)" ; };
String RID_XSYMDIVIDEY      { Text = "<?> / <?> " ; };
String RID_XSYMDIVIDEY_HELP { Text = "Division (Slash)" ; };
String RID_XDIVY            { Text = "<?> div <?> " ; };
String RID_XDIVY_HELP       { Text = "Division (รท)" ; };
String RID_XOVERY           { Text = "{<?>} over {<?>} " ; };
String RID_XOVERY_HELP      { Text = "Division (Fraction)" ; };
String RID_XODIVIDEY        { Text = "<?> odivide <?> " ; };
String RID_XODOTY           { Text = "<?> odot <?> " ; };
String RID_XOMINUSY         { Text = "<?> ominus <?> " ; };
String RID_XOPLUSY          { Text = "<?> oplus <?> " ; };
String RID_XOTIMESY         { Text = "<?> otimes <?> " ; };
String RID_XANDY            { Text = "<?> and <?> " ; };
String RID_XANDY_HELP       { Text = "Boolean AND" ; };
String RID_XORY             { Text = "<?> or <?> " ; };
String RID_XORY_HELP        { Text = "Boolean OR" ; };
String RID_XEQY             { Text = "<?> = <?> " ; };
String RID_XEQY_HELP        { Text = "Is Equal" ; };
String RID_XNEQY            { Text = "<?> <> <?> " ; };
String RID_XNEQY_HELP       { Text = "Is Not Equal" ; };
String RID_XLTY             { Text = "<?> < <?> " ; };
String RID_XLTY_HELP        { Text = "Is Less Than" ; };
String RID_XGTY             { Text = "<?> > <?> " ; };
String RID_XGTY_HELP        { Text = "Is Greater Than" ; };
String RID_XLEY             { Text = "<?> <= <?> " ; };
String RID_XLEY_HELP        { Text = "Is Less Than Or Equal To" ; };
String RID_XGEY             { Text = "<?> >= <?> " ; };
String RID_XGEY_HELP        { Text = "Is Greater Than Or Equal To" ; };
String RID_XLESLANTY        { Text = "<?> leslant <?> " ; };
String RID_XLESLANTY_HELP   { Text = "Is Less Than Or Equal To" ; };
String RID_XGESLANTY        { Text = "<?> geslant <?> " ; };
String RID_XGESLANTY_HELP   { Text = "Is Greater Than Or Equal To" ; };
String RID_XLLY             { Text = "<?> << <?> " ; };
String RID_XGGY             { Text = "<?> >> <?> " ; };
String RID_XDEFY            { Text = "<?> def <?> " ; };
String RID_XEQUIVY          { Text = "<?> equiv <?> " ; };
String RID_XEQUIVY_HELP     { Text = "Is Congruent To" ; };
String RID_XAPPROXY         { Text = "<?> approx <?> " ; };
String RID_XAPPROXY_HELP    { Text = "Is Approximately Equal" ; };
String RID_XSIMY            { Text = "<?> sim <?> " ; };
String RID_XSIMY_HELP       { Text = "Is Similar To" ; };
String RID_XSIMEQY          { Text = "<?> simeq <?> " ; };
String RID_XSIMEQY_HELP     { Text = "Is Similar Or Equal" ; };
String RID_XPROPY           { Text = "<?> prop <?> " ; };
String RID_XPROPY_HELP      { Text = "Is Proportional To" ; };
String RID_XORTHOY          { Text = "<?> ortho <?> " ; };
String RID_XORTHOY_HELP     { Text = "Is Orthogonal To" ; };
String RID_XPARALLELY       { Text = "<?> parallel <?> " ; };
String RID_XPARALLELY_HELP  { Text = "Is Parallel To" ; };
String RID_XTOWARDY         { Text = "<?> toward <?> " ; };
String RID_XTOWARDY_HELP    { Text = "Toward" ; };
String RID_XTRANSLY         { Text = "<?> transl <?> " ; };
String RID_XTRANSRY         { Text = "<?> transr <?> " ; };
String RID_XINY             { Text = "<?> in <?> " ; };
String RID_XINY_HELP        { Text = "Is In" ; };
String RID_XNOTINY          { Text = "<?> notin <?> " ; };
String RID_XNOTINY_HELP     { Text = "Is Not In" ; };
String RID_XOWNSY           { Text = "<?> owns <?> " ; };
String RID_XOWNSY_HELP      { Text = "Owns" ; };
String RID_XUNIONY          { Text = "<?> union <?> " ; };
String RID_XUNIONY_HELP     { Text = "Union" ; };
String RID_XINTERSECTIONY   { Text = "<?> intersection <?> " ; };
String RID_XINTERSECTIONY_HELP { Text = "Intersection" ; };
String RID_XSETMINUSY       { Text = "<?> setminus <?> " ; };
String RID_XSETMINUSY_HELP  { Text = "Difference" ; };
String RID_XSLASHY          { Text = "<?> slash <?> " ; };
String RID_XSLASHY_HELP     { Text = "Quotient Set" ; };
String RID_XSUBSETY         { Text = "<?> subset <?> " ; };
String RID_XSUBSETY_HELP    { Text = "Subset" ; };
String RID_XSUBSETEQY       { Text = "<?> subseteq <?> " ; };
String RID_XSUBSETEQY_HELP  { Text = "Subset Or Equal To" ; };
String RID_XSUPSETY         { Text = "<?> supset <?> " ; };
String RID_XSUPSETY_HELP    { Text = "Superset" ; };
String RID_XSUPSETEQY       { Text = "<?> supseteq <?> " ; };
String RID_XSUPSETEQY_HELP  { Text = "Superset Or Equal To" ; };
String RID_XNSUBSETY        { Text = "<?> nsubset <?> " ; };
String RID_XNSUBSETY_HELP   { Text = "Not Subset" ; };
String RID_XNSUBSETEQY      { Text = "<?> nsubseteq <?> " ; };
String RID_XNSUBSETEQY_HELP { Text = "Not Subset Or Equal" ; };
String RID_XNSUPSETY        { Text = "<?> nsupset <?> " ; };
String RID_XNSUPSETY_HELP   { Text = "Not Superset" ; };
String RID_XNSUPSETEQY      { Text = "<?> nsupseteq <?> " ; };
String RID_XNSUPSETEQY_HELP { Text = "Not Superset Or Equal" ; };
String RID_ABSX             { Text = "abs{<?>} " ; };
String RID_ABSX_HELP        { Text = "Absolute Value" ; };
String RID_FACTX            { Text = "fact {<?>} " ; };
String RID_FACTX_HELP       { Text = "Factorial" ; };
String RID_SQRTX            { Text = "sqrt{<?>} " ; };
String RID_SQRTX_HELP       { Text = "Square Root " ; };
String RID_NROOTXY          { Text = "nroot{<?>}{<?>} " ; };
String RID_NROOTXY_HELP     { Text = "N-th Root" ; };
String RID_EX               { Text = "func e^{<?>} " ; };
String RID_EX_HELP          { Text = "Exponential Function" ; };
String RID_EXPX             { Text = "exp(<?>) " ; };
String RID_EXPX_HELP        { Text = "Exponential Function" ; };
String RID_LNX              { Text = "ln(<?>) " ; };
String RID_LNX_HELP         { Text = "Natural Logarithm" ; };
String RID_LOGX             { Text = "log(<?>) " ; };
String RID_LOGX_HELP        { Text = "Logarithm" ; };
String RID_SINX             { Text = "sin(<?>) " ; };
String RID_SINX_HELP        { Text = "Sine" ; };
String RID_COSX             { Text = "cos(<?>) " ; };
String RID_COSX_HELP        { Text = "Cosine" ; };
String RID_TANX             { Text = "tan(<?>) " ; };
String RID_TANX_HELP        { Text = "Tangent" ; };
String RID_COTX             { Text = "cot(<?>) " ; };
String RID_COTX_HELP        { Text = "Cotangent" ; };
String RID_ARCSINX          { Text = "arcsin(<?>) " ; };
String RID_ARCSINX_HELP     { Text = "Arcsine" ; };
String RID_ARCCOSX          { Text = "arccos(<?>) " ; };
String RID_ARCCOSX_HELP     { Text = "Arccosise" ; };
String RID_ARCTANX          { Text = "arctan(<?>) " ; };
String RID_ARCTANX_HELP     { Text = "Arctangent" ; };
String RID_ARCCOTX          { Text = "arccot(<?>) " ; };
String RID_ARCCOTX_HELP     { Text = "Arccotangent" ; };
String RID_SINHX            { Text = "sinh(<?>) " ; };
String RID_SINHX_HELP       { Text = "Hyperbolic Sine" ; };
String RID_COSHX            { Text = "cosh(<?>) " ; };
String RID_COSHX_HELP       { Text = "Hyperbolic Cosine" ; };
String RID_TANHX            { Text = "tanh(<?>) " ; };
String RID_TANHX_HELP       { Text = "Hyperbolic Tangent" ; };
String RID_COTHX            { Text = "coth(<?>) " ; };
String RID_COTHX_HELP       { Text = "Hyperbolic Cotangent" ; };
String RID_ARSINHX          { Text = "arsinh(<?>) " ; };
String RID_ARSINHX_HELP     { Text = "Area Hyperbolic Sine" ; };
String RID_ARCOSHX          { Text = "arcosh(<?>) " ; };
String RID_ARCOSHX_HELP     { Text = "Area Hyperbolic Cosine" ; };
String RID_ARTANHX          { Text = "artanh(<?>) " ; };
String RID_ARTANHX_HELP     { Text = "Area Hyperbolic Tangent" ; };
String RID_ARCOTHX          { Text = "arcoth(<?>) " ; };
String RID_ARCOTHX_HELP     { Text = "Area Hyperbolic Cotangent" ; };
String RID_SUMX             { Text = "sum <?> " ; };
String RID_SUMX_HELP        { Text = "Sum" ; };
String RID_SUM_FROMX        { Text = "sum from{<?>} <?> " ; };
String RID_SUM_FROMX_HELP   { Text = "Sum Subscript Bottom" ; };
String RID_SUM_TOX          { Text = "sum to{<?>} <?> " ; };
String RID_SUM_TOX_HELP     { Text = "Sum SuperScript Top" ; };
String RID_SUM_FROMTOX      { Text = "sum from{<?>} to{<?>} <?> " ; };
String RID_SUM_FROMTOX_HELP { Text = "Sum Sup/Sub script" ; };
String RID_PRODX            { Text = "prod <?> " ; };
String RID_PRODX_HELP       { Text = "Product" ; };
String RID_PROD_FROMX       { Text = "prod from{<?>} <?> " ; };
String RID_PROD_FROMX_HELP  { Text = "Product Subscript Bottom" ; };
String RID_PROD_TOX         { Text = "prod to{<?>} <?> " ; };
String RID_PROD_TOX_HELP    { Text = "Product Superscript Top" ; };
String RID_PROD_FROMTOX     { Text = "prod from{<?>} to{<?>} <?> " ; };
String RID_PROD_FROMTOX_HELP { Text = "Product Sup/Sub script" ; };
String RID_COPRODX          { Text = "coprod <?> " ; };
String RID_COPRODX_HELP     { Text = "Coproduct" ; };
String RID_COPROD_FROMX     { Text = "coprod from{<?>} <?> " ; };
String RID_COPROD_FROMX_HELP { Text = "Coproduct " ; };
String RID_COPROD_TOX       { Text = "coprod to{<?>} <?> " ; };
String RID_COPROD_TOX_HELP  { Text = "Coproduct Superscript Top" ; };
String RID_COPROD_FROMTOX   { Text = "coprod from{<?>} to{<?>} <?> " ; };
String RID_COPROD_FROMTOX_HELP { Text = "Coproduct Sup/Sub script" ; };
String RID_LIMX             { Text = "lim <?> " ; };
String RID_LIMX_HELP        { Text = "Limes" ; };
String RID_LIM_FROMX        { Text = "lim from{<?>} <?> " ; };
String RID_LIM_FROMX_HELP   { Text = "Lime Subscript Bottom" ; };
String RID_LIM_TOX          { Text = "lim to{<?>} <?> " ; };
String RID_LIM_TOX_HELP     { Text = "Lime Superscript Top" ; };
String RID_LIM_FROMTOX      { Text = "lim from{<?>} to{<?>} <?> " ; };
String RID_LIM_FROMTOX_HELP { Text = "Lime Sup/Sub script" ; };
String RID_LIMINFX          { Text = "liminf <?> " ; };
String RID_LIMSUPX          { Text = "limsup <?> " ; };
String RID_EXISTS           { Text = "exists " ; };
String RID_EXISTS_HELP      { Text = "There exists" ; };
String RID_NOTEXISTS        { Text = "notexists " ; };
String RID_NOTEXISTS_HELP   { Text = "There Not Exists" ; };
String RID_FORALL           { Text = "forall " ; };
String RID_FORALL_HELP      { Text = "For all" ; };
String RID_INTX             { Text = "int <?> " ; };
String RID_INTX_HELP        { Text = "Integral" ; };
String RID_INT_FROMX        { Text = "int from{<?>} <?> " ; };
String RID_INT_FROMX_HELP   { Text = "Integral Subscript Top" ; };
String RID_INT_TOX          { Text = "int to{<?>} <?> " ; };
String RID_INT_TOX_HELP     { Text = "Integral Superscript Top" ; };
String RID_INT_FROMTOX      { Text = "int from{<?>} to{<?>} <?> " ; };
String RID_INT_FROMTOX_HELP { Text = "Integral Sup/Sub script" ; };
String RID_IINTX            { Text = "iint <?> " ; };
String RID_IINTX_HELP       { Text = "Double Integral" ; };
String RID_IINT_FROMX       { Text = "iint from{<?>} <?> " ; };
String RID_IINT_FROMX_HELP  { Text = "Double Integral Subscript Bottom" ; };
String RID_IINT_TOX         { Text = "iint to{<?>} <?> " ; };
String RID_IINT_TOX_HELP    { Text = "Double Integral Superscript Top" ; };
String RID_IINT_FROMTOX     { Text = "iint from{<?>} to{<?>} <?> " ; };
String RID_IINT_FROMTOX_HELP { Text = "Double Integral Sup/Sub script" ; };
String RID_IIINTX           { Text = "iiint <?> " ; };
String RID_IIINTX_HELP      { Text = "Triple Integral" ; };
String RID_IIINT_FROMX      { Text = "iiint from{<?>} <?> " ; };
String RID_IIINT_FROMX_HELP { Text = "Triple Integral Subscript Bottom" ; };
String RID_IIINT_TOX        { Text = "iiint to{<?>} <?> " ; };
String RID_IIINT_TOX_HELP   { Text = "Triple Integral Superscript Top" ; };
String RID_IIINT_FROMTOX    { Text = "iiint from{<?>} to{<?>} <?> " ; };
String RID_IIINT_FROMTOX_HELP { Text = "Triple Integral Sup/Sub script" ; };
String RID_LINTX            { Text = "lint <?> " ; };
String RID_LINTX_HELP       { Text = "Curve Integral" ; };
String RID_LINT_FROMX       { Text = "lint from{<?>} <?> " ; };
String RID_LINT_FROMX_HELP  { Text = "Curve Integral Subscript Bottom" ; };
String RID_LINT_TOX         { Text = "lint to{<?>} <?> " ; };
String RID_LINT_TOX_HELP    { Text = "Curve Integral Superscript Top" ; };
String RID_LINT_FROMTOX     { Text = "lint from{<?>} to{<?>} <?> " ; };
String RID_LINT_FROMTOX_HELP { Text = "Curve Integral Sup/Sub script" ; };
String RID_LLINTX           { Text = "llint <?> " ; };
String RID_LLINTX_HELP      { Text = "Double Curve Integral" ; };
String RID_LLINT_FROMX      { Text = "llint from{<?>} <?> " ; };
String RID_LLINT_FROMX_HELP { Text = "Double Curve Integral Subscript Bottom" ; };
String RID_LLINT_TOX        { Text = "llint to{<?>} <?> " ; };
String RID_LLINT_TOX_HELP   { Text = "Double Curve Integral Superscript Top" ; };
String RID_LLINT_FROMTOX    { Text = "llint from{<?>} to{<?>} <?> " ; };
String RID_LLINT_FROMTOX_HELP { Text = "Double Curve Integral Sup/Sub script" ; };
String RID_LLLINTX          { Text = "lllint <?> " ; };
String RID_LLLINTX_HELP     { Text = "Triple Curve Integral" ; };
String RID_LLLINT_FROMX     { Text = "lllint from{<?>} <?> " ; };
String RID_LLLINT_FROMX_HELP { Text = "Triple Curve Integral Subscript Bottom" ; };
String RID_LLLINT_TOX       { Text = "lllint to{<?>} <?> " ; };
String RID_LLLINT_TOX_HELP  { Text = "Triple Curve Integral Superscript Top" ; };
String RID_LLLINT_FROMTOX   { Text = "lllint from{<?>} to{<?>} <?> " ; };
String RID_LLLINT_FROMTOX_HELP { Text = "Trile Curve Integral Sup/Sub script" ; };
String RID_FROMX            { Text = "from{<?>} <?> " ; };
String RID_TOX              { Text = "to{<?>} <?> " ; };
String RID_FROMXTOY         { Text = "from{<?>} to{<?>} <?> " ; };
String RID_ACUTEX           { Text = "acute <?> " ; };
String RID_ACUTEX_HELP      { Text =  "Acute Accent" ; };
String RID_BARX             { Text = "bar <?> " ; };
String RID_BARX_HELP        { Text = "Line Above" ; };
String RID_BREVEX           { Text = "breve <?> " ; };
String RID_BREVEX_HELP      { Text = "Breve" ; };
String RID_CHECKX           { Text = "check <?> " ; };
String RID_CIRCLEX          { Text = "circle <?> " ; };
String RID_CIRCLEX_HELP     { Text = "Circle" ; };
String RID_DOTX             { Text = "dot <?> " ; };
String RID_DOTX_HELP        { Text = "Dot" ; };
String RID_DDOTX            { Text = "ddot <?> " ; };
String RID_DDOTX_HELP       { Text = "Double Dot" ; };
String RID_DDDOTX           { Text = "dddot <?> " ; };
String RID_DDDOTX_HELP      { Text = "Triple Dot " ; };
String RID_GRAVEX           { Text = "grave <?> " ; };
String RID_GRAVEX_HELP      { Text = "Grave Accent" ; };
String RID_HATX             { Text = "hat <?> " ; };
String RID_HATX_HELP        { Text = "Circumflex" ; };
String RID_TILDEX           { Text = "tilde <?> " ; };
String RID_TILDEX_HELP      { Text = "Tilde" ; };
String RID_VECX             { Text = "vec <?> " ; };
String RID_VECX_HELP        { Text = "Vector Arrow" ; };
String RID_UNDERLINEX       { Text = "underline {<?>} " ; };
String RID_UNDERLINEX_HELP  { Text = "Line Below" ; };
String RID_OVERLINEX        { Text = "overline {<?>} " ; };
String RID_OVERLINEX_HELP   { Text = "Line Over" ; };
String RID_OVERSTRIKEX      { Text = "overstrike {<?>} " ; };
String RID_OVERSTRIKEX_HELP { Text = "Line Through" ; };
String RID_PHANTOMX         { Text = "phantom {<?>} " ; };
String RID_PHANTOMX_HELP    { Text = "Transparent" ; };
String RID_BOLDX            { Text = "bold <?> " ; };
String RID_BOLDX_HELP       { Text = "Bold Font" ; };
String RID_ITALX            { Text = "ital <?> " ; };
String RID_ITALX_HELP       { Text = "Italic Font" ; };
String RID_SIZEXY           { Text = "size <?> {<?>} " ; };
String RID_SIZEXY_HELP      { Text = "Resize" ; };
String RID_FONTXY           { Text = "font <?> {<?>} " ; };
String RID_FONTXY_HELP      { Text = "Change Font" ; };
String RID_COLORX           { Text = "color <?> {<?>} " ; };
String RID_COLORX_BLACK     { Text = "color black {<?>} " ; };
String RID_COLORX_BLACK_HELP { Text = "Color Black" ; };
String RID_COLORX_BLUE       { Text = "color blue {<?>} " ; };
String RID_COLORX_BLUE_HELP  { Text = "Color Blue" ; };
String RID_COLORX_GREEN      { Text = "color green {<?>} " ; };
String RID_COLORX_GREEN_HELP { Text = "Color Green" ; };
String RID_COLORX_RED       { Text = "color red {<?>} " ; };
String RID_COLORX_RED_HELP  { Text = "Color Red" ; };
String RID_COLORX_CYAN      { Text = "color cyan {<?>} " ; };
String RID_COLORX_CYAN_HELP { Text = "Color Cyan" ; };
String RID_COLORX_MAGENTA   { Text = "color magenta {<?>} " ; };
String RID_COLORX_MAGENTA_HELP { Text = "Color Magenta" ; };
String RID_COLORX_YELLOW       { Text = "color yellow {<?>} " ; };
String RID_COLORX_YELLOW_HELP  { Text = "Color Yellow" ; };
String RID_LRGROUPX         { Text = "{<?>} " ; };
String RID_LRGROUPX_HELP    { Text = "Group Brackets" ; };
String RID_LRPARENTX        { Text = "(<?>) " ; };
String RID_LRPARENTX_HELP   { Text = "Round Brackets (Scalable)" ; };
String RID_LRBRACKETX       { Text = "[<?>] " ; };
String RID_LRBRACKETX_HELP  { Text = "Square Brackets (Scalable)" ; };
String RID_LRDBRACKETX      { Text = "ldbracket <?> rdbracket " ; };
String RID_LRDBRACKETX_HELP { Text = "Double Square Brackets" ; };
String RID_LRBRACEX         { Text = "lbrace <?> rbrace " ; };
String RID_LRBRACEX_HELP    { Text = "Braces" ; };
String RID_LRANGLEX         { Text = "langle <?> rangle " ; };
String RID_LRANGLEX_HELP    { Text = "Angle Brackets" ; };
String RID_LRCEILX          { Text = "lceil <?> rceil " ; };
String RID_LRCEILX_HELP     { Text = "Upper Ceil" ; };
String RID_LRFLOORX         { Text = "lfloor <?> rfloor " ; };
String RID_LRFLOORX_HELP    { Text = "Floor" ; };
String RID_LRLINEX          { Text = "lline <?> rline " ; };
String RID_LRLINEX_HELP     { Text = "Single Lines" ; };
String RID_LRDLINEX         { Text = "ldline <?> rdline " ; };
String RID_LRDLINEX_HELP    { Text = "Double Lines" ; };
String RID_LMRANGLEXY       { Text = "langle <?> mline <?> rangle " ; };
String RID_LMRANGLEXY_HELP  { Text = "Operator Brackets" ; };
String RID_SLRPARENTX       { Text = "left ( <?> right ) " ; };
String RID_SLRPARENTX_HELP  { Text = "Round Brackets (Scalable)" ; };
String RID_SLRBRACKETX      { Text = "left [ <?> right ] " ; };
String RID_SLRBRACKETX_HELP { Text = "Square Brackets (Scalable)" ; };
String RID_SLRDBRACKETX     { Text = "left ldbracket <?> right rdbracket " ; };
String RID_SLRDBRACKETX_HELP { Text = "Double Square Brackets (Scalable)" ; };
String RID_SLRBRACEX        { Text = "left lbrace <?> right rbrace " ; };
String RID_SLRANGLEX        { Text = "left langle <?> right rangle " ; };
String RID_SLRANGLEX_HELP   { Text = "Angle Brackets (Scalable)" ; };
String RID_SLRCEILX         { Text = "left lceil <?> right rceil " ; };
String RID_SLRCEILX_HELP    { Text = "Minor ceil" ; };
String RID_SLRFLOORX        { Text = "left lfloor <?> right rfloor " ; };
String RID_SLRFLOORX_HELP   { Text = "Minor floor" ; };
String RID_SLRLINEX         { Text = "left lline <?> right rline " ; };
String RID_SLRLINEX_HELP    { Text = "Single Lines (Scalable)" ; };
String RID_SLRDLINEX        { Text = "left ldline <?> right rdline " ; };
String RID_SLRDLINEX_HELP   { Text = "Double Lines (Scalable)" ; };
String RID_SLMRANGLEXY      { Text = "left langle <?> mline <?> right rangle " ; };
String RID_SLMRANGLEXY_HELP { Text = "Operator Brackets (Scalable)" ; };
String RID_XOVERBRACEY      { Text = "{<?>} overbrace {<?>} " ; };
String RID_XOVERBRACEY_HELP { Text = "Braces Top (Scalable)" ; };
String RID_XUNDERBRACEY     { Text = "{<?>} underbrace {<?>} " ; };
String RID_XUNDERBRACEY_HELP { Text = "Braces Bottom (Scalable)" ; };
String RID_RSUBX            { Text = "<?>_{<?>}" ; };
String RID_RSUBX_HELP       { Text = "Subscript Right" ; };
String RID_RSUPX            { Text = "<?>^{<?>}" ; };
String RID_RSUPX_HELP       { Text = "Power" ; };
String RID_LSUBX            { Text = "<?> lsub{<?>} " ; };
String RID_LSUBX_HELP       { Text = "Subscript Left" ; };
String RID_LSUPX            { Text = "<?> lsup{<?>} " ; };
String RID_LSUPX_HELP       { Text = "Superscript Left" ; };
String RID_CSUBX            { Text = "<?> csub{<?>} " ; };
String RID_CSUBX_HELP       { Text = "Subscript Bottom" ; };
String RID_CSUPX            { Text = "<?> csup{<?>} " ; };
String RID_CSUPX_HELP       { Text = "Superscript Top" ; };
String RID_SBLANK           { Text = "`" ; };
String RID_SBLANK_HELP      { Text = "Small Gap" ; };
String RID_BLANK            { Text = "~" ; };
String RID_BLANK_HELP       { Text = "Blank" ; };
String RID_NEWLINE          { Text = "newline " ; };
String RID_NEWLINE_HELP     { Text = "New Line " ; };
String RID_BINOMXY          { Text = "binom{<?>}{<?>} " ; };
String RID_BINOMXY_HELP     { Text = "Vertical Stack (2 Elements)"; };
String RID_STACK            { Text = "stack{<?> # <?> # <?>} " ; };
String RID_STACK_HELP       { Text = "Vertical Stack" ; };
String RID_MATRIX           { Text = "matrix{<?> # <?> ## <?> # <?>} " ; };
String RID_MATRIX_HELP      { Text = "Matrix Stack" ; };
String RID_ALIGNLX          { Text = "alignl <?> " ; };
String RID_ALIGNCX          { Text = "alignc <?> " ; };
String RID_ALIGNRX          { Text = "alignr <?> " ; };
String RID_ALEPH            { Text = "aleph " ; };
String RID_ALEPH_HELP       { Text = "Aleph" ; };
String RID_EMPTYSET         { Text = "emptyset " ; };
String RID_EMPTYSET_HELP    { Text = "Empty Set" ; };
String RID_RE               { Text = "Re " ; };
String RID_RE_HELP          { Text = "Real Part" ; };
String RID_IM               { Text = "Im " ; };
String RID_IM_HELP          { Text = "Imaginary Part" ; };
String RID_INFINITY         { Text = "infinity " ; };
String RID_INFINITY_HELP    { Text = "Infinity" ; };
String RID_PARTIAL          { Text = "partial " ; };
String RID_PARTIAL_HELP     { Text = "Partial" ; };
String RID_NABLA            { Text = "nabla " ; };
String RID_NABLA_HELP       { Text = "Nabla" ; };
String RID_WP               { Text = "wp " ; };
String RID_WP_HELP          { Text = "Weierstrass p" ; };
String RID_DOTSAXIS         { Text = "dotsaxis " ; };
String RID_DOTSAXIS_HELP    { Text = "Dots In Middle" ; };
String RID_DOTSUP           { Text = "dotsup " ; };
String RID_DOTSUP_HELP      { Text = "Dots To Top" ; };
String RID_DOTSDOWN         { Text = "dotsdown " ; };
String RID_DOTSDOWN_HELP    { Text = "Dots To Bottom" ; };
String RID_DOTSLOW          { Text = "dotslow " ; };
String RID_DOTSLOW_HELP     { Text = "Dots At Bottom" ; };
String RID_DOTSVERT         { Text = "dotsvert " ; };
String RID_DOTSVERT_HELP    { Text = "Dots Vertically" ; };
String RID_XCIRCY           { Text = "<?> circ <?> " ; };
String RID_XCIRCY_HELP      { Text = "Concatenate" ; };
String RID_XWIDESLASHY      { Text = "{<?>} wideslash {<?>} " ; };
String RID_XWIDESLASHY_HELP { Text = "Division (wideslash) " ; };
String RID_XWIDEBSLASHY     { Text = "<?> widebslash <?> " ; };
String RID_XWIDEBSLASHY_HELP{ Text = "Division (counter wideslash) " ; };
String RID_XDIVIDESY        { Text = "<?> divides <?> " ; };
String RID_XDIVIDESY_HELP   { Text = "Divides" ; };
String RID_XNDIVIDESY       { Text = "<?> ndivides <?> " ; };
String RID_XNDIVIDESY_HELP  { Text = "Does Not Divide" ; };
String RID_DLARROW          { Text = "<?> dlarrow <?> " ; };
String RID_DLARROW_HELP     { Text = "Double Arrow Left" ; };
String RID_DLRARROW         { Text = "<?> dlrarrow <?> " ; };
String RID_DLRARROW_HELP    { Text = "Double Arrow Left And Right" ; };
String RID_DRARROW          { Text = "<?> drarrow <?> " ; };
String RID_DRARROW_HELP     { Text = "Double Arrow Right" ; };
String RID_SETN             { Text = "setN " ; };
String RID_SETN_HELP        { Text = "Natural Numbers Set" ; };
String RID_SETZ             { Text = "setZ " ; };
String RID_SETZ_HELP        { Text = "Integers Set" ; };
String RID_SETQ             { Text = "setQ " ; };
String RID_SETQ_HELP        { Text = "Set of Rational Numbers" ; };
String RID_SETR             { Text = "setR " ; };
String RID_SETR_HELP        { Text = "Real Numbers Set" ; };
String RID_SETC             { Text = "setC " ; };
String RID_SETC_HELP        { Text = "Complex Numbers Set" ; };
String RID_WIDEHATX         { Text = "widehat {<?>} " ; };
String RID_WIDEHATX_HELP    { Text = "Large Circumflex" ; };
String RID_WIDETILDEX       { Text = "widetilde {<?>} " ; };
String RID_WIDETILDEX_HELP  { Text = "Large Tilde" ; };
String RID_WIDEVECX         { Text = "widevec {<?>} " ; };
String RID_WIDEVECX_HELP    { Text = "Large Vector Arrow" ; };
String RID_HBAR             { Text = "hbar " ; };
String RID_HBAR_HELP        { Text = "h Bar" ; };
String RID_LAMBDABAR        { Text = "lambdabar " ; };
String RID_LAMBDABAR_HELP   { Text = "Lambda Bar" ; };
String RID_LEFTARROW        { Text = "leftarrow " ; };
String RID_LEFTARROW_HELP   { Text = "Left Arrow" ; };
String RID_RIGHTARROW       { Text = "rightarrow " ; };
String RID_RIGHTARROW_HELP  { Text = "Right Arrow" ; };
String RID_UPARROW          { Text = "uparrow " ; };
String RID_UPARROW_HELP     { Text = "Up Arrow" ; };
String RID_DOWNARROW        { Text = "downarrow " ; };
String RID_DOWNARROW_HELP   { Text = "Down Arrow" ; };
String RID_NOSPACE          { Text = "nospace {<?>} " ; };
String RID_NOSPACE_HELP     { Text = "No space" ; };

String RID_XPRECEDESY        { Text = "<?> prec <?> " ; };
String RID_XPRECEDESY_HELP   { Text = "Precedes" ; };
String RID_XPRECEDESEQUALY   { Text = "<?> preccurlyeq <?> " ; };
String RID_XPRECEDESEQUALY_HELP { Text = "Precedes or equal to" ; };
String RID_XPRECEDESEQUIVY   { Text = "<?> precsim <?> " ; };
String RID_XPRECEDESEQUIVY_HELP { Text = "Precedes or equivalent to" ; };
String RID_XSUCCEEDSY        { Text = "<?> succ <?> " ; };
String RID_XSUCCEEDSY_HELP   { Text = "Succeeds" ; };
String RID_XSUCCEEDSEQUALY   { Text = "<?> succcurlyeq <?> " ; };
String RID_XSUCCEEDSEQUALY_HELP { Text = "Succeeds or equal to" ; };
String RID_XSUCCEEDSEQUIVY   { Text = "<?> succsim <?> " ; };
String RID_XSUCCEEDSEQUIVY_HELP { Text = "Succeeds or equivalent to" ; };
String RID_XNOTPRECEDESY     { Text = "<?> nprec <?> " ; };
String RID_XNOTPRECEDESY_HELP { Text = "Not precedes" ; };
String RID_XNOTSUCCEEDSY     { Text = "<?> nsucc <?> " ; };
String RID_XNOTSUCCEEDSY_HELP { Text = "Not succeeds" ; };

String RID_CATEGORY_UNARY_BINARY_OPERATORS
{
    Text [ en-US ] = "Unary/Binary Operators" ;
};
String RID_CATEGORY_RELATIONS
{
    Text [ en-US ] = "Relations" ;
};
String RID_CATEGORY_SET_OPERATIONS
{
    Text [ en-US ] = "Set Operations" ;
};
String RID_CATEGORY_FUNCTIONS
{
    Text [ en-US ] = "Functions" ;
};
String RID_CATEGORY_OPERATORS
{
    Text [ en-US ] = "Operators" ;
};
String RID_CATEGORY_ATTRIBUTES
{
    Text [ en-US ] = "Attributes" ;
};
String RID_CATEGORY_BRACKETS
{
    Text [ en-US ] = "Brackets" ;
};
String RID_CATEGORY_FORMATS
{
    Text [ en-US ] = "Formats" ;
};
String RID_CATEGORY_OTHERS
{
    Text [ en-US ] = "Others" ;
};
String RID_CATEGORY_EXAMPLES
{
    Text [ en-US ] = "Examples" ;
};

//////////////////////////////////////////


Menu RID_COMMANDMENU
{
    ItemList =
    {
        MenuItem
        {
            Identifier = RID_UNBINOPS_MENU ;
            HelpId = HID_SMA_UNBINOPS_TBX ;
            Text [ en-US ] = "~Unary/Binary Operators" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_PLUSX;
                        HelpId = HID_SMA_PLUSX;
                        Text = "+a";
                    };
                    MenuItem
                    {
                        Identifier = RID_MINUSX;
                        HelpId = HID_SMA_MINUSX;
                        Text = "-a";
                    };
                    MenuItem
                    {
                        Identifier = RID_PLUSMINUSX;
                        HelpId = HID_SMA_PLUSMINUSX;
                        Text = "+-a";
                    };
                    MenuItem
                    {
                        Identifier = RID_MINUSPLUSX;
                        HelpId = HID_SMA_MINUSPLUSX;
                        Text = "-+a";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_XPLUSY;
                        HelpId = HID_SMA_XPLUSY;
                        Text = "a + b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XMINUSY;
                        HelpId = HID_SMA_XMINUSY;
                        Text = "a - b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XCDOTY;
                        HelpId = HID_SMA_XCDOTY;
                        Text = "a cdot b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XTIMESY;
                        HelpId = HID_SMA_XTIMESY;
                        Text = "a times b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSYMTIMESY;
                        HelpId = HID_SMA_XSYMTIMESY;
                        Text = "a * b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XOVERY;
                        HelpId = HID_SMA_XOVERY;
                        Text = "a over b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XDIVY;
                        HelpId = HID_SMA_XDIVY;
                        Text = "a div b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSYMDIVIDEY;
                        HelpId = HID_SMA_XSYMDIVIDEY;
                        Text = "a / b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XCIRCY;
                        HelpId = HID_SMA_XCIRCY;
                        Text = "a circ b";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_XWIDESLASHY;
                        HelpId = HID_SMA_XWIDESLASHY;
                        Text = "a wideslash b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XWIDEBSLASHY;
                        HelpId = HID_SMA_XWIDEBSLASHY;
                        Text = "a widebslash b";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_NEGX;
                        HelpId = HID_SMA_NEGX;
                        Text = "neg a";
                    };
                    MenuItem
                    {
                        Identifier = RID_XANDY;
                        HelpId = HID_SMA_XANDY;
                        Text = "a and b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XORY;
                        HelpId = HID_SMA_XORY;
                        Text = "a or b";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_RELATIONS_MENU ;
            HelpId = HID_SMA_RELATIONS_TBX ;
            Text [ en-US ] = "~Relations" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_XEQY;
                        HelpId = HID_SMA_XEQY;
                        Text = "a = b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNEQY;
                        HelpId = HID_SMA_XNEQY;
                        Text = "a <> b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XLTY;
                        HelpId = HID_SMA_XLTY;
                        Text = "a < b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XLEY;
                        HelpId = HID_SMA_XLEY;
                        Text = "a <= b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XLESLANTY;
                        HelpId = HID_SMA_XLESLANTY;
                        Text = "a leslant b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XGTY;
                        HelpId = HID_SMA_XGTY;
                        Text = "a > b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XGEY;
                        HelpId = HID_SMA_XGEY;
                        Text = "a >= b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XGESLANTY;
                        HelpId = HID_SMA_XGESLANTY;
                        Text = "a geslant b";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_XAPPROXY;
                        HelpId = HID_SMA_XAPPROXY;
                        Text = "a approx b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSIMY;
                        HelpId = HID_SMA_XSIMY;
                        Text = "a sim b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSIMEQY;
                        HelpId = HID_SMA_XSIMEQY;
                        Text = "a simeq b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XEQUIVY;
                        HelpId = HID_SMA_XEQUIVY;
                        Text = "a equiv b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XPROPY;
                        HelpId = HID_SMA_XPROPY;
                        Text = "a prop b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XPARALLELY;
                        HelpId = HID_SMA_XPARALLELY;
                        Text = "a parallel b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XORTHOY;
                        HelpId = HID_SMA_XORTHOY;
                        Text = "a ortho b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XDIVIDESY;
                        HelpId = HID_SMA_XDIVIDESY;
                        Text = "a divides b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNDIVIDESY;
                        HelpId = HID_SMA_XNDIVIDESY;
                        Text = "a ndivides b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XTOWARDY;
                        HelpId = HID_SMA_XTOWARDY;
                        Text = "a toward b";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_DLARROW;
                        HelpId = HID_SMA_DLARROW;
                        Text = "a dlarrow b";
                    };
                    MenuItem
                    {
                        Identifier = RID_DLRARROW;
                        HelpId = HID_SMA_DLRARROW;
                        Text = "a dlrarrow b";
                    };
                    MenuItem
                    {
                        Identifier = RID_DRARROW;
                        HelpId = HID_SMA_DRARROW;
                        Text = "a drarrow b";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_XPRECEDESY;
                        HelpId = HID_SMA_PRECEDES;
                        Text = "a prec b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUCCEEDSY;
                        HelpId = HID_SMA_SUCCEEDS;
                        Text = "a succ b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XPRECEDESEQUALY;
                        HelpId = HID_SMA_PRECEDESEQUAL;
                        Text = "a preccurlyeq b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUCCEEDSEQUALY;
                        HelpId = HID_SMA_SUCCEEDSEQUAL;
                        Text = "a succcurlyeq b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XPRECEDESEQUIVY;
                        HelpId = HID_SMA_PRECEDESEQUIV;
                        Text = "a precsim b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUCCEEDSEQUIVY;
                        HelpId = HID_SMA_SUCCEEDSEQUIV;
                        Text = "a succsim b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNOTPRECEDESY;
                        HelpId = HID_SMA_NOTPRECEDES;
                        Text = "a nprec b";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNOTSUCCEEDSY;
                        HelpId = HID_SMA_NOTSUCCEEDS;
                        Text = "a nsucc b";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_SETOPERATIONS_MENU ;
            HelpId = HID_SMA_SETOPERATIONS_TBX ;
            Text [ en-US ] = "~Set Operations" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_XINY;
                        HelpId = HID_SMA_XINY;
                        Text = "a in A";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNOTINY;
                        HelpId = HID_SMA_XNOTINY;
                        Text = "a notin A";
                    };
                    MenuItem
                    {
                        Identifier = RID_XOWNSY;
                        HelpId = HID_SMA_XOWNSY;
                        Text = "A owns a";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_XINTERSECTIONY;
                        HelpId = HID_SMA_XINTERSECTIONY;
                        Text = "A intersection B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XUNIONY;
                        HelpId = HID_SMA_XUNIONY;
                        Text = "A union B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSETMINUSY;
                        HelpId = HID_SMA_XSETMINUSY;
                        Text = "A \\ B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSLASHY;
                        HelpId = HID_SMA_XSLASHY;
                        Text = "A / B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUBSETY;
                        HelpId = HID_SMA_XSUBSETY;
                        Text = "A subset B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUBSETEQY;
                        HelpId = HID_SMA_XSUBSETEQY;
                        Text = "A subseteq B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUPSETY;
                        HelpId = HID_SMA_XSUPSETY;
                        Text = "A supset B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XSUPSETEQY;
                        HelpId = HID_SMA_XSUPSETEQY;
                        Text = "A supseteq B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNSUBSETY;
                        HelpId = HID_SMA_XNSUBSETY;
                        Text = "A nsubset B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNSUBSETEQY;
                        HelpId = HID_SMA_XNSUBSETEQY;
                        Text = "A nsubseteq B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNSUPSETY;
                        HelpId = HID_SMA_XNSUPSETY;
                        Text = "A nsupset B";
                    };
                    MenuItem
                    {
                        Identifier = RID_XNSUPSETEQY;
                        HelpId = HID_SMA_XNSUPSETEQY;
                        Text = "A nsupseteq B";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_EMPTYSET;
                        HelpId = HID_SMA_EMPTYSET;
                        Text = "emptyset";
                    };
                    MenuItem
                    {
                        Identifier = RID_ALEPH;
                        HelpId = HID_SMA_ALEPH;
                        Text = "aleph";
                    };
                    MenuItem
                    {
                        Identifier = RID_SETN;
                        HelpId = HID_SMA_SETN;
                        Text = "setN";
                    };
                    MenuItem
                    {
                        Identifier = RID_SETZ;
                        HelpId = HID_SMA_SETZ;
                        Text = "setZ";
                    };
                    MenuItem
                    {
                        Identifier = RID_SETQ;
                        HelpId = HID_SMA_SETQ;
                        Text = "setQ";
                    };
                    MenuItem
                    {
                        Identifier = RID_SETR;
                        HelpId = HID_SMA_SETR;
                        Text = "setR";
                    };
                    MenuItem
                    {
                        Identifier = RID_SETC;
                        HelpId = HID_SMA_SETC;
                        Text = "setC";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_FUNCTIONS_MENU ;
            HelpId = HID_SMA_FUNCTIONS_TBX ;
            Text [ en-US ] = "~Functions" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_ABSX;
                        HelpId = HID_SMA_ABSX;
                        Text = "|x|";
                    };
                    MenuItem
                    {
                        Identifier = RID_FACTX;
                        HelpId = HID_SMA_FACTX;
                        Text = "x!";
                    };
                    MenuItem
                    {
                        Identifier = RID_SQRTX;
                        HelpId = HID_SMA_SQRTX;
                        Text = "sqrt x";
                    };
                    MenuItem
                    {
                        Identifier = RID_NROOTXY;
                        HelpId = HID_SMA_NROOTXY;
                        Text = "nroot x y";
                    };
                    MenuItem
                    {
                        Identifier = RID_RSUPX;
                        HelpId = HID_SMA_RSUPX;
                        Text = "x^y";
                    };
                    MenuItem
                    {
                        Identifier = RID_EX;
                        HelpId = HID_SMA_EX;
                        Text = "e^x";
                    };
                    MenuItem
                    {
                        Identifier = RID_LNX;
                        HelpId = HID_SMA_LNX;
                        Text = "ln(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_EXPX;
                        HelpId = HID_SMA_EXPX;
                        Text = "exp(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_LOGX;
                        HelpId = HID_SMA_LOGX;
                        Text = "log(x)";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_SINX;
                        HelpId = HID_SMA_SINX;
                        Text = "sin(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_COSX;
                        HelpId = HID_SMA_COSX;
                        Text = "cos(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_TANX;
                        HelpId = HID_SMA_TANX;
                        Text = "tan(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_COTX;
                        HelpId = HID_SMA_COTX;
                        Text = "cot(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_SINHX;
                        HelpId = HID_SMA_SINHX;
                        Text = "sinh(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_COSHX;
                        HelpId = HID_SMA_COSHX;
                        Text = "cosh(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_TANHX;
                        HelpId = HID_SMA_TANHX;
                        Text = "tanh(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_COTHX;
                        HelpId = HID_SMA_COTHX;
                        Text = "coth(x)";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_FUNCTIONSOTHER1_MENU;
                        HelpId = HID_SMA_FUNCTIONSOTHER1_MENU;
                        Text [ en-US ] = "More";
                        SubMenu = Menu
                        {
                            ItemList =
                            {
                                MenuItem
                                {
                                    Identifier = RID_ARCSINX;
                                    HelpId = HID_SMA_ARCSINX;
                                    Text = "arcsin(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARCCOSX;
                                    HelpId = HID_SMA_ARCCOSX;
                                    Text = "arccos(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARCTANX;
                                    HelpId = HID_SMA_ARCTANX;
                                    Text = "arctan(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARCCOTX;
                                    HelpId = HID_SMA_ARCCOTX;
                                    Text = "arccot(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARSINHX;
                                    HelpId = HID_SMA_ARSINHX;
                                    Text = "arsinh(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARCOSHX;
                                    HelpId = HID_SMA_ARCOSHX;
                                    Text = "arcosh(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARTANHX;
                                    HelpId = HID_SMA_ARTANHX;
                                    Text = "artanh(x)";
                                };
                                MenuItem
                                {
                                    Identifier = RID_ARCOTHX;
                                    HelpId = HID_SMA_ARCOTHX;
                                    Text = "arcoth(x)";
                                };
                            };
                        };
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_OPERATORS_MENU ;
            HelpId = HID_SMA_OPERATORS_TBX ;
            Text [ en-US ] = "O~perators" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_LIMX;
                        HelpId = HID_SMA_LIMX;
                        Text = "lim x";
                    };
                    MenuItem
                    {
                        Identifier = RID_SUMX;
                        HelpId = HID_SMA_SUMX;
                        Text = "sum x";
                    };
                    MenuItem
                    {
                        Identifier = RID_PRODX;
                        HelpId = HID_SMA_PRODX;
                        Text = "prod x";
                    };
                    MenuItem
                    {
                        Identifier = RID_COPRODX;
                        HelpId = HID_SMA_COPRODX;
                        Text = "coprod x";
                    };
                    MenuItem
                    {
                        Identifier = RID_INTX;
                        HelpId = HID_SMA_INTX;
                        Text = "int x";
                    };
                    MenuItem
                    {
                        Identifier = RID_IINTX;
                        HelpId = HID_SMA_IINTX;
                        Text = "iint x";
                    };
                    MenuItem
                    {
                        Identifier = RID_IIINTX;
                        HelpId = HID_SMA_IIINTX;
                        Text = "iiint x";
                    };
                    MenuItem
                    {
                        Identifier = RID_LINTX;
                        HelpId = HID_SMA_LINTX;
                        Text = "lint x";
                    };
                    MenuItem
                    {
                        Identifier = RID_LLINTX;
                        HelpId = HID_SMA_LLINTX;
                        Text = "llint x";
                    };
                    MenuItem
                    {
                        Identifier = RID_LLLINTX;
                        HelpId = HID_SMA_LLLINTX;
                        Text = "lllint x";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_FROMXTOY;
                        HelpId = HID_SMA_FROMXTOY;
                        Text = "... from a to b";
                    };
                    MenuItem
                    {
                        Identifier = RID_FROMX;
                        HelpId = HID_SMA_FROMX;
                        Text = "... from a";
                    };
                    MenuItem
                    {
                        Identifier = RID_TOX;
                        HelpId = HID_SMA_TOX;
                        Text = "... to b";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_ATTRIBUTES_MENU ;
            HelpId = HID_SMA_ATTRIBUTES_TBX ;
            Text [ en-US ] = "~Attributes" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_ACUTEX;
                        HelpId = HID_SMA_ACUTEX;
                        Text = "acute a";
                    };
                    MenuItem
                    {
                        Identifier = RID_GRAVEX;
                        HelpId = HID_SMA_GRAVEX;
                        Text = "grave a";
                    };
                    MenuItem
                    {
                        Identifier = RID_CHECKX;
                        HelpId = HID_SMA_CHECKX;
                        Text = "check a";
                    };
                    MenuItem
                    {
                        Identifier = RID_BREVEX;
                        HelpId = HID_SMA_BREVEX;
                        Text = "breve a";
                    };
                    MenuItem
                    {
                        Identifier = RID_CIRCLEX;
                        HelpId = HID_SMA_CIRCLEX;
                        Text = "circle a";
                    };
                    MenuItem
                    {
                        Identifier = RID_DOTX;
                        HelpId = HID_SMA_DOTX;
                        Text = "dot a";
                    };
                    MenuItem
                    {
                        Identifier = RID_DDOTX;
                        HelpId = HID_SMA_DDOTX;
                        Text = "ddot a";
                    };
                    MenuItem
                    {
                        Identifier = RID_DDDOTX;
                        HelpId = HID_SMA_DDDOTX;
                        Text = "dddot a";
                    };
                    MenuItem
                    {
                        Identifier = RID_BARX;
                        HelpId = HID_SMA_BARX;
                        Text = "bar a";
                    };
                    MenuItem
                    {
                        Identifier = RID_VECX;
                        HelpId = HID_SMA_VECX;
                        Text = "vec a";
                    };
                    MenuItem
                    {
                        Identifier = RID_TILDEX;
                        HelpId = HID_SMA_TILDEX;
                        Text = "tilde a";
                    };
                    MenuItem
                    {
                        Identifier = RID_HATX;
                        HelpId = HID_SMA_HATX;
                        Text = "hat a";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_WIDEVECX;
                        HelpId = HID_SMA_WIDEVECX;
                        Text = "widevec abc";
                    };
                    MenuItem
                    {
                        Identifier = RID_WIDETILDEX;
                        HelpId = HID_SMA_WIDETILDEX;
                        Text = "widetilde abc";
                    };
                    MenuItem
                    {
                        Identifier = RID_WIDEHATX;
                        HelpId = HID_SMA_WIDEHATX;
                        Text = "widehat abc";
                    };
                    MenuItem
                    {
                        Identifier = RID_OVERLINEX;
                        HelpId = HID_SMA_OVERLINEX;
                        Text = "overline abc";
                    };
                    MenuItem
                    {
                        Identifier = RID_UNDERLINEX;
                        HelpId = HID_SMA_UNDERLINEX;
                        Text = "underline abc";
                    };
                    MenuItem
                    {
                        Identifier = RID_OVERSTRIKEX;
                        HelpId = HID_SMA_OVERSTRIKEX;
                        Text = "overstrike abc";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_PHANTOMX;
                        HelpId = HID_SMA_PHANTOMX;
                        Text = "phantom b";
                    };
                    MenuItem
                    {
                        Identifier = RID_BOLDX;
                        HelpId = HID_SMA_BOLDX;
                        Text = "bold b";
                    };
                    MenuItem
                    {
                        Identifier = RID_ITALX;
                        HelpId = HID_SMA_ITALX;
                        Text = "ital b";
                    };
                    MenuItem
                    {
                        Identifier = RID_SIZEXY;
                        HelpId = HID_SMA_SIZEXY;
                        Text = "size s b";
                    };
                    MenuItem
                    {
                        Identifier = RID_FONTXY;
                        HelpId = HID_SMA_FONTXY;
                        Text = "font f b";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_BRACKETS_MENU ;
            HelpId = HID_SMA_BRACKETS_TBX ;
            Text [ en-US ] = "~Brackets" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_LRGROUPX;
                        HelpId = HID_SMA_LRGROUPX;
                        Text = "{...}";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_LRPARENTX;
                        HelpId = HID_SMA_LRPARENTX;
                        Text = "(x)";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRBRACKETX;
                        HelpId = HID_SMA_LRBRACKETX;
                        Text = "[x]";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRDBRACKETX;
                        HelpId = HID_SMA_LRDBRACKETX;
                        Text = "ldbracket x rdbracket ";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRBRACEX;
                        HelpId = HID_SMA_LRBRACEX;
                        Text = "{x}";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRANGLEX;
                        HelpId = HID_SMA_LRANGLEX;
                        Text = "langle x rangle";
                    };
                    MenuItem
                    {
                        Identifier = RID_LMRANGLEXY;
                        HelpId = HID_SMA_LMRANGLEXY;
                        Text = "langle x mline y rangle";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRCEILX;
                        HelpId = HID_SMA_LRCEILX;
                        Text = "lceil x rceil";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRFLOORX;
                        HelpId = HID_SMA_LRFLOORX;
                        Text = "lfloor x rfloor";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRLINEX;
                        HelpId = HID_SMA_LRLINEX;
                        Text = "lline x rline";
                    };
                    MenuItem
                    {
                        Identifier = RID_LRDLINEX;
                        HelpId = HID_SMA_LRDLINEX;
                        Text = "ldline x rdline";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRPARENTX;
                        HelpId = HID_SMA_SLRPARENTX;
                        Text = "left ( x right )";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRBRACKETX;
                        HelpId = HID_SMA_SLRBRACKETX;
                        Text = "left [ x right ]";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRDBRACKETX;
                        HelpId = HID_SMA_SLRDBRACKETX;
                        Text = "left ldbracket x right rdbracket ";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRBRACEX;
                        HelpId = HID_SMA_SLRBRACEX;
                        Text = "left { x right }";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRANGLEX;
                        HelpId = HID_SMA_SLRANGLEX;
                        Text = "left langle x right rangle";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLMRANGLEXY;
                        HelpId = HID_SMA_SLMRANGLEXY;
                        Text = "left langle x mline y right rangle";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRCEILX;
                        HelpId = HID_SMA_SLRCEILX;
                        Text = "left lceil x right rceil";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRFLOORX;
                        HelpId = HID_SMA_SLRFLOORX;
                        Text = "left lfloor x right rfloor";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRLINEX;
                        HelpId = HID_SMA_SLRLINEX;
                        Text = "left lline x right rline";
                    };
                    MenuItem
                    {
                        Identifier = RID_SLRDLINEX;
                        HelpId = HID_SMA_SLRDLINEX;
                        Text = "left ldline x right rdline";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_XOVERBRACEY;
                        HelpId = HID_SMA_XOVERBRACEY;
                        Text = "x overbrace y";
                    };
                    MenuItem
                    {
                        Identifier = RID_XUNDERBRACEY;
                        HelpId = HID_SMA_XUNDERBRACEY;
                        Text = "x underbrace y";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_FORMAT_MENU ;
            HelpId = HID_SMA_FORMAT_TBX ;
            Text [ en-US ] = "For~mats" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_RSUPX;
                        HelpId = HID_SMA_RSUPX;
                        Text = "^x";
                    };
                    MenuItem
                    {
                        Identifier = RID_RSUBX;
                        HelpId = HID_SMA_RSUBX;
                        Text = "_x";
                    };
                    MenuItem
                    {
                        Identifier = RID_LSUPX;
                        HelpId = HID_SMA_LSUPX;
                        Text = "lsup x";
                    };
                    MenuItem
                    {
                        Identifier = RID_LSUBX;
                        HelpId = HID_SMA_LSUBX;
                        Text = "lsub x";
                    };
                    MenuItem
                    {
                        Identifier = RID_CSUPX;
                        HelpId = HID_SMA_CSUPX;
                        Text = "csup x";
                    };
                    MenuItem
                    {
                        Identifier = RID_CSUBX;
                        HelpId = HID_SMA_CSUBX;
                        Text = "csub x";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_NEWLINE;
                        HelpId = HID_SMA_NEWLINE;
                        Text [ en-US ] = "New Line";
                    };
                    MenuItem
                    {
                        Identifier = RID_SBLANK;
                        HelpId = HID_SMA_SBLANK;
                        Text [ en-US ] = "Small Gap";
                    };
                    MenuItem
                    {
                        Identifier = RID_BLANK;
                        HelpId = HID_SMA_BLANK;
                        Text [ en-US ] = "Gap";
                    };
                    MenuItem
                    {
                        Identifier = RID_NOSPACE;
                        HelpId = HID_SMA_NOSPACE;
                        Text [ en-US ] = "nospace {...}";
                    };
                    MenuItem
                    {
                        Identifier = RID_BINOMXY;
                        HelpId = HID_SMA_BINOMXY;
                        Text = "binom x y";
                    };
                    MenuItem
                    {
                        Identifier = RID_STACK;
                        HelpId = HID_SMA_STACK;
                        Text = "stack {...}";
                    };
                    MenuItem
                    {
                        Identifier = RID_MATRIX;
                        HelpId = HID_SMA_MATRIX;
                        Text = "matrix {...}";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_ALIGNLX;
                        HelpId = HID_SMA_ALIGNLX;
                        Text = "alignl x";
                    };
                    MenuItem
                    {
                        Identifier = RID_ALIGNCX;
                        HelpId = HID_SMA_ALIGNCX;
                        Text = "alignc x";
                    };
                    MenuItem
                    {
                        Identifier = RID_ALIGNRX;
                        HelpId = HID_SMA_ALIGNRX;
                        Text = "alignr x";
                    };
                };
            };
        };
        MenuItem
        {
            Identifier = RID_MISC_MENU ;
            HelpId = HID_SMA_MISC_MENU ;
            Text [ en-US ] = "~Others" ;
            SubMenu = Menu
            {
                ItemList =
                {
                    MenuItem
                    {
                        Identifier = RID_INFINITY;
                        HelpId = HID_SMA_INFINITY;
                        Text = "infinity";
                    };
                    MenuItem
                    {
                        Identifier = RID_PARTIAL;
                        HelpId = HID_SMA_PARTIAL;
                        Text = "partial";
                    };
                    MenuItem
                    {
                        Identifier = RID_NABLA;
                        HelpId = HID_SMA_NABLA;
                        Text = "nabla";
                    };
                    MenuItem
                    {
                        Identifier = RID_EXISTS;
                        HelpId = HID_SMA_EXISTS;
                        Text = "exists";
                    };
                    MenuItem
                    {
                        Identifier = RID_NOTEXISTS;
                        HelpId = HID_SMA_NOTEXISTS;
                        Text = "not exists";
                    };
                    MenuItem
                    {
                        Identifier = RID_FORALL;
                        HelpId = HID_SMA_FORALL;
                        Text = "forall";
                    };
                    MenuItem
                    {
                        Identifier = RID_HBAR;
                        HelpId = HID_SMA_HBAR;
                        Text = "hbar";
                    };
                    MenuItem
                    {
                        Identifier = RID_LAMBDABAR;
                        HelpId = HID_SMA_LAMBDABAR;
                        Text = "lambdabar";
                    };
                    MenuItem
                    {
                        Identifier = RID_RE;
                        HelpId = HID_SMA_RE;
                        Text = "Re";
                    };
                    MenuItem
                    {
                        Identifier = RID_IM;
                        HelpId = HID_SMA_IM;
                        Text = "Im";
                    };
                    MenuItem
                    {
                        Identifier = RID_WP;
                        HelpId = HID_SMA_WP;
                        Text = "wp";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_LEFTARROW;
                        HelpId = HID_SMA_LEFTARROW;
                        Text = "leftarrow";
                    };
                    MenuItem
                    {
                        Identifier = RID_RIGHTARROW;
                        HelpId = HID_SMA_RIGHTARROW;
                        Text = "rightarrow";
                    };
                    MenuItem
                    {
                        Identifier = RID_UPARROW;
                        HelpId = HID_SMA_UPARROW;
                        Text = "uparrow";
                    };
                    MenuItem
                    {
                        Identifier = RID_DOWNARROW;
                        HelpId = HID_SMA_DOWNARROW;
                        Text = "downarrow";
                    };
                    MenuItem
                    {
                        Separator = TRUE;
                    };
                    MenuItem
                    {
                        Identifier = RID_DOTSLOW;
                        HelpId = HID_SMA_DOTSLOW;
                        Text = "dotslow";
                    };
                    MenuItem
                    {
                        Identifier = RID_DOTSAXIS;
                        HelpId = HID_SMA_DOTSAXIS;
                        Text = "dotsaxis";
                    };
                    MenuItem
                    {
                        Identifier = RID_DOTSVERT;
                        HelpId = HID_SMA_DOTSVERT;
                        Text = "dotsvert";
                    };
                    MenuItem
                    {
                        Identifier = RID_DOTSUP;
                        HelpId = HID_SMA_DOTSUP;
                        Text = "dotsup";
                    };
                    MenuItem
                    {
                        Identifier = RID_DOTSDOWN;
                        HelpId = HID_SMA_DOTSDOWN;
                        Text = "dotsdown";
                    };
                };
            };
        };
    };
};

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
