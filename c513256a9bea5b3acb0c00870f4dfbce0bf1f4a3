{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "de34b937_f6b43c9a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-04T12:24:57Z",
      "side": 1,
      "message": "adding API to sal",
      "revId": "c513256a9bea5b3acb0c00870f4dfbce0bf1f4a3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "309ac781_4e9efac9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-04T12:49:02Z",
      "side": 1,
      "message": "without looking in detail now, but is this probably a reincarnation of what has been covered already at \u003chttps://git.libreoffice.org/core/+/9230c189ebc5bcfd6303bfa7eebcd35488037d00%5E!/\u003e \"Use existing rtl_str_toInt64_WithLength\"?",
      "revId": "c513256a9bea5b3acb0c00870f4dfbce0bf1f4a3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "779d79b4_d96fc2fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-04-04T12:59:24Z",
      "side": 1,
      "message": "I don\u0027t understand the resistance to adding a new entrypoint, especially since it is internal only. We can certainly duplicate code and re-use the existing toInt64 entrypoint, but why? The code in sal/ is already there - we\u0027re just adding another way of calling it and making the whole API more symmetric in the process.",
      "parentUuid": "309ac781_4e9efac9",
      "revId": "c513256a9bea5b3acb0c00870f4dfbce0bf1f4a3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91298d68_8da01cee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2022-04-05T07:47:29Z",
      "side": 1,
      "message": "The sad truth is that even if we add symbols only to nominally PRIVATE_* sections in sal/util/sal.map, we would presumably not be able to change or remove the corresponding functions again later without doing an SONAME bump of Library_sal, which is something that at least Linux distros would arguably like to avoid.  Hence the resistance to changes to sal.map (compared to include-file--only #if LIBO_INTERNAL_ONLY additions).",
      "parentUuid": "779d79b4_d96fc2fb",
      "revId": "c513256a9bea5b3acb0c00870f4dfbce0bf1f4a3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}