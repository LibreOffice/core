{
  "comments": [
    {
      "key": {
        "uuid": "ff5d4b2f_40ee0789",
        "filename": "basic/source/runtime/methods.cxx",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:30:56Z",
      "side": 1,
      "message": "Is this static required at all? isn\u0027t it enough to simply make the following line\n\n    static CharClass aCharClass(Application::GetSettings().GetLanguageTag());",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 82
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_00212fb5",
        "filename": "connectivity/source/drivers/jdbc/CallableStatement.cxx",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:30:56Z",
      "side": 1,
      "message": "why not simply\n\n    char cSignature[] \u003d ...?\n\nor even simply put it inline into a multiline function call.\nHas the static pointer some advantage here?",
      "range": {
        "startLine": 332,
        "startChar": 12,
        "endLine": 332,
        "endChar": 48
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_bb46184f",
        "filename": "connectivity/source/drivers/jdbc/CallableStatement.cxx",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2018-11-20T12:54:08Z",
      "side": 1,
      "message": "probably just historical, I don\u0027t know of any good reason, either way the compiler will put it into the readonly linker segment",
      "parentUuid": "ff5d4b2f_00212fb5",
      "range": {
        "startLine": 332,
        "startChar": 12,
        "endLine": 332,
        "endChar": 48
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_c003170f",
        "filename": "forms/source/component/Columns.cxx",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:30:56Z",
      "side": 1,
      "message": "Initialization of size 10 is lost...",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 41
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_5b083c27",
        "filename": "forms/source/component/Edit.cxx",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:30:56Z",
      "side": 1,
      "message": "won\u0027t work this?\n\n    static Sequence\u003cType\u003e const aTypes \u003d concatSequences(OBoundControl::_getTypes(), OEditControl_BASE::getTypes());",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 68,
        "endChar": 8
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_fb0ed030",
        "filename": "forms/source/component/ImageButton.cxx",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:47:47Z",
      "side": 1,
      "message": "possibly just\n\n    static Sequence\u003cType\u003e const aTypes \u003d concatSequences(OClickableImageBaseControl::_getTypes(), OImageButtonControl_BASE::getTypes());",
      "range": {
        "startLine": 146,
        "startChar": 41,
        "endLine": 148,
        "endChar": 14
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_db1b0c71",
        "filename": "forms/source/component/clickableimage.cxx",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:47:47Z",
      "side": 1,
      "message": "...and here",
      "range": {
        "startLine": 80,
        "startChar": 42,
        "endLine": 82,
        "endChar": 18
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_7b2c2099",
        "filename": "forms/source/runtime/formoperations.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1202,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:47:47Z",
      "side": 1,
      "message": "Can\u0027t we use an initializer list here?",
      "range": {
        "startLine": 1191,
        "startChar": 72,
        "endLine": 1202,
        "endChar": 12
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_5b215c9f",
        "filename": "helpcompiler/source/HelpCompiler.cxx",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:47:47Z",
      "side": 1,
      "message": "static rtl_TextEncoding nThreadTextEncoding \u003d osl_getThreadTextEncoding();",
      "range": {
        "startLine": 512,
        "startChar": 54,
        "endLine": 514,
        "endChar": 18
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_3b26a8b9",
        "filename": "sal/osl/unx/profile.cxx",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:47:47Z",
      "side": 1,
      "message": "static bool const bLockingDisabled \u003d getenv(\"STAR_PROFILE_LOCKING_DISABLED\") !\u003d nullptr;",
      "range": {
        "startLine": 882,
        "startChar": 4,
        "endLine": 888,
        "endChar": 8
      },
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_bb185875",
        "filename": "sal/rtl/hash.cxx",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000821
      },
      "writtenOn": "2018-11-20T12:37:55Z",
      "side": 1,
      "message": "It looks like a memory leak here to me.",
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_7b7ae088",
        "filename": "sal/rtl/hash.cxx",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2018-11-20T12:54:41Z",
      "side": 1,
      "message": "probably, but it was here before this patch, and sometimes we leak deliberately to avoid shutdown issues, so I\u0027m not going to touch it here :-)",
      "parentUuid": "ff5d4b2f_bb185875",
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_3b746899",
        "filename": "sal/rtl/hash.cxx",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:57:52Z",
      "side": 1,
      "message": "iiuc, a memory leak is failure to release a memory that is no longer used. A static is meant to be usable until program finishes (when all memory is released anyway), so why memory leak?",
      "parentUuid": "ff5d4b2f_bb185875",
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_fb65b0e2",
        "filename": "sal/rtl/hash.cxx",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000821
      },
      "writtenOn": "2018-11-20T13:05:30Z",
      "side": 1,
      "message": "Remove !pInternPool check might cause the old pInternPool overwritten and unreferenced, since rtl_str_hash_new invoked malloc again. Or do we have a garbage collection here?",
      "parentUuid": "ff5d4b2f_7b7ae088",
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_bbb4d836",
        "filename": "sal/rtl/hash.cxx",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000821
      },
      "writtenOn": "2018-11-20T13:07:00Z",
      "side": 1,
      "message": ";-) Ah I misunderstood. Never mind.",
      "parentUuid": "ff5d4b2f_fb65b0e2",
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5d4b2f_db342ce1",
        "filename": "sc/source/ui/docshell/impex.cxx",
        "patchSetId": 1
      },
      "lineNbr": 2353,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2018-11-20T12:47:47Z",
      "side": 1,
      "message": "I\u0027m afraid it will still need some return here to please some compilers...",
      "revId": "692900b0e878a31137899457fd277ac0164d69ab",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}