{
  "comments": [
    {
      "key": {
        "uuid": "df87a7cf_3d769308",
        "filename": "include/osl/mutex.hxx",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-04-10T16:55:41Z",
      "side": 1,
      "message": "the assert needs to go in an #else branch, as the interface is still broad for !LIBO_INTERNAL_ONLY",
      "revId": "01094f9e3a2a18cbe47d4ebe30d03b906c4ba9a9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df87a7cf_1d670f50",
        "filename": "include/osl/mutex.hxx",
        "patchSetId": 2
      },
      "lineNbr": 243,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-04-10T16:55:41Z",
      "side": 1,
      "message": "my comment \"...and similarly here\" was probably a bit terse.\n\n(1) The recently added assert(!this-\u003epT) needs to be conditional on LIBO_INTERNAL_ONLY, to keep the interaface broad for !LIBO_INTERNAL_ONLY (i.e., keep allowing to call reset on an already reset instance).\n\n(2) The if(pResetT) around\n\n  this-\u003epT \u003d pResetT;\n  this-\u003epT-\u003eacauire();\n\n(but /not/ around assert(!this-\u003epT), which must invariably hold upon entry to this function under the new LIBO_INTERNAL_ONLY narrow interface semantics) accidentally got lost during \u003chttps://gerrit.libreoffice.org/70381\u003e \"[API CHANGE] Asserts to never clear already cleared guard\".  My intention at least was to keep it intact, to acknowledge the (unlikely) possibility that a derived class modifies pResetT.",
      "revId": "01094f9e3a2a18cbe47d4ebe30d03b906c4ba9a9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df87a7cf_bd5b8385",
        "filename": "include/osl/mutex.hxx",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-04-10T16:55:41Z",
      "side": 1,
      "message": "why introduce a distracting, unrelated change here?",
      "range": {
        "startLine": 248,
        "startChar": 23,
        "endLine": 248,
        "endChar": 39
      },
      "revId": "01094f9e3a2a18cbe47d4ebe30d03b906c4ba9a9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df87a7cf_ddd527bb",
        "filename": "include/osl/mutex.hxx",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-04-10T17:31:27Z",
      "side": 1,
      "message": "I can send an extra patch.\n\nIsn\u0027t calling reset() without clear() wrong usage?",
      "parentUuid": "df87a7cf_bd5b8385",
      "range": {
        "startLine": 248,
        "startChar": 23,
        "endLine": 248,
        "endChar": 39
      },
      "revId": "01094f9e3a2a18cbe47d4ebe30d03b906c4ba9a9",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}