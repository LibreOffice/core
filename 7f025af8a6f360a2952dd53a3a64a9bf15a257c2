{
  "comments": [
    {
      "key": {
        "uuid": "f4c7d62c_1b81a207",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-01-11T06:27:32Z",
      "side": 1,
      "message": "It is required that you also add the test case as a unit test into the patch, so that the failure is seen, and it would pass when you finish the fix.",
      "range": {
        "startLine": 7,
        "startChar": 39,
        "endLine": 7,
        "endChar": 83
      },
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2c37c8_6d37f992",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-01-11T06:27:32Z",
      "side": 1,
      "message": "And what if there\u0027s no info? does this mean we must assume that variant is expected? Does SbiRuntime::SetParameters assume that, too, when checks the type?",
      "range": {
        "startLine": 9,
        "startChar": 29,
        "endLine": 9,
        "endChar": 69
      },
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfaa5113_75e062eb",
        "filename": "scripting/source/basprov/basscript.cxx",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-01-11T05:32:54Z",
      "side": 1,
      "message": "Please don\u0027t add *unrelated* formatting edits, like here and in lines 202-205. In these lines, the only difference is whitespace edits, and these changes introduce noise when reviewing; and also make these lines have additional noise in git blame. Your changes must only have those changes that are necessary for your task, not a single whitespace changed in other lines.",
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35f2a17_75fffee0",
        "filename": "scripting/source/basprov/basscript.cxx",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-01-11T05:32:54Z",
      "side": 1,
      "message": "The new/changed code must follow our clang-format rules. E.g., here you have two formatting errors:\n\n1. No space between if and opening bracket;\n2. Opening brace on the same line (not on the separate line).",
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f780fcc1_ace7afd9",
        "filename": "scripting/source/basprov/basscript.cxx",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-01-11T05:32:54Z",
      "side": 1,
      "message": "Please use 4 spaces for indentation, not tabs. All IDEs allow you to configure for insertion of spaces when you press Tab.",
      "range": {
        "startLine": 210,
        "startChar": 16,
        "endLine": 210,
        "endChar": 17
      },
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a5abd34_ec708869",
        "filename": "scripting/source/basprov/basscript.cxx",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1002925
      },
      "writtenOn": "2021-01-11T19:55:53Z",
      "side": 1,
      "message": "Okay i will follow this next time i will submit patch.",
      "parentUuid": "f780fcc1_ace7afd9",
      "range": {
        "startLine": 210,
        "startChar": 16,
        "endLine": 210,
        "endChar": 17
      },
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76ac5d8b_e653253a",
        "filename": "scripting/source/basprov/basscript.cxx",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-01-11T06:27:32Z",
      "side": 1,
      "message": "Do you actually use the param info somewhere? Below, you compare type of \"v\" to type of \"xSbxVar\", but both are actually objects in xSbxParams (xSbxVar is put into xSbxParams with index \"i+1\" in line 206, and then you vet v from xSbxParams index \"i\" in line 210), and you are expected to compare actual param type to the type in info?",
      "range": {
        "startLine": 211,
        "startChar": 38,
        "endLine": 211,
        "endChar": 48
      },
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b1f0e90_2f9c66c7",
        "filename": "scripting/source/basprov/basscript.cxx",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1002925
      },
      "writtenOn": "2021-01-11T19:55:53Z",
      "side": 1,
      "message": "From my understanding i thought xSbxParams will return the actual parameter type.And then it is checked that parameter type is expecting variant or not with this condition: \n\nstatic_cast\u003cSbxDataType\u003e(v-\u003eGetType() \u0026 0x0FFF ) !\u003d SbxVARIANT\n\nNow i understand v is not the actual parameter. \nKindly speaking can you help me how to get the actual parameter type since i am kind of stuck into the same?",
      "parentUuid": "76ac5d8b_e653253a",
      "range": {
        "startLine": 211,
        "startChar": 38,
        "endLine": 211,
        "endChar": 48
      },
      "revId": "7f025af8a6f360a2952dd53a3a64a9bf15a257c2",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}