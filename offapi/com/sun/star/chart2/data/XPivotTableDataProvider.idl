/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

#ifndef com_sun_star_chart2_data_XPivotTableDataProvider_idl
#define com_sun_star_chart2_data_XPivotTableDataProvider_idl

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/chart2/data/PivotTableFieldEntry.idl>

module com { module sun { module star { module chart2 { module data {

/**
 * Data provider specific for pivot chart data.
 *
 * @since LibreOffice 5.4
 */
interface XPivotTableDataProvider : com::sun::star::uno::XInterface
{
    /** names of column fields from the associated pivot table
     */
    sequence<com::sun::star::chart2::data::PivotTableFieldEntry> getColumnFields();

    /** names of row fields from the associated pivot table
     */
    sequence<com::sun::star::chart2::data::PivotTableFieldEntry> getRowFields();

    /** names of page fields from the associated pivot table
     */
    sequence<com::sun::star::chart2::data::PivotTableFieldEntry> getPageFields();

    /** names of data fields from the associated pivot table
     */
    sequence<com::sun::star::chart2::data::PivotTableFieldEntry> getDataFields();

    /** get the associated pivot table name
     */
    string getPivotTableName();

    /** set the associated pivot table name
     */
     void setPivotTableName([in] string sPivotTableName);

    /** check if the associated pivot table exists
     */
    boolean hasPivotTable();

    /** creates a single data sequence of values for the given data series index.
     *
     *  @param nIndex
     *      index of the data series
     */
    XDataSequence createDataSequenceOfValuesByIndex([in] long nIndex);

    /** creates a single data sequence of label(s) for the given data series index.
     *
     *  @param nIndex
     *      index of the data series
     */
     XDataSequence createDataSequenceOfLabelsByIndex([in] long nIndex);

    /** creates a single data sequence of categories.
     */
    XDataSequence createDataSequenceOfCategories();

    /** field output description: either "- all -", "- multiple -", or specific value
     *
     * @param nDimensionIndex
     *     dimension index of the field
     */
    string getFieldOutputDescription([in] long nDimensionIndex);
};

};};};};};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
