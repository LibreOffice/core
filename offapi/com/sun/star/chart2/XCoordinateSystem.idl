/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef com_sun_star_chart2_XCoordinateSystem_idl
#define com_sun_star_chart2_XCoordinateSystem_idl

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#include <com/sun/star/chart2/XAxis.idl>

module com
{
module sun
{
module star
{
module chart2
{

interface XCoordinateSystem : ::com::sun::star::uno::XInterface
{
    /** the dimension of the coordinate-system.
     */
    long getDimension();

    /** identifies the type of coordinate system (e.g. Cartesian, polar ...)
    */
    string getCoordinateSystemType();

    /** return a service name from which the view component for this coordinate system can be created
    */
    string getViewServiceName();

    /** The dimension says whether it is a x, y or z axis.
        The index says whether it is a primary or a secondary axis.
        Use nIndex == 0 for a primary axis.
     */
    void setAxisByDimension( [in] long nDimension,
                              [in] XAxis xAxis,
                              [in] long nIndex )
        raises( com::sun::star::lang::IndexOutOfBoundsException );

    /** The dimension says whether it is a x, y or z axis.
        The index indicates whether it is a primary or a secondary axis or maybe more in future.
        Use nIndex == 0 for a primary axis.
        An empty Reference will be returned if the given nDimension and nIndex are in the valid range but no axis is set for those values.
        An IndexOutOfBoundsException will be thrown if nDimension is lower than 0 or greater than the value returned by getDimension()
        and/or if nIndex is lower 0 or greater than the value returned by getMaxAxisIndexByDimension(nDimension).
     */
    XAxis getAxisByDimension( [in] long nDimension, [in] long nIndex )
        raises( com::sun::star::lang::IndexOutOfBoundsException );

    /** In one dimension there could be several axes to enable main and secondary axis and maybe more in future.
        This method returns the maximum index at which an axis exists for the given dimension.
        It is allowed that some indexes in between do not have an axis.
    */
    long getMaximumAxisIndexByDimension( [in] long nDimension )
        raises( com::sun::star::lang::IndexOutOfBoundsException );
};

} ; // chart2
} ; // com
} ; // sun
} ; // star


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
