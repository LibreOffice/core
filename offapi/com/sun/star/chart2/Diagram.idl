/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef com_sun_star_chart2_Diagram_idl
#define com_sun_star_chart2_Diagram_idl

#include <com/sun/star/chart2/XDiagram.idl>
#include <com/sun/star/chart2/XCoordinateSystemContainer.idl>
#include <com/sun/star/chart2/XTitled.idl>
#include <com/sun/star/chart2/RelativePosition.idl>
#include <com/sun/star/chart2/RelativeSize.idl>
#include <com/sun/star/chart/X3DDefaultSetter.idl>

module com
{
module sun
{
module star
{
module chart2
{

/**
 */
service Diagram
{
    /**
     */
    interface ::com::sun::star::chart2::XDiagram;

    /**
     */
    interface ::com::sun::star::chart2::XCoordinateSystemContainer;

    /** gives access to the sub title of a chart document
     */
    interface  XTitled;

    /** makes it easy to set suitable defaults for illumination and rotation for 3D charts
     */
    [optional] interface ::com::sun::star::chart::X3DDefaultSetter;

    /** The position is as a relative position on the page.

        <p>If a relative position is given the diagram is not automatically placed,
        but instead is placed relative on the page.</p>
     */
    [property, maybevoid] ::com::sun::star::chart2::RelativePosition RelativePosition;

    /** The size of the diagram as relative size of the page size.
     */
    [property] ::com::sun::star::chart2::RelativeSize RelativeSize;

    /** The attributes RelativePosition and RelativeSize should be used for the inner coordinate region without axis labels and without data labels.
     */
    [optional, property] boolean                    PosSizeExcludeLabels;

    /** Sort data points by x values for rendering
     */
    [optional, property] boolean                    SortByXValues;

    /** Draw connection lines for stacked bar charts.
     */
    [optional, property] boolean                    ConnectBars;

    /** If bars of a bar or column chart are attached to different
        axis, this property determines how to display those.  If
        `TRUE`, the bars are grouped together in one block for each
        axis, thus they are painted one group over the other.

        <p>If `FALSE`, the bars are displayed side-by-side, as if
        they were all attached to the same axis.</p>

        <p>If all data series of a bar or column chart are attached to
        only one axis, this property has no effect.</p>
    */
    [optional, property] boolean                    GroupBarsPerAxis;

    /** Starting angle in degrees for pie charts and doughnut charts.
     */
    [optional, property] long                       StartingAngle;

    [optional, property] boolean                    RightAngledAxes;

    /** Chart Datatable flags
    */
    [optional, property] boolean                    DataTableHBorder;
    [optional, property] boolean                    DataTableVBorder;
    [optional, property] boolean                    DataTableOutline;

    /** Perspective of 3D charts ( [0,100] ).
     */
    [optional, property] long                       Perspective;

    /** Horizontal rotation of 3D charts in degrees ( ]-180,180] ).
     */
    [optional, property] long                       RotationHorizontal;

    /** Vertical rotation of 3D charts in degrees ( ]-180,180] ).
     */
    [optional, property] long                       RotationVertical;

    /** specifies how empty or invalid cells in the provided data should be handled when displayed

        @see ::com::sun::star::chart::MissingValueTreatment
     */
    [optional, property] long                       MissingValueTreatment;

    [optional, property] string                     ExternalData;

};

} ; // chart2
} ; // com
} ; // sun
} ; // star

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
