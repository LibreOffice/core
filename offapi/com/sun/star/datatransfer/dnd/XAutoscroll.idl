/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_datatransfer_dnd_XAutoscroll_idl__
#define __com_sun_star_datatransfer_dnd_XAutoscroll_idl__

#include <com/sun/star/uno/XInterface.idl>


module com { module sun { module star { module datatransfer { module dnd {

/** Interface for autoscroll support.

    <p>During Drag and Drop operations it is possible that a user may wish to drop the
    subject of the operation on a region of a scrollable GUI control that is
    not currently visible to the user.</p>

    <p>In such situations it is desirable that the GUI control detect this and
    institute a scroll operation in order to make obscured region(s) visible to
    the user. This feature is known as autoscrolling.</p>

    <p>If a GUI control is both an active DropTarget and is also scrollable,
    it can receive notifications of autoscrolling gestures by the user from
    the Drag and Drop system by implementing this interface.</p>

    <p>An autoscrolling gesture is initiated by the user by keeping the drag
    cursor motionless with a border region of the Component, referred to as
    the "autoscrolling region", for a predefined period of time, this will
    result in repeated scroll requests to the Component until the drag Cursor
    resumes its motion. </p>
*/

published interface XAutoscroll: com::sun::star::uno::XInterface
{
    /** Notify the component to autoscroll.

        @param cursorLocationX
        X location of the cursor in pixel.

        @param cursorLocationY
        Y location of the cursor in pixel.
    */

    void autoscroll( [in] long cursorLocationX, [in] long cursorLocationY );

    /** Returns the regions describing the autoscrolling region.

        @returns
        The regions describing the autoscrolling region or border
        relative to the geometry of the implementing component.
    */

    any getAutoscrollRegion();
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
