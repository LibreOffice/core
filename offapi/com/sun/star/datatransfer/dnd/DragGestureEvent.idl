/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_datatransfer_dnd_DragGestureEvent_idl__
#define __com_sun_star_datatransfer_dnd_DragGestureEvent_idl__

#include <com/sun/star/lang/EventObject.idl>


module com { module sun { module star { module datatransfer { module dnd {

 published interface XDragSource;

/** A DragGestureEvent is passed to the method XDragGestureListener::dragGestureRecognized()
     when a particular XDragGestureRecognizer detects that a platform
     dependent drag initiating gesture has occurred on the component that it is
     tracking.
*/

published struct DragGestureEvent: com::sun::star::lang::EventObject
{
    /** The action selected by the user.
        <p>Different constants may be combined using a logical OR.</p>
        It's further possible to combine the ACTION_DEFAULT with one of the other
        actions defined in com::sun::star::datatransfer::dnd::DNDConstants.
        This means the user did not press any key during the Drag and Drop operation
        and the action that was combined with ACTION_DEFAULT is the system default action.</p>

        @see com::sun::star::datatransfer::dnd::DNDConstants
     */

    byte DragAction;

    /** The x coordinate where the drag originated in component coordinates.
     */

    long DragOriginX;

    /** The y coordinate where the drag originated in component coordinates.
     */

    long DragOriginY;

    /** The DragSource associated with this drag action.
     */

    XDragSource DragSource;

    /** The last event comprising the gesture.

    <p>The initial trigger event will presumably be a com::sun::star::awt::MouseEvent event.
    If it is not, the implementation should either react accordingly or
    presume that the left mouse button was clicked. </p>
    */

    any Event;
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
