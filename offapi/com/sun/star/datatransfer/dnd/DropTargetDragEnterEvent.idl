/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_datatransfer_dnd_DropTargetDragEnterEvent_idl__
#define __com_sun_star_datatransfer_dnd_DropTargetDragEnterEvent_idl__

#include <com/sun/star/datatransfer/dnd/DropTargetDragEvent.idl>
#include <com/sun/star/datatransfer/DataFlavor.idl>


module com { module sun { module star { module datatransfer { module dnd {

/** The DropTargetDragEnterEvent is delivered from the drop target to the
    currently registered drop target listeners whenever the logical cursor
    associated with a Drag and Drop operation enters the visible geometry
    of a window associated with a drop target.

    <p>It contains the com::sun::star::datatransfer::DataFlavor
    types supported by the transferable object of the current Drag and Drop operation. </p>

    @see com::sun::star::datatransfer::XTransferable
*/

published struct DropTargetDragEnterEvent: DropTargetDragEvent
{
    /** A sequence of supported com::sun::star::datatransfer::DataFlavor types.

     */

    sequence< com::sun::star::datatransfer::DataFlavor > SupportedDataFlavors;
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
