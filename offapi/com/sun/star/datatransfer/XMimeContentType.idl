/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */


#ifndef __com_sun_star_datatransfer_XMimeContentType_idl__
#define __com_sun_star_datatransfer_XMimeContentType_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/container/NoSuchElementException.idl>

module com { module sun { module star { module datatransfer {

/** An implementation of this interface represents a MIME content-type that
    conforms to <a href="ftp://ftp.isi.edu/in-notes/rfc2045.txt">Rfc2045</a> and
    <a href="ftp://ftp.isi.edu/in-notes/rfc2046.txt">Rfc2046</a>.
    Instances that implement this interface could be created using the
    interface XMimeContentTypeFactory.
*/

published interface XMimeContentType : com::sun::star::uno::XInterface
{
    /** To get the media type of the MIME content-type.

        @returns
        The media type of the MIME content-type.
    */
    string getMediaType( );

    /** To get the media subtype of the MIME content-type.

        @returns
        The media subtype of the MIME content-type.
    */
    string getMediaSubtype( );

    /** To get the full media/submedia type of the MIME content-type.

        @returns
        The full media/submedia type of the MIME content-type.
    */
    string getFullMediaType( );

    /** To get a list of parameters that the MIME content-type contains.

        @returns
        A list of the names of all parameters of the MIME content-type.
    */
    sequence< string > getParameters( );

    /** To query if a specific parameter is supported.

        @param aName
        The name of the parameter to query for.

        @returns
        A value of `TRUE` if the MIME content-type has the specified parameter.
        <p>A value of `FALSE` if the MIME content-type has not the specified parameter.</p>
    */
    boolean hasParameter( [in] string aName );

    /** To get the value of a specified parameter.

        @param aName
        The name of the parameter for which the value is requested.

        @returns
        The value of the specified parameter.

        @throws com::sun::star::container::NoSuchElementException
        if the specified parameter doesn't exist.
    */
    string getParameterValue( [in] string aName )
        raises ( com::sun::star::container::NoSuchElementException );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
