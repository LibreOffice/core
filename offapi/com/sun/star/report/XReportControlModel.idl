/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_report_XReportControlModel_idl__
#define __com_sun_star_report_XReportControlModel_idl__

#include <com/sun/star/report/XReportComponent.idl>
#include <com/sun/star/report/XReportControlFormat.idl>
#include <com/sun/star/container/XContainer.idl>
#include <com/sun/star/container/XIndexContainer.idl>
#include <com/sun/star/report/XFormatCondition.idl>

 module com {  module sun {  module star {  module report {

interface XReportControlModel
{
    /** allows the creation of sub reports.
    */
    interface XReportComponent;

    interface XReportControlFormat;

    /** allows to register listeners to be notified of changes in the container.
    */
    interface com::sun::star::container::XContainer;

    /** gives access to the <type scope="com::sun::star::report">XFormatCondition</type> elements by index.
    */
    interface com::sun::star::container::XIndexContainer;

    /** Creates a format condition.
        @return
               report component
    */
    XFormatCondition createFormatCondition() raises( com::sun::star::uno::Exception );


    /** Specifies which content should be shown.
        The value can be <br/>
        <li>the name of a database column. The format to use is field:[name] </li>
        <li>the name of a function defined in the report or a group. The format to use is rpt:[functionName]</li>
        <li>an expression like rpt:24+24-47</li>
        @see http://wiki.services.openoffice.org/wiki/SUN_Report_Builder
        @see http://wiki.services.openoffice.org/wiki/SUN_Report_Builder#Syntax
        @see http://wiki.services.openoffice.org/wiki/Base/Reports/Functions
    */
    [attribute,bound] string DataField
    {
        set raises ( com::sun::star::lang::IllegalArgumentException,com::sun::star::beans::UnknownPropertyException );
        get raises ( com::sun::star::beans::UnknownPropertyException );
    };

    /** Specifies that the element gets printed when the group changes.
        The default value is <FALSE/>.
    */
    [attribute,bound] boolean PrintWhenGroupChange
    {
        set raises ( com::sun::star::beans::UnknownPropertyException );
        get raises ( com::sun::star::beans::UnknownPropertyException );
    };

    /** Describes the print expression of the report control model.
        If the expression evaluates to true than the report control model will be printed otherwise not.
    */
    [attribute,bound] string ConditionalPrintExpression
    {
        set raises ( com::sun::star::beans::UnknownPropertyException );
        get raises ( com::sun::star::beans::UnknownPropertyException );
    };
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
