/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_report_Calculation_idl__
#define __com_sun_star_report_Calculation_idl__



 module com {  module sun {  module star {  module report {


/** Specifies how to calculate a value.
    @see XFormattedField
 */
constants Calculation
{

    /** returns the average of a field.
     */
    const short NONE = 0;

    /** returns the average of a field.
     */
    const short AVERAGE = 1;

    /** returns the correlation of two fields.
     */
    const short CORRELATION = 2;

    /** counts the number of values, from the field.
    */
    const short COUNT = 3;

    /** returns the measure of the linear relation between paired variables.
    */
    const short COVARIANCE = 4;

    /** returns the number of none repeating values, from the field.
    */
    const short DISTINCTCOUNT = 5;

    /** returns the largest value from the field.
    */
    const short MAXIMUM = 6;

    /** returns the middle value in a sequence of numeric values.
    */
    const short MEDIAN = 7;

    /** returns the smallest value from the field.
    */
    const short MINIMUM = 8;

    /** returns the most frequently returning value from the field.
    */
    const short MODE = 9;

    /** returns the Nth largest value from the field.
    */
    const short NTHLARGEST = 10;

    /** returns the Nth most commonly occurring value from the field.
    */
    const short NTHMOSTFREQUENT = 11;

    /** returns the Nth smallest value from the field.
    */
    const short NTHSMALLEST = 12;

    /** returns as a percentage of the grand total summary.
    */
    const short PERCENTAGE = 13;

    /** returns the value for a specified percentile in a Number or Currency field.
    */
    const short PERCENTILE = 14;

    /** returns how much each value in the field deviate from the mean or average value for that field.
    */
    const short POPSTANDARDDEVIATION = 15;

    /** returns the square of the standard deviation.
    */
    const short POPVARIANCE = 16;

    /** returns the sample standard deviation for the field.
    */
    const short SAMPLESTANDARDDEVIATION = 17;

    /** returns the sample variance for the field.
    */
    const short SAMPLEVARIANCE = 18;

    /** returns the total of all the values for the field.
    */
    const short SUM = 19;

    /** returns the weighted average for the field.
    */
    const short WEIGHTEDAVG = 20;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
