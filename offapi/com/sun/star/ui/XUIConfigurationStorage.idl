/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ui_XUIConfigurationStorage_idl__
#define __com_sun_star_ui_XUIConfigurationStorage_idl__

#include <com/sun/star/embed/XStorage.idl>


module com { module sun { module star { module ui {


/** supplies functions to change or get information about the storage
    of a user interface configuration manager.

    @since OOo 2.0
*/

interface XUIConfigurationStorage : ::com::sun::star::uno::XInterface
{
    /** connects a storage to the user interface configuration manager
        which is used on subsequent calls of load() and
        store().

        @param Storage
            all configuration data is loaded/stored from/into this storage.
            If the storage is in read/write mode load()
            and store() can be used otherwise only
            load() is possible.

        <p>
        This call needs careful usage as data loss can occur. If the
        implementation has modified data and a new storage is set the
        implementation is not allowed to write back the data to the old
        storage. This must be done explicitly with store().
        In general a user interface configuration manager instance is
        created and initialize by the document model or the module user
        interface configuration supplier. Normally there is no need to
        set a storage for a user interface configuration manager. If a
        copy of the configuration data to another storage should be made,
        use storeToStorage().
        </p>
    */
    void setStorage( [in] ::com::sun::star::embed::XStorage Storage );

    /** checks if an instance has already a storage to load/store its data.

        @return
            `TRUE` if the instance has a storage otherwise `FALSE`.
    */
    boolean hasStorage();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
