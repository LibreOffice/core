/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ui_XUIElement_idl__
#define __com_sun_star_ui_XUIElement_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/frame/XFrame.idl>


module com { module sun { module star { module ui {


/** provides a function to retrieve a special purpose interface dependent
    on the user interface element type.

    <p>
    The type of the interface depends on the real type of the user interface
    element. A menubar user interface element provides access to its
    com::sun::star::awt::XSystemDependentMenuBarPeer
    which supports to retrieve the system dependent menu handle.
    A floating window or a toolbar user interface element return a
    com::sun::star::awt::XWindow
    interface.
    </p>
*/

interface XUIElement : com::sun::star::uno::XInterface
{
    /** returns an interface to get access to user interface type specific functions.

        @return
            a special purpose interface which depends on the type of the user
            interface element.
    */
    ::com::sun::star::uno::XInterface getRealInterface();

    /** determines the document frame to which this element is bound to.

        <p>The life time of a user interface element does not explicitly depend on the
        frame itself but on the visible component attached to the frame. It is possible
        to exchange the visible component of a frame and that will lead to the end of
        life of all user interface elements.</p>
    */
    [readonly, attribute] ::com::sun::star::frame::XFrame Frame;

    /** a resource URL which is a unique identifier of a user interface element.
    */
    [readonly, attribute] string ResourceURL;

    /** determines the type of the user interface element.

        @see UIElementType
    */
    [readonly, attribute] short  Type;
};

}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
