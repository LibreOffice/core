/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ui_dialogs_XFilePickerControlAccess_idl__
#define __com_sun_star_ui_dialogs_XFilePickerControlAccess_idl__

#include <com/sun/star/ui/dialogs/XFilePicker.idl>


module com { module sun { module star { module ui { module dialogs {

/** Provides access to the controls of a FilePicker.

    <p> A FilePicker may contain additional elements according to the needs
        of the different applications. These additional elements can be
        addressed by this interface.</p>

    @see com::sun::star::ui::dialogs::FilePicker
*/
published interface XFilePickerControlAccess: com::sun::star::ui::dialogs::XFilePicker
{

/** Set the value of an additional element within a FilePicker.

    @param ControlId
    Identifies the element which value is to be set.

    @param aControlAction
        Specifies an action to perform with the given value.
        aControlAction has to be one of the values defined in ControlActions.
        Not all of the values are valid for all controls.
        To add a new filter to the FilePicker use the interface XFilterManager, but
        optionally an implementation may also support adding new filter using this
        method.

    @param aValue
    The value to set. For checkboxes aValue should be a boolean value that
    should be `TRUE` if the checkbox should be checked and `FALSE` otherwise.

    @see com::sun::star::ui::dialogs::CommonFilePickerElementIds
    @see com::sun::star::ui::dialogs::ExtendedFilePickerElementIds
    @see com::sun::star::ui::dialogs::ControlActions
*/
void setValue( [in] short ControlId, [in] short aControlAction, [in] any aValue );

/** Get the value of an additional element within a FilePicker

    @param aControlId
    Identifies the element for which value is requested.

    @param aControlAction
    Specifies which value to retrieve.
    aControlAction has to be one of the values defined in ControlActions.
    Not all of the values are valid for all controls.

    @returns
    The value of the specified element. If the specified control
    is a checkbox the returned value is a boolean that is `TRUE`
    if the checkbox is checked `FALSE` otherwise.
    If the specified element doesn't exist or the specified element
    doesn't support the specified control action an empty any will be
    returned.

    @see com::sun::star::ui::dialogs::CommonFilePickerElementIds
    @see com::sun::star::ui::dialogs::ExtendedFilePickerElementIds
    @see com::sun::star::ui::dialogs::ControlActions
*/
any getValue( [in] short aControlId, [in] short aControlAction );

/** Set the label of the specified element. If the specified element
    doesn't support setting a label, this method has no effect.

    @param aControlId
    Identifies the element for which the label should be set.

    @param aLabel
    The label to be set.

    @see com::sun::star::ui::dialogs::CommonFilePickerElementIds
    @see com::sun::star::ui::dialogs::ExtendedFilePickerElementIds
*/
void setLabel( [in] short aControlId, [in] string aLabel );

/** Returns the label of the specified element.

    @param aControlId
    Identifies the element for which the label should be returned.

    @returns
    The label of the specified element or an empty string if
    the specified element has no or supports no label or the
    specified element doesn't exist.

    @see com::sun::star::ui::dialogs::CommonFilePickerElementIds
    @see com::sun::star::ui::dialogs::ExtendedFilePickerElementIds
*/
string getLabel( [in] short aControlId );

/** Enables or disables a control.

    @param ControlId
    Identifies the control.

    @param bEnable
    <p>If `TRUE` the specified control will be enabled.</p>
    <p>If `FALSE` the specified control will be disabled.</p>

    @see com::sun::star::ui::dialogs::CommonFilePickerElementIds
    @see com::sun::star::ui::dialogs::ExtendedFilePickerElementIds
*/
void enableControl( [in] short ControlId, [in] boolean bEnable );
};


}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
