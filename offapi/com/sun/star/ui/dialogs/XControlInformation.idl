/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_ui_dialogs_XControlInformation_idl__
#define __com_sun_star_ui_dialogs_XControlInformation_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>


module com { module sun { module star { module ui { module dialogs {

/** Interface to query for controls and control properties supported by the
    implementing instance.

    @since OOo 1.1.2
*/
published interface XControlInformation: com::sun::star::uno::XInterface
{
/** Query for the supported controls of a service instance.

    @returns
        a sequence with the names of the supported controls.
*/
sequence<string> getSupportedControls( );

/** Returns whether the specified control is supported or not.

    @param aControlName
        The name of the control. Common control names are for
        instance "OkButton" or "CancelButton".

    @returns
        <TRUE/> if the specified control is supported.
        <FALSE/> if the specified control is not supported.
*/
boolean isControlSupported( [in] string aControlName );

/** Returns a sequence with properties supported by the specified
    control.

    @param aControlName
        The name of the control. Common control names are for
        instance "OkButton" or "CancelButton".

    @returns
        a sequence of control properties supported by the specified control.

    @throws com::sun::star::lang::IllegalArgumentException
        when the specified control is not supported.
*/
sequence<string> getSupportedControlProperties( [in] string aControlName )
    raises( com::sun::star::lang::IllegalArgumentException );

/** Returns whether control property is supported by a control.

    @param aControlName
       The name of the control.

    @param aControlProperty
        The control property to query for.

    @returns
        <TRUE/> if the specified control action is supported.
        <FALSE/> if the specified control action is not supported.

    @throws com::sun::star::lang::IllegalArgumentException
        when the specified control is not supported.
*/
boolean isControlPropertySupported( [in] string aControlName, [in] string aControlProperty )
    raises( com::sun::star::lang::IllegalArgumentException );
};

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
