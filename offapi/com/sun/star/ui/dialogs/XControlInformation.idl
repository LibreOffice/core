/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ui_dialogs_XControlInformation_idl__
#define __com_sun_star_ui_dialogs_XControlInformation_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>


module com { module sun { module star { module ui { module dialogs {

/** Interface to query for controls and control properties supported by the
    implementing instance.

    @since OOo 1.1.2
*/
published interface XControlInformation: com::sun::star::uno::XInterface
{
/** Query for the supported controls of a service instance.

    @returns
        a sequence with the names of the supported controls.
*/
sequence<string> getSupportedControls( );

/** Returns whether the specified control is supported or not.

    @param aControlName
        The name of the control. Common control names are for
        instance "OkButton" or "CancelButton".

    @returns
        `TRUE` if the specified control is supported.
        `FALSE` if the specified control is not supported.
*/
boolean isControlSupported( [in] string aControlName );

/** Returns a sequence with properties supported by the specified
    control.

    @param aControlName
        The name of the control. Common control names are for
        instance "OkButton" or "CancelButton".

    @returns
        a sequence of control properties supported by the specified control.

    @throws com::sun::star::lang::IllegalArgumentException
        when the specified control is not supported.
*/
sequence<string> getSupportedControlProperties( [in] string aControlName )
    raises( com::sun::star::lang::IllegalArgumentException );

/** Returns whether control property is supported by a control.

    @param aControlName
       The name of the control.

    @param aControlProperty
        The control property to query for.

    @returns
        `TRUE` if the specified control action is supported.
        `FALSE` if the specified control action is not supported.

    @throws com::sun::star::lang::IllegalArgumentException
        when the specified control is not supported.
*/
boolean isControlPropertySupported( [in] string aControlName, [in] string aControlProperty )
    raises( com::sun::star::lang::IllegalArgumentException );
};

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
