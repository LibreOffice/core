/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ui_dialogs_XFilePreview_idl__
#define __com_sun_star_ui_dialogs_XFilePreview_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/Color.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>


module com { module sun { module star { module ui { module dialogs {

/** FilePicker that support the preview of various file formats should implement
    this interface.
*/

published interface XFilePreview: com::sun::star::uno::XInterface
{
    /** The method returns all image formats that the preview supports.

        @returns
        A sequence of all supported preview formats

        @see com::sun::star::ui::dialogs::FilePreviewImageFormats
    */
    sequence< short > getSupportedImageFormats( );

    /** The method returns the supported color depth of the target device.

        @returns
        The color depth in bit, e.g. 8 bit, 16 bit, 32 bit.
    */
    com::sun::star::util::Color getTargetColorDepth( );

    /** The method returns the available width of the preview window
        even if the window is invisible or could not be created.
        If a service implementation doesn't support a file preview
        0 will be returned.

        @returns
        The width of the preview window in pixel.
    */
    long getAvailableWidth( );

    /** The method returns the available height of the preview window
        even if the window is invisible or could not be created.
        If a service implementation doesn't support a file preview
        0 will be returned.

        @returns
        The height of the preview window in pixel.
    */
    long getAvailableHeight( );

    /** Sets a new image. If the preview is currently hidden the
        image will be ignored. An empty any will clear the preview window.

        @param aImageFormat
        Specifies the format of the data that will be delivered

        @param aImage
        The image data, the image format defines how
        the image data have to be delivered

        @throws com::sun::star::lang::IllegalArgumentException
        If the specified image format is invalid or not
        supported by the preview implementation

        @see com::sun::star::ui::dialogs::FilePreviewImageFormats
    */
    void setImage( [in] short aImageFormat, [in] any aImage )
        raises( ::com::sun::star::lang::IllegalArgumentException );

    /** Optionally sets the current show state of the preview. It is possible
        that the preview implementation doesn't support hiding the preview.

        @param bShowState
        A value of `TRUE` shows the preview window.
        <p>A value of `FALSE` hides the preview window.</p>

        @returns
        A value of `TRUE` on success.
        <p>A value of `FALSE` if the operation fails for any reason or the preview
        implementation doesn't support hiding the preview.</p>
    */
    boolean setShowState( [in] boolean bShowState );

    /** Returns the current show state of the preview.

        @returns
        A value of `TRUE` if the preview window is visible.
        <p>A value of `FALSE` if the preview window is invisible.</p>
    */
    boolean getShowState( );
};


}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
