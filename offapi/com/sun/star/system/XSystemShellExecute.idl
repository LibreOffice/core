/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_system_XSystemShellExecute_idl__
#define __com_sun_star_system_XSystemShellExecute_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/system/SystemShellExecuteException.idl>


module com { module sun { module star { module system {

/** Specifies an interface for executing a system command.
*/


published interface XSystemShellExecute: com::sun::star::uno::XInterface
{
    /** Executes an arbitrary system command.

        @param aCommand
        Specifies the command to execute. This may be an executable file or a
        document which is registered with an application on a specific platform,
        so that the platform knows what application to launch for that document.
        If the command specifies a path to an executable, etc, this has to be
        a system specific path.

        @param aParameter
        Specifies a list of space separated parameters. The method does not
        validate the given parameters, but only passes it as a parameter to the
        specified command.

        @param nFlags
        Specifies different flags to control the execution of this method, for example,
        avoid showing system error messages, in case of failures, etc.

        @throws com::sun::star::lang::IllegalArgumentException
        when the specified flags are wrong or exclude each other; also thrown,
        with an ArgumentPosition of 0, when nFlags contains URIS_ONLY and
        aCommand is not an absolute URI reference

        @throws com::sun::star::system::SystemShellExecuteException
        in the case of errors when trying to executed the specified command.

        @see com::sun::star::system::SystemShellExecuteFlags
    */
    void execute( [in] string aCommand, [in] string aParameter, [in] long nFlags )
        raises( ::com::sun::star::lang::IllegalArgumentException, ::com::sun::star::system::SystemShellExecuteException );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
