/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_mozilla_XProfileManager_idl__
#define __com_sun_star_mozilla_XProfileManager_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/mozilla/MozillaProductType.idl>



 module com {  module sun {  module star {  module mozilla {



/** is the interface to boot up and switch Mozilla/Thunderbird profiles

    @see com::sun::star::mozilla::MozillaProductType
    @see com::sun::star::mozilla::XProfileDiscover
    @see com::sun::star::mozilla::MozillaBootstrap
 */
published interface XProfileManager: com::sun::star::uno::XInterface
{
    /** attempts to init XPCOM runtime using given profile.

        @param product
            is the product to start up.
        @param profileName
            the profile name to be used.
        @returns
            the current reference count for the given profile.

     */
    long bootupProfile( [in]MozillaProductType product,[in]string profileName);

    /** attempts to shutdown the current profile.

        @returns
            the current reference count for the current profile.

     */
    long shutdownProfile();

    /** attempts to get the current product.

        @returns
            the current used product.

     */
    MozillaProductType getCurrentProduct();

    /** attempts to get the current profile name.

        @returns
            the current used profile.

     */
    string getCurrentProfile();

    /** attempts to check whether the current profile locked or not

        @returns
            return sal_True is current profile is locked

     */
    boolean isCurrentProfileLocked();

    /** attempts to set the current used profile name for the given product.

        @param product
            is the product to be used.
        @param profileName
            the profile name to be used.
        @returns
            the current used profile name for the given product.

     */
    string setCurrentProfile( [in]MozillaProductType product,[in]string profileName);


};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
