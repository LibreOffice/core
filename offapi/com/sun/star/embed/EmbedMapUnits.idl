/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_embed_EmbedMapUnits_idl__
#define __com_sun_star_embed_EmbedMapUnits_idl__



module com { module sun { module star { module embed {

/** contains list of possible map modes supported by embedded object.

    @see XVisualObject
*/
published constants EmbedMapUnits
{
    /** In this type of map mode one logical point is equal to one-hundredth
        of millimeter.
     */
    const long ONE_100TH_MM = 0;

    /** In this type of map mode one logical point is equal to one-tenth
        of millimeter.
     */
    const long ONE_10TH_MM = 1;

    /** In this type of map mode one logical point is equal to one
        millimeter.
     */
    const long ONE_MM = 2;

    /** In this type of map mode one logical point is equal to one
        centimeter.
     */
    const long ONE_CM = 3;

    /** In this type of map mode one logical point is equal to one-thousandth
        of inch.
     */
    const long ONE_1000TH_INCH = 4;

    /** In this type of map mode one logical point is equal to one-hundredth
        of inch.
     */
    const long ONE_100TH_INCH = 5;

    /** In this type of map mode one logical point is equal to one-tenth
        of inch.
     */
    const long ONE_10TH_INCH = 6;

    /** In this type of map mode one logical point is equal to one inch.
     */
    const long ONE_INCH = 7;

    /** In this type of map mode one logical point is equal to one
        typographical point.
     */
    const long POINT = 8;

    /** In this type of map mode one logical point is equal to one twentieth
        of typographical point.
     */
    const long TWIP = 9;

    /** In this type of map mode one logical point is equal to one pixel.
     */
    const long PIXEL = 10;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
