/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_EmbedStates_idl__
#define __com_sun_star_embed_EmbedStates_idl__



module com { module sun { module star { module embed {

/** This constant set contains possible states for
<type>EmbeddedObject</type>.
*/
published constants EmbedStates
{
    /** "Loaded" - the persistent representation of the object is loaded in
        memory.

        <p>
        The object is created and assigned with a persistent entry,
        and a view representation ( metafile and etc. ) can be retrieved
        ( if there is any ).
        </p>
     */
    const long LOADED = 0;

    /** "Running" - the object is connected and loaded.

        <p>
        The object has a connection to the container client and a component
        loaded from persistent entry. In case of internal document it also
        means existing of document model that implements
        <type scope="com::sun::star::frame">XModel</type> interface.
        </p>
     */
    const long RUNNING = 1;

    /** "Active" - the object is activated in separate window
        ( outplace activation ).
     */
    const long ACTIVE = 2;

    /** "Inplace active" - the object has own window in the container's
        window.

        <p>
        The object is activated and has it's own window in the container's
        window that allows object to process mouse events and control own
        rendering.
        </p>
     */
    const long INPLACE_ACTIVE = 3;

    /** "UI active" - the inplace active object that has user interface.

        <p>
        The object is inplace active, allowed to have menus, toolbars,
        keyboard accelerators, and has the focus.
        </p>
     */
    const long UI_ACTIVE = 4;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
