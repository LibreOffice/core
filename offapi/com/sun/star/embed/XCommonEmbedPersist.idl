/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_embed_XCommonEmbedPersist_idl__
#define __com_sun_star_embed_XCommonEmbedPersist_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/embed/XStorage.idl>
#include <com/sun/star/io/IOException.idl>
#include <com/sun/star/embed/WrongStateException.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/beans/PropertyValue.idl>


 module com {  module sun {  module star {  module embed {

/** specifies common implementation for embedded objects and links
    persistence.
 */
published interface XCommonEmbedPersist: com::sun::star::uno::XInterface
{
    /** lets the object or the link store itself.

        @throws com::sun::star::embed::WrongStateException
            the object is in wrong state

        @throws com::sun::star::io::IOException
            in case of io problems during saving

        @throws com::sun::star::uno::Exception
            in case of other problems
     */
    void storeOwn()
        raises( ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    /** allows to detect if the data store is read-only.

        @returns
            `TRUE` if the data store is readonly or opened readonly
            `FALSE` otherwise

        @throws com::sun::star::embed::WrongStateException
            the object is in wrong state ( has no entry )
     */
    boolean isReadonly()
        raises( ::com::sun::star::embed::WrongStateException );

    /** lets the object or the link reload itself.

        <p>
        If the object has persistence it will be reloaded from its persistent
        entry.
        </p>

        @param aMediaArgs
            optional parameters for document reloading, see also
            com::sun::star::document::MediaDescriptor

        @param aObjectArgs
            optional parameters for object reloading, see also
            com::sun::star::embed::EmbeddedObjectDescriptor

        @throws ::com::sun::star::lang::IllegalArgumentException
            one of arguments is illegal

        @throws com::sun::star::embed::WrongStateException
            the object is in wrong state

        @throws com::sun::star::io::IOException
            in case of io problems during opening or creation

        @throws com::sun::star::uno::Exception
            in case of other problems
     */
    void reload(
            [in] sequence< ::com::sun::star::beans::PropertyValue > aMediaArgs,
            [in] sequence< ::com::sun::star::beans::PropertyValue > aObjectArgs )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::embed::WrongStateException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
