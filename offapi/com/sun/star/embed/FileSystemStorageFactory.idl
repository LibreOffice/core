/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_embed_FileSystemStorageFactory_idl__
#define __com_sun_star_embed_FileSystemStorageFactory_idl__

#include <com/sun/star/lang/XSingleServiceFactory.idl>



 module com {  module sun {  module star {  module embed {

/** The FileSystemStorageFactory is a service that allows to
    create a FileSystemStorage based on URL. The URL must point
    to a folder.

    <p>
    In case
    com::sun::star::lang::XSingleServiceFactory::createInstance()
    call is used the result storage will be open in read-write mode based
    on an arbitrary file system folder.
    </p>

    <p>
    In case
    com::sun::star::lang::XSingleServiceFactory::createInstanceWithArguments()
    call is used a sequence of the following parameters can be used:
    </p>

    <dl>
        <dt>parameter 1</dt>
        <dd>
                  specifies source of the object, it must be a string
                  containing URL.
        </dd>

        <dt>parameter 2</dt>
        <dd>
                  specifies mode the storage should be open in, can take
                  values from ElementModes constant set.
        </dd>

        <dt>parameter 3</dt>
        <dd>
                  allows to provide
                  com::sun::star::document::MediaDescryptor
                  to the storage so some parts can be used for
                  initialization, it can be for example
                  com::sun::star::task::XInteractionHandler
                  implementation.
        </dd>
    </dl>

    <p>
    The parameters are optional, that means that sequence can be empty or
    contain only first parameter, or first and second one. In case
    no parameters are provided the call works the same way as
    com::sun::star::lang::XSingleServiceFactory::createInstance().
    In case only first parameter is provided, the storage is opened in
    readonly mode.
    </p>

    <p>
    The opened storages can support read access in addition to
    specified one.
    </p>
*/
published service FileSystemStorageFactory
    : ::com::sun::star::lang::XSingleServiceFactory;


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
