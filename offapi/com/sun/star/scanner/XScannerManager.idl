/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_scanner_XScannerManager_idl__
#define __com_sun_star_scanner_XScannerManager_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/scanner/ScannerContext.idl>
#include <com/sun/star/scanner/ScannerException.idl>
#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/scanner/ScanError.idl>
#include <com/sun/star/awt/XBitmap.idl>



module com { module sun { module star { module scanner {

/**
*/
published interface XScannerManager: com::sun::star::uno::XInterface
{
    // DOCUMENTATION CHANGED FOR XScannerManager::getAvailableScanners
    /** returns all available scanner devices
     */
    sequence<com::sun::star::scanner::ScannerContext> getAvailableScanners();

    /** produce some kind of User Interface to let the user have a preview,
        configure the scan area, etc., it
        returns FALSE if user cancelled this process
    */
    boolean configureScanner( [inout] com::sun::star::scanner::ScannerContext scannerContext )
            raises( com::sun::star::scanner::ScannerException );

    /**start the scanning process
        listener will be called when scan is complete
        the EventObject of the disposing call will contain
        the ScannerManager if the scan was successful,
        an empty interface otherwise
    */
    void startScan( [in] com::sun::star::scanner::ScannerContext scannerContext,
             [in] com::sun::star::lang::XEventListener listener )
            raises( com::sun::star::scanner::ScannerException );

    /**get the state of scanning after completion of scan
    */
    com::sun::star::scanner::ScanError getError( [in] com::sun::star::scanner::ScannerContext scannerContext )
            raises( com::sun::star::scanner::ScannerException );

    /**get the image after completion of scan
    */
    com::sun::star::awt::XBitmap getBitmap( [in] com::sun::star::scanner::ScannerContext scannerContext )
            raises( com::sun::star::scanner::ScannerException );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
