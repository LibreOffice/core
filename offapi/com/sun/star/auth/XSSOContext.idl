/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_auth_XSSOContext_idl__
#define __com_sun_star_auth_XSSOContext_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module auth {

/** Base SSO security context representation

    @since OOo 1.1.2
 */
published interface XSSOContext : ::com::sun::star::uno::XInterface
{
    /** retrieves the principal name of the source/initiator of the context.
        <P>
        In the case of an acceptor side security context, the source principal
        name is available only after the initiator has been authenticated.

        @returns
        the source principal name
     */
    string getSource();

    /** retrieves the principal name of the target/acceptor of the context.

        @returns
        the target principal name
     */
    string getTarget();

    /** retrieves the mechanism associated with the context.

        @returns
        the mechanism name
     */
    string getMechanism();

    /** retrieves whether or not the context supports mutual authentication

        @returns
        `TRUE` if mutual authentication is supported, `FALSE` otherwise.
     */
    boolean getMutual();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
