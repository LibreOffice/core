/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_auth_XSSOInitiatorContext_idl__
#define __com_sun_star_auth_XSSOInitiatorContext_idl__

#include <com/sun/star/auth/AuthenticationFailedException.idl>
#include <com/sun/star/auth/InvalidArgumentException.idl>
#include <com/sun/star/auth/InvalidContextException.idl>
#include <com/sun/star/auth/InvalidCredentialException.idl>
#include <com/sun/star/auth/XSSOContext.idl>

module com { module sun { module star { module auth {

/** represents an initiator side security context.
    <P>This context may be used to initialize authentication tokens to send to
    an acceptor and to authenticate any token sent back in response.

    @since OOo 1.1.2
 */
published interface XSSOInitiatorContext : ::com::sun::star::auth::XSSOContext
{
    /** initializes an SSO Token to send to the acceptor side and
        authenticates an SSO Token returned by the acceptor if the
        context supports mutual authentication.
        <P>
        init should be called only once for contexts which don't support
        mutual authentication and at most twice for contexts which do
        support mutual authentication. Additional calls produce undefined
        results.

        @param Token
        the SSO token received from the acceptor side in response to an
        authentication request. This token is ignored on the first call
        to init and should only be specified for the second call on a
        context supporting mutual authentication.

        @returns
        the sequence of bytes to be sent to the acceptor side as part of
        an authentication request. This sequence will be non zero length
        for the first call to init, zero length for the second call to init
        on a context supporting mutual authentication and undefined in all
        other cases.
     */
    sequence< byte > init(  [in] sequence< byte > Token )
        raises( InvalidArgumentException,
                InvalidCredentialException,
                InvalidContextException,
                AuthenticationFailedException );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
