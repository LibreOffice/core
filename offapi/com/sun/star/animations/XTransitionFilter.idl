/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/**
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_animations_XTransitionFilter_idl__
#define __com_sun_star_animations_XTransitionFilter_idl__

#include <com/sun/star/animations/XAnimate.idl>


 module com {  module sun {  module star {  module animations {


/**
    Base members <member>XAnimate::Values</member>, <member>XAnimate::From</member>,
    <member>XAnimate::To</member> and <member>XAnimate::By</member> can be used
    with <atom>double</atom> values that set the transition progress the specific
    amount of time.


    @see http://www.w3.org/TR/smil20/smil-transitions.html#edef-transitionFilter
*/
interface XTransitionFilter : XAnimate
{
    /** This is the type or family of transition.
        <br>This attribute is required and must be one of the transition families listed in
        <const>TransitionType</const>.
    */
    [attribute] short Transition;

    /** This is the subtype of the transition.
        <br>
        This must be one of the transition subtypes appropriate for the specified <member>Type</member>
        as listed in <const>TransitionSubType</const>.
        <const>TransitionSubType::DEFAULT</const> is the default.
    */
    [attribute] short Subtype;

    /** Indicates whether the transitionFilter's parent element will transition in or out.
        Legal values are <true/> indicating that the parent media will become more visible as
        the transition progress increases and <false/> indicating that the parent media will
        become less visible as the transition progress increases.

        The default value is <true/>.
    */
    [attribute] boolean Mode;

    /** This specifies the direction the transition will run.
        <br>
        The legal values are <true/> for forward and <false/> for reverse.
        The default value is <true/>.
        Note that this does not impact the media being transitioned to, but
        only affects the geometry of the transition.
        Transitions which do not have a reverse interpretation should ignore the
        direction attribute and assume the default value of <true/>.
    */
    [attribute] boolean Direction;

    /** If the value of the <member>Type</member> attribute is <const>TransitionType::FADE</const> and
        the value of the <member>Subtype</member> attribute is  <const>TransitionSubType::FADETOCOLOR</const> or
        <const>TransitionSubType::FADEFROMCOLOR</const>, then this attribute specifies the starting or ending
        color of the fade.
        The default value is 0 (black).

    */
    [attribute] long FadeColor;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
