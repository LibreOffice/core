/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_XDynamicResultSetListener_idl__
#define __com_sun_star_ucb_XDynamicResultSetListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/ucb/ListEvent.idl>


module com { module sun { module star { module ucb {

/** used to receive notifications from an XDynamicResultSet.
*/

published interface XDynamicResultSetListener: com::sun::star::lang::XEventListener
{
    /** A method used to propagate changes of a result set.

        <p>In the first notify-call the listener gets two(!)
        com::sun::star::sdbc::XResultSets and has to hold
        them. The com::sun::star::sdbc::XResultSets are
        implementations of the service ContentResultSet.

        <p>The notified new
        com::sun::star::sdbc::XResultSet will stay valid
        after returning from this method. The old one will become invalid after
        returning.

        <p>While in notify-call the listener is allowed to read from old and
        new result set, except in the first call, where only the new result set
        is valid.

        <p>The Listener is allowed to stay (block) this call, until he really
        wants to use the new result set. The only situation, where the listener
        has to return immediately is while he disposes his broadcaster or while
        he is removing himself as listener (otherwise you deadlock)!!!

        @param  Changes
        the changes to notify.
    */
    void notify( [in] ListEvent Changes );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
