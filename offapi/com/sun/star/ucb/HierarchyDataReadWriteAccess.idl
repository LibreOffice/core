/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_HierarchyDataReadWriteAccess_idl__
#define __com_sun_star_ucb_HierarchyDataReadWriteAccess_idl__

#include <com/sun/star/ucb/HierarchyDataReadAccess.idl>
#include <com/sun/star/container/XNameContainer.idl>
#include <com/sun/star/lang/XSingleServiceFactory.idl>
#include <com/sun/star/util/XChangesBatch.idl>


module com { module sun { module star { module ucb {

/** provides read and write access to a fragment of the hierarchy data.
*/
published service HierarchyDataReadWriteAccess
{
    /** provides read access to a fragment of the hierarchy data
     */
    service HierarchyDataReadAccess;

    /** allows adding and removing of hierarchy data nodes, replacing of
        the value of hierarchy data node members, as well as obtaining the
        value of hierarchy data node members.

        <p>Adding and removing must only be supported if the access object
        points to the "Children" data member of a node or to the root node.
        It will insert a new node or or remove an existing one. If supported
        on data nodes, adding must add new data members to the node, removing
        must remove data members. However, the mandatory data members (Title,
        TargetURL, Children) must never be removable.

        <p>Replacing and getting values must be supported be every data node.
     */
    interface com::sun::star::container::XNameContainer;

    /** gives access to all contents provided by this provider.

        <p><member scope="com::sun::star::lang">XSingleServiceFactory::createInstance</member>
        will create a new empty hierarchy data node. After it was created
        it's data members can be filled. Last, the node can be inserted as child
        of another node using
        <member scope="com::sun::star::container">XNameContainer::insertByName</member>.

        <p>There are no special arguments that must be supported by
        <member scope="com::sun::star::lang">XSingleServiceFactory::createInstanceWithArguments</member>
     */
    interface com::sun::star::lang::XSingleServiceFactory;

    /** allows managing changes within the hierarchy.

        <p><member scope="com::sun::star::util">XChangesBatch::getPendingChanges</member>
        reports all changes within the hierarchy that are done through (direct
        or indirect) descendants of this element. The same set of changes is
        committed to persistent storage and/or made visible to other objects
        accessing the same data set, when
        <member scope="com::sun::star::util">XChangesBatch::commitChanges</member>
        is invoked.
     */
    interface com::sun::star::util::XChangesBatch;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
