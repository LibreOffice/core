/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_XRemoteContentProviderDistributor_idl__
#define __com_sun_star_ucb_XRemoteContentProviderDistributor_idl__

#include <com/sun/star/connection/ConnectionSetupException.idl>
#include <com/sun/star/connection/NoConnectException.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/uno/XInterface.idl>



module com { module sun { module star { module ucb {

/** Distribute a content broker to various
    XRemoteContentProviderAcceptors.

    @version 1.0
    @author Stephan Bergmann
    @see XRemoteContentProviderAcceptor
*/
published interface XRemoteContentProviderDistributor: com::sun::star::uno::XInterface
{
    /** Offer the local content broker to a remote content provider acceptor.

        <p> The Uno Url is handed to the
        com::sun::star::bridge::UnoUrlResolver service,
        which is responsible for raising any of the advertised exceptions. </p>

        @param Url  A Uno Url to address the
        XRemoteContentProviderAcceptor.

        @param Identifier  An identifier handed to the
        XRemoteContentProviderAcceptor.

        @returns success indicator.  Especially, if there's already a
        connection to the given Url, the call will fail, no matter whether
        that connection uses the same identifier as the given one or not.
    */
    boolean connectToRemoteAcceptor([in] string Url,
                                    [in] string Identifier)
        raises (com::sun::star::connection::NoConnectException,
                com::sun::star::connection::ConnectionSetupException,
                com::sun::star::lang::IllegalArgumentException);

    /** Undo the offering of the local content broker to a specific remote
        content provider acceptor.

        @param Url  A Uno Url to address the
        XRemoteContentProviderAcceptor.

        @returns success indicator.
    */
    boolean disconnectFromRemoteAcceptor([in] string Url);

    /** Undo the offering of the local content broker to all remote content
        provider acceptors.
    */
    void disconnectFromAll();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
