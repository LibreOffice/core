/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_Rule_idl__
#define __com_sun_star_ucb_Rule_idl__

#include <com/sun/star/ucb/RuleTerm.idl>



module com { module sun { module star { module ucb {

/** describes a rule that can be applies to a number of objects.

    <p>A rule consists of a sequence of RuleTerms describing the
    objects to which the rule should be applied, the RuleAction
    which should be used on the matching objects, and a parameter.
*/
published struct Rule
{
    /** the rule terms describing the objects to which the rule should be
        applied.
    */
    sequence<com::sun::star::ucb::RuleTerm> Terms;

    /** Some RuleActions require a parameter.

        <table border =1>
        <tr>
            <th>Action</th>
            <th>Parameter</th>
        </tr>
        <tr>
            <td>COPY, MOVE, LINK</td>
            <td>The URL to the destination folder.</td>
        </tr>
        <tr>
            <td>FORWARD</td>
            <td>The email address of the recipient</td>
        </tr>
        <tr>
            <td>All other actions</td>
            <td>n/a</td>
        </tr>
        </table>
    */
    string Parameter;

    /** the action to perform on the matching objects.

        <p>The value can be one of the RuleAction constants.
    */
    short Action;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
