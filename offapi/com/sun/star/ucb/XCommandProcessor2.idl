/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/**
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ucb_XCommandProcessor2_idl__
#define __com_sun_star_ucb_XCommandProcessor2_idl__

#include <com/sun/star/ucb/XCommandProcessor.idl>

module com { module sun { module star { module ucb {

/** An improved version of a
    <type scope="com::sun::star::ucb">XCommandProcessor</type> that helps avoid
    ever-increasing resource consumption.
 */
published interface XCommandProcessor2: com::sun::star::ucb::XCommandProcessor
{
    /** releases a command identifier obtained through
        <member>XCommandProcessor::createCommandIdentifier</member> when it is
        no longer used.

        <p>After this call the command identifier cannot be used any longer in
        calls to <member>XCommandProcessor::execute</member> and
        <member>XCommandProcessor::abort</member>.  (But it can happen that a
        call to <member>XCommandProcessor::createCommandIdentifier</member>
        reuses this identifier.)</p>

        @param CommandId
        A command identifier obtained through
        <member>XCommandProcessor::createCommandIdentifier</member>.  If the
        identifier is zero, the request is silently ignored; but if the
        identifier is invalid (not obtained via
        <member>XCommandProcessor::createCommandIdentifier</member> or already
        handed to <member>XCommandProcessor2::releaseCommandIdentifier</member>
        before), the behavior is undefined.
     */
    void releaseCommandIdentifier([in] long CommandId);
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
