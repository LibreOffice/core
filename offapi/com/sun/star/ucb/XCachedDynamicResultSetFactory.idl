/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_XCachedDynamicResultSetFactory_idl__
#define __com_sun_star_ucb_XCachedDynamicResultSetFactory_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/XDynamicResultSet.idl>
#include <com/sun/star/ucb/XContentIdentifierMapping.idl>


module com { module sun { module star { module ucb {

/** creates a CachedDynamicResultSet.

    <p>Pay attention to instantiate this helper on client side where your want
    to read the data respectively where you have instantiated the listener to
    the XDynamicResultSet.

    <p>The needed stub on server side can be created using
    XCachedDynamicResultSetStubFactory.
*/

published interface XCachedDynamicResultSetFactory: com::sun::star::uno::XInterface
{
    /** creates a remote optimizes XDynamicResultSet.

        @param SourceStub
        must be an instance of service CachedDynamicResultSetStub.
        It can be `NULL`. In this case you can use the interface
        XSourceInitialization of the returned
        CachedDynamicResultSet to set the stub later.

        @param ContentIdentifierMapping
        is not required, but can be set if it is necessary to change the
        identity of the contents accessible via the interface
        XContentAccess of the ContentResultSet
        (e.g., if merging two sources of the same type).

        @returns
        an instance of service CachedDynamicResultSet.
    */
    com::sun::star::ucb::XDynamicResultSet  createCachedDynamicResultSet(
          [in] com::sun::star::ucb::XDynamicResultSet SourceStub
        , [in] com::sun::star::ucb::XContentIdentifierMapping ContentIdentifierMapping );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
