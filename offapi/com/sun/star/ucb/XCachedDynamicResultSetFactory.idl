/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XCachedDynamicResultSetFactory_idl__
#define __com_sun_star_ucb_XCachedDynamicResultSetFactory_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/XDynamicResultSet.idl>
#include <com/sun/star/ucb/XContentIdentifierMapping.idl>


module com { module sun { module star { module ucb {

/** creates a <type>CachedDynamicResultSet</type>.

    <p>Pay attention to instantiate this helper on client side where your want
    to read the data respectively where you have instantiated the listener to
    the <type>XDynamicResultSet</type>.

    <p>The needed stub on server side can be created using
    <type>XCachedDynamicResultSetStubFactory</type>.
*/

published interface XCachedDynamicResultSetFactory: com::sun::star::uno::XInterface
{
    /** creates a remote optimizes <type>XDynamicResultSet</type>.

        @param SourceStub
        must be an instance of service <type>CachedDynamicResultSetStub</type>.
        It can be <NULL/>. In this case you can use the interface
        <type>XSourceInitialization</type> of the returned
        <type>CachedDynamicResultSet</type> to set the stub later.

        @param ContentIdentifierMapping
        is not required, but can be set if it is necessary to change the
        identity of the contents accessible via the interface
        <type>XContentAccess</type> of the <type>ContentResultSet</type>
        (e.g., if merging two sources of the same type).

        @returns
        an instance of service <type>CachedDynamicResultSet</type>.
    */
    com::sun::star::ucb::XDynamicResultSet  createCachedDynamicResultSet(
          [in] com::sun::star::ucb::XDynamicResultSet SourceStub
        , [in] com::sun::star::ucb::XContentIdentifierMapping ContentIdentifierMapping );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
