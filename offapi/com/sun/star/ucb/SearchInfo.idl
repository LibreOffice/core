/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_SearchInfo_idl__
#define __com_sun_star_ucb_SearchInfo_idl__

#include <com/sun/star/ucb/SearchCriterium.idl>
#include <com/sun/star/ucb/SearchRecursion.idl>



module com { module sun { module star { module ucb {

/** information needed to (recursively) search an object.
*/
published struct SearchInfo
{
    /** the search criteria.
    */
    sequence<com::sun::star::ucb::SearchCriterium> Criteria;

    /** the mode of recursion to use.
    */
    com::sun::star::ucb::SearchRecursion Recursion;

    /** whether to include the object itself in the search or only (some of)
        its sub-objects.
    */
    boolean IncludeBase;

    /** whether to respect the "view restrictions" specified for the folders
        hierarchically contained within an object (e.g., only searches through
        subscribed folders).
    */
    boolean RespectFolderViewRestrictions;

    /** whether to respect the "view restrictions" specified for the documents
        hierarchically contained within an object (e.g., only searches through
        marked documents).
    */
    boolean RespectDocViewRestrictions;

    /** whether to follow indirections (link objects) and search through their
        respective targets also.
    */
    boolean FollowIndirections;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
