/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XCachedDynamicResultSetStubFactory_idl__
#define __com_sun_star_ucb_XCachedDynamicResultSetStubFactory_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/XDynamicResultSet.idl>
#include <com/sun/star/ucb/NumberedSortingInfo.idl>
#include <com/sun/star/ucb/XAnyCompareFactory.idl>


module com { module sun { module star { module ucb {

/** creates a <type>CachedDynamicResultSetStub</type> and connects a non-remote
    optimized <type>DynamicResultSet</type> to a remote optimized
    <type>CachedDynamicResultSet</type>.

    <p>Pay attention to instantiate this helper on server side where your source
    <type>DynamicResultSet</type> was instantiated.

    <p>Method
    <member>XCachedDynamicResultSetStubFactory::createCachedDynamicResultSetStub</member>
    can be used to create a stub on server side.

    <p>If you have instantiated a <type>CachedDynamicResultSet</type> on client
    side already, use method <member>connectToCache</member> to connect your
    given DynamicResultSet with this Cache.

    <p>The needed cache on server side you can create using
    <type>XCachedDynamicResultSetFactory</type>.
*/

published interface XCachedDynamicResultSetStubFactory: com::sun::star::uno::XInterface
{
    /** creates a remote optimizes <type>XDynamicResultSet</type>.

        @param Source
        must be an instance of service <type>DynamicResultSet</type>.

        @returns
        an instance of service <type>CachedDynamicResultSetStub</type>.
    */

    com::sun::star::ucb::XDynamicResultSet  createCachedDynamicResultSetStub(
                [in] com::sun::star::ucb::XDynamicResultSet Source );

    /** If you have instantiated a <type>CachedDynamicResultSet</type> on
        client side already, use this to connect your given Source on server
        side to the TargetCache.

        @param Source
        is an instance of service <type>DynamicResultSet</type>.

        @param TargetCache
        is an instance of service <type>CachedDynamicResultSet</type>.

        @param SortingInfo
        can be an empty sequence. Otherwise, Source will be sorted according
        to the given sorting data.

        @param CompareFactory
        will be ignored unless SortingInfo is not empty. Then the supplied
        factory will be used to instantiate objects used to compare the
        properties that are involved in sorting.

        @throws ListenerAlreadySetException
        if <member>Source</member> is already in use.

        @throws AlreadyInitializedException
        if <member>TargetCache</member> already has been initialized.
    */
    void connectToCache(
                  [in] com::sun::star::ucb::XDynamicResultSet Source
                , [in] com::sun::star::ucb::XDynamicResultSet TargetCache
                , [in] sequence< com::sun::star::ucb::NumberedSortingInfo > SortingInfo
                , [in] com::sun::star::ucb::XAnyCompareFactory CompareFactory
                )
                raises(
                  com::sun::star::ucb::ListenerAlreadySetException
                , com::sun::star::ucb::AlreadyInitializedException
                 );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
