/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_CachedContentResultSet_idl__
#define __com_sun_star_ucb_CachedContentResultSet_idl__

#include <com/sun/star/ucb/ContentResultSet.idl>


module com { module sun { module star { module ucb {

/** is used on client side to access a ContentResultSet
    remote optimized.

    <p>The CachedContentResultSet will not load every single
    property or even row just in that moment you ask for it, but load the data
    for some rows beforehand.

    <p>Every time when a new package of data is loaded, the so far loaded data
    will be released, so the cash will not grow and grow and grow.
*/

published service CachedContentResultSet
{
    service com::sun::star::ucb::ContentResultSet;

    /** contains the number of result set rows that should be fetched from
    an underlying database.

    <p>The default fetch size is implementation specific.

    <p>Every negative value for parameter #FetchSize will
    force an implementation specific value to be set.
    */
    [property] long FetchSize;

    /** contains the direction for fetching rows from an underlying database.

    <p>The value can be one of the
    com::sun::star::sdbc::FetchDirection constants group.

    <p>The default value is implementation specific.

    <p>If you set the value to
    com::sun::star::sdbc::FetchDirection::UNKNOWN an
    implementation specific direction will be used.
    */
    [property] long FetchDirection;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
