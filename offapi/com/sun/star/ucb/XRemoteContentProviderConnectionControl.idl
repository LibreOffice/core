/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ucb_XRemoteContentProviderConnectionControl_idl__
#define __com_sun_star_ucb_XRemoteContentProviderConnectionControl_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module ucb {
     published interface XRemoteContentProviderAcceptor;
}; }; }; };

module com { module sun { module star { module ucb {

/** A simple mechanism to find out if the connection between a remote content
    provider distributor and acceptor gets lost.

    <p>This interface should be supported by the <var>DoneListener</var>
    parameter of
    XRemoteContentProviderAcceptor::addRemoteContentProvider().

    @version 1.0
    @author Stephan Bergmann
 */
published interface XRemoteContentProviderConnectionControl:
    com::sun::star::uno::XInterface
{
    /** Enable connection control, using as a token some object implemented on
        the remote content provider acceptor's side.

        <p>The implementation of this interface must hold a reference to the
        supplied token.  If the connection gets lost, the reference count of
        the token will drop, which the remote content provider acceptor can
        observe.

        @param Acceptor
        The remote content provider acceptor on the other side of the
        connection.

        @param Token
        Some object implemented on the remote content provider acceptor's side
        of the connection.
     */
    void
    enableConnectionControl([in] XRemoteContentProviderAcceptor Acceptor,
                            [in] com::sun::star::uno::XInterface Token);
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
