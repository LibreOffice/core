/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_TransientDocumentsFolderContent_idl__
#define __com_sun_star_ucb_TransientDocumentsFolderContent_idl__

#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/ucb/XContent.idl>
#include <com/sun/star/ucb/XCommandProcessor.idl>
#include <com/sun/star/ucb/XCommandProcessor2.idl>
#include <com/sun/star/beans/XPropertiesChangeNotifier.idl>
#include <com/sun/star/beans/XPropertyContainer.idl>
#include <com/sun/star/beans/XPropertySetInfoChangeNotifier.idl>
#include <com/sun/star/ucb/XCommandInfoChangeNotifier.idl>
#include <com/sun/star/container/XChild.idl>
#include <com/sun/star/ucb/XContentCreator.idl>


module com { module sun { module star { module ucb {

/** A TDCP Folder is a container for other TDCP Folders and TDCP Streams.

    <p>It may be contained in another TDCP Folder or in a TDCP Document.

    @see TransientDocumentsContentProvider
    @see TransientDocumentsRootContent
    @see TransientDocumentsDocumentContent
    @see TransientDocumentsStreamContent

    @since OOo 2.0
*/
service TransientDocumentsFolderContent
{
    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::lang::XComponent;

    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::ucb::XContent;

    /** This interface is implemented according to the specification of
        service Content.

        <p>

        <b>Supported Commands</b>
        <ul>
        <li>
        getCommandInfo
        </li>
        <li>
        getPropertySetInfo
        </li>
        <li>
        getPropertyValues
        </li>
        <li>
        setPropertyValues
        </li>
        <li>
        open
        </li>
        <li>
        insert
        </li>
        <li>
        delete
        </li>
        <li>
        transfer (only transfers TDCP documents, TDCP folders and TDCP streams.
        It does not handle contents with a URL scheme other than the TDOC URL
        scheme)
        </li>
        </ul>

        <b>Supported Properties</b>
        <ul>
        <li>
        string ContentType ( read-only, always "application/vnd.sun.star.tdoc-folder" )
        </li>
        <li>
        boolean IsDocument ( read-only, always false )
        </li>
        <li>
        boolean IsFolder ( read-only, always true )
        </li>
        <li>
        string Title
        </li>
        <li>
        com::sun::star::embed::XStorage Storage ( read-only,
        always a reference to a storage opened in read-only mode. No write
        operations are possible. TDCP contents must be used for writing.)
        </li>
        </ul>

        </p>
     */
    interface com::sun::star::ucb::XCommandProcessor;

    /** is an enhanced version of XCommandProcessor that has an
        additional method for releasing command identifiers obtained via
        XCommandProcessor::createCommandIdentifier() to avoid
        resource leaks. For a detailed description of the problem refer to
        XCommandProcessor2::releaseCommandIdentifier().

        <p>Where many existing Content implementations do not
        (yet), every new implementation should support this interface.
     */
    [optional] interface com::sun::star::ucb::XCommandProcessor2;

    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::beans::XPropertiesChangeNotifier;

    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::beans::XPropertyContainer;

    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::beans::XPropertySetInfoChangeNotifier;

    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::ucb::XCommandInfoChangeNotifier;

    /** This interface is implemented according to the specification of
        service Content.
     */
    interface com::sun::star::container::XChild;

    /** This interface is implemented according to the specification of
        service Content.

        <p>To create a new child of a TDCP Folder:

        <ol>
        <li>
        Let the parent folder create a new content by calling
        XContentCreator::createNewContent() on it. The content
        type to use for new folders is "application/vnd.sun.star.tdoc-folder".
        To create a new stream, use the type string
        "application/vnd.sun.star.tdoc-stream".
        </li>
        <li>
        Set a title for the new folder/stream. (Let the new child execute the
        command "setPropertyValues"; pass a non-empty value for the property
        "Title").
        </li>
        <li>
        Let the new child ( not the parent! ) execute the command "insert".
        This will commit the creation process. For streams, you need to supply
        the implementation of an
        com::sun::star::io::XInputStream with the command's
        parameters, that provides access to the stream data.
        </li>
        </ol>

        </p>
     */
    interface com::sun::star::ucb::XContentCreator;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
