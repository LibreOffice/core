/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_UniversalContentBroker_idl__
#define __com_sun_star_ucb_UniversalContentBroker_idl__

#include <com/sun/star/ucb/XUniversalContentBroker.idl>


module com { module sun { module star { module ucb {

/** is a one-instance service that provides access to a set of
    Contents via ContentProviders.

    <p>Traditionally, this service implements
    com::sun::star::lang::XInitialization and needed to be
    instantiated once with two arguments via
    com::sun::star::lang::XMultiComponentFactory::createInstanceWithArgumentsAndContext()
    for configuration before it could be obtained via plain
    com::sun::star::lang::XMultiComponentFactory::createInstanceWithContext().

    <p>However, the only pair of initialization arguments used in practice is
    <code>"Local"</code>/<code>"Office"</code>, so this service is simplified
    now to automatically configure itself with that argument pair upon first
    instantiation.

    <p>(For backwards compatibility, the service implementation still supports
    com::sun::star::lang::XInitialization and can still
    explicitly be initialized via
    com::sun::star::lang::XMultiComponentFactory::createInstanceWithArgumentsAndContext()
    with two arguments of type string.  These strings are used as a pair of keys
    to retrieve a set of content provider descriptions from the configuration
    management (stored at
    <code>org.openoffice.ucb.Configuration.ContentProviders.<var>key<sub>1</sub></var>.SecondaryKeys.<var>key<sub>2</sub></var>.ProviderData</code>
    within the configuration management's hierarchy).  The retrieved
    descriptions are in turn used to register the corresponding content provider
    services at the broker.)
*/
published service UniversalContentBroker : XUniversalContentBroker
{
    /** The (default) constructor.

        <p>(This default constructor is only mentioned explicitly for technical
        reasons, so that its implementation calls the service implementation's
        com::sun::star::lang::XInitialization::initialize().)
     */
    create();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
