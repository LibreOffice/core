/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XCommandInfo_idl__
#define __com_sun_star_ucb_XCommandInfo_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/CommandInfo.idl>
#include <com/sun/star/ucb/UnsupportedCommandException.idl>



module com { module sun { module star { module ucb {

/** provides access to information on a set of commands.

    @version  1.0
    @author   Kai Sommerfeld
*/
published interface XCommandInfo: com::sun::star::uno::XInterface
{
    /** obtains information for all supported commands.

        @returns
        a sequence with information for all supported commands.
    */
    sequence<com::sun::star::ucb::CommandInfo> getCommands();

    /** returns information for a specific command.

        @returns
        the information for the requested command.

        @param Name
        specifies the name of the requested command.

        @throws UnsupportedCommandException
        if the command is not supported.
    */
    com::sun::star::ucb::CommandInfo getCommandInfoByName( [in] string Name )
            raises( com::sun::star::ucb::UnsupportedCommandException );

    /** returns information for a specific command.

        @returns
        the information for the requested command.

        @param Handle
        specifies the handle of the requested command.

        @throws UnsupportedCommandException
        if the command is not supported.
    */
    com::sun::star::ucb::CommandInfo getCommandInfoByHandle( [in] long Handle )
            raises( com::sun::star::ucb::UnsupportedCommandException );

    /** checks whether a command specific is supported.

        @returns
        <TRUE/> if a command with the specified name is supported;
        otherwise <FALSE/> is returned.

        @param Name
        specifies the name of the requested command.
    */
    boolean hasCommandByName( [in] string Name );

    /** checks whether a specific command is supported.

        @returns
        <TRUE/> if a command with the specified handle is supported;
        otherwise <FALSE/> is returned.

        @param Name
        specifies the handle of the requested command.
    */
    boolean hasCommandByHandle( [in] long Handle );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
