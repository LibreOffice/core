/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_ucb_XCommandInfo_idl__
#define __com_sun_star_ucb_XCommandInfo_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/CommandInfo.idl>
#include <com/sun/star/ucb/UnsupportedCommandException.idl>



module com { module sun { module star { module ucb {

/** provides access to information on a set of commands.

    @version  1.0
    @author   Kai Sommerfeld
*/
published interface XCommandInfo: com::sun::star::uno::XInterface
{
    /** obtains information for all supported commands.

        @returns
        a sequence with information for all supported commands.
    */
    sequence<com::sun::star::ucb::CommandInfo> getCommands();

    /** returns information for a specific command.

        @returns
        the information for the requested command.

        @param Name
        specifies the name of the requested command.

        @throws UnsupportedCommandException
        if the command is not supported.
    */
    com::sun::star::ucb::CommandInfo getCommandInfoByName( [in] string Name )
            raises( com::sun::star::ucb::UnsupportedCommandException );

    /** returns information for a specific command.

        @returns
        the information for the requested command.

        @param Handle
        specifies the handle of the requested command.

        @throws UnsupportedCommandException
        if the command is not supported.
    */
    com::sun::star::ucb::CommandInfo getCommandInfoByHandle( [in] long Handle )
            raises( com::sun::star::ucb::UnsupportedCommandException );

    /** checks whether a command specific is supported.

        @returns
        `TRUE` if a command with the specified name is supported;
        otherwise `FALSE` is returned.

        @param Name
        specifies the name of the requested command.
    */
    boolean hasCommandByName( [in] string Name );

    /** checks whether a specific command is supported.

        @returns
        `TRUE` if a command with the specified handle is supported;
        otherwise `FALSE` is returned.

        @param Handle
        specifies the handle of the requested command.
    */
    boolean hasCommandByHandle( [in] long Handle );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
