/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_ucb_XRemoteContentProviderActivator_idl__
#define __com_sun_star_ucb_XRemoteContentProviderActivator_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module ucb {

 published interface XContentProviderManager;

/** This interface should be implemented together with
    <type>XRemoteContentProviderAcceptor</type> and allows for a lazy
    implementation of
    <member>XRemoteContentProviderAcceptor::addRemoteContentProvider</member>.

    The way this works might change, therefore this interface is marked as
    deprecated.

    @deprecated
 */
published interface XRemoteContentProviderActivator: com::sun::star::uno::XInterface
{
    /** Activate (i.e., register at the broker) the remote content providers
        that until now have only been remembered by
        <member>XRemoteContentProviderAcceptor::addRemoteContentProvider</member>,
        but not registered.

        <p>This allows for
        <member>XRemoteContentProviderAcceptor::addRemoteContentProvider</member>
        to be implemented in a lazy fashion (remember the remote content
        providers, but do not register them right away), which can increase
        performance in certain situations.  But it is not required that an
        implementation of <type>XRemoteContentProviderAcceptor</type> uses this
        lazy strategy (and thus also implements this interface).

        @return
        the broker at which the remote content providers have been registered.
     */
    XContentProviderManager activateRemoteContentProviders();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
