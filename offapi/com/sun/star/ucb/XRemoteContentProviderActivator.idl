/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_ucb_XRemoteContentProviderActivator_idl__
#define __com_sun_star_ucb_XRemoteContentProviderActivator_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module ucb {

 published interface XContentProviderManager;

/** This interface should be implemented together with
    XRemoteContentProviderAcceptor and allows for a lazy
    implementation of
    XRemoteContentProviderAcceptor::addRemoteContentProvider().

    The way this works might change, therefore this interface is marked as
    deprecated.

    @deprecated
 */
published interface XRemoteContentProviderActivator: com::sun::star::uno::XInterface
{
    /** Activate (i.e., register at the broker) the remote content providers
        that until now have only been remembered by
        XRemoteContentProviderAcceptor::addRemoteContentProvider(),
        but not registered.

        <p>This allows for
        XRemoteContentProviderAcceptor::addRemoteContentProvider()
        to be implemented in a lazy fashion (remember the remote content
        providers, but do not register them right away), which can increase
        performance in certain situations.  But it is not required that an
        implementation of XRemoteContentProviderAcceptor uses this
        lazy strategy (and thus also implements this interface).

        @return
        the broker at which the remote content providers have been registered.
     */
    XContentProviderManager activateRemoteContentProviders();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
