/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_FetchResult_idl__
#define __com_sun_star_ucb_FetchResult_idl__


module com { module sun { module star { module ucb {

/** contains data of several rows of a <type>ContentResultSet</type>.

    <p>This struct is returned from <member>XFetchProvider::fetch</member>,
    for example.
*/

published struct FetchResult
{
    /** contains the demanded data.

        <p>One any contains the data of one whole row. Those methods which
        use this struct have to specify, what the any has to contain.
    */
    sequence< any > Rows;

    /** indicates the index of the first row contained in
        <member>FetchResult::Rows</member> in the original result set. So if
        <member>FetchResult::StartIndex</member> equals <code>3</code>, the
        first element in the sequence <member>FetchResult::Rows</member>
        contains the data of the index <code>3</code> in the original result set.

        <p>The following rows are one after the other, but the direction
        depends on the value of <member>FetchResult::Direction</member>
    */
    long StartIndex;

    /** indicates the orientation in which the rows are fetched and set into
        the sequence <member>FetchResult::Rows</member>.

        <p>When <member>FetchResult::Orientation</member> equals <TRUE/>, the
        rows in <member>FetchResult::Rows</member> are ordered in the same way
        as in the original result set.
    */
    boolean Orientation;

    /** indicates whether and which error has occurred, while fetching.

        <p>The value may contain zero or more constants of the
        <type>FetchError</type> constants group.
    */
    short FetchError;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
