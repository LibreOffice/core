/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_rendering_FontRequest_idl__
#define __com_sun_star_rendering_FontRequest_idl__

#include <com/sun/star/rendering/FontInfo.idl>
#include <com/sun/star/lang/Locale.idl>

module com { module sun { module star { module rendering {

/** This structure contains all information necessary to describe a
    font to be queried from XCanvas.<p>

    Note: Outline fonts are to be requested as a special family, set
    FontInfo::FamilyName appropriately. Emboss/relief
    must be emulated by upper layers.<p>

    Leave the FontInfo::FamilyName and
    FontInfo::StyleName empty, if font selection
    should only happen via the PANOSE description.

    @since OOo 2.0
 */
struct FontRequest
{
    /** The description of the font.<p>

        This member contains the description of the font as returned
        by the font listing methods.<p>
     */
    FontInfo                        FontDescription;


    /** The size of the font in <em>device</em> coordinate space.<p>

        This value corresponds to the font height in Western scripts,
        but is independent of the writing direction (see
        FontRequest::IsVertical below). That
        means, the value specified here is always measured orthogonal
        to the text advancement (height for horizontal writing, and
        width for vertical writing).<p>

        When this value is negative, its absolute value is taken as
        the character size of the font. If this value is positive,
        it's taken as the cell size of the font.<p>

        This member and the referenceAdvancement member are mutually
        exclusive, one of them has to be set to 0 (which means don't
        care).<p>

        For distorted fonts, the render transformation must be
        used. That is, the size specified here corresponds to device
        pixel only if the combined render transformation during text
        output equals the identity transform. This also applies to all
        query methods, for both XCanvasFont and
        XTextLayout.<p>
    */
    double                          CellSize;


    /** This value specifies the size of the font in the writing
        direction (i.e. width for horizontal writing, and height for
        vertical writing).<p>

        It is equivalent to the referenceCharSize of the FontMetrics
        structure.<p>

        This member and the cellSize member are mutually exclusive,
        one of them has to be set to 0 (which means don't care). For
        distorted fonts, the font matrix must be used.<p>
     */
    double                          ReferenceAdvancement;


    /** The locale this font should be able to render.<p>

        This member supplements the
        FontInfo::UnicodeRange0 entry with a specific
        locale; this is e.g. important when selecting between
        traditional and simplified Chinese is necessary (since the
        letters have the same Unicode ranges and character values).<p>
     */
    ::com::sun::star::lang::Locale  Locale;

};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
