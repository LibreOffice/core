/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_rendering_XIeeeFloatReadOnlyBitmap_idl__
#define __com_sun_star_rendering_XIeeeFloatReadOnlyBitmap_idl__

#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#include <com/sun/star/rendering/FloatingPointBitmapLayout.idl>
#include <com/sun/star/geometry/IntegerPoint2D.idl>
#include <com/sun/star/geometry/IntegerRectangle2D.idl>
#include <com/sun/star/rendering/XBitmap.idl>
#include <com/sun/star/rendering/VolatileContentDestroyedException.idl>


module com { module sun { module star { module rendering {

/** Specialized interface for bitmaps containing IEEE floats as their
    color components. In contrast to XIeeeFloatBitmap,
    this interface only permits read-only access.<p>

    Use this interface for e.g. bitmaps that are calculated
    on-the-fly, or that are pure functional, and thus cannot be
    modified.<p>

    If you get passed an instance of
    XHalfFloatReadOnlyBitmap that also supports the
    XVolatileBitmap interface, things become a bit more
    complicated. When reading data, one has to check for both
    VolatileContentDestroyedException and mismatching
    FloatingPointBitmapLayout return values. If either of them
    occurs, the whole bitmap read operation should be repeated.<p>
 */
interface XIeeeFloatReadOnlyBitmap : XBitmap
{
    /** Query the raw data of this bitmap.<p>

        Query the raw data of this bitmap, in the format as defined by
        getMemoryLayout(). With the given rectangle, a subset of the
        whole bitmap can be queried. When querying subsets of the
        bitmap, the same scanline padding takes place as when the
        whole bitmap is requested.<p>

        Note that the bitmap memory layout might change for volatile
        bitmaps.<p>

        @param bitmapLayout
        The memory layout the returned data is in.

        @param rect
        A rectangle, within the bounds of the bitmap, to retrieve the
        consent from.

        @throws VolatileContentDestroyedException
        if the bitmap is volatile, and the content has been destroyed by the system.

        @throws com::sun::star::lang::IndexOutOfBoundsException
        if parts of the given rectangle are outside the permissible
        bitmap area.
     */
    sequence<float>             getData( [out] FloatingPointBitmapLayout bitmapLayout, [in] ::com::sun::star::geometry::IntegerRectangle2D rect )
        raises (com::sun::star::lang::IndexOutOfBoundsException,
                VolatileContentDestroyedException);


    /** Get a single pixel of the bitmap, returning its color
        value.<p>

        Note that the bitmap memory layout might change for volatile
        bitmaps.<p>

        @param bitmapLayout
        The memory layout the returned data is in.

        @param pos
        A position, within the bounds of the bitmap, to retrieve the
        color from.

        @throws VolatileContentDestroyedException
        if the bitmap is volatile, and the content has been destroyed by the system.

        @throws com::sun::star::lang::IndexOutOfBoundsException
        if the given position is outside the permissible bitmap area.
     */
    sequence<float>             getPixel( [out] FloatingPointBitmapLayout bitmapLayout, [in] ::com::sun::star::geometry::IntegerPoint2D pos )
        raises (com::sun::star::lang::IndexOutOfBoundsException,
                VolatileContentDestroyedException);


    /** Query the memory layout for this bitmap.<p>

        Please note that for volatile bitmaps, the memory layout might
        change between subsequent calls.<p>
     */
    FloatingPointBitmapLayout   getMemoryLayout();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
