/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_rendering_XCustomSprite_idl__
#define __com_sun_star_rendering_XCustomSprite_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/rendering/ViewState.idl>
#include <com/sun/star/rendering/RenderState.idl>
#include <com/sun/star/rendering/XSprite.idl>

module com { module sun { module star { module rendering {

interface XCanvas;

/** Interface to control a custom sprite object on a XSpriteCanvas.<p>

    Every change performed on XCustomSprite objects is only visible
    after a XSpriteCanvas::updateScreen() call, to facilitate
    synchronized screen updates.

    TODO: Maybe more than alpha has to be overridden from render state.
    TODO: Provide means to change the output area
 */
interface XCustomSprite : XSprite
{

    /** Query a render canvas for this sprite's content.<p>

        Whatever is rendered to this canvas will become visible on the
        screen only after a XSpriteCanvas::updateScreen() call at the
        associated sprite canvas. This canvas is not equivalent to the
        host canvas of the sprite. At the very least, all output
        happens relative to the sprite's upper left corner, i.e. the
        origin of the sprite's canvas device coordinate system will
        move with the sprite across the screen.

        @return the canvas the sprite content can be rendered into.
     */
    XCanvas getContentCanvas();

};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
