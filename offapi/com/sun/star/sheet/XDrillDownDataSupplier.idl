/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_XDrillDownDataSupplier_idl__
#define __com_sun_star_sheet_XDrillDownDataSupplier_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/sheet/DataPilotFieldFilter.idl>
#include <com/sun/star/table/CellAddress.idl>


module com {  module sun {  module star {  module sheet {


/** supplies a filtered subset of the original data source based on filtering criteria.

    A service that acts as a DataPilot data source can optionally implement this
    interface to allow drill-down of result data.  The method this interface provides
    is used internally when calling XDataPilotTable2::getDrillDownData()
    or XDataPilotTable2::insertDrillDownSheet().  If the data source
    service does not implement this interface, then the aforementioned two methods
    will have no effect.

    @see com::sun::star::sheet::DataPilotSource

    @since OOo 3.0
 */
interface XDrillDownDataSupplier: com::sun::star::uno::XInterface
{
    /** This method returns filtered subset of the original source data based on
        a given set of filtering criteria.

        @param aFilters filtering criteria

        @returns a filtered subset of the original source data as 2-dimensional
        sequences of `any`.  The first row must be the header row.  Each `any`
        instance must contain either double value for a numeric cell, or
        a string value for a string cell.

        @see com::sun::star::sheet::DataPilotFieldFilter
        @see com::sun::star::sheet::XDataPilotTable2
     */
    sequence< sequence< any > > getDrillDownData(
        [in] sequence< com::sun::star::sheet::DataPilotFieldFilter > aFilters );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
