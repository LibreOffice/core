/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_FunctionAccess_idl__
#define __com_sun_star_sheet_FunctionAccess_idl__

#include <com/sun/star/sheet/SpreadsheetDocumentSettings.idl>
#include <com/sun/star/sheet/XFunctionAccess.idl>


module com {  module sun {  module star {  module sheet {


/** allows generic access to all spreadsheet functions.
 */
published service FunctionAccess
{

    /** contributes properties to control the behavior of some functions
        (i.e. NullDate, IgnoreCase, RegularExpressions).
     */
    service com::sun::star::sheet::SpreadsheetDocumentSettings;


    /** provides calculating the result of a spreadsheet function.
     */
    interface com::sun::star::sheet::XFunctionAccess;


    /** specifies whether the function call is performed as array function
        call.

        <p>If set to <TRUE/>, the result of the function call will be
        calculated similar to array formulas in a spreadsheet document. The
        return value of the function call will usually be a sequence of
        sequences containing the values of the resulting array. Example: If the
        function ABS is called for a 3x2 cell range, the result will be a 3x2
        array containing the absolute values of the numbers contained in the
        specified cell range.</p>

        <p>If set to <FALSE/>, the result of the function call will be
        calculated similar to simple cell formulas in a spreadsheet document.
        The return value of the function call will usually be a single value.
        Of course, some functions always return an array, for example the
        MUNIT function.</p>

        <p>For compatibility with older versions, the default value of this
        property is <TRUE/>.</p>

        @since OOo 3.3
     */
    [optional, property] boolean IsArrayFunction;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
