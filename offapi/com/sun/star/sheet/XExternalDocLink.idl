/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_XExternalDocLink_idl__
#define __com_sun_star_sheet_XExternalDocLink_idl__

#include <com/sun/star/container/XEnumerationAccess.idl>
#include <com/sun/star/container/XIndexAccess.idl>
#include <com/sun/star/container/XNameAccess.idl>
#include <com/sun/star/sheet/XExternalSheetCache.idl>

module com {  module sun {  module star {  module sheet {


/** Primary interface for the com::sun::star::sheet::ExternalDocLink service.

    @see com::sun::star::sheet::ExternalDocLink

    @since OOo 3.1
 */
interface XExternalDocLink
{
    interface com::sun::star::container::XNameAccess;
    interface com::sun::star::container::XIndexAccess;
    interface com::sun::star::container::XEnumerationAccess;


    /** <p>This method adds a new sheet cache instance to the external document
        link for a specified sheet name.  If a sheet cache instance already
        exists for the specified name, then the existing instance is returned.</p>

        <p>Note that a sheet name lookup is performed in a case-insensitive
        fashion.</p>

        @param aSheetName sheet name

        @param DynamicCache specify whether or not the cache can grow when
        non-cached regions are queried.  If `TRUE`, querying a non-cached
        cell in this sheet cache will allow Calc to try to access the source
        document to fetch the value in first access.  If `FALSE`, the source
        document will not be accessed, and the non-cached regions are treated
        as empty cells.

        @return com::sun::star::sheet::XExternalSheetCache sheet cache instance
     */
    com::sun::star::sheet::XExternalSheetCache addSheetCache( [in] string aSheetName, [in] boolean DynamicCache );


    /** Index corresponding to the external document link.

        <p>This index value corresponds with the external document
        represented by an instance of
        com::sun::star::sheet::ExternalDocLink.  This
        value is stored within a formula token instance.</p>

        <p>Each external document cache instance has a unique index value, and this
        index value can be used to retrieve the corresponding external document cache
        from the parent com::sun::star::sheet::ExternalDocLinks instance.</p>

        @see com::sun::star::sheet::ExternalDocLinks
        @see com::sun::star::sheet::FormulaToken
        @see com::sun::star::sheet::ExternalReference
     */
    [attribute, readonly] long TokenIndex;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
