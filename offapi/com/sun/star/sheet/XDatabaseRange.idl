/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_XDatabaseRange_idl__
#define __com_sun_star_sheet_XDatabaseRange_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/table/CellRangeAddress.idl>
#include <com/sun/star/beans/PropertyValue.idl>
#include <com/sun/star/sheet/XSheetFilterDescriptor.idl>
#include <com/sun/star/sheet/XSubTotalDescriptor.idl>


module com {  module sun {  module star {  module sheet {


/** provides access to the settings and options of a database range.

    @see com::sun::star::sheet::DatabaseRange
 */
published interface XDatabaseRange: com::sun::star::uno::XInterface
{

    /** returns the data area of the database range in the
        spreadsheet document.
     */
    com::sun::star::table::CellRangeAddress getDataArea();


    /** sets the data area of the database range.
     */
    void setDataArea( [in] com::sun::star::table::CellRangeAddress aDataArea );


    /** returns the sort descriptor stored with the database range.

        @see SheetSortDescriptor2
     */
    sequence< com::sun::star::beans::PropertyValue > getSortDescriptor();


    /** returns the filter descriptor stored with the database range.

        <p>If the filter descriptor is modified, the new filtering is
        carried out when XDatabaseRange::refresh() is
        called.</p>

        @see SheetFilterDescriptor
     */
    XSheetFilterDescriptor getFilterDescriptor();


    /** returns the subtotal descriptor stored with the database range.

        <p>If the subtotal descriptor is modified, the new subtotals are
        inserted when XDatabaseRange::refresh() is
        called.</p>

        @see SubTotalDescriptor
     */
    XSubTotalDescriptor getSubTotalDescriptor();


    /** returns the database import descriptor stored with this database
        range.

        @see DatabaseImportDescriptor
     */
    sequence< com::sun::star::beans::PropertyValue > getImportDescriptor();


    /** executes the stored import, filter, sorting, and subtotals
        descriptors again.
     */
    void refresh();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
