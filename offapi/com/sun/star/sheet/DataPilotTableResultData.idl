/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_DataPilotTableResultData_idl__
#define __com_sun_star_sheet_DataPilotTableResultData_idl__

#include <com/sun/star/sheet/DataPilotFieldFilter.idl>
#include <com/sun/star/sheet/DataResult.idl>


module com {  module sun {  module star {  module sheet {


/** information about a cell positioned within the result area of a DataPilot table.

    <p>DataPilotTableResultData contains information about a
    particular cell positioned within the result area of a DataPilot table.</p>

    @see com::sun::star::sheet::DataPilotTablePositionData
    @see com::sun::star::sheet::DataPilotTablePositionType
    @see com::sun::star::sheet::DataPilotFieldFilter
    @see com::sun::star::sheet::DataResult

    @since OOo 3.0
 */
struct DataPilotTableResultData
{

    /** This is a set of filter criteria that can be used to re-create those
        data rows that contribute to the value shown in the cell.

        @see com::sun::star::sheet::DataPilotFieldFilter
     */
    sequence< DataPilotFieldFilter >    FieldFilters;


    /** This is a 0-based index that specifies which data field the data displayed
        in the cell is for; the value of 0 means the cell is for the first data
        field, 1 for the second, and so on.
     */
    long                                DataFieldIndex;


    /** more information about the result contained in the
        DataResult type.

        @see com::sun::star::sheet::DataResult
     */
    DataResult                          Result;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
