/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_DataPilotSource_idl__
#define __com_sun_star_sheet_DataPilotSource_idl__

#include <com/sun/star/sheet/XDimensionsSupplier.idl>
#include <com/sun/star/sheet/XDataPilotResults.idl>
#include <com/sun/star/util/XRefreshable.idl>
#include <com/sun/star/beans/XPropertySet.idl>


module com {  module sun {  module star {  module sheet {


/** represents a data pilot source.

    <p>A component that implements this service can be used as data source
    for a data pilot table in a spreadsheet document.</p>
 */
service DataPilotSource
{

    /** provides access to the collection of the dimensions of the data
        pilot source.
     */
    interface com::sun::star::sheet::XDimensionsSupplier;


    /** gives access to the results of the data pilot table.
     */
    interface com::sun::star::sheet::XDataPilotResults;


    /** provides methods to refresh the data pilot table, that means to
        read the data again from the data pilot source.
     */
    interface com::sun::star::util::XRefreshable;


//!published service PropertySet
    /** provides access to the properties.
     */
    interface com::sun::star::beans::XPropertySet;


    /** specifies if grand totals for the columns are inserted.
     */
    [property] boolean ColumnGrand;


    /** specifies if grand totals for the rows are inserted.
     */
    [property] boolean RowGrand;


    /** specifies the number of row fields.

        @since OOo 3.0
     */
    [readonly, property, optional] long RowFieldCount;


    /** specifies the number of column fields.

        @since OOo 3.0
     */
    [readonly, property, optional] long ColumnFieldCount;


    /** specifies the number of data fields.

        @since OOo 3.0
     */
    [readonly, property, optional] long DataFieldCount;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
