/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_SheetFilterDescriptor_idl__
#define __com_sun_star_sheet_SheetFilterDescriptor_idl__

#include <com/sun/star/sheet/XSheetFilterDescriptor.idl>
#include <com/sun/star/sheet/XSheetFilterDescriptor2.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/table/TableOrientation.idl>
#include <com/sun/star/table/CellAddress.idl>


module com {  module sun {  module star {  module sheet {


/** represents a description of how a cell range is to be filtered.

    <p>The descriptor contains properties and a collection of filter
    conditions (filter fields) which control the behavior of a filter
    operation.</p>
 */
published service SheetFilterDescriptor
{

    /** provides access to the collection of filter fields.
     */
    interface XSheetFilterDescriptor;


    /** provides access to the collection of filter fields.

        <p>This interface provides a sequence of TableFilterField2
        structures supporting a wider range of comparison operators, compared
        to the TableFilterField structure provided by interface
        XSheetFilterDescriptor.

        @since OOo 3.2
     */
    [optional] interface XSheetFilterDescriptor2;


//!published service PropertySet
    /** provides access to the properties.
     */
    interface com::sun::star::beans::XPropertySet;


    /** specifies if the case of letters is important when comparing entries.
     */
    [property] boolean IsCaseSensitive;


    /** specifies if duplicate entries are left out of the result.
     */
    [property] boolean SkipDuplicates;


    /** specifies if the TableFilterField::StringValue
        strings are interpreted as regular expressions.
     */
    [property] boolean UseRegularExpressions;


    /** specifies if the SheetFilterDescriptor::OutputPosition
        position is saved for future calls.

        <p>This is only used if
        SheetFilterDescriptor::CopyOutputData is `TRUE`.</p>
     */
    [property] boolean SaveOutputPosition;


    /** specifies if columns or rows are filtered.
     */
    [property] com::sun::star::table::TableOrientation Orientation;


    /** specifies if the first row (or column) contains headers which should
        not be filtered.
     */
    [property] boolean ContainsHeader;


    /** specifies if the filtered data should be copied to another position
        in the document.
     */
    [property] boolean CopyOutputData;


    /** specifies the position where filtered data are to be copied.

        <p>This is only used if
        SheetFilterDescriptor::CopyOutputData is `TRUE`.</p>
     */
    [property] com::sun::star::table::CellAddress OutputPosition;


    /** returns the maximum number of filter fields in the descriptor.

        <p>This read-only property indicates the maximum count of fields the
        current implementation supports.</p>
     */
    [readonly, property] long MaxFieldCount;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
