/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sheet_XCellRangesQuery_idl__
#define __com_sun_star_sheet_XCellRangesQuery_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/sheet/XSheetCellRanges.idl>
#include <com/sun/star/table/CellAddress.idl>
#include <com/sun/star/table/CellRangeAddress.idl>


module com {  module sun {  module star {  module sheet {


/** provides methods to query for cell ranges with specific contents.

    <p>All methods return a collection of cell ranges.</p>

    @see com::sun::star::sheet::SheetRangesQuery
    @see com::sun::star::sheet::SheetCellRanges
 */
published interface XCellRangesQuery: com::sun::star::uno::XInterface
{

    /** queries all visible cells.

        @returns
            the visible (not hidden) cells of the current cell range(s).
     */
    com::sun::star::sheet::XSheetCellRanges queryVisibleCells();


    /** queries all empty cells.

        @returns
            the empty cells of the current cell range(s).
     */
    com::sun::star::sheet::XSheetCellRanges queryEmptyCells();


    /** queries all cells with the specified content type(s).

        @param nContentFlags
            a combination of CellFlags flags.

            <p>Attention: Despite the CellFlags flags are
            `long` values, this method expects a `short`
            parameter.</p>

            <p>Attention: Empty cells in the range may be skipped depending on
            the content flag used.  For instance, when querying for STYLES,
            the returned ranges may not include empty cells even if styles are
            applied to those cells.</p>

        @returns
            all cells of the current cell range(s) with the specified
            content type(s).
     */
    com::sun::star::sheet::XSheetCellRanges queryContentCells(
            [in] short nContentFlags );


    /** queries all formula cells with the specified result type.

        @param nResultFlags
            a combination of FormulaResult flags.

        @returns
            all formula cells of the current cell range(s) with the
            specified result type(s).
     */
    com::sun::star::sheet::XSheetCellRanges queryFormulaCells(
            [in] long nResultFlags );


    /** queries all cells with different values in a specified row.

        <p>This method takes each column of the current cell range(s) and
        compares all cells with the cell in the specified row. All cells
        which are different to this comparison cell will be returned.</p>

        @param aCompare
            contains a cell address with the row index used for comparison.
            Only this row index is of interest.

        @returns
            all cells of the current cell range(s) which are different
            to the comparison cell of each column.
     */
    com::sun::star::sheet::XSheetCellRanges queryColumnDifferences(
            [in] com::sun::star::table::CellAddress aCompare );


    /** queries all cells with different values in a specified column.

        <p>This method takes each row of the current cell range(s) and
        compares all cells with the cell in the specified column. All cells
        which are different to this comparison cell will be returned.</p>

        @param aCompare
            contains a cell address with the column index used for
            comparison. Only this column index is of interest.

        @returns
            all cells of the current cell range(s) which are different
            to the comparison cell of each row.
     */
    com::sun::star::sheet::XSheetCellRanges queryRowDifferences(
            [in] com::sun::star::table::CellAddress aCompare );


    /** intersects the current cell range(s) with the specified cell range.

        @param aRange
            contains the cell range for intersection.

        @return
            all cells of the current cell range(s) which are contained
            in the passed cell range.

     */
    com::sun::star::sheet::XSheetCellRanges queryIntersection(
            [in] com::sun::star::table::CellRangeAddress aRange );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
