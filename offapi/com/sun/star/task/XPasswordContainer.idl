/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_task_XPasswordContainer_idl__
#define __com_sun_star_task_XPasswordContainer_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/task/UrlRecord.idl>
#include <com/sun/star/task/XInteractionHandler.idl>



module com { module sun { module star { module task {

/** Allows to save passwords with URL-pattern, to use them later.
*/
published interface XPasswordContainer : com::sun::star::uno::XInterface
{
    /** Save passwords in to the container.

        @param Url        URL-pattern, that will be used later to retrieve
        passwords.

        @param UseName    The username.

        @param Passwords  The password-list.

        @param Handler    The handler to get super password to en/decrypt passwords


    */
    void   add( [in] string Url, [in] string UserName, [in] sequence<string> Passwords, [in] XInteractionHandler Handler );

    /** Save passwords in to the container, and store them in the file.

        @param Url        URL-pattern, that will be used later to retrieve
                          passwords.

        @param UseName    The username.

        @param Passwords  The password-list.

        @param Handler    The handler to get super password to en/decrypt passwords


    */
    void   addPersistent( [in] string Url, [in] string UserName, [in] sequence<string> Passwords, [in] XInteractionHandler Handler );

    /** Find users with passwords for the url pattern.

        @param Url     URL-pattern to retrieve password for.

        @param Handler    The handler to get super password to en/decrypt passwords

        @returns       Best matched url-pattern with user-records list.
    */
    UrlRecord find( [in] string Url, [in] XInteractionHandler Handler );

    /** Find passwords for the url pattern and username.

        @param Url      URL-pattern to retrieve passwords for.

        @param UserName Username to retrieve passwords for.

        @param Handler    The handler to get super password to en/decrypt passwords

        @returns        Best matched url-pattern for the username.
    */
    UrlRecord findForName( [in] string Url, [in] string UserName , [in] XInteractionHandler Handler );

    /** Remove passwords for the url pattern and username.

        @param Url      URL-pattern to remove passwords for.

        @param UserName Username to remove passwords for.

    */
    void remove( [in] string Url, [in] string UserName );


    /** Remove passwords for the url pattern and username from the file.

        @param Url      URL-pattern to remove passwords for.

        @param UserName Username to remove passwords for.

    */
    void removePersistent( [in] string Url, [in] string UserName );

    /** Clean the file.
    */
    void removeAllPersistent();

    /** Get all records from the file.

        @returns        List of url-records.
    */
    sequence<UrlRecord> getAllPersistent( [in] XInteractionHandler Handler );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
