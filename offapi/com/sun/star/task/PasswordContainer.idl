/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_task_PasswordContainer_idl__
#define __com_sun_star_task_PasswordContainer_idl__

module com {  module sun {  module star {
    module task {
        published interface XPasswordContainer;
        published interface XMasterPasswordHandling;
    };
}; }; };

module com {  module sun {  module star {  module task {
/** this service is kind of storage that allows to store passwords
    and to retrieve already stored.

    <p>
    A password can be stored for the session period or persistently.
    The persistent way is only possible if configuration allows to use storage.
    It stores passwords encrypted with a super password. An interaction
    is used to ask a user for a super password.
    To allow such an interaction, an object that implements <type>XInteractionHandler</type>
    interface should be provided. For this purpose <type>InteractionHandler</type>
    service can be used.
    </p>

    <p>
    In case no interaction handler is provided all passwords are stored
    for the session period. In case an interaction handler is provided, but
    the super password interaction does not return super password ( for any reason ),
    <type>NoMasterException</type> exception is thrown to let user use
    non-persistent way explicitly.
    </p>
*/
published service PasswordContainer
{
    /** handles passwords

        <p>
        Use this interface to store\retrieve passwords.
        </p>
     */
    interface com::sun::star::task::XPasswordContainer;

    /** handles passwords

        <p>
        Use this interface to store\retrieve passwords.
        </p>
     */
    [optional] interface com::sun::star::task::XMasterPasswordHandling;
};

}; }; }; };
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
