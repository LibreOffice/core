/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_task_XJobExecutor_idl__
#define __com_sun_star_task_XJobExecutor_idl__

#include <com/sun/star/uno/XInterface.idl>


module com {  module sun {  module star {  module task {

/** starts action for any triggered event from outside

    <p>
    If somewhere from outside trigger an event on this interface
    it will be used to find any registered service inside configuration
    of this executor. If somewhere could be found it will be
    started and controlled by this instance. After it finish his work
    it's possible to deactivate further startups or let him run again if
    a new event will be detected later.
    </p>

    @see theJobExecutor
 */
published interface XJobExecutor : com::sun::star::uno::XInterface
{
    /** trigger event to start registered jobs

        <p>
        Jobs are registered in configuration and will be started by executor
        automatically, if they are registered for triggered event.
        The meaning of given string <var>Event</var> mustn't be known. Because
        for the executor it's enough to use it for searching a registered job
        inside his own configuration. So no special events will be defined here.
        </p>

        @param Event
                describe the event for which jobs can be registered and should be started
    */
    void trigger( [in] string Event );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
