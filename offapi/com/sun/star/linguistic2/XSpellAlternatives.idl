/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_linguistic2_XSpellAlternatives_idl__
#define __com_sun_star_linguistic2_XSpellAlternatives_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/Locale.idl>


module com { module sun { module star { module linguistic2 {

/** Gives access to the results of failed
    spell checking attempts and may provide spelling alternatives.

    <P>This is used by the
    <member scope="com::sun::star::linguistic2">XSpellChecker::spell</member>
    function when the word was not found to be correct.
    Suggestions for other words to be used may be provided along with
    a failure-type that may specify why the word was not correct.
    </P>

    @see    <type scope="com::sun::star::linguistic2">SpellFailure</type>
*/
published interface XSpellAlternatives : com::sun::star::uno::XInterface
{
    /**
         @returns
             the word that was misspelled.
     */
    string getWord();

    /**
        @returns
            the Locale which specifies the language of the misspelled word.
    */
    com::sun::star::lang::Locale getLocale();

    /**
        @returns
            the type (reason) for spell checking to have failed verification.

    @see    <type scope="com::sun::star::linguistic2">SpellFailure</type>
    */
    short getFailureType();

    /**
        @returns
            the number of suggested spelling alternatives available.
    */
    short getAlternativesCount();

    /**
         @returns
            the sequence of suggested spelling alternatives.
    */
    sequence<string> getAlternatives();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
