/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_linguistic2_XHyphenatedWord_idl__
#define __com_sun_star_linguistic2_XHyphenatedWord_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/Locale.idl>



module com { module sun { module star { module linguistic2 {

/** gives information obtained by a successful hyphenation attempt.

    <P>This interface is used as a return value for some of the hyphenator
    functions.</P>

    @see    com::sun::star::linguistic2::XHyphenator
*/
published interface XHyphenatedWord : com::sun::star::uno::XInterface
{
    /**
         @returns
             the word that was hyphenated.
     */
    string getWord();

    /**
         @returns
            the language of the hyphenated word.

        @see    com::sun::star::lang::Locale
    */
    com::sun::star::lang::Locale getLocale();

    /**
        @returns
            the position where hyphenation was applied in the word.

        <P>The value has to be in the range from 0 (after the first character)
         to n-2 (before the last character) where n is the length of
         the word.</P>
    */
    short getHyphenationPos();

    /**
         @returns
             the hyphenated word as it should be written (without the hyphen
             character).
     */
    string getHyphenatedWord();

    /**
        @returns
            the position of the hyphen in the hyphenated word.

        <P>The value has to be in the range from 0 (after the first character)
         to m-2 (before the last character) where m is the length of
         the hyphenated word.</P>
    */
    short getHyphenPos();

    /** is used to query if the hyphenation result is an alternative spelling.

         <p>A hyphenation result is an alternative spelling if the hyphenated
         word is different from the word that was hyphenated.</p>

         @returns
             `TRUE` if it is an alternative spelling, `FALSE` otherwise.
    */
    boolean isAlternativeSpelling();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
