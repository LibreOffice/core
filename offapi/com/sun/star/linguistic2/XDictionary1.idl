/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_linguistic2_XDictionary1_idl__
#define __com_sun_star_linguistic2_XDictionary1_idl__

#include <com/sun/star/container/XNamed.idl>
#include <com/sun/star/linguistic2/DictionaryType.idl>
#include <com/sun/star/linguistic2/XDictionaryEntry.idl>
#include <com/sun/star/linguistic2/XDictionaryEventListener.idl>


module com { module sun { module star { module linguistic2 {

/**
    @deprecated
*/
published interface XDictionary1 : com::sun::star::container::XNamed
{
    com::sun::star::linguistic2::DictionaryType getDictionaryType();

    void setActive( [in] boolean bActivate );

    boolean isActive();

    short getCount();

    short getLanguage();

    void setLanguage( [in] short nLang );

    com::sun::star::linguistic2::XDictionaryEntry getEntry( [in] string aWord );

    boolean addEntry( [in] com::sun::star::linguistic2::XDictionaryEntry xDicEntry );

    boolean add(
            [in] string aWord,
            [in] boolean bIsNegative,
            [in] string aRplcText );

    boolean remove( [in] string aWord );

    boolean isFull();

    sequence<com::sun::star::linguistic2::XDictionaryEntry> getEntries();

    void clear();

    boolean addDictionaryEventListener( [in] com::sun::star::linguistic2::XDictionaryEventListener xListener );

    boolean removeDictionaryEventListener( [in] com::sun::star::linguistic2::XDictionaryEventListener xListener );

};


}; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
