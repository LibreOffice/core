/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_linguistic2_XProofreadingIterator_idl__
#define __com_sun_star_linguistic2_XProofreadingIterator_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/text/XFlatParagraphIteratorProvider.idl>
#include <com/sun/star/text/XFlatParagraph.idl>
#include <com/sun/star/lang/Locale.idl>
#include <com/sun/star/linguistic2/ProofreadingResult.idl>


module com {  module sun {  module star {  module linguistic2 {

/** API for the proofreading iterator that mediates between the document and the proofreader.

    @since  OOo 3.0.1
*/
interface XProofreadingIterator: com::sun::star::uno::XInterface
{
    /** start proofreading and automatically process the whole text

        @param  xDocument
                the text document.

        @param  xIteratorProvider
                the flat paragraph iterator provider.

        @throws IllegalArgumentException
                when any argument is wrong.
    */
    void startProofreading( [in] com::sun::star::uno::XInterface xDocument,
                    [in] com::sun::star::text::XFlatParagraphIteratorProvider xIteratorProvider )
            raises( com::sun::star::lang::IllegalArgumentException );

    /** start proofreading from a given position

        @param  xDocument
                the document.

        @param  xFlatParagraph
                the single flat paragraph to be checked.

        @param  aText
                the text of the paragraph to be checked.

        @param  aLocale
                currently unused parameter.

        @param  nStartOfSentencePosition
                the start position of the current sentence.

        @param  nSuggestedBehindEndOfSentencePosition
                currently unused parameter.

        @param  nErrorPositionInParagraph
                the given index.

        @throws IllegalArgumentException
                when any argument is wrong.
    */

    ProofreadingResult checkSentenceAtPosition( [in] com::sun::star::uno::XInterface xDocument,
                    [in] com::sun::star::text::XFlatParagraph xFlatParagraph,
                    [in] string aText,
                    [in] com::sun::star::lang::Locale aLocale,
                    [in] long nStartOfSentencePosition,
                    [in] long nSuggestedBehindEndOfSentencePosition,
                    [in] long nErrorPositionInParagraph )
            raises( com::sun::star::lang::IllegalArgumentException );

    /** clears the list of ignored rules for each proofreader
    */
    void resetIgnoreRules();

    /** checks if the given document is currently being checked

        @param  xDocument
                the document.

        @returns
                if the document is currently being checked.
    */
    boolean isProofreading( [in] com::sun::star::uno::XInterface xDocument );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
