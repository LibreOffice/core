/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_linguistic2_XLinguServiceEventBroadcaster_idl__
#define __com_sun_star_linguistic2_XLinguServiceEventBroadcaster_idl__


#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/linguistic2/XLinguServiceEventListener.idl>


module com { module sun { module star { module linguistic2 {

/** is used to register a listener for LinguServiceEvents.

    <P>This interface may be used by spell checker or hyphenator
    implementations to allow clients to be registered and informed about
    com::sun::star::linguistic2::LinguServiceEvents.
    </P>

    <P>Note: The LinguServiceManager forwards the
    com::sun::star::linguistic2::LinguServiceEvents
    it receives (from spell checkers or hyphenators) to its own listeners.
    Thus, there should be no need to register
    as a listener for a specific implementation./P>

    @see    com::sun::star::linguistic2::XLinguServiceManager
    @see    com::sun::star::linguistic2::XLinguServiceEventListener
*/
published interface XLinguServiceEventBroadcaster : com::sun::star::uno::XInterface
{
    /**
         @returns
             `TRUE` if the listener was successfully added,
            `FALSE` otherwise.

        @param xLstnr
            the listener to be added.
     */
    boolean addLinguServiceEventListener (
        [in] com::sun::star::linguistic2::XLinguServiceEventListener    xLstnr );

    /**
         @returns
             `TRUE` if the listener was successfully removed,
            `FALSE` otherwise.

        @param xLstnr
            the listener to be removed.
     */
    boolean removeLinguServiceEventListener (
        [in] com::sun::star::linguistic2::XLinguServiceEventListener    xLstnr );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
