/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_linguistic2_XSearchableDictionaryList_idl__
#define __com_sun_star_linguistic2_XSearchableDictionaryList_idl__


#include <com/sun/star/linguistic2/XDictionaryList.idl>
#include <com/sun/star/linguistic2/XDictionaryEntry.idl>
#include <com/sun/star/lang/Locale.idl>



module com { module sun { module star { module linguistic2 {

/** allows searching for an entry in all dictionaries of the dictionary-list.

    <P> Only active dictionaries of a suitable language will be searched
    for the entry.
    The language is suitable if it is the same as the dictionary's language or
    the dictionary may hold entries of all languages.
    <P>

    @see <type scope="com::sun::star::linguistic2">XDictionaryList</type>
*/
published interface XSearchableDictionaryList : com::sun::star::linguistic2::XDictionaryList
{
    /** looks for an entry for a given word in the list of dictionaries.

        @returns
            the dictionary entry that was found, <NULL/> otherwise.

        @param aWord
            the word (entry) to be looked for.

        @param aLocale
            the language of the word to be looked for.

        @param bSearchPosDic
            <TRUE/> if only positive dictionaries should be searched.
            <FALSE/> if only negative dictionaries should be searched.

        @param bSpellEntry
            <TRUE/> if entries for purposes of spell checking are required.
            <FALSE/> if only entries for hyphenation purposes are required.
*/
    com::sun::star::linguistic2::XDictionaryEntry   queryDictionaryEntry(
        [in] string  aWord ,
        [in] com::sun::star::lang::Locale  aLocale,
        [in] boolean bSearchPosDics,
        [in] boolean bSpellEntry );

};


}; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
