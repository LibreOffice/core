/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_DispatchDescriptor_idl__
#define __com_sun_star_frame_DispatchDescriptor_idl__

#include <com/sun/star/util/URL.idl>



 module com {  module sun {  module star {  module frame {

/** describes a feature to be retrieved by a URL that
    has to be loaded into a specified frame

    <p>
    For a normal dispatch calls all needed parameters are separated.
    For optimized remote functionality XDispatch::queryDispatches()
    it's necessary to pack these parameters in a flat structure which can be used
    in a simple manner.
    </p>

    @see XDispatchProvider::queryDispatches()
 */
published struct DispatchDescriptor
{
    /** specifies the URL of the resource/function

        <p>
        Must be a full parsed URL. Use service com::sun::star::util::URLTransformer
        for that.
        </p>

        @see com::sun::star::util::URLTransformer
     */
    com::sun::star::util::URL FeatureURL;

    /** name of the target frame

        <p>
        Special targets (e.g. "_blank", "_self") or really existing target names can be used.
        </p>

        @see XDispatchProvider::queryDispatch()
     */
    string FrameName;

    /** describes how the target frame is to be searched

        <p>
        This optional parameter is used if <var>FrameName</var> isn't a special target only.
        </p>

        @see FrameSearchFlag
     */
    long SearchFlags;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
