/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XTerminateListener_idl__
#define __com_sun_star_frame_XTerminateListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/lang/EventObject.idl>
#include <com/sun/star/frame/TerminationVetoException.idl>



 module com {  module sun {  module star {  module frame {

/** has to be provided if an object wants to receive an event
    when the master environment (e.g., desktop) is terminated.

    @see XDesktop::terminate()
    @see XDesktop::addTerminateListener()
    @see XDesktop::removeTerminateListener()
 */
published interface XTerminateListener: com::sun::star::lang::XEventListener
{
    /** is called when the master environment (e.g., desktop) is about to terminate.

        <p>
        Termination can be intercepted by throwing TerminationVetoException.
        Interceptor will be the new owner of desktop and should call XDesktop::terminate()
        after finishing his own operations.
        </p>

        @param Event
            describe the source of the event (e.g., the desktop)

        @throws TerminationVetoException
            listener can disagree with this query by throwing this veto exception
     */
    void queryTermination( [in] com::sun::star::lang::EventObject Event )
            raises( TerminationVetoException );

    /** is called when the master environment is finally terminated.
        No veto will be accepted then.

        @param Event
            describe the source of the event (e.g., the desktop)
     */
    void notifyTermination( [in] com::sun::star::lang::EventObject Event );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
