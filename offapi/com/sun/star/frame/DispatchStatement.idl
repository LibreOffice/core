/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_DispatchStatement_idl__
#define __com_sun_star_frame_DispatchStatement_idl__

#include <com/sun/star/beans/PropertyValue.idl>


 module com {  module sun {  module star {  module frame {

/** represents a dispatch statement from a recorded macro

    @since OOo 1.1.2
 */
published struct DispatchStatement
{
        /** specifies the dispatch command

            <p>
            That means the <var>URL</var> parameter of a corresponding XDispatchProvider::queryDispatch() request.
            </p>
         */
    string aCommand;


        /** specifies the frame target

            <p>
            That means the <var>TargetFrameName</var> parameter of a corresponding XDispatchProvider::queryDispatch() request.
            </p>
         */
        string aTarget;

        /** specifies the dispatch command arguments

            <p>
            That means the <var>Arguments</var> parameter of a corresponding XDispatch::dispatch() request.
            </p>
         */
        sequence < com::sun::star::beans::PropertyValue > aArgs;

        /** specifies the optional search flags
            <p>
            That means the <var>SearchFlags</var> parameter of a corresponding XDispatchProvider::queryDispatch() request.
            </p>
         */
        long nFlags;

        /** specifies if this statement should be recorded as commented out or not

            @see XDispatchRecorder::recordDispatchAsComment()
         */
        boolean bIsComment;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
