/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_XSynchronousDispatch_idl__
#define __com_sun_star_frame_XSynchronousDispatch_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/URL.idl>
#include <com/sun/star/beans/PropertyValue.idl>


module com {  module sun {  module star {  module frame {

/** additional interfaces for dispatch objects: allow to execute with return value
    @since OOo 2.0
    @see XDispatch
 */
published interface XSynchronousDispatch: com::sun::star::uno::XInterface
{
    /** dispatches a URL synchronously and offers a return values

        <p>
        After getting a dispatch object as a result of a queryDispatch call, this interface can
        be used to dispatch the URL synchronously and with a return value.
        </p>

        @param URL
            full parsed URL which describe the feature which should be dispatched (executed)

        @param Arguments
            optional arguments for this request
            They depend on the real implementation of the dispatch object.
     */
     any dispatchWithReturnValue(
        [in] com::sun::star::util::URL URL,
        [in] sequence<com::sun::star::beans::PropertyValue> Arguments);
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
