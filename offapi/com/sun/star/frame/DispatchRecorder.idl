/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_DispatchRecorder_idl__
#define __com_sun_star_frame_DispatchRecorder_idl__

#include <com/sun/star/frame/XDispatchRecorder.idl>


 module com {  module sun {  module star {  module frame {

/** provides functionality to record XDispatch::dispatch() requests

    <p>
    It records all necessary parameters of a call XDispatch::dispatch()
    and generate code which can be executed at later time to run same operations
    again. Which code will be generated depends from real implementation. So it's
    possible to generate e.g. Java/Basic or may Perl code.
    By using of a DispatchRecorderSupplier, which is available on
    a property of a Frame::DispatchRecorderSupplier, it's possible to change such code generation
    for further requests or disable it in general by setting this property to `NULL`.
    </p>

    @see DispatchRecorderSupplier
    @see Frame::RecorderSupplier

    @since OOo 1.1.2
 */
published service DispatchRecorder : XDispatchRecorder;


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
