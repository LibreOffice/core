/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_ContentHandler_idl__
#define __com_sun_star_frame_ContentHandler_idl__

#include <com/sun/star/frame/XNotifyingDispatch.idl>


module com {  module sun {  module star {  module frame {

/** special dispatcher for non visible contents, e.g. sounds

    <p>
    This handler doesn't need any frame as target for loading components.
    Content handler are registered for content types.
    (See type/filter configuration of <type scope="com::sun::star::document">TypeDetection</type>
    for further informations) If generic load mechanism found such documents which
    can be handled by a ContentHandler it will create and use it.
    </p>

    @see com::sun::star::document::TypeDetection
 */
published service ContentHandler
{
    /** provides handling of dispatches with defined result state

        <p>
        Base interface of <type>XNotifyingDispatch</type> is <type>XDispatch</type>
        and can be called for requests if result isn't necessary for dispatch operation.
        </p>

        @see XDispatch
     */
    interface XNotifyingDispatch;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
