/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XSynchronousFrameLoader_idl__
#define __com_sun_star_frame_XSynchronousFrameLoader_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/frame/XFrame.idl>
#include <com/sun/star/beans/PropertyValue.idl>


 module com {  module sun {  module star {  module frame {

/** loads a resource into a Frame.

    <p>
    Unlike the XFrameLoader interface, this loading will be synchronous.
     </p>

    @see XFrameLoader
 */
published interface XSynchronousFrameLoader: com::sun::star::uno::XInterface
{
    /** starts the loading of the specified resource into the specified Frame.

        @param Descriptor
            describes the resource which should be loaded
            It use a com::sun::star::document::MediaDescriptor for that.

        @param Frame
            the target frame which should contain the new loaded component

        @return
            `TRUE` if loading is successfully
            <br>
            `FALSE` otherwise
     */
    boolean load(
        [in] sequence< com::sun::star::beans::PropertyValue > Descriptor,
        [in] XFrame Frame );

    /** cancels the loading process.

        <p>
        No notifications (neither to the frame or the caller) must be notified.
        Because it's a synchronous process this cancel call can be forced by
        another thread the loader thread only. Method
        XSynchronousFrameLoader::load() must return `FALSE`
        then and caller of this method XSynchronousFrameLoader::cancel()
        already knows the state ...
        </p>
     */
    void cancel();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
