/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XFramesSupplier_idl__
#define __com_sun_star_frame_XFramesSupplier_idl__

#include <com/sun/star/frame/XFrame.idl>


 module com {  module sun {  module star {  module frame {

 published interface XFrames;

/** provides access to sub frames of current one

    @see XFrames
 */
published interface XFramesSupplier: XFrame
{
    /** provides access to this container and to all other XFramesSupplier
        which are available from this node of frame tree

        @returns
            the collection of frames which is represented by
            a FramesContainer.
     */
    XFrames getFrames();

    /** gets the current active frame of this container
        (not of any other available supplier)

        <p>
        This may be the frame itself. The active frame is defined as
        the frame which contains (recursively) the window with the focus.
        If no window within the frame contains the focus, this method
        returns the last frame which had the focus. If no containing
        window ever had the focus, the first frame within this frame is
        returned.
        </p>

        @returns
            the Frame which is active within this frame.
     */
    XFrame getActiveFrame();

    /** is called on activation of a direct sub-frame.

        <p>
        This method is only allowed to be called by a sub-frame according to
        XFrame::activate() or XFramesSupplier::setActiveFrame().
        After this call XFramesSupplier::getActiveFrame() will return the
        frame specified by <var>Frame</var>.
        </p>

        <p>
        In general this method first calls the method XFramesSupplier::setActiveFrame()
        at the creator frame with <var>this</var> as the current argument. Then it broadcasts
        the FrameActionEvent FrameAction::FRAME_ACTIVATED.
        </p>

        <p>
        Note: Given parameter <var>Frame</var> must already exist inside the container
        (e.g., inserted by using XFrames::append())
        </p>

        @param Frame
            the new active child frame inside this container
    */
    void setActiveFrame( [in] XFrame Frame );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
