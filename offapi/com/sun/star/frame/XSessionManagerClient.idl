/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XSessionManagerClient_idl__
#define __com_sun_star_frame_XSessionManagerClient_idl__

#include <com/sun/star/frame/XSessionManagerListener.idl>


module com {  module sun {  module star {  module frame {

/** Connect to a session manager to get information about pending
    desktop shutdown

 */
    interface XSessionManagerClient : com::sun::star::uno::XInterface
    {

        /** addSessionManagerListener registers a listener for session management events

        @param xListener
        listener for session management events

        @see XSessionManagerListener
        @see XSessionManagerClient::removeSessionManagerListener()
        */
        void addSessionManagerListener( [in] XSessionManagerListener xListener );

        /** removeSessionManagerListener deregisters a listener for session events

        @param xListener
            listener to be removed

        @see XSessionManagerListener
        @see XSessionManagerClient::addSessionManagerListener()
        */
        void removeSessionManagerListener( [in] XSessionManagerListener xListener );

        /** queryInteraction issues a request for a user interaction slot
            from the session manager

        @param xListener
        the listener requesting user interaction

        @see XSessionManagerListener
        */
        void queryInteraction( [in] XSessionManagerListener xListener );

        /** interactionDone is called when a listener has finished user interaction

        @param xListener
        the listener done with user interaction

        @see XSessionManagerListener
        */
        void interactionDone( [in] XSessionManagerListener xListener );

        /** saveDone signals that a listener has processed a save request

        @param xListener
        the listener having finished save request processing

        @see XSessionManagerListener
        */
        void saveDone( [in] XSessionManagerListener xListener );

        /** Call cancelShutdown to try to cancel a desktop shutdown in progress

        @returns
        `TRUE` if shutdown was canceled,
        `FALSE` else.
        */
        boolean cancelShutdown();
    };

}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
