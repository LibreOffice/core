/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XConfigManager_idl__
#define __com_sun_star_frame_XConfigManager_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertyChangeListener.idl>


 module com {
  module sun {
   module star {
    module frame {

/** @deprecated
 */
published interface XConfigManager: com::sun::star::uno::XInterface
{
    /** add a listener to notify changes on well known variables
        inside the real implementation

        <p>
        Listener can update his text values by calling XConfigManager::substituteVariables()
        again. If <var>KeyName</var> specifies a group of keys, the listener gets one notify for each subkey.
        </p>

        @param KeyName
            specifies variable about listener will be informed on changes

        @param Listener
            listener which will be informed

        @see XConfigManager::removePropertyChangeListener()

        @deprecated
    */
    void addPropertyChangeListener(
        [in] string KeyName,
        [in] com::sun::star::beans::XPropertyChangeListener Listener );

    /** remove a registered listener

        @param KeyName
            specifies variable on which listener was registered

        @param Listener
            listener which will be deregistered

        @see XConfigManager::addPropertyChangeListener()

        @deprecated
     */
    void removePropertyChangeListener(
        [in] string KeyName,
        [in] com::sun::star::beans::XPropertyChangeListener Listener);

    /** substitute variables (place holder) inside given parameter <var>Text</var>

        <p>
        The value of <var>Text</var> is NOT changed.
        </p>

        @param Text
            original value including variables

        @return
            changed copy of <var>Text</var> without any variables
     */
    string substituteVariables( [in] string Text );

    /** was designed for additional functionality for interface com::sun::star::registry::XSimpleRegistry
        and make no sense without that
        @deprecated
     */
    void flush();

}; //XConfigManager
}; //frame
}; //star
}; //sun
}; //com

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
