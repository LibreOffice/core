/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XDispatchInformationProvider_idl__
#define __com_sun_star_frame_XDispatchInformationProvider_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/frame/DispatchInformation.idl>
#include <com/sun/star/container/NoSuchElementException.idl>


module com {  module sun {  module star {  module frame {

/** provides information about supported commands

    <p>
    This interface can be used to retrieve additional information about
    supported commands. This interface is normally used by configuration
    implementations to retrieve all supported commands.
    A dispatch information provider is normally supported by a
    Frame service.
    </p>

    @see Frame

    @since OOo 2.0
 */
published interface XDispatchInformationProvider: com::sun::star::uno::XInterface
{
    /** returns all supported command groups.

        @returns
            a sequence of supported command groups.

        @see CommandGroup
    */
    sequence < short > getSupportedCommandGroups();

    /** returns additional information about supported commands of a
        given command group.

        @param CommandGroup
            specifies a command group.

        @returns
            name and group name of every command supported. A group ID which is
            not supported returns an empty com::sun::star::uno::Sequence.
    */
    sequence < DispatchInformation > getConfigurableDispatchInformation( [in] short CommandGroup );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
