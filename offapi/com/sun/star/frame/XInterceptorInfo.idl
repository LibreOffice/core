/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_frame_XInterceptorInfo_idl__
#define __com_sun_star_frame_XInterceptorInfo_idl__

#include <com/sun/star/uno/XInterface.idl>


 module com {  module sun {  module star {  module frame {


/** makes it possible to get information about a registered interceptor and is used by
    frame interceptor mechanism to perform interception.

    <p>
    Frame can call right interceptor directly without calling all of registered ones.
    Use it as an additional interface to XDispatchProviderInterceptor.
    If any interceptor in list doesn't support this interface - these mechanism will be broken
    and normal list of master-slave interceptor objects will be used from top to the bottom.
    </p>

    @see XDispatchProviderInterception
    @see XDispatchProviderInterceptor
 */
published interface XInterceptorInfo: com::sun::star::uno::XInterface
{
    /** returns the URL list for interception.

        <p>
        Wildcards inside the URLs are allowed to register the interceptor for
        URLs too, which can have optional arguments (e.g. "..#.." or "..?..").
        </p>

        @return
            a list of URLs which are handled by this interceptor
     */
    sequence< string > getInterceptedURLs();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
