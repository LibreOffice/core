/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_util_XStringEscape_idl__
#define __com_sun_star_util_XStringEscape_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>


module com {  module sun {  module star {  module util {

/** This interface is used to encode an arbitrary String into a
    escaped form.

    <p>The escaped form is chosen to be suitable for use with other interfaces
    of the object or service providing this interface.</p>

    <p>Any characters or character sequences that are not compatible with
    any naming rules or restrictions must be replaced by an escaped form,
    that complies to these rules.

    <p>The transformation should preserve all traits of the string that are
    generally respected by the service. For example, the case of a string
    may be lost after encoding and then decoding, if the service
    generally is case insensitive.

    <p>Other than that the encoding is one-to-one and can be reversed. The
    encoding should try to preserve as much as possible of the original
    string, to keep human-readable input human-friendly where possible.
    Strings that already conform to the naming conventions should be left
    unchanged or minimally modified.</p>
 */
published interface XStringEscape: com::sun::star::uno::XInterface
{
    /** encodes an arbitrary string into an escaped form compatible with some naming rules.
     */
    string escapeString([in] string aString)
        raises( com::sun::star::lang::IllegalArgumentException);

    /** decodes an escaped string into the original form.
     */
    string unescapeString([in] string aEscapedString)
        raises( com::sun::star::lang::IllegalArgumentException);
};



}; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
