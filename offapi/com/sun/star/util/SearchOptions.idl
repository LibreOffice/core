/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_lang_SearchOptions_idl__
#define __com_sun_star_lang_SearchOptions_idl__


#include <com/sun/star/lang/Locale.idl>
#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/SearchAlgorithms.idl>


module com { module sun { module star { module util {


published  struct SearchOptions  {
    /** search type */
    SearchAlgorithms    algorithmType;

    /** some flags - can be mixed

        @see <type>SearchFlags</type>
    */
    long             searchFlag;

    /** The text or pattern to be searched. */
    string            searchString;

    /** The replacement text
        (is for optional replacing - SearchOption is only the data container for it) */
    string            replaceString;

    /** The locale for case insensitive search. */
    ::com::sun::star::lang::Locale  Locale;

    /** This many characters can be different (as a replacement) between
        the found word and the search pattern in a "Weighted Levenshtein
        Distance" search. */
    long            changedChars;

    /** This many characters can be missing in the found word in a
        "Weighted Levenshtein Distance" search. */
    long            deletedChars;

    /** This many characters can be additional in the found word in a
        "Weighted Levenshtein Distance" search. */
    long            insertedChars;

    /** Flags for the transliteration. Same meaning as the enum of
        <type scope="com::sun::star::i18n">TransliterationModules</type>
    */
    long            transliterateFlags;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
