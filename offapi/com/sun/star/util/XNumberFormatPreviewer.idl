/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_util_XNumberFormatPreviewer_idl__
#define __com_sun_star_util_XNumberFormatPreviewer_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/util/Color.idl>
#include <com/sun/star/lang/Locale.idl>

#include <com/sun/star/util/MalformedNumberFormatException.idl>



 module com {  module sun {  module star {  module util {


/** represents a number formatter which can preview number
    formats without inserting them.

    @see NumberFormatter
 */
published interface XNumberFormatPreviewer: com::sun::star::uno::XInterface
{

    /** formats a value using a format string, without inserting a
        number format into the list.

        @param aFormat
            is the format string that is used for formatting.

        @param fValue
            is the value that is formatted.

        @param nLocale
            is the locale that is used to interpret the format string.

        @param bAllowEnglish
            specifies if English language number format strings are accepted
            in addition to those from the selected locale.

        @returns
            the formatted string.

        @throws com::sun::star::util::MalformedNumberFormatException
            if the format string is invalid.

     */
    string convertNumberToPreviewString( [in] string aFormat,
             [in] double fValue,
             [in] com::sun::star::lang::Locale nLocale,
             [in] boolean bAllowEnglish )
            raises( com::sun::star::util::MalformedNumberFormatException );


    /** returns the color which is to be used for a number.

        @param aFormat
            is the format string that is used for formatting.

        @param fValue
            is the value that is formatted.

        @param nLocale
            is the locale that is used to interpret the format string.

        @param bAllowEnglish
            specifies if English language number format strings are accepted
            in addition to those from the selected locale.

        @param aDefaultColor
            is the color that should be returned if no color is set by
            the number format.

        @returns
            the color that should used to output the formatted string.

        @throws com::sun::star::util::MalformedNumberFormatException
            if the format string is invalid.

     */
    com::sun::star::util::Color queryPreviewColorForNumber( [in] string aFormat,
             [in] double fValue,
             [in] com::sun::star::lang::Locale nLocale,
             [in] boolean bAllowEnglish,
             [in] com::sun::star::util::Color aDefaultColor )
            raises( com::sun::star::util::MalformedNumberFormatException );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
