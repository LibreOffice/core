/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_util_XModifiable2_idl__
#define __com_sun_star_util_XModifiable2_idl__

#include <com/sun/star/util/XModifiable.idl>

#include <com/sun/star/beans/PropertyVetoException.idl>



module com {  module sun {  module star {  module util {


/** allows to control modifiable state change.

    <p>
    This interface allows to prevent changing of the modified state of the
    object. It is introduced for performance optimizations, to allow to prevent
    unnecessary updates, for example while importing a document.
    Please use this interface very carefully.
    </p>
 */
interface XModifiable2: com::sun::star::util::XModifiable
{
    /** disable possibility to change modified state of the document

        @returns the value that says whether the modified state change was
                enabled before the call
            `TRUE` the changing of the modified state was already disabled
            `FALSE` the changing of the modified state was enabled

     */
    boolean disableSetModified();

    /** enable possibility to change modified state of the document

        @returns the value that says whether the modified state change was
                enabled before the call
            `TRUE` the changing of the modified state was disabled
            `FALSE` the changing of the modified state was already enabled
     */
    boolean enableSetModified();

    /** allows to detect whether the modified state change is enabled
     */
    boolean isSetModifiedEnabled();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
