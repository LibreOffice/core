/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_util_XChangesBatch_idl__
#define __com_sun_star_util_XChangesBatch_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>

#include <com/sun/star/util/ChangesSet.idl>



module com {  module sun {  module star {  module util {

/** this interface enables applying a set of changes in one batch transaction.

    <p>An object implementing this interface allows other interfaces to change
    its state locally. It will keep a list of pending changes until such changes
    are committed or canceled.  </p>

    <p>Only when they are explicitly committed will these changes take effect
    persistently or globally.  </p>

    @see XChangesNotifier
    @see XChangesSet
    @see XCancellable
 */
published interface XChangesBatch: com::sun::star::uno::XInterface
{
    /** commits any pending changes.

        <p>The exact action depends on the concrete service.  </p>
     */
    void commitChanges()
            raises( com::sun::star::lang::WrappedTargetException );

    /** checks whether this object has any pending changes that can be committed.
     */
    boolean hasPendingChanges();

    /** queries for any pending changes that can be committed.
     */
    ChangesSet getPendingChanges();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
