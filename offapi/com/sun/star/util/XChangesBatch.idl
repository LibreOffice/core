/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_util_XChangesBatch_idl__
#define __com_sun_star_util_XChangesBatch_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>

#include <com/sun/star/util/ChangesSet.idl>



module com {  module sun {  module star {  module util {

/** this interface enables applying a set of changes in one batch transaction.

    <p>An object implementing this interface allows other interfaces to change
    its state locally. It will keep a list of pending changes until such changes
    are committed or canceled.  </p>

    <p>Only when they are explicitly committed will these changes take effect
    persistently or globally.  </p>

    @see XChangesNotifier
    @see XChangesSet
    @see XCancellable
 */
published interface XChangesBatch: com::sun::star::uno::XInterface
{
    /** commits any pending changes.

        <p>The exact action depends on the concrete service.  </p>
     */
    void commitChanges()
            raises( com::sun::star::lang::WrappedTargetException );

    /** checks whether this object has any pending changes that can be committed.
     */
    boolean hasPendingChanges();

    /** queries for any pending changes that can be committed.
     */
    ChangesSet getPendingChanges();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
