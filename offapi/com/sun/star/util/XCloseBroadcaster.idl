/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_util_XCloseBroadcaster_idl__
#define __com_sun_star_util_XCloseBroadcaster_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/XCloseListener.idl>


 module com {  module sun {  module star {  module util {

/** broadcasts each tried closing of an object to all interest listener

    <p>
    The called object for closing must post the closing events immediately
    and before any internal cancel operations will be started.
    If a listener disagree with that it should throw a CloseVetoException
    and called function XCloseable::close() must be broken immediately.
    It's not allowed to catch it inside the close() request.
    If no listener nor internal processes hinder the object on closing
    all listeners get a notification about real closing.
    </p>

    @see
 */
published interface XCloseBroadcaster: com::sun::star::uno::XInterface
{
    /** adds the specified listener to receive or have a veto for "close" events

        @param Listener
            the listener which is interest on closing events
     */
    void addCloseListener( [in] XCloseListener Listener );

    /** removes the specified listener

        @param Listener
            the listener which isn't interest on closing events any longer
     */
    void removeCloseListener( [in] XCloseListener Listener );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
