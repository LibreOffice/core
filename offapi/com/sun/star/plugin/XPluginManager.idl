/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/**
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_plugin_XPluginManager_idl__
#define __com_sun_star_plugin_XPluginManager_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/plugin/XPluginContext.idl>

#include <com/sun/star/plugin/PluginDescription.idl>

#include <com/sun/star/plugin/XPlugin.idl>

#include <com/sun/star/plugin/PluginException.idl>

#include <com/sun/star/awt/XToolkit.idl>

#include <com/sun/star/awt/XWindowPeer.idl>



 module com {  module sun {  module star {  module plugin {


/** Interface accessing all recognized Netscape plugins.
*/
published interface XPluginManager: com::sun::star::uno::XInterface
{
    /** Creates a default context.  This context depends on the service
        <type scope="com::sun::star::frame">Desktop</type>.</p>

        @return plugin context
    */
    com::sun::star::plugin::XPluginContext createPluginContext();

    /** Returns the descriptions for all recognized plugins.

        @return plugin descriptions
    */
    sequence<com::sun::star::plugin::PluginDescription> getPluginDescriptions();

    /** Creates a new plugin instance.

        @param acontext
               plugin context
        @param mode
               plugin mode
        @param argn
               argument name list provided to plugin
        @param argv
               argument value list provided to plugin
        @param plugintype
               plugin description
        @return plugin instance
    */
    com::sun::star::plugin::XPlugin createPlugin(
        [in] com::sun::star::plugin::XPluginContext acontext,
        [in] short mode,
        [in] sequence<string> argn,
        [in] sequence<string> argv,
        [in] com::sun::star::plugin::PluginDescription plugintype )
        raises( com::sun::star::plugin::PluginException );

    /** Creates a new plugin instance.

        @param acontext
               plugin context
        @param mode
               plugin mode
        @param argn
               argument name list provided to plugin
        @param argv
               argument value list provided to plugin
        @param toolkit
               toolkit to be used to get system window handle for plugin
        @param parent
               parent window
        @param url
               url
        @return plugin instance
    */
    com::sun::star::plugin::XPlugin createPluginFromURL(
        [in] com::sun::star::plugin::XPluginContext acontext,
        [in] short mode,
        [in] sequence<string> argn,
        [in] sequence<string> argv,
        [in] com::sun::star::awt::XToolkit toolkit,
        [in] com::sun::star::awt::XWindowPeer parent,
        [in] string url );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
