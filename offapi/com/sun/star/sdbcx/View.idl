/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_sdbcx_View_idl__
#define __com_sun_star_sdbcx_View_idl__

#include <com/sun/star/beans/XPropertySet.idl>

 module com {  module sun {  module star {  module sdbcx {

published interface XRename;
published interface XAlterView;


/** is used to specify views on data. A view object is only used for creation and
    deletion. Inspecting the command of a view is normally not supported.

    <p>
    If a view is going to be added to a database, the view must have a unique
    name within the view and the table container, as it can be used like a table.
    <b>
    Note:
    </b>
    After addition, both the containers for views and the container for tables must
    contain an element for the view.
    </p>
 */
published service View
{

    /** is optional for implementation.
     */
    [optional] interface XRename;

    // gives access to the properties.
    interface com::sun::star::beans::XPropertySet;

    /** allows changing the view's #Command.
    */
    [optional] interface XAlterView;


    /** is the name of the view.
     */
    [readonly, property] string Name;


    /** is the name of the views catalog, may be empty.
     */
    [readonly, property] string CatalogName;


    /** is the name of the view's schema, may be empty.
     */
    [readonly, property] string SchemaName;


    /** is the command for creating the view.

        <p>This is typically a SQL Select-Statement.</p>

        <p>This property might be empty when a backend does not support retrieving the current
        SQL command of a view. However, if the <code>View</code> supports altering its command
        via the #XAlterView interface, then it's required to also provide the
        current SQL command in the <code>Command</code> property.</p>
     */
    [readonly, property] string Command;


    /** indicates if a check option should be used for the view.

        @see com::sun::star::sdbcx::CheckOption
     */
    [readonly, property] long CheckOption;
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
