/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_ResultSet_idl__
#define __com_sun_star_sdbcx_ResultSet_idl__

#include <com/sun/star/sdbc/ResultSet.idl>

 module com {  module sun {  module star {  module sdbcx {

 published interface XRowLocate;
 published interface XDeleteRows;


/** extends the SDBC ResultSet by the possibility of bookmark positioning, canceling
    the positioning, and updating of rows.
 */
published service ResultSet
{
    service com::sun::star::sdbc::ResultSet;


    /** could be used for canceling the execution of SQL statements if both
 the DBMS and the driver support aborting of navigation commands.
 The implementation is optional.
     */
    [optional] interface com::sun::star::util::XCancellable;


    /** is the interface for navigating on the result set by unique bookmarks.
     */
    interface XRowLocate;


    /** is the interface for deleting more than one row, identified by it's bookmark.
              The implementation is optional.
     */
    [optional] interface XDeleteRows;


    /** returns if the result set supports bookmark navigation.
     */
    [readonly, property] boolean IsBookmarkable;


    /** returns whether the result set supports updating of newly inserted rows.
        This may not work, as the result set may contain automatic generated data
        which is used as key information.
     */
    [optional, readonly, property] boolean CanUpdateInsertedRows;
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
