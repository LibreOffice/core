/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_sdbcx_ResultSet_idl__
#define __com_sun_star_sdbcx_ResultSet_idl__

#include <com/sun/star/sdbc/ResultSet.idl>

 module com {  module sun {  module star {  module sdbcx {

 published interface XRowLocate;
 published interface XDeleteRows;


/** extends the SDBC ResultSet by the possibility of bookmark positioning, canceling
    the positioning, and updating of rows.
 */
published service ResultSet
{
    service com::sun::star::sdbc::ResultSet;


    /** could be used for canceling the execution of SQL statements if both
 the DBMS and the driver support aborting of navigation commands.
 The implementation is optional.
     */
    [optional] interface com::sun::star::util::XCancellable;


    /** is the interface for navigating on the result set by unique bookmarks.
     */
    interface XRowLocate;


    /** is the interface for deleting more than one row, identified by its bookmark.
              The implementation is optional.
     */
    [optional] interface XDeleteRows;


    /** returns if the result set supports bookmark navigation.
     */
    [readonly, property] boolean IsBookmarkable;


    /** returns whether the result set supports updating of newly inserted rows.
        This may not work, as the result set may contain automatic generated data
        which is used as key information.
     */
    [optional, readonly, property] boolean CanUpdateInsertedRows;
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
