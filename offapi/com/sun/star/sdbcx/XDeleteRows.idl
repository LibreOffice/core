/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_XDeleteRows_idl__
#define __com_sun_star_sdbcx_XDeleteRows_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/sdbc/SQLException.idl>

 module com {  module sun {  module star {  module sdbcx {


/** provides for the deletion of more than one row at a time.
 */
published interface XDeleteRows: com::sun::star::uno::XInterface
{

    /** deletes one or more rows identified by their bookmarks.
             @param rows
                list of bookmarks identifying the rows.
             @returns
                an array of update counts containing one element for each
                 row. The array is ordered according to the order in
                which bookmarks were given.
             @throws com::sun::star::sdbc::SQLException
                if a fatal error occurs, for instance, the connection gets lost if bookmarks
                are used which do not belong to the according result set.
     */
    sequence<long> deleteRows([in]sequence<any> rows)
        raises (com::sun::star::sdbc::SQLException);
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
