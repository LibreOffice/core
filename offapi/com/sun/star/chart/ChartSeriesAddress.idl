/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_chart_ChartSeriesAddress_idl__
#define __com_sun_star_chart_ChartSeriesAddress_idl__


 module com {  module sun {  module star {  module chart {


/** This structure describes a single data row, specified by its name
    and a sequence of data points.

    <p>The cell addresses are in the format of the application that
    contains this chart.</p>
 */
published struct ChartSeriesAddress
{
    /** contains the cell range address of the data for this series.
     */
    string DataRangeAddress;


    /** contains the cell address of label (i.e. name) of this series.
     */
    string LabelAddress;


    /** contains cell addresses for each domain of this series.

        <p>For XY (scatter) diagrams at least one series has a
        domain. Most of the other chart types use an empty sequence
        here.</p>
     */
    sequence< string > DomainRangeAddresses;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
