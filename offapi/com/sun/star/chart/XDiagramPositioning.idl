/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_chart_XDiagramPositioning_idl__
#define __com_sun_star_chart_XDiagramPositioning_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/awt/Rectangle.idl>


 module com {  module sun {  module star {  module chart {


/** allow for different positioning options for a diagram

    @see Diagram
 */
interface XDiagramPositioning : com::sun::star::uno::XInterface
{
    /** the diagram will be placed automatically
    */
    void setAutomaticDiagramPositioning();

    /** @returns whether the diagram is placed automatically
    */
    boolean isAutomaticDiagramPositioning();

    /** place the inner diagram part excluding any axes, labels and titles
        @param PositionRect
            specifies the position and size in 100/th mm
    */
    void setDiagramPositionExcludingAxes( [in] com::sun::star::awt::Rectangle PositionRect );

    /** @returns true in case the diagram position was set with method setDiagramPositionExcludingAxes
    */
    boolean isExcludingDiagramPositioning();

    /** @returns the position rectangle of the inner diagram part excluding any axes, labels and titles.
        Position and size are given in 100/th mm.
        It might be necessary to calculate the positioning so this method can be expensive and the result may depend on different other settings.
    */
    com::sun::star::awt::Rectangle calculateDiagramPositionExcludingAxes();


    /** place the outer diagram part including the axes and axes labels, but excluding the axes titles.
        @param PositionRect
            specifies the position and size in 100/th mm
    */
    void setDiagramPositionIncludingAxes( [in] com::sun::star::awt::Rectangle PositionRect );

    /** @returns the position rectangle of the diagram including the axes and axes labels, but excluding the axes titles.
        Position and size are given in 100/th mm.
        It might be necessary to calculate the positioning so this method can be expensive and the result may depend on different other settings.
    */
    com::sun::star::awt::Rectangle calculateDiagramPositionIncludingAxes();

    /** place the diagram including the axes, axes labels and axes titles.
        For the placement the current axis titles are taken into account, so the titles must be initialized properly before this method is called.
        @param PositionRect
            specifies the position and size in 100/th mm
    */
    void setDiagramPositionIncludingAxesAndAxisTitles( [in] com::sun::star::awt::Rectangle PositionRect );

    /** @returns the position rectangle of the diagram including the axes, axes labels and axes titles.
        Position and size are given in 100/th mm.
        It might be necessary to calculate the positioning so this method can be expensive and the result may depend on different other settings.
    */
    com::sun::star::awt::Rectangle calculateDiagramPositionIncludingAxesAndAxisTitles();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
