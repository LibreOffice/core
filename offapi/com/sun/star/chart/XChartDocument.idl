/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_chart_XChartDocument_idl__
#define __com_sun_star_chart_XChartDocument_idl__

#include <com/sun/star/frame/XModel.idl>

#include <com/sun/star/drawing/XShape.idl>

#include <com/sun/star/beans/XPropertySet.idl>

#include <com/sun/star/chart/XDiagram.idl>

#include <com/sun/star/chart/XChartData.idl>



 module com {  module sun {  module star {  module chart {


/** manages the chart document.

    @see XDiagram
    @see XChartData
 */
published interface XChartDocument: com::sun::star::frame::XModel
{

    /** @returns
            the shape of the main title of the chart document.

        @see ChartTitle
     */
    com::sun::star::drawing::XShape getTitle();


    /** @returns
            the shape of the subtitle of the chart document.

       <p>Usually the subtitle is smaller than the main title by
       default.  And it is most commonly placed below the main title
       by default.</p>

        @see ChartTitle
     */
    com::sun::star::drawing::XShape getSubTitle();


    /** @returns
            the shape of the legend of the chart document.

        @see ChartLegend
     */
    com::sun::star::drawing::XShape getLegend();


    /** @returns
            the properties of the background area of the chart document.

        <p>The area's extent is equal to the document size.  If you
        want to access properties of the background area of the
        diagram, in which the actual data is represented, you have to
        change the chart wall which you get from the
        X3DDisplay.</p>

        @see ChartArea
        @see X3DDisplay
     */
    com::sun::star::beans::XPropertySet getArea();


    /** @returns
            the diagram of the chart document.

        @see Diagram
     */
    com::sun::star::chart::XDiagram getDiagram();


    /** sets the diagram for the chart document.

        <p>Setting a new diagram implicitly disposes the previous
        diagram.</p>

        @param xDiagram
            the new diagram that should be set for the chart.  To
            create such a diagram component, you can use the
            com::sun::star::lang::XMultiServiceFactory,
            which should be implemented by an
            XChartDocument.
     */
    void setDiagram( [in] com::sun::star::chart::XDiagram xDiagram );


    /** @returns
            the data of the chart.

        <p>The returned object supports interface XChartDataArray
        which can be used to access the concrete data.</p>

        <p>Since OOo 3.3 the returned object also supports interface XComplexDescriptionAccess
        which can be used to access complex hierarchical axis descriptions.</p>

        <p>Since OOo 3.4 the returned object also supports interface XDateCategories.</p>

        @see XChartData
        @see XChartDataArray
        @see XComplexDescriptionAccess
        @see XDateCategories
     */
    com::sun::star::chart::XChartData getData();


    /** attaches data to the chart.

        <p>The given object needs to support interface XChartDataArray.</p>

        <p>Since OOo 3.3 if the given object might support interface XComplexDescriptionAccess
        which allows to set complex hierarchical axis descriptions.</p>

        <p>Since OOo 3.4 if the given object might support interface XDateCategories
        which allows to set date values as x values for category charts.</p>

        <p>The given data is copied before it is applied to the chart.
        So changing xData after this call will have no effect on the chart.</p>

        @see XChartData
        @see XChartDataArray
        @see XComplexDescriptionAccess
        @see XDateCategories

        @param xData
            the object that provides the new data.
     */
    void attachData( [in] com::sun::star::chart::XChartData xData );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
