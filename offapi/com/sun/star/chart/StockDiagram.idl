/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_chart_StockDiagram_idl__
#define __com_sun_star_chart_StockDiagram_idl__

#include <com/sun/star/chart/XStatisticDisplay.idl>

#include <com/sun/star/chart/ChartStatistics.idl>

#include <com/sun/star/chart/Diagram.idl>

#include <com/sun/star/chart/ChartAxisXSupplier.idl>

#include <com/sun/star/chart/ChartTwoAxisYSupplier.idl>



 module com {  module sun {  module star {  module chart {


/** specifies a diagram which can be used for presenting stock quotes.

    <p>Note that the data must have a specific structure for stock
    diagrams.  Let us assume that data is interpreted, such that
    series are taken from columns (see property
    Diagram::DataRowSource).  Then you need tables of
    the following structures for different types:</p>

    <p><strong>
     StockDiagram::Volume is `FALSE`<br>
     StockDiagram::UpDown is `FALSE`
    </strong>
    <table border>
     <tr><td>Low</td><td>High</td><td>Close</td></tr>
     <tr><td>...</td><td>...</td><td>...</td></tr>
    </table></p>

    <p><strong>
     StockDiagram::Volume is `TRUE`<br>
     StockDiagram::UpDown is `FALSE`
    </strong>
    <table border>
     <tr><td><strong>Volume</strong></td><td>Low</td><td>High</td><td>Close</td></tr>
     <tr><td>...</td><td>...</td><td>...</td><td>...</td></tr>
    </table></p>

    <p><strong>
     StockDiagram::Volume is `FALSE`<br>
     StockDiagram::UpDown is `TRUE`
    </strong>
    <table border>
     <tr><td><strong>Open</strong></td><td>Low</td><td>High</td><td>Close</td></tr>
     <tr><td>...</td><td>...</td><td>...</td><td>...</td></tr>
    </table></p>

    <p><strong>
     StockDiagram::Volume is `TRUE`<br>
     StockDiagram::UpDown is `TRUE`
    </strong>
    <table border>
     <tr><td><strong>Volume</strong></td><td><strong>Open</strong></td><td>Low</td><td>High</td><td>Close</td></tr>
     <tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr>
    </table></p>
*/
published service StockDiagram
{
    interface com::sun::star::chart::XStatisticDisplay;
    service com::sun::star::chart::ChartStatistics;
    service com::sun::star::chart::Diagram;
    service com::sun::star::chart::ChartAxisXSupplier;
    service com::sun::star::chart::ChartTwoAxisYSupplier;


    /** indicates if a stock chart contains data representing the
        volume of stocks.

        <p>The values of the volume are represented as columns like
        those of a BarDiagram.</p>

        <p>If this property is set to `TRUE`, the values of the first
        series of the chart data are interpreted as volume.</p>
     */
    [property] boolean Volume;


    /** indicates if a stock chart contains data representing the
        value of stocks on the opening and closing date.

        <p>The difference will be indicated by bars.  The color
        of the bar will be significant for positive or negative
        differences between open and closed data.</p>

        <p>If this property is `FALSE`, the values of the first
        series (or second if StockDiagram::Volume is
        `TRUE`) of the chart data are interpreted as the day's lowest
        value.  The next series is interpreted as the day's highest
        value, and the last series is interpreted as the closing
        value.</p>

        <p>If this property is set to `TRUE`, one additional series
        is needed with the opening value of the stocks.  It is assumed
        as the series before the series with the day's lowest
        value.</p>
     */
    [property] boolean UpDown;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
