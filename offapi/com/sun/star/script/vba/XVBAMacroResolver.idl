/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_script_vba_XVBAMacroResolver_idl__
#define __com_sun_star_script_vba_XVBAMacroResolver_idl__

#include <com/sun/star/lang/IllegalArgumentException.idl>


module com {  module sun {  module star {  module script { module vba {


/** Converts VBA macro names to script URLs and vice versa.
 */
interface XVBAMacroResolver
{

    /** Returns the script URL representing the passed VBA macro name.

        @param aVBAMacroName
            The VBA macro name to be resolved to a script URL. The macro name
            may consist of up to three parts, divided by periods. The first two
            parts are optional. The first part represents the VBA project name.
            The second part represents the module name. The third part
            represents the procedure name. Example: All the VBA macro names
            "VBAProject.Module1.TestMacro", "Module1.TestMacro",
            "VBAProject.TestMacro", and "TestMacro" may refer to the same VBA
            procedure located in "Module" of the project "VBAProject". If the
            module name is missing, then all modules are searched for a macro
            with the specified name.

        @return
            The script URL referring to the passed VBA macro.

        @throws ::com::sun::star::lang::IllegalArgumentException
            if a macro with the passed name does not exist.
    **/
    string resolveVBAMacroToScriptURL( [in] string aVBAMacroName )
        raises (::com::sun::star::lang::IllegalArgumentException);


    /** Returns the VBA macro name for a macro with the passed script URL.

        @param aScriptURL
            The script URL to be resolved to a VBA macro name. Must be a
            document-local script.

        @return
            The VBA macro name referring to a macro with the passed script URL.

        @throws ::com::sun::star::lang::IllegalArgumentException
            if a macro with the passed name does not exist.
    **/
    string resolveScriptURLtoVBAMacro( [in] string aScriptURL )
        raises (::com::sun::star::lang::IllegalArgumentException);

};


}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
