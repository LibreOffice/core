/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_xforms_Binding_idl__
#define __com_sun_star_xforms_Binding_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/form/binding/ValueBinding.idl>
#include <com/sun/star/form/binding/ListEntrySource.idl>
#include <com/sun/star/form/validation/XValidator.idl>


module com {  module sun {  module star {  module xforms {

interface XSubmission;


/** represent a binding to one or more nodes in the DOM tree of an <type>XModel</type>.
 */
service Binding
{
    /** allows the binding to act as value supplier for a form component

    @see com::sun::star::form::binding::BindableControlModel
    */
    service com::sun::star::form::binding::ValueBinding;

    /** allows external instances to observe the value represented by the binding

        <p>This interface is an optional part of the
        <type scope="com::sun::star::form::binding">ValueBinding</type> service, but loses
        its optionality here.</p>
    */
    interface com::sun::star::util::XModifyBroadcaster;

    /** allows the binding to act as source for list entries of form controls

        <p>If a binding is associated with more than one node in a DOM tree, it
        does not represent a single value, but a list of values. Using this interface,
        this list can be displayed in form control list and combo boxes.</p>
    */
    service com::sun::star::form::binding::ListEntrySource;

    /** allows the binding to act as validator for a form component

    @see com::sun::star::form::binding::ValidatableControlModel
    */
    interface com::sun::star::form::validation::XValidator;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
