/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_xforms_XDataTypeRepository_idl__
#define __com_sun_star_xforms_XDataTypeRepository_idl__

#include <com/sun/star/container/XEnumerationAccess.idl>
#include <com/sun/star/container/XNameAccess.idl>
#include <com/sun/star/xsd/XDataType.idl>
#include <com/sun/star/container/NoSuchElementException.idl>
#include <com/sun/star/container/ElementExistException.idl>
#include <com/sun/star/util/VetoException.idl>


module com {  module sun {  module star {  module xforms {

/** specifies a repository of XSD data types

    <p>The elements of the repository are instances supporting the com::sun::star::xsd::XDataType
    interface.</p>
*/
interface XDataTypeRepository
{
    /** provides access to an enumeration of the contained data types
    */
    interface com::sun::star::container::XEnumerationAccess;

    /** provides untyped access to the elements of the repository, as well as meta information
        such as the names of all contained types, and the existence of a named type
    */
    interface com::sun::star::container::XNameAccess;

    /** retrieves the basic type for the given type class

        @see com::sun::star::xsd::DataTypeClass

        @throws com::sun::star::container::NoSuchElementException
            if in the repository, there is no data type with the given class
    */
    com::sun::star::xsd::XDataType
        getBasicDataType( [in] short dataTypeClass )
            raises ( com::sun::star::container::NoSuchElementException );

    /** creates a clone of the given data type, and inserts it into the repository

        @throws com::sun::star::container::NoSuchElementException
            if the given name does not refer to a type in the repository

        @throws com::sun::star::container::ElementExistException
            if the new name is already used in the repository
    */
    com::sun::star::xsd::XDataType
        cloneDataType( [in] string sourceName, [in] string newName )
            raises( com::sun::star::container::NoSuchElementException, com::sun::star::container::ElementExistException );

    /** removes a data type given by name from the repository

        @throws com::sun::star::container::NoSuchElementException
            if the given name does not refer to a type in the repository

        @throws com::sun::star::util::VetoException
            if the specified data type is a built-in (basic) data type, and cannot
            be removed

        @see com::sun::star::xsd::XDataType
    */
    void
        revokeDataType( [in] string typeName )
            raises( com::sun::star::container::NoSuchElementException, com::sun::star::util::VetoException );

    /**
    */
    com::sun::star::xsd::XDataType
        getDataType( [in] string typeName )
            raises( com::sun::star::container::NoSuchElementException );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
