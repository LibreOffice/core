/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_form_control_CommandButton_idl__
#define __com_sun_star_form_control_CommandButton_idl__

#include <com/sun/star/awt/UnoControlButton.idl>
#include <com/sun/star/form/XApproveActionBroadcaster.idl>


 module com {  module sun {  module star {  module form {  module control {


/** describes a button control.

    <p>The model of the control has to support the com::sun::star::form::component::CommandButton
    service.</p>

    <p>The control is clickable, the action taken upon clicking depends on the settings
    of the model the control belongs to.</p>

    @see com::sun::star::awt::UnoControl
    @see com::sun::star::awt::UnoControlModel
    @see com::sun::star::form::component::CommandButton::ButtonType
*/
published service CommandButton
{
    service com::sun::star::awt::UnoControlButton;

    /** allows external instances to register as veto listener for the button's actions.

        <p>An com::sun::star::form::XApproveActionListener returning false on
        it's approve-method will prevent any action which would usually be triggered - this includes
        not only submitting or resetting forms, but also calling the
        com::sun::star::awt::XActionListeners of the super service<br/>
        This may be interesting for e.g. forms which want to provide input validation before submitting
        data.<br/>

        @see com::sun::star::form::component::HTMLForm
        @see com::sun::star::form::XSubmit
        @see com::sun::star::form::XReset
        @see com::sun::star::awt::XButton
    */
    interface com::sun::star::form::XApproveActionBroadcaster;
};


}; }; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
