/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_form_XSubmit_idl__
#define __com_sun_star_form_XSubmit_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/awt/XControl.idl>

#include <com/sun/star/awt/MouseEvent.idl>

#include <com/sun/star/form/XSubmitListener.idl>



 module com {  module sun {  module star {  module form {


/** provides functionality to submit data from a component.

    <p>Usually, this is used by <type scope="com::sun::star::form::component">HTMLForm</type>s.

    <p>See the <A href="http://www.w3.org/TR/1999/REC-html401-19991224/interact/forms.html#h-17.13">HTML specification</A>
    to learn about submitting forms.</p>
 */
published interface XSubmit: com::sun::star::uno::XInterface
{

    /** submits the component's data to a specified target.

        @param aControl
            the control whose data is to be be submitted

        @param aMouseEvt
            the event which triggered the submit, if it was a mouse event

        @see com::sun::star::awt::MouseEvent
     */
    [oneway] void submit( [in] com::sun::star::awt::XControl aControl,
             [in] com::sun::star::awt::MouseEvent aMouseEvt );


    /** adds the specified listener to receive the "approveSubmit" event.

        @param aListener
            the listener to add.

        @see com::sun::star::form::XSubmitListener
     */
    [oneway] void addSubmitListener( [in] com::sun::star::form::XSubmitListener aListener );


    /** removes the specified listener.
        @param aListener
            the listener to remove.
        @see com::sun::star::form::XSubmitListener
     */
    [oneway] void removeSubmitListener( [in] com::sun::star::form::XSubmitListener aListener );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
