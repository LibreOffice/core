/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_form_XUpdateListener_idl__
#define __com_sun_star_form_XUpdateListener_idl__

#include <com/sun/star/lang/XEventListener.idl>

#include <com/sun/star/lang/EventObject.idl>



 module com {  module sun {  module star {  module form {


/** used to listen on objects which allow updating their data.
    <p>In addition to just get notified when an data update happened, the listener
    has a chance to veto updates <em>before</em> they happen.</p>

    @see XUpdateBroadcaster
 */
published interface XUpdateListener: com::sun::star::lang::XEventListener
{

    /** is invoked to check the current data.

        <p>For a given update process, if one of the <type>XUpdateListener</type>s
        vetoes the change, the update is canceled, and no further notification happens.</p>

        @param aEvent
            An event descriptor specifying the broadcaster of the change.

        @returns
            <TRUE/> when the update was approved, otherwise <FALSE/>.
     */
    boolean approveUpdate( [in] com::sun::star::lang::EventObject aEvent );


    /** is invoked when an object has finished processing the updates and
        the data has been successfully written.

        @param aEvent
            A event descriptor specifying the broadcaster of the change.
     */
    void updated( [in] com::sun::star::lang::EventObject aEvent );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
