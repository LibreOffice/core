/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_form_FormControlModel_idl__
#define __com_sun_star_form_FormControlModel_idl__

#include <com/sun/star/awt/UnoControlModel.idl>

#include <com/sun/star/form/FormComponent.idl>

#include <com/sun/star/beans/XFastPropertySet.idl>

#include <com/sun/star/beans/XPropertyState.idl>



 module com {  module sun {  module star {  module form {


/** specifies a control model within a form.

    <p>Note that the model-view-paradigm is used for form controls, too.</p>
 */
published service FormControlModel
{
    service com::sun::star::awt::UnoControlModel;

    service com::sun::star::form::FormComponent;

    /** This optional interface gives an efficient access to all
                properties at once or an ability to set more than one property at once.
     */
    [optional] interface com::sun::star::beans::XFastPropertySet;


    /** This optional interface gives access to the state of the
                properties, e.g. whether a default value
                is to be used or not for a certain property.
     */
    [optional] interface com::sun::star::beans::XPropertyState;


    /** specifies the ID for classification of the component.
        @see FormComponentType
     */
    [readonly, property] short ClassId;


    /** determines the relative taborder of the control associated with the model.

        <p>The default -1 is used to indicate that the tab-order of this control should be
        determined automatically.</p>

        <p>Each component which supports a tabstop must provide a
        FormControlModel::TabIndex property.</p>

        <p>Normally, a FormController instance is evaluating this property.</p>
     */
    [optional, property] short TabIndex;


    /** used for additional information.
        <p>No semantics is given for this property, it will usually be used by the creator of a document
        containing form controls.</p>
     */
    [property] string Tag;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
