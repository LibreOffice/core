/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_form_component_DatabaseComboBox_idl__
#define __com_sun_star_form_component_DatabaseComboBox_idl__

#include <com/sun/star/form/component/ComboBox.idl>

#include <com/sun/star/form/DataAwareControlModel.idl>

#include <com/sun/star/form/ListSourceType.idl>



 module com {  module sun {  module star {  module form {  module component {


/** This service specifies a combo box which is data-aware, and can be bound to a database field.

    <p>Like most other data aware controls, such a combo box will display the actual content
    of the field it is bound to. In addition, as a combo box contains a list where the user
    can choose items to fill into the control, this list can be filled with different data from
    a database, too.</p>
 */
published service DatabaseComboBox
{
    service com::sun::star::form::component::ComboBox;

    service com::sun::star::form::DataAwareControlModel;


    /** determines if an empty text should be treated as a `NULL` value.

        <p>When the user enters text into a combo box, and after this, the control
        content is to be committed into the database field the control is bound to,
        a decision must be made how to deal with empty strings.<br/>
        This is controlled by #ConvertEmptyToNull.</p>

        <p>If the property is set to `TRUE`, and an empty text is to be committed, this is
        converted into `NULL`, else it is written as empty string.</p>
     */
    [property] boolean ConvertEmptyToNull;

    /** describes the source of items in the combo box's list.

        <p>The concrete meaning of this property depends on the value of #ListSourceType</p>
     */
    [property] string ListSource;

    /** specifies the kind of list source.

        <p>Note: A value of com::sun::star::form::ListSourceType::VALUELIST
        is not valid for a combo box. It won't be rejected when setting it, but controls will usually ignore it
        and leave the list empty.</p>
     */
    [property] com::sun::star::form::ListSourceType ListSourceType;
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
