/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_form_component_NavigationToolBar_idl__
#define __com_sun_star_form_component_NavigationToolBar_idl__

#include <com/sun/star/form/FormControlModel.idl>
#include <com/sun/star/awt/FontDescriptor.idl>


 module com {  module sun {  module star {  module form {  module component {


/** This service specifies the model for control which provides controller
    functionality for a <type>DataForm</type>, such as navigating or filtering
    the form.
 */
service NavigationToolBar
{
    service com::sun::star::form::FormControlModel;

    /** denotes the border style of the control.

        Allowed values are
        <ul><li><b>0</b>: no border at all</li>
            <li><b>1</b>: 3D border</li>
            <li><b>2</b>: simple flat</li>
        </ul>
     */
    [property] short Border;

    /** determines whether the control is enabled or disabled.
     */
    [property] boolean Enabled;

    /** contains the font attributes for the text in the control
     */
    [property] com::sun::star::awt::FontDescriptor FontDescriptor;

    /** specifies the text color (as RGB value) of the control.
     */
    [property] long TextColor;

    /** specifies the text line color (as RGB value) of the control.

        <p>This color is used if the <member>FontDescriptor</member> defines
        that the text in the control should be underlined or stroke out.</p>
     */
    [property] long TextLineColor;

    /** specifies the relief for the font described in <member>FontDescriptor</member>

        <p>The value must be one of the <type scope="com::sun::star::text">FontRelief</type>
        constants.</p>
     */
    [property] long FontRelief;

    /** specifies the emphasis mark for the font described in <member>FontDescriptor</member>

        <p>The value must be one of the <type scope="com::sun::star::text">FontEmphasis</type>
        constants.</p>
     */
    [property] long FontEmphasisMark;

    /** specifies the size of the icons in the control

        <p>At least the following values are to be supported:
        <ul><li>0: small icons (16x16)</li>
            <li>1: medium size icons (26x26)</li>
        </ul>
    */
    [property] short IconSize;

    /** determines whether the control should provide functionality for positioning the
        parent form
    */
    [property] boolean ShowPosition;

    /** determines whether the control should provide functionality for navigating the
        parent form
    */
    [property] boolean ShowNavigation;

    /** determines whether the control should provide functionality for acting on the current record
        of the parent form
    */
    [property] boolean ShowRecordActions;

    /** determines whether the control should provide functionality for filtering and sorting the
        parent form
    */
    [property] boolean ShowFilterSort;

    /** specifies a repeat delay for the control

        <p>Some buttons of a NavigationToolBar may show repeating behavior, e.g. may be
        repeatedly triggered when the user keeps the mouse pressed over such a button.<br/>
        The delay between two such triggers (in milliseconds) is specified with this property.
        </p>
    */
    [property] long RepeatDelay;
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
