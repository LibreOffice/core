/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_form_component_ImageButton_idl__
#define __com_sun_star_form_component_ImageButton_idl__

#include <com/sun/star/awt/UnoControlImageControlModel.idl>

#include <com/sun/star/form/FormControlModel.idl>

#include <com/sun/star/form/XApproveActionBroadcaster.idl>

#include <com/sun/star/form/XImageProducerSupplier.idl>

#include <com/sun/star/form/FormButtonType.idl>



 module com {  module sun {  module star {  module form {  module component {


/** This service specifies the control model for a clickable button which
    is represented by an image.

     <p>The image to be displayed is determined by com::sun::star::awt::UnoControlImageControlModel::ImageURL
    property specifies the URL of an image to be displayed.</p>

    @see CommandButton
*/
published service ImageButton
{
    service com::sun::star::awt::UnoControlImageControlModel;

    service com::sun::star::form::FormControlModel;


    /** supplies the caller with an com::sun::star::awt::XImageProducer.

        <p>Other components can register as com::sun::star::awt::XImageConsumer
        at this producer. Then they will be notified of any change in the image to be displayed.</p>

        <p>Whenever the com::sun::star::awt::UnoControlImageControlModel::ImageURL
        property is changed, the model loads the specified image, and sets it as image source
        at its com::sun::star::awt::XImageProducer. Then, all
        com::sun::star::awt::XImageConsumers are notified and supplied with
        the binary data of the image.<br/>
        Usually, controls acting for an ImageButton model are consumers, and use the
        data stream to display the image</p>
     */
    interface com::sun::star::form::XImageProducerSupplier;

    /** describes the action to be executed by the button when pressed.
     */
    [property] com::sun::star::form::FormButtonType ButtonType;

    /** describes the frame, where to open the document specified by the TargetURL.

        <p>This property is evaluated if the button is of type URL.</p>

        <p>As always, there is a number of target names which have a special meaning, and force
        a special com::sun::star::frame::Frame to be used.</p>
     */
    [property] string TargetFrame;

    /** specifies the URL, which should be opened if the button was clicked.

        <p>This property is evaluated if the button is of type URL.</p>

        @see com::sun::star::form::FormButtonType
     */
    [property] string TargetURL;
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
