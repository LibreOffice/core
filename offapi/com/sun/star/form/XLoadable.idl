/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_form_XLoadable_idl__
#define __com_sun_star_form_XLoadable_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/form/XLoadListener.idl>


 module com {  module sun {  module star {  module form {


/** provides functionality to implement objects which may be loaded.

    <p>The object is typically implemented by high-level objects which can connect to a data source.</p>

    @see XLoadListener
 */
published interface XLoadable: com::sun::star::uno::XInterface
{

    /** loads the data.

        <p>If the data is already loaded (->isLoaded), then the method returns silently.
        In this case, you should use ->reload.</p>
     */
    void load();


    /** unloads the data.
     */
    void unload();


    /** does a smart refresh of the object.

        <p>The final state will be the same as if unload and load were called, but reload
        is the more efficient way to do the same. If the object isn't loaded, nothing happens.</p>
     */
    void reload();


    /** returns if the object is in loaded state.
     */
    boolean isLoaded();


    /** adds the specified listener to receive load-related events

        @param aListener
            the listener to add.
     */
    void addLoadListener( [in] com::sun::star::form::XLoadListener aListener );


    /** removes the specified listener.

        @param aListener
            the listener to remove.
     */
    void removeLoadListener( [in] com::sun::star::form::XLoadListener aListener );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
