/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_form_XGridColumnFactory_idl__
#define __com_sun_star_form_XGridColumnFactory_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/XPropertySet.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>



 module com {  module sun {  module star {  module form {


/** allows to create columns to be added into a grid control model.

    <p>Grid columns (more precise: models of grid columns) are direct children of
    the grid control model they belong to. Grid columns can't be created on a global
    service factory, instead, you need to create them on the grid, where you want to
    insert them later on.</p>

    @see com::sun::star::form::component::GridControl
 */
published interface XGridColumnFactory: com::sun::star::uno::XInterface
{

    /** creates a new column object

        @param aColumnType
            the type of column to be created

        @returns
            the new column object

        @throws com::sun::star::lang::IllegalArgumentException
            if aColumnType is not available.
     */
    com::sun::star::beans::XPropertySet createColumn( [in] string aColumnType )
            raises( com::sun::star::lang::IllegalArgumentException );


    /** returns a list of available column types.

        @returns
            a list of column types.
     */
    sequence<string> getColumnTypes();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
