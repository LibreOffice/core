/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_i18n_WordType_idl__
#define __com_sun_star_i18n_WordType_idl__


module com {  module sun {  module star {  module i18n {


/** Constants to specify the type of words.

    <p> Used with XBreakIterator::nextWord(),
    XBreakIterator::previousWord(),
    XBreakIterator::getWordBoundary(),
    XBreakIterator::getWordType(),
    XBreakIterator::isBeginWord(),
    XBreakIterator::isEndWord() </p>
*/
published constants WordType
{
    /** Any "words" - words in the meaning of same character types,
        collection of alphanumeric characters, or collection of
        non-alphanumeric characters.
    */
    const short ANY_WORD                 = 0;

    /** Any "words" - words in the meaning of same character types,
        collection of alphanumeric characters, or collection of
        non-alphanumeric characters except blanks.
    */
    const short ANYWORD_IGNOREWHITESPACES= 1;

    /** "words" - in the meaning of a collection of alphanumeric
        characters and some punctuations, like dot for abbreviation.
    */
    const short DICTIONARY_WORD          = 2;

    /** The mode for counting words, it will combine punctuations and
        spaces as word trail.
     */
    const short WORD_COUNT               = 3;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
