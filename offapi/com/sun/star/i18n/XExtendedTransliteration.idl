/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_i18n_XExtendedTransliteration_idl__
#define __com_sun_star_i18n_XExtendedTransliteration_idl__

#include <com/sun/star/i18n/XTransliteration.idl>
#include <com/sun/star/i18n/MultipleCharsOutputException.idl>


module com { module sun { module star { module i18n {



/**
    This interface provides character conversions like case folding or
    Hiragana to Katakana.

    <p> It is derived from
    <type scope="::com::sun::star::i18n">XTransliteration</type> and provides
    additional functionality for character to character and
    string to string without offset parameter transliteration. These
    should be used for performance reason if their full-blown
    counterparts aren't needed.  </p>

     @since OOo 1.1.2
 */
published interface XExtendedTransliteration : ::com::sun::star::i18n::XTransliteration
{
    /** Transliterate a substring. The functionality is the same as
        <member scope="::com::sun::star::i18n">XTransliteration::transliterate()</member>
        but omits the offset parameter to improve performance.

        @param aStr
            The input string.

        @param nStartPos
            Start position within aStr from where transliteration starts.

        @param nCount
            Number of code points to be transliterated.

     */
    string  transliterateString2String( [in] string aStr,
            [in] long nStartPos, [in] long nCount );


    /** Transliterate a character to a string.

        @param cChar
            The input character.
     */
    string  transliterateChar2String( [in] char cChar );

    /** Transliterate a character to a character.

        <p> If the output contains multiple characters, for example when
        transliterating German sharp "s" (the one that looks like a
        Greek Beta) to upper case "SS", MultipleCharsOutputException
        will be thrown, the caller must catch the exception and then
        call
        <method>XTransliteration::transliterateChar2String()</method> to
        obtain the correct result. </p>

        @param cChar
            The input character.
     */
    char    transliterateChar2Char( [in] char cChar )
                raises( MultipleCharsOutputException );

};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
