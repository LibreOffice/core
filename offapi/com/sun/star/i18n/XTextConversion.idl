/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_i18n_XTextConversion_idl__
#define __com_sun_star_i18n_XTextConversion_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/Locale.idl>
#include <com/sun/star/i18n/TextConversionResult.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/lang/NoSupportException.idl>



module com {  module sun {  module star {  module i18n {


/** Method to convert text from one type to another

     @since OOo 1.1.2
*/
published interface XTextConversion : ::com::sun::star::uno::XInterface
{
    /** Method to search dictionaries for the conversion candidates.

        @param aText
            Text string to be converted.
        @param nStartPos
            The start position in aText for the conversion
        @param nLength
            The length of the portion in aText for the conversion
        @param Locale
            Locale the conversion is referring to.
        @param nTextConversionType
            One of TextConversionType values.
        @param nTextConversionOptions
            Combination of TextConversionOption values.
        @returns
            TextConversionResult

        @throws NoSupportException
            when <var>nConversionDictionaryType</var> is not known by the implementation,
            or when the locale is not supported.
    */
    TextConversionResult getConversions(
            [in] string aText,
            [in] long nStartPos,
            [in] long nLength,
            [in] ::com::sun::star::lang::Locale Locale,
            [in] short nTextConversionType,
            [in] long nTextConversionOptions )
        raises( com::sun::star::lang::IllegalArgumentException,
                com::sun::star::lang::NoSupportException );

    /** Method to search dictionaries for the conversion candidate, if there
        are multiple candidates, it will return first one. This is for the
        conversion in non-interactive mode.

        @param aText
            Text string to be converted.
        @param nStartPos
            The start position in aText for the conversion
        @param nLength
            The length of the portion in aText for the conversion
        @param Locale
            Locale the conversion is referring to.
        @param nTextConversionType
            One of TextConversionType values.
        @param nTextConversionOptions
            Combination of TextConversionOption values.
        @returns
            Converted text

        @throws NoSupportException
            when <var>nConversionDictionaryType</var> is not known by the implementation,
            or when the locale is not supported.
    */
    string getConversion(
            [in] string aText,
            [in] long nStartPos,
            [in] long nLength,
            [in] ::com::sun::star::lang::Locale Locale,
            [in] short nTextConversionType,
            [in] long nTextConversionOptions )
        raises( com::sun::star::lang::IllegalArgumentException,
                com::sun::star::lang::NoSupportException );

    /** Method to query if the conversion type should be interactive or
        non-interactive mode.

        @param Locale
            Locale the conversion is referring to.
        @param nTextConversionType
            One of TextConversionType values.
        @param nTextConversionOptions
            Combination of TextConversionOption values.
        @returns
            `TRUE` if the entry is a valid entry for the dictionary
            `FALSE` otherwise.

        @throws NoSupportException
            when <var>nConversionDictionaryType</var> is not known by the implementation,
            or when the locale is not supported.
    */
    boolean interactiveConversion(
            [in] ::com::sun::star::lang::Locale Locale,
            [in] short nTextConversionType,
            [in] long nTextConversionOptions )
        raises( com::sun::star::lang::IllegalArgumentException,
                com::sun::star::lang::NoSupportException );
};



}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
