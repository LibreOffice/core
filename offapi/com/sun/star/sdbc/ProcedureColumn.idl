/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_sdbc_ProcedureColumn_idl__
#define __com_sun_star_sdbc_ProcedureColumn_idl__

 module com {  module sun {  module star {  module sdbc {


/** indicates the type of a procedure column.
 */
published constants ProcedureColumn
{

    /** indicates that the type of the column is unknown. A possible value for
             the column
             <code>COLUMN_TYPE</code>
             in the
             com::sun::star::sdbc::XResultSet
             returned by the method
             com::sun::star::sdbc::XDatabaseMetaData::getProcedureColumns().
     */
    const long UNKNOWN          = 0;

    /** indicates that the column stores IN parameters.
             A possible value for the column
             <code>COLUMN_TYPE</code>
             in the
             com::sun::star::sdbc::XResultSet
             returned by the method
             com::sun::star::sdbc::XDatabaseMetaData::getProcedureColumns().
     */
    const long IN               = 1;

    /** indicates that the column stores INOUT parameters.
             A possible value for the column
             <code>COLUMN_TYPE</code>
             in the
             com::sun::star::sdbc::XResultSet
             returned by the method
             com::sun::star::sdbc::XDatabaseMetaData::getProcedureColumns().
     */
    const long INOUT            = 2;

    /** indicates that the column stores results.
             A possible value for the column
             <code>COLUMN_TYPE</code>
             in the
             com::sun::star::sdbc::XResultSet
             returned by the method
             com::sun::star::sdbc::XDatabaseMetaData::getProcedureColumns().
     */
    const long RESULT           = 3;

    /** indicates that the column stores OUT parameters.
             A possible value for the column
             <code>COLUMN_TYPE</code>
             in the
             com::sun::star::sdbc::XResultSet
             returned by the method
             com::sun::star::sdbc::XDatabaseMetaData::getProcedureColumns().
     */
    const long OUT              = 4;

    /** Indicates that the column stores return values.
             A possible value for the column
             <code>COLUMN_TYPE</code>
             in the
             com::sun::star::sdbc::XResultSet
             returned by the method
             com::sun::star::sdbc::XDatabaseMetaData::getProcedureColumns().
     */
    const long RETURN           = 5;
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
