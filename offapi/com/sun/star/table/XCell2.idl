/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * Version: MPL 1.1 / GPLv3+ / LGPLv3+
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Initial Developer of the Original Code is
 *                       Novell, Inc.
 *
 * Portions created by the Initial Developer are Copyright (C) 2011 the
 * Initial Developer. All Rights Reserved.
 *
 * Contributor(s): Muthu Subramanian <sumuthu@novell.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 3 or later (the "GPLv3+"), or
 * the GNU Lesser General Public License Version 3 or later (the "LGPLv3+"),
 * in which case the provisions of the GPLv3+ or the LGPLv3+ are applicable
 * instead of those above.
 */

#ifndef __com_sun_star_table_XCell2_idl__
#define __com_sun_star_table_XCell2_idl__

#include <com/sun/star/table/XCell.idl>


module com {  module sun {  module star {  module table {


/** extends XCell methods to access the contents of a cell in a table.

    @see com::sun::star::table::Cell
 */
interface XCell2: com::sun::star::table::XCell
{
    /** sets a formula result into the cell.

        <p>When assigned, the formula cell's result will be set to this
        value and will not be calculated - unless a HardRecalc is
        executed.</p>
      */
    void setFormulaResult( [in] double nValue );


    /** sets a formula string into the cell.

        <p>When assigned, the formula is set into the string. But is not
        compiled, tokenized or calculated. Its useful when loading a
        document and setFormulaResult() is used. Otherwise it is compiled
        on trying to fetch a result value.</p>
      */
    void setFormulaString( [in] string aFormula );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
