/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_table_XCell_idl__
#define __com_sun_star_table_XCell_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/table/CellContentType.idl>


module com {  module sun {  module star {  module table {


/** provides methods to access the contents of a cell in a table.

    @see com::sun::star::table::Cell
 */
published interface XCell: com::sun::star::uno::XInterface
{

    /** returns the formula string of a cell.

        <p>Even if the cell does not contain a formula, an assignment of
        this attribute's value to another cell's formula attribute would
        create the same cell content. This is because this attribute contains
        the original text value of a string cell. The value of a
        <em>value cell</em> will be formatted using the number format's
        default format or the formula string, including "=", of a formula
        cell.</p>
     */
    string getFormula();


    /** sets a formula into the cell.

        <p>When assigned, the string will be interpreted and a value, text
        or formula cell is created, depending on the text and the number
        format.</p>
     */
    void setFormula( [in] string aFormula );


    /** returns the floating point value of the cell.

        <p>For a <em>value cell</em> the value is returned, for a
        <em>string cell</em> zero is returned and for a <em>formula cell</em>
        the result value of a formula is returned.</p>
     */
    double getValue();


    /** sets a floating point value into the cell.

        <p>After a call to this method the type of the cell is
        <member>CellContentType::VALUE</member>.</p>
     */
    void setValue( [in] double nValue );


    /** returns the type of the cell.
     */
    com::sun::star::table::CellContentType getType();


    /** returns the error value of the cell.

        <P>If the cell does not contain a formula, the error is always
        zero.</p>
     */
    long getError();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
