/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_table_XCell_idl__
#define __com_sun_star_table_XCell_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/table/CellContentType.idl>


module com {  module sun {  module star {  module table {


/** provides methods to access the contents of a cell in a table.

    @see com::sun::star::table::Cell
 */
published interface XCell: com::sun::star::uno::XInterface
{

    /** returns the formula string of a cell.

        <p>Even if the cell does not contain a formula, an assignment of
        this attribute's value to another cell's formula attribute would
        create the same cell content. This is because this attribute contains
        the original text value of a string cell. The value of a
        <em>value cell</em> will be formatted using the number format's
        default format or the formula string, including "=", of a formula
        cell.</p>
     */
    string getFormula();


    /** sets a formula into the cell.

        <p>When assigned, the string will be interpreted and a value, text
        or formula cell is created, depending on the text and the number
        format.</p>
     */
    void setFormula( [in] string aFormula );


    /** returns the floating point value of the cell.

        <p>For a <em>value cell</em> the value is returned, for a
        <em>string cell</em> zero is returned and for a <em>formula cell</em>
        the result value of a formula is returned.</p>
     */
    double getValue();


    /** sets a floating point value into the cell.

        <p>After a call to this method the type of the cell is
        CellContentType::VALUE.</p>
     */
    void setValue( [in] double nValue );


    /** returns the type of the cell.
     */
    com::sun::star::table::CellContentType getType();


    /** returns the error value of the cell.

        <P>If the cell does not contain a formula, the error is always
        zero.</p>
     */
    long getError();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
