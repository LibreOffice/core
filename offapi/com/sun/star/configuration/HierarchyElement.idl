/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_HierarchyElement_idl__
#define __com_sun_star_configuration_HierarchyElement_idl__

#include <com/sun/star/container/XNamed.idl>
#include <com/sun/star/container/XHierarchicalName.idl>
#include <com/sun/star/beans/XProperty.idl>
#include <com/sun/star/beans/XPropertyWithState.idl>
#include <com/sun/star/container/XChild.idl>


module com { module sun { module star { module configuration {

/** provides information about an element within a hierarchy.

 <p>The local name and the full hierarchical name can be retrieved.
 Attributes detailing the role of the element can be queried.
 The state of the element (regarding defaults) can be accessed.
 </p>

 <p>Implementations of this service usually also implement
 service HierarchyAccess, which concerns the complementary role
 of providing access to subelements of the hierarchy.
 </p>
*/
published service HierarchyElement
{
/** provides the complete hierarchical name of this element
 within the hierarchy tree.
*/
    interface com::sun::star::container::XHierarchicalName;

/** provides the local name of this element within its parent.

 <p><em>Renaming an element is generally not supported.</em></p>
*/
    interface com::sun::star::container::XNamed;

/** provides a property descriptor for this element.[optional]

 <p>This interface may be missing, if the hierarchy supports no traits that are
 described by com::sun::star::beans::PropertyAttribute
 values.
 </p>

 <p>If the parent of this object implements
 com::sun::star::beans::XPropertySetInfo, then this returns
 the same com::sun::star::beans::Property as the
 com::sun::star::beans::XPropertySetInfo of the parent.
 </p>
*/
    [optional] interface com::sun::star::beans::XProperty;

/** provides access to the default state of this element. [optional]

 <p>This interface may be missing, if the hierarchy supports access to
 a default state and values only for simple values or not at all.
 </p>

 <p>If the parent of this object implements
 com::sun::star::beans::XPropertyState, then members
 of this interface have the same effect as corresponding members of the parent.
 </p>

 <p>If an implementation is part of a <em>read-only</em> view of the hierarchy,
 attempts to change property states will fail.
 </p>
*/
    [optional] interface com::sun::star::beans::XPropertyWithState;

/** provides access to the parent of this element [optional].

 <p>This interface may be missing if this object is not obtained
 as a child or descendant of another tree node, for example, directly from a factory or provider.
 </p>

 <p>com::sun::star::container::XChild::getParent()
 returns NULL, if this object is currently not contained in another node.
 </p>

 <p><em>Setting a different parent is, generally, not supported.</em></p>
*/
    [optional] interface com::sun::star::container::XChild;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
