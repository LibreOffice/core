/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_SetAccess_idl__
#define __com_sun_star_configuration_SetAccess_idl__

#include <com/sun/star/configuration/HierarchyAccess.idl>
#include <com/sun/star/configuration/SimpleSetAccess.idl>
#include <com/sun/star/container/XContainer.idl>


module com { module sun { module star { module configuration {

/** provides access to a dynamic, homogeneous set of values or nested
 trees within a hierarchy.

 <p>Also provides information about the template for elements.
 Allows normalizing externally generated names.
 </p>

 <p><em>Sets</em> are dynamic containers within the hierarchy.</p>

 <p>The number and names of contained elements are not fixed in advance,
 but all elements have to be of one predetermined type.
 </p>

 @see com::sun::star::configuration::SetElement
    Child objects of this service generally implement SetElement.
    The template name returned by the child from
    XTemplateInstance::getTemplateName()
    corresponds to the name returned by the set from
    XTemplateContainer::getElementTemplateName().

 @see com::sun::star::configuration::GroupAccess
    A complementary service that provides for static heterogeneous groups of
    elements within the hierarchy.

*/
published service SetAccess
{
/** is the basic service for accessing child and descendent nodes in a hierarchy.

 <p>External names (from foreign namespaces) should be normalized using
 com::sun::star::util::XStringEscape::escapeString()
 (if available) before using them as element names.
 </p>
*/
    service HierarchyAccess;

/** is the basic service providing information about and access to elements
 of a not necessarily hierarchical <em>set</em>.

 <p>Interface com::sun::star::configuration::XTemplateContainer,
 which is optional in SimpleSetAccess must always be implemented
 in this service, if the elements are of object type.  </p>
*/
    service SimpleSetAccess;

/** allows attaching listeners to this node to monitor changes to the set.

 <p>In this service, support for notifications is mandatory.
 </p>
*/
    interface com::sun::star::container::XContainer;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
