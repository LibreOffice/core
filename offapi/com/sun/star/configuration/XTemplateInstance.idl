/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_XTemplateInstance_idl__
#define __com_sun_star_configuration_XTemplateInstance_idl__

#include <com/sun/star/uno/XInterface.idl>


 module com {  module sun {  module star {  module configuration {


/** is implemented by objects that are instances of a named template to provide
    information about the template.

    <p> Template names are similar to service names, but apply to structure and
        content, rather than to type.
    </p>
    <p> Often a template description can be retrieved from a repository and then be
        interpreted by a factory object. Templates provide a means to build
        new kinds of objects dynamically.
    </p>

    @see XTemplateContainer
 */
published interface XTemplateInstance: com::sun::star::uno::XInterface
{

    /** retrieves the name of the template

        @returns
            the name of the template this object was built from or conforms to.
     */
    string getTemplateName();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
