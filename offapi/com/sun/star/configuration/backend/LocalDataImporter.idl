/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_backend_LocalDataImporter_idl__
#define __com_sun_star_configuration_backend_LocalDataImporter_idl__

#include <com/sun/star/configuration/backend/DataImporter.idl>


module com { module sun { module star { module configuration { module backend {


/**
    allows importing data from a local configuration data repository
    or file into any Backend.

    <p> Data to be imported can be a single layer either from a full local
        configuration database or from a particular OOR Update XML file.
    </p>
    <p> Data is imported into the DefaultBackend.
    </p>

    @see com::sun::star::configuration::backend::LocalHierarchyBrowser
        Service that can be used to locate available layer files or components.

    @see com::sun::star::configuration::backend::LocalSingleBackend
        Service that can be used to access a local configuration database.

    @since OOo 1.1.2
*/
published service LocalDataImporter
{

    /** provides for running an import job

        <p> The implementation returns `VOID` from
            com::sun::star::task::XJob::execute()
            to indicates successful execution. If import is not executed,
            because <code>OverwriteExisting = </code>`TRUE` was specified,
            a com::sun::star::lang::IllegalAccessException
            is returned.
        </p>
         <p>If `VOID` or `TRUE` is returned, this indicates successful
            execution. If an
            com::sun::star::uno::Exception is returned,
            it represents an error condition encountered during execution.
        </p>

        <p> The standard arguments to
            com::sun::star::task::XJob::execute()
            are all supported by implementations. Additionally the following
            argument is required to select the data source:
        <dl>
            <dt><code>LayerDataUrl</code> : `string`</dt>
            <dd>A file URL that specifies the location of the source data.
                <p> If no <code>Component</code> is provided, this must be the
                    location of an OOR Update XML file, which will be imported
                    directly.
                </p>
                <p> If a <code>Component</code> is provided, the
                    <code>LayerDataUrl</code> is treated as Entity
                    (i.e. Layer directory base URL) for a local
                    configuration database and the appropriate component
                    from that repository is imported.
                </p>
            </dd>
        </dl>
        </p>
        <p> Implementations may support additional parameters to select
            a destination Backend, that is not the
            DefaultBackend.
        </p>
      */
    service DataImporter ;

} ;


} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
