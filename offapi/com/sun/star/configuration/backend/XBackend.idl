/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_backend_XBackend_idl__
#define __com_sun_star_configuration_backend_XBackend_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/configuration/backend/XUpdateHandler.idl>
#include <com/sun/star/configuration/backend/XLayer.idl>
#include <com/sun/star/configuration/backend/XSchema.idl>
#include <com/sun/star/configuration/backend/BackendAccessException.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/lang/NoSupportException.idl>


module com { module sun { module star { module configuration { module backend {


/**
  Handles access to layered data stored in a repository.

  <p> Data can be retrieved on behalf of one or more entities.</p>

  <p> There is an implied owner entity associated to the object
     when it is created. This entity should be used for normal data access.
     For administrative operations data of other entities can be accessed.
  </p>

  @see com::sun::star::configuration::backend::XBackendEntities
  @see com::sun::star::configuration::backend::XSchemaSupplier

  @since OOo 1.1.2
*/
published interface XBackend : ::com::sun::star::uno::XInterface
{

    /**
      retrieves the layers associated to the owner
      entity for a component.

      @param aComponent
                component whose data will be accessed

      @returns
                a list of objects allowing access to the
                component data for each layer associated to
                the current entity

      @throws   com::sun::star::lang::IllegalArgumentException
                if the component identifier is invalid

      @throws   com::sun::star::configuration::backend::BackendAccessException
                if an error occurs while accessing the data.

      @see com::sun::star::configuration::backend::XBackendEntities::getOwnerEntity()
    */
    sequence<XLayer> listOwnLayers([in] string aComponent)
        raises (BackendAccessException,
                com::sun::star::lang::IllegalArgumentException) ;


    /**
      creates an update handler for the owner entity
      layer for a component.

      @param aComponent
                component whose data will be updated

      @returns
                an object allowing manipulation of the
                component data for the current entity

      @throws   com::sun::star::lang::IllegalArgumentException
                if the component identifier is invalid

      @throws   com::sun::star::lang::NoSupportException
                if updates are not supported for this backend

      @throws   com::sun::star::configuration::backend::BackendAccessException
                if an error occurs while accessing the data.

      @see com::sun::star::configuration::backend::XBackendEntities::getOwnerEntity()
    */
    XUpdateHandler getOwnUpdateHandler([in] string aComponent)
        raises (BackendAccessException,
                com::sun::star::lang::NoSupportException,
                com::sun::star::lang::IllegalArgumentException) ;


    /**
      retrieves the layers associated to an entity for a component.

      @param aComponent
                component whose data will be accessed

      @param aEntity
                entity whose data will be accessed

      @returns
                a list of objects allowing access to the
                component data for each layer associated
                with the entity.

      @throws   com::sun::star::lang::IllegalArgumentException
                if the component identifier is invalid
                or if the entity doesn't exist.

      @throws   com::sun::star::configuration::backend::BackendAccessException
                if an error occurs while accessing the data.

      @see com::sun::star::configuration::backend::XBackendEntities::supportsEntity()
    */
    sequence<XLayer> listLayers([in] string aComponent,
                                [in] string aEntity)
        raises (BackendAccessException,
                com::sun::star::lang::IllegalArgumentException) ;


    /**
      creates an update handler on an entity's layer for a component.

      @param aComponent
                component whose data will be updated

      @param aEntity
                entity whose data will be updated

      @returns
                an object allowing manipulation of the
                component data for the entity

      @throws   com::sun::star::lang::IllegalArgumentException
                if the component identifier is invalid
                or if the entity doesn't exist.

      @throws   com::sun::star::lang::NoSupportException
                if updates are not supported for this backend

      @throws   com::sun::star::configuration::backend::BackendAccessException
                if an error occurs while accessing the data.

      @see com::sun::star::configuration::backend::XBackendEntities::supportsEntity()
    */
    XUpdateHandler getUpdateHandler([in] string aComponent,
                                    [in] string aEntity)
        raises (BackendAccessException,
                com::sun::star::lang::NoSupportException,
                com::sun::star::lang::IllegalArgumentException) ;

} ;


} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
