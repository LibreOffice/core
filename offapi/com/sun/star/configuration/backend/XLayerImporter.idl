/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_backend_XLayerImporter_idl__
#define __com_sun_star_configuration_backend_XLayerImporter_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/configuration/backend/XLayer.idl>
#include <com/sun/star/configuration/backend/XBackend.idl>
#include <com/sun/star/configuration/backend/MalformedDataException.idl>
#include <com/sun/star/lang/NullPointerException.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/lang/WrappedTargetException.idl>


module com { module sun { module star { module configuration { module backend {


/** allows importing a layer into a Backend

  @since OOo 1.1.2
*/
published interface XLayerImporter : ::com::sun::star::uno::XInterface
{

    /** gets the target backend for importing.

        @returns
            the Backend into which layers are
            imported by XLayerImporter::importLayer().

    */
    XBackend getTargetBackend();


    /** sets the target backend for importing.

        @param aBackend
            a Backend into which layers should be
            imported by XLayerImporter::importLayer().

        @throws com::sun::star::lang::NullPointerException
            if the backend passed is `NULL`.
    */
    void setTargetBackend([in] XBackend aBackend)
        raises (com::sun::star::lang::NullPointerException) ;


    /** Imports the layer given into the backend.

        <p>This method imports data for the current entity of the backend.</p>

        @param aLayer
            a layer whose data will be imported into the backend

        @throws com::sun::star::lang::NullPointerException
            if the layer passed is `NULL` or no backend is available.

        @throws com::sun::star::configuration::backend::MalformedDataException
            if the layer passed is invalid

        @throws com::sun::star::lang::IllegalArgumentException
            if the layer passed is for a component
            that doesn't exist in the backend

        @throws com::sun::star::lang::WrappedTargetException
            if an error occurs in the backend or source layer.

        @see com::sun::star::configuration::backend::XBackend::getOwnUpdateHandler()
    */
    void importLayer([in] XLayer aLayer)
        raises (MalformedDataException,
                com::sun::star::lang::IllegalArgumentException,
                com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException) ;


    /** Imports the layer given into the backend for a given entity.

        <p>This method imports data for the current entity of the backend.</p>

        @param aLayer
            a layer whose data will be imported into the backend

        @param aEntity
            a entity into whose data the layer will be imported

        @throws com::sun::star::lang::NullPointerException
            if the layer passed is `NULL` or no backend is available.

        @throws com::sun::star::configuration::backend::MalformedDataException
            if the layer passed is invalid

        @throws com::sun::star::lang::IllegalArgumentException
            if the layer passed is for a component
            that doesn't exist in the backend
            or if the entity doesn't exist in the backend.

        @throws com::sun::star::lang::WrappedTargetException
            if an error occurs in the backend or source layer.

        @see com::sun::star::configuration::backend::XBackend::getUpdateHandler()
    */
    void importLayerForEntity([in] XLayer aLayer, [in] string aEntity)
        raises (MalformedDataException,
                com::sun::star::lang::IllegalArgumentException,
                com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException) ;

} ;


} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
