/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_backend_DataImporter_idl__
#define __com_sun_star_configuration_backend_DataImporter_idl__

#include <com/sun/star/task/XJob.idl>


module com { module sun { module star { module configuration { module backend {


/**
    allows importing data from one configuration repository into another.

    @since OOo 1.1.2
*/
published service DataImporter
{

    /** allows running an import job

        <p> The source and destination repositories are selected by arguments
            passed to
            com::sun::star::task::XJob::execute().
            The names and meanings of such arguments depend on
            the implementation. Each implementation must document such arguments.
        </p>

        <p> Implementations may return a value from
            com::sun::star::task::XJob::execute()
            that indicates the status of job execution. The type and meaning of
            such status indicators depend on the implementation.
        </p>
         <p>If `VOID` or `TRUE` is returned, this indicates successful
            execution. If an
            com::sun::star::uno::Exception is returned,
            it represents an error condition encountered during execution.
        </p>

        <p> The following arguments to
            com::sun::star::task::XJob::execute()
            should be supported by implementations. Implementations must document
            a failure to support any of these arguments:
        <dl>
            <dt><code>ImporterService</code> : `string`</dt>
            <dd>A service or implementation name used to instantiate the
                Importer to use for importing. If this parameter
                is missing, the implementation selects an appropriate importer.
                By default, a MergeImporter should be used.
            </dd>
            <dt><code>OverwriteExisting</code> : `boolean`</dt>
            <dd>If `TRUE`, specifies that no existing data should be
                overwritten by the import. If the Importer used
                does not support such protection, an error may be raised.
                If some data is not imported, because there is existing
                data, this is indicated by returning an appropriate exception.
            </dd>
            <dt><code>TruncateExisting</code> : `boolean`</dt>
            <dd>If `TRUE`, specifies that existing data should be
                discarded and replaced by the imported data.
                If the Importer used does not support this
                operation, an error may be raised.
                By default, a CopyImporter is used to perform
                truncating import.
            </dd>
            <dt><code>Entity</code> : `string`</dt>
            <dd>An identifier for the entity in the destination backend for
                which the imported data should apply. The value will be passed
                to XLayerImporter::importLayerForEntity().
                If this parameter is missing, the implementation uses
                XLayerImporter::importLayer() instead.
            </dd>
            <dt><code>Component</code> : `string`</dt>
            <dd>Names the component for which to import data. If this
                parameter is missing, the selection of data to import depends
                on implementation-specific parameters.
            </dd>
            <dt><code>LayerFilter</code> : LayerFilter</dt>
            <dd>A filter to transform data during import. This parameter is
                optional. If this parameter is missing, data will be imported
                unaltered. <em>Support for this parameter is optional.</em>
                If the implementation does not support a filter it will raise an
                com::sun::star::lang::IllegalArgumentException.
            </dd>
        </dl>
        </p>

      */
    interface com::sun::star::task::XJob ;

} ;


} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
