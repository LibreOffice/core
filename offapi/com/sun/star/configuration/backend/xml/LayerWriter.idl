/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_backend_xml_LayerWriter_idl__
#define __com_sun_star_configuration_backend_xml_LayerWriter_idl__

#include <com/sun/star/lang/XInitialization.idl>
#include <com/sun/star/io/XActiveDataSource.idl>
#include <com/sun/star/configuration/backend/XLayerHandler.idl>


module com { module sun { module star { module configuration { module backend {
module xml {


/**
    can be used to parse a stream of configuration layer XML.

    <p> The configuration layer data described to a
    <type scope="com::sun::star::configuration::backend">XLayerHandler</type>
    is written to a stream as OOR Update XML.
    </p>

    @see com::sun::star::configuration::backend::xml::LayerParser
        Service that parses configuration layer XML.

    @since OOo 1.1.2
*/
published service LayerWriter
{

    /** accepts events describing the layer data.
      */
    interface com::sun::star::configuration::backend::XLayerHandler ;


    /** provides access to the target stream.
      */
    interface com::sun::star::io::XActiveDataSource ;


    /** allows initializing target stream.

        <p> The target can be passed
            as a <type scope="com::sun::star::io">XOutputStream</type>.
        </p>
      */
    interface com::sun::star::lang::XInitialization ;

} ;

} ;
} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
