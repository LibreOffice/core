/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_backend_xml_SchemaParser_idl__
#define __com_sun_star_configuration_backend_xml_SchemaParser_idl__

#include <com/sun/star/configuration/backend/XSchema.idl>
#include <com/sun/star/io/XActiveDataSink.idl>
#include <com/sun/star/lang/XInitialization.idl>


module com { module sun { module star { module configuration { module backend {
module xml {


/** represents a configuration schema that is stored in a stream in
    OOR Schema XML format.

    <p> The configuration schema XML from a given stream is parsed and fed to a
        com::sun::star::configuration::backend::XSchemaHandler.
    </p>

    @see com::sun::star::configuration::backend::xml::LayerParser
        Service that parses configuration layer XML.

    @since OOo 1.1.2
*/
published service SchemaParser
{

    /** provides access to the parsed schema data.
      */
    interface com::sun::star::configuration::backend::XSchema ;


    /** provides access to the source XML stream.
      */
    interface com::sun::star::io::XActiveDataSink ;


    /** allows initializing the source stream.

        <p> The source can be passed
            as a com::sun::star::io::XInputStream or
            as a com::sun::star::xml::sax::InputSource.
        </p>
      */
    interface com::sun::star::lang::XInitialization ;

} ;

} ;
} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
