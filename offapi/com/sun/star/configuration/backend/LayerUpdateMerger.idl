/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_backend_LayerUpdateMerger_idl__
#define __com_sun_star_configuration_backend_LayerUpdateMerger_idl__

#include <com/sun/star/lang/XInitialization.idl>
#include <com/sun/star/configuration/backend/XUpdateHandler.idl>


module com { module sun { module star { module configuration { module backend {


/**
    applies updates to a configuration layer.

    <p> The configuration layer data is read from a XLayer
    and the changed layer is provided as XLayer again or
    described to a XLayerHandler.
    </p>

    @see com::sun::star::configuration::backend::UpdatableLayer
        Service describes a layer and accepts a changed layer..

    @since OOo 1.1.2
*/
published service LayerUpdateMerger
{

    /** accepts events describing the changes.
      */
    interface com::sun::star::configuration::backend::XUpdateHandler ;


    /** allows initializing layer data source and target.

        <p> Both source and target of the update can be provided by passing a
            XUpdatableLayer object. Alternatively they can be
            provided individually by providing a XLayer object as
            data source and an XLayerHandler object to receive the
            updated data.
        </p>
        <p> Implementations can provide more arguments to fine tune the behavior.
            Such arguments are provided as
            com::sun::star::beans::NamedValue.
            Implementations should support the following named arguments:
        <dl>
            <dt><code>Overwrite</code> : `boolean`</dt>
            <dd>If `FALSE`, specifies that changes should be applied
                only if the existing layer is empty.
            </dd>
            <dt><code>Truncate</code> : `boolean`</dt>
            <dd>If `TRUE` requests that changes should not be merged onto
                existing data, but that the changes should be applied
                to a layer that is completely empty.
            </dd>
        </dl>
        </p>
      */
    interface com::sun::star::lang::XInitialization ;

} ;


} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
