/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_configuration_XTemplateContainer_idl__
#define __com_sun_star_configuration_XTemplateContainer_idl__

#include <com/sun/star/uno/XInterface.idl>


 module com {  module sun {  module star {  module configuration {


/** is implemented by objects that contain instances of a named template to
    provide information about the template.

    <p> An implementation will also implement
        com::sun::star::lang::XSingleServiceFactory, in which case
        that interface creates instances of the specified template.
    </p>
    <p> If multiple templates are supported, the supported factory interface may be
        com::sun::star::lang::XMultiServiceFactory, in which case
        the `string` returned from
        XTemplateContainer::getElementTemplateName() can be used as
        the service name argument.
    </p>

    @see XTemplateInstance
 */
published interface XTemplateContainer: com::sun::star::uno::XInterface
{

    /** retrieves the name of the template

        <p> If instances of multiple templates are accepted by the container,
            this is the name of the basic or primary template.
        </p>
        <p> Instances of the template must be created
            using an appropriate factory.
        </p>

        @returns
                the name of the (default) template for elements.
     */
    string getElementTemplateName();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
