/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_formula_Symbol_idl__
#define __com_sun_star_formula_Symbol_idl__


 module com {  module sun {  module star {  module formula {

/** @deprecated draft
    - nWeight should be changed to float as in FontWeight.idl
    - nItalic probably needs to have FontItalic extended by the two
      extra defines REVERSE_* listed in FontSlant.idl
    - nCharSet should have the CharSet.idl extended by the new defines
      from rtl/textenc.h
*/
published struct SymbolDescriptor
{
    /** The name of the symbol.
    */
    string sName;

    /** The export name of the symbol.
    */
    string sExportName;

    /** Specifies the name of the symbol set to which this symbol belongs.
    */
    string sSymbolSet;

    /** Specifies the Unicode character of the symbol.
    */
    long nCharacter;

    /** Specifies the exact name of the font ("Arial", "Courier", etc.).
    */
    string sFontName;

    /** Specifies the character set which is supported by the font.

        @see   <type scope="com::sun::star::awt">CharSet</type>
    */
    short nCharSet;

    /** Specifies the general style of the font.

        @see   <type scope="com::sun::star::awt">FontFamily</type>
    */
    short nFamily;

    /** Specifies the pitch of the font.

        @see   <type scope="com::sun::star::awt">FontPitch</type>
    */
    short nPitch;

    /** Specifies the thickness of the line.

        @see   <type scope="com::sun::star::awt">FontWeight</type>

        The allowed integer values correspond as follows:
        0 : <member scope="com::sun::star::awt">FontWeight::DONTKNOW</member>
        1 : <member scope="com::sun::star::awt">FontWeight::THIN</member>
        2 : <member scope="com::sun::star::awt">FontWeight::ULTRALIGHT</member>
        3 : <member scope="com::sun::star::awt">FontWeight::LIGHT</member>
        4 : <member scope="com::sun::star::awt">FontWeight::SEMILIGHT</member>
        5 : <member scope="com::sun::star::awt">FontWeight::NORMAL</member>
        7 : <member scope="com::sun::star::awt">FontWeight::SEMIBOLD</member>
        8 : <member scope="com::sun::star::awt">FontWeight::BOLD</member>
        9 : <member scope="com::sun::star::awt">FontWeight::ULTRABOLD</member>
        10 : <member scope="com::sun::star::awt">FontWeight::BLACK</member>

    */
    short nWeight;

    /** Specifies if the font is italic.

        @see   <type scope="com::sun::star::awt">FontSlant</type>

        The values
        <member cope"com::sun::star::awt">FontSlant::REVERSE_OBLIQUE</member> and
        <member scope="com::sun::star::awt">FontSlant::REVERSE_ITALIC</member>
        may not be used.
    */
    short nItalic;
};
}; }; }; };
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
