/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_accessibility_XAccessible_idl__
#define __com_sun_star_accessibility_XAccessible_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module accessibility {

 interface XAccessibleContext;

/** This interface has to be implemented by any class that wants to be
    accessible.

    <p>It is used to provide access to the XAccessibleContext
    interface but allows at the same time that the interface is implemented
    by another class.</p>

    <p>The distinction between the interfaces XAccessible and
    XAccessibleContext makes it possible to split up the
    implementation of the
    class that is made accessible and the actual accessibility code into two
    (mostly) independent parts.  The only necessary dependence is the
    XAccessible::getAccessibleContext() function
    that returns the accessible context.  This one-way link has to be
    persistent in some sense: As long as there is at least one reference to
    a specific XAccessibleContext object the
    XAccessible object has to return the same context for every
    call to XAccessible::getAccessibleContext().
    This is necessary to allow the use of object identity for comparing
    accessibility contexts for being equal.</p>

    @see AccessibleContext

    @since OOo 1.1.2
*/
interface XAccessible : ::com::sun::star::uno::XInterface
{
    /** Returns the AccessibleContext associated with this object.

        <p>The idea to let this interface only return an
        XAccessibleContext instead of directly supporting its
        functions is to allow the separation of the implementation of the
        functions that make a class accessible from the implementation of
        that class.  You may, of course, implement XAccessible
        and XAccessibleContext in one class.</p>

        @return
            A reference to the object that contains the actual accessibility
            information.

        @see AccessibleContext
    */
    XAccessibleContext getAccessibleContext ();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
