/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_accessibility_XAccessibleKeyBinding_idl__
#define __com_sun_star_accessibility_XAccessibleKeyBinding_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/awt/KeyStroke.idl>
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>

module com { module sun { module star { module accessibility {

/** This interface can be used to represent any number of key bindings which
    then can be associated to a certain action.

    <p>There can be zero, one, or more key bindings.  Each key binding consists
    of a sequence of ::com::sun::star::awt::KeyStroke
    objects.  The association of an action with a key binding is established
    by the XAccessibleAction interface returning an
    XAccessibleKeyBinding object.</p>

    <p>A key binding describes alternative ways how to invoke an action with
    pressing one or more keys after each other.  Each individual sequence of
    key strokes </p>

    @since OOo 1.1.2
*/
interface XAccessibleKeyBinding : ::com::sun::star::uno::XInterface
{
    /** Return the number of available key bindings.
        @return
            The returned value may be 0 to indicate that there are no key
            bindings or the positive number of the available key bindings.
    */
    long getAccessibleKeyBindingCount ();

    /** The returned sequence of key strokes describes one method to invoke
        the associated action (the one from which you obtained the object at
        which you called this method) by pressing keys.  The keys specified
        by each of the returned key strokes have to be pressed at the same
        time (the Control-key and the A-key for example).  The keys of
        one key stroke have to be released before pressing those of the
        next.  The order of the key strokes in the sequence define the order
        in which to press them.
        @param nIndex
            The index selects one of alternative key bindings.  It has to
            non-negative and smaller then the number of key bindings as
            returned by the getAccessibleKeyBindingCount()
            method.
        @return
           The returned sequence of key strokes specifies one way to invoke
           the associated action.  The sequence may be empty (but should
           not be; better not to return such a key binding at all).
        @throws ::com::sun::star::lang::IndexOutOfBoundsException
            if the index is not valid.
    */
    sequence<::com::sun::star::awt::KeyStroke> getAccessibleKeyBinding ([in] long nIndex)
        raises (::com::sun::star::lang::IndexOutOfBoundsException);
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
