/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_accessibility_XAccessibleAction_idl__
#define __com_sun_star_accessibility_XAccessibleAction_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>

module com { module sun { module star { module accessibility {

 interface XAccessibleKeyBinding;

/** Implement this interface to give access to actions that can be executed
    for accessible objects.

    <p>Every accessible object that can be manipulated beyond its methods
    exported over the accessibility API should support this interface to
    expose all actions that it can perform.  Each action can be performed or
    be queried for a description or associated key bindings.</p>

    @since OOo 1.1.2
*/
interface XAccessibleAction : ::com::sun::star::uno::XInterface
{
    /** Returns the number of accessible actions available in this object.

        <p>If there are more than one, the first one is considered the
        "default" action of the object.</p>

        @return
            The returned value of the number of actions is zero if there are
            no actions.
    */
    long getAccessibleActionCount ();

    /** Perform the specified Action on the object.

        @param nIndex
            This index specifies the action to perform.  If it lies outside
            the valid range `FALSE` is returned and no action is performed.
        @return
            Returns `TRUE` if the action was successfully performed.  If
            the action could not be performed successfully `FALSE` is
            returned.

        @throws IndexOutOfBoundsException
            If no action with the given index exists then an
            ::com::sun::star::lang::IndexOutOfBoundsException
            exception is thrown.
    */
    boolean doAccessibleAction ([in] long nIndex)
        raises (::com::sun::star::lang::IndexOutOfBoundsException);

    /** Returns a description of the specified action of the object.

        @param nIndex
            This index specifies the action of which to return a
            description.  If it lies outside the valid range an empty string
            is returned.

        @return
            The returned value is a localized string of the specified action.

        @throws IndexOutOfBoundsException
            If the given index lies not in the valid range then an
            ::com::sun::star::lang::IndexOutOfBoundsException
            exception is thrown.
    */
    string getAccessibleActionDescription ([in] long nIndex)
        raises (::com::sun::star::lang::IndexOutOfBoundsException);

    /** Returns a key binding object, if there is one, associated with the
        specified action.  Note that there can be several alternative key
        bindings for an action.  See XAccessibleKeyBinding for
        more information about how key bindings are represented.

        @param nIndex
            This index specifies the action of which to return the key
            binding.

        @return
            The returned object describes a set of key bindings associated
            with the specified action.

        @throws IndexOutOfBoundsException
            if the given index is not valid.
    */
    XAccessibleKeyBinding getAccessibleActionKeyBinding ([in] long nIndex)
        raises (::com::sun::star::lang::IndexOutOfBoundsException);
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
