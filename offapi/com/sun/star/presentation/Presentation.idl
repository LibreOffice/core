/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_presentation_Presentation_idl__
#define __com_sun_star_presentation_Presentation_idl__

#include <com/sun/star/presentation/XPresentation.idl>

#include <com/sun/star/beans/XPropertySet.idl>



 module com {  module sun {  module star {  module presentation {


/** This service is a presentation that is available from a
    PresentationDocument via the
    XPresentationSupplier interface.
 */
published service Presentation
{
    /** lets you start and stop a presentation.

        <p>It also gives you access to the more advanced features, like
        rehearse timing and the live modes.
     */
    interface com::sun::star::presentation::XPresentation;


    /** This is the standard interface for access to the properties from this
        service.
     */
    interface com::sun::star::beans::XPropertySet;


    /** enables/disables the shape animations.
     */
    [property] boolean AllowAnimations;


    /** If this string is not empty, it contains the name of a customized
        show that is used for the presentation.
     */
    [property] string CustomShow;


    /** If this string is not empty, it contains the name of the page where
        the presentation is started.
     */
    [property] string FirstPage;


    /** If this property is set to `TRUE`, the window of the presentation is
        always on top of all other windows.
     */
    [property] boolean IsAlwaysOnTop;


    /** If this property is `TRUE`, all pages are changed automatically.

        <p>This overrides the properties of the pages.</p>
     */
    [property] boolean IsAutomatic;


    /** If this property is set to `TRUE`, the presentation is repeated
        endlessly.
     */
    [property] boolean IsEndless;


    /** If this property is set to `TRUE`, the presentation runs in
        full-screen mode.
     */
    [property] boolean IsFullScreen;


    /** With this property, you can set the presentation to live mode.
        <p>Implementations that have no live mode capability may ignore this
        property and always return false.
     */
    [property] boolean IsLivePresentation;


    /** If this property is `TRUE`, the mouse is visible during the
        presentation.
     */
    [property] boolean IsMouseVisible;


    /** is the duration of the black screen after the
        presentation has finished.

        <p>If this is set to <code>0</code>, no black screen is shown.</p>
     */
    [property] long Pause;


    /** If this is set to `TRUE`, the Navigator is opened at the start of the
        presentation.
     */
    [property] boolean StartWithNavigator;


    /** If this is `TRUE`, a pen is shown during presentation.

        <p>You can draw on the presentation with this pen.</p>
     */
    [property] boolean UsePen;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
