/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_logging_LogLevel_idl__
#define __com_sun_star_logging_LogLevel_idl__


module com { module sun { module star { module logging {


/** specifies levels to distinguish between severities of logged events

    @see XLogger

    @since OOo 2.3
 */
constants LogLevel
{
    /** specifies that no messages are to be logged at all

        <p>This level can be set at an XLogger to completely prevent
        logging. You will usually not use it with a concrete log event.</p>
    */
    const long  OFF       = 0x7FFFFFFF;

    /// denotes a serious failure to be logged
    const long  SEVERE    =       1000;

    /// denotes a potential problem to be logged
    const long  WARNING   =        900;

    /// denotes an informational message to be logged
    const long  INFO      =        800;

    /// denotes a static configuration message to be logged
    const long  CONFIG    =        700;

    /// denotes basic tracing information to be logged
    const long  FINE      =        500;

    /// denotes more fine-grained tracing information to be logged
    const long  FINER     =        400;

    /// denotes highly detailed tracing information to be logged
    const long  FINEST    =        300;

    /** specifies that all messages should be logged

        <p>This level can be set at an XLogger to enable logging
        of absolutely all events. You will usually not use it with a concrete log event.</p>
    */
    const long  ALL       = -0x80000000;
};


}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
