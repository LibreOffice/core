/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_logging_LogRecord_idl__
#define __com_sun_star_logging_LogRecord_idl__

#include <com/sun/star/util/DateTime.idl>


module com { module sun { module star { module logging {


/** assembles the complete information about a to-be-logged event

    @see XLogger

    @since OOo 2.3
 */
struct LogRecord
{
    /// specifies the name of the logger at which the record is logged
    string  LoggerName;

    /** specifies the name of the class, in which the record was logged.

        This name might be empty, in case the caller to one of the various
        <code>log</code> methods of <type>XLogger</type> did not specify it.
    */
    string  SourceClassName;

    /** specifies the name of the method, in which the record was logged.

        This name might be empty, in case the caller to one of the various
        <code>log</code> methods of <type>XLogger</type> did not specify it.
    */
    string  SourceMethodName;

    /// specifies the to-be-logged message
    string  Message;

    /// specifies the time at which the event was logged
    ::com::sun::star::util::DateTime
            LogTime;

    /** specifies the number of the log event.

        Subsequent events get assigned increasing sequence numbers by the <type>XLogger</type>
        at which they're logged.
    */
    hyper   SequenceNumber;

    /// specifies the ID of the thread in which the event was logged
    string  ThreadID;

    /** specifies the level of the log event

        @see LogLevel
    */
    long    Level;
};


}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
