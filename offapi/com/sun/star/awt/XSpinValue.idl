/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XSpinValue_idl__
#define __com_sun_star_awt_XSpinValue_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/awt/XAdjustmentListener.idl>
#include <com/sun/star/lang/NoSupportException.idl>


 module com {  module sun {  module star {  module awt {


/** gives access to the value and settings of a control which is associated with
    a spinnable value.
 */
interface XSpinValue : com::sun::star::uno::XInterface
{

    /** registers an adjustment event listener.
     */
    void addAdjustmentListener( [in] com::sun::star::awt::XAdjustmentListener listener );


    /** unregisters an adjustment event listener.
     */
    void removeAdjustmentListener( [in] com::sun::star::awt::XAdjustmentListener listener );


    /** sets the current value of the control
     */
    void setValue( [in] long value );


    /** sets the value and value range of the control

        @see setValue
        @see setMinimum
        @see setMaximum
     */
    void setValues( [in] long minValue, [in] long maxValue, [in] long currentValue );


    /** returns the current value of the control.
     */
    long getValue();


    /** sets the  minimum value which can be set on the control
     */
    void setMinimum( [in] long minValue );


    /** sets the  maximum value which can be set on the control
     */
    void setMaximum( [in] long maxValue );


    /** returns the currently set minimum value of the control
     */
    long getMinimum();


    /** returns the currently set maximum value of the control
     */
    long getMaximum();


    /** sets the value by which the current value of the control
        should be incremented or decremented upon spinning.
     */
    void setSpinIncrement( [in] long spinIncrement );


    /** returns the value by which the current value of the control
        should be incremented or decremented upon spinning.
     */
    long getSpinIncrement();


    /** controls the orientation of the control
        @param orientation
            one of the ScrollBarOrientation values specifying the orientation
        @throws com::sun::star::lang::NoSupportException
            in case the given orientation is not supported
     */
    void setOrientation( [in] long orientation )
            raises( com::sun::star::lang::NoSupportException );


    /** returns the current orientation of the control
     */
    long getOrientation();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
