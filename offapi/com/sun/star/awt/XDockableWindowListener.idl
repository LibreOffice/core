/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XDockableWindowListener_idl__
#define __com_sun_star_awt_XDockableWindowListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/awt/DockingData.idl>
#include <com/sun/star/awt/EndDockingEvent.idl>
#include <com/sun/star/awt/DockingEvent.idl>
#include <com/sun/star/awt/EndPopupModeEvent.idl>
#include <com/sun/star/lang/EventObject.idl>


module com {  module sun {  module star {  module awt {


/** makes it possible to receive docking events.
 */
interface XDockableWindowListener: com::sun::star::lang::XEventListener
{

    /** is invoked when the docking procedure starts.
     */
    void startDocking( [in] com::sun::star::awt::DockingEvent e );


    /** is invoked during the docking procedure when the window has been moved.

        on return the DockingData must contain either the old tracking rectangle
        or a changed rectangle if required, additionally it must indicate if
        the window should be docked or floating

        Note: the tracking rectangle indicates to the user where the window would
            be placed if he releases the mouse.

     */
    DockingData docking( [in] com::sun::star::awt::DockingEvent e );


    /** is invoked when the docking procedure ends.
        aWindowRect contains the new position and size of the window
     */
    void endDocking( [in] com::sun::star::awt::EndDockingEvent e );


    /** is invoked when the floating mode is about to be changed between
            floating and docked or vice versa

        if returned FALSE the floating mode will not be changed
     */
    boolean prepareToggleFloatingMode( [in] com::sun::star::lang::EventObject e );


    /** is invoked when the floating mode is changed between
            floating and docked or vice versa
     */
    void toggleFloatingMode( [in] com::sun::star::lang::EventObject e );


    /** is invoked when the window was actively closed
     */
    void closed( [in] com::sun::star::lang::EventObject e );


    /** is invoked when the window currently is in pop-up mode and wants to be undocked
        or closed
     */
    void endPopupMode( [in] com::sun::star::awt::EndPopupModeEvent e );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
