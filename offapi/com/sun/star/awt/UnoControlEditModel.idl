/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_UnoControlEditModel_idl__
#define __com_sun_star_awt_UnoControlEditModel_idl__

#include <com/sun/star/awt/FontDescriptor.idl>
#include <com/sun/star/awt/UnoControlModel.idl>

#include <com/sun/star/util/Color.idl>

#include <com/sun/star/style/VerticalAlignment.idl>


 module com {  module sun {  module star {  module awt {


/** specifies the standard model of an <type>UnoControlEdit</type>.
 */
published service UnoControlEditModel
{
    service com::sun::star::awt::UnoControlModel;


    /** specifies the horizontal alignment of the text in the control.

        <pre>
        0: left
        1: center
        2: right
        </pre>
     */
    [property] short Align;


    /** If set to true an horizontal scrollbar will be added automatically
        when needed.

        @since OOo 2.3
     */
    [optional, property] boolean AutoHScroll;


    /** If set to true an vertical scrollbar will be added automatically
        when needed.

        @since OOo 2.3
     */
    [optional, property] boolean AutoVScroll;


    /** specifies the background color (RGB) of the control.
     */
    [property] com::sun::star::util::Color BackgroundColor;


    /** specifies the border style of the control.

        <pre>
        0: No border
        1: 3D border
        2: simple border
        </pre>
     */
    [property] short Border;


    /** specifies the color of the border, if present

        <p>Not every border style (see <member>Border</member>) may support coloring.
        For instance, usually a border with 3D effect will ignore the BorderColor setting.</p>

        @since OOo 2.0
     */
    [optional, property] long BorderColor;


    /** specifies the echo character for a password edit field.
     */
    [optional, property] short EchoChar;


    /** determines whether the control is enabled or disabled.
     */
    [property] boolean Enabled;


    /** specifies the font attributes of the text in the control.
     */
    [property] com::sun::star::awt::FontDescriptor FontDescriptor;


    /** specifies the <type scope="com::sun::star::text">FontEmphasis</type>
        value of the text in the control.
     */
    [property] short FontEmphasisMark;


    /** specifies the <type scope="com::sun::star::text">FontRelief</type>
        value of the text in the control.
     */
    [property] short FontRelief;


    /** specifies if hard line breaks will be returned in the
        <member>XTextComponent::getText</member> method.
     */
    [property] boolean HardLineBreaks;


    /** specifies the help text of the control.
     */
    [property] string HelpText;


    /** specifies the help URL of the control.
     */
    [property] string HelpURL;


    /** specifies whether the selection in the control should be hidden when
        the control is not active (focused).

        @since OOo 2.0
     */
    [optional, property] boolean HideInactiveSelection;


    /** specifies if the content of the control can be scrolled in
        the horizontal direction.
     */
    [property] boolean HScroll;


    /** specifies which line end type should be used for multi line text

        <p>Controls working with this model care for this setting when the user enters
        text. Every line break entered into the control will be treated according to this
        setting, so that the <member>Text</member> property always contains only
        line ends in the format specified.</p>

        <p>Possible values are all constants from the <type>LineEndFormat</type> group.</p>

        <p>Note that this setting is usually not relevant when you set new text via the API.
        No matter which line end format is used in this new text then, usual control implementations
        should recognize all line end formats and display them properly.</p>

        @since OOo 2.0
     */
    [optional, property] short LineEndFormat;


    /** specifies the maximum character count.

        <p>There's no limitation, if set to 0.</p>
     */
    [property] short MaxTextLen;


    /** specifies that the control may have more than one line.
     */
    [property] boolean MultiLine;


    /** specifies whether the control paints it background or not.

        @since OOo 2.3
     */
    [optional, property] boolean PaintTransparent;


    /** specifies that the control will be printed with the document.
     */
    [property] boolean Printable;


    /** specifies that the content of the control cannot be modified by the user.
     */
    [property] boolean ReadOnly;


    /** specifies that the control can be reached with the TAB key.
     */
    [property] boolean Tabstop;


    /** specifies the text displayed in the control.
     */
    [property] string Text;


    /** specifies the text color (RGB) of the control.
     */
    [property] com::sun::star::util::Color TextColor;


    /** specifies the text line color (RGB) of the control.
     */
    [property] com::sun::star::util::Color TextLineColor;


    /** specifies if the content of the control can be scrolled in
        the vertical direction.
     */
    [property] boolean VScroll;

    /** denotes the writing mode used in the control, as specified in the
        <type scope="com::sun::star::text">WritingMode2</type> constants group.

        <p>Only <member scope="com::sun::star::text">WritingMode2::LR_TB</member> and
        <member scope="com::sun::star::text">WritingMode2::RL_TB</member> are supported at the moment.</p>

        @since OOo 3.1
    */
    [optional, property] short WritingMode;


    /** specifies the vertical alignment of the text in the control.

        @since OOo 3.3
     */
    [optional, property] com::sun::star::style::VerticalAlignment VerticalAlign;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
