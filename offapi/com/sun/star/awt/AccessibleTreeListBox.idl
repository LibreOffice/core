/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/**
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_awt_AccessibleTreeListBox_idl__
#define __com_sun_star_awt_AccessibleTreeListBox_idl__

#include <com/sun/star/accessibility/AccessibleContext.idl>


module com { module sun { module star { module accessibility {

 interface XAccessibleSelection;
 interface XAccessibleComponent;

}; }; }; };

module com { module sun { module star { module awt {

/** specifies accessibility support for a tree list box.

    @see com::sun::star::accessibility::AccessibleContext

    @see com::sun::star::accessibility::XAccessibleComponent
    @see com::sun::star::accessibility::XAccessibleSelection

    @since OOo 1.1.2
*/
service AccessibleTreeListBox
{
    /** This interface gives access to the structural information of a tree list box:

       <ul>
       <li>Role: The role of a tree list box is <const
           scope="com::sun::star::accessibility"
           >AccessibleRole::TREE</const>.</li>
       <li>Name: The name of a tree list box is its localized label.</li>
       <li>Description: The description of a tree list box is its localized
           help text.</li>
       <li>Children: There exists children of type <type scope="com::sun::star::awt">AccessibleTreeListBoxEntry</type>.
        </li>
       <li>Parent: The parent is the window that contains the tree list box.</li>
       <li>Relations: There are no relations.</li>
       <li>States: The states supported by this service are
           <ul>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::DEFUNC</const>
               is set if the object has already been disposed
               and subsequent calls to this object result in
               <type scope="com::sun::star::lang">DisposedException</type>
               exceptions.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::ENABLED</const> is set
               if the object is enabled.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::FOCUSABLE</const> is always set.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::FOCUSED</const> is set
               if the object currently has the keyboard focus.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::ACTIVE</const> is set
               if a child has currently the focus.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::RESIZABLE</const> is set
               if the object can be resized.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::SHOWING</const> is set
               if the object is displayed on the screen.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::VISIBLE</const> is always set.</li>
           <li><const scope="com::sun::star::accessibility"
               >AccessibleStateType::MULTI_SELECTABLE</const> is set when multi selection is enabled.</li>
           </ul>
           </li>
       </ul>
    */
    service   com::sun::star::accessibility::AccessibleContext;

    interface com::sun::star::accessibility::XAccessibleComponent;

    /** This interface gives access to the selectable children of a
        tree list box.
     */
    interface com::sun::star::accessibility::XAccessibleSelection;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
