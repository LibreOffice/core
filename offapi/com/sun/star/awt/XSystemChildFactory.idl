/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_awt_XSystemChildFactory_idl__
#define __com_sun_star_awt_XSystemChildFactory_idl__

#include <com/sun/star/uno/XInterface.idl>



module com { module sun { module star { module awt {


 published interface XWindowPeer;

/** specifies a factory interface for creating system child windows.
 */
published interface XSystemChildFactory : com::sun::star::uno::XInterface
{

    /** creates a system child window.

        @returns
        the created window.

        @param Parent
        a system-specific handle to a window.

        <p>You must check the machine ID and the process ID.<BR>
        WIN32: HWND.<BR>
        WIN16: HWND.<BR>

        JAVA: global reference to a java.awt.Component
        object provided from the JNI-API.<BR>

        MAC: Not supported.<BR></p>

        @param ProcessId
        the process identifier. Use the sal_getGlobalProcessId
        function of the RTL library.

        @param SystemType
        one constant out of the constant group
        <type scope="com::sun::star::lang">SystemDependent</type>.
    */
     XWindowPeer createSystemChild( [in] any Parent, [in] sequence< byte > ProcessId, [in] short SystemType );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
