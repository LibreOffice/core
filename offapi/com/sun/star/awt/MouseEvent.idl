/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_MouseEvent_idl__
#define __com_sun_star_awt_MouseEvent_idl__

#include <com/sun/star/awt/InputEvent.idl>



 module com {  module sun {  module star {  module awt {


/** specifies an event from the mouse.

    <p>This event is also used for pop-up menu requests on objects.
    See #PopupTrigger for details.</p>

    @see XMouseListener
    @see XMouseMotionListener
    @see InputEvent
 */
published struct MouseEvent: com::sun::star::awt::InputEvent
{

    /** contains the pressed mouse buttons.

        <p>Zero ore more constants from the
        com::sun::star::awt::MouseButton group.</p>
     */
    short Buttons;


    /** contains the x coordinate location of the mouse.
     */
    long X;


    /** contains the y coordinate location of the mouse.
     */
    long Y;


    /** contains the number of mouse clicks associated with event.
     */
    long ClickCount;


    /** specifies if this event is a pop-up menu trigger event.

        <p>If this member is `TRUE`, the event describes a request for a pop-up menu,
        also known as context menu, on an object.</p>

        <p>In this case, X and Y describe the position
        where the request was issued. If those members are <code>-1</code>, then the
        request was issued using the keyboard, by pressing the operating-system dependent
        key combination for this purpose.</p>

        @see XMouseListener::mousePressed
    */
    boolean PopupTrigger;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
