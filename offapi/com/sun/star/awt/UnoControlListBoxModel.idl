/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_UnoControlListBoxModel_idl__
#define __com_sun_star_awt_UnoControlListBoxModel_idl__

#include <com/sun/star/awt/FontDescriptor.idl>
#include <com/sun/star/awt/UnoControlModel.idl>
#include <com/sun/star/util/Color.idl>
#include <com/sun/star/awt/XItemList.idl>


 module com {  module sun {  module star {  module awt {


/** specifies the standard model of an UnoControlListBox.
 */
published service UnoControlListBoxModel
{
    service com::sun::star::awt::UnoControlModel;


    /** specifies the horizontal alignment of the text in the control.

        <pre>
        0: left
        1: center
        2: right
        </pre>
     */
    [optional, property] short Align;


    /** specifies the background color (RGB) of the control.
     */
    [property] com::sun::star::util::Color BackgroundColor;


    /** specifies the border style of the control.

        <pre>
        0: No border
        1: 3D border
        2: simple border
        </pre>
     */
    [property] short Border;


    /** specifies the color of the border, if present

        <p>Not every border style (see #Border) may support coloring.
        For instance, usually a border with 3D effect will ignore the BorderColor setting.</p>

        @since OOo 2.0
     */
    [optional, property] long BorderColor;


    /** specifies if the control has a drop down button.
     */
    [property] boolean Dropdown;


    /** determines whether the control is enabled or disabled.
     */
    [property] boolean Enabled;


    /** specifies the font attributes of the text in the control.
     */
    [property] com::sun::star::awt::FontDescriptor FontDescriptor;


    /** specifies the com::sun::star::text::FontEmphasis
        value of the text in the control.
     */
    [property] short FontEmphasisMark;


    /** specifies the com::sun::star::text::FontRelief
        value of the text in the control.
     */
    [property] short FontRelief;


    /** specifies the help text of the control.
     */
    [property] string HelpText;


    /** specifies the help URL of the control.
     */
    [property] string HelpURL;


    /** specifies the maximum line count displayed in the drop down box.
     */
    [property] short LineCount;


    /** specifies if more than one entry can be selected.
     */
    [property] boolean MultiSelection;


    /** specifies that the control will be printed with the document.
     */
    [property] boolean Printable;


    /** specifies that the content of the control cannot be modified by the user.
     */
    [property] boolean ReadOnly;


    /** specifies the sequence of selected items, identified by the position.
     */
    [property] sequence<short> SelectedItems;


    /** specifies the list of items.
     */
    [property] sequence<string> StringItemList;


    /** specifies that the control can be reached with the TAB key.
     */
    [property] boolean Tabstop;


    /** specifies the text color (RGB) of the control.
     */
    [property] com::sun::star::util::Color TextColor;


    /** specifies the text line color (RGB) of the control.
     */
    [property] com::sun::star::util::Color TextLineColor;

    /** denotes the writing mode used in the control, as specified in the
        com::sun::star::text::WritingMode2 constants group.

        <p>Only com::sun::star::text::WritingMode2::LR_TB and
        com::sun::star::text::WritingMode2::RL_TB are supported at the moment.</p>

        @since OOo 3.1
    */
    [optional, property] short WritingMode;

    /** defines how the mouse wheel can be used to scroll through the control's content.

        <p>Usually, the mouse wheel scroll through the control's entry list. Using this property,
        and one of the MouseWheelBehavior constants, you can control under which circumstances
        this is possible.</p>
    */
    [optional, property] short MouseWheelBehavior;

    /** allows manipulating the list of items in the list box more fine-grained than the
        #StringItemList property.

        @since OOo 3.3
    */
    [optional] interface XItemList;

    /** specifies where an item separator - a horizontal line - is drawn.

        <p>If this is not `NULL`, then a horizontal line will be drawn between the item at the given position,
        and the following item.</p>

        @since OOo 3.3
    */
    [optional, property, maybevoid] short ItemSeparatorPos;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
