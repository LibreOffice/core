/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/**
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XMenu_idl__
#define __com_sun_star_awt_XMenu_idl__

#include <com/sun/star/uno/XInterface.idl>



 module com {  module sun {  module star {  module awt {

 published interface XPopupMenu;
 published interface XMenuListener;


/** specifies a simple menu.
 */
published interface XMenu: com::sun::star::uno::XInterface
{

    /** adds the specified menu listener to receive events from this menu.
     */
    void addMenuListener( [in] XMenuListener xListener );


    /** removes the specified menu listener so that it no longer
        receives events from this menu.
     */
    void removeMenuListener( [in] XMenuListener xListener );


    /** inserts an item into the menu.

        <p>The item is appended if the position is greater than or equal to
        <code>getItemCount()</code> or if it is negative.</p>
     */
    void insertItem( [in] short nItemId,
             [in] string aText,
             [in] short nItemStyle,
             [in] short nPos );


    /** removes one or more items from the menu.
     */
    void removeItem( [in] short nPos,
             [in] short nCount );


    /** returns the number of items in the menu.
     */
    short getItemCount();


    /** returns the id of the item at the specified position.
     */
    short getItemId( [in] short nPos );


    /** returns the position of the item with the specified id.
     */
    short getItemPos( [in] short nId );


    /** enables or disables the menu item.
     */
    void enableItem( [in] short nItemId,
             [in] boolean bEnable );


    /** returns the state of the menu item.
     */
    boolean isItemEnabled( [in] short nItemId );


    /** sets the text for the menu item.
     */
    void setItemText( [in] short nItemId,
             [in] string aText );


    /** returns the string for the given item id.
     */
    string getItemText( [in] short nItemId );


    /** sets the pop-up menu for a specified menu item.
     */
    void setPopupMenu( [in] short nItemId,
             [in] XPopupMenu aPopupMenu );


    /** returns the pop-up menu from the menu item.
     */
    XPopupMenu getPopupMenu( [in] short nItemId );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
