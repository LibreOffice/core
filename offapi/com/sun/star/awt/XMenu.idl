/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XMenu_idl__
#define __com_sun_star_awt_XMenu_idl__

#include <com/sun/star/uno/XInterface.idl>



 module com {  module sun {  module star {  module awt {

 published interface XPopupMenu;
 published interface XMenuListener;


/** specifies a simple menu.
 */
published interface XMenu: com::sun::star::uno::XInterface
{

    /** adds the specified menu listener to receive events from this menu.
     */
    [oneway] void addMenuListener( [in] XMenuListener xListener );


    /** removes the specified menu listener so that it no longer
        receives events from this menu.
     */
    [oneway] void removeMenuListener( [in] XMenuListener xListener );


    /** inserts an item into the menu.

        <p>The item is appended if the position is greater than or equal to
        <code>getItemCount()</code> or if it is negative.</p>
     */
    [oneway] void insertItem( [in] short nItemId,
             [in] string aText,
             [in] short nItemStyle,
             [in] short nPos );


    /** removes one or more items from the menu.
     */
    [oneway] void removeItem( [in] short nPos,
             [in] short nCount );


    /** returns the number of items in the menu.
     */
    short getItemCount();


    /** returns the id of the item at the specified position.
     */
    short getItemId( [in] short nPos );


    /** returns the position of the item with the specified id.
     */
    short getItemPos( [in] short nId );


    /** enables or disables the menu item.
     */
    [oneway] void enableItem( [in] short nItemId,
             [in] boolean bEnable );


    /** returns the state of the menu item.
     */
    boolean isItemEnabled( [in] short nItemId );


    /** sets the text for the menu item.
     */
    [oneway] void setItemText( [in] short nItemId,
             [in] string aText );


    /** returns the string for the given item id.
     */
    string getItemText( [in] short nItemId );


    /** sets the pop-up menu for a specified menu item.
     */
    [oneway] void setPopupMenu( [in] short nItemId,
             [in] XPopupMenu aPopupMenu );


    /** returns the pop-up menu from the menu item.
     */
    XPopupMenu getPopupMenu( [in] short nItemId );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
