/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_DockingEvent_idl__
#define __com_sun_star_awt_DockingEvent_idl__

#include <com/sun/star/lang/EventObject.idl>

#include <com/sun/star/awt/Rectangle.idl>
#include <com/sun/star/awt/Point.idl>


 module com {  module sun {  module star {  module awt {


/** specifies a docking event.
 */
struct DockingEvent: com::sun::star::lang::EventObject
{

    /** specifies the current tracking rectangle
     */
    com::sun::star::awt::Rectangle TrackingRectangle;


    /** specifies the current mouse position in frame coordinates
     */
    com::sun::star::awt::Point MousePos;


    /** specifies if the layout should be adjusted immediately
     */
    boolean bLiveMode;


    /** specifies if the docking procedure is interactive which means that
        the user is currently dragging the window to a new position
        if this member is `FALSE` the window will be docked or undocked immediately
        using the returned tracking rectangle
     */
    boolean bInteractive;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
