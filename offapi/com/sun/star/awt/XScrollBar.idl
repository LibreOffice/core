/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XScrollBar_idl__
#define __com_sun_star_awt_XScrollBar_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/awt/XAdjustmentListener.idl>



 module com {  module sun {  module star {  module awt {


/** gives access to the value and settings of a scroll bar and makes it possible
    to register adjustment event listeners.
 */
published interface XScrollBar: com::sun::star::uno::XInterface
{

    /** registers an adjustment event listener.
     */
    void addAdjustmentListener( [in] com::sun::star::awt::XAdjustmentListener l );


    /** unregisters an adjustment event listener.
     */
    void removeAdjustmentListener( [in] com::sun::star::awt::XAdjustmentListener l );


    /** sets the scroll value of the scroll bar.
     */
    void setValue( [in] long n );


    /** sets the scroll value, visible area and maximum scroll value
        of the scroll bar.
     */
    void setValues( [in] long nValue,
             [in] long nVisible,
             [in] long nMax );


    /** returns the current scroll value of the scroll bar.
     */
    long getValue();


    /** sets the maximum scroll value of the scroll bar.
     */
    void setMaximum( [in] long n );


    /** returns the currently set maximum scroll value of the scroll bar.
     */
    long getMaximum();


    /** sets the increment for a single line move.
     */
    void setLineIncrement( [in] long n );


    /** returns the currently set increment for a single line move.
     */
    long getLineIncrement();


    /** sets the increment for a block move.
     */
    void setBlockIncrement( [in] long n );


    /** returns the currently set increment for a block move.
     */
    long getBlockIncrement();


    /** sets the visible size of the scroll bar.
     */
    void setVisibleSize( [in] long n );


    /** returns the currently visible size of the scroll bar.
     */
    long getVisibleSize();


    /** sets the ScrollBarOrientation of the scroll bar.
     */
    void setOrientation( [in] long n );


    /** returns the currently set ScrollBarOrientation of the
        scroll bar.
     */
    long getOrientation();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
