/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XTextComponent_idl__
#define __com_sun_star_awt_XTextComponent_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/awt/XTextListener.idl>

#include <com/sun/star/awt/Selection.idl>



 module com {  module sun {  module star {  module awt {


/** gives access to the text of a component and makes it possible
    to register event listeners.
 */
published interface XTextComponent: com::sun::star::uno::XInterface
{

    /** registers a text event listener.
     */
    void addTextListener( [in] com::sun::star::awt::XTextListener l );


    /** unregisters a text event listener.
     */
    void removeTextListener( [in] com::sun::star::awt::XTextListener l );


    /** sets the text of the component.
     */
    void setText( [in] string aText );


    /** inserts text at the specified position.
     */
    void insertText( [in] com::sun::star::awt::Selection Sel,
             [in] string Text );


    /** returns the text of the component.
     */
    string getText();


    /** returns the currently selected text.
     */
    string getSelectedText();


    /** sets the user selection.
     */
    void setSelection( [in] com::sun::star::awt::Selection aSelection );


    /** returns the current user selection.
     */
    com::sun::star::awt::Selection getSelection();


    /** returns if the text is editable by the user.
     */
    boolean isEditable();


    /** makes the text editable for the user or read-only.
     */
    void setEditable( [in] boolean bEditable );


    /** sets the maximum text length.
     */
    void setMaxTextLen( [in] short nLen );


    /** returns the currently set maximum text length.
     */
    short getMaxTextLen();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
