/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_tree_XTreeDataModel_idl__
#define __com_sun_star_awt_tree_XTreeDataModel_idl__

#include <com/sun/star/awt/tree/XTreeDataModelListener.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/awt/tree/XTreeNode.idl>


module com {  module sun {  module star {  module awt {  module tree {


/** An instance of this interface is used by the TreeControl to
    retrieve the hierarchical outline data that is displayed in the actual control.

    <p>If you implement your own XTreeDataModel you need to notify registered
    XTreeDataModelListener if your model changes after the control is created.
    If this is not done correctly the TreeControl will not update the data properly.</p>

    If you do not need your own model implementation, you can also use the MutableTreeDataModel.
*/
interface XTreeDataModel : ::com::sun::star::lang::XComponent
{
    /** Returns the root of the tree.
        <p>Returns null only if the tree has no nodes.

        @returns
            the root of the tree
    */
    XTreeNode getRoot();

    /** Adds a listener for the TreeDataModelEvent posted after the tree changes.

        @param Listener
            the listener to add.
    */
    void addTreeDataModelListener( [in] XTreeDataModelListener Listener );


    /** Removes a listener previously added with addTreeDataModelListener().

        @param Listener
            the listener to remove.
    */
    void removeTreeDataModelListener( [in] XTreeDataModelListener Listener );

};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
