/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_tree_XTreeDataModel_idl__
#define __com_sun_star_awt_tree_XTreeDataModel_idl__

#include <com/sun/star/awt/tree/XTreeDataModelListener.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/awt/tree/XTreeNode.idl>


module com {  module sun {  module star {  module awt {  module tree {


/** An instance of this interface is used by the <type>TreeControl</type> to
    retrieve the hierarchical outline data that is displayed in the actual control.

    <p>If you implement your own <type>XTreeDataModel</type> you need to notify registered
    <type>XTreeDataModelListener</type> if your model changes after the control is created.
    If this is not done correctly the <type>TreeControl</type> will not update the data properly.</p>

    If you do not need your own model implementation, you can also use the <type>MutableTreeDataModel</type>.
*/
interface XTreeDataModel : ::com::sun::star::lang::XComponent
{
    /** Returns the root of the tree.
        <p>Returns null only if the tree has no nodes.

        @returns
            the root of the tree
    */
    XTreeNode getRoot();

    /** Adds a listener for the <type>TreeDataModelEvent</type> posted after the tree changes.

        @param Listener
            the listener to add.
    */
    void addTreeDataModelListener( [in] XTreeDataModelListener Listener );


    /** Removes a listener previously added with <method>addTreeDataModelListener()</method>.

        @param Listener
            the listener to remove.
    */
    void removeTreeDataModelListener( [in] XTreeDataModelListener Listener );

};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
