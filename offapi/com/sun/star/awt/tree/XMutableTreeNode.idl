/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_tree_XMutableTreeNode_idl__
#define __com_sun_star_awt_tree_XMutableTreeNode_idl__

#include <com/sun/star/awt/tree/XTreeNode.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/lang/IndexOutOfBoundsException.idl>


module com {  module sun {  module star {  module awt { module tree {


/** Represents a mutable tree node as used by the <type>MutableTreeDataModel</type>
 */
interface XMutableTreeNode : XTreeNode
{
    /** appends <var>ChildNode</var> to this instance.

        @throws ::com::sun::star::lang::IllegalArgumentException
            if <var>ChildNode</var> is not a valid node of the corresponding <type>XTreeDataModel</type>.
    */
    void appendChild( [in] XMutableTreeNode ChildNode )
        raises( com::sun::star::lang::IllegalArgumentException );

    /** inserts <var>ChildNode</var> to this instance at the given index.

        @param Index
            the index where the node will be inserted to this instance.

        @throws ::com::sun::star::lang::IllegalArgumentException
            if <var>ChildNode</var> is not a valid node of the corresponding <type>XTreeDataModel</type>.

        @throws ::com::sun::star::lang::IndexOutOfBoundsException
            if <var>Index</var> is less than 0 or greater then <member>XTreeNode::getChildCount()</member>.
    */
    void insertChildByIndex( [in] long Index, [in] XMutableTreeNode ChildNode )
        raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::lang::IndexOutOfBoundsException );

    /** removes the node from this instance at the specified index.

        @param Index
            the index of the node to be removed from this instance.

        @throws ::com::sun::star::lang::IndexOutOfBoundsException
            if <var>Index</var> is less than 0 or greater then <member>XTreeNode::getChildCount()</member>.
     */
    void removeChildByIndex( [in] long Index )
            raises( com::sun::star::lang::IndexOutOfBoundsException );

    /** Changes if the children of this node are created on demand.

        @see XTreeNode::hasChildrenOnDemand()
    */
    void setHasChildrenOnDemand( [in] boolean ChildrenOnDemand );

    /** sets the display value of this node */
    void setDisplayValue( [in] any Value );

    /** Stores an implementation dependent value.

        <p>You can use this attribute to store data for this node that
        is independent of the display value</p>
    */
    [attribute] any DataValue;

    /** The URL for a graphic that is rendered before the text part of this node.
        <p>If this URL is empty, no graphic is rendered.
    */
    void setNodeGraphicURL( [in] string URL );

    /** The URL for a graphic that is rendered to visualize expanded non leaf nodes.
        <p>If <var>URL</var> is empty, <member>XTreeControl::DefaultExpandedGraphicURL</member> is used.
    */
    void setExpandedGraphicURL( [in] string URL );

    /** The URL for a graphic that is rendered to visualize collapsed non leaf nodes.
        <p>If <var>URL</var> is empty, <member>XTreeControl::DefaultCollapsedGraphicURL</member> is used.
    */
    void setCollapsedGraphicURL( [in] string URL );
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
