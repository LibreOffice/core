/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XSystemDependentMenuPeer_idl__
#define __com_sun_star_awt_XSystemDependentMenuPeer_idl__

#include <com/sun/star/uno/XInterface.idl>



 module com {  module sun {  module star {  module awt {


/** provides access to the system dependent implementation of the window.

    @see com::sun::star::lang::SystemDependent
    @see WindowAttribute
    @see WindowAttribute::SYSTEMDEPENDENT
 */
interface XSystemDependentMenuPeer: com::sun::star::uno::XInterface
{

    /** returns a system-specific window handle.

        @returns
        a system-specific handle to a menu
        or 0 if the menu is not in the same process.

        <p>You must check the machine ID and the process ID.<BR>
        WIN32: Returns an HMENU if possible, otherwise 0.<BR>
        WIN16: Returns an HMENU if possible, otherwise 0.<BR>

        @param ProcessId
        the process identifier. Use the sal_getGlobalProcessId
        function of the RTL library.

        @param SystemType
        one constant out of the constant group
        com::sun::star::lang::SystemDependent.
     */
    any getMenuHandle( [in] sequence< byte > ProcessId, [in] short SystemType );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
