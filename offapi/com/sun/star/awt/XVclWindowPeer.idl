/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_awt_XVclWindowPeer_idl__
#define __com_sun_star_awt_XVclWindowPeer_idl__

#include <com/sun/star/awt/XWindowPeer.idl>

#include <com/sun/star/util/Color.idl>
#include <com/sun/star/awt/FontDescriptor.idl>



 module com {  module sun {  module star {  module awt {


/** gives access to the VCL window implementation.

    @deprecated
 */
published interface XVclWindowPeer: com::sun::star::awt::XWindowPeer
{

    /** returns `TRUE` if the window peer is a child, `FALSE` otherwise.
     */
    boolean isChild( [in] com::sun::star::awt::XWindowPeer Peer );


    /** sets the design mode for use in a design editor.
     */
    void setDesignMode( [in] boolean bOn );


    /** returns `TRUE` if the window peer is in design mode,
        `FALSE` otherwise.
     */
    boolean isDesignMode();


    /** enables clipping of sibling windows.
     */
    void enableClipSiblings( [in] boolean bClip );


    /** sets the foreground color.
     */
    void setForeground( [in] com::sun::star::util::Color Color );


    /** sets the control font.
     */
    void setControlFont( [in] com::sun::star::awt::FontDescriptor aFont );


    /** returns the font, foreground and background color for the specified
        type.
     */
    void getStyles( [in] short nType,
             [out] com::sun::star::awt::FontDescriptor Font,
             [out] com::sun::star::util::Color ForegroundColor,
             [out] com::sun::star::util::Color BackgroundColor );


    /** sets the value of the property with the specified name.
     */
    void setProperty( [in] string PropertyName,
             [in] any Value );


    /** returns the value of the property with the specified name.
     */
    any getProperty( [in] string PropertyName );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
