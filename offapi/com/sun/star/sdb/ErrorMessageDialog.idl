/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sdb_ErrorMessageDialog_idl__
#define __com_sun_star_sdb_ErrorMessageDialog_idl__

#include <com/sun/star/awt/XWindow.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/ui/dialogs/XExecutableDialog.idl>

module com {  module sun {  module star {  module sdb {

/** provides a dialog for displaying database related exceptions.
    <p>
    If applications use any of the functionality provided in the modules
    com.sun.star::sdbc, com.sun.star::sdbcx and com.sun.star::sdb,
    they will - sooner or later - encounter
    com::sun::star::sdbc::SQLException
    's.
    <br/>
    These exceptions can be chained, so the information wrapped in one single
    com::sun::star::sdbc::SQLException
    can be rather complex (e.g., every instance where such an exception is passing before it is finally caught, could
    append a
    com::sun::star::sdb::SQLContext
    to explain what it was doing), and they should be
    presented to the user in a consistent way.
    <br/>
    This can be reached by using this service.
    @see com::sun::star::sdb::InteractionHandler
    </p>
*/
published service ErrorMessageDialog : com::sun::star::ui::dialogs::XExecutableDialog
{
    /** allows initializing the dialog
        <p>
        You do not need to call the initialize method directly, instead you may use the createInstanceWithArguments
        method of your com::sun::star::lang::XMultiServiceFactory.
        </p>
        <p>
        You specify a parameter by passing one (or more)
        com::sun::star::beans::PropertyValue
        object(s) to the initialize method, where the <em>Name</em> field contains a string describing which aspect
        you want to affect, and the <em>Value</em> field containing a value.
        <br/>
        Imagine the initialization values, as if you use
        com::sun::star::beans">XPropertySet::setPropertyValue()
         of the
        com::sun::star::beans::XPropertySet
        interface ...
        <br/>
        allowed parameters are
        <ul>
            <li><b>title</b><br/>
                String describing the initial title of the dialog. If not specified, a default title is used.
            </li>
            <li><b>parentWindow</b><br/>
                com::sun::star::awt::XWindow
                describing the parent window to use for the dialog.
            </li>
            <li><b>sqlException</b><br/>
                com::sun::star::sdbc::SQLException
                describing the error which is being displayed.<br/>
                When initializing this value, you may use any derivative of
                com::sun::star::sdbc::SQLException.
            </li>
        </ul>
        </p>
    */
    create([in] string initialTitle, [in] com::sun::star::awt::XWindow parentWindow, [in] any sqlException);
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
