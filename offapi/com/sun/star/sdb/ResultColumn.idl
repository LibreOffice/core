/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_sdb_ResultColumn_idl__
#define __com_sun_star_sdb_ResultColumn_idl__

#include <com/sun/star/sdbcx/Column.idl>

#include <com/sun/star/sdb/ColumnSettings.idl>

 module com {  module sun {  module star {  module sdb {


/** describes a column of a result set.
 */
published service ResultColumn
{
    service com::sun::star::sdbcx::Column;


    /** [optional], access to layout settings for a column.
     */
    service com::sun::star::sdb::ColumnSettings;


    /** indicates whether the column can be used in a Where clause.
     */
    [readonly, property] boolean IsSearchable;


    /** indicates whether values in the column are signed numbers.
     */
    [readonly, property] boolean IsSigned;


    /** indicates that a column is case sensitive.
     */
    [readonly, property] boolean IsCaseSensitive;


    /** indicates the column's normal max width in chars.
     */
    [readonly, property] long DisplaySize;


    /** gets the suggested column title for use in printouts and
        displays.
     */
    [readonly, property] string Label;


    /** indicates whether a column is definitely, not writable.
     */
    [readonly, property] boolean IsReadOnly;


    /** indicates whether it is possible for a write on the column to succeed.
     */
    [readonly, property] boolean IsWritable;


    /** indicates whether a write on the column will definitely succeed.
     */
    [readonly, property] boolean IsDefinitelyWritable;


    /** returns the fully-qualified name of the service whose instances
        are manufactured if the method
        com::sun::star::sdbc::XRow::getObject)=
        is called to retrieve a value from the column.
     */
    [readonly, property] string ServiceName;


    /** gets a column's table name.
     */
    [readonly, property] string TableName;


    /** gets a column's schema name.
     */
    [readonly, property] string SchemaName;


    /** gets a column's table's catalog name.
     */
    [readonly, property] string CatalogName;
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
