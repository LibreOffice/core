/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
************************************************************************/

#ifndef __com_sun_star_sdb_XSubDocument_idl__
#define __com_sun_star_sdb_XSubDocument_idl__

#include <com/sun/star/lang/WrappedTargetException.idl>
#include <com/sun/star/lang/XComponent.idl>


module com { module sun { module star { module sdb {


/** allows operating on a sub document of an <type>OfficeDatabaseDocument</type>

    @since OOo 3.1
 */
interface XSubDocument
{
    /** opens the sub document

        <p>Note that opening the document means it is displayed in an own top-level frame
        on the desktop.</p>

        @return
            the sub document, usually an <type scope="com::sun::star::frame">XModel</type>,
            or an <type scope="com::sun::star::frame">XController</type> if the sub document
            does not have an own model.

        @throws ::com::sun::star::lang::WrappedTargetException
            if an error occurs during opening the document
    */
    ::com::sun::star::lang::XComponent
            open()
                raises( ::com::sun::star::lang::WrappedTargetException );

    /** opens the sub document in design mode

        @return
            the sub document, usually an <type scope="com::sun::star::frame">XModel</type>,
            or an <type scope="com::sun::star::frame">XController</type> if the sub document
            does not have an own model.

        @throws ::com::sun::star::lang::WrappedTargetException
            if an error occurs during opening the document
    */
    ::com::sun::star::lang::XComponent
            openDesign()
                raises( ::com::sun::star::lang::WrappedTargetException );

    /** stores the sub document, if it had previously been opened in either mode

        @throws ::com::sun::star::lang::WrappedTargetException
            if an error occurs during storing the document
    */
    void    store()
                raises( ::com::sun::star::lang::WrappedTargetException );

    /** closes the sub document, if it had previously been opened in either mode

        @return <TRUE/> if and only if the document could be closed, <FALSE/> otherwise,
            e.g. if the closing has been vetoed by the user.

        @throws ::com::sun::star::lang::WrappedTargetException
            if an error occurs during closing the document
    */
    boolean close()
                raises( ::com::sun::star::lang::WrappedTargetException );
};


}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
