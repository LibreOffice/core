/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_sdb_XCommandPreparation_idl__
#define __com_sun_star_sdb_XCommandPreparation_idl__

#include <com/sun/star/sdbc/SQLException.idl>

 module com {  module sun {  module star {  module sdbc {
 published interface XPreparedStatement;
};};};};

 module com {  module sun {  module star {  module sdb {


/** is used for preparation of commands.

    <p>
    A command could be a table, query, or any kind of SQL statement
    prepared by the user.
    </p>
 */
published interface XCommandPreparation: com::sun::star::uno::XInterface
{

    /** creates a
        com::sun::star::sdbc::PreparedStatement
        object for sending parameterized SQL statements to the database.

        <p>
        A SQL statement with or without IN parameters can be
        pre-compiled and stored in a PreparedStatement object. This
        object can then be used to efficiently execute this statement
        multiple times.
        </p>
        @param command
            the command to be prepared. Any SQL statement.
        @param commandType
            kind of the command
            com::sun::star::sdb::CommandType
        @returns
            the PreparedStatement object
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    com::sun::star::sdbc::XPreparedStatement prepareCommand([in]string command, [in] long commandType)
         raises (com::sun::star::sdbc::SQLException);
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
