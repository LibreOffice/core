/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sdb_application_XCopyTableListener_idl__
#define __com_sun_star_sdb_application_XCopyTableListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/sdb/application/CopyTableRowEvent.idl>


module com { module sun { module star { module sdb { module application {


/** specifies the interface required to listen for progress in copying
    table rows via a <code>CopyTableWizard</code>.

    @see CopyTableRowEvent
    @see CopyTableWizard
 */
interface XCopyTableListener : ::com::sun::star::lang::XEventListener
{
    /** is called when a row is about to be copied.

        <p>This method is called immediately before a row is copied. It might be used, for instance,
        to update a progress indicator.</p>

        @param Event
            describes the current state of the copy operation.
            CopyTableRowEvent::SourceData is positioned at the row
            which is about to be copied.
    */
    void    copyingRow( [in] CopyTableRowEvent Event );

    /** is called when a row was successfully copied.

        <p>This method is called right after a row has been successfully copied. It might be used,
        for instance, to update a progress indicator.</p>

        @param Event
            describes the current state of the copy operation.
            CopyTableRowEvent::SourceData is positioned at the row
            which was just copied to the target database.
    */
    void    copiedRow( [in] CopyTableRowEvent Event );

    /** is called when copying a row failed.

        @param Event
            describes the current state of the copy operation.
            CopyTableRowEvent::SourceData is positioned at the row
            which was attempted to be copied to the target database.
            CopyTableRowEvent::Error will contain the actual error which
            happened.

        @return
            how to continue with copying. Must be one of the CopyTableContinuation
            constants.
    */
    short   copyRowError( [in] CopyTableRowEvent Event );
};


}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
