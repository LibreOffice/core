/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_sdb_application_DatabaseObjectContainer_idl__
#define __com_sun_star_sdb_application_DatabaseObjectContainer_idl__


module com { module sun { module star { module sdb { module application {


/** denotes different types of (maybe virtual) containers of database objects

    <p>In the database application of OpenOffice.org, database objects (such as
    tables, queries, forms, reports) can be organized in folders. This hierarchy can
    be imposed externally, or internally.

    <p>For example, when you connect to a database which supports catalogs and/or schemas,
    then those impose a natural order on the tables, in that a catalog or a schema
    is a folder of tables.</p>

    <p>On the other hand, for forms and reports, OpenOffice.org Base itself allows the
    user to create folders to organize the documents - in this case, the hierarchy is
    defined in the database document itself.</p>

    @see DatabaseObject

    @since OOo 3.0
 */
constants DatabaseObjectContainer
{
    /** denotes the virtual folder containing all tables of a database, in a context where such a
        folder is displayed to the user.
    */
    const long TABLES = 1000;

    /** denotes the virtual folder containing all queries of a database, in a context where such a
        folder is displayed to the user.
    */
    const long QUERIES = 1001;

    /** denotes the virtual folder containing all forms of a database document, in a context where such a
        folder is displayed to the user.
    */
    const long FORMS = 1002;

    /** denotes the virtual folder containing all reports of a database database, in a context where such a
        folder is displayed to the user.
    */
    const long REPORTS = 1003;

    /** denotes the data source itself, which effectively is the root container for all other
        kind of database objects, including other container types.
    */
    const long DATA_SOURCE = 1004;

    /** denotes a catalog in a database which supports catalogs
    */
    const long CATALOG = 1005;

    /** denotes a schema in a database which supports catalogs
    */
    const long SCHEMA = 1006;

    /** denotes a folder which is used to organize forms in a database document
    */
    const long FORMS_FOLDER = 1007;

    /** denotes a folder which is used to organize reports in a database document
    */
    const long REPORTS_FOLDER = 1008;
};


}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
