/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_SingleSelectQueryComposer_idl__
#define __com_sun_star_sdb_SingleSelectQueryComposer_idl__

#include <com/sun/star/sdb/SingleSelectQueryAnalyzer.idl>
#include <com/sun/star/beans/XPropertySet.idl>

module com {  module sun {  module star {  module sdb {

interface XSingleSelectQueryComposer;
/** represents a service for composing a single select statement.

    <p>
    It hides the complexity of parsing and evaluating a single select statement and provides
    sophisticated methods for expanding a statement with filter, group by, having and order
    criteria. To get the new extended statement use the methods from <type scope="com::sun::star::sdb">SingleSelectQueryAnalyzer</type>.
    </p>

    <p>A <type>SingleSelectQueryComposer</type> is usually obtained from a <type>Connection</type>
    using the <type scope="com::sun::star::lang">XMultiServiceFactory</type> interface.</p>
 */
service SingleSelectQueryComposer
{
    // gives access to the properties.
    interface com::sun::star::beans::XPropertySet;

    /** access to the analyzer service.
     */
    service SingleSelectQueryAnalyzer;

    interface XSingleSelectQueryComposer;

    /** is the original SQL statement set with the interface <type scope="com::sun::star::sdb">XSingleSelectQueryAnalyzer</type>.
    */
    [readonly, property] string Original;
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
