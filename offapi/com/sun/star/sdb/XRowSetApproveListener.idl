/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_XRowSetApproveListener_idl__
#define __com_sun_star_sdb_XRowSetApproveListener_idl__

#include <com/sun/star/lang/XEventListener.idl>

#include <com/sun/star/sdb/RowChangeEvent.idl>

 module com {  module sun {  module star {  module sdb {


/** is used for approving the moving and changing of row set actions.
 */
published interface XRowSetApproveListener: com::sun::star::lang::XEventListener
{

    /** is called before a row set's cursor is moved.
        @param event
            the event which happened
        @returns <TRUE/> when moving is allowed, otherwise <FALSE/>
     */
    boolean approveCursorMove([in]com::sun::star::lang::EventObject event);

    /** is called before a row is inserted, updated, or deleted.
        @param event
            the event which happened
        @returns <TRUE/> when changing is allowed, otherwise <FALSE/>
     */
    boolean approveRowChange([in]RowChangeEvent event);

    /** is called before a row set is changed, or in other words
        before a row set is reexecuted.
        @param event
            the event which happened
        @returns <TRUE/> when changing is allowed, otherwise <FALSE/>
    */
    boolean approveRowSetChange([in]com::sun::star::lang::EventObject event);
};


}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
