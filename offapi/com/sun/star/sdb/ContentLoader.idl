/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/


#ifndef __com_sun_star_sdb_ContentLoader_idl__
#define __com_sun_star_sdb_ContentLoader_idl__

#include <com/sun/star/frame/FrameLoader.idl>

module com {  module sun {  module star {  module sdb {

/** implements a loader for various datasource-related user interface components.

    <p>Usually, you don't deal with this loader directly. Instead, use an instance with
    the <type scope="com::sun::star::frame">XComponentLoader</type> interface, and pass
    one of the below-mentioned URLs to it.</p>

    @see com::sun::star::frame::XComponentLoader
    @see com::sun::star::frame::Desktop
*/
published service ContentLoader
{
    /** ensures the basic functionality.

        <p>
        Supporting this service ensures that you can plug any of the components
        the loader can create into an arbitrary frame.
        </p>

        The loader should be registered for the URL scheme
        <b>
        .component:DB/ *
        </b>
        , the concrete URLs supported are:
        <ul>
            <li><b>.component:DB/DataSourceBrowser</b><br/>
                Using this URL creates an instance of the
                <type scope="com::sun::star::sdb">DataSourceBrowser</type>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/FormGridView</b><br/>
                Using this URL creates an instance of the
                <type scope="com::sun::star::sdb">ExternalSourceBrowser</type>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/QueryDesign</b><br/>
                Using this URL creates an instance of the
                <type scope="com::sun::star::sdb">QueryDesign</type>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/TableDesign</b><br/>
                Using this URL creates an instance of the
                <type scope="com::sun::star::sdb">TableDesign</type>
                service and plugs it into the frame passed to the loader.
            </li>
            <li><b>.component:DB/RelationDesign</b><br/>
                Using this URL creates an instance of the
                <type scope="com::sun::star::sdb">RelationDesign</type>
                service and plugs it into the frame passed to the loader.
            </li>
        </ul>

        The parameters passed to the
        <member scope="com::sun::star::frame">XFrameLoader::load()</member>
        are forwarded to the object being created,
        in particular to it's
        <type scope="com::sun::star::lang">XInitialization</type>
        interface.
    **/
    service com::sun::star::frame::FrameLoader;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
