/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_geometry_EllipticalArc_idl__
#define __com_sun_star_geometry_EllipticalArc_idl__

#include <com/sun/star/geometry/RealPoint2D.idl>

module com {  module sun {  module star {  module geometry {

/** This structure specifies an arbitrary elliptical arc.<p>

    This structure contains all parameters necessary to specify
    arbitrary elliptical arcs. The parameters are modeled closely
    after the <a href="http://www.w3c.org">SVG</a> specification.<p>

    As with the parameters below, there are mostly four different
    ellipses arcs (two different ellipses, on which four different
    arcs connect start and end point) which satisfy the given set of
    constrains. Thus, there are two flags indicating which one of those
    ellipses should be taken.<p>

    @since OOo 2.0
 */
struct EllipticalArc
{
    /// Start point of the arc.
    RealPoint2D StartPosition;


    /// End point of the arc.
    RealPoint2D EndPosition;


    /// Main radius in x direction of the ellipse this arc is part of.
    double  RadiusX;


    /// Main radius in y direction of the ellipse this arc is part of.
    double  RadiusY;


    /** Rotation angle of the x axis of the ellipse relative to the x
        axis of the reference coordinate system.
     */
    double  XAxisRotation;


    /** If `TRUE`, and there's a choice, take the longer one of two arcs
        connecting start and end point.
     */
    boolean IsLargeArc;


    /** If `TRUE`, and there's a choice, take the arc that goes
        clock-wise from start to end point.
     */
    boolean IsClockwiseSweep;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
