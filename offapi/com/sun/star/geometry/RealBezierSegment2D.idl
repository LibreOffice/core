/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_geometry_RealBezierSegment2D_idl__
#define __com_sun_star_geometry_RealBezierSegment2D_idl__

module com {  module sun {  module star {  module geometry {

/** This structure contains the relevant data for a cubic Bezier
    curve.<p>

    The data is stored real-valued. The last point of the segment is
    taken from the first point of the following segment, and thus not
    included herein. That is, when forming a polygon out of cubic
    Bezier segments, each two consecutive RealBezierSegment2D
    define the actual curve, with the very last segment providing only
    the end point of the last curve, and the remaining members
    ignored.<p>

    @see com::sun::star::rendering::XBezierPolyPolygon2D
    @since OOo 2.0
 */
struct RealBezierSegment2D
{
    /// The x coordinate of the start point.
    double Px;
    /// The y coordinate of the start point.
    double Py;

    /// The x coordinate of the first control point.
    double C1x;
    /// The y coordinate of the first control point.
    double C1y;

    /// The x coordinate of the second control point.
    double C2x;
    /// The y coordinate of the second control point.
    double C2y;

};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
