/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_drawing_GenericDrawPage_idl__
#define __com_sun_star_drawing_GenericDrawPage_idl__

#include <com/sun/star/drawing/XShapes.idl>

#include <com/sun/star/drawing/XShapeGrouper.idl>

#include <com/sun/star/drawing/XShapeCombiner.idl>

#include <com/sun/star/drawing/XShapeBinder.idl>

#include <com/sun/star/container/XNamed.idl>

#include <com/sun/star/lang/XServiceInfo.idl>

#include <com/sun/star/beans/XPropertySet.idl>

#include <com/sun/star/view/PaperOrientation.idl>

#include <com/sun/star/container/XNameContainer.idl>


 module com {  module sun {  module star {  module drawing {


// DocMerge from xml: service com::sun::star::drawing::GenericDrawPage
/** This abstract service is implemented by every page of a
    <type>DrawingDocument</type>.



    @example create and insert a couple of <type>LineShape</type>s:

    <listing>
    xPage = xDoc.DrawPages(0)
    for x% = 0 to 200
    xShape = xProv.createInstance( "com::sun::star::drawing::LineShape" )
    xShape.LineColor = rgb( 255, 0, n%+20 )
    xShape.LineWidth = 20
    xShape.Position = Point( x%, 2*x% )
    xShape.Size = Size( 300-x%, 20 )
    xPage.add( xShape )
    next x%
    </listing>
 */
published service GenericDrawPage
{


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::drawing::XShapes
    /** manages the <type>Shape</type>s of this page.

                <p>It also lets you add new <type>Shape</type>s. The program currently
                requires that these <type>Shape</type>s be created by the factory of
                the document.

                @see    <type>DrawingDocument</type>
     */
    interface com::sun::star::drawing::XShapes;


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::drawing::XShapeGrouper
    /** With this interface you can group/ungroup a collection of
                <type>Shape</type>s.
     */
    interface com::sun::star::drawing::XShapeGrouper;


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::drawing::XShapeCombiner
    /** With this interface you can combine/split a collection of
                <type>Shape</type>s.
     */
    [optional] interface com::sun::star::drawing::XShapeCombiner;


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::drawing::XShapeBinder
    /** With this interface you can bind/unbind a collection of
                <type>Shape</type>s.
     */
    [optional] interface com::sun::star::drawing::XShapeBinder;


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::container::XNamed
    /** Gets or sets the name of this page.

                <p>Duplicated page names inside a document are not allowed.
     */
    [optional] interface com::sun::star::container::XNamed;


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::lang::XServiceInfo
    /** returns the services implemented by this
                instance.
     */
    interface com::sun::star::lang::XServiceInfo;


    // DocMerge from xml: service com::sun::star::drawing::GenericDrawPage: interface com::sun::star::beans::XPropertySet
    /** gives you access to the properties of this
                <type>DrawPage</type>.
     */
    [optional] interface com::sun::star::beans::XPropertySet;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::BorderBottom
    /** This is the border at the bottom.
     */
        [optional, property] long BorderBottom;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::BorderLeft
    /** This is the border at the left.
     */
        [optional, property] long BorderLeft;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::BorderRight
    /** This is the border at the right.
     */
        [optional, property] long BorderRight;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::BorderTop
    /** This is the border at the top.
     */
        [optional, property] long BorderTop;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::Height
    /** This is the height.
     */
        [optional, property] long Height;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::Width
    /** This is the width.
     */
        [optional, property] long Width;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::Number
    /** This is the number of this page, starting with 1.
     */
        [optional, readonly, property] short Number;


    // DocMerge from xml: property com::sun::star::drawing::GenericDrawPage::Orientation
    /** This is the orientation of this page.
     */
        [optional, property] com::sun::star::view::PaperOrientation Orientation;


    /** this property stores xml attributes.
        They will be saved to and restored from automatic styles inside xml files.

        @see com::sun::star::xml::AttributeContainer
    */
    [optional, property] com::sun::star::container::XNameContainer UserDefinedAttributes;


    /** this property is true if the averaged background filling colors luminance
        is belove an application specified threshold value. This can be used to
        determine the actual value of an auto color.
    */
    [readonly, optional, property] boolean IsBackgroundDark;


    /** this index access defines a navigation order for the top level shapes
        inside this page.
        By default this is equal to the index access of the slide itself,
        making the z-order the default navigation order for top level shapes.
    */
    [optional, property] com::sun::star::container::XIndexAccess NavigationOrder;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
