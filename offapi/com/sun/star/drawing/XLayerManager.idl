/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_drawing_XLayerManager_idl__
#define __com_sun_star_drawing_XLayerManager_idl__

#include <com/sun/star/container/XIndexAccess.idl>

#include <com/sun/star/drawing/XLayer.idl>

#include <com/sun/star/container/NoSuchElementException.idl>

#include <com/sun/star/drawing/XShape.idl>



 module com {  module sun {  module star {  module drawing {


/** This interface makes it possible to access and manage the
    Layers of a document.

    @see LayerManager
 */
published interface XLayerManager: com::sun::star::container::XIndexAccess
{

    /** creates a new Layer

        @param nIndex
            the index at which the new layer is inserted

        @returns
            the new created Layer
     */
    com::sun::star::drawing::XLayer insertNewByIndex( [in] long nIndex );


    /** removes a Layer and all Shapes on
        this Layer.

        @param xLayer
            this Layer will be removed and disposed
     */
    void remove( [in] com::sun::star::drawing::XLayer xLayer )
            raises( com::sun::star::container::NoSuchElementException );


    /** attaches a Shape to the given Layer.

        @param xShape
            this is the Shape that will be attached to a Layer

        @param xLayer
            this is the Layer that will be attached to a Shape
     */
    void attachShapeToLayer( [in] com::sun::star::drawing::XShape xShape,
             [in] com::sun::star::drawing::XLayer xLayer );


    /** queries the Layer that a Shape is attached to

        @param xShape
            specifies the Shape for which the layer is requested.

        @returns
            the Layer to which the Shape is
            attached.

     */
    com::sun::star::drawing::XLayer getLayerForShape( [in] com::sun::star::drawing::XShape xShape );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
