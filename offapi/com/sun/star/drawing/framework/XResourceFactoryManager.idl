/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_drawing_framework_XResourceFactoryManager_idl__
#define __com_sun_star_drawing_framework_XResourceFactoryManager_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module drawing { module framework {

interface XResourceId;
interface XResourceFactory;

/** The XResourceFactoryManager is part of the configuration controller and
    manages the set of registered resource factories.

    @see XConfigurationController
    @see XResourceFactory
*/
interface XResourceFactoryManager
{
    /** Register a new resource factory for the given URL.
        <p>When one factory is responsible for more than one type of resource
        then this method has to be called for each type.  If this method is
        called multiple times for the same URL then a previously registered
        factory is removed for the URL.</p>
        @param sResourceURL
            The URL of the resource that the factory can create.
        @param xResourceFactory
            The resource factory object.
    */
    void addResourceFactory (
        [in] string sResourceURL,
        [in] XResourceFactory xResourceFactory);

    /** Remove a resource factory for one type of resource.  When the
        factory has been registered for other URLs as well then it remains
        registered for them.  Use the
        removeResourceFactoryForReference() to remove a
        factory completely.
        @param sResourceURL
            The URL for which to remove the resource factory.
    */
    void removeResourceFactoryForURL (
        [in] string sResourceURL);

    /** Remove a resource factory for all resource types it has been registered for.  Use
        removeResourceFactoryForURL() to remove a factory
        just for one resource type and to leave it registered for others.
        @param xResourceFactory
            The resource factory object to remove.
    */
    void removeResourceFactoryForReference (
        [in] XResourceFactory xResourceFactory);

    /** Return the resource factory that was previously registered for the
        given resource type.  This method is typically called by one of the
        resource controllers.
        @param sResourceURL
            The URL of the resource type for which to return the resource
            factory.
        @return
            When no resource factory was registered for the given resource
            type then an empty reference is returned.
    */
    XResourceFactory getResourceFactory (
        [in] string sResourceURL);
};

}; }; }; }; }; // ::com::sun::star::drawing::framework

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
