/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_drawing_DocumentSettings_idl__
#define __com_sun_star_drawing_DocumentSettings_idl__

#include <com/sun/star/document/Settings.idl>
#include <com/sun/star/document/HeaderFooterSettings.idl>


module com {  module sun {  module star {  module drawing {


/** describes properties that apply to the whole drawing document.
 */
published service DocumentSettings
{
    service com::sun::star::document::Settings;

    /** This service configures the header and footer settings during print
     */
    [optional] service com::sun::star::document::HeaderFooterSettings;


    /** provides access to the properties.
     */
    interface com::sun::star::beans::XPropertySet;


    /** This is the default logical measure unit that is used for string
        formating inside the document, f.e. the measure text
     */
    [optional, property] short MeasureUnit;

    /** is the numerator for the logical scale of the document
     */
    [optional, property] long ScaleNumerator;

    /** is the denominator for the logical scale of the document
     */
    [optional, property] long ScaleDenominator;

    // Note: the following properties exist also in
    // css::presentation::DocumentSettings


    /** enables or disables the fitting of the page to the printable
        area during print
     */
    [optional, property] boolean IsPrintFitPage;

    /** if this is true and the paper size for printing is larger than
        the paper size of the printer than the content is tiled over
        multiple pages.
     */
    [optional, property] boolean IsPrintTilePage;

    /** is the number format used for page number fields
     */
    [optional, property] long PageNumberFormat;

    /** If this is true, the distance between two paragraphs is
        the sum of ParaTopMargin of the previous and ParaBottomMargin of
        the next paragraph. If false, only the greater of the two is
        chosen.
     */
    [optional, property] boolean ParagraphSummation;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
