/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_xml_crypto_xxmlsignature_idl_
#define __com_sun_star_xml_crypto_xxmlsignature_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/SecurityException.idl>
#include <com/sun/star/xml/crypto/XXMLSignatureTemplate.idl>
#include <com/sun/star/xml/crypto/XXMLSecurityContext.idl>
#include <com/sun/star/xml/crypto/XMLSignatureException.idl>

module com { module sun { module star { module xml { module crypto {

/**
 * Interface of XML signature
 *
 * <p>This interface represents a XML signer or verifier.</p>
 *
 * <p>The signer or verifier concrete a key by retrieve signature context and
 * signature template.</p>
 *
 * <p>In some cases, the signer or verifier can determine and locate the
 * contents to be signed from the signature template by dereference the URI.</p>
 *
 * <p>In some cases, the contents to be signed need to be clearly pointed out by
 * the signature template.</p>
 */
interface XXMLSignature : com::sun::star::uno::XInterface
{
    /**
     * Perform signature in the environment of signature template and context.
     */
    com::sun::star::xml::crypto::XXMLSignatureTemplate generate(
        [in] com::sun::star::xml::crypto::XXMLSignatureTemplate aTemplate ,
        [in] com::sun::star::xml::crypto::XSecurityEnvironment aEnvironment
    ) raises( com::sun::star::xml::crypto::XMLSignatureException ,
        com::sun::star::uno::SecurityException ) ;

    /**
     * Perform validation in the environment of signature template and context.
     */
    com::sun::star::xml::crypto::XXMLSignatureTemplate validate(
        [in] com::sun::star::xml::crypto::XXMLSignatureTemplate aTemplate ,
        [in] com::sun::star::xml::crypto::XXMLSecurityContext aContext
    ) raises( com::sun::star::xml::crypto::XMLSignatureException ,
        com::sun::star::uno::SecurityException ) ;

    /**
     * get the time used by the engine, JSR105,
     * this method is used for evaluation.
     */
     /*
    hyper getEngineTime([in] long id);
    */
};

} ; } ; } ; } ; } ;
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
