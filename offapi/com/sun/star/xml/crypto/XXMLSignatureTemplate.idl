/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_xml_crypto_xxmlsignaturetemplate_idl_
#define __com_sun_star_xml_crypto_xxmlsignaturetemplate_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/xml/wrapper/XXMLElementWrapper.idl>
#include <com/sun/star/xml/crypto/XUriBinding.idl>
#include <com/sun/star/xml/crypto/XXMLSecurityTemplate.idl>

module com { module sun { module star { module xml { module crypto {

/**
 * Interface of XML signature template
 *
 * <p>This interface represents a signature template, which is the same as the
 * desired XML signature element but some of the nodes may be empty. The empty
 * entities include digest value and signature value. Empty entities are not
 * allowed in a signature template when performing validation.</p>
 *
 * <p>In some cases, the signer or verifier can determine and locate the
 * contents to be signed from the template by dereference the URI.</p>
 *
 * <p>With the help of signature context, the signer or verifier specifies the
 * key from the KeyInfo in the signature template.</p>
 *
 * Owner: Andrew Fan
 */
interface XXMLSignatureTemplate : XXMLSecurityTemplate
{
    /**
     * Get the target XML element, i.e. the element to be signed
     */
    sequence< com::sun::star::xml::wrapper::XXMLElementWrapper > getTargets(
    ) ;

    /**
     * Set the dynamic URI binding
     */
    void setBinding(
        [in] com::sun::star::xml::crypto::XUriBinding aUriBinding
    ) raises( com::sun::star::lang::IllegalArgumentException ) ;

    /**
     * Get the dynamic URI binding
     */
    com::sun::star::xml::crypto::XUriBinding getBinding( ) ;
} ;

} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
