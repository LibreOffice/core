/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_xml_crypto_xciphercontextsupplier_idl_
#define __com_sun_star_xml_crypto_xciphercontextsupplier_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/NamedValue.idl>
#include <com/sun/star/xml/crypto/XCipherContext.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>


 module com {  module sun {  module star {  module xml { module crypto {

/** This interface allows to get an object that allows to encrypt/decrypt data
    using the specified algorithm.

    @since OOo 3.4
 */
interface XCipherContextSupplier : com::sun::star::uno::XInterface
{
    /** returns an object that allows to encrypt/decrypt data.

        @param nCipherID
            the internal ID specifying the algorithm,
            should take value from CipherID

        @param aKey
            the key that should be used for the encryption

        @param aInitializationVector
            the initialization vector that should be used for the encryption

        @param bEncryption
            whether an encryption or decryption cipher should be created
            `TRUE` - Encryption
            `FALSE` - Decryption

        @param aParams
            optional parameters that could be used to initialize the cipher,

        @throws ::com::sun::star::lang::IllegalArgumentException
            one of provided arguments is illegal
     */

    XCipherContext getCipherContext( [in] long nCipherID, [in] sequence< byte > aKey, [in] sequence< byte > aInitializationVector, [in] boolean bEncryption, [in] sequence< ::com::sun::star::beans::NamedValue > aParams )
        raises( ::com::sun::star::lang::IllegalArgumentException );
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
