/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_xml_input_XElement_idl__
#define __com_sun_star_xml_input_XElement_idl__

#include <com/sun/star/xml/input/XAttributes.idl>
#include <com/sun/star/xml/sax/SAXException.idl>


module com { module sun { module star { module xml { module input {

/** Capsule around an XML element.

    @internal
*/
interface XElement : com::sun::star::uno::XInterface
{
    /** Gets the parent context.

        @return
                parent context
    */
    XElement getParent();

    /** Gets the local name of this element.

        @return
                local name of this element
    */
    string getLocalName();

    /** Gets the namespace uid of this element.

        @return
                namespace uid of this element
    */
    long getUid();

    /** Gets the attributes of this element.

        @return
                attributes of this element
    */
    XAttributes getAttributes();

    /** Called upon each occurring child element.

        @param uid
               namespace uid of element
        @param localName
               local name of element
        @param xAttributes
               attributes of element
        @return
                child import context
    */
    XElement startChildElement(
        [in] long uid, [in] string localName, [in] XAttributes xAttributes )
        raises (com::sun::star::xml::sax::SAXException);

    /** Called upon retrieval of characters.

        @param chars
               characters
    */
    void characters( [in] string chars )
        raises (com::sun::star::xml::sax::SAXException);

    /** Receives notification of white space that can be ignored.

        @param whitespace
               white space characters
    */
    void ignorableWhitespace( [in] string whitespace )
        raises (com::sun::star::xml::sax::SAXException);

    /** Receives notification of a processing instruction.

        @param target
               target
        @param data
               data
    */
    void processingInstruction(
        [in] string target, [in] string data )
        raises (com::sun::star::xml::sax::SAXException);

    /** Receives notification of element closing.
     */
    void endElement()
        raises (com::sun::star::xml::sax::SAXException);
};

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
