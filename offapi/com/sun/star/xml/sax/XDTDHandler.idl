/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_xml_sax_XDTDHandler_idl__
#define __com_sun_star_xml_sax_XDTDHandler_idl__

#include <com/sun/star/uno/XInterface.idl>



module com {  module sun {  module star {  module xml {  module sax {


/** receives events according to the DTD of the document.

    <p>The SAX parser may report these events in any order, regardless of the
    order in which the notations and unparsed entities were declared; however,
    all DTD events must be reported after the document handler's
    <code>startDocument</code> event, and before the first <code>startElement</code>
    event.  It is up to the application to store the information for future
    use (perhaps in a hash table or object tree). If the application encounters
    attributes of type "NOTATION", "ENTITY", or "ENTITIES", it can use the
    information that it obtained through this interface to find the entity
    and/or notation that corresponds with the attribute value.
    </p>
 */
published interface XDTDHandler: com::sun::star::uno::XInterface
{

    /** receives notification of a notation declaration event.
     */
    void notationDecl( [in] string sName,
             [in] string sPublicId,
             [in] string sSystemId );


    /** receives notification of an unparsed entity declaration event.
     */
    void unparsedEntityDecl( [in] string sName,
             [in] string sPublicId,
             [in] string sSystemId,
             [in] string sNotationName );

};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
