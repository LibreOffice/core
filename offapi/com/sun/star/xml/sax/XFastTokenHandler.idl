/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_xml_sax_XFastTokenHandler_idl__
#define __com_sun_star_xml_sax_XFastTokenHandler_idl__

#include <com/sun/star/uno/XInterface.idl>


module com {  module sun {  module star {  module xml {  module sax {


/** interface to translate XML strings to integer tokens.

    <p>An instance of this interface can be registered at a XFastParser.
    It should be able to translate all XML names (element local names,
    attribute local names and constant attribute values) to integer tokens.

    A token value must be greater or equal to zero and less than
    FastToken::NAMESPACE. If a string identifier is not known
    to this instance, FastToken::DONTKNOW is returned.
 */
interface XFastTokenHandler: com::sun::star::uno::XInterface
{

    /** returns a integer token for the given string

        @param Identifier
            the string given as a byte sequence encoded in UTF-8

        @returns
            a unique integer token for the given String or FastToken::DONTKNOW
            if the identifier is not known to this instance.
    */
    long getTokenFromUTF8( [in] sequence< byte > Identifier );


    /** returns a identifier for the given integer token as a byte
          sequence encoded in UTF-8.
    */
    sequence< byte > getUTF8Identifier( [in] long Token );
};


}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
