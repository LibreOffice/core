/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_view_XMultiSelectionSupplier_idl__
#define __com_sun_star_view_XMultiSelectionSupplier_idl__

#include <com/sun/star/view/XSelectionSupplier.idl>
#include <com/sun/star/container/XEnumeration.idl>


module com {  module sun {  module star {  module view {


/** makes it possible to append and remove objects from a selection.

    <p>The method XSelectionSupplier::setSelection() for an
    instance that also supports XMultiSelectionSupplier should
    be implemented that it also takes either a selectable object or a sequence
    of selectable objects.</p>

    <p>Adding an object more than once to a selection should not toggle the
    selection for that object but only select it once</p>
 */
interface XMultiSelectionSupplier: XSelectionSupplier
{

    /** adds the object or the objects represented by <var>Selection</var> to the selection
        of this XMultiSelectionSupplier.

        @param Selection
            either an Object that is selectable or a sequence of objects that are selectable.

        @returns
            `TRUE`/, if <var>Selection</var> was added to the current selection.
            `FALSE`, if <var>Selection</var> or parts of <var>Selection</var> could not be
            added to the current selection. For example, if the selection already contains
            objects that are forbidden to be selected together with <var>Selection</var>

        @throws com::sun::star::lang::IllegalArgumentException
            If <var>Selection</var> is not a selectable object for this XMultiSelectionSupplier.
            <p>Adding an object to the selection that is already part of the selection should not raise this exception</p>
     */
    boolean addSelection( [in] any Selection )
                raises( com::sun::star::lang::IllegalArgumentException );


    /** remove the object or objects represented by <var>Selection</var> from the
        selection of this XMultiSelectionSupplier.

        @param Selection
            either an Object that is selectable or a sequence of objects that are selectable.

        @returns
            `TRUE`/, if <var>Selection</var> was added to the current selection.
            `FALSE`, if <var>Selection</var> or parts of <var>Selection</var> could not be
            added to the current selection. For example, if the selection already contains
            objects that are forbidden to be selected together with <var>Selection</var>.

        @throws com::sun::star::lang::IllegalArgumentException
            If <var>Selection</var> is not a selectable object for this XMultiSelectionSupplier.
            <p>Removing an object from the selection that is not part of the selection should not raise this exception</p>
     */
    void removeSelection( [in] any Selection )
                raises( com::sun::star::lang::IllegalArgumentException );


    /** clears the selection of this XMultiSelectionSupplier.
    */
    void clearSelection();


    /** returns the number of selected objects of this XMultiSelectionSupplier.
    */
    long getSelectionCount();


    /** @returns
            a new object to enumerate the selection of this XMultiSelectionSupplier.
            It returns NULL if there are no objects in the selection.
     */
    com::sun::star::container::XEnumeration createSelectionEnumeration();


    /** @returns
            a new object to enumerate the selection of this XMultiSelectionSupplier
            in reverse order. If the order of the selected objects
            It returns NULL if there are no objects in the selection.
     */
    com::sun::star::container::XEnumeration createReverseSelectionEnumeration();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
