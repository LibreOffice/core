/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_inspection_ObjectInspectorModel_idl__
#define __com_sun_star_inspection_ObjectInspectorModel_idl__

#include <com/sun/star/inspection/XObjectInspectorModel.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>

module com {  module sun {  module star {  module inspection {

/** describes a default implementation of an ObjectInspectorModel

    <p>This service simplifies usage of an ObjectInspector.</p>

    <p>The XObjectInspectorModel implemented by this service will not provide any property
    categories, nor apply any particular order to the properties provided by its handler(s).</p>

    @see ObjectInspector
    @see XObjectInspectorModel
    @see XObjectInspectorModel::describeCategories
    @see XObjectInspectorModel::getPropertyOrderIndex

    @since OOo 2.0.3
*/
service ObjectInspectorModel : XObjectInspectorModel
{
    /** creates a default ObjectInspectorModel, whose one and only handler factory
        creates a GenericPropertyHandler.
    */
    createDefault();

    /** creates a default ObjectInspectorModel, using an externally provided sequence of property handler
        factories.

        @param handlerFactories
            a sequence of handler factories, as to be provided in the XObjectInspectorModel::HandlerFactories
            method.
        @throws ::com::sun::star::lang::IllegalArgumentException
            if the given sequence is empty.

        @see XObjectInspectorModel::HandlerFactories
    */
    createWithHandlerFactories( [in] sequence< any > handlerFactories )
        raises ( ::com::sun::star::lang::IllegalArgumentException );

    /** creates a default ObjectInspectorModel, using an externally provided sequence of property handler
        factories, and describing an ObjectInspector which has a help section.

        @param handlerFactories
            a sequence of handler factories, as to be provided in the XObjectInspectorModel::HandlerFactories
            method.

        @param minHelpTextLines
            denotes the minimum number of lines of text to be reserved for the help
            section.

        @param maxHelpTextLines
            denotes the maximum number of lines of text to be reserved for the help
            section.

        @throws ::com::sun::star::lang::IllegalArgumentException
            if handlerFactories is empty.

        @throws ::com::sun::star::lang::IllegalArgumentException
            if minHelpTextLines or maxHelpTextLines are negative,
            or if minHelpTextLines is greater than maxHelpTextLines.

        @see XObjectInspectorModel::HandlerFactories
        @see XObjectInspectorModel::HasHelpSection
        @see XObjectInspectorModel::MinHelpTextLines
        @see XObjectInspectorModel::MaxHelpTextLines

        @since OOo 2.2
    */
    createWithHandlerFactoriesAndHelpSection(
        [in] sequence< any > handlerFactories,
        [in] long minHelpTextLines,
        [in] long maxHelpTextLines
    )
        raises ( ::com::sun::star::lang::IllegalArgumentException );
};


}; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
