/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_document_XScriptInvocationContext_idl__
#define __com_sun_star_document_XScriptInvocationContext_idl__


#include <com/sun/star/document/XEmbeddedScripts.idl>


module com { module sun { module star { module document {


/** indicates support for executing scripts contained in a, possibly foreign, document.

    <p>If the component implementing it is a document, which supports embedding scripts into
    itself, then #ScriptContainer refers to the document itself. Implementing this
    interface is unnecessary then, instead the document should simply implement XEmbeddedScripts directly.</p>

    <p>If the interface is implemented by a document which does not itself support embedding
    scripts into it, but which  is associated unambiguously with a document which does,
    then this other document is denoted by #ScriptContainer.</p>

    <p>If the interface is implemented by a controller, then #ScriptContainer
    refers to the document which supports embedding scripts, and which is unambiguously
    associated with the controller. This must not necessarily be the model returned by
    com::sun::star::frame::XController::getModel().</p>

    @since OOo 2.4
 */
interface XScriptInvocationContext
{
    /** denotes the document which contains the scripts which are to be invoked from
    the component implementing the XScriptInvocationContext interface.
    */
    [attribute, readonly] XEmbeddedScripts ScriptContainer;
};


}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
