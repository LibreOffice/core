/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_document_XScriptInvocationContext_idl__
#define __com_sun_star_document_XScriptInvocationContext_idl__


#include <com/sun/star/document/XEmbeddedScripts.idl>


module com { module sun { module star { module document {


/** indicates support for executing scripts contained in a, possibly foreign, document.

    <p>If the component implementing it is a document, which supports embedding scripts into
    itself, then <member>ScriptContainer</member> refers to the document itself. Implementing this
    interface is unnecessary then, instead the document should simply implement <type>XEmbeddedScripts</type> directly.</p>

    <p>If the interface is implemented by a document which does not itself support embedding
    scripts into it, but which  is associated unambiguously with a document which does,
    then this other document is denoted by <member>ScriptContainer</member>.</p>

    <p>If the interface is implemented by a controller, then <member>ScriptContainer</member>
    refers to the document which supports embedding scripts, and which is unambiguously
    associated with the controller. This must not necessarily be the model returned by
    <member scope="com::sun::star::frame">XController::getModel</member>.</p>

    @since OOo 2.4
 */
interface XScriptInvocationContext
{
    /** denotes the document which contains the scripts which are to be invoked from
    the component implementing the XScriptInvocationContext interface.
    */
    [attribute, readonly] XEmbeddedScripts ScriptContainer;
};


}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
