/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_document_XStorageBasedDocument_idl__
#define __com_sun_star_document_XStorageBasedDocument_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/embed/XStorage.idl>
#include <com/sun/star/io/IOException.idl>
#include <com/sun/star/frame/DoubleInitializationException.idl>
#include <com/sun/star/document/XStorageChangeListener.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/beans/PropertyValue.idl>


 module com {  module sun {  module star {  module document {

/** allows to initialize document with a storage, to store document to
    a storage, and to set document to be based on provided storage.
 */
interface XStorageBasedDocument: com::sun::star::uno::XInterface
{
    /** lets the document load itself using provided storage.
     */
    void loadFromStorage(
            [in] ::com::sun::star::embed::XStorage xStorage,
            [in] sequence< ::com::sun::star::beans::PropertyValue > aMediaDescriptor )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::frame::DoubleInitializationException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    /** lets the document store itself to the provided storage.
     */
    void storeToStorage(
            [in] ::com::sun::star::embed::XStorage xStorage,
            [in] sequence< ::com::sun::star::beans::PropertyValue > aMediaDescriptor )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    /** allows to switch the document to the provided storage.
     */
    void switchToStorage( [in] ::com::sun::star::embed::XStorage xStorage )
        raises( ::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );


    /** allows to get the storage the document is based on.
     */
    ::com::sun::star::embed::XStorage getDocumentStorage()
        raises( ::com::sun::star::io::IOException,
                ::com::sun::star::uno::Exception );

    /** allows to register a listener that will be notified when another
        storage is set to the document.
     */
    void addStorageChangeListener( [in] XStorageChangeListener xListener );

    /** allows to deregister the listener.
     */
    void removeStorageChangeListener( [in] XStorageChangeListener xListener );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
