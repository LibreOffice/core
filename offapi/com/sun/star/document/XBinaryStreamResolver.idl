/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_document_XBinaryStreamResolver_idl__
#define __com_sun_star_document_XBinaryStreamResolver_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/io/XInputStream.idl>
#include <com/sun/star/io/XOutputStream.idl>


module com {  module sun {  module star {  module document {


/**
    <p>This interface encapsulates functionality to get/resolve binary data streams.
    It is used to transform binary data to an URL or to transform an URL to binary
    data. The binary data is represented through input and output streams.</p>

    <p>In the case of transforming an URL to binary data, the <code>getInputStream</code>
    method is used. This returns a com::sun::star::io::XInputStream
    from which the binary data, transformed from the given URL, can be read.</p>

    <p>In the case of transforming binary data to an URL, a
    com::sun::star::io::XOutputStream is created first to write
    the binary data to. After this, the <code>resolveOutputStream</code> method can
    be used to transform the binary data, represented through the
    com::sun::star::io::XOutputStream interface, to an URL.</p>
 */
published interface XBinaryStreamResolver: com::sun::star::uno::XInterface
{
    /** converts the given URL from the source URL namespace to an input stream,
        from which binary data can be read
    */
    com::sun::star::io::XInputStream getInputStream( [in] string aURL );

    /** creates an output stream, to which binary data can be written.
        After writing, an URL can be retrieved by a call to
        XBinaryStreamResolver::resolveOutputStream().
    */
    com::sun::star::io::XOutputStream createOutputStream();

    /** converts the output stream, data has been written to, to an URL in
        source URL namespace.
    */
    string resolveOutputStream( [in] com::sun::star::io::XOutputStream aBinaryStream );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
