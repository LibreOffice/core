/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_document_XActionLockable_idl__
#define __com_sun_star_document_XActionLockable_idl__

#include <com/sun/star/uno/XInterface.idl>



module com {   module sun {   module star {   module document {


/** makes it possible to prevent object internal updates for a certain period
    to be able to quickly change multiple parts of the objects, where the
    updates would invalidate each other, anyway.
 */
published interface XActionLockable: com::sun::star::uno::XInterface
{
    /** @returns
            `TRUE` if at least one lock exists.
     */
    boolean isActionLocked();

    /** increments the lock count of the object by one.
     */
    void addActionLock();

    /** decrements the lock count of the object by one.
     */
    void removeActionLock();

    /** sets the locking level.

        <p>This method is used for debugging purposes. The programming
        environment can restore the locking after a break of a debug
        session.</p>
     */
    void setActionLocks( [in] short nLock );

    /** resets the locking level.

        <p>This method is used for debugging purposes. The debugging
        environment of a programming language can reset the locks
        to allow refreshing of the view if a breakpoint is reached or
        step execution is used. </p>
     */
    short resetActionLocks();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
