/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_text_XDependentTextField_idl__
#define __com_sun_star_text_XDependentTextField_idl__

#include <com/sun/star/text/XTextField.idl>

#include <com/sun/star/beans/XPropertySet.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>



 module com {  module sun {  module star {  module text {


/** makes it possible to attach this TextField to a
    TextFieldMaster.
 */
published interface XDependentTextField: com::sun::star::text::XTextField
{

    /** method must be called to attach the
        TextFieldMaster to this TextField.
        <p>A TextFieldMaster can only be assigned once.
        </p>

        Example: Create and insert a user field (with a <code>UserField</code>):

        @code{.java}
                // Create a fieldmaster for our newly created User Text field, and access it's
                // XPropertySet interface
                XPropertySet xMasterPropSet = (XPropertySet) UnoRuntime.queryInterface(
                                XPropertySet.class, mxDocFactory.createInstance(
                                                "com.sun.star.text.FieldMaster.User"));
                // Set the name and value of the FieldMaster
                xMasterPropSet.setPropertyValue ("Name", "UserEmperor");
                xMasterPropSet.setPropertyValue ("Value", new Integer(42));
                // Attach the field master to the user field
                xUserField.attachTextFieldMaster (xMasterPropSet);
                // Move the cursor to the end of the document
                mxDocCursor.gotoEnd(false);
                // insert a paragraph break using the XSimpleText interface
                mxDocText.insertControlCharacter(
                                mxDocCursor, ControlCharacter.PARAGRAPH_BREAK, false);
                // Insert the user field at the end of the document
                mxDocText.insertTextContent(mxDocText.getEnd(), xUserField, false);
        @endcode
     */
    void attachTextFieldMaster( [in] com::sun::star::beans::XPropertySet xFieldMaster )
            raises( com::sun::star::lang::IllegalArgumentException );


    /** @returns
                the previously attached TextFieldMaster
     */
    com::sun::star::beans::XPropertySet getTextFieldMaster();

};


}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
