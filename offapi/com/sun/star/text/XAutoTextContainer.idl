/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_text_XAutoTextContainer_idl__
#define __com_sun_star_text_XAutoTextContainer_idl__

#include <com/sun/star/container/ElementExistException.idl>
#include <com/sun/star/container/NoSuchElementException.idl>
#include <com/sun/star/container/XNameAccess.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/text/XAutoTextGroup.idl>

module com {  module sun {  module star {  module text {

/** handles blocks of AutoTextEntry.
    @see AutoTextContainer
*/
published interface XAutoTextContainer: com::sun::star::container::XNameAccess
{
    /** creates a new AutoText group.

    @param aGroupName the name of the AutoTextContainer

    <p>The name must follow the pattern <code>groupname*pathid</code>, where:</p>

    <ul>
        <li><code>groupname</code> should contain only alphanumeric characters
            (A-Za-z0-9), underscore (_) or space (0x20)</li>
        <li>an asterisk (*) delimiter separates the group name from the path
            identifier</li>
        <li><code>pathid</code> is a number (0 or 1) identifying the directory
        where the AutoText file is stored. Paths are stored in the Office
        configuration and accessed through
        com::sun::star::util::PathSettings::AutoText.
            <ul>
                <li>0 indicates the path of the <b>Office Basis</b> layer</li>
                <li>1 indicates the path of the <b>user</b> directory</li>
            </ul>
        </li>
    </ul>
    If only <code>groupname</code> is specified, the path defaults to 0, the
    <b>Office Basis</b> layer.<br>Note that in some systems the user may lack of
    write access to the Office Basis directory.

    Example:

    <ul>
        <li><code>standard*0</code><br>the "standard" AutoTextGroup in the Office Basis layer</li>
        <li><code>template</code><br>the "template" AutoTextGroup in the Office Basis layer</li>
        <li><code>mytexts*1</code><br>the "mytexts" AutoTextGroup in the user directory</li>
    </ul>

    */
    com::sun::star::text::XAutoTextGroup insertNewByName( [in] string aGroupName )
            raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::container::ElementExistException );

    /** deletes the specified AutoText group.
        @param aGroupName
            see the documentation for XAutoTextContainer::insertNewByName()
    */
    void removeByName( [in] string aGroupName )
            raises( com::sun::star::container::NoSuchElementException );

};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
