/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/


#ifndef __com_sun_star_text_BaseIndex_idl__
#define __com_sun_star_text_BaseIndex_idl__

#include <com/sun/star/util/Color.idl>
#include <com/sun/star/text/XDocumentIndex.idl>
#include <com/sun/star/container/XIndexReplace.idl>
#include <com/sun/star/text/XTextColumns.idl>
#include <com/sun/star/style/GraphicLocation.idl>
#include <com/sun/star/lang/Locale.idl>
#include <com/sun/star/text/XTextSection.idl>


 module com {  module sun {  module star {  module text {


// DocMerge from xml: service com::sun::star::text::BaseIndex
/** specifies the basic service of different indexes within a document.@see com::sun::star::text::DocumentIndex
        @see com::sun::star::text::ContentIndex
        @see com::sun::star::text::UserDefinedIndex
        @see com::sun::star::text::IllustrationIndex
        @see com::sun::star::text::TableIndex
        @see com::sun::star::text::ObjectIndex
 */
published service BaseIndex
{
    // DocMerge: empty anyway
    interface com::sun::star::text::XDocumentIndex;

    /** contains the title of the index.*/

    // DocMerge: empty anyway
    [property] string Title;
    /** determines if the index is protected.*/

    // DocMerge: empty anyway
    [property] boolean IsProtected;
    /** contains the name of the paragraph style that is applied to the heading.*/

    // DocMerge: empty anyway
    [property] string ParaStyleHeading;
    /** contains the name of the paragraph style that is applied to the 1st level.*/

    // DocMerge: empty anyway
    [property] string ParaStyleLevel1;
    /** contains the name of the paragraph style that is applied to the 2nd level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel2;
    /** contains the name of the paragraph style that is applied to the 3rd level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel3;
    /** contains the name of the paragraph style that is applied to the 4th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel4;
    /** contains the name of the paragraph style that is applied to the 5th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel5;
    /** contains the name of the paragraph style that is applied to the 6th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel6;
    /** contains the name of the paragraph style that is applied to the 7th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel7;
    /** contains the name of the paragraph style that is applied to the 8th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel8;
    /** contains the name of the paragraph style that is applied to the 9th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel9;
    /** contains the name of the paragraph style that is applied to the 10th level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleLevel10;
    /** contains the name of the paragraph style that is applied to the separator level.*/

    // DocMerge: empty anyway
    [optional, property] string ParaStyleSeparator;
    /** contains the column interface.*/

    // DocMerge: empty anyway
    [property] XTextColumns TextColumns;
    /** contains the URL of a graphic file that is displayed as background graphic*/

    // DocMerge: empty anyway
    [property] string BackGraphicURL;
    /** contains the name of the filter of the graphic file that is
         displayed as background graphic*/

    // DocMerge: empty anyway
    [property] string BackGraphicFilter;

    // DocMerge from xml: property com::sun::star::text::BaseIndex::BackGraphicLocation
    /** determines the position of the background graphic.@see GraphicLocation
     */
    [property] com::sun::star::style::GraphicLocation BackGraphicLocation;

    // DocMerge from xml: property com::sun::star::text::BaseIndex::BackTransparent
    /** specifies the color of the background.
     */
    [property] com::sun::star::util::Color BackColor;

    /** If <TRUE/>, the background color value in "BackColor" is not visible.
     */
    [property] boolean BackTransparent;

    /** returns the interface of the level format of the index.
     <p>
        The description of the format of the levels depends on the type of the document index.
     </p>
     @see DocumentIndexLevelFormat
     */
    // DocMerge: empty anyway
    [optional, property] com::sun::star::container::XIndexReplace LevelFormat;
    /** determines if the content of the document index is created from the
         complete document content or from the current chapter only.
     <p> It is not available in the bibliography</p>*/
    [optional, property] boolean CreateFromChapter;
    /** the text section containing the content of the index */
    [property] com::sun::star::text::XTextSection ContentSection;
    /** the text section containing the header of the index */
    [property] com::sun::star::text::XTextSection HeaderSection;
};


}; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
