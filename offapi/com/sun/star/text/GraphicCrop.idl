/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_text_GraphicCrop_idl__
#define __com_sun_star_text_GraphicCrop_idl__



 module com {  module sun {  module star {  module text {

/** describes the cropping of graphic objects.
    Cropping means to show only parts of the object.



    <p>Negative values cut the visible area; positive values
    extend the visible area by filling it with background color.
    The absolute sum of top and bottom crop must be smaller
    than the objects original height.  The absolute sum of the left and
    right crop must be smaller than the object's original width.

    </p>
    <p>If this property is applied to a graphic object, then this object
    will correct these values if necessary.
    </p>
 */
published struct GraphicCrop
{
    /** contains the top value to cut (if negative) or to extend (if positive)
     */
    long Top;

    /** contains the bottom value to cut (if negative) or to extend (if positive)
     */
    long Bottom;

    /** contains the left value to cut (if negative) or to extend (if positive)
     */
    long Left;

    /** contains the right value to cut (if negative) or to extend (if positive)
     */
    long Right;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
