/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_text_XTextContent_idl__
#define __com_sun_star_text_XTextContent_idl__

#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/text/XTextRange.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>



 module com {  module sun {  module star {  module text {


/** enables objects to be inserted into a text and to provide their
    location in a text once they are inserted into it.
 */
published interface XTextContent: com::sun::star::lang::XComponent
{

    /** is called when this object gets embedded in a text.

        <p>This acts like a multi-phase construction, thus the object may be
        invalid until it is attached to a text position.  Usually this method
        is called from within XText::insertTextContent().
        </p>

        <p>Both text objects and text content objects may only be connected
        to each other if they are created by the same component. When
        implementing new components, this behavior is deprecated.</p>
     */
    void attach( [in] com::sun::star::text::XTextRange xTextRange )
            raises( com::sun::star::lang::IllegalArgumentException );


    /** @returns
                the text range to which the content is attached.

        <p>Note: The anchor of the actual implementation for text tables
        does not have a position in the text. Thus that anchor can not be
        used for some operation like attach() for example or
        com::sun::star::text::insertTextContent
        or other function that require the object to have a position in the text.</p>

        <p>The reason why a text table still needs an anchor is that for example
        tables should be insertable via com::sun::star::text::insertTextContent
        and that interface uses a parameter of that type.</p>
     */
    com::sun::star::text::XTextRange getAnchor();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
