{
  "comments": [
    {
      "key": {
        "uuid": "42aaf688_5e8a11fb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 9,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-02T09:04:32Z",
      "side": 1,
      "message": "what exactly would fail?",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2ecd6b0_8736d337",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 9,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-11-02T09:15:57Z",
      "side": 1,
      "message": "I get weird messages when compiling the code in\n   svx/qa/*\n   vcl/qa/*\nabout the cppunit library template magic being unable to find various methods relating to printing the values in the\n   CPPUNIT_ASSERT_*\nmacros",
      "parentUuid": "42aaf688_5e8a11fb",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a226291_61f1d505",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 9,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-11T15:13:01Z",
      "side": 1,
      "message": "I cannot reproduce that with my local buidl, but anyway, when \u003chttps://git.libreoffice.org/core/+/a5a571307fb3306b74ab46b085cde6388270a770%5E!/\u003e \"tdf#82580 tools: rename Rectangle to tools::Rectangle\" moved Rectangle to namespace tools, it should have moved that operator\u003c\u003c as well, to let it still be found via ADL.  Presumably was an oversight back then.",
      "parentUuid": "d2ecd6b0_8736d337",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2d5f36_04fdd0a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 9,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2020-11-11T16:59:44Z",
      "side": 1,
      "message": "Indeed, that commit was mostly an automatic rewrite, so it just moved the class itself and updated its users, nothing else.",
      "parentUuid": "9a226291_61f1d505",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43ba3515_999a3fd1",
        "filename": "avmedia/source/viewer/mediawindow_impl.cxx",
        "patchSetId": 15
      },
      "lineNbr": 514,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-02T09:04:32Z",
      "side": 1,
      "message": "I think it is generally better to use something like\n\n  std::max(X, tools::Long(0))\n\nso that this will not accidentally keep computing std::max for a wrong (potentially too small) type if the type of X ever changes in the future.",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5e77209_a92dac81",
        "filename": "avmedia/source/viewer/mediawindow_impl.cxx",
        "patchSetId": 15
      },
      "lineNbr": 514,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-11-02T09:15:57Z",
      "side": 1,
      "message": "cool, I\u0027ll rework those parts of the patch",
      "parentUuid": "43ba3515_999a3fd1",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5880300_07074088",
        "filename": "avmedia/source/viewer/mediawindow_impl.cxx",
        "patchSetId": 15
      },
      "lineNbr": 514,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-09T12:03:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5e77209_a92dac81",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaa06757_de23595c",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 22,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-02T09:04:32Z",
      "side": 1,
      "message": "which of those four steps does this commit address?  I\u0027m confused",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6be51d84_2861166b",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 22,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-11-02T09:15:57Z",
      "side": 1,
      "message": "(4)",
      "parentUuid": "eaa06757_de23595c",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1dc3808_4685594f",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 22,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-02T09:28:46Z",
      "side": 1,
      "message": "So this is just a sub-step of (4)?  (It apparently does not replace tools::Long with sal_Int64, but rather keeps tools::Long around.)",
      "parentUuid": "6be51d84_2861166b",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52f437e9_9ec15a82",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-02T09:04:32Z",
      "side": 1,
      "message": "So, contrary to the commit subject, this is only for the Windows 64-bit platform, not the Windows 32-bit platform?\nIIUC, the problematic uses of `long` (e.g., relating to the geometry primitives in tools/gen.hxx?) that shall become 64-bit on all platforms were not related to the issue of casting between pointers and integers, so I\u0027m puzzled why SAL_TYPES_SIZEOFPOINTER would be a useful way to discriminate here (and elsewhere in this patchset).",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "503318bb_9cbb0c45",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-11-02T09:15:57Z",
      "side": 1,
      "message": "yes, this is only for the 64-bit windows platform. I don\u0027t see the point in messing with the 32-bit platforms, they are\n(a) become more and more rare\n(b) unlikely to even have enough available process memory to load extremely large calc spreadsheets\n\nThe primary problem we are addressing here is bringing Windows-64bit up to same capability as Linux-64bit when it comes to handling very large spreadsheets,\nwhich is caused by things like tools::Rectangle using \"long\",\nwhich means that all the work done to make Libreoffice on 64-bit Linux capable of loading large spreadsheets is useless on Windows,\nwhere long is 32-bit.",
      "parentUuid": "52f437e9_9ec15a82",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "add98069_09fd74dd",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-02T09:28:46Z",
      "side": 1,
      "message": "Aha.  Then please make that clear in the accompanying documentation.  (My understanding from the discussion of this patch series so far was that the plan is to ultimately change the occurrences of long -\u003e tools::Long -\u003e sal_Int64 throughout.)",
      "parentUuid": "503318bb_9cbb0c45",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e53f2b73_046a4189",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-11T11:31:05Z",
      "side": 1,
      "message": "* The above comment, even in the submitted patch set 19, still mentions \"windows\" unconditionally.  (And should probably be updated now that whatever plan has apparently been carried out, anyway.)\n\n* \"I\u0027m puzzled why SAL_TYPES_SIZEOFPOINTER would be a useful way to discriminate here (and elsewhere in this patchset)\":  This has apparently not been addressed in the submitted patch set 19.  But I still think it is too opaque, at least without further comments about all the places that newly discriminate based on SAL_TYEPES_SIZEOFPOINTER.",
      "parentUuid": "add98069_09fd74dd",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77125f14_c2b1e26c",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-11-11T11:37:05Z",
      "side": 1,
      "message": "Sorry if this is unclear.\n\nThis is effectively Windows only, since on other platforms, 64-bit implies sizeof(long) \u003d\u003d 8, only on Windows does a 64-bit build, have sizeof(long) \u003d\u003d 4.\n\nFor the same reason,\n   SAL_TYPES_SIZEOFPOINTER \u003d\u003d 8\nis the most useful discriminant, since what we want here is to make all 64-bit platforms have similar behaviour with respect to the tools::(U)Long types.",
      "parentUuid": "e53f2b73_046a4189",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "035fc891_b05404ef",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-11T11:48:03Z",
      "side": 1,
      "message": "I understand that, but it IMO makes the code opaque and non-obvious.  There is no obvious link between sizeof(void*) and the right choice of integer type to use throughout tools/gen.hxx (let along between sizeof(void*) and the need for e.g. a BigInt::operator tools::Long).",
      "parentUuid": "77125f14_c2b1e26c",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "668a05ae_3341bd25",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-11-11T12:06:30Z",
      "side": 1,
      "message": "How about\n    https://gerrit.libreoffice.org/c/core/+/105584 make the tools::Long define logic more obvious",
      "parentUuid": "035fc891_b05404ef",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f8c63a2_89a24da3",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-11T13:47:35Z",
      "side": 1,
      "message": "\u003e How about\n\u003e     https://gerrit.libreoffice.org/c/core/+/105584 make the tools::Long define logic more obvious\n\nLooks good overall, lets continue discussing that part over there, then.\n\n(Which only leaves open here to update the above (1)--(4) comment.)",
      "parentUuid": "668a05ae_3341bd25",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ebb4ab1_09971093",
        "filename": "include/tools/long.hxx",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-11-17T09:00:17Z",
      "side": 1,
      "message": "\u003e (Which only leaves open here to update the above (1)--(4) comment.)\n\nsee comment at \u003chttps://gerrit.libreoffice.org/c/core/+/105933/1#message-525b4bff4de2362d9bbf4846f52921cc8c149a51\u003e \"improve comment in tools::Long header\"",
      "parentUuid": "8f8c63a2_89a24da3",
      "revId": "a35d510b4d0fa813c4e75b3d05e2386c04eea85a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}