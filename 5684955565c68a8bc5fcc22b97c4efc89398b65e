{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f2e5549f_fd054c1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-25T11:22:33Z",
      "side": 1,
      "message": "For now, while the question if proleptic Gregorian was meant in the ODF standard, and hence if this is in fact making us compliant with ODF:\n\n1. This needs a unit test with checks for formatted strings for both normal and proleptic ranges, and also that the related bugs are now working correctly (by the way, tdf#96756 needs to change \"\u003e\u003d0\" to \"\u003e0\" to only consider dates starting from 0001-01-01, not -0001-12-31);\n2. This needs a new compatibility option written to all ODF formats. In https://gerrit.libreoffice.org/c/core/+/26737, I introduced an option with the same logic (on for new and imported documents, defaulted to off for own document types); unfortunately, don\u0027t know of a more recent example;\n3. This needs that calendar takes this option into account. The CalendarImpl::loadCalendarTZ is likely the place where this should happen. We can use the context to provide the information \"use proleptic Gregorian or not\" in a way similar to e.g. https://gerrit.libreoffice.org/c/core/+/81616.\n4. This then needs an UI to set the compatibility option. And to apply the changed option (so its modification should trigger recalculation in Calc, and at least UI refresh in other modules).",
      "revId": "5684955565c68a8bc5fcc22b97c4efc89398b65e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c522b77d_461fc119",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-28T05:46:10Z",
      "side": 1,
      "message": "Can this compatibility flag be changed in the UI under the expert options, or is this directly embedded into the file? In addition, is this the correct place for thiw new flag? (https://opengrok.libreoffice.org/xref/core/sc/source/ui/view/viewdata.cxx?r\u003dc1c679de#603). Thx for the guide.",
      "parentUuid": "f2e5549f_fd054c1e",
      "revId": "5684955565c68a8bc5fcc22b97c4efc89398b65e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ad08ce4_469afffc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-28T05:57:26Z",
      "side": 1,
      "message": "\u003e Can this compatibility flag be changed in the UI under the expert options, or is this directly embedded into the file?\n\nSee this answer by erAck from Sept 24:\n\n\u003e The option should be per document, otherwise you\u0027d get unpredictable results.\n\n\u003e In addition, is this the correct place for thiw new flag?\n\nI believe that this one is for \u003cconfig:config-item-set config:name\u003d\"ooo:view-settings\"\u003e in settings.xml; you need something similar used for \u003cconfig:config-item-set config:name\u003d\"ooo:configuration-settings\"\u003e (maybe debugging and looking at stack trace when in ScViewDataTable::ReadUserDataSequence could help you find that other method?)",
      "parentUuid": "c522b77d_461fc119",
      "revId": "5684955565c68a8bc5fcc22b97c4efc89398b65e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e92baf0_dfcc3abb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-28T07:07:34Z",
      "side": 1,
      "message": "Can this be a custom name like in your change (\"AnchoredTextOverflowLegacy\") or does this have to be some ODF compliant flag (HOST-NULL-DATE)?",
      "parentUuid": "9ad08ce4_469afffc",
      "revId": "5684955565c68a8bc5fcc22b97c4efc89398b65e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e3fc68b_d9879664",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-29T08:12:38Z",
      "side": 1,
      "message": "If this were some flag *defined* in the standard, I\u0027d say that the best is to at least include the standard\u0027s name as part of the element, to provide clear indication about relation to the standard. (Unfortunately, AFAIK no evements have that - likely because they pre-date the standard.)\n\nIf this were something to include into the standard in the future, then we would need to use some custom name, not resembling the standard wording, to avoid wrong guesses that would result in (1) idea in users that there\u0027s such a standard thing *before* it appears there, and (2) a wrong name, if standard gets a different name.\n\nBut in this case, it\u0027s likely that we are already non-standard (please see the discussion on OASIS mailing list); if it is true, then our flag only needs to provide a \"use non-standard behavior for this (legacy) document\", and it should definitely not follow anything resembling standardized naming.\n\nThis is how I feel ðŸ˜Š - HTH.",
      "parentUuid": "4e92baf0_dfcc3abb",
      "revId": "5684955565c68a8bc5fcc22b97c4efc89398b65e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}