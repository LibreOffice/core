{
  "comments": [
    {
      "key": {
        "uuid": "15d04104_84ab7dd9",
        "filename": "sc/source/ui/view/gridwin.cxx",
        "patchSetId": 14
      },
      "lineNbr": 452,
      "author": {
        "id": 1003033
      },
      "writtenOn": "2021-03-21T20:39:49Z",
      "side": 1,
      "message": "I\u0027m guessing the assumption is that the document will take more than 1ms to load and this will be effectively queued up on the loop immediately after that. I have to wonder if there isn\u0027t a more elegant way to suggest something like idle time processing.",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63cc40a4_ada04056",
        "filename": "sc/source/ui/view/gridwin.cxx",
        "patchSetId": 14
      },
      "lineNbr": 452,
      "author": {
        "id": 1001855
      },
      "writtenOn": "2021-04-20T09:24:20Z",
      "side": 1,
      "message": "You\u0027re right with your assumption. I havn\u0027t found a better way than a timer so far.",
      "parentUuid": "15d04104_84ab7dd9",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db924f61_c8b327dd",
        "filename": "sc/source/ui/view/gridwin4.cxx",
        "patchSetId": 14
      },
      "lineNbr": 1228,
      "author": {
        "id": 1003033
      },
      "writtenOn": "2021-03-21T20:39:49Z",
      "side": 1,
      "message": "I like the commentary.\n\nI do notice that this is a very small incremental increase in the number of lines inside a function that is already rather large. Maybe you feel your little snippet here doesn\u0027t deserve its own named function. Maybe we should consider decomposing the function a little more? Maybe that could be a separate ticket.",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ff4b6ad_a52e2968",
        "filename": "sc/source/ui/view/gridwin4.cxx",
        "patchSetId": 14
      },
      "lineNbr": 1228,
      "author": {
        "id": 1001855
      },
      "writtenOn": "2021-04-20T09:24:20Z",
      "side": 1,
      "message": "I have implemented a function for my new code, the decomposing of this large function should indeed be a separate ticket.",
      "parentUuid": "db924f61_c8b327dd",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "182df220_3f683c3e",
        "filename": "sc/source/ui/view/gridwin4.cxx",
        "patchSetId": 14
      },
      "lineNbr": 1240,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-06-10T12:00:33Z",
      "side": 1,
      "message": "I think we should give this timer a lower priority than DEFAULT (which still is the second highest priority). Maybe HIGH_IDLE so it\u0027s processed before drawing events, but on the other hand the page breaks are of a low importance so even a DEFAULT_IDLE may be sufficient, they\u0027ll be painted then with the next REPAINT. Try this\n\n maShowPageBreaksTimer.SetPriority(TaskPriority::DEFAULT_IDLE);\n maShowPageBreaksTimer.Start();",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07a31301_f8a7d720",
        "filename": "sc/source/ui/view/gridwin4.cxx",
        "patchSetId": 14
      },
      "lineNbr": 1240,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-23T15:30:23Z",
      "side": 1,
      "message": "So in the end, the proposal from Jan-Marek in the beginning would make sense, to use an idle instead of timer?",
      "parentUuid": "182df220_3f683c3e",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "460e3ad5_fd6556de",
        "filename": "sc/source/ui/view/tabview5.cxx",
        "patchSetId": 14
      },
      "lineNbr": 322,
      "author": {
        "id": 1003033
      },
      "writtenOn": "2021-03-21T20:39:49Z",
      "side": 1,
      "message": "Why is 4 such a special number that you would mention it here? And you\u0027re not using i in any sort of arithmetic. If the intention is, as I suspect, simply to call initiatePageBreaks on each non-null element in pGridWin, I think you could communicate that better (and in a less error-prone way) with either std::for_each or a range-based for like:\n\nfor ( auto\u0026 pgw : pGridWin )\n{\n    if ( pgw )\n    {\n        pgw-\u003einitiatePageBreaks();\n    }\n}",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd004a67_489b91a3",
        "filename": "sc/source/ui/view/tabview5.cxx",
        "patchSetId": 14
      },
      "lineNbr": 322,
      "author": {
        "id": 1001855
      },
      "writtenOn": "2021-04-20T09:24:20Z",
      "side": 1,
      "message": "There are a lot of pieces of code with this special number 4 (lot of \"\u003c4\" loops), so this should also be done in a separate ticket to clean this up.",
      "parentUuid": "460e3ad5_fd6556de",
      "revId": "168b8739834e30ee905d891eba8c96bda00dc38f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}