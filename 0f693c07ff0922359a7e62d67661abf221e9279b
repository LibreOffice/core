{
  "comments": [
    {
      "key": {
        "uuid": "AAAAOH////U\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2012-09-06T10:25:32Z",
      "side": 1,
      "message": "aren\u0027t Width \u0026 Size longs ?",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH////I\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000171
      },
      "writtenOn": "2012-09-06T11:47:21Z",
      "side": 1,
      "message": "Yes, but\n1) I prefer int over long because it\u0027s the most natural integer type, and I like simplicity;\n2) even a 16-bit integer would be enough for these numbers, so an int (which is on most platforms 32-bit) should be enough.\nBut if you want, I\u0027ll convert them to long (in a separate patch).",
      "parentUuid": "AAAAOH////U\u003d",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH///+0\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2012-09-06T14:01:49Z",
      "side": 1,
      "message": "please do change them",
      "parentUuid": "AAAAOH////I\u003d",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH///+g\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000171
      },
      "writtenOn": "2012-09-06T14:17:49Z",
      "side": 1,
      "message": "Ok, I\u0027ll do it in a separate patch (because this change is not related to this patch).\nAnd I need this patch because all my new changes are depending on this.",
      "parentUuid": "AAAAOH///+0\u003d",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH////Q\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2012-09-06T10:25:32Z",
      "side": 1,
      "message": "wouldn\u0027t it be better to test at the start of the method\nalso instead of bRecursion maybe bInArrangeWindows might be a better name",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH////E\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000171
      },
      "writtenOn": "2012-09-06T11:47:21Z",
      "side": 1,
      "message": "The former: no because then the previous return would leave bRecursion \u003d\u003d true.\nThe latter: I can change it, but I prefer to do it in an other patch.",
      "parentUuid": "AAAAOH////Q\u003d",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH///+s\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000065
      },
      "writtenOn": "2012-09-06T14:01:49Z",
      "side": 1,
      "message": "I\u0027m afraid I don\u0027t understand how bRecursion would be left true, the usual pattern is\nsomefunction()\n{\n    static bool bInRecursionGaurd( false );\n    if ( bInRecursionGaurd  )\n        return;\n    bInRecursionGaurd \u003d true;\n    // do stuff that causes somefunction to called recursively\n    //  \"\"\n    bInRecursionGaurd \u003d false;\n}\nand unless there is a good reason the check for the recursion gaurd should be the first thing checked",
      "parentUuid": "AAAAOH////E\u003d",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAOH///+k\u003d",
        "filename": "basctl/source/basicide/layout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000171
      },
      "writtenOn": "2012-09-06T14:17:49Z",
      "side": 1,
      "message": "Yes, but if the \"do stuff\" part has a \"return\", than the last line isn\u0027t executed. And if I move the recursion guard to the beginning, the if (!nWidth || nHeight) return; goes under it.\n(Btw I changed the name to bInArrangeWindows; that will be in the next patch.)",
      "parentUuid": "AAAAOH///+s\u003d",
      "revId": "0f693c07ff0922359a7e62d67661abf221e9279b",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}