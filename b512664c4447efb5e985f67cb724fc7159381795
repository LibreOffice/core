{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "be9dabdf_5d7d0274",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001339
      },
      "writtenOn": "2021-12-09T14:42:13Z",
      "side": 1,
      "message": "Please check if after enabling \"Very large spreadsheets (16m rows, 16384 cols)\" there is no performance drop.\n\nI would propose following test case: \n1) Enable \"Very large spreadsheets (16m rows, 16384 cols)\" in Preferences (first you need to \"Enable experimental features)\n2) Restart LO \n3) I create a calc ods spreadsheet file\n4) select columns from D to last column with: Ctrl-Shift+right arrow and hide\n5) save the file and close\n6) reopen the file and type something in some cell\n7) save the file again and close\n\nCheck if there is any performance drop.",
      "revId": "b512664c4447efb5e985f67cb724fc7159381795",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63927c2c_f2a52077",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000804
      },
      "writtenOn": "2021-12-10T10:05:22Z",
      "side": 1,
      "message": "Test 1 - round-trip test document.\n   -result: as expected, extra columns displayed beyond AMJ - same as the initial bug report, but this time beyond the 1024 limit instead of the 64 limit: not a problem. No slower than expected. when additional columns created.\n\nTest 2 - hide jumbo rows\n   -result: crash attempting to hide rows (step 4 above), so cannot test this patch\u0027s effect. But apart from export bugs, this patch should not cause a reload to be any slower than the original document - because that one will have already created the maximum number of rows and columns anyway. I.E. it will be a really bad idea for a user to hide all columns and rows in a jumbo sheet.",
      "parentUuid": "be9dabdf_5d7d0274",
      "revId": "b512664c4447efb5e985f67cb724fc7159381795",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33c98118_7bbe6d2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001339
      },
      "writtenOn": "2021-12-10T11:02:32Z",
      "side": 1,
      "message": "Test 1 - I think the patch should also works for 16384 columns. What value is saved for  \"number-columns-repeated\" field (in ODS file), if \"Very large spreadsheets\" is enabled?\n\nTest 2 - Please create bug report for that.",
      "parentUuid": "63927c2c_f2a52077",
      "revId": "b512664c4447efb5e985f67cb724fc7159381795",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ef9e4e2_14f3d8bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000804
      },
      "writtenOn": "2021-12-10T11:48:33Z",
      "side": 1,
      "message": "\u003e Test 1 - I think the patch should also works for 16384 columns.\nYes, but that is test 2, which I couldn\u0027t create. In this test I was using an ODF that specified number-columns-repeated\u003d1017. It round-tripped that nicely.\n\n\u003e  What value is saved for \"number-columns-repeated\" field (in ODS file), if \"Very large spreadsheets\" is enabled?\nNothing - it crashed.\n\n\u003e Test 2 - Please create bug report for that.\nOK. tdf#146162",
      "parentUuid": "33c98118_7bbe6d2e",
      "revId": "b512664c4447efb5e985f67cb724fc7159381795",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}