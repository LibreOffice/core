{
  "comments": [
    {
      "key": {
        "uuid": "0a18d926_6a6b02d7",
        "filename": "vcl/jsdialog/executor.cxx",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2021-02-18T15:40:54Z",
      "side": 1,
      "message": "previously it was intended to deselect old selection and select another entry to avoid multi selection (to test this create few named ranges in calc and open Manage defined ranges dialog, there is a widget where it lists named ranges and multi selection caused bugs). probably multiselection prevention should be handled in online (triggering separate unselect action)\n\ncurrent code unselects and selects the same entry, why? it is just a mistake?",
      "revId": "0239414e5e1a790a0ed9fca41252f093a62f3f65",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d3e2d4f_55827000",
        "filename": "vcl/jsdialog/executor.cxx",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1000865
      },
      "writtenOn": "2021-02-22T19:09:16Z",
      "side": 1,
      "message": "Not sure, but calling the \"select\" method if the treeview is configured with single selection it should deselect the old one, not necessary to call \"unselect\". So I think it is better to handle separate actions if it is multiple selections",
      "parentUuid": "0a18d926_6a6b02d7",
      "revId": "0239414e5e1a790a0ed9fca41252f093a62f3f65",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9280a9ca_33f1ad4f",
        "filename": "vcl/jsdialog/executor.cxx",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2021-02-23T07:13:06Z",
      "side": 1,
      "message": "yes I agree, multi selection can be handled in other \u0027action\u0027.\nbut for now to not break stuff, can this be done like this:\n\npTreeView-\u003eunselect(pTreeView-\u003eget_selected_index());\npTreeView-\u003eselect(*itEntry);\n\nbecause code in current state makes no sense:\npTreeView-\u003eunselect(*itEntry);\npTreeView-\u003eselect(*itEntry);",
      "parentUuid": "0d3e2d4f_55827000",
      "revId": "0239414e5e1a790a0ed9fca41252f093a62f3f65",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6718f28_e7924939",
        "filename": "vcl/jsdialog/executor.cxx",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1000664
      },
      "writtenOn": "2021-02-23T07:15:59Z",
      "side": 1,
      "message": "ok, I see it cannob be done using just pos index. so something like this should work:\n\nstd::unique_ptr\u003cweld::TreeIter\u003e itOldEntry(pTreeView-\u003emake_iterator());\npTreeView-\u003eget_iter_abs_pos(*itOldEntry, pTreeView-\u003eget_selected_index());\npTreeView-\u003eunselect(*itOldEntry);\n\nstd::unique_ptr\u003cweld::TreeIter\u003e itEntry(pTreeView-\u003emake_iterator());\npTreeView-\u003eget_iter_abs_pos(*itEntry, nAbsPos);\npTreeView-\u003eselect(*itEntry);",
      "parentUuid": "9280a9ca_33f1ad4f",
      "revId": "0239414e5e1a790a0ed9fca41252f093a62f3f65",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}