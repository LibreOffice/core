/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include "dialogs.hrc"
#include "helpids.hrc"

TabPage RID_XMLSECTP_GENERAL
{
    HelpId = HID_XMLSEC_TP_GENERAL;
    Size = MAP_APPFONT( TP_WIDTH, TP_HEIGHT );
    OutputSize = TRUE;
    Hide = TRUE;
    SVLook = TRUE;
    Window WIN_FRAME
    {
        SVLook = TRUE;
        Border = TRUE;
        Pos = MAP_APPFONT( CV_COL_0, CV_ROW_0 );
        Size = MAP_APPFONT( CV_CONT_WIDTH, CV_CONT_HEIGHT );
    };
    FixedImage IMG_CERT
    {
        Pos = MAP_APPFONT( CW_COL_0, CW_ROW_0 );
        Size = MAP_APPFONT( IMG1_WIDTH, IMG1_HEIGHT );
        Fixed = Image
        {
            ImageBitmap = Bitmap { File = "certificate_40x56.png"; };
            MaskColor = STD_MASKCOLOR;
        };
    };
    FixedText FI_CERTINFO
    {
        Pos = MAP_APPFONT( CW_COL_3, CW_ROW_1 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_3, RSC_CD_FIXEDTEXT_HEIGHT );
        Text [ en-US ] = " Certificate Information";
    };
    FixedLine FL_SEP1
    {
        Pos = MAP_APPFONT( CW_COL_0, CW_ROW_3 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_0, RSC_CD_FIXEDLINE_HEIGHT );
    };
    FixedText FI_HINTNOTTRUST
    {
        Pos = MAP_APPFONT( CW_COL_1, CW_ROW_4 );
        Size = MAP_APPFONT( CW_COL_5a-CW_COL_1, CW_ROW_4a-CW_ROW_4 );
        WordBreak = TRUE;
        Text [ en-US ] = "This certificate is intended for the following purpose(s):";
    };
    FixedLine FL_SEP2
    {
        Pos = MAP_APPFONT( CW_COL_0, CW_ROW_5 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_0, RSC_CD_FIXEDLINE_HEIGHT );
    };
    FixedText FI_ISSTOLABEL
    {
        Pos = MAP_APPFONT( CW_COL_1, CW_ROW_6 );
        Size = MAP_APPFONT( CW_COL_4-CW_COL_1-1, RSC_CD_FIXEDTEXT_HEIGHT );
        Text [ en-US ] = "Issued to:";
    };
    FixedText FI_ISSTO
    {
        Pos = MAP_APPFONT( CW_COL_4, CW_ROW_6 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_4, RSC_CD_FIXEDTEXT_HEIGHT );
    };
    FixedText FI_ISSBYLABEL
    {
        Pos = MAP_APPFONT( CW_COL_1, CW_ROW_7 );
        Size = MAP_APPFONT( CW_COL_4-CW_COL_1-1, RSC_CD_FIXEDTEXT_HEIGHT );
        Text [ en-US ] = "Issued by:";
    };
    FixedText FI_ISSBY
    {
        Pos = MAP_APPFONT( CW_COL_4, CW_ROW_7 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_4, RSC_CD_FIXEDTEXT_HEIGHT );
    };
    FixedText FI_VALIDDATE
    {
        Pos = MAP_APPFONT( CW_COL_1, CW_ROW_8 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_1-1, RSC_CD_FIXEDTEXT_HEIGHT );
        Text [ en-US ] = "Valid from %SDATE% to %EDATE%";
    };
    FixedImage IMG_KEY
    {
        Pos = MAP_APPFONT( CW_COL_0, CW_ROW_9 );
        Size = MAP_APPFONT( IMG2_WIDTH, IMG2_HEIGHT );
        Fixed = Image
        {
            ImageBitmap = Bitmap { File = "key_12.png"; };
            MaskColor = STD_MASKCOLOR;
        };
    };
    FixedText FI_CORRPRIVKEY
    {
        Pos = MAP_APPFONT( CW_COL_1a, CW_ROW_10 );
        Size = MAP_APPFONT( CW_COL_5-CW_COL_1a, RSC_CD_FIXEDTEXT_HEIGHT );
        Text [ en-US ] = "You have a private key that corresponds to this certificate.";
    };
    String STR_CERTIFICATE_NOT_VALIDATED
    {
        Text [ en-US ] = "The certificate could not be validated.";
    };
    Image IMG_STATE_NOT_VALIDATED
    {
        ImageBitmap = Bitmap { File = "notcertificate_40x56.png"; };
           MaskColor = STD_MASKCOLOR;
    };
};

String STR_HEADERBAR
{
    Text [ en-US ] = "Field\tValue";
};

String STR_VERSION
{
    Text [ en-US ] = "Version";
};

String STR_SERIALNUM
{
    Text [ en-US ] = "Serial Number";
};

String STR_SIGALGORITHM
{
    Text [ en-US ] = "Signature Algorithm";
};

String STR_ISSUER
{
    Text [ en-US ] = "Issuer";
};

String STR_VALIDFROM
{
    Text [ en-US ] = "Valid From";
};

String STR_VALIDTO
{
    Text [ en-US ] = "Valid to";
};

String STR_SUBJECT
{
    Text [ en-US ] = "Subject";
};

String STR_SUBJECT_PUBKEY_ALGO
{
    Text [ en-US ] = "Subject Algorithm";
};

String STR_SUBJECT_PUBKEY_VAL
{
    Text [ en-US ] = "Public Key";
};

String STR_SIGNATURE_ALGO
{
    Text [ en-US ] = "Signature Algorithm";
};

String STR_THUMBPRINT_SHA1
{
    Text [ en-US ] = "Thumbprint SHA1";
};

String STR_THUMBPRINT_MD5
{
    Text [ en-US ] = "Thumbprint MD5";
};

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
