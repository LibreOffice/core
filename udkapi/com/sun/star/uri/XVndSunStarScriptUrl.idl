/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_uri_XVndSunStarScriptUrl_idl__
#define __com_sun_star_uri_XVndSunStarScriptUrl_idl__

#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module uri {

/**
   represents absolute &ldquo;vnd.sun.star.script&rdquo; URLs.

   <p>These URLs are of the form<br/>
   &nbsp;&nbsp;&nbsp;<var>vnd-sun-star-script-url</var> =
   <code>"VND.SUN.STAR.SCRIPT:"</code> <var>name</var> [<code>"?"</code>
   <var>parameter</var> *(<code>"&"</code> <var>parameter</var>)]<br/>
   &nbsp;&nbsp;&nbsp;<var>name</var> = 1*<var>schar</var><br/>
   &nbsp;&nbsp;&nbsp;<var>parameter</var> = <var>key</var> <code>"="</code>
   <var>value</var><br/>
   &nbsp;&nbsp;&nbsp;<var>key</var> = 1*<var>schar</var><br/>
   &nbsp;&nbsp;&nbsp;<var>value</var> = *<var>schar</var><br/>
   &nbsp;&nbsp;&nbsp;<var>schar</var> = <var>unreserved</var> / <var>escaped</var> /
   <code>"$"</code> / <code>"+"</code> / <code>","</code> / <code>":"</code> /
   <code>";"</code> / <code>"@"</code> / <code>"["</code> /
   <code>"]"</code><br/>
   See <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC&nbsp;2396</a>,
   <a href="http://www.ietf.org/rfc/rfc2732.txt">RFC&nbsp;2732</a>, and
   <a href="http://www.ietf.org/rfc/rfc2234.txt">RFC&nbsp;2234</a> for
   details.</p>

   <p>The names, keys, and values are arbitrary Unicode strings (non-empty
   Unicode strings in the case of names and keys), encoded as UTF-8 byte
   sequences.  It is an error if any of them does not represent a valid UTF-8
   byte sequence.  Keys are compared for equality character-by-character,
   without considering case folding or normalization.  There may be multiple
   parameters with equal keys.</p>

   @since OOo 2.0
 */
published interface XVndSunStarScriptUrl: com::sun::star::uno::XInterface {
    /**
       returns the name part of this URL.

       @returns
       the non-escaped value of the name part.
     */
    string getName();

    /**
        sets the name part of this URL.

        @param name
        specifies the non-escaped new name part of the URL.

        @throws ::com::sun::star::lang::IllegalArgumentException
        if name is empty

        @since OOo 3.0
    */
    void   setName([in] string name)
        raises ( ::com::sun::star::lang::IllegalArgumentException );

    /**
       returns whether this URL has a parameter with a given key.

       @param key
       a non-escaped key.

       @returns
       `TRUE` if this URL has at least one parameter with the given key.  In
       particular, if <code>key</code> is an empty `string`, `FALSE`
       is returned.
     */
    boolean hasParameter([in] string key);

    /**
       returns the value of a parameter with a given key.

       @param key
       a non-escaped key.

       @returns
       the non-escaped value of the first parameter with the given key.  If
       there is no parameter with the given key, or if <code>key</code> is an
       empty `string`, an empty `string` is returned.
     */
    string getParameter([in] string key);

    /**
        sets the value of a parameter with a given key.

        @param key
        a non-escaped key

        @param value
        the non-escaped value to be set for the parameter. If there already is a
        parameter with this key, the value of its first appearance will be replaced.
        Otherwise, a parameter with the given key/value will be appended.

        @throws ::com::sun::star::lang::IllegalArgumentException
        if key is empty

        @since OOo 3.0
    */
    void setParameter( [in] string key, [in] string value )
        raises ( ::com::sun::star::lang::IllegalArgumentException );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
