/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_reflection_XStructTypeDescription_idl__
#define __com_sun_star_reflection_XStructTypeDescription_idl__

#include <com/sun/star/reflection/XCompoundTypeDescription.idl>

module com {  module sun {  module star {  module reflection {

interface XTypeDescription;

/**
   Reflects a struct type, supporting polymorphic struct types.

   <p>This type supersedes XCompoundTypeDescription, which only
   supports plain struct types.</p>

   <p>This type is used to reflect all of the following:</p>
   <ul>
       <li>Polymorphic struct type templates, like
       <code>Struct&lt;T, U&gt;</code>.  For these,
       com::sun::star::reflection::XStructTypeDescription::getTypeParameters()
       returns a non-empty sequence, while
       com::sun::star::reflection::XStructTypeDescription::getTypeArguments()
       returns an empty sequence.</li>

       <li>Instantiated polymorphic struct types, like <code>Struct&lt;long,
       hyper&gt;</code>.  For these,
       com::sun::star::reflection::XStructTypeDescription::getTypeParameters()
       returns an empty sequence, while
       com::sun::star::reflection::XStructTypeDescription::getTypeArguments()
       returns a non-empty sequence.</li>

       <li>Plain struct types.  For these, both
       com::sun::star::reflection::XStructTypeDescription::getTypeParameters()
       and
       com::sun::star::reflection::XStructTypeDescription::getTypeArguments()
       return an empty sequence.</li>
   </ul>

   @since OOo 2.0
 */
interface XStructTypeDescription: XCompoundTypeDescription {
    /**
       Returns the type parameters of a polymorphic struct type template.

       @return a sequence of the names of all type parameters, in the correct
       order; for a plain struct type, or an instantiated polymorphic struct
       type, an empty sequence is returned
     */
    sequence<string> getTypeParameters();

    /**
       Returns the type arguments of an instantiated polymorphic struct type.

       @return a sequence of all type arguments, in the correct order; for a
       plain struct type, or a polymorphic struct type template, an empty
       sequence is returned
     */
    sequence<XTypeDescription> getTypeArguments();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
