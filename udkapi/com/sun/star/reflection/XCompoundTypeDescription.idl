/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_reflection_XCompoundTypeDescription_idl__
#define __com_sun_star_reflection_XCompoundTypeDescription_idl__

#include <com/sun/star/reflection/XTypeDescription.idl>



 module com {  module sun {  module star {  module reflection {


/** Reflects a compound type, i.e. a struct or exception.

    <p>For struct types, this type is superseded by
    XStructTypeDescription, which supports polymorphic struct
    types.</p>
*/
published interface XCompoundTypeDescription: com::sun::star::reflection::XTypeDescription
{
    /** Returns the type of the base type of the compound type.
        If the compound does not have a base type, the method returns a null interface.

        @return
                base interface or null
    */
    com::sun::star::reflection::XTypeDescription getBaseType();

    /** Returns the member types of the struct/exception in IDL declaration order.

        <p>For a polymorphic struct type template, a member of parameterized
        type is represented by an instance of
        com::sun::star::reflection::XTypeDescription whose
        type class is <code>UNKNOWN</code> and whose name is the name of the
        type parameter.</p>

        @return
                members of struct/exception
    */
    sequence<com::sun::star::reflection::XTypeDescription> getMemberTypes();

    /** Returns the member names of the struct/exception in IDL declaration order.

        @return
                members names of struct/exception
    */
    sequence<string> getMemberNames();
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
