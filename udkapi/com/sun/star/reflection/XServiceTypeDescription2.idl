/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_reflection_XServiceTypeDescription2_idl__
#define __com_sun_star_reflection_XServiceTypeDescription2_idl__

#include <com/sun/star/reflection/XServiceTypeDescription.idl>

module com {  module sun {  module star {  module reflection {

interface XServiceConstructorDescription;
interface XTypeDescription;

/**
   Reflects a service, supporting single-interface&ndash;based services.

   <p>This type supersedes XServiceTypeDescription, which only
   supports obsolete, accumulation-based services.</p>

   @since OOo 2.0
 */
interface XServiceTypeDescription2: XServiceTypeDescription {
    /**
       Returns whether this object reflects a single-interface&ndash;based
       service.

       @return `TRUE` if this object reflects a single-interface&ndash;based
           service, and `FALSE` if this object reflects an obsolete,
           accumulation-based service
     */
    boolean isSingleInterfaceBased();

    /**
       Returns the interface type associated with the service.

       @return the reflection of the interface type associated with the service
           (of type com::sun::star::reflection::XInterfaceTypeDescription
           or, in case of a typedef,
           com::sun::star::reflection::XIndirectTypeDescription),
           for a single-interface&ndash;based service; for an obsolete,
           accumulation-based service, `NULL` is returned
     */
    XTypeDescription getInterface();

    /**
       Returns the constructors of the service.

       @return the reflections of all constructors of the service, in no
           particular order
     */
    sequence<XServiceConstructorDescription> getConstructors();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
