/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_script_ScriptEventDescriptor_idl__
#define __com_sun_star_script_ScriptEventDescriptor_idl__



 module com {  module sun {  module star {  module script {

/** describes an effect, especially a script to be executed,
    for a certain event given by the listener type and the name of the
    event method.
 */
published struct ScriptEventDescriptor
{
    /** listener type as string, same as listener-XIdlClass.getName().
     */
    string ListenerType;

    /** event method as string.
     */
    string EventMethod;

    /** data to be used if the addListener method needs an additional
        parameter.
        <p>If the type of this parameter is different from string,
        it will be converted, when added.</p>
     */
    string AddListenerParam;

    /** type of the script language as string; for example, "Basic" or "StarScript".
     */
    string ScriptType;

    /** script code as string (the code has to correspond with the language
        defined by ScriptType).
     */
    string ScriptCode;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
