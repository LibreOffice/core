/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_script_XScriptEventsAttacher_idl__
#define __com_sun_star_script_XScriptEventsAttacher_idl__

#include <com/sun/star/script/XScriptListener.idl>
#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/beans/IntrospectionException.idl>

#include <com/sun/star/script/CannotCreateAdapterException.idl>

#include <com/sun/star/lang/ServiceNotRegisteredException.idl>



 module com {  module sun {  module star {  module script {


/**
    This interface can be used to attach script events to a number of
    objects that give access to the definition of events that should
    be attached to them, e.g., by supporting XEventsSupplier
*/
published interface XScriptEventsAttacher: com::sun::star::uno::XInterface
{
    /**
        Attaches the events defined by XScriptEventsSupplier to the
        corresponding object implementing XScriptEventsSupplier.

        @param Objects
                            Sequence of all objects. Usually the objects should directly
                            support XScriptEventsAttacher to define the events
                            but this is not strictly required. It's also possible that
                            the object implementing XScriptEventsAttacher
                            knows how to get the necessary information for the objects.
        @param xListener
                            All events (if defined by XScriptEventsSupplier) that are fired
                            by one of the objects are mapped into a ScriptEvent
                            and passed to the methods of this XScriptListener.
        @param Helper
                            Helper object for the implementation. This value will be
                            passed to the XScriptListener as Helper property in the
                            ScriptEvent.
    */
    void attachEvents(  [in] sequence< com::sun::star::uno::XInterface > Objects,
                        [in] com::sun::star::script::XScriptListener xListener,
                        [in] any Helper )
            raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::beans::IntrospectionException,
                    com::sun::star::script::CannotCreateAdapterException,
                    com::sun::star::lang::ServiceNotRegisteredException );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
