/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_script_InterruptEngineEvent_idl__
#define __com_sun_star_script_InterruptEngineEvent_idl__

#include <com/sun/star/lang/EventObject.idl>

#include <com/sun/star/script/InterruptReason.idl>



 module com {  module sun {  module star {  module script {

/** describes an interrupt which occurs in the scripting engine.
    @deprecated
 */
published struct InterruptEngineEvent: com::sun::star::lang::EventObject
{
    /** fully qualified name to address the module or function affected by the event that
        took place.

        <p>If the module or function can't be addressed by name (for example, in case
        that a runtime-generated eval-module is executed), this string is empty.</p>
     */
    string Name;

    /** source code of the Module affected by the event that took place.

        <p>If the source can
        be accessed using the ModuleName, or if the source is unknown (executing compiled
        code), this string can be empty.</p>
     */
    string SourceCode;

    /** contains the first line in the module's source code that is affected
        by the event that took place.



        <p>If "name" addresses a function, all line and column values
        are nevertheless given relative to the module's source. If
        source code is not available, this value addresses a binary
        position in the compiled code.  </p>

        @see XLibraryAccess::getModuleCode
        @see XLibraryAccess::getFunctionCode
     */
    long StartLine;

    /** contains the first column in the "StartLine" that is affected by the
        event that took place.
     */
    long StartColumn;

    /** contains the last line in the module's source code that is affected
        by the event that took place.
     */
    long EndLine;

    /** contains the first column in the "EndLine" which is NOT affected by
        the event that took place.
     */
    long EndColumn;

    /** error message.
        <p>Only valid if Reason is RuntimeError or CompileError.</p>
     */
    string ErrorMessage;

    /** contains the interrupt reason.
     */
    com::sun::star::script::InterruptReason Reason;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
