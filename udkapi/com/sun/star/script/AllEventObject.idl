/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_script_AllEventObject_idl__
#define __com_sun_star_script_AllEventObject_idl__

#include <com/sun/star/lang/EventObject.idl>

#include <com/sun/star/reflection/XIdlClass.idl>



 module com {  module sun {  module star {  module script {

/** This event is a wrapper for an original event in a forwarding event.

    <p> Usually the original event is the first argument in the
    array of arguments. </p>
 */
published struct AllEventObject: com::sun::star::lang::EventObject
{
    /** A helper value for the implementation that can be used arbitrarily.

        <p>This field reflects the third parameter of the method
        XAllListenerAdapterService::createAllListerAdapter().
        </p>
     */
    any Helper;

    /** contains the type of the original listener.
     */
    type ListenerType;

    /** The original method name on which the event was fired.
     */
    string MethodName;

    /** The arguments of the original method.
     */
    sequence<any> Arguments;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
