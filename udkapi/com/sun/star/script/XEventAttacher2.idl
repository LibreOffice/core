/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/**
 * Version: MPL 1.1 / GPLv3+ / LGPLv3+
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Initial Developer of the Original Code is
 *       Kohei Yoshida <kohei.yoshida@suse.com> (SUSE, Inc.)
 * Portions created by the Initial Developer are Copyright (C) 2011 the
 * Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 3 or later (the "GPLv3+"), or
 * the GNU Lesser General Public License Version 3 or later (the "LGPLv3+"),
 * in which case the provisions of the GPLv3+ or the LGPLv3+ are applicable
 * instead of those above.
 */

#ifndef __com_sun_star_script_XEventAttacher2_idl__
#define __com_sun_star_script_XEventAttacher2_idl__

#include <com/sun/star/script/XEventAttacher.idl>
#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/script/EventListener.idl>

module com {  module sun {  module star {  module script {

interface XEventAttacher2: com::sun::star::script::XEventAttacher
{
    /** Register a multiple set of listeners listening for the same
        target.  Besides passing multiple listeners, the behavior of
        this method is identical to that of
        <method>attachSingleEventListener</method>.

        @see com::sun::star::script::XEventAttacher::attachSingleEventListener
     */
    sequence<com::sun::star::lang::XEventListener>
        attachMultipleEventListeners(
            [in] com::sun::star::uno::XInterface xTarget,
            [in] sequence<com::sun::star::script::EventListener> aListeners )
           raises( com::sun::star::lang::IllegalArgumentException,
                   com::sun::star::beans::IntrospectionException,
                   com::sun::star::script::CannotCreateAdapterException,
                   com::sun::star::lang::ServiceNotRegisteredException );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
