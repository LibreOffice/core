/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_beans_XPropertyWithState_idl__
#define __com_sun_star_beans_XPropertyWithState_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/PropertyState.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>


module com {  module sun {  module star {  module beans {


/** makes it possible to query information about the state of
    this object, seen as a property contained in a property set.

    <p> This interface provides direct access to operations
        that are available if the containing property set
        implements XPropertyState.
    </p>

    <p>The state contains the information if:</p>
    <ul>
        <li>a value is available or void</li>
        <li>the value is stored in the object itself, or if a default value is being used</li>
        <li>or if the value cannot be determined, due to ambiguity
            (multi selection with multiple values).</li>
    </ul>

    <p> Generally objects that implement this interface
        also implement XProperty.
    </p>
 */
published interface XPropertyWithState: com::sun::star::uno::XInterface
{

    /** @returns
                the state of this as a property.
     */
    com::sun::star::beans::PropertyState getStateAsProperty( );


    /** sets this to its default value.

        <p> The value depends on the implementation of this interface.
            If this is a bound property, the value changes before
            the change events are fired.  If this is a constrained property,
            the vetoable event is fired before the property value changes.
        </p>

            @throws  com::sun::star::lang::WrappedTargetException
                if the implementation has an internal reason for the exception.
                In this case the original exception is wrapped into that
                com::sun::star::lang::WrappedTargetException.
     */
    void setToDefaultAsProperty( )
            raises( com::sun::star::lang::WrappedTargetException );


    /**     @returns
                an object representing the default state of this object (as a property).

            <p> If no default exists, is not known or is void,
                then the return value is `NULL`.
            </p>

            @throws  com::sun::star::lang::WrappedTargetException
                if the implementation has an internal reason for the exception.
                In this case the original exception is wrapped into that
                com::sun::star::lang::WrappedTargetException.
     */
    com::sun::star::uno::XInterface getDefaultAsProperty( )
            raises( com::sun::star::lang::WrappedTargetException );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
