/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_beans_XMultiHierarchicalPropertySet_idl__
#define __com_sun_star_beans_XMultiHierarchicalPropertySet_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/XHierarchicalPropertySetInfo.idl>

#include <com/sun/star/beans/PropertyVetoException.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>


module com {  module sun {  module star {  module beans {


/** provides access to multiple properties which form a hierarchy.

    @see XHierarchicalPropertySet
 */
published interface XMultiHierarchicalPropertySet: com::sun::star::uno::XInterface
{

    /** retrieve information about the hierarchy of properties

        @returns
                the XHierarchicalPropertySetInfo interface,
                which describes the property hierarchy of the object which
                supplies this interface.

        @returns
                `NULL` if the implementation cannot or will
                not provide information about the properties; otherwise the
                interface XHierarchicalPropertySetInfo is returned.

        @see XHierarchicalPropertySet::getHierarchicalPropertySetInfo
     */
    com::sun::star::beans::XHierarchicalPropertySetInfo getHierarchicalPropertySetInfo();


    /** sets the values of the properties with the specified nested names.

        <p> The values of the properties must change before bound
            events are fired. The values of constrained properties
            should change after the vetoable events are fired, if no
            exception occurs.  </p>

        <p> Unknown properties are ignored.  </p>

        @param  aHierarchicalPropertyNames
                This parameter specifies the names of the properties.

        @param  Values
                This parameter specifies the new values for the properties.

        @throws PropertyVetoException
                if one of the properties is constrained and the change is
                vetoed by a XVetoableChangeListener.

        @throws com::sun::star::lang::IllegalArgumentException
                if one of the values is not a legal value for the
                corresponding property or if one of the names
                is not a well-formed nested name for this hierarchy.
                An implementation is not required to detect the latter
                condition.

        @throws com::sun::star::lang::WrappedTargetException
                if the implementation has an internal reason for the exception.
                In this case the original exception is wrapped into that
                com::sun::star::lang::WrappedTargetException.

        @see XHierarchicalPropertySet::setHierarchicalPropertyValue
        @see XMultiPropertySet::setPropertyValues
     */


    void setHierarchicalPropertyValues( [in] sequence<string> aHierarchicalPropertyNames,
             [in] sequence<any> Values )
            raises( com::sun::star::beans::PropertyVetoException,
                    com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::lang::WrappedTargetException );


    /** @returns
            a sequence of all values of the properties which are specified
            by their nested names.

        <p> The order of the values in the returned sequence will be the same
            as the order of the names in the argument.  </p>

        <p> Unknown properties are ignored, in their place `NULL` will be returned.  </p>

        @throws com::sun::star::lang::IllegalArgumentException
                if one of the names is not a well-formed
                nested name for this hierarchy.
                An implementation is not required to detect this
                condition.

        @throws com::sun::star::lang::WrappedTargetException
                if the implementation has an internal reason for the exception.
                In this case the original exception is wrapped into that
                com::sun::star::lang::WrappedTargetException.

        @see XHierarchicalPropertySet::getHierarchicalPropertyValue
        @see XMultiPropertySet::setPropertyValues
     */
    sequence<any> getHierarchicalPropertyValues( [in] sequence<string> aPropertyNames )
            raises( com::sun::star::lang::IllegalArgumentException ,
                    com::sun::star::lang::WrappedTargetException );


};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
