/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_beans_XHierarchicalPropertySetInfo_idl__
#define __com_sun_star_beans_XHierarchicalPropertySetInfo_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/Property.idl>

#include <com/sun/star/beans/UnknownPropertyException.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>



module com {  module sun {  module star {  module beans {


/** specifies a hierarchy of properties.

    <p>The specification only describes the properties, it does not contain
    any values.</p>
 */
published interface XHierarchicalPropertySetInfo: com::sun::star::uno::XInterface
{

    /** @returns
                the property with the specified name from the hierarchy.

        @param aHierarchicalName
                specifies the nested name of the property.

        @throws UnknownPropertyException
                if the property does not exist.

        @throws com::sun::star::lang::IllegalArgumentException
                if <var>aHierarchicalName</var> is not a well-formed
                nested name for this hierarchy.
                   An implementation is not required to detect this
                condition.

     */
    com::sun::star::beans::Property getPropertyByHierarchicalName( [in] string aHierarchicalName )
            raises( com::sun::star::beans::UnknownPropertyException );


    /** @returns
                `TRUE` if a property with the specified name exists;
                otherwise `FALSE` is returned.

        @param  aHierarchicalName
                specifies the name of the property.

        @throws com::sun::star::lang::IllegalArgumentException
                if <var>aHierarchicalName</var> is not a well-formed
                nested name for this hierarchy.
                   An implementation is not required to detect this
                condition.
     */
    boolean hasPropertyByHierarchicalName( [in] string aHierarchicalName );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
