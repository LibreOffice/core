/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_beans_XFastPropertySet_idl__
#define __com_sun_star_beans_XFastPropertySet_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/UnknownPropertyException.idl>

#include <com/sun/star/beans/PropertyVetoException.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>



module com {  module sun {  module star {  module beans {


/** provides a fast way of accessing and changing property values.

    <p>This interface is an extension to the XPropertySet
    interface. The get and set methods use handles to access the
    property values instead of character strings.</p>
 */
published interface XFastPropertySet: com::sun::star::uno::XInterface
{

    /** sets the value to the property with the specified name.

        @param nHandle
            contains the implementation handle of the
            implementation for the property.

        @param aValue
            contains the new value of the property.

        @throws UnknownPropertyException
            if the property does not exist.

        @throws PropertyVetoException
            if a vetoable listener does not approve the change of
            a property value.

        @throws IllegalArgumentException
            if the new value cannot be converted to the type of the
            underlying property by an identity or widening conversion.

        @throws com::sun::star::lang::WrappedTargetException
            if the implementation has an internal reason for the exception.
            In this case the original exception is wrapped into this
            com::sun::star::lang::WrappedTargetException.

     */
    void setFastPropertyValue( [in] long nHandle,
             [in] any aValue )
            raises( com::sun::star::beans::UnknownPropertyException,
                    com::sun::star::beans::PropertyVetoException,
                    com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::lang::WrappedTargetException );


    /** @returns
            the value of the property with the name PropertyName.

        @param nHandle
            contains the implementation handle of the implementation for the property.

        @throws UnknownPropertyException
            if the property does not exist.

        @throws  com::sun::star::lang::WrappedTargetException
            if the implementation has an internal reason for the exception.
            In this case the original exception is wrapped into that
            com::sun::star::lang::WrappedTargetException.
     */
    any getFastPropertyValue( [in] long nHandle )
            raises( com::sun::star::beans::UnknownPropertyException,
                    com::sun::star::lang::WrappedTargetException );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
