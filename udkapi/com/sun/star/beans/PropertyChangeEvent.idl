/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_beans_PropertyChangeEvent_idl__
#define __com_sun_star_beans_PropertyChangeEvent_idl__

#include <com/sun/star/lang/EventObject.idl>



 module com {  module sun {  module star {  module beans {


/** gets delivered whenever a "bound" or "constrained" property is changed.

    <p>A PropertyChangeEvent object is sent as an
    argument to the methods of XPropertyChangeListener
    and XVetoableChangeListener. </p>

    <p>Normally such events contain the name and the old and new
    value of the changed property.  </p>

    <p>Void values may be provided for the old and new values if their
    true values are not known. </p>
 */
published struct PropertyChangeEvent: com::sun::star::lang::EventObject
{

    /** contains the unique name of the property which changes its value.
     */
    string PropertyName;


    /** contains `TRUE` if further events in the same transaction occur.
     */
    boolean Further;


    /** contains the implementation handle for the property.

        <p>May be -1 if the implementation has no handle. You can use
        this handle to get values from the XFastPropertySet.</p>
     */
    long PropertyHandle;


    /** contains the old value of the property.
     */
    any OldValue;


    /** contains the new value of the property.
     */
    any NewValue;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
