/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_lang_XUnoTunnel_idl__
#define __com_sun_star_lang_XUnoTunnel_idl__

#include <com/sun/star/uno/XInterface.idl>




module com {  module sun {  module star {  module lang {


/** An interface to tunnel UNO. This means providing access to data or
    something else, which is not specified by UNO-IDL.

    @attention
    Restrictive usage.  Use only, if there is no better possibility left.
    It is definitely a hack.

    <p>
    Common usage:
    Getting a C++ object pointer in the same process, thus to use an
    implementation directly, most often because of a design flaw.
    </p>
*/
published interface XUnoTunnel: com::sun::star::uno::XInterface
{
    /** Call this method to get something which is not specified in UNO, e.g.
        an address to some C++ object.

        @attention
        The identifier specifies how the return value is to be reinterpreted.
        The identifier must be globally unique, because it is unknown where
        the implementation resides.

        @param aIdentifier
               identifier
        @return
                something
    */
    hyper getSomething( [in] sequence< byte > aIdentifier );
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
