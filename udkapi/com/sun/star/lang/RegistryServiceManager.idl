/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_lang_RegistryServiceManager_idl__
#define __com_sun_star_lang_RegistryServiceManager_idl__

#include <com/sun/star/lang/ServiceManager.idl>

#include <com/sun/star/lang/MultiServiceFactory.idl>

#include <com/sun/star/lang/XInitialization.idl>

#include <com/sun/star/beans/XPropertySet.idl>

#include <com/sun/star/registry/XSimpleRegistry.idl>



module com {  module sun {  module star {  module lang {


/** Provides a collection of implementations for services reading from a
    persistent registry storage.

    For usage of the service manager have a look at service description
    of ServiceManager.

    @see ServiceManager
*/
published service RegistryServiceManager
{
    /** This is a derived ServiceManager service.
    */
    service com::sun::star::lang::ServiceManager;

    /** The first two arguments of the intitialization arguments reference:
        <ol>
        <li>a simple registry
        (com::sun::star::registry::XSimpleRegistry),
        i.e. the registry to be read from</li>
        <li>a component context
        (com::sun::star::uno::XComponentContext)
        to be installed as "DefaultContext" property of the
        ServiceManager which is the context to be used
        using the XMultiServiceFactory interface.</li>
        </ol>
    */
    interface com::sun::star::lang::XInitialization;

    /** Property access.
    */
    interface com::sun::star::beans::XPropertySet;
    /** Specifies the current registry to be read from.
    */
    [readonly, property] com::sun::star::registry::XSimpleRegistry Registry;
};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
