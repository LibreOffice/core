/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_io_XConnectable_idl__
#define __com_sun_star_io_XConnectable_idl__

#include <com/sun/star/uno/XInterface.idl>



 module com {  module sun {  module star {  module io {

/** makes it possible to connect data sinks and sources.

    <p>The predecessor-member is the element in the connection that is
    nearer to the source of the data. The successor-member is the element
    that is further away from the source of the data. (Note that this
    classification does not depend on whether the class implements
    XInputStream or XOutputStream; it only
    depends on the direction of data flow.) </p>
    <p>This interface allows generic services to navigate between
    arbitrary elements of a connection.</p>
 */
published interface XConnectable: com::sun::star::uno::XInterface
{
    /** sets the source of the data flow for this object.
     */
    void setPredecessor( [in] com::sun::star::io::XConnectable aPredecessor );

    /** @returns
            the predecessor of this object.
     */
    com::sun::star::io::XConnectable getPredecessor();

    /** sets the sink of the data flow for this object.
     */
    void setSuccessor( [in] com::sun::star::io::XConnectable aSuccessor );

    /** @returns
            the successor of this object.
     */
    com::sun::star::io::XConnectable getSuccessor();

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
