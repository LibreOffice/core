/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef __com_sun_star_io_XAsyncOutputMonitor_idl__
#define __com_sun_star_io_XAsyncOutputMonitor_idl__

#include <com/sun/star/io/IOException.idl>
#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module io {

/**
   An optional companion interface to
   com::sun::star::io::XOutputStream that supports scenarios
   where com::sun::star::io::XOutputStream::writeBytes()
   operates asynchronously and does not necessarily report any errors.

   <p>A typical scenario where this interface is useful is when an
   com::sun::star::io::XOutputStream is used to write to a
   file via NFS.  Normally, any calls to
   com::sun::star::io::XOutputStream::writeBytes() will
   execute asynchronously then, in that any potential errors might only be
   reported by later calls to
   com::sun::star::io::XOutputStream::writeBytes() or
   com::sun::star::io::XOutputStream::closeOutput().  If
   such an output stream shall not be closed immediately after one or more calls
   to com::sun::star::io::XOutputStream::writeBytes(), but
   the client wants to know as soon as possible whether writing was successful,
   then
   com::sun::star::io::XAsyncOutputMonitor::waitForCompletion()
   should be called after the series of calls to
   com::sun::star::io::XOutputStream::writeBytes().</p>

   @since OOo 2.0
*/
interface XAsyncOutputMonitor {
    /**
       waits for the completion of any previous calls to
       com::sun::star::io::XOutputStream::writeBytes(),
       and reports potentially pending errors.

       <p>Calling this method is potentially expensive (even if the associated
       com::sun::star::io::XOutputStream represents a local
       file not accessed via NFS, for example).  This method has a similar
       description to
       com::sun::star::io::XOutputStream::flush().
       However, where the semantics of <code>flush</code> are rather vague,
       <code>waitForCompletion</code> has very specific semantics&mdash;it just
       blocks long enough so that any errors encountered during previous calls
       to com::sun::star::io::XOutputStream::writeBytes()
       can reliably be reported.  It specificially does not guarantee that any
       data have safely been stored on a stable physical medium, like a hard
       disk (and it is completely unspecified whether <code>flush</code> should
       give this guarantee).</p>

       @throws com::sun::star::io::IOException
       if any previous call to com::sun::star::io::XOutputStream::writeBytes()
       encountered such an error, but has not yet reported it (in cases where
       <code>writeBytes</code> operates asynchronously).
    */
    void waitForCompletion() raises (IOException);
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
