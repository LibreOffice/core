/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_bridge_oleautomation_XAutomationObject_idl__
#define __com_sun_star_bridge_oleautomation_XAutomationObject_idl__

#include <com/sun/star/uno/XInterface.idl>

module com {  module sun {  module star {  module bridge { module oleautomation {


/** a tagging interface for UNO objects which represent Automation
    objects.
    <p>
    If a Automation object is bridged into the UNO environment, then
    the resulting UNO object does not distinguish itself from any
    other ordinary UNO object. However, it may be desirable to have
    that distinction regardless, if a UNO client needs to take
    particular Automation specific characteristics into account.
    By providing XAutomationObject an object declares
    to be representing an Automation object.

    @since OOo 1.1.2
 */
interface XAutomationObject: com::sun::star::uno::XInterface
{

};

}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
