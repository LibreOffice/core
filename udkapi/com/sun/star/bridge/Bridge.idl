/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_bridge_Bridge_idl__
#define __com_sun_star_bridge_Bridge_idl__

#include <com/sun/star/lang/XInitialization.idl>
#include <com/sun/star/lang/XComponent.idl>
#include <com/sun/star/bridge/XBridge.idl>


module com {  module sun {  module star {  module bridge {


/** This meta service allows the bridgefactory service to instantiate an
    interprocess bridge using a certain transfer protocol.

    <p> Components, that support a certain protocol, must have at least two
    service names: </p>

    <ul>
        <li> com.sun.star.bridge.Bridge </li>
        <li> arbitrary-module-path.ProtocolnameBridge </li>
    </ul>

    <p>The protocol name should be written as common servicenames, first letter is a
    capital letter, the rest in small letters postfixed by Bridge (e.g.:
    <code>com.sun.star.bridge.UrpBridge</code> would be correct servicename for the
    "urp" protocol).  However, the protocol names are compared case insensitive.
    If there exist two services supporting the same protocol, it is arbitrary
    which one is chosen, so this should be omitted. </p>
 */
published service Bridge
{
    /** allows to initialize the bridge service with the necessary
         arguments. The sequence&lt;any&gt; must have 4 members.

         <ol>
             <li> String: The unique name of the bridge or an empty string</li>
             <li> String: The protocol, that shall be instantiated</li>
             <li> XConnection: The bidirectional connection, the bridge should work on</li>
             <li> XInstanceProvider:
                The instance provider, that shall be called to access the initial object.</li>
         </ol>
     */
    interface com::sun::star::lang::XInitialization;

    /** The main interface of the service
     */
    interface com::sun::star::bridge::XBridge;

    /** This interface allows to terminate the interprocess bridge.
     */
    interface com::sun::star::lang::XComponent;

};


}; }; }; };
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
