/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_bridge_OleApplicationRegistration_idl__
#define __com_sun_star_bridge_OleApplicationRegistration_idl__

#include <com/sun/star/uno/XInterface.idl>



 module com {  module sun {  module star {  module bridge {


/** registers UNO objects as COM objects.

    <p>
    That is, COM class factories are registered with COM at runtime. The required
    EXE server is the application which deploys this service. In order to access the
    factories by COM API functions, there need to be proper registry entries. This service
    does not provide for writing those entries.<p>
    The instantiation of the registered objects can be carried out by any ordinary mechanism
    which is used in a certain language to create COM components. For example, CreateObject
    in Visual Basic, CoCreateInstance in C++.
    </p><p>
    Currently only a factory for the service com.sun.star.long.MultiServiceFactory is registered
    by this service. The CLSID is {82154420-0FBF-11d4-8313-005004526AB4} and the ProgId is
    com.sun.star.ServiceManager.
    </p>

    <p>OleApplicationRegistration does not provide any particular interface because the UNO objects
    are registered while instantiating this service and deregistered
    if the implementation, which makes use of this service, is being released.</p>
    <p>
    @deprecated
 */
published service OleApplicationRegistration
{

    interface com::sun::star::uno::XInterface;

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
