/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_container_XIdentifierReplace_idl__
#define __com_sun_star_container_XIdentifierReplace_idl__

#include <com/sun/star/container/XIdentifierAccess.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/container/NoSuchElementException.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>



module com {  module sun {  module star {  module container {


/** This is the generic interface for supporting the replacement of elements
    with unique identifiers.
*/
published interface XIdentifierReplace: com::sun::star::container::XIdentifierAccess
{
    /** replaces the element with the specified identifier.

        @param Identifier
            specifies the identifier of the element that should be retrieved.

        @param aElement
            the new element that replaces the old element for the specified identifier.

        @throws com::sun::star::lang::IllegalArgumentException
            If the argument is not valid for this container.

        @throws com::sun::star::lang::NoSuchElementException
            If the identifier is not existing.

        @throws  com::sun::star::lang::WrappedTargetException
            If the implementation has internal reasons for exceptions,
            then wrap these in a com::sun::star::lang::WrappedTargetException
            exception.
     */
    void replaceByIdentifer( [in] long Identifier,
             [in] any aElement )
            raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::container::NoSuchElementException,
                    com::sun::star::lang::WrappedTargetException );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
