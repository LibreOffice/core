/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */
#ifndef __com_sun_star_container_XContainer_idl__
#define __com_sun_star_container_XContainer_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/container/XContainerListener.idl>



module com {  module sun {  module star {  module container {


/** supports quick access to the information if a container currently
    contains elements.

    <p>The XContainer interface is provided for containers
    which need to broadcast changes within the container; that means
    the actions of adding or removing elements are broadcast to the
    listeners.  </p>

    <p>This can be useful for UI to enable/disable some functions
    without actually accessing the data.  </p>

    @see XContent
    @see XIndexAccess
    @see XNameAccess
    @see XEnumerationAccess
 */
published interface XContainer: com::sun::star::uno::XInterface
{

    /** adds the specified listener to receive events when
        elements are inserted or removed.

       <p>It is suggested to allow multiple registration of the same listener,
        thus for each time a listener is added, it has to be removed.

        @see XContainerListener
     */
    void addContainerListener( [in] com::sun::star::container::XContainerListener xListener );


    /** removes the specified listener so it does not receive
        any events from this container.

       <p>It is suggested to allow multiple registration of the same listener,
        thus for each time a listener is added, it has to be removed.

        @see XContainerListener
     */
    void removeContainerListener( [in] com::sun::star::container::XContainerListener xListener );

};


}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
