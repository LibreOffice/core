{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c6e6f27d_2ea548f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-07T20:31:11Z",
      "side": 1,
      "message": "There is still missing a test case and the handling of something like:\n\nSub Test(Optional i)\n  MsgBox i + 10\nEnd Sub\n\nSub Main()\n  Test\nEnd Sub",
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f6b9d22_73ed7728",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-07T21:35:50Z",
      "side": 1,
      "message": "Yes, I see. Let us do it step by step :)",
      "parentUuid": "c6e6f27d_2ea548f9",
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce4b778d_f61244fb",
        "filename": "basic/source/runtime/runtime.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1731,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-07T21:35:50Z",
      "side": 1,
      "message": "It seems to me that putting the check, error, and early return to checkUnoStructCopy could be a better match?",
      "range": {
        "startLine": 1731,
        "startChar": 14,
        "endLine": 1731,
        "endChar": 32
      },
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b55505eb_025a9bac",
        "filename": "basic/source/runtime/runtime.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1731,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-08T11:07:25Z",
      "side": 1,
      "message": "Yes, the above commit was just a very very fast draft of a solution. Imho, we need to add checks in StepUnary, StepArith, and StepCompare in order to raise the appriopriate error. Can you think of other places, too?",
      "parentUuid": "ce4b778d_f61244fb",
      "range": {
        "startLine": 1731,
        "startChar": 14,
        "endLine": 1731,
        "endChar": 32
      },
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d3914a3_74f991c2",
        "filename": "basic/source/runtime/runtime.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1731,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-08T11:13:50Z",
      "side": 1,
      "message": "\u003e Can you think of other places, too?\n\nNot really - you know the code much better than me.\n\nI only had a vague idea about somehow making getters for the values to check if it\u0027s missing, and set the error right there, only having some specific methods for explicit access of missing variables (if we really need them). That would localize the checks, and would ~automatically expose all places where we need explicit treatment ... like passing as arguments to nested function calls.\n\nBut that would likely be a large undertaking. What you do here is good enough. Thank you!",
      "parentUuid": "b55505eb_025a9bac",
      "range": {
        "startLine": 1731,
        "startChar": 14,
        "endLine": 1731,
        "endChar": 32
      },
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60615bfb_34feeede",
        "filename": "basic/source/runtime/runtime.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1731,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-08T18:48:05Z",
      "side": 1,
      "message": "Ya some kind of getter for a SbxVariable would be a great idea, but I think there are so many circumstance we may not consider. Lets hope that these 3 cases cover all these missing optional parameters.",
      "parentUuid": "6d3914a3_74f991c2",
      "range": {
        "startLine": 1731,
        "startChar": 14,
        "endLine": 1731,
        "endChar": 32
      },
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7085dcd2_acb87f6b",
        "filename": "basic/source/runtime/runtime.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1731,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2022-01-31T18:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60615bfb_34feeede",
      "range": {
        "startLine": 1731,
        "startChar": 14,
        "endLine": 1731,
        "endChar": 32
      },
      "revId": "1e6b5e083fad78275709bd231cd27cdd5ef2f73c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}