{
  "comments": [
    {
      "key": {
        "uuid": "f93b9128_bc5e2f6b",
        "filename": "sc/source/core/tool/address.cxx",
        "patchSetId": 6
      },
      "lineNbr": 455,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "This lacks a check if it\u0027s really the [0] case that we want to detect here. i.e. the rExternDocName index i must be 0.",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d036576a_650003e0",
        "filename": "sc/source/core/tool/address.cxx",
        "patchSetId": 6
      },
      "lineNbr": 455,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-16T09:03:03Z",
      "side": 1,
      "message": "Balázs: could you list examples for all possible cases of the string in the comments, please? It\u0027s not obvious, that this must be a const string \"[0]\", or \"[\" + n + \"]\" or \"^[[][0-9]+[]]\" (mandatory starting position of \"[\" + n + \"]\").",
      "parentUuid": "f93b9128_bc5e2f6b",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc2218b2_3cf0b3db",
        "filename": "sc/source/core/tool/address.cxx",
        "patchSetId": 6
      },
      "lineNbr": 458,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "What exactly can occur between the passed position and the \u0027!\u0027 that we want to parse away here? The \"[0]\" string? Then that should be checked and not quietly skip something else.",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "588482c3_b1a25b8a",
        "filename": "sc/source/core/tool/address.cxx",
        "patchSetId": 6
      },
      "lineNbr": 458,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-16T09:03:03Z",
      "side": 1,
      "message": "Balázs, if we don\u0027t want to permit bad formula syntax, we need strict parsing, i.e. instead of .*!, we need something [a-zA-Z][-0-9a-zA-Z]*!, moreover handle encoded acuted letters, special characters, if needed. Likely it must be a helper function for this.",
      "parentUuid": "bc2218b2_3cf0b3db",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71d3dd47_ee87e925",
        "filename": "sc/source/core/tool/address.cxx",
        "patchSetId": 6
      },
      "lineNbr": 463,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "If there was whitespace occuring behind the \u0027!\u0027 wouldn\u0027t that be an error, so it shouldn\u0027t be silently parsed away?",
      "range": {
        "startLine": 463,
        "startChar": 20,
        "endLine": 463,
        "endChar": 37
      },
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d923b697_1bba1202",
        "filename": "sc/source/core/tool/address.cxx",
        "patchSetId": 6
      },
      "lineNbr": 463,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-16T09:03:03Z",
      "side": 1,
      "message": "Balázs, we don\u0027t want to accept [0]!$ (an incomplete address). This may be a theoretical bad address, but a malicious document can contain it.",
      "parentUuid": "71d3dd47_ee87e925",
      "range": {
        "startLine": 463,
        "startChar": 20,
        "endLine": 463,
        "endChar": 37
      },
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4134e2d7_6054a05c",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 3535,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "This now would be an always true condition because mnCurrentSheetTab is already initialized and reset with -1. Looks wrong to me. If this is intended to indicate that [0]!GlobalName case then mnCurrentSheetTab should be initialized/reset to -2 and explicitly set to -1 if the case is detected.",
      "range": {
        "startLine": 3535,
        "startChar": 36,
        "endLine": 3535,
        "endChar": 59
      },
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9133df6_326505a2",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 3543,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "Asking ScDocument::GetRangeName(-1) always returns nullptr, so that should be checked beforehand.",
      "range": {
        "startLine": 3541,
        "startChar": 8,
        "endLine": 3543,
        "endChar": 55
      },
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1e9dcf2_e4c90953",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5287,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "I think this is not correct, or at least unnecessary. Why prefix the sheet name for sheet-local names on the same sheet (they always take precedence over a same global name), and if so, why only for Excel conventions? Is it something Excel always does? Furthermore, is it expected or required to also/only be stored as such in the OOXML format?\n\nIf the intention is only to indicate all sheet-local names in the UI then we should do it for all syntax, but in a separate unrelated change.",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89f6c963_193942b8",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5287,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-16T09:03:03Z",
      "side": 1,
      "message": "Balázs, could you list examples, where this was really needed, please? If I right understand, we don\u0027t need this with full conversion of Excel\u0027s formulas or the problem is that is missing in the chart import?",
      "parentUuid": "b1e9dcf2_e4c90953",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fa7ebbd_56cf9f87",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5287,
      "author": {
        "id": 1001901
      },
      "writtenOn": "2021-07-20T12:43:47Z",
      "side": 1,
      "message": "We need the sheet name before the range name, always, to referencing a cell even if the sheet-local names on the same sheet. I found it in the 18.17.2.3 Cell References part of the ISO/IEC\n29500-1 standard. Also i tried if we open a chart with a local-sheet range name referencing without the local-sheet name we lost the datas.\n\nEike, László: For OOXML files required to be stored the sheet-local names otherwise the referenced local named ranges will not work properly. The problem isn\u0027t related to chart import but to the chart export. Excel always prefix the sheet names for sheet-local names on the same sheet.",
      "parentUuid": "89f6c963_193942b8",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2597e30c_897ebd5f",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5287,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-20T16:48:27Z",
      "side": 1,
      "message": "Then let\u0027s do it *only* for OOXML, not for any Excel syntax also in UI. The condition for that would simply be isOOXML().",
      "parentUuid": "6fa7ebbd_56cf9f87",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa0370d4_0ba68d61",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5287,
      "author": {
        "id": 1001901
      },
      "writtenOn": "2021-07-21T09:01:33Z",
      "side": 1,
      "message": "0Thank you, it worked well with isOOXML() to, but I checked in another situations, what excel write out to the xml. I tried it with a simple \u003dSUM(GlobalName,LocalSheet_Name) and the excel didn\u0027t write out the [0] or the Sheet name on the same sheet. So I think it should be limited to charts only, where, it is always printed.",
      "parentUuid": "2597e30c_897ebd5f",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "210d59ba_1dbfbcfe",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5300,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "This is wrong, certainly unexpected at least in the UI. If it is necessary to do so for OOXML storage (if so, could you please point me to the relevant OOXML/ECMA specification section), but I doubt that because global names always worked without, then it shouldn\u0027t be done for all Excel address conventions but only for OOXML formula grammar, i.e. would require to ask FormulaGrammar::isOOXML(meGrammar).",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b773bb0f_d26f9cf8",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5300,
      "author": {
        "id": 1001002
      },
      "writtenOn": "2021-07-16T09:03:03Z",
      "side": 1,
      "message": "Balázs: there are different formula syntaxes of Excel, but this is only for OOXML (or for old MSO XML?), so it\u0027s better to use something\n\n else if (bExcelConvention \u0026\u0026 FormulaGrammar::isOOXML(meGrammar))\n\nFrom the patch, it seems, \"[0]\" is only for the export, and we don\u0027t want to add this to the UI, because this hidden/undocumented/not standardized(?) magic is annoying/frustrating for the users. We need to move or limit this only for the export code.\n\nBy the way, what about the \"[1]\" or the other possible external chart data source. Or does it not exist? More examples, and more information about the standard or about the de facto interoperability requirements will help to choose the best approach.",
      "parentUuid": "210d59ba_1dbfbcfe",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a7ae7e1_390bcfbe",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5300,
      "author": {
        "id": 1001901
      },
      "writtenOn": "2021-07-20T12:43:47Z",
      "side": 1,
      "message": "About this: I didn\u0027t find in the OOXML/ECMA specification that we have to use the \"[0]\" prefix before the local files\u0027s global range names. However we have to use if it is reference to an external file according to:\n\nL.2.13.3.2 Cell C2\nThe formula expressed in cell C2 (cell C2 is the c element whose r is C2) is this:\n[2]!NameInExternalWorkbook\nThe external reference to another workbook in this case is tokenized to [2]. The value inside the\nbrackets is a 1-based index to the externalReferences collection in the workbook part.\n\nAlso I tried what excel does with global named ranges referencing without [0] prefix: the datas on the charts will not be updated if we modify a value in a referenced cell. Also when I tried to write \"\u003dglobalname\" into the chart data range referencing textbox i got a syntax error message. With \"\u003d[0]!globalname\" was good.\n\nAlso, I have not noticed yet, that, this change here will also modify the names on the UI from NameRange to [0]!NameRange. But if its true I will limit this part only for export.",
      "parentUuid": "b773bb0f_d26f9cf8",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a504a555_da59f9d2",
        "filename": "sc/source/core/tool/compiler.cxx",
        "patchSetId": 6
      },
      "lineNbr": 5300,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-20T16:48:27Z",
      "side": 1,
      "message": "This here isn\u0027t at all about external names though, which are a completely different token type StackVar::svExternalName and handled via ScExternalRefManager and do get a \"[n]\" prefix. If Excel needs the \"[0]!\" prefix for global names for some undocumented reasons then again, do it only for isOOXML().",
      "parentUuid": "0a7ae7e1_390bcfbe",
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "640e05bc_25b8c0a4",
        "filename": "sc/source/core/tool/reftokenhelper.cxx",
        "patchSetId": 6
      },
      "lineNbr": 161,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-07-15T15:00:09Z",
      "side": 1,
      "message": "This return false is unnecessary as it\u0027s done at the function\u0027s end. Just break after the switch case.",
      "range": {
        "startLine": 161,
        "startChar": 12,
        "endLine": 161,
        "endChar": 24
      },
      "revId": "cb0edf28a0a5d244aa5d39c2156b13ce701efefc",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}