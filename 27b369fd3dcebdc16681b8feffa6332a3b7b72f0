{
  "comments": [
    {
      "key": {
        "uuid": "a9c110f5_7df40707",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2020-12-14T07:45:14Z",
      "side": 1,
      "message": "No way, really.\n\nThis is just like the original SolarMutex, before I included the std::abort() for underflows, which was ignoring them and \"hope nothing breaks\", which (obviously?) doesn\u0027t work.\n\nJust make it a rule, that SolarMutex must be held to query the clipboard content, if there is no other way around it.\n\nIt may need much more work to fix everything, like we had to fix quite a few crashes over a long time for rare code paths, which triggered the std::abort(), but there is no way around it.\n\nI\u0027ll try again to reproduce this deadlock and see, if I can find the origin. I still have the feeling, that something else eventually now forgot locking. And I\u0027ll have to re-check other platforms code.\n\nFWIW Qt5Clipboard::flushClipboard() is the only Qt5Clipboard function taking the SolarMutex.",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3e38777_51bf15ff",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-12-14T07:51:55Z",
      "side": 1,
      "message": "\u003e Just make it a rule, that SolarMutex must be held to query the clipboard content, if there is no other way around it.\n\u003e \n\nThat does not work. \nHere, we have an ABBA deadlock, where two different mutexes are acquired in different orders.",
      "parentUuid": "a9c110f5_7df40707",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8a29625_5d62ae78",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2020-12-14T07:58:53Z",
      "side": 1,
      "message": "\u003e \u003e Just make it a rule, that SolarMutex must be held to query the clipboard content, if there is no other way around it.\n\u003e \u003e \n\u003e \n\u003e That does not work. \n\u003e Here, we have an ABBA deadlock, where two different mutexes are acquired in different orders.\n\nI didn\u0027t yet look into the new backtraces. Then the locking order must be fixed. A \"maybe release lock\" is borderline undefined behavior IMHO.",
      "parentUuid": "b3e38777_51bf15ff",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25e5caae_c70d8cbd",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-12-14T08:23:22Z",
      "side": 1,
      "message": "Jan-Marek, I trust you understand this best, and of course I expected that this would be controversial. Not attached to this - and I\u0027m abandoning it now, since I don\u0027t think I can propose a proper fix here ATM. Additionally, the proposal from Noel to redirect the call to TransferableHelper::lostOwnership (which does not seem to need any data in objects being destroyed) to main thread (user event?) looks nice.\n\nJust to clarify - strictly speaking, we don\u0027t acquire two mutexes in different order here, only solar mutex is used in this deadlock, and a (OS-specific) serialization of COM invocations to the COM object creator thread.\n\nMain thread acquires solar mutex, and calls a method of an object originally created in clipboard thread. This blocking call is serialized to the clipboard thread, so main thread is waiting for clipboard thread to handle it.\n\nClipboard thread is still handling some previous event, and in this process, needs solar mutex, which results in the deadlock.",
      "parentUuid": "a8a29625_5d62ae78",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c1e0e01_90a92a18",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-12-14T08:26:58Z",
      "side": 1,
      "message": "\u003e \n\u003e Just to clarify - strictly speaking, we don\u0027t acquire two mutexes in different order here, only solar mutex is used in this deadlock, and a (OS-specific) serialization of COM invocations to the COM object creator thread.\n\u003e \n\nCOM serialisation must be using some kind of locking primitive internally, so likely we have something a little more complicated here, probably 3 or 4 locking things at play",
      "parentUuid": "25e5caae_c70d8cbd",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6766a4a9_8e5ec466",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2020-12-14T08:27:08Z",
      "side": 1,
      "message": "And yes, I don\u0027t think that a rule to hold the solar mutex would work here. Main thread already owns it in this case; and trying to acquire the mutex earlier in the clipboard thread (I suppose not what you proposed; writing just in case) would not change things here.",
      "parentUuid": "25e5caae_c70d8cbd",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c4f3ba3_f140e033",
        "filename": "include/vcl/svapp.hxx",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2020-12-14T08:33:51Z",
      "side": 1,
      "message": "That made-up rule was just based on the fact, that you wanted to \"maybe release SolarMutex\". I didn\u0027t yet look into this new backtraces, so very likely the real solution will be different.",
      "parentUuid": "6766a4a9_8e5ec466",
      "revId": "27b369fd3dcebdc16681b8feffa6332a3b7b72f0",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}