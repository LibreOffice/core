{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4d08e2f8_9c8822af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-17T07:34:36Z",
      "side": 1,
      "message": "\u003e Uploaded patch set 7.\n\nI like the explicit use of \u003coptional\u003e and the wildcard magic gone.  Thanks!",
      "revId": "2a7abd84afec3fb7feeb3f4a2987ab2506e6893f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a53c6113_436322fa",
        "filename": "solenv/gbuild/ComponentTarget.mk",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-17T13:11:32Z",
      "side": 1,
      "message": "doesn\u0027t this need a dependency on the source .component file (aka COMPONENTSOURCE)?",
      "revId": "2a7abd84afec3fb7feeb3f4a2987ab2506e6893f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82dd7fe0_52fe14d1",
        "filename": "solenv/gbuild/ComponentTarget.mk",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2021-12-17T14:37:27Z",
      "side": 1,
      "message": "Hmm, yup; can\u0027t access this and can\u0027t use $(call gb_ComponentTarget_get_source,$(patsubst CppunitTest/%,%,%)) either :-(",
      "parentUuid": "a53c6113_436322fa",
      "revId": "2a7abd84afec3fb7feeb3f4a2987ab2506e6893f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a99e70d_213b549e",
        "filename": "solenv/gbuild/ComponentTarget.mk",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-12-17T14:50:24Z",
      "side": 1,
      "message": "but you can add a line similar to line 79 to gb_ComponentTarget_ComponentTarget,\n\n  $(call gb_ComponentTarget_get_target,$(1)).optional : $(call gb_ComponentTarget_get_source,$(patsubst CppunitTest/%,%,$(1)))",
      "parentUuid": "82dd7fe0_52fe14d1",
      "revId": "2a7abd84afec3fb7feeb3f4a2987ab2506e6893f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "497c2973_ce196f38",
        "filename": "solenv/gbuild/ComponentTarget.mk",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2021-12-17T15:27:54Z",
      "side": 1,
      "message": "From https://www.gnu.org/software/make/manual/html_node/Pattern-Rules.html\n\n\u003e Note that expansion using ‘%’ in pattern rules occurs after any variable or function expansions, which take place when the makefile is read.\n\nSo no variables at runtime per default.\n\nThere is https://www.gnu.org/software/make/manual/html_node/Secondary-Expansion.html as a workaround…\n\nAll this rules are there, because otherwise \u0027$(shell cat $(1).filtered)\u0027 runs too early.\n\nAny other idea?",
      "parentUuid": "8a99e70d_213b549e",
      "revId": "2a7abd84afec3fb7feeb3f4a2987ab2506e6893f",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}