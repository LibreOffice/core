{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "25c38307_ba52fc5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001965
      },
      "writtenOn": "2022-06-23T10:45:53Z",
      "side": 1,
      "message": "Please do only the bug report related changings here. For other changings please create a different patch",
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d7a5027_541b01ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003612
      },
      "writtenOn": "2022-07-09T05:34:43Z",
      "side": 1,
      "message": "Hello,\nThis patch is stopped for two weeks. Is my second pattch and i\u0027m not sure about the reason.\nThere are something i must do?\nPlease, give me some advice.",
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba2191ba_a35365c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001613
      },
      "writtenOn": "2022-07-29T14:21:13Z",
      "side": 1,
      "message": "The patch has over time become in conflict with other changes. You should rebase it locally, solve the conflicts and submit a new patchset.\n\nThis can help understand the conflict markers that will appear in files:\n\nhttps://wincent.com/wiki/Understanding_Git_conflict_markers",
      "parentUuid": "5d7a5027_541b01ea",
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e42fac_559ec4cd",
        "filename": "cui/source/dialogs/toolbarmodedlg.cxx",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1003564
      },
      "writtenOn": "2022-06-22T22:09:40Z",
      "side": 1,
      "message": "shouldn\u0027t this be std::size too?",
      "range": {
        "startLine": 97,
        "startChar": 18,
        "endLine": 97,
        "endChar": 32
      },
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc7a94a_b631b64d",
        "filename": "cui/source/dialogs/toolbarmodedlg.cxx",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1003612
      },
      "writtenOn": "2022-06-23T15:54:49Z",
      "side": 1,
      "message": "Unfortunatelly std::size for a class member can\u0027t be calculated at compile time (at least by my compiler gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0) so can\u0027t be used here.\n\nA was thinking about intoducing some constexpr MAX_RADIO_BUTTONS or similar but i\u0027m not sure if it is intended solution in this scenario.",
      "parentUuid": "34e42fac_559ec4cd",
      "range": {
        "startLine": 97,
        "startChar": 18,
        "endLine": 97,
        "endChar": 32
      },
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7548614_55810b75",
        "filename": "cui/source/dialogs/toolbarmodedlg.cxx",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1003564
      },
      "writtenOn": "2022-06-23T17:14:28Z",
      "side": 1,
      "message": "Ah okay. SAL_N_ELEMENTS should be fine here.. it pretty much does sizeof(arr)/sizeof(arr[0]) (or uses templates for the same effect). No need for a new macro.",
      "parentUuid": "0fc7a94a_b631b64d",
      "range": {
        "startLine": 97,
        "startChar": 18,
        "endLine": 97,
        "endChar": 32
      },
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c674e35_3b0f724c",
        "filename": "cui/source/dialogs/toolbarmodedlg.cxx",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1003564
      },
      "writtenOn": "2022-06-22T22:09:40Z",
      "side": 1,
      "message": "for simple arithmetic types like size_t there\u0027s no performance boost to using ++i vs i++ when the return type is not used, every compiler will inline the operator call so the temporaries created will get optimized away",
      "range": {
        "startLine": 134,
        "startChar": 62,
        "endLine": 134,
        "endChar": 63
      },
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab57e212_5f80c20c",
        "filename": "cui/source/dialogs/toolbarmodedlg.cxx",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1003612
      },
      "writtenOn": "2022-06-23T15:54:49Z",
      "side": 1,
      "message": "Understood.",
      "parentUuid": "2c674e35_3b0f724c",
      "range": {
        "startLine": 134,
        "startChar": 62,
        "endLine": 134,
        "endChar": 63
      },
      "revId": "47ea364673d9f62c9367cf89b474cc1338391454",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}