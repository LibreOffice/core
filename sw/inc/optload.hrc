/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#ifndef INCLUDED_SW_INC_OPTLOAD_HRC
#define INCLUDED_SW_INC_OPTLOAD_HRC

#include <tools/fldunit.hxx>
#include <utility>

#define NC_(Context, String) reinterpret_cast<char const *>(Context "\004" u8##String)

const std::pair<const char*, FieldUnit> STR_ARR_METRIC[] =
{
    { NC_("STR_ARR_METRIC", "Millimeter") , FieldUnit::MM },
    { NC_("STR_ARR_METRIC", "Centimeter") , FieldUnit::CM },
    { NC_("STR_ARR_METRIC", "Meter") , FieldUnit::M },
    { NC_("STR_ARR_METRIC", "Kilometer") , FieldUnit::KM },
    { NC_("STR_ARR_METRIC", "Inch") , FieldUnit::INCH },
    { NC_("STR_ARR_METRIC", "Foot") , FieldUnit::FOOT },
    { NC_("STR_ARR_METRIC", "Miles") , FieldUnit::MILE },
    { NC_("STR_ARR_METRIC", "Pica") , FieldUnit::PICA },
    { NC_("STR_ARR_METRIC", "Point") , FieldUnit::POINT },
    { NC_("STR_ARR_METRIC", "Char") , FieldUnit::CHAR },
    { NC_("STR_ARR_METRIC", "Line") , FieldUnit::LINE }
};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
