/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

#include "globals.hrc"
#include "utlui.hrc"
#include "helpid.h"
#include "comcore.hrc"

Resource RID_SHELLRES_AUTOFMTSTRS
{
    String STR_AUTOFMTREDL_DEL_EMPTY_PARA+1
    {
        Text [ en-US ] = "Remove empty paragraphs" ;
    };
    String STR_AUTOFMTREDL_USE_REPLACE+1
    {
        Text [ en-US ] = "Use replacement table" ;
    };
    String STR_AUTOFMTREDL_CPTL_STT_WORD+1
    {
        Text [ en-US ] = "Correct TWo INitial CApitals" ;
    };
    String STR_AUTOFMTREDL_CPTL_STT_SENT+1
    {
        Text [ en-US ] = "Capitalize first letter of sentences" ;
    };
    String STR_AUTOFMTREDL_TYPO+1
    {
        Text [ en-US ] = "Replace \"standard\" quotes with %1 \bcustom%2 quotes" ;
    };
    String STR_AUTOFMTREDL_USER_STYLE+1
    {
        Text [ en-US ] = "Replace Custom Styles" ;
    };
    String STR_AUTOFMTREDL_BULLET+1
    {
        Text [ en-US ] = "Bullets replaced";
    };
    String STR_AUTOFMTREDL_UNDER+1
    {
        Text [ en-US ] = "Automatic _underline_";
    };
    String STR_AUTOFMTREDL_BOLD+1
    {
        Text [ en-US ] = "Automatic *bold*";
    };
    String STR_AUTOFMTREDL_FRACTION+1
    {
        Text [ en-US ] = "Replace 1/2 ... with Â½ ..." ;
    };
    String STR_AUTOFMTREDL_DETECT_URL+1
    {
        Text [ en-US ] = "URL recognition" ;
    };
    String STR_AUTOFMTREDL_DASH+1
    {
        Text [ en-US ] = "Replace dashes" ;
    };
    String STR_AUTOFMTREDL_ORDINAL+1
    {
        Text [ en-US ] = "Replace 1st... with 1^st..." ;
    };
    String STR_AUTOFMTREDL_RIGHT_MARGIN+1
    {
        Text [ en-US ] = "Combine single line paragraphs";
    };

    String STR_AUTOFMTREDL_SET_TMPL_TEXT +1
    {
        Text [ en-US ] = "Set \"Text body\" Style";
    };
    String STR_AUTOFMTREDL_SET_TMPL_INDENT  +1
    {
        Text [ en-US ] = "Set \"Text body indent\" Style";
    };
    String STR_AUTOFMTREDL_SET_TMPL_NEG_INDENT  +1
    {
        Text [ en-US ] = "Set \"Hanging indent\" Style";
    };
    String STR_AUTOFMTREDL_SET_TMPL_TEXT_INDENT +1
    {
        Text [ en-US ] = "Set \"Text body indent\" Style";
    };
    String STR_AUTOFMTREDL_SET_TMPL_HEADLINE +1
    {
        Text [ en-US ] = "Set \"Heading $(ARG1)\" Style";
    };
    String STR_AUTOFMTREDL_SET_NUMBULET +1
    {
        Text [ en-US ] = "Set \"Bullet\" or \"Numbering\" Style";
    };

    String STR_AUTOFMTREDL_DEL_MORELINES +1
    {
        Text [ en-US ] = "Combine paragraphs";
    };
    String STR_AUTOFMTREDL_NON_BREAK_SPACE +1
    {
        Text [ en-US ] = "Add non breaking space";
    };

};

// Miscellaneous

String STR_EVENT_OBJECT_SELECT
{
    Text [ en-US ] = "Click object" ;
};
String STR_EVENT_START_INS_GLOSSARY
{
    Text [ en-US ] = "Before inserting AutoText";
};
String STR_EVENT_END_INS_GLOSSARY
{
    Text [ en-US ] = "After inserting AutoText";
};
String STR_EVENT_MOUSEOVER_OBJECT
{
    Text [ en-US ] = "Mouse over object" ;
};
String STR_EVENT_MOUSECLICK_OBJECT
{
    Text [ en-US ] = "Trigger hyperlink" ;
};
String STR_EVENT_MOUSEOUT_OBJECT
{
    Text [ en-US ] = "Mouse leaves object" ;
};
String STR_EVENT_IMAGE_LOAD
{
    Text [ en-US ] = "Image loaded successfully" ;
};
String STR_EVENT_IMAGE_ABORT
{
    Text [ en-US ] = "Image loading terminated" ;
};
String STR_EVENT_IMAGE_ERROR
{
    Text [ en-US ] = "Could not load image" ;
};
String STR_EVENT_FRM_KEYINPUT_A
{
    Text [ en-US ] = "Input of alphanumeric characters" ;
};
String STR_EVENT_FRM_KEYINPUT_NOA
{
    Text [ en-US ] = "Input of non-alphanumeric characters" ;
};
String STR_EVENT_FRM_RESIZE
{
    Text [ en-US ] = "Resize frame" ;
};
String STR_EVENT_FRM_MOVE
{
    Text [ en-US ] = "Move frame" ;
};
String STR_CONTENT_TYPE_OUTLINE
{
    Text [ en-US ] = "Headings" ;
};
String STR_CONTENT_TYPE_TABLE
{
    Text [ en-US ] = "Tables" ;
};
String STR_CONTENT_TYPE_FRAME
{
    Text [ en-US ] = "Text frames" ;
};
String STR_CONTENT_TYPE_GRAPHIC
{
    Text [ en-US ] = "Images" ;
};
String STR_CONTENT_TYPE_OLE
{
    Text [ en-US ] = "OLE objects" ;
};
String STR_CONTENT_TYPE_BOOKMARK
{
    Text [ en-US ] = "Bookmarks" ;
};
String STR_CONTENT_TYPE_REGION
{
    Text [ en-US ] = "Sections" ;
};
String STR_CONTENT_TYPE_URLFIELD
{
    Text [ en-US ] = "Hyperlinks" ;
};
String STR_CONTENT_TYPE_REFERENCE
{
    Text [ en-US ] = "References" ;
};
String STR_CONTENT_TYPE_INDEX
{
    Text [ en-US ] = "Indexes" ;
};
String STR_CONTENT_TYPE_DRAWOBJECT
{
    Text [ en-US ] = "Drawing objects" ;
};
String STR_CONTENT_TYPE_POSTIT
{
    Text [ en-US ] = "Comments" ;
};
String STR_IDXEXAMPLE_IDXTXT_HEADING1
{
    Text [ en-US ] = "Heading 1" ;
};
String STR_IDXEXAMPLE_IDXTXT_ENTRY1
{
    Text [ en-US ] = "This is the content from the first chapter. This is a user directory entry." ;
};
String STR_IDXEXAMPLE_IDXTXT_HEADING11
{
    Text [ en-US ] = "Heading 1.1" ;
};
String STR_IDXEXAMPLE_IDXTXT_ENTRY11
{
    Text [ en-US ] = "This is the content from chapter 1.1. This is the entry for the table of contents." ;
};
String STR_IDXEXAMPLE_IDXTXT_HEADING12
{
    Text [ en-US ] = "Heading 1.2" ;
};
String STR_IDXEXAMPLE_IDXTXT_ENTRY12
{
    Text [ en-US ] = "This is the content from chapter 1.2. This keyword is a main entry." ;
};
String STR_IDXEXAMPLE_IDXTXT_TABLE1
{
    Text [ en-US ] = "Table 1: This is table 1" ;
};
String STR_IDXEXAMPLE_IDXTXT_IMAGE1
{
    Text [ en-US ] = "Image 1: This is image 1" ;
};
String STR_CONTENT_TYPE_SINGLE_OUTLINE
{
    Text [ en-US ] = "Heading" ;
};
String STR_CONTENT_TYPE_SINGLE_TABLE
{
    Text [ en-US ] = "Table" ;
};
String STR_CONTENT_TYPE_SINGLE_FRAME
{
    Text [ en-US ] = "Text frame" ;
};
String STR_CONTENT_TYPE_SINGLE_GRAPHIC
{
    Text [ en-US ] = "Image" ;
};
String STR_CONTENT_TYPE_SINGLE_OLE
{
    Text [ en-US ] = "OLE object" ;
};
String STR_CONTENT_TYPE_SINGLE_BOOKMARK
{
    Text [ en-US ] = "Bookmark" ;
};
String STR_CONTENT_TYPE_SINGLE_REGION
{
    Text [ en-US ] = "Section" ;
};
String STR_CONTENT_TYPE_SINGLE_URLFIELD
{
    Text [ en-US ] = "Hyperlink" ;
};
String STR_CONTENT_TYPE_SINGLE_REFERENCE
{
    Text [ en-US ] = "Reference" ;
};
String STR_CONTENT_TYPE_SINGLE_INDEX
{
    Text [ en-US ] = "Index" ;
};
String STR_CONTENT_TYPE_SINGLE_POSTIT
{
    Text [ en-US ] = "Comment" ;
};
String STR_CONTENT_TYPE_SINGLE_DRAWOBJECT
{
    Text [ en-US ] = "Draw object" ;
};
String STR_DEFINE_NUMBERFORMAT
{
    Text [ en-US ] = "Additional formats..." ;
};
String RID_STR_SYSTEM
{
    Text [ en-US ] = "[System]";
};
String STR_MULT_INTERACT_SPELL_WARN
{
    Text [ en-US ] = "The interactive spellcheck is already active\nin a different document";
};
String STR_MULT_INTERACT_HYPH_WARN
{
    Text [ en-US ] = "The interactive hyphenation is already active\nin a different document";
};
String STR_SPELL_TITLE
{
    Text [ en-US ] = "Spellcheck";
};
String STR_HYPH_TITLE
{
    Text [ en-US ] = "Hyphenation";
};

ImageList ILIST_DB_DLG
{
    Prefix = "sx";
    MaskColor = IMAGE_MASK_COLOR;
    IdList =
    {
        IMG_COLLAPSE;
        IMG_EXPAND  ;
        IMG_DB      ;
        IMG_DBTABLE ;
        IMG_DBQUERY ;
    };
    IdCount = 5;
};
Image IMG_VIEWLAYOUT_AUTOMATIC
{
    ImageBitmap = Bitmap
    {
        File = "twopages_10x24.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};
Image IMG_VIEWLAYOUT_AUTOMATIC_ACTIVE
{
    ImageBitmap = Bitmap
    {
        File = "twopages_a_10x24.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};

Image IMG_VIEWLAYOUT_BOOKMODE
{
    ImageBitmap = Bitmap
    {
        File = "doublepage_10x22.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};
Image IMG_VIEWLAYOUT_BOOKMODE_ACTIVE
{
    ImageBitmap = Bitmap
    {
        File = "doublepage_a_10x22.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};

Image IMG_VIEWLAYOUT_SINGLECOLUMN
{
    ImageBitmap = Bitmap
    {
        File = "emptypage_10x14.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};
Image IMG_VIEWLAYOUT_SINGLECOLUMN_ACTIVE
{
    ImageBitmap = Bitmap
    {
        File = "emptypage_a_10x14.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};
Image IMG_PAGE_BREAK
{
    ImageBitmap = Bitmap
    {
        File = "page_break.png" ;
    };
    MaskColor = IMAGE_MASK_COLOR;
};

String STR_HYPERCTRL_SEL
{
    Text [ en-US ] = "SEL";
};
String STR_HYPERCTRL_HYP
{
    Text [ en-US ] = "HYP";
};

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
