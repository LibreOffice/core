/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

interface BaseTextGraphic
[
    Automation = FALSE;
]
{
    FN_FLIP_VERT_GRAFIC  // status(final|play)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FLIP_HORZ_GRAFIC  // status(final|play)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_FORMAT_GRAFIC_DLG // status(final|play)
    [
        ExecMethod = Execute ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]


    SID_SAVE_GRAPHIC
    [
        ExecMethod = Execute ;
        StateMethod = GetAttrState ;
    ]

    SID_EXTERNAL_EDIT
    [
        ExecMethod = Execute ;
        StateMethod = GetAttrState ;
    ]

    SID_TWAIN_TRANSFER
    [
        ExecMethod = Execute ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    FN_GRAPHIC_MIRROR_ON_EVEN_PAGES // status(final|play|rec)
    [
        ExecMethod = Execute ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_ATTR_GRAF_LUMINANCE // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_CONTRAST  // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_RED   // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_GREEN // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_BLUE  // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_GAMMA // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_TRANSPARENCE  // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_INVERT    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_ATTR_GRAF_MODE  // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER   // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]

    SID_GRFFILTER_INVERT    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_SMOOTH    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_SHARPEN   // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_REMOVENOISE   // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_SOBEL // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_MOSAIC    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_EMBOSS    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_POSTER    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_POPART    // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_SEPIA // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
    SID_GRFFILTER_SOLARIZE  // status(final|play|rec)
    [
        ExecMethod = ExecAttr ;
        StateMethod = GetAttrState ;
        DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
    ]
        SID_COLOR_SETTINGS       // status(final|play|rec)
        [
                ExecMethod = ExecAttr ;
                StateMethod = GetAttrState ;
                DisableFlags="SW_DISABLE_ON_PROTECTED_CURSOR";
        ]

}
