{
  "comments": [
    {
      "key": {
        "uuid": "1a6eadb0_3f02623f",
        "filename": "sc/inc/table.hxx",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2017-01-03T22:37:25Z",
      "side": 0,
      "message": "This should be changed to the same structure used in mpRowHeights, not std::vector.  While you are at it, please change the name to mpColWidths, to make it plural like the mpRowHeights counterpart.",
      "revId": "f42751f534f56f1d465582ebce8d17094f640175",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6eadb0_b2dce919",
        "filename": "sc/inc/table.hxx",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1001339
      },
      "writtenOn": "2017-01-04T16:37:30Z",
      "side": 0,
      "message": "Should I create new class (ScFlatUInt16ColSegments ?) and use it there?\nI found some documentation about it there:\nhttp://kohei.us/files/mdds/doc/flat_segment_tree.html",
      "parentUuid": "1a6eadb0_3f02623f",
      "revId": "f42751f534f56f1d465582ebce8d17094f640175",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6eadb0_f2b5817e",
        "filename": "sc/inc/table.hxx",
        "patchSetId": 11
      },
      "lineNbr": 147,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2017-01-04T22:10:06Z",
      "side": 0,
      "message": "Yes. Let\u0027s do it the way the Bool variants are handled, that is, you basically copy-n-paste the envelop class from ScFlatUInt16RowSegments, change its name to ScFlatUInt16ColSegments, and use the same implementation class i.e. ScFlatUInt16SegmentsImpl to avoid duplicating the backend code.\n\nAnd that documentation (which I authored) should give you the API reference for the underlying flat_segment_tree structure.  But for this task, you probably don\u0027t need to know much about it as long as you get to know how the wrapper class works.",
      "parentUuid": "1a6eadb0_b2dce919",
      "revId": "f42751f534f56f1d465582ebce8d17094f640175",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6eadb0_bf491291",
        "filename": "sc/inc/table.hxx",
        "patchSetId": 11
      },
      "lineNbr": 150,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2017-01-04T01:39:51Z",
      "side": 0,
      "message": "Also, if you are changing the name of this member, consider prefixing it with \u0027m\u0027.",
      "revId": "f42751f534f56f1d465582ebce8d17094f640175",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6eadb0_d2e165d2",
        "filename": "sc/inc/table.hxx",
        "patchSetId": 11
      },
      "lineNbr": 150,
      "author": {
        "id": 1001339
      },
      "writtenOn": "2017-01-04T16:37:30Z",
      "side": 0,
      "message": "I will change it to mpColFlags.",
      "parentUuid": "1a6eadb0_bf491291",
      "revId": "f42751f534f56f1d465582ebce8d17094f640175",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6eadb0_12bbdd73",
        "filename": "sc/inc/table.hxx",
        "patchSetId": 11
      },
      "lineNbr": 150,
      "author": {
        "id": 1000030
      },
      "writtenOn": "2017-01-04T22:10:06Z",
      "side": 0,
      "message": "Let\u0027s call it maColFlags (with an \u0027a\u0027).  The \u0027p\u0027 prefix is reserved for pointer values, which the new vector based one is not.",
      "parentUuid": "1a6eadb0_d2e165d2",
      "revId": "f42751f534f56f1d465582ebce8d17094f640175",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}