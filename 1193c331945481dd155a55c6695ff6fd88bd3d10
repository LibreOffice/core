{
  "comments": [
    {
      "key": {
        "uuid": "e8e3e64c_725ac386",
        "filename": "extensions/source/ole/oleobjw.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1432,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-01T21:07:59Z",
      "side": 0,
      "message": "Technically the change is functional: SysStringLen will differ from wcslen(excepinfo.bstrDescription), it allows embedded nulls in the string (not that this should matter here, but I know you usually are careful to such semantical changes).",
      "range": {
        "startLine": 1432,
        "startChar": 30,
        "endLine": 1432,
        "endChar": 70
      },
      "revId": "1193c331945481dd155a55c6695ff6fd88bd3d10",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b0ab6ba_8f615ebf",
        "filename": "extensions/source/ole/oleobjw.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1432,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-06-02T07:37:17Z",
      "side": 0,
      "message": "Now that I look at this again I\u0027m puzzled:  So excepinfo is of type ExcepInfo (extensions/source/ole/windata.hxx), which is derived from EXCEPINFO (\u003chttps://docs.microsoft.com/en-us/windows/win32/api/oaidl/ns-oaidl-excepinfo\u003e), whose member bstrDescription is of type BSTR (\u003chttps://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-oaut/1c9d2cfc-cf7d-4f4b-95bf-584be5defd81\u003e), which is a typedef for FLAGGED_WORD_BLOB* (\u003chttps://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-oaut/f547135a-d76a-42c3-916f-30b4e46d79bc\u003e).  So how does the above\n\n  o3tl::toU(excepinfo.bstrDescription)\n\ncompile, seemingly converting a BSTR aka FLAGGED_WORD_BLOB* to a wchar_t*?",
      "parentUuid": "e8e3e64c_725ac386",
      "range": {
        "startLine": 1432,
        "startChar": 30,
        "endLine": 1432,
        "endChar": 70
      },
      "revId": "1193c331945481dd155a55c6695ff6fd88bd3d10",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed8d243f_3b033955",
        "filename": "extensions/source/ole/oleobjw.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1432,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-02T07:51:14Z",
      "side": 0,
      "message": "This is because the documentation you refer to is already under https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-oaut/9c5a5ce4-ff5b-45ce-b915-ada381b34ac1, which mentions two different semantics of BSTR: its memory representation (discussed in this section of documentation), and its string semantics as exposed to consumers, where BSTR is defined as:\n\n    typedef /* [wire_marshal] */ OLECHAR *BSTR;\n\nwhich is what we see ~everywhere except for low-level code, where the underlying structure is exposed. Basically, for everyone, the BSTR is analogous to rtl_uString::buffer, when for low-level access, BSTR is analogous rtl_uString itself.",
      "parentUuid": "7b0ab6ba_8f615ebf",
      "range": {
        "startLine": 1432,
        "startChar": 30,
        "endLine": 1432,
        "endChar": 70
      },
      "revId": "1193c331945481dd155a55c6695ff6fd88bd3d10",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a6984a7_a5c99ab4",
        "filename": "extensions/source/ole/oleobjw.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1432,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-06-02T07:53:12Z",
      "side": 0,
      "message": "(which is what SysStringLen is for: to centralize management of the underlying structure)",
      "parentUuid": "ed8d243f_3b033955",
      "range": {
        "startLine": 1432,
        "startChar": 30,
        "endLine": 1432,
        "endChar": 70
      },
      "revId": "1193c331945481dd155a55c6695ff6fd88bd3d10",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2d04605_1274a507",
        "filename": "extensions/source/ole/oleobjw.cxx",
        "patchSetId": 2
      },
      "lineNbr": 1432,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2021-06-02T08:00:08Z",
      "side": 0,
      "message": "So SysStringLen receives an OLECHAR*p and grabs the length from somewhere else (at a well-known negative offset of p, say)?",
      "parentUuid": "1a6984a7_a5c99ab4",
      "range": {
        "startLine": 1432,
        "startChar": 30,
        "endLine": 1432,
        "endChar": 70
      },
      "revId": "1193c331945481dd155a55c6695ff6fd88bd3d10",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}