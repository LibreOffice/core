{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b6e150a3_5bca74d7",
        "filename": "cui/source/tabpages/tpline.cxx",
        "patchSetId": 3
      },
      "lineNbr": 1490,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2022-08-26T08:31:45Z",
      "side": 0,
      "message": "Wouldn\u0027t it be safer to replace such calls with resetting the reference, in case destructing the object here actually mattered for some reason? Maybe irrelevant in practice, I don\u0027t know if some SdrObject dtors may affect order of some operations, but I want to point this out.",
      "revId": "5f891974bfb27bacd5fc3d623463204e872fffad",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82aa229a_1f49c7b0",
        "filename": "cui/source/tabpages/tpline.cxx",
        "patchSetId": 3
      },
      "lineNbr": 1490,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-08-26T08:49:08Z",
      "side": 0,
      "message": "The idea with ref-counting is that the object should die when the left reference goes away, so most of the time, it should die here.",
      "parentUuid": "b6e150a3_5bca74d7",
      "revId": "5f891974bfb27bacd5fc3d623463204e872fffad",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "463b3ce2_025a4697",
        "filename": "cui/source/tabpages/tpline.cxx",
        "patchSetId": 3
      },
      "lineNbr": 1490,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2022-08-26T09:01:15Z",
      "side": 0,
      "message": "I know how refcounting works :). But my point is that here pObj is destructed only at the end of this block, so if something requires(?) the object to die here, it won\u0027t.",
      "parentUuid": "82aa229a_1f49c7b0",
      "revId": "5f891974bfb27bacd5fc3d623463204e872fffad",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cdf1069_a189aad5",
        "filename": "include/svx/svdmodel.hxx",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2022-08-26T08:31:45Z",
      "side": 0,
      "message": "Wouldn\u0027t it make sense to keep this (or something similar)? Refcounting doesn\u0027t make all resource leaks go away, there may be leftover references in some places.",
      "revId": "5f891974bfb27bacd5fc3d623463204e872fffad",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5ef1fa7_798e91b3",
        "filename": "include/svx/svdmodel.hxx",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2022-08-26T08:49:08Z",
      "side": 0,
      "message": "With ref-counting, the only leaks that should be left are chains of circular references, and this wouldn\u0027t help much with that. It also wouldn\u0027t be actually up-to-date, since the actual destruction may now occur somewhere else.\n\nAlthough I guess I could make it use WeakReferences, in which case it would at least report the existing of circular reference chains.\nI\u0027ll look into doing that.",
      "parentUuid": "1cdf1069_a189aad5",
      "revId": "5f891974bfb27bacd5fc3d623463204e872fffad",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46fc44e9_54321d35",
        "filename": "include/svx/svdmodel.hxx",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2022-08-26T09:01:15Z",
      "side": 0,
      "message": "SdrObject keeps a reference to SdrModel, so it seems to me that SdrObject\u0027s shouldn\u0027t outlive SdrModel, so IMO it would make sense for SdrModel dtor to check this. And yes, I meant this for debugging purposes.",
      "parentUuid": "f5ef1fa7_798e91b3",
      "revId": "5f891974bfb27bacd5fc3d623463204e872fffad",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}