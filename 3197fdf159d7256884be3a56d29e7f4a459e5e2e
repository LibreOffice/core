{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4926de98_db2f730f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003374
      },
      "writtenOn": "2022-02-11T07:31:23Z",
      "side": 1,
      "message": "Is this correction acceptable?",
      "revId": "3197fdf159d7256884be3a56d29e7f4a459e5e2e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62d4d130_8102badf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-02-12T08:54:42Z",
      "side": 1,
      "message": "This change must be accompanied with a unit test, to show what problem it solves, and that it really does it. Here I feel that something important is missing - specifically, treatment of UTC vs local times.",
      "revId": "3197fdf159d7256884be3a56d29e7f4a459e5e2e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35e8ed0e_65f45ad0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003180
      },
      "writtenOn": "2022-02-14T01:55:29Z",
      "side": 1,
      "message": "\u003e This change must be accompanied with a unit test, to show what problem it solves, and that it really does it. Here I feel that something important is missing - specifically, treatment of UTC vs local times.\n\nSo we need to add a unit test for this issue?",
      "revId": "3197fdf159d7256884be3a56d29e7f4a459e5e2e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "505297f3_6d39cedf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-02-14T08:40:31Z",
      "side": 1,
      "message": "Definitely. This is a change that targets import/export of the data to file formats; it is even mentioned as \"Areas with \"No fix without a unit test\" rule\". (And anyway, the unit test is needed here to see what is changed in the export.)\n\nhttps://wiki.documentfoundation.org/Development/Unit_Tests#Areas_with_.22No_fix_without_a_unit_test.22_rule",
      "parentUuid": "35e8ed0e_65f45ad0",
      "revId": "3197fdf159d7256884be3a56d29e7f4a459e5e2e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b92fa18_c4e15bb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003180
      },
      "writtenOn": "2022-02-14T08:47:44Z",
      "side": 1,
      "message": "Wow... we may need some advising to write unit test for this issue, have no experience for unit test anyway.",
      "parentUuid": "505297f3_6d39cedf",
      "revId": "3197fdf159d7256884be3a56d29e7f4a459e5e2e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65bbf804_4dddbbdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2022-02-14T09:18:03Z",
      "side": 1,
      "message": "The unit test should check exactly the XML markup mentioned in the bug report - dcterms:created element in docProps/core.xml. This kind of test is performed in CppunitTest_sw_ooxmlexport* - see e.g. sw/qa/extras/ooxmlexport/ooxmlexport17.cxx. The important detail is that the document should be created anew, not loaded-and-saved, to define its creation time - see testArabicZeroNumberingFootnote in sw/qa/extras/ooxmlexport/ooxmlexport14.cxx for an example of working with brand-new documents.\n\nThe tricky part would be to check that UTC is actually being taken into account. One would need to find the current system timezone offset in the test - std::gmtime and std::localtime would be likely useful, also std::mktime and std::difftime. Then one would need to get current local time, convert the value of dcterms:created into std::time_t, and compare the times to see that it fits in the frame \"local time before saving + TZ offset\", \"local time after saving + TZ offset\".\n\nHTH.",
      "parentUuid": "4b92fa18_c4e15bb9",
      "revId": "3197fdf159d7256884be3a56d29e7f4a459e5e2e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}