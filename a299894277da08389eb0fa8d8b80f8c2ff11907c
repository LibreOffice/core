{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc630614_46cfb1af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-22T21:04:34Z",
      "side": 1,
      "message": "Na, as I additionally stated",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b055d9de_7fda10b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-22T21:05:56Z",
      "side": 1,
      "message": "Don\u0027t know where that message was coming",
      "parentUuid": "bc630614_46cfb1af",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9e046ec_55f18ecf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-23T06:06:53Z",
      "side": 1,
      "message": "Make an experiment in Calc. Put numbers \u0027-115858\u0027 and \u0027-115859\u0027 into cells, and format as dates. They will appear as 1582-10-15 and 1582-10-04, resp. - just as expected if you use the normal Gregorian calendar introduction date.\n\nBut that means that for dates before Gregorian 1582-10-15, you use Julian calendar dates. And that also means that you must use Julian rules for leap years for those dates. Which IMO makes the difference that you struggle with.",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6fabbe36_26cb2d43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-23T06:49:03Z",
      "side": 1,
      "message": "Is there a sample calculation somewhere in the code, or should we use the implementations of the calenders here?",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb93ca6b_77d69c6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-23T06:55:59Z",
      "side": 1,
      "message": "Basically, ",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0acad812_e853b662",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-23T06:55:59Z",
      "side": 1,
      "message": "The calculation of Julian dates is in the mentioned GregorianCalendar::handleComputeFields, in ICU external library.\n\nhttps://github.com/unicode-org/icu/blob/main/icu4c/source/i18n/gregocal.cpp#L387\n\nBut it is based on already calculated \"Julian day\", which is calculated from their internal day zero, differing from ours.\n\nhttps://github.com/unicode-org/icu/blob/main/icu4c/source/i18n/gregocal.cpp#L788",
      "parentUuid": "6fabbe36_26cb2d43",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d362e09f_f47e949e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2021-09-23T08:18:56Z",
      "side": 1,
      "message": "In fact, we need to realize several things.\n\n0. Serial dates are counted internally from configurable epoch (1899-12-30; 1900-01-01; 1904-01-01)\n1. Still, they use internal counter starting from *proleptic Gregorian\u0027s 0001-01-01* (which is day 1); hence 1899-12-30 is day 693594 in that system (asserted in Date::GetAsNormalizedDays)\n2. The date recognition and formatting uses Julian calendar for dates prior to 1582-10-15 Gregorian. Hence e.g. \u0027-292127\u0027 is displayed as 1100-02-29\n4. Functions like ISLEAPYEAR use proleptic Gregorian. Hence e.g. ISLEAPYEAR(-292127) is FALSE\n5. Entering \u00270001-01-01\u0027 gets converted to *Julian*\u0027s date of that value (with some deviations described in GregorianCalendar::handleComputeFields at https://github.com/unicode-org/icu/blob/main/icu4c/source/i18n/gregocal.cpp#L397), which is equivalent to proleptic Gregorian\u0027s \u00270000-12-30\u0027 (two days off), i.e. serial date (counting from normal 1899-12-30) is -693595 (cf. to proleptic Gregorian\u0027s 0001-01-01, which would be -693593)\n6. DaysToDate in scaddins/source/datefunc/datefunc.cxx for some reason only accepts non-negative values of the \"date since calendar epoch\", which makes it accept also -693594, which results in 0 days since proleptic Gregorian epoch.\n\nFor completeness: Excel does not display dates before \"1900-01-00\" (it does not accept negative serial dates).\n\nIMO, #4 is an own problem, making the year 1100 to have Feb 29th, but being reported as non-leap. But regarding this specific issue in this change, what is important are:\n\n1. Do we count things correctly in MONTHS/YEARS, taking into account this Julian/Gregorian change?\n2. Why do we limit to Gregorian AD?\n\nThe last question is IMO the actual problem here, which would likely not need to change the calculations that drastically. The former one is to be investigated separately.",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb276e50_e55100f6",
        "filename": "scaddins/source/datefunc/datefunc.cxx",
        "patchSetId": 4
      },
      "lineNbr": 581,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-22T21:04:34Z",
      "side": 1,
      "message": "Here I get the following values which are the same as in a cell in calc:\n01.01.0001 -693595 \n02.01.0001 -693594 \n30.12.1899  0\n\nIn addition, if I calculate \u003dDAYS(\"30.12.1899\"; \"01.01.0001\") I get 693595.",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9dfb396_70c4c4b2",
        "filename": "scaddins/source/datefunc/datefunc.cxx",
        "patchSetId": 4
      },
      "lineNbr": 592,
      "author": {
        "id": 1002115
      },
      "writtenOn": "2021-09-22T21:04:34Z",
      "side": 1,
      "message": "Here the problem arises. The GetNullDate returns 693594 leading to a negative number of days (nDays1).",
      "revId": "a299894277da08389eb0fa8d8b80f8c2ff11907c",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615"
    }
  ]
}