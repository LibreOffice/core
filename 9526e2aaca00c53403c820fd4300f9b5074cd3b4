{
  "comments": [
    {
      "key": {
        "uuid": "17779bb0_3b85b2f2",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "7.1 or 7.2?",
      "range": {
        "startLine": 40,
        "startChar": 27,
        "endLine": 40,
        "endChar": 30
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa948f3b_81544069",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "I believe it is 7.1 or at least I don\u0027t have believe it has been frozen yet.",
      "parentUuid": "17779bb0_3b85b2f2",
      "range": {
        "startLine": 40,
        "startChar": 27,
        "endLine": 40,
        "endChar": 30
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05a5b87_73d61a9e",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T12:01:25Z",
      "side": 1,
      "message": "But would we really want to backport it to libreoffice-7-1?  If it is not an urgent regression fix, then don\u0027t do that.",
      "parentUuid": "fa948f3b_81544069",
      "range": {
        "startLine": 40,
        "startChar": 27,
        "endLine": 40,
        "endChar": 30
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59b3e740_78078cf9",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T22:52:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b05a5b87_73d61a9e",
      "range": {
        "startLine": 40,
        "startChar": 27,
        "endLine": 40,
        "endChar": 30
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb673a59_9a1a71d4",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "we have css.beans.StringPair, which would look like a good choice here? (avoiding the need to care about two sequences of different length)",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be54a48e_ff4abc32",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "First, this works with an IDL header, which is off limits of my abilities.\n -\u003e So I\u0027m gonna need the line and the corresponding type in c++.\n\nHowever, it seems deprecated:\nhttps://wiki.openoffice.org/wiki/Uno/API_Deprecation",
      "parentUuid": "fb673a59_9a1a71d4",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "260dbd9d_61d5d80b",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T12:01:25Z",
      "side": 1,
      "message": "\u003e First, this works with an IDL header, which is off limits of my abilities.\n\u003e  -\u003e So I\u0027m gonna need the line and the corresponding type in c++.\n\nI don\u0027t understand what you mean here?\n\nHere in the .idl file you would add\n\n  #include \u003ccom/sun/star/beans/StringPair\u003e\n\nand change the above to\n\n  void setCustomEntityNames( [in] sequence\u003ccom::sun::star::beans::StringPair\u003e replacements );\n\n\u003e However, it seems deprecated:\n\u003e https://wiki.openoffice.org/wiki/Uno/API_Deprecation\n\nWhat exactly seems deprecated?",
      "parentUuid": "be54a48e_ff4abc32",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f790446_54944568",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T22:52:37Z",
      "side": 1,
      "message": "It does not apply to my case, uses two strings, but I need a string and an unicode32 codepoint.\nGetting it via iteratecodepoint from OUString would actually be less efficient than using a sal_uInt32. This function has only to be called once before writing the file, so it does not have grate impact. And even so, it would have to prepare the data. \n\nThe deprecated stuff:\nList of problematic API that should be considered for deprecation/change/removal:\n -   css::document::XDocumentInfo User:mst\n -   css::beans::StringPair - there\u0027s the generic beans::Pair\u003c\u003e type now User:thorsten\n -   css::util::Time and DateTime lack a timezone field. Just adding that would be less work than defining new structs. User:mst",
      "parentUuid": "260dbd9d_61d5d80b",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5006326d_b2434f71",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-19T14:24:37Z",
      "side": 1,
      "message": "\u003e It does not apply to my case, uses two strings, but I need a string and an unicode32 codepoint.\n\nAh sorry, hadn\u0027t even noticed you wanted to encode the replacement text as a single Unicode scalar value via UNO `unsigned long`.  There\u0027s three thoughts on that:\n\n1  We have the generic css.beans.Pair for that.\n\n2  The unsigned UNO integer types are considered a historically bad idea (e.g., some language bindings like Java don\u0027t support them natively).  And to encode Unicode scalar values (fitting in the range 0-0x10FFFF), signed UNO `long` would work fine, so I would suggest changing that (if it were not for the next thought anyway).\n\n3  My understanding of XML is that the definitions of such entities (EntityValue) can contain arbitrary text, not just a single Unicode scalar value.  Wouldn\u0027t it make more sense to encode those replacements as UNO `string`?\n\n\u003e The deprecated stuff:\n\u003e List of problematic API that should be considered for deprecation/change/removal:\n\u003e  -   css::document::XDocumentInfo User:mst\n\u003e  -   css::beans::StringPair - there\u0027s the generic beans::Pair\u003c\u003e type now User:thorsten\n\u003e  -   css::util::Time and DateTime lack a timezone field. Just adding that would be less work than defining new structs. User:mst\n\nI see.  And yeah, probably better to chose Pair\u003cstring,string\u003e over StringPair.",
      "parentUuid": "5f790446_54944568",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcb67634_c9cc166c",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-19T20:28:01Z",
      "side": 1,
      "message": "OK, how do I use the Pair?\nIn this patch I try to use it in the parser:\nhttps://gerrit.libreoffice.org/c/core/+/108028\nBut it won\u0027t recognize the entities any more.\nThe files with the declarations are:\nstarmath/source/xparsmlbase.hxx\nstarmath/source/xparsmlbase.cxx",
      "parentUuid": "5006326d_b2434f71",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb05b1f0_96c14453",
        "filename": "offapi/com/sun/star/xml/sax/XWriter.idl",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-20T18:46:18Z",
      "side": 1,
      "message": "\u003e OK, how do I use the Pair?\n\nYou\u0027d\n\n  #include \u003ccom/sun/star/beans/Pair.idl\u003e\n\nand change the above method to something like\n\n  void setCustomEntityNames( [in] sequence\u003ccom::sun::star::beans::Pair\u003cstring, unsigned long\u003e entities );\n\n(modulo the discussion about the appropriate type for the Pair\u0027s second component).",
      "parentUuid": "bcb67634_c9cc166c",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14028e78_071d578c",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "here and elsewhere: do not do random reformatting; it just needlessly encumers reviewing",
      "range": {
        "startLine": 286,
        "startChar": 24,
        "endLine": 286,
        "endChar": 35
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f9ba1f_2892f343",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "Sory for that. It seem clang overdid.\nI\u0027ll revert it back as much as I can.",
      "parentUuid": "14028e78_071d578c",
      "range": {
        "startLine": 286,
        "startChar": 24,
        "endLine": 286,
        "endChar": 35
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b0057e7_92bd294c",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T22:52:37Z",
      "side": 1,
      "message": "It\u0027s almost reseted.",
      "parentUuid": "b6f9ba1f_2892f343",
      "range": {
        "startLine": 286,
        "startChar": 24,
        "endLine": 286,
        "endChar": 35
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "835a7811_6c77a0ce",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-19T14:24:37Z",
      "side": 1,
      "message": "thanks",
      "parentUuid": "1b0057e7_92bd294c",
      "range": {
        "startLine": 286,
        "startChar": 24,
        "endLine": 286,
        "endChar": 35
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e43427dc_25e4baac",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "please define variables only where they are needed, not upfront",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3613aac8_165c1e86",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "I\u0027m moving them.\nHowever, I have a question about c++ compilers.\nDeclaring the variable inside a loop doesn\u0027t reinitialize all the process in each iteration? (I mean, look somewhere to store it, reserve memory, assign default value, and finally get rid of if)",
      "parentUuid": "e43427dc_25e4baac",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46dd87a6_81911557",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 1000083
      },
      "writtenOn": "2020-12-18T20:30:17Z",
      "side": 1,
      "message": "Compilers are so smart these days, we care more about nice clean easy to read to code, which means declaring variables close to where they are used.\n\nEspecially for simple types like bool/int/char, it doesn\u0027t matter where you declare it, the compiler will reduce it to an optimal form.",
      "parentUuid": "3613aac8_165c1e86",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "759441cf_ade82ec4",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 290,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T22:52:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "46dd87a6_81911557",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80638ef5_a4b3361c",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "this branch is always a lone 2nd surrogate now, irrespective of nSurrogate\u0027s value, right?",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7ec6888_55cf61f7",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "Yes.\nI guess should use OSL_FAIL. The ensure was carried away from old code.",
      "parentUuid": "80638ef5_a4b3361c",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2213e4c_9a0bcb05",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T12:01:25Z",
      "side": 1,
      "message": "OSL_FAIL suffers from the same unclear semantics as OSL_ENSURE.  If this is guaranteed to not happen (as the passed in string data is for some reason guaranteed to be valid UTF-16, not just a sequence of UTF-16 code units), use assert.",
      "parentUuid": "b7ec6888_55cf61f7",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "651706f5_0cfd0520",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T22:52:37Z",
      "side": 1,
      "message": "How can I assert() conservating the error message?",
      "parentUuid": "b2213e4c_9a0bcb05",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6fe537_df879750",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-19T14:24:37Z",
      "side": 1,
      "message": "a common idiom is\n\n  assert(p \u0026\u0026 \"...\")",
      "parentUuid": "651706f5_0cfd0520",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fa162d8_cc01e08e",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 433,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-19T20:28:01Z",
      "side": 1,
      "message": "OK, thanks.",
      "parentUuid": "eb6fe537_df879750",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67af419e_e7ce8f70",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 441,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "for one, what we want to ensure is `i \u003c\u003d nStrLen` (and even better is to ensure `i \u003c nStrLen` prior to ++i, which avoids potential overflow)\n\nfor another, if the ensured condition doesn\u0027t hold, we\u0027re illegally reading past pStr\u0027s end, so this is obviously something either to assert or to handle somehow (OSL_ESNURE is legacy crap with unclear semantics, see tdf#43157 for details)",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d84f51_d526d029",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 441,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "The idea was to avoid overflow but ended up writing the opposite.\nShould OSL_ENSURE be replaced by assert, or what should be done in that point?",
      "parentUuid": "67af419e_e7ce8f70",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d10c3b01_53fc4cf8",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 441,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T12:01:25Z",
      "side": 1,
      "message": "Same as above: Depends on what the function\u0027s precondition is for the passed-in sal_Unicode sequence.",
      "parentUuid": "77d84f51_d526d029",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f0257a2_b4e45bd3",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 441,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-19T20:28:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d10c3b01_53fc4cf8",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5e2b4eb_103d5918",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 496,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "we no longer need to track nSurrogate across loop iterations, right?",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc9ba2e4_26c6195f",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 496,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "Line 455 of this version. If there was no surrogate, it has to be 0.",
      "parentUuid": "a5e2b4eb_103d5918",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d462b0a7_e318efe0",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 496,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T12:01:25Z",
      "side": 1,
      "message": "But as we now assemble the full nSurrogate in the loop iteration where we see the high surrogate (and which also eats the following low surrogate), we no longer have a case where we need to pass a high surrogate (via nSurrogate) from one loop iteration to the next (where it was then combined with a following low surrogate).",
      "parentUuid": "fc9ba2e4_26c6195f",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f964d46_c64167ad",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 496,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T22:52:37Z",
      "side": 1,
      "message": "I explain how I implemented it:\nnSurrogate is declared as 0.\nIf there is a surrogated pair it gets a value\nThen if nSurrogate has non null value, data is written as UTF32 and nSurrogate reseted a 0, so in next loop it won\u0027t be a false positive.",
      "parentUuid": "d462b0a7_e318efe0",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b3175eb_2e3ef244",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 496,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-19T14:24:37Z",
      "side": 1,
      "message": "but then you don\u0027t need nSurrogate to be carried over to the next loop iteration/it can be defined inside the loop body",
      "parentUuid": "4f964d46_c64167ad",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f4af3f_f6075ac7",
        "filename": "sax/source/expatwrap/saxwriter.cxx",
        "patchSetId": 5
      },
      "lineNbr": 496,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-19T20:28:01Z",
      "side": 1,
      "message": "Sorry, I wasn\u0027t understanding. Now i get it.",
      "parentUuid": "2b3175eb_2e3ef244",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45f9ac53_22d05649",
        "filename": "starmath/source/xparsmlbase.hxx",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "better to use constexpr variables than to introduce new macros",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad1a4185_c0878c8c",
        "filename": "starmath/source/xparsmlbase.hxx",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45f9ac53_22d05649",
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07d8ac29_abf54329",
        "filename": "starmath/source/xparsmlbase.hxx",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2020-12-18T07:30:17Z",
      "side": 1,
      "message": "These",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 8
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f01809_4187fa56",
        "filename": "starmath/source/xparsmlbase.hxx",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1002652
      },
      "writtenOn": "2020-12-18T11:42:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07d8ac29_abf54329",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 8
      },
      "revId": "9526e2aaca00c53403c820fd4300f9b5074cd3b4",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}