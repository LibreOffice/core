{
  "comments": [
    {
      "key": {
        "uuid": "7f7f9b97_21ddf06f",
        "filename": "sw/source/ui/dbui/mmresultdialogs.cxx",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2019-10-18T18:31:46Z",
      "side": 1,
      "message": "Maybe this would have to be guarded by \u0027pOrigView-\u003eGetWrtShell().StartAction()\u0027 and \u0027EndAction()\u0027 as well?",
      "range": {
        "startLine": 530,
        "startChar": 4,
        "endLine": 530,
        "endChar": 80
      },
      "revId": "2933fba283c1a9c175f05b07e35b9bc3fb169db3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_212890e0",
        "filename": "sw/source/ui/dbui/mmresultdialogs.cxx",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-10-18T21:49:31Z",
      "side": 1,
      "message": "Style loading was in the StartAction() area in your previous patch. This is not a guard, like a mutex to prevent data races, but generally prevents updates and depending layout actions for the GUI.\n\nAnd now I just realized that this actually locks the source document, presumably for the PastePages, which - as I just read in the code - eventually modifies the source document (that\u0027s why it needs the WrtShell) and does revert these changes using Undo(). PastePages also uses StartAction() for a part of it. No idea if all this MovePage would otherwise move the cursor and the View.\n\nAnd why use StartAction and EndAction per document and not for the whole process? ok maybe some part of the GUI needs redrawing at some point, including a part of the source document currently displayed.\n\nI think loading the styles won\u0027t generate changes in the source document and neither should all these Replace* calls. Still it can\u0027t hurt.\n\nAnd I suggest to rename the arguments to SourceView and TargetView.\n\nStill there is one question: will this really load the correct styles, if a user did modifications in the merged view (or even if not)?",
      "parentUuid": "7f7f9b97_21ddf06f",
      "range": {
        "startLine": 530,
        "startChar": 4,
        "endLine": 530,
        "endChar": 80
      },
      "revId": "2933fba283c1a9c175f05b07e35b9bc3fb169db3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_01f9d44b",
        "filename": "sw/source/ui/dbui/mmresultdialogs.cxx",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2019-10-18T23:32:56Z",
      "side": 1,
      "message": "Thanks for the explanation.\n\n\u003e And I suggest to rename the arguments to SourceView and TargetView.\n\nSounds reasonable, will do in the next patch set.\n\n\u003e Still there is one question: will this really load the correct styles, if a user did modifications in the merged view (or even if not)?\n\nCan users actually do modifications in the merged view? And if so, do you know how to do so via the UI?\nMy understanding so far was that a merge to a single doc/shell is done (by the call to \u0027SwDBManager::PerformMailMerge(pView)\u0027 at the beginning of \u0027SendDocumentsHdl_Impl\u0027 and \u0027SaveOutputHdl_Impl\u0027 respectively) and the targetView is then used unchanged, without even showing the merge result to the user. If that assumption doesn\u0027t hold, that might actually be problematic.\n\nI did do some testing, in particular more extensively with page styles and that seemed fine so far, but I\u0027ll do some more testing with other styles as well.",
      "parentUuid": "7f7f9b97_212890e0",
      "range": {
        "startLine": 530,
        "startChar": 4,
        "endLine": 530,
        "endChar": 80
      },
      "revId": "2933fba283c1a9c175f05b07e35b9bc3fb169db3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_c198bc1c",
        "filename": "sw/source/ui/dbui/mmresultdialogs.cxx",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2019-10-18T23:38:42Z",
      "side": 1,
      "message": "\u003e I did do some testing, in particular more extensively with page styles and that seemed fine so far, but I\u0027ll do some more testing with other styles as well.\n\nTo clarify: Tests so far were with unmodified target view.",
      "parentUuid": "7f7f9b97_01f9d44b",
      "range": {
        "startLine": 530,
        "startChar": 4,
        "endLine": 530,
        "endChar": 80
      },
      "revId": "2933fba283c1a9c175f05b07e35b9bc3fb169db3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_415b4c53",
        "filename": "sw/source/ui/dbui/mmresultdialogs.cxx",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-10-19T01:32:48Z",
      "side": 1,
      "message": "\u003e \u003e Still there is one question: will this really load the correct\n \u003e styles, if a user did modifications in the merged view (or even if\n \u003e not)?\n \u003e \n \u003e Can users actually do modifications in the merged view? And if so,\n \u003e do you know how to do so via the UI?\n\nI thing it is / was possible. AFAIK the OSBA changes, which LHM sponsored, might have broken or removed that feature. Just found tdf#98986.\n\n \u003e My understanding so far was that a merge to a single doc/shell is\n \u003e done (by the call to \u0027SwDBManager::PerformMailMerge(pView)\u0027 at the\n \u003e beginning of \u0027SendDocumentsHdl_Impl\u0027 and \u0027SaveOutputHdl_Impl\u0027\n \u003e respectively) and the targetView is then used unchanged, without\n \u003e even showing the merge result to the user. If that assumption\n \u003e doesn\u0027t hold, that might actually be problematic.\n\nI don\u0027t know if your description is different to the bug reported in tdf#98986. Maybe there is a better description in the closed dup tdf#112686. \n\n \u003e I did do some testing, in particular more extensively with page\n \u003e styles and that seemed fine so far, but I\u0027ll do some more testing\n \u003e with other styles as well.\n\nI just wanted to mention that a lot of stuff in MM is tricky, with definitely too many side effects in a much too huge function (me remembers Juergens refactoring attempt, which - in the end - sadly didn\u0027t help readability). Putting everything in a try-catch-block in some of the latest changes, didn\u0027t help me getting more convinced of the code base state. After I saw PastePages, I remembered all the corner cases I ran into / I broke, when implementing AppendDoc...",
      "parentUuid": "7f7f9b97_01f9d44b",
      "range": {
        "startLine": 530,
        "startChar": 4,
        "endLine": 530,
        "endChar": 80
      },
      "revId": "2933fba283c1a9c175f05b07e35b9bc3fb169db3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f7f9b97_58aa5dd2",
        "filename": "sw/source/ui/dbui/mmresultdialogs.cxx",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000789
      },
      "writtenOn": "2019-10-21T18:22:16Z",
      "side": 1,
      "message": "\u003e I thing it is / was possible. AFAIK the OSBA changes, which LHM sponsored, might have broken or removed that feature. Just found tdf#98986.\n\nYes, that basically seems to be the case. I quickly checked with some 5.0 version from the bibisect-releases repo. Editing the merged document works there, though that approach there is far from ideal as well (e.g. you can just delete the pages for single recipients, which will cause LO to crash later...).\n\n\u003e I just wanted to mention that a lot of stuff in MM is tricky, with definitely too many side effects in a much too huge function [...]\n\nI\u0027ll investigate further. One thought I had over the weekend was to check whether there are already existing unit tests (or write new ones) that define and check the expected behaviour for the different style types and then also run them (manually or semi-automatically) against the files created by using the dialogs, too.\n\nIn general, at a quick look, I\u0027m not really thrilled about the current approach the dialogs take (merging to a single file and then splitting of things again, which is quite slow) and think about analysing this a bit more, but all these dialog-related things are more of a side-project for me, so it\u0027ll probably take a while until I come up with other ideas (if at all). Any input welcome.",
      "parentUuid": "7f7f9b97_415b4c53",
      "range": {
        "startLine": 530,
        "startChar": 4,
        "endLine": 530,
        "endChar": 80
      },
      "revId": "2933fba283c1a9c175f05b07e35b9bc3fb169db3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}