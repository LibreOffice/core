{
  "comments": [
    {
      "key": {
        "uuid": "ba5da102_e7fdcc6f",
        "filename": "binaryurp/source/unmarshal.cxx",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2016-09-14T15:41:13Z",
      "side": 1,
      "message": "why that change? this is apparently a thin wrapper around rtl_allocateMemory, which---shrug---happens to use sal_Size",
      "revId": "5a7f08a6cfca24dc26abfe4a8a544eb4bd4caf04",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba5da102_87efb0af",
        "filename": "binaryurp/source/writer.cxx",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2016-09-14T15:55:41Z",
      "side": 1,
      "message": "the\n\n  SAL_MAX_INT32 \u003c\u003d SAL_MAX_SIZE\n\nno longer makes sense now\n\n(and the use of sal_Size for k was originally motivated by the use of rtl_copyMemory, which was replaced by memcpy in a naive way with 36a2db3722b79ed3df075d7f3fa77fb761bcf5a4; given the limiting factor is the sal_Int32-based \n\n  bridge_-\u003egetConnection()-\u003ewrite(s);\n\nit probably makes sense to change k to sal_Int32 instead)",
      "range": {
        "startLine": 414,
        "startChar": 49,
        "endLine": 414,
        "endChar": 78
      },
      "revId": "5a7f08a6cfca24dc26abfe4a8a544eb4bd4caf04",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba5da102_c708c894",
        "filename": "vcl/source/window/mouse.cxx",
        "patchSetId": 2
      },
      "lineNbr": 751,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2016-09-14T15:41:13Z",
      "side": 1,
      "message": "sal_Size is known to map to either sal_uInt32 or sal_uInt64, os it\u0027s known to be an acceptable UNO type for makeAny (even though different ones on differnt platforms, for better or worse); there\u0027s no such knowledge for std::size_t; make up your mind what UNO type should be used here",
      "revId": "5a7f08a6cfca24dc26abfe4a8a544eb4bd4caf04",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}