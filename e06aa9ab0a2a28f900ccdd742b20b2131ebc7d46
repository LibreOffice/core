{
  "comments": [
    {
      "key": {
        "uuid": "AAAAVn///bQ\u003d",
        "filename": "apache-commons/ExternalProject_apache_commons_codec.mk",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2013-02-21T06:40:38Z",
      "side": 1,
      "message": "I once thought about providing function gb_ExternalProject_run (or some similar name), which would cd to the workdir and then invoke the passed command (and then maybe even touch the target ($@)). At the end I rejected the idea, because it did not seem like it added enough functionality to justify an additional function. But this logging of the command output seems to fit nicely into that and it adds enough boilerplate to the makefiles that it looks like a good idea to hide it in a function.",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn///ak\u003d",
        "filename": "apache-commons/ExternalProject_apache_commons_codec.mk",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2013-02-21T07:11:36Z",
      "side": 1,
      "message": "in most places we cd to EXTERNAL_WORKDIR\nbut in other we use a combinaison of UnpackedTarball_get_dir and some extra stuff...\nI\u0027ll have to make sure that EXTERNAL_DIR can always be used\nand has always to \u0027right\u0027 value.. then yes we could abstract the cd and the touch...",
      "parentUuid": "AAAAVn///bQ\u003d",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn///bI\u003d",
        "filename": "apache-commons/ExternalProject_apache_commons_codec.mk",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2013-02-21T06:40:38Z",
      "side": 1,
      "message": "I really do not like this. The log file passed to gb_Helper_print_on_error feels like it is actually a part of the command and it requires some thinking to realize it is not. It would be better to make it the first argument (if my other suggestion to hide the whole logging into a function is rejected).",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn///b4\u003d",
        "filename": "configure.ac",
        "patchSetId": 2
      },
      "lineNbr": 1041,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2013-02-21T06:40:38Z",
      "side": 1,
      "message": "typo .-)",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn///bo\u003d",
        "filename": "configure.ac",
        "patchSetId": 2
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2013-02-21T06:40:38Z",
      "side": 1,
      "message": "Do we really need this configure option? I argue that the captured output should be printed in case of error in silent build and always in verbose build. For example, packagers like verbose builds, because it is easier to see what went wrong when there is a good build to compare to.",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn///ao\u003d",
        "filename": "configure.ac",
        "patchSetId": 2
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2013-02-21T07:11:36Z",
      "side": 1,
      "message": "well there is the case of the lo dev that want \u0027verbose\u0027 to debug lo stuff... and not necessarily be flooded with extra stuff just because he want to see the command line of our own pieces...\nBeside I did not want to force it upon people all the sudden.\nso I made it a non-default option first... but I secretly hope to make that the default :-)",
      "parentUuid": "AAAAVn///bo\u003d",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAVn///ZU\u003d",
        "filename": "configure.ac",
        "patchSetId": 2
      },
      "lineNbr": 1044,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2013-02-21T08:49:56Z",
      "side": 1,
      "message": "Clearly being interested in verbose external builds is a special case (how many of us need it and how often), so it should be ok to treat it like being special and simply default to silent (and most if not all people will be happy to have it that way).\n\nAnd I agree even with binding it to silent/verbose build instead of having an option. Gbuild is already pretty chatty as it is, so if somebody wants to debug the build this way, it already requires some special handling like building only in a module or redirecting the output and wading through it.",
      "parentUuid": "AAAAVn///ao\u003d",
      "revId": "e06aa9ab0a2a28f900ccdd742b20b2131ebc7d46",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}