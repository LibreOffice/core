{
  "comments": [
    {
      "key": {
        "uuid": "bf659307_a1f3329e",
        "filename": "chart2/source/view/main/VLegend.cxx",
        "patchSetId": 4
      },
      "lineNbr": 796,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-15T06:18:26Z",
      "side": 1,
      "message": "I like less verbose\n\n    const css::uno::Sequence aPivotFieldEntries \u003d xPivotTableDataProvider-\u003egetColumnFields();\n\nbut of course, it\u0027s just a personal preference :-)",
      "range": {
        "startLine": 796,
        "startChar": 4,
        "endLine": 796,
        "endChar": 129
      },
      "revId": "056dff72c6d00ceb03521ec23d9f1fe55dba1e8a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_817ceeeb",
        "filename": "chart2/source/view/main/VLegend.cxx",
        "patchSetId": 4
      },
      "lineNbr": 796,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-08-15T07:22:02Z",
      "side": 1,
      "message": "\"const auto\" ftw?",
      "parentUuid": "bf659307_a1f3329e",
      "range": {
        "startLine": 796,
        "startChar": 4,
        "endLine": 796,
        "endChar": 129
      },
      "revId": "056dff72c6d00ceb03521ec23d9f1fe55dba1e8a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_4186d6dd",
        "filename": "chart2/source/view/main/VLegend.cxx",
        "patchSetId": 4
      },
      "lineNbr": 796,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-08-15T07:25:13Z",
      "side": 1,
      "message": "Well - in *this* case, it is nice to have Sequence explicit, because it makes it obvious that this is the structure with copy-on-write semantics; and if the contained type is also explicitly referenced in the line below in the range-based for loop variable, the full type is obvious from the code ... but - again, my own preference. No objections to any style.",
      "parentUuid": "bf659307_817ceeeb",
      "range": {
        "startLine": 796,
        "startChar": 4,
        "endLine": 796,
        "endChar": 129
      },
      "revId": "056dff72c6d00ceb03521ec23d9f1fe55dba1e8a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_0168de1e",
        "filename": "chart2/source/view/main/VLegend.cxx",
        "patchSetId": 4
      },
      "lineNbr": 796,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-08-15T07:34:45Z",
      "side": 1,
      "message": "according to \u003chttps://en.cppreference.com/w/cpp/compiler_support\u003e, MSVC only supports class template argument deduction since \"19.14\" (aka \"VS 2017 15.7\"); not sure that matches our baseline of \"Visual Studio 2017\" (README.md)?",
      "parentUuid": "bf659307_a1f3329e",
      "range": {
        "startLine": 796,
        "startChar": 4,
        "endLine": 796,
        "endChar": 129
      },
      "revId": "056dff72c6d00ceb03521ec23d9f1fe55dba1e8a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf659307_e1da8ae7",
        "filename": "chart2/source/view/main/VLegend.cxx",
        "patchSetId": 4
      },
      "lineNbr": 796,
      "author": {
        "id": 1000045
      },
      "writtenOn": "2019-08-15T08:01:23Z",
      "side": 1,
      "message": "ah no, all is well: \u003chttps://gerrit.libreoffice.org/77488/\u003e \"Fix MSVC version in README.md\"; sorry for the noise",
      "parentUuid": "bf659307_0168de1e",
      "range": {
        "startLine": 796,
        "startChar": 4,
        "endLine": 796,
        "endChar": 129
      },
      "revId": "056dff72c6d00ceb03521ec23d9f1fe55dba1e8a",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}