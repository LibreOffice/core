{
  "comments": [
    {
      "key": {
        "uuid": "3fa0c359_32700d73",
        "filename": "vcl/source/gdi/sallayout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-04-28T14:36:42Z",
      "side": 1,
      "message": "this is redundant",
      "range": {
        "startLine": 766,
        "startChar": 7,
        "endLine": 766,
        "endChar": 13
      },
      "revId": "65cf679c1a953a1e851020379a30caedd2a758d3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_b2097dde",
        "filename": "vcl/source/gdi/sallayout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-04-28T14:38:11Z",
      "side": 1,
      "message": "Really? static implies inline?",
      "parentUuid": "3fa0c359_32700d73",
      "range": {
        "startLine": 766,
        "startChar": 7,
        "endLine": 766,
        "endChar": 13
      },
      "revId": "65cf679c1a953a1e851020379a30caedd2a758d3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_7213f50e",
        "filename": "vcl/source/gdi/sallayout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-04-28T14:41:04Z",
      "side": 1,
      "message": "Thinking about it, it\u0027s the other way around, so actually static is redundant.",
      "parentUuid": "3fa0c359_b2097dde",
      "range": {
        "startLine": 766,
        "startChar": 7,
        "endLine": 766,
        "endChar": 13
      },
      "revId": "65cf679c1a953a1e851020379a30caedd2a758d3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_32f56dcc",
        "filename": "vcl/source/gdi/sallayout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-04-28T14:42:03Z",
      "side": 1,
      "message": "in c++11 (iirc, starting there; *possibly* it was also that way before) inline only means that the code might be included into several translation units, breaking ODR. It has nothing to do with compiler decision if to inline the code in the place of invocation now. And it is thus definitely unneeded now in cxx files, only in hxx.",
      "parentUuid": "3fa0c359_b2097dde",
      "range": {
        "startLine": 766,
        "startChar": 7,
        "endLine": 766,
        "endChar": 13
      },
      "revId": "65cf679c1a953a1e851020379a30caedd2a758d3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_922d6148",
        "filename": "vcl/source/gdi/sallayout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2019-04-28T14:43:36Z",
      "side": 1,
      "message": "And static (meaning no external visibility) is not redundant here, unless you use unnamed namespace: omitting it here would make symbols for the function",
      "parentUuid": "3fa0c359_7213f50e",
      "range": {
        "startLine": 766,
        "startChar": 7,
        "endLine": 766,
        "endChar": 13
      },
      "revId": "65cf679c1a953a1e851020379a30caedd2a758d3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa0c359_1221514e",
        "filename": "vcl/source/gdi/sallayout.cxx",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 1000562
      },
      "writtenOn": "2019-04-28T14:47:16Z",
      "side": 1,
      "message": "Well logically inline implies static. I know that inline is just a suggestion nowadays. You can\u0027t have an external symbol, which is inline - that contradicts.\n\nAnyway - clang also directly complained, so I fixed that ;-)",
      "parentUuid": "3fa0c359_922d6148",
      "range": {
        "startLine": 766,
        "startChar": 7,
        "endLine": 766,
        "endChar": 13
      },
      "revId": "65cf679c1a953a1e851020379a30caedd2a758d3",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": false
    }
  ]
}