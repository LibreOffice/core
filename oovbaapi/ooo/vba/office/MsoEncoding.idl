/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */

module ooo { module vba { module office {
    constants MsoEncoding {
        const long msoEncodingArabic = 1256;
        const long msoEncodingArabicASMO = 708;
        const long msoEncodingArabicAutoDetect = 51256;
        const long msoEncodingArabicTransparentASMO = 720;
        const long msoEncodingAutoDetect = 50001;
        const long msoEncodingBaltic = 1257;
        const long msoEncodingCentralEuropean = 1250;
        const long msoEncodingCyrillic = 1251;
        const long msoEncodingCyrillicAutoDetect = 51251;
        const long msoEncodingEBCDICArabic = 20420;
        const long msoEncodingEBCDICDenmarkNorway = 20277;
        const long msoEncodingEBCDICFinlandSweden = 20278;
        const long msoEncodingEBCDICFrance = 20297;
        const long msoEncodingEBCDICGermany = 20273;
        const long msoEncodingEBCDICGreek = 20423;
        const long msoEncodingEBCDICGreekModern = 875;
        const long msoEncodingEBCDICHebrew = 20424;
        const long msoEncodingEBCDICIcelandic = 20871;
        const long msoEncodingEBCDICInternational = 500;
        const long msoEncodingEBCDICItaly = 20280;
        const long msoEncodingEBCDICJapaneseKatakanaExtended = 20290;
        const long msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese = 50930;
        const long msoEncodingEBCDICJapaneseLatinExtendedAndJapanese = 50939;
        const long msoEncodingEBCDICKoreanExtended = 20833;
        const long msoEncodingEBCDICKoreanExtendedAndKorean = 50933;
        const long msoEncodingEBCDICLatinAmericaSpain = 20284;
        const long msoEncodingEBCDICMultilingualROECELatin2 = 870;
        const long msoEncodingEBCDICRussian = 20880;
        const long msoEncodingEBCDICSerbianBulgarian = 21025;
        const long msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese = 50935;
        const long msoEncodingEBCDICThai = 20838;
        const long msoEncodingEBCDICTurkish = 20905;
        const long msoEncodingEBCDICTurkishLatin5 = 1026;
        const long msoEncodingEBCDICUnitedKingdom = 20285;
        const long msoEncodingEBCDICUSCanada = 37;
        const long msoEncodingEBCDICUSCanadaAndJapanese = 50931;
        const long msoEncodingEBCDICUSCanadaAndTraditionalChinese = 50937;
        const long msoEncodingEUCChineseSimplifiedChinese = 51936;
        const long msoEncodingEUCJapanese = 51932;
        const long msoEncodingEUCKorean = 51949;
        const long msoEncodingEUCTaiwaneseTraditionalChinese = 51950;
        const long msoEncodingEuropa3 = 29001;
        const long msoEncodingExtAlphaLowercase = 21027;
        const long msoEncodingGreek = 1253;
        const long msoEncodingGreekAutoDetect = 51253;
        const long msoEncodingHebrew = 1255;
        const long msoEncodingHZGBSimplifiedChinese = 52936;
        const long msoEncodingIA5German = 20106;
        const long msoEncodingIA5IRV = 20105;
        const long msoEncodingIA5Norwegian = 20108;
        const long msoEncodingIA5Swedish = 20107;
        const long msoEncodingISCIIAssamese = 57006;
        const long msoEncodingISCIIBengali = 57003;
        const long msoEncodingISCIIDevanagari = 57002;
        const long msoEncodingISCIIGujarati = 57010;
        const long msoEncodingISCIIKannada = 57008;
        const long msoEncodingISCIIMalayalam = 57009;
        const long msoEncodingISCIIOriya = 57007;
        const long msoEncodingISCIIPunjabi = 57011;
        const long msoEncodingISCIITamil = 57004;
        const long msoEncodingISCIITelugu = 57005;
        const long msoEncodingISO2022CNSimplifiedChinese = 50229;
        const long msoEncodingISO2022CNTraditionalChinese = 50227;
        const long msoEncodingISO2022JPJISX02011989 = 50222;
        const long msoEncodingISO2022JPJISX02021984 = 50221;
        const long msoEncodingISO2022JPNoHalfwidthKatakana = 50220;
        const long msoEncodingISO2022KR = 50225;
        const long msoEncodingISO6937NonSpacingAccent = 20269;
        const long msoEncodingISO885915Latin9 = 28605;
        const long msoEncodingISO88591Latin1 = 28591;
        const long msoEncodingISO88592CentralEurope = 28592;
        const long msoEncodingISO88593Latin3 = 28593;
        const long msoEncodingISO88594Baltic = 28594;
        const long msoEncodingISO88595Cyrillic = 28595;
        const long msoEncodingISO88596Arabic = 28596;
        const long msoEncodingISO88597Greek = 28597;
        const long msoEncodingISO88598Hebrew = 28598;
        const long msoEncodingISO88598HebrewLogical = 38598;
        const long msoEncodingISO88599Turkish = 28599;
        const long msoEncodingJapaneseAutoDetect = 50932;
        const long msoEncodingJapaneseShiftJIS = 932;
        const long msoEncodingKOI8R = 20866;
        const long msoEncodingKOI8U = 21866;
        const long msoEncodingKorean = 949;
        const long msoEncodingKoreanAutoDetect = 50949;
        const long msoEncodingKoreanJohab = 1361;
        const long msoEncodingMacArabic = 10004;
        const long msoEncodingMacCroatia = 10082;
        const long msoEncodingMacCyrillic = 10007;
        const long msoEncodingMacGreek1 = 10006;
        const long msoEncodingMacHebrew = 10005;
        const long msoEncodingMacIcelandic = 10079;
        const long msoEncodingMacJapanese = 10001;
        const long msoEncodingMacKorean = 10003;
        const long msoEncodingMacLatin2 = 10029;
        const long msoEncodingMacRoman = 10000;
        const long msoEncodingMacRomania = 10010;
        const long msoEncodingMacSimplifiedChineseGB2312 = 10008;
        const long msoEncodingMacTraditionalChineseBig5 = 10002;
        const long msoEncodingMacTurkish = 10081;
        const long msoEncodingMacUkraine = 10017;
        const long msoEncodingOEMArabic = 864;
        const long msoEncodingOEMBaltic = 775;
        const long msoEncodingOEMCanadianFrench = 863;
        const long msoEncodingOEMCyrillic = 855;
        const long msoEncodingOEMCyrillicII = 866;
        const long msoEncodingOEMGreek437G = 737;
        const long msoEncodingOEMHebrew = 862;
        const long msoEncodingOEMIcelandic = 861;
        const long msoEncodingOEMModernGreek = 869;
        const long msoEncodingOEMMultilingualLatinI = 850;
        const long msoEncodingOEMMultilingualLatinII = 852;
        const long msoEncodingOEMNordic = 865;
        const long msoEncodingOEMPortuguese = 860;
        const long msoEncodingOEMTurkish = 857;
        const long msoEncodingOEMUnitedStates = 437;
        const long msoEncodingSimplifiedChineseAutoDetect = 50936;
        const long msoEncodingSimplifiedChineseGB18030 = 54936;
        const long msoEncodingSimplifiedChineseGBK = 936;
        const long msoEncodingT61 = 20261;
        const long msoEncodingTaiwanCNS = 20000;
        const long msoEncodingTaiwanEten = 20002;
        const long msoEncodingTaiwanIBM5550 = 20003;
        const long msoEncodingTaiwanTCA = 20001;
        const long msoEncodingTaiwanTeleText = 20004;
        const long msoEncodingTaiwanWang = 20005;
        const long msoEncodingThai = 874;
        const long msoEncodingTraditionalChineseAutoDetect = 50950;
        const long msoEncodingTraditionalChineseBig5 = 950;
        const long msoEncodingTurkish = 1254;
        const long msoEncodingUnicodeBigEndian = 1201;
        const long msoEncodingUnicodeLittleEndian = 1200;
        const long msoEncodingUSASCII = 20127;
        const long msoEncodingUTF7 = 65000;
        const long msoEncodingUTF8 = 65001;
        const long msoEncodingVietnamese = 1258;
        const long msoEncodingWestern = 1252;
    };
}; }; };

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
