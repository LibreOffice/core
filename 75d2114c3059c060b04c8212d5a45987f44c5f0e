{
  "comments": [
    {
      "key": {
        "uuid": "d3296283_30a92160",
        "filename": "vcl/backendtest/GraphicsRenderTests.cxx",
        "patchSetId": 1
      },
      "lineNbr": 1253,
      "author": {
        "id": 1000154
      },
      "writtenOn": "2021-07-09T09:42:19Z",
      "side": 1,
      "message": "aTestName",
      "range": {
        "startLine": 1253,
        "startChar": 13,
        "endLine": 1253,
        "endChar": 22
      },
      "revId": "75d2114c3059c060b04c8212d5a45987f44c5f0e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af1cd719_ad5a3d2c",
        "filename": "vcl/backendtest/outputdevice/common.cxx",
        "patchSetId": 1
      },
      "lineNbr": 569,
      "author": {
        "id": 1000154
      },
      "writtenOn": "2021-07-09T09:42:19Z",
      "side": 1,
      "message": "You want to assert explicit pixels what value they have in this case - not calculate the ellipse path (that\u0027s what the drawing algorithm must do).\n\nFor example: if I draw an ellipse - this, that, and that pixel must be black, that pixel must be a shade of grey and that pixel must always be white. And this is how you need to write the asserting checks. \n\nIf it seems that in the test you are writing what the algorithm should do, then you are thinking about the test in a wrong way.",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 569,
        "endChar": 5
      },
      "revId": "75d2114c3059c060b04c8212d5a45987f44c5f0e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "012ec34c_eac11467",
        "filename": "vcl/backendtest/outputdevice/common.cxx",
        "patchSetId": 1
      },
      "lineNbr": 569,
      "author": {
        "id": 1002896
      },
      "writtenOn": "2021-07-09T10:05:48Z",
      "side": 1,
      "message": "So, should I only assert the pixel of the boundary of the ellipse which I would achieve using a std::map in this case instead of checking the pixels layer-wise?\nAlso, I choose this approach of checking the ellipse via an elliptical traversal because most of the tests does this -  they traverse the bitmap in a regular fashion like traversing in a rectangular path and checking the pixels along the way etc. but since, it\u0027s seems like this is not what we\u0027re supposed to do what should be the best approach - just asserting the pixels of the shape drawn(the shape\u0027s boundary) or something else and should every test in the future use the same testing mechainism? Thanks!",
      "parentUuid": "af1cd719_ad5a3d2c",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 569,
        "endChar": 5
      },
      "revId": "75d2114c3059c060b04c8212d5a45987f44c5f0e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c99a1be5_d5337758",
        "filename": "vcl/backendtest/outputdevice/common.cxx",
        "patchSetId": 1
      },
      "lineNbr": 569,
      "author": {
        "id": 1000154
      },
      "writtenOn": "2021-07-09T22:36:07Z",
      "side": 1,
      "message": "For rectangle it is a simple algorithm which is mostly used to make the asserting simple, and it is exact. This elliptical path check it is not exact (line rasterization problem) and you can\u0027t use it here. \n\nThere aren\u0027t a lot of pixels and this is intentionally so that you can just assert which pixel is set and which one isn\u0027t. You can just define it in a map which pixels should be set - that\u0027s quite fine.\n\nAlso as I explained in one of the previous mails - and irregular and non-symmetric but still simple shape is better for test - so the ellipse isn\u0027t really a good candidate. It\u0027s not much better than a circle.",
      "parentUuid": "012ec34c_eac11467",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 569,
        "endChar": 5
      },
      "revId": "75d2114c3059c060b04c8212d5a45987f44c5f0e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf5e70bf_236a611b",
        "filename": "vcl/backendtest/outputdevice/common.cxx",
        "patchSetId": 1
      },
      "lineNbr": 569,
      "author": {
        "id": 1002896
      },
      "writtenOn": "2021-07-10T09:51:16Z",
      "side": 1,
      "message": "Alright, Thanks for the clarification! However, there\u0027s still one confusion though and that is - are we supposed to manually store the set(pixel of the shape\u0027s boundary) coordinates in a std::map to be checked and asserted later or should we store the pixel accordingly the color at runtime in std::map and run our checks then and there?\n\nAlso, I\u0027ll reconfigure this patch accordingly and draw a new shape, irregular and non-symmetric one then.",
      "parentUuid": "c99a1be5_d5337758",
      "range": {
        "startLine": 559,
        "startChar": 4,
        "endLine": 569,
        "endChar": 5
      },
      "revId": "75d2114c3059c060b04c8212d5a45987f44c5f0e",
      "serverId": "6622c302-437a-49ad-a91d-55ba7dcf1615",
      "unresolved": true
    }
  ]
}